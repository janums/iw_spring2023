; ModuleID = 'except.bc'
source_filename = "except.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, [10 x %struct.array_descr_dimen] }
%struct.array_descr_dimen = type { %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type { %struct.rtx_def*, i32 }
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.eh_catch_d = type { %struct.eh_catch_d*, %struct.eh_catch_d*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.duplicate_eh_regions_data = type { %union.tree_node* (%union.tree_node*, i8*)*, i8*, %struct.pointer_map_t* }
%struct.tree_label_decl = type { %struct.tree_decl_with_rtl, i32, i32 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.ttypes_filter = type { %union.tree_node*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.action_record = type { i32, i32, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@flag_exceptions = external dso_local local_unnamed_addr global i32, align 4
@doing_eh.warned = internal unnamed_addr global i1 false, align 4, !dbg !0
@.str = private unnamed_addr constant [56 x i8] c"exception handling disabled, use -fexceptions to enable\00", align 1
@type_to_runtime_map = internal global %struct.htab* null, align 8, !dbg !2364
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"except.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@x_rtl = external dso_local global %struct.rtl_data, align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"rtl eh\00", align 1
@pass_rtl_eh = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8 ()* @gate_handle_eh, i32 ()* @rest_of_handle_eh, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 119, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2226
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@flag_non_call_exceptions = external dso_local local_unnamed_addr global i32, align 4
@.str.4 = private unnamed_addr constant [8 x i8] c"nothrow\00", align 1
@pass_set_nothrow_function_flags = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8 ()* null, i32 ()* @set_nothrow_function_flags, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2254
@ptr_mode = external dso_local local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [59 x i8] c"argument of %<__builtin_eh_return_regno%> must be constant\00", align 1
@svr4_dbx_register_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@.str.6 = private unnamed_addr constant [10 x i8] c"eh_ranges\00", align 1
@pass_convert_to_eh_region_ranges = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8 ()* @gate_convert_to_eh_region_ranges, i32 ()* @convert_to_eh_region_ranges, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2256
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@dump_eh_tree.type_name = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0)], align 16, !dbg !2258
@.str.7 = private unnamed_addr constant [8 x i8] c"cleanup\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"try\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"allowed_exceptions\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"must_not_throw\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"Eh tree:\0A\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"  %*s %i %s\00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14 = private unnamed_addr constant [7 x i8] c" land:\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"{%i,\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"%i%s,\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"(del)\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"(nil),\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"%i%s}\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"(nil)}\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c" catch:\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"lab:\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c" filter :%i types:\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.24 = private unnamed_addr constant [40 x i8] c"region_array is corrupted for region %i\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"lp_array is corrupted for lp %i\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"outer block of region %i is wrong\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"negative nesting depth of region %i\00", align 1
@.str.28 = private unnamed_addr constant [25 x i8] c"region of lp %i is wrong\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"tree list ends on depth %i\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"region_array does not match region_tree\00", align 1
@.str.31 = private unnamed_addr constant [36 x i8] c"lp_array does not match region_tree\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"verify_eh_tree failed\00", align 1
@sjlj_fc_type_node = internal global %union.tree_node* null, align 8, !dbg !2366
@gt_ggc_r_gt_except_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%union.tree_node** @sjlj_fc_type_node to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @type_to_runtime_map to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P9tree_node4htab, void (i8*)* @gt_pch_n_P9tree_node4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2335
@call_site_base = internal global i32 0, align 4, !dbg !2362
@gt_pch_rs_gt_except_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @call_site_base to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2349
@lang_protect_cleanup_actions = common dso_local local_unnamed_addr global %union.tree_node* ()* null, align 8, !dbg !2352
@lang_eh_type_covers = common dso_local local_unnamed_addr global i32 (%union.tree_node*, %union.tree_node*)* null, align 8, !dbg !2357
@.str.33 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.34 = private unnamed_addr constant [31 x i8] c"Marking function nothrow: %s\0A\0A\00", align 1
@flag_reorder_blocks_and_partition = external dso_local local_unnamed_addr global i32, align 4
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@asm_out_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.35 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"LLSDATTC\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"LLSDATT\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"LLSDAC\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"LLSDA\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"@LPStart format (%s)\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"@TType format (%s)\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"LLSDATTDC\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"LLSDATTD\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"@TType base offset\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"call-site format (%s)\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"LLSDACSBC\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"LLSDACSB\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"LLSDACSEC\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"LLSDACSE\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"Call-site table length\00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"Action record table\00", align 1
@.str.53 = private unnamed_addr constant [30 x i8] c"Exception specification table\00", align 1
@exception_section = external dso_local local_unnamed_addr global %union.section*, align 8
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@flag_function_sections = external dso_local local_unnamed_addr global i32, align 4
@.str.54 = private unnamed_addr constant [21 x i8] c".gcc_except_table.%s\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c".gcc_except_table\00", align 1
@data_section = external dso_local local_unnamed_addr global %union.section*, align 8
@readonly_data_section = external dso_local local_unnamed_addr global %union.section*, align 8
@current_function_func_begin_label = external dso_local local_unnamed_addr global i8*, align 8
@first_function_block_is_cold = external dso_local local_unnamed_addr global i8, align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"LEHB\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"LEHE\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"region %d start\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"landing pad\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2374 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2387, metadata !DIExpression()), !dbg !2389
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2388, metadata !DIExpression()), !dbg !2389
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2390
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2391
  ret i32 %call, !dbg !2392
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2393 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2397
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2398
  ret i32 %call, !dbg !2399
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2400 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2404, metadata !DIExpression()), !dbg !2405
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2406
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2406
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2406
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2406
  %cmp = icmp uge i8* %0, %1, !dbg !2406
  %conv1 = zext i1 %cmp to i64, !dbg !2406
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2406
  %tobool = icmp eq i64 %expval, 0, !dbg !2406
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2406

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2406
  br label %cond.end, !dbg !2406

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2406
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2406
  %2 = load i8, i8* %0, align 1, !dbg !2406
  %conv3 = zext i8 %2 to i32, !dbg !2406
  br label %cond.end, !dbg !2406

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2406
  ret i32 %cond, !dbg !2407
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2408 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2410, metadata !DIExpression()), !dbg !2411
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2412
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2412
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2412
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2412
  %cmp = icmp uge i8* %0, %1, !dbg !2412
  %conv1 = zext i1 %cmp to i64, !dbg !2412
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2412
  %tobool = icmp eq i64 %expval, 0, !dbg !2412
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2412

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2412
  br label %cond.end, !dbg !2412

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2412
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2412
  %2 = load i8, i8* %0, align 1, !dbg !2412
  %conv3 = zext i8 %2 to i32, !dbg !2412
  br label %cond.end, !dbg !2412

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2412
  ret i32 %cond, !dbg !2413
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2414 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2415
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2415
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2415
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2415
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2415
  %cmp = icmp uge i8* %1, %2, !dbg !2415
  %conv1 = zext i1 %cmp to i64, !dbg !2415
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2415
  %tobool = icmp eq i64 %expval, 0, !dbg !2415
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2415

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2415
  br label %cond.end, !dbg !2415

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2415
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2415
  %3 = load i8, i8* %1, align 1, !dbg !2415
  %conv3 = zext i8 %3 to i32, !dbg !2415
  br label %cond.end, !dbg !2415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2415
  ret i32 %cond, !dbg !2416
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2417 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2419, metadata !DIExpression()), !dbg !2420
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2421
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2422
  ret i32 %call, !dbg !2423
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2424 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2428, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2429, metadata !DIExpression()), !dbg !2430
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2431
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2431
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2431
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2431
  %cmp = icmp uge i8* %0, %1, !dbg !2431
  %conv1 = zext i1 %cmp to i64, !dbg !2431
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2431
  %tobool = icmp eq i64 %expval, 0, !dbg !2431
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2431

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2431
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2431
  br label %cond.end, !dbg !2431

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2431
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2431
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2431
  store i8 %conv2, i8* %0, align 1, !dbg !2431
  %conv6 = and i32 %__c, 255, !dbg !2431
  br label %cond.end, !dbg !2431

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2431
  ret i32 %cond, !dbg !2432
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2433 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2435, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2436, metadata !DIExpression()), !dbg !2437
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2438
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2438
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2438
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2438
  %cmp = icmp uge i8* %0, %1, !dbg !2438
  %conv1 = zext i1 %cmp to i64, !dbg !2438
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2438
  %tobool = icmp eq i64 %expval, 0, !dbg !2438
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2438

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2438
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2438
  br label %cond.end, !dbg !2438

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2438
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2438
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2438
  store i8 %conv2, i8* %0, align 1, !dbg !2438
  %conv6 = and i32 %__c, 255, !dbg !2438
  br label %cond.end, !dbg !2438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2438
  ret i32 %cond, !dbg !2439
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2440 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2442, metadata !DIExpression()), !dbg !2443
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2444
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2444
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2444
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2444
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2444
  %cmp = icmp uge i8* %1, %2, !dbg !2444
  %conv1 = zext i1 %cmp to i64, !dbg !2444
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2444
  %tobool = icmp eq i64 %expval, 0, !dbg !2444
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2444

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2444
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2444
  br label %cond.end, !dbg !2444

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2444
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2444
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2444
  store i8 %conv4, i8* %1, align 1, !dbg !2444
  %conv6 = and i32 %__c, 255, !dbg !2444
  br label %cond.end, !dbg !2444

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2444
  ret i32 %cond, !dbg !2445
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2446 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2452, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2453, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2454, metadata !DIExpression()), !dbg !2455
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2456
  ret i64 %call, !dbg !2457
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2458 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2460, metadata !DIExpression()), !dbg !2461
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2462
  %0 = load i32, i32* %_flags, align 8, !dbg !2462
  %and = lshr i32 %0, 4, !dbg !2462
  %and.lobit = and i32 %and, 1, !dbg !2462
  ret i32 %and.lobit, !dbg !2463
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2464 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2466, metadata !DIExpression()), !dbg !2467
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2468
  %0 = load i32, i32* %_flags, align 8, !dbg !2468
  %and = lshr i32 %0, 5, !dbg !2468
  %and.lobit = and i32 %and, 1, !dbg !2468
  ret i32 %and.lobit, !dbg !2469
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2470 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2473, metadata !DIExpression()), !dbg !2474
  %__c.off = add i32 %__c, 128, !dbg !2475
  %0 = icmp ult i32 %__c.off, 384, !dbg !2475
  br i1 %0, label %cond.true, label %cond.end, !dbg !2475

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2476
  %1 = load i32*, i32** %call, align 8, !dbg !2477
  %idxprom = sext i32 %__c to i64, !dbg !2478
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2478
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2478
  br label %cond.end, !dbg !2479

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2479
  ret i32 %cond, !dbg !2480
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2481 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2483, metadata !DIExpression()), !dbg !2484
  %__c.off = add i32 %__c, 128, !dbg !2485
  %0 = icmp ult i32 %__c.off, 384, !dbg !2485
  br i1 %0, label %cond.true, label %cond.end, !dbg !2485

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2486
  %1 = load i32*, i32** %call, align 8, !dbg !2487
  %idxprom = sext i32 %__c to i64, !dbg !2488
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2488
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2488
  br label %cond.end, !dbg !2489

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2489
  ret i32 %cond, !dbg !2490
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2491 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2496, metadata !DIExpression()), !dbg !2497
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2498
  %conv = trunc i64 %call to i32, !dbg !2499
  ret i32 %conv, !dbg !2500
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2501 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2505, metadata !DIExpression()), !dbg !2506
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2507
  ret i64 %call, !dbg !2508
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2509 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2514, metadata !DIExpression()), !dbg !2515
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2516
  ret i64 %call, !dbg !2517
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2518 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2524, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2525, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2526, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2527, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2528, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i64 0, metadata !2529, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2530, metadata !DIExpression()), !dbg !2534
  br label %while.cond, !dbg !2535

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2536
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2534
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2530, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2529, metadata !DIExpression()), !dbg !2534
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2537
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2535

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2538
  %div = lshr i64 %add, 1, !dbg !2540
  call void @llvm.dbg.value(metadata i64 %div, metadata !2531, metadata !DIExpression()), !dbg !2534
  %mul = mul i64 %div, %__size, !dbg !2541
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2542
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2532, metadata !DIExpression()), !dbg !2534
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2543
  call void @llvm.dbg.value(metadata i32 %call, metadata !2533, metadata !DIExpression()), !dbg !2534
  %cmp1 = icmp slt i32 %call, 0, !dbg !2544
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2546

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2547
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2549

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2550
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2529, metadata !DIExpression()), !dbg !2534
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2534
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2534
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2530, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2529, metadata !DIExpression()), !dbg !2534
  br label %while.cond, !dbg !2535, !llvm.loop !2551

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2534
  ret i8* %retval.0, !dbg !2553
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2554 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2560, metadata !DIExpression()), !dbg !2561
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2562
  ret double %call, !dbg !2563
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2564 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2573, metadata !DIExpression()), !dbg !2576
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2574, metadata !DIExpression()), !dbg !2576
  call void @llvm.dbg.value(metadata i32 %base, metadata !2575, metadata !DIExpression()), !dbg !2576
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2577
  ret i64 %call, !dbg !2578
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2579 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2585, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2586, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.value(metadata i32 %base, metadata !2587, metadata !DIExpression()), !dbg !2588
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2589
  ret i64 %call, !dbg !2590
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2591 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2602, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2603, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.value(metadata i32 %base, metadata !2604, metadata !DIExpression()), !dbg !2605
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2606
  ret i64 %call, !dbg !2607
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2608 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2612, metadata !DIExpression()), !dbg !2615
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2613, metadata !DIExpression()), !dbg !2615
  call void @llvm.dbg.value(metadata i32 %base, metadata !2614, metadata !DIExpression()), !dbg !2615
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2616
  ret i64 %call, !dbg !2617
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2618 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2658, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2659, metadata !DIExpression()), !dbg !2660
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2661
  ret i32 %call, !dbg !2662
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2663 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2665, metadata !DIExpression()), !dbg !2667
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2666, metadata !DIExpression()), !dbg !2667
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2668
  ret i32 %call, !dbg !2669
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2670 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2674, metadata !DIExpression()), !dbg !2676
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2675, metadata !DIExpression()), !dbg !2676
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2677
  ret i32 %call, !dbg !2678
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2679 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2683, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2684, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2685, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2686, metadata !DIExpression()), !dbg !2687
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2688
  ret i32 %call, !dbg !2689
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2690 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2694, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2695, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2696, metadata !DIExpression()), !dbg !2697
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2696, metadata !DIExpression(DW_OP_deref)), !dbg !2697
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2698
  ret i32 %call, !dbg !2699
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2700 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2704, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2705, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2706, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2707, metadata !DIExpression()), !dbg !2708
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2707, metadata !DIExpression(DW_OP_deref)), !dbg !2708
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2709
  ret i32 %call, !dbg !2710
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2711 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2735, metadata !DIExpression()), !dbg !2737
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2736, metadata !DIExpression()), !dbg !2737
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2738
  ret i32 %call, !dbg !2739
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2740 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2742, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2743, metadata !DIExpression()), !dbg !2744
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2745
  ret i32 %call, !dbg !2746
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2747 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2751, metadata !DIExpression()), !dbg !2753
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2752, metadata !DIExpression()), !dbg !2753
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2754
  ret i32 %call, !dbg !2755
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2756 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2760, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2761, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2762, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2763, metadata !DIExpression()), !dbg !2764
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2765
  ret i32 %call, !dbg !2766
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @doing_eh(i32 %do_warn) local_unnamed_addr #5 !dbg !2 {
entry:
  call void @llvm.dbg.value(metadata i32 %do_warn, metadata !2369, metadata !DIExpression()), !dbg !2767
  %0 = load i32, i32* @flag_exceptions, align 4, !dbg !2768
  %tobool = icmp eq i32 %0, 0, !dbg !2768
  br i1 %tobool, label %if.then, label %return, !dbg !2770

if.then:                                          ; preds = %entry
  %.b = load i1, i1* @doing_eh.warned, align 4, !dbg !2771
  %tobool1 = xor i1 %.b, true, !dbg !2771
  %tobool2 = icmp ne i32 %do_warn, 0, !dbg !2774
  %or.cond = and i1 %tobool2, %tobool1, !dbg !2775
  br i1 %or.cond, label %if.then3, label %return, !dbg !2775

if.then3:                                         ; preds = %if.then
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2776
  store i1 true, i1* @doing_eh.warned, align 4, !dbg !2778
  br label %return, !dbg !2779

return:                                           ; preds = %entry, %if.then3, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then3 ], [ 1, %entry ], !dbg !2767
  ret i32 %retval.0, !dbg !2780
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_eh() local_unnamed_addr #5 !dbg !2781 {
entry:
  %0 = load i32, i32* @flag_exceptions, align 4, !dbg !2784
  %tobool = icmp eq i32 %0, 0, !dbg !2784
  br i1 %tobool, label %return, label %if.end, !dbg !2786

if.end:                                           ; preds = %entry
  %call = tail call %struct.htab* @htab_create_alloc(i64 31, i32 (i8*)* nonnull @t2r_hash, i32 (i8*, i8*)* nonnull @t2r_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !2787
  store %struct.htab* %call, %struct.htab** @type_to_runtime_map, align 8, !dbg !2788
  br label %return, !dbg !2789

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !2789
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @t2r_hash(i8* %pentry) #5 !dbg !2790 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !2792, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !2793, metadata !DIExpression()), !dbg !2795
  %purpose = getelementptr inbounds i8, i8* %pentry, i64 24, !dbg !2796
  %0 = bitcast i8* %purpose to i64*, !dbg !2796
  %1 = load i64, i64* %0, align 8, !dbg !2796
  %2 = trunc i64 %1 to i32, !dbg !2796
  %conv = and i32 %2, 262143, !dbg !2796
  ret i32 %conv, !dbg !2797
}

; Function Attrs: nounwind uwtable
define internal i32 @t2r_eq(i8* %pentry, i8* %pdata) #5 !dbg !2798 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !2800, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.value(metadata i8* %pdata, metadata !2801, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !2802, metadata !DIExpression()), !dbg !2804
  %0 = bitcast i8* %pdata to %union.tree_node*, !dbg !2805
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2803, metadata !DIExpression()), !dbg !2804
  %purpose = getelementptr inbounds i8, i8* %pentry, i64 24, !dbg !2806
  %1 = bitcast i8* %purpose to %union.tree_node**, !dbg !2806
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !2806
  %cmp = icmp eq %union.tree_node* %2, %0, !dbg !2807
  %conv = zext i1 %cmp to i32, !dbg !2807
  ret i32 %conv, !dbg !2808
}

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @init_eh_for_function() local_unnamed_addr #5 !dbg !2809 {
entry:
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 48) #6, !dbg !2810
  %0 = load i8**, i8*** bitcast (%struct.function** @cfun to i8***), align 8, !dbg !2811
  store i8* %call, i8** %0, align 8, !dbg !2812
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2813
  %eh2 = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !2813
  %2 = load %struct.eh_status*, %struct.eh_status** %eh2, align 8, !dbg !2813
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 1, !dbg !2813
  %call3 = tail call fastcc %struct.eh_region_d** @VEC_eh_region_gc_safe_push(%struct.VEC_eh_region_gc** nonnull %region_array, %struct.eh_region_d* null) #7, !dbg !2813
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2814
  %eh5 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 0, !dbg !2814
  %4 = load %struct.eh_status*, %struct.eh_status** %eh5, align 8, !dbg !2814
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %4, i64 0, i32 2, !dbg !2814
  %call6 = tail call fastcc %struct.eh_landing_pad_d** @VEC_eh_landing_pad_gc_safe_push(%struct.VEC_eh_landing_pad_gc** nonnull %lp_array, %struct.eh_landing_pad_d* null) #7, !dbg !2814
  ret void, !dbg !2815
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d** @VEC_eh_region_gc_safe_push(%struct.VEC_eh_region_gc** %vec_, %struct.eh_region_d* %obj_) unnamed_addr #0 !dbg !2816 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_gc** %vec_, metadata !2822, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %obj_, metadata !2823, metadata !DIExpression()), !dbg !2824
  %call = tail call fastcc i32 @VEC_eh_region_gc_reserve(%struct.VEC_eh_region_gc** %vec_, i32 1) #7, !dbg !2825
  %0 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %vec_, align 8, !dbg !2825
  %tobool = icmp eq %struct.VEC_eh_region_gc* %0, null, !dbg !2825
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2825

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %0, i64 0, i32 0, !dbg !2825
  br label %cond.end, !dbg !2825

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2825
  %call1 = tail call fastcc %struct.eh_region_d** @VEC_eh_region_base_quick_push(%struct.VEC_eh_region_base* %cond, %struct.eh_region_d* %obj_) #7, !dbg !2825
  ret %struct.eh_region_d** %call1, !dbg !2825
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d** @VEC_eh_landing_pad_gc_safe_push(%struct.VEC_eh_landing_pad_gc** %vec_, %struct.eh_landing_pad_d* %obj_) unnamed_addr #0 !dbg !2826 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_gc** %vec_, metadata !2832, metadata !DIExpression()), !dbg !2834
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %obj_, metadata !2833, metadata !DIExpression()), !dbg !2834
  %call = tail call fastcc i32 @VEC_eh_landing_pad_gc_reserve(%struct.VEC_eh_landing_pad_gc** %vec_, i32 1) #7, !dbg !2835
  %0 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %vec_, align 8, !dbg !2835
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %0, null, !dbg !2835
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2835

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %0, i64 0, i32 0, !dbg !2835
  br label %cond.end, !dbg !2835

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2835
  %call1 = tail call fastcc %struct.eh_landing_pad_d** @VEC_eh_landing_pad_base_quick_push(%struct.VEC_eh_landing_pad_base* %cond, %struct.eh_landing_pad_d* %obj_) #7, !dbg !2835
  ret %struct.eh_landing_pad_d** %call1, !dbg !2835
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @gen_eh_region_cleanup(%struct.eh_region_d* %outer) local_unnamed_addr #5 !dbg !2836 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer, metadata !2840, metadata !DIExpression()), !dbg !2841
  %call = tail call fastcc %struct.eh_region_d* @gen_eh_region(i32 0, %struct.eh_region_d* %outer) #7, !dbg !2842
  ret %struct.eh_region_d* %call, !dbg !2843
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.eh_region_d* @gen_eh_region(i32 %type, %struct.eh_region_d* %outer) unnamed_addr #5 !dbg !2844 {
entry:
  call void @llvm.dbg.value(metadata i32 %type, metadata !2848, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer, metadata !2849, metadata !DIExpression()), !dbg !2851
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 88) #6, !dbg !2852
  %0 = bitcast i8* %call to %struct.eh_region_d*, !dbg !2852
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %0, metadata !2850, metadata !DIExpression()), !dbg !2851
  %type1 = getelementptr inbounds i8, i8* %call, i64 28, !dbg !2853
  %1 = bitcast i8* %type1 to i32*, !dbg !2853
  store i32 %type, i32* %1, align 4, !dbg !2854
  %outer2 = bitcast i8* %call to %struct.eh_region_d**, !dbg !2855
  store %struct.eh_region_d* %outer, %struct.eh_region_d** %outer2, align 8, !dbg !2856
  %tobool = icmp eq %struct.eh_region_d* %outer, null, !dbg !2857
  br i1 %tobool, label %if.else, label %if.then, !dbg !2859

if.then:                                          ; preds = %entry
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %outer, i64 0, i32 1, !dbg !2860
  %2 = bitcast %struct.eh_region_d** %inner to i64*, !dbg !2860
  %3 = load i64, i64* %2, align 8, !dbg !2860
  %next_peer = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2862
  %4 = bitcast i8* %next_peer to i64*, !dbg !2863
  store i64 %3, i64* %4, align 8, !dbg !2863
  %5 = bitcast %struct.eh_region_d** %inner to i8**, !dbg !2864
  store i8* %call, i8** %5, align 8, !dbg !2864
  br label %if.end, !dbg !2865

if.else:                                          ; preds = %entry
  %6 = load i64**, i64*** bitcast (%struct.function** @cfun to i64***), align 8, !dbg !2866
  %7 = load i64*, i64** %6, align 8, !dbg !2868
  %8 = load i64, i64* %7, align 8, !dbg !2869
  %next_peer4 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2870
  %9 = bitcast i8* %next_peer4 to i64*, !dbg !2871
  store i64 %8, i64* %9, align 8, !dbg !2871
  %10 = bitcast i64** %6 to i8***, !dbg !2872
  %11 = load i8**, i8*** %10, align 8, !dbg !2872
  store i8* %call, i8** %11, align 8, !dbg !2873
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2874
  %eh9 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 0, !dbg !2874
  %13 = load %struct.eh_status*, %struct.eh_status** %eh9, align 8, !dbg !2874
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %13, i64 0, i32 1, !dbg !2874
  %14 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !2874
  %tobool10 = icmp eq %struct.VEC_eh_region_gc* %14, null, !dbg !2874
  br i1 %tobool10, label %cond.end, label %cond.true, !dbg !2874

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %14, i64 0, i32 0, !dbg !2874
  br label %cond.end, !dbg !2874

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !2874
  %call14 = tail call fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %cond) #7, !dbg !2874
  %index = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2875
  %15 = bitcast i8* %index to i32*, !dbg !2875
  store i32 %call14, i32* %15, align 8, !dbg !2876
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2877
  %eh16 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 0, !dbg !2877
  %17 = load %struct.eh_status*, %struct.eh_status** %eh16, align 8, !dbg !2877
  %region_array17 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %17, i64 0, i32 1, !dbg !2877
  %call18 = tail call fastcc %struct.eh_region_d** @VEC_eh_region_gc_safe_push(%struct.VEC_eh_region_gc** nonnull %region_array17, %struct.eh_region_d* %0) #7, !dbg !2877
  %18 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !2878
  %tobool19 = icmp eq i8 %18, 0, !dbg !2880
  br i1 %tobool19, label %if.end23, label %land.lhs.true, !dbg !2881

land.lhs.true:                                    ; preds = %cond.end
  %19 = load i8, i8* getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 47), align 8, !dbg !2882
  %tobool21 = icmp eq i8 %19, 0, !dbg !2883
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !2884

if.then22:                                        ; preds = %land.lhs.true
  %20 = getelementptr inbounds i8, i8* %call, i64 80, !dbg !2885
  store i8 1, i8* %20, align 8, !dbg !2886
  br label %if.end23, !dbg !2887

if.end23:                                         ; preds = %land.lhs.true, %cond.end, %if.then22
  ret %struct.eh_region_d* %0, !dbg !2888
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @gen_eh_region_try(%struct.eh_region_d* %outer) local_unnamed_addr #5 !dbg !2889 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer, metadata !2891, metadata !DIExpression()), !dbg !2892
  %call = tail call fastcc %struct.eh_region_d* @gen_eh_region(i32 1, %struct.eh_region_d* %outer) #7, !dbg !2893
  ret %struct.eh_region_d* %call, !dbg !2894
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_catch_d* @gen_eh_region_catch(%struct.eh_region_d* %t, %union.tree_node* %type_or_list) local_unnamed_addr #5 !dbg !2895 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %t, metadata !2899, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.value(metadata %union.tree_node* %type_or_list, metadata !2900, metadata !DIExpression()), !dbg !2905
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %t, i64 0, i32 4, !dbg !2906
  %0 = load i32, i32* %type, align 4, !dbg !2906
  %cmp = icmp eq i32 %0, 1, !dbg !2906
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2906

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2906
  br label %cond.end, !dbg !2906

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %union.tree_node* %type_or_list, metadata !2903, metadata !DIExpression()), !dbg !2905
  %tobool = icmp eq %union.tree_node* %type_or_list, null, !dbg !2907
  br i1 %tobool, label %if.end4, label %if.then, !dbg !2909

if.then:                                          ; preds = %cond.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type_or_list, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2910
  %bf.load = load i64, i64* %1, align 8, !dbg !2910
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2913
  %cmp1 = icmp eq i64 %bf.cast1, 2, !dbg !2913
  br i1 %cmp1, label %if.end, label %if.then2, !dbg !2914

if.then2:                                         ; preds = %if.then
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* nonnull %type_or_list, %union.tree_node* null) #6, !dbg !2915
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2903, metadata !DIExpression()), !dbg !2905
  br label %if.end, !dbg !2916

if.end:                                           ; preds = %if.then, %if.then2
  %type_list.0 = phi %union.tree_node* [ %call, %if.then2 ], [ %type_or_list, %if.then ], !dbg !2905
  call void @llvm.dbg.value(metadata %union.tree_node* %type_list.0, metadata !2903, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.value(metadata %union.tree_node* %type_list.0, metadata !2904, metadata !DIExpression()), !dbg !2905
  br label %for.cond, !dbg !2917

for.cond:                                         ; preds = %for.body, %if.end
  %type_node.0 = phi %union.tree_node* [ %type_list.0, %if.end ], [ %4, %for.body ], !dbg !2918
  call void @llvm.dbg.value(metadata %union.tree_node* %type_node.0, metadata !2904, metadata !DIExpression()), !dbg !2905
  %tobool3 = icmp eq %union.tree_node* %type_node.0, null, !dbg !2919
  br i1 %tobool3, label %if.end4.loopexit, label %for.body, !dbg !2919

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2921
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !2921
  tail call void @add_type_for_runtime(%union.tree_node* %3) #7, !dbg !2923
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %type_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2924
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2924
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !2904, metadata !DIExpression()), !dbg !2905
  br label %for.cond, !dbg !2925, !llvm.loop !2926

if.end4.loopexit:                                 ; preds = %for.cond
  br label %if.end4, !dbg !2928

if.end4:                                          ; preds = %if.end4.loopexit, %cond.end
  %type_list.1 = phi %union.tree_node* [ null, %cond.end ], [ %type_list.0, %if.end4.loopexit ], !dbg !2905
  call void @llvm.dbg.value(metadata %union.tree_node* %type_list.1, metadata !2903, metadata !DIExpression()), !dbg !2905
  %call5 = tail call i8* @ggc_alloc_cleared_stat(i64 40) #6, !dbg !2928
  %5 = bitcast i8* %call5 to %struct.eh_catch_d*, !dbg !2928
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %5, metadata !2901, metadata !DIExpression()), !dbg !2905
  %type_list6 = getelementptr inbounds i8, i8* %call5, i64 16, !dbg !2929
  %6 = bitcast i8* %type_list6 to %union.tree_node**, !dbg !2929
  store %union.tree_node* %type_list.1, %union.tree_node** %6, align 8, !dbg !2930
  %last_catch = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %t, i64 0, i32 5, i32 0, i32 1, !dbg !2931
  %7 = bitcast %union.tree_node** %last_catch to %struct.eh_catch_d**, !dbg !2931
  %8 = load %struct.eh_catch_d*, %struct.eh_catch_d** %7, align 8, !dbg !2931
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %8, metadata !2902, metadata !DIExpression()), !dbg !2905
  %prev_catch = getelementptr inbounds i8, i8* %call5, i64 8, !dbg !2932
  %9 = bitcast i8* %prev_catch to %struct.eh_catch_d**, !dbg !2932
  store %struct.eh_catch_d* %8, %struct.eh_catch_d** %9, align 8, !dbg !2933
  %tobool7 = icmp eq %struct.eh_catch_d* %8, null, !dbg !2934
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !2936

if.then8:                                         ; preds = %if.end4
  %10 = bitcast %struct.eh_catch_d* %8 to i8**, !dbg !2937
  store i8* %call5, i8** %10, align 8, !dbg !2937
  br label %if.end11, !dbg !2938

if.else:                                          ; preds = %if.end4
  %u9 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %t, i64 0, i32 5, !dbg !2939
  %11 = bitcast %union.eh_region_u* %u9 to i8**, !dbg !2940
  store i8* %call5, i8** %11, align 8, !dbg !2940
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  %12 = bitcast %union.tree_node** %last_catch to i8**, !dbg !2941
  store i8* %call5, i8** %12, align 8, !dbg !2941
  ret %struct.eh_catch_d* %5, !dbg !2942
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @add_type_for_runtime(%union.tree_node* %type) local_unnamed_addr #5 !dbg !2943 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2947, metadata !DIExpression()), !dbg !2952
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2953
  %bf.load = load i64, i64* %0, align 8, !dbg !2953
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2955
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !2955
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !2956

if.end:                                           ; preds = %entry
  %1 = load %struct.htab*, %struct.htab** @type_to_runtime_map, align 8, !dbg !2957
  %2 = bitcast %union.tree_node* %type to i8*, !dbg !2958
  %3 = ptrtoint %union.tree_node* %type to i64, !dbg !2959
  %4 = trunc i64 %3 to i32, !dbg !2959
  %conv = and i32 %4, 262143, !dbg !2959
  %call = tail call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* %2, i32 %conv, i32 1) #6, !dbg !2960
  %5 = bitcast i8** %call to %union.tree_node**, !dbg !2961
  call void @llvm.dbg.value(metadata %union.tree_node** %5, metadata !2948, metadata !DIExpression()), !dbg !2952
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !2962
  %cmp1 = icmp eq %union.tree_node* %6, null, !dbg !2963
  br i1 %cmp1, label %if.then3, label %cleanup.cont, !dbg !2964

if.then3:                                         ; preds = %if.end
  %7 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 46), align 8, !dbg !2965
  %call4 = tail call %union.tree_node* %7(%union.tree_node* %type) #6, !dbg !2966
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !2949, metadata !DIExpression()), !dbg !2967
  %call5 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %type, %union.tree_node* %call4, %union.tree_node* null) #6, !dbg !2968
  store %union.tree_node* %call5, %union.tree_node** %5, align 8, !dbg !2969
  br label %cleanup.cont, !dbg !2970

cleanup.cont:                                     ; preds = %entry, %if.then3, %if.end
  ret void, !dbg !2971
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @gen_eh_region_allowed(%struct.eh_region_d* %outer, %union.tree_node* %allowed) local_unnamed_addr #5 !dbg !2972 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer, metadata !2976, metadata !DIExpression()), !dbg !2979
  call void @llvm.dbg.value(metadata %union.tree_node* %allowed, metadata !2977, metadata !DIExpression()), !dbg !2979
  %call = tail call fastcc %struct.eh_region_d* @gen_eh_region(i32 2, %struct.eh_region_d* %outer) #7, !dbg !2980
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !2978, metadata !DIExpression()), !dbg !2979
  %type_list = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 5, i32 0, i32 0, !dbg !2981
  store %union.tree_node* %allowed, %union.tree_node** %type_list, align 8, !dbg !2982
  br label %for.cond, !dbg !2983

for.cond:                                         ; preds = %for.body, %entry
  %allowed.addr.0 = phi %union.tree_node* [ %allowed, %entry ], [ %2, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %allowed.addr.0, metadata !2977, metadata !DIExpression()), !dbg !2979
  %tobool = icmp eq %union.tree_node* %allowed.addr.0, null, !dbg !2984
  br i1 %tobool, label %for.end, label %for.body, !dbg !2984

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %allowed.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2986
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !2986
  tail call void @add_type_for_runtime(%union.tree_node* %1) #7, !dbg !2988
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %allowed.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2989
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2989
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !2977, metadata !DIExpression()), !dbg !2979
  br label %for.cond, !dbg !2990, !llvm.loop !2991

for.end:                                          ; preds = %for.cond
  ret %struct.eh_region_d* %call, !dbg !2993
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @gen_eh_region_must_not_throw(%struct.eh_region_d* %outer) local_unnamed_addr #5 !dbg !2994 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer, metadata !2996, metadata !DIExpression()), !dbg !2997
  %call = tail call fastcc %struct.eh_region_d* @gen_eh_region(i32 3, %struct.eh_region_d* %outer) #7, !dbg !2998
  ret %struct.eh_region_d* %call, !dbg !2999
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_landing_pad_d* @gen_eh_landing_pad(%struct.eh_region_d* %region) local_unnamed_addr #5 !dbg !3000 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !3004, metadata !DIExpression()), !dbg !3006
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 40) #6, !dbg !3007
  %0 = bitcast i8* %call to %struct.eh_landing_pad_d*, !dbg !3007
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %0, metadata !3005, metadata !DIExpression()), !dbg !3006
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 6, !dbg !3008
  %1 = bitcast %struct.eh_landing_pad_d** %landing_pads to i64*, !dbg !3008
  %2 = load i64, i64* %1, align 8, !dbg !3008
  %3 = bitcast i8* %call to i64*, !dbg !3009
  store i64 %2, i64* %3, align 8, !dbg !3009
  %region1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3010
  %4 = bitcast i8* %region1 to %struct.eh_region_d**, !dbg !3010
  store %struct.eh_region_d* %region, %struct.eh_region_d** %4, align 8, !dbg !3011
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3012
  %eh = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 0, !dbg !3012
  %6 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3012
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %6, i64 0, i32 2, !dbg !3012
  %7 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3012
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %7, null, !dbg !3012
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3012

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %7, i64 0, i32 0, !dbg !3012
  br label %cond.end, !dbg !3012

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3012
  %call5 = tail call fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %cond) #7, !dbg !3012
  %index = getelementptr inbounds i8, i8* %call, i64 32, !dbg !3013
  %8 = bitcast i8* %index to i32*, !dbg !3013
  store i32 %call5, i32* %8, align 8, !dbg !3014
  %9 = bitcast %struct.eh_landing_pad_d** %landing_pads to i8**, !dbg !3015
  store i8* %call, i8** %9, align 8, !dbg !3015
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3016
  %eh8 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 0, !dbg !3016
  %11 = load %struct.eh_status*, %struct.eh_status** %eh8, align 8, !dbg !3016
  %lp_array9 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %11, i64 0, i32 2, !dbg !3016
  %call10 = tail call fastcc %struct.eh_landing_pad_d** @VEC_eh_landing_pad_gc_safe_push(%struct.VEC_eh_landing_pad_gc** nonnull %lp_array9, %struct.eh_landing_pad_d* %0) #7, !dbg !3016
  ret %struct.eh_landing_pad_d* %0, !dbg !3017
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %vec_) unnamed_addr #0 !dbg !3018 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !3024, metadata !DIExpression()), !dbg !3025
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !3026
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3026

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !3026
  %0 = load i32, i32* %num, align 8, !dbg !3026
  br label %cond.end, !dbg !3026

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3026
  ret i32 %cond, !dbg !3026
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @get_eh_region_from_number_fn(%struct.function* %ifun, i32 %i) local_unnamed_addr #5 !dbg !3027 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !3031, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i32 %i, metadata !3032, metadata !DIExpression()), !dbg !3033
  %eh = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 0, !dbg !3034
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3034
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 1, !dbg !3034
  %1 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !3034
  %tobool = icmp eq %struct.VEC_eh_region_gc* %1, null, !dbg !3034
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3034

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %1, i64 0, i32 0, !dbg !3034
  br label %cond.end, !dbg !3034

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3034
  %call = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %cond, i32 %i) #7, !dbg !3034
  ret %struct.eh_region_d* %call, !dbg !3035
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3036 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !3042, metadata !DIExpression()), !dbg !3044
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3043, metadata !DIExpression()), !dbg !3044
  br label %land.end, !dbg !3045

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3045
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3045
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !3045
  ret %struct.eh_region_d* %0, !dbg !3045
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @get_eh_region_from_number(i32 %i) local_unnamed_addr #5 !dbg !3046 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !3050, metadata !DIExpression()), !dbg !3051
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3052
  %call = tail call %struct.eh_region_d* @get_eh_region_from_number_fn(%struct.function* %0, i32 %i) #7, !dbg !3053
  ret %struct.eh_region_d* %call, !dbg !3054
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number_fn(%struct.function* %ifun, i32 %i) local_unnamed_addr #5 !dbg !3055 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !3059, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata i32 %i, metadata !3060, metadata !DIExpression()), !dbg !3061
  %eh = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 0, !dbg !3062
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3062
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 2, !dbg !3062
  %1 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3062
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %1, null, !dbg !3062
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3062

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %1, i64 0, i32 0, !dbg !3062
  br label %cond.end, !dbg !3062

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3062
  %call = tail call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %cond, i32 %i) #7, !dbg !3062
  ret %struct.eh_landing_pad_d* %call, !dbg !3063
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3064 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !3068, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3069, metadata !DIExpression()), !dbg !3070
  br label %land.end, !dbg !3071

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3071
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3071
  %0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !3071
  ret %struct.eh_landing_pad_d* %0, !dbg !3071
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %i) local_unnamed_addr #5 !dbg !3072 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !3076, metadata !DIExpression()), !dbg !3077
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3078
  %call = tail call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number_fn(%struct.function* %0, i32 %i) #7, !dbg !3079
  ret %struct.eh_landing_pad_d* %call, !dbg !3080
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @get_eh_region_from_lp_number_fn(%struct.function* %ifun, i32 %i) local_unnamed_addr #5 !dbg !3081 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !3083, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i32 %i, metadata !3084, metadata !DIExpression()), !dbg !3089
  %cmp = icmp slt i32 %i, 0, !dbg !3090
  br i1 %cmp, label %if.then, label %if.else, !dbg !3091

if.then:                                          ; preds = %entry
  %eh = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 0, !dbg !3092
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3092
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 1, !dbg !3092
  %1 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !3092
  %tobool = icmp eq %struct.VEC_eh_region_gc* %1, null, !dbg !3092
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3092

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %1, i64 0, i32 0, !dbg !3092
  br label %cond.end, !dbg !3092

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %if.then ], !dbg !3092
  %sub = sub nsw i32 0, %i, !dbg !3092
  %call = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %cond, i32 %sub) #7, !dbg !3092
  br label %return, !dbg !3093

if.else:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %i, 0, !dbg !3094
  br i1 %cmp3, label %return, label %if.else5, !dbg !3095

if.else5:                                         ; preds = %if.else
  %eh6 = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 0, !dbg !3096
  %2 = load %struct.eh_status*, %struct.eh_status** %eh6, align 8, !dbg !3096
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 2, !dbg !3096
  %3 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3096
  %tobool7 = icmp eq %struct.VEC_eh_landing_pad_gc* %3, null, !dbg !3096
  br i1 %tobool7, label %cond.end13, label %cond.true8, !dbg !3096

cond.true8:                                       ; preds = %if.else5
  %base11 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %3, i64 0, i32 0, !dbg !3096
  br label %cond.end13, !dbg !3096

cond.end13:                                       ; preds = %if.else5, %cond.true8
  %cond14 = phi %struct.VEC_eh_landing_pad_base* [ %base11, %cond.true8 ], [ null, %if.else5 ], !dbg !3096
  %call15 = tail call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %cond14, i32 %i) #7, !dbg !3096
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call15, metadata !3085, metadata !DIExpression()), !dbg !3097
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call15, i64 0, i32 1, !dbg !3098
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !3098
  br label %return

return:                                           ; preds = %if.else, %cond.end13, %cond.end
  %retval.0 = phi %struct.eh_region_d* [ %call, %cond.end ], [ %4, %cond.end13 ], [ null, %if.else ], !dbg !3099
  ret %struct.eh_region_d* %retval.0, !dbg !3100
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @get_eh_region_from_lp_number(i32 %i) local_unnamed_addr #5 !dbg !3101 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !3103, metadata !DIExpression()), !dbg !3104
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3105
  %call = tail call %struct.eh_region_d* @get_eh_region_from_lp_number_fn(%struct.function* %0, i32 %i) #7, !dbg !3106
  ret %struct.eh_region_d* %call, !dbg !3107
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @current_function_has_exception_handlers() local_unnamed_addr #5 !dbg !3108 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3109
  %eh = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 0, !dbg !3110
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3110
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 0, !dbg !3111
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !3111
  %cmp = icmp ne %struct.eh_region_d* %2, null, !dbg !3112
  %conv1 = zext i1 %cmp to i8, !dbg !3109
  ret i8 %conv1, !dbg !3113
}

; Function Attrs: nounwind uwtable
define dso_local %struct.pointer_map_t* @duplicate_eh_regions(%struct.function* %ifun, %struct.eh_region_d* %copy_region, i32 %outer_lp, %union.tree_node* (%union.tree_node*, i8*)* %map, i8* %map_data) local_unnamed_addr #5 !dbg !3114 {
entry:
  %data = alloca %struct.duplicate_eh_regions_data, align 8
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !3122, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %copy_region, metadata !3123, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.value(metadata i32 %outer_lp, metadata !3124, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.value(metadata %union.tree_node* (%union.tree_node*, i8*)* %map, metadata !3125, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.value(metadata i8* %map_data, metadata !3126, metadata !DIExpression()), !dbg !3137
  %0 = bitcast %struct.duplicate_eh_regions_data* %data to i8*, !dbg !3138
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3138
  %label_map = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 0, !dbg !3139
  store %union.tree_node* (%union.tree_node*, i8*)* %map, %union.tree_node* (%union.tree_node*, i8*)** %label_map, align 8, !dbg !3140
  %label_map_data = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 1, !dbg !3141
  store i8* %map_data, i8** %label_map_data, align 8, !dbg !3142
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !3143
  %eh_map = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 2, !dbg !3144
  store %struct.pointer_map_t* %call, %struct.pointer_map_t** %eh_map, align 8, !dbg !3145
  %call1 = tail call %struct.eh_region_d* @get_eh_region_from_lp_number(i32 %outer_lp) #7, !dbg !3146
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call1, metadata !3133, metadata !DIExpression()), !dbg !3137
  %tobool = icmp eq %struct.eh_region_d* %copy_region, null, !dbg !3147
  br i1 %tobool, label %if.else, label %if.then, !dbg !3148

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.duplicate_eh_regions_data* %data, metadata !3127, metadata !DIExpression(DW_OP_deref)), !dbg !3137
  call fastcc void @duplicate_eh_regions_1(%struct.duplicate_eh_regions_data* nonnull %data, %struct.eh_region_d* nonnull %copy_region, %struct.eh_region_d* %call1) #7, !dbg !3149
  br label %if.end, !dbg !3149

if.else:                                          ; preds = %entry
  %eh = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 0, !dbg !3150
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3150
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 0, !dbg !3152
  br label %for.cond, !dbg !3153

for.cond:                                         ; preds = %for.body, %if.else
  %r.0.in = phi %struct.eh_region_d** [ %region_tree, %if.else ], [ %next_peer, %for.body ]
  %r.0 = load %struct.eh_region_d*, %struct.eh_region_d** %r.0.in, align 8, !dbg !3154
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.0, metadata !3134, metadata !DIExpression()), !dbg !3155
  %tobool2 = icmp eq %struct.eh_region_d* %r.0, null, !dbg !3156
  br i1 %tobool2, label %if.end.loopexit, label %for.body, !dbg !3156

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.duplicate_eh_regions_data* %data, metadata !3127, metadata !DIExpression(DW_OP_deref)), !dbg !3137
  call fastcc void @duplicate_eh_regions_1(%struct.duplicate_eh_regions_data* nonnull %data, %struct.eh_region_d* nonnull %r.0, %struct.eh_region_d* %call1) #7, !dbg !3157
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.0, i64 0, i32 2, !dbg !3159
  br label %for.cond, !dbg !3160, !llvm.loop !3161

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !3163

if.end:                                           ; preds = %if.end.loopexit, %if.then
  %2 = load %struct.pointer_map_t*, %struct.pointer_map_t** %eh_map, align 8, !dbg !3163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3164
  ret %struct.pointer_map_t* %2, !dbg !3165
}

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @duplicate_eh_regions_1(%struct.duplicate_eh_regions_data* %data, %struct.eh_region_d* %old_r, %struct.eh_region_d* %outer) unnamed_addr #5 !dbg !3166 {
entry:
  call void @llvm.dbg.value(metadata %struct.duplicate_eh_regions_data* %data, metadata !3171, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %old_r, metadata !3172, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer, metadata !3173, metadata !DIExpression()), !dbg !3182
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 4, !dbg !3183
  %0 = load i32, i32* %type, align 4, !dbg !3183
  %call = tail call fastcc %struct.eh_region_d* @gen_eh_region(i32 %0, %struct.eh_region_d* %outer) #7, !dbg !3184
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !3176, metadata !DIExpression()), !dbg !3182
  %eh_map = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 2, !dbg !3185
  %1 = load %struct.pointer_map_t*, %struct.pointer_map_t** %eh_map, align 8, !dbg !3185
  %2 = bitcast %struct.eh_region_d* %old_r to i8*, !dbg !3186
  %call1 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %1, i8* %2) #6, !dbg !3187
  call void @llvm.dbg.value(metadata i8** %call1, metadata !3177, metadata !DIExpression()), !dbg !3182
  %3 = load i8*, i8** %call1, align 8, !dbg !3188
  %cmp = icmp eq i8* %3, null, !dbg !3188
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3188

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 531, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3188
  br label %cond.end, !dbg !3188

cond.end:                                         ; preds = %entry, %cond.true
  %4 = bitcast i8** %call1 to %struct.eh_region_d**, !dbg !3189
  store %struct.eh_region_d* %call, %struct.eh_region_d** %4, align 8, !dbg !3189
  %5 = load i32, i32* %type, align 4, !dbg !3190
  switch i32 %5, label %sw.epilog [
    i32 3, label %sw.bb33
    i32 1, label %sw.bb
    i32 2, label %sw.bb11
  ], !dbg !3191

sw.bb:                                            ; preds = %cond.end
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 5, !dbg !3192
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !3194
  %label_map = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 0, !dbg !3195
  %label_map_data = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 1, !dbg !3195
  br label %for.cond, !dbg !3198

for.cond:                                         ; preds = %cond.end6, %sw.bb
  %oc.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb ], [ %next_catch, %cond.end6 ]
  %oc.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %oc.0.in, align 8, !dbg !3199
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %oc.0, metadata !3178, metadata !DIExpression()), !dbg !3200
  %tobool = icmp eq %struct.eh_catch_d* %oc.0, null, !dbg !3201
  br i1 %tobool, label %sw.epilog.loopexit, label %for.body, !dbg !3201

for.body:                                         ; preds = %for.cond
  %filter_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %oc.0, i64 0, i32 3, !dbg !3202
  %6 = load %union.tree_node*, %union.tree_node** %filter_list, align 8, !dbg !3202
  %cmp3 = icmp eq %union.tree_node* %6, null, !dbg !3202
  br i1 %cmp3, label %cond.end6, label %cond.true4, !dbg !3202

cond.true4:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 546, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3202
  br label %cond.end6, !dbg !3202

cond.end6:                                        ; preds = %for.body, %cond.true4
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %oc.0, i64 0, i32 2, !dbg !3203
  %7 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !3203
  %call8 = tail call %struct.eh_catch_d* @gen_eh_region_catch(%struct.eh_region_d* %call, %union.tree_node* %7) #7, !dbg !3204
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %call8, metadata !3181, metadata !DIExpression()), !dbg !3200
  %8 = load %union.tree_node* (%union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, i8*)** %label_map, align 8, !dbg !3205
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %oc.0, i64 0, i32 4, !dbg !3206
  %9 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !3206
  %10 = load i8*, i8** %label_map_data, align 8, !dbg !3207
  %call9 = tail call %union.tree_node* %8(%union.tree_node* %9, i8* %10) #6, !dbg !3208
  %label10 = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %call8, i64 0, i32 4, !dbg !3209
  store %union.tree_node* %call9, %union.tree_node** %label10, align 8, !dbg !3210
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %oc.0, i64 0, i32 0, !dbg !3211
  br label %for.cond, !dbg !3212, !llvm.loop !3213

sw.bb11:                                          ; preds = %cond.end
  %type_list13 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 5, i32 0, i32 0, !dbg !3215
  %11 = bitcast %union.tree_node** %type_list13 to i64*, !dbg !3215
  %12 = load i64, i64* %11, align 8, !dbg !3215
  %u14 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 5, !dbg !3216
  %13 = bitcast %union.eh_region_u* %u14 to i64*, !dbg !3217
  store i64 %12, i64* %13, align 8, !dbg !3217
  %label19 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 5, i32 0, i32 1, !dbg !3218
  %14 = load %union.tree_node*, %union.tree_node** %label19, align 8, !dbg !3218
  %tobool20 = icmp eq %union.tree_node* %14, null, !dbg !3220
  br i1 %tobool20, label %if.else, label %if.then, !dbg !3221

if.then:                                          ; preds = %sw.bb11
  %label_map21 = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 0, !dbg !3222
  %15 = load %union.tree_node* (%union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, i8*)** %label_map21, align 8, !dbg !3222
  %label_map_data25 = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 1, !dbg !3223
  %16 = load i8*, i8** %label_map_data25, align 8, !dbg !3223
  %call26 = tail call %union.tree_node* %15(%union.tree_node* nonnull %14, i8* %16) #6, !dbg !3224
  %label29 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 5, i32 0, i32 1, !dbg !3225
  store %union.tree_node* %call26, %union.tree_node** %label29, align 8, !dbg !3226
  br label %sw.epilog, !dbg !3227

if.else:                                          ; preds = %sw.bb11
  %label32 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 5, i32 0, i32 1, !dbg !3228
  store %union.tree_node* null, %union.tree_node** %label32, align 8, !dbg !3229
  br label %sw.epilog

sw.bb33:                                          ; preds = %cond.end
  %u34 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 5, !dbg !3230
  %u35 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 5, !dbg !3231
  %17 = bitcast %union.eh_region_u* %u34 to i8*, !dbg !3232
  %18 = bitcast %union.eh_region_u* %u35 to i8*, !dbg !3232
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %18, i64 16, i1 false), !dbg !3232
  br label %sw.epilog, !dbg !3233

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !3234

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.then, %if.else, %cond.end, %sw.bb33
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 6, !dbg !3234
  %label_map51 = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 0, !dbg !3236
  %label_map_data53 = getelementptr inbounds %struct.duplicate_eh_regions_data, %struct.duplicate_eh_regions_data* %data, i64 0, i32 1, !dbg !3236
  br label %for.cond37, !dbg !3239

for.cond37:                                       ; preds = %for.inc57, %sw.epilog
  %old_lp.0.in = phi %struct.eh_landing_pad_d** [ %landing_pads, %sw.epilog ], [ %next_lp, %for.inc57 ]
  %old_lp.0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %old_lp.0.in, align 8, !dbg !3240
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %old_lp.0, metadata !3174, metadata !DIExpression()), !dbg !3182
  %tobool38 = icmp eq %struct.eh_landing_pad_d* %old_lp.0, null, !dbg !3241
  br i1 %tobool38, label %for.end58, label %for.body39, !dbg !3241

for.body39:                                       ; preds = %for.cond37
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %old_lp.0, i64 0, i32 2, !dbg !3242
  %19 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !3242
  %cmp40 = icmp eq %union.tree_node* %19, null, !dbg !3244
  br i1 %cmp40, label %for.inc57, label %if.end42, !dbg !3245

if.end42:                                         ; preds = %for.body39
  %call43 = tail call %struct.eh_landing_pad_d* @gen_eh_landing_pad(%struct.eh_region_d* %call) #7, !dbg !3246
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call43, metadata !3175, metadata !DIExpression()), !dbg !3182
  %20 = load %struct.pointer_map_t*, %struct.pointer_map_t** %eh_map, align 8, !dbg !3247
  %21 = bitcast %struct.eh_landing_pad_d* %old_lp.0 to i8*, !dbg !3248
  %call45 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %20, i8* nonnull %21) #6, !dbg !3249
  call void @llvm.dbg.value(metadata i8** %call45, metadata !3177, metadata !DIExpression()), !dbg !3182
  %22 = load i8*, i8** %call45, align 8, !dbg !3250
  %cmp46 = icmp eq i8* %22, null, !dbg !3250
  br i1 %cmp46, label %cond.end49, label %cond.true47, !dbg !3250

cond.true47:                                      ; preds = %if.end42
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 575, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3250
  br label %cond.end49, !dbg !3250

cond.end49:                                       ; preds = %if.end42, %cond.true47
  %23 = bitcast i8** %call45 to %struct.eh_landing_pad_d**, !dbg !3251
  store %struct.eh_landing_pad_d* %call43, %struct.eh_landing_pad_d** %23, align 8, !dbg !3251
  %24 = load %union.tree_node* (%union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, i8*)** %label_map51, align 8, !dbg !3252
  %25 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !3253
  %26 = load i8*, i8** %label_map_data53, align 8, !dbg !3254
  %call54 = tail call %union.tree_node* %24(%union.tree_node* %25, i8* %26) #6, !dbg !3255
  %post_landing_pad55 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call43, i64 0, i32 2, !dbg !3256
  store %union.tree_node* %call54, %union.tree_node** %post_landing_pad55, align 8, !dbg !3257
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call43, i64 0, i32 4, !dbg !3258
  %27 = load i32, i32* %index, align 8, !dbg !3258
  %.cast = bitcast %union.tree_node* %call54 to %struct.tree_label_decl*, !dbg !3259
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %.cast, i64 0, i32 2, !dbg !3259
  store i32 %27, i32* %eh_landing_pad_nr, align 4, !dbg !3260
  br label %for.inc57, !dbg !3261

for.inc57:                                        ; preds = %for.body39, %cond.end49
  %next_lp = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %old_lp.0, i64 0, i32 0, !dbg !3262
  br label %for.cond37, !dbg !3263, !llvm.loop !3264

for.end58:                                        ; preds = %for.cond37
  %use_cxa_end_cleanup = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 9, !dbg !3266
  %28 = load i8, i8* %use_cxa_end_cleanup, align 8, !dbg !3266
  %use_cxa_end_cleanup59 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 9, !dbg !3267
  store i8 %28, i8* %use_cxa_end_cleanup59, align 8, !dbg !3268
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r, i64 0, i32 1, !dbg !3269
  br label %for.cond60, !dbg !3271

for.cond60:                                       ; preds = %for.body62, %for.end58
  %old_r.addr.0.in = phi %struct.eh_region_d** [ %inner, %for.end58 ], [ %next_peer, %for.body62 ]
  %old_r.addr.0 = load %struct.eh_region_d*, %struct.eh_region_d** %old_r.addr.0.in, align 8, !dbg !3272
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %old_r.addr.0, metadata !3172, metadata !DIExpression()), !dbg !3182
  %tobool61 = icmp eq %struct.eh_region_d* %old_r.addr.0, null, !dbg !3273
  br i1 %tobool61, label %for.end64, label %for.body62, !dbg !3273

for.body62:                                       ; preds = %for.cond60
  tail call fastcc void @duplicate_eh_regions_1(%struct.duplicate_eh_regions_data* %data, %struct.eh_region_d* nonnull %old_r.addr.0, %struct.eh_region_d* %call) #7, !dbg !3274
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %old_r.addr.0, i64 0, i32 2, !dbg !3276
  br label %for.cond60, !dbg !3277, !llvm.loop !3278

for.end64:                                        ; preds = %for.cond60
  ret void, !dbg !3280
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @eh_region_outermost(%struct.function* %ifun, %struct.eh_region_d* %region_a, %struct.eh_region_d* %region_b) local_unnamed_addr #5 !dbg !3281 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !3285, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region_a, metadata !3286, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region_b, metadata !3287, metadata !DIExpression()), !dbg !3299
  %eh = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 0, !dbg !3300
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3300
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 1, !dbg !3300
  %1 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !3300
  %tobool = icmp eq %struct.VEC_eh_region_gc* %1, null, !dbg !3300
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3300

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 640, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3300
  %.pre = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3301
  br label %cond.end, !dbg !3300

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.eh_status* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !3301
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 0, !dbg !3301
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !3301
  %tobool2 = icmp eq %struct.eh_region_d* %3, null, !dbg !3301
  br i1 %tobool2, label %cond.true3, label %cond.end5, !dbg !3301

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 641, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3301
  %.pre1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3302
  br label %cond.end5, !dbg !3301

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %4 = phi %struct.eh_status* [ %2, %cond.end ], [ %.pre1, %cond.true3 ], !dbg !3302
  %region_array8 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %4, i64 0, i32 1, !dbg !3302
  %5 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array8, align 8, !dbg !3302
  %tobool9 = icmp eq %struct.VEC_eh_region_gc* %5, null, !dbg !3302
  br i1 %tobool9, label %cond.end14, label %cond.true10, !dbg !3302

cond.true10:                                      ; preds = %cond.end5
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %5, i64 0, i32 0, !dbg !3302
  br label %cond.end14, !dbg !3302

cond.end14:                                       ; preds = %cond.end5, %cond.true10
  %cond15 = phi %struct.VEC_eh_region_base* [ %base, %cond.true10 ], [ null, %cond.end5 ], !dbg !3302
  %call = tail call fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %cond15) #7, !dbg !3302
  %call16 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %call) #6, !dbg !3303
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call16, metadata !3288, metadata !DIExpression()), !dbg !3299
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call16) #6, !dbg !3304
  br label %do.body, !dbg !3305

do.body:                                          ; preds = %do.body, %cond.end14
  %region_b.addr.0 = phi %struct.eh_region_d* [ %region_b, %cond.end14 ], [ %7, %do.body ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region_b.addr.0, metadata !3287, metadata !DIExpression()), !dbg !3299
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region_b.addr.0, i64 0, i32 3, !dbg !3306
  %6 = load i32, i32* %index, align 8, !dbg !3306
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call16, i32 %6) #7, !dbg !3308
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region_b.addr.0, i64 0, i32 0, !dbg !3309
  %7 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !3309
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %7, metadata !3287, metadata !DIExpression()), !dbg !3299
  %tobool17 = icmp eq %struct.eh_region_d* %7, null, !dbg !3310
  br i1 %tobool17, label %do.body18.preheader, label %do.body, !dbg !3310, !llvm.loop !3311

do.body18.preheader:                              ; preds = %do.body
  br label %do.body18, !dbg !3313

do.body18:                                        ; preds = %do.body18.preheader, %if.end
  %region_a.addr.0 = phi %struct.eh_region_d* [ %12, %if.end ], [ %region_a, %do.body18.preheader ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region_a.addr.0, metadata !3286, metadata !DIExpression()), !dbg !3299
  %index19 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region_a.addr.0, i64 0, i32 3, !dbg !3314
  %8 = load i32, i32* %index19, align 8, !dbg !3314
  %div = lshr i32 %8, 6, !dbg !3314
  %idxprom = zext i32 %div to i64, !dbg !3314
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call16, i64 0, i32 3, i64 %idxprom, !dbg !3314
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3314
  %rem = and i32 %8, 63, !dbg !3314
  %sh_prom = zext i32 %rem to i64, !dbg !3314
  %10 = shl i64 1, %sh_prom, !dbg !3314
  %11 = and i64 %9, %10, !dbg !3314
  %tobool21 = icmp eq i64 %11, 0, !dbg !3314
  br i1 %tobool21, label %if.end, label %do.end25, !dbg !3317

if.end:                                           ; preds = %do.body18
  %outer22 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region_a.addr.0, i64 0, i32 0, !dbg !3318
  %12 = load %struct.eh_region_d*, %struct.eh_region_d** %outer22, align 8, !dbg !3318
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %12, metadata !3286, metadata !DIExpression()), !dbg !3299
  %tobool24 = icmp eq %struct.eh_region_d* %12, null, !dbg !3319
  br i1 %tobool24, label %do.end25, label %do.body18, !dbg !3319, !llvm.loop !3320

do.end25:                                         ; preds = %if.end, %do.body18
  %region_a.addr.1 = phi %struct.eh_region_d* [ null, %if.end ], [ %region_a.addr.0, %do.body18 ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region_a.addr.1, metadata !3286, metadata !DIExpression()), !dbg !3299
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call16, i64 0, i32 0, !dbg !3322
  %13 = load i8*, i8** %popcount, align 8, !dbg !3322
  tail call void @free(i8* %13) #6, !dbg !3322
  %14 = bitcast %struct.simple_bitmap_def* %call16 to i8*, !dbg !3322
  tail call void @free(i8* %14) #6, !dbg !3322
  ret %struct.eh_region_d* %region_a.addr.1, !dbg !3323
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %vec_) unnamed_addr #0 !dbg !3324 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !3328, metadata !DIExpression()), !dbg !3329
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !3330
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3330

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !3330
  %0 = load i32, i32* %num, align 8, !dbg !3330
  br label %cond.end, !dbg !3330

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3330
  ret i32 %cond, !dbg !3330
}

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !3331 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !3335, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !3336, metadata !DIExpression()), !dbg !3340
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !3341
  %0 = load i8*, i8** %popcount, align 8, !dbg !3341
  %tobool = icmp eq i8* %0, null, !dbg !3342
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !3343

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !3344
  %.pre2 = zext i32 %.pre to i64, !dbg !3345
  %.pre3 = shl i64 1, %.pre2, !dbg !3345
  %.pre4 = lshr i32 %bitno, 6, !dbg !3346
  %.pre5 = zext i32 %.pre4 to i64, !dbg !3347
  br label %if.end7, !dbg !3343

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !3348
  %idxprom = zext i32 %div to i64, !dbg !3348
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !3348
  %1 = load i64, i64* %arrayidx, align 8, !dbg !3348
  %rem = and i32 %bitno, 63, !dbg !3348
  %sh_prom = zext i32 %rem to i64, !dbg !3348
  %2 = shl i64 1, %sh_prom, !dbg !3349
  %3 = and i64 %1, %2, !dbg !3349
  %tobool1 = icmp eq i64 %3, 0, !dbg !3349
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !3351

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !3352
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !3353
  %inc = add i8 %4, 1, !dbg !3353
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !3353
  br label %if.end7, !dbg !3352

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !3347
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !3345
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !3347
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !3354
  %or = or i64 %5, %shl.pre-phi, !dbg !3354
  store i64 %or, i64* %arrayidx13, align 8, !dbg !3354
  ret void, !dbg !3355
}

declare dso_local void @free(i8*) #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lookup_type_for_runtime(%union.tree_node* %type) local_unnamed_addr #5 !dbg !3356 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3360, metadata !DIExpression()), !dbg !3362
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3363
  %bf.load = load i64, i64* %0, align 8, !dbg !3363
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3365
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !3365
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3366

if.end:                                           ; preds = %entry
  %1 = load %struct.htab*, %struct.htab** @type_to_runtime_map, align 8, !dbg !3367
  %2 = bitcast %union.tree_node* %type to i8*, !dbg !3368
  %3 = ptrtoint %union.tree_node* %type to i64, !dbg !3369
  %4 = trunc i64 %3 to i32, !dbg !3369
  %conv = and i32 %4, 262143, !dbg !3369
  %call = tail call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* %2, i32 %conv, i32 0) #6, !dbg !3370
  %5 = bitcast i8** %call to %struct.tree_list**, !dbg !3371
  call void @llvm.dbg.value(metadata %struct.tree_list** %5, metadata !3361, metadata !DIExpression()), !dbg !3362
  %6 = load %struct.tree_list*, %struct.tree_list** %5, align 8, !dbg !3371
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %6, i64 0, i32 2, !dbg !3371
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3371
  br label %cleanup, !dbg !3372

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %7, %if.end ], [ %type, %entry ], !dbg !3362
  ret %union.tree_node* %retval.0, !dbg !3373
}

; Function Attrs: nounwind uwtable
define dso_local void @assign_filter_values() local_unnamed_addr #5 !dbg !3374 {
entry:
  %r = alloca %struct.eh_region_d*, align 8
  %0 = bitcast %struct.eh_region_d** %r to i8*, !dbg !3399
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3399
  %call = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 16) #7, !dbg !3400
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3401
  %eh = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !3402
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3402
  %ttype_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 4, !dbg !3403
  store %struct.VEC_tree_gc* %call, %struct.VEC_tree_gc** %ttype_data, align 8, !dbg !3404
  %3 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !3405
  %tobool = icmp eq i8 %3, 0, !dbg !3407
  br i1 %tobool, label %if.else, label %if.then, !dbg !3408

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 64) #7, !dbg !3409
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3410
  %eh3 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 0, !dbg !3411
  %5 = load %struct.eh_status*, %struct.eh_status** %eh3, align 8, !dbg !3411
  %arm_eabi = getelementptr inbounds %struct.eh_status, %struct.eh_status* %5, i64 0, i32 5, i32 0, !dbg !3412
  store %struct.VEC_tree_gc* %call1, %struct.VEC_tree_gc** %arm_eabi, align 8, !dbg !3413
  br label %if.end, !dbg !3410

if.else:                                          ; preds = %entry
  %call4 = tail call fastcc %struct.VEC_uchar_gc* @VEC_uchar_gc_alloc(i32 64) #7, !dbg !3414
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3415
  %eh6 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 0, !dbg !3416
  %7 = load %struct.eh_status*, %struct.eh_status** %eh6, align 8, !dbg !3416
  %ehspec_data7 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %7, i64 0, i32 5, !dbg !3417
  %other = bitcast %union.eh_status_u* %ehspec_data7 to %struct.VEC_uchar_gc**, !dbg !3418
  store %struct.VEC_uchar_gc* %call4, %struct.VEC_uchar_gc** %other, align 8, !dbg !3419
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call8 = tail call %struct.htab* @htab_create(i64 31, i32 (i8*)* nonnull @ttypes_filter_hash, i32 (i8*, i8*)* nonnull @ttypes_filter_eq, void (i8*)* nonnull @free) #6, !dbg !3420
  call void @llvm.dbg.value(metadata %struct.htab* %call8, metadata !3377, metadata !DIExpression()), !dbg !3421
  %call9 = tail call %struct.htab* @htab_create(i64 31, i32 (i8*)* nonnull @ehspec_filter_hash, i32 (i8*, i8*)* nonnull @ehspec_filter_eq, void (i8*)* nonnull @free) #6, !dbg !3422
  call void @llvm.dbg.value(metadata %struct.htab* %call9, metadata !3378, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.value(metadata i32 1, metadata !3376, metadata !DIExpression()), !dbg !3421
  br label %for.cond, !dbg !3423

for.cond:                                         ; preds = %for.inc51, %if.end
  %i.0 = phi i32 [ 1, %if.end ], [ %inc, %for.inc51 ], !dbg !3424
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3376, metadata !DIExpression()), !dbg !3421
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3425
  %eh11 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 0, !dbg !3425
  %9 = load %struct.eh_status*, %struct.eh_status** %eh11, align 8, !dbg !3425
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %9, i64 0, i32 1, !dbg !3425
  %10 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !3425
  %tobool12 = icmp eq %struct.VEC_eh_region_gc* %10, null, !dbg !3425
  br i1 %tobool12, label %cond.end, label %cond.true, !dbg !3425

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %10, i64 0, i32 0, !dbg !3425
  br label %cond.end, !dbg !3425

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3425
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !3379, metadata !DIExpression(DW_OP_deref)), !dbg !3421
  %call16 = call fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %cond, i32 %i.0, %struct.eh_region_d** nonnull %r) #7, !dbg !3425
  %tobool17 = icmp eq i32 %call16, 0, !dbg !3426
  br i1 %tobool17, label %for.end52, label %for.body, !dbg !3426

for.body:                                         ; preds = %cond.end
  %11 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !3427
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %11, metadata !3379, metadata !DIExpression()), !dbg !3421
  %cmp = icmp eq %struct.eh_region_d* %11, null, !dbg !3429
  br i1 %cmp, label %for.inc51, label %if.end19, !dbg !3430

if.end19:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %11, metadata !3379, metadata !DIExpression()), !dbg !3421
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %11, i64 0, i32 4, !dbg !3431
  %12 = load i32, i32* %type, align 4, !dbg !3431
  switch i32 %12, label %for.inc51 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb45
  ], !dbg !3432

sw.bb:                                            ; preds = %if.end19
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %11, metadata !3379, metadata !DIExpression()), !dbg !3421
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %11, i64 0, i32 5, !dbg !3433
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !3434
  br label %for.cond20, !dbg !3435

for.cond20:                                       ; preds = %for.inc43, %sw.bb
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb ], [ %next_catch, %for.inc43 ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !3436
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !3380, metadata !DIExpression()), !dbg !3421
  %tobool21 = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !3437
  br i1 %tobool21, label %for.inc51.loopexit, label %for.body22, !dbg !3437

for.body22:                                       ; preds = %for.cond20
  %filter_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 3, !dbg !3438
  store %union.tree_node* null, %union.tree_node** %filter_list, align 8, !dbg !3439
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 2, !dbg !3440
  %13 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !3440
  %cmp23 = icmp eq %union.tree_node* %13, null, !dbg !3441
  br i1 %cmp23, label %if.else34, label %if.then24, !dbg !3442

if.then24:                                        ; preds = %for.body22
  br label %for.cond26, !dbg !3443

for.cond26:                                       ; preds = %for.body28, %if.then24
  %tp_node.0 = phi %union.tree_node* [ %13, %if.then24 ], [ %tp_node.0.pre, %for.body28 ], !dbg !3444
  call void @llvm.dbg.value(metadata %union.tree_node* %tp_node.0, metadata !3381, metadata !DIExpression()), !dbg !3444
  %tobool27 = icmp eq %union.tree_node* %tp_node.0, null, !dbg !3445
  br i1 %tobool27, label %for.inc43.loopexit, label %for.body28, !dbg !3445

for.body28:                                       ; preds = %for.cond26
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %tp_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3446
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !3446
  %call29 = call fastcc i32 @add_ttypes_entry(%struct.htab* %call8, %union.tree_node* %15) #7, !dbg !3447
  call void @llvm.dbg.value(metadata i32 %call29, metadata !3391, metadata !DIExpression()), !dbg !3448
  %conv = sext i32 %call29 to i64, !dbg !3449
  %call30 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #6, !dbg !3450
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3395, metadata !DIExpression()), !dbg !3448
  %16 = load %union.tree_node*, %union.tree_node** %filter_list, align 8, !dbg !3451
  %call32 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call30, %union.tree_node* %16) #6, !dbg !3451
  store %union.tree_node* %call32, %union.tree_node** %filter_list, align 8, !dbg !3452
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tp_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3453
  %tp_node.0.pre = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3444
  br label %for.cond26, !dbg !3454, !llvm.loop !3455

if.else34:                                        ; preds = %for.body22
  %call36 = call fastcc i32 @add_ttypes_entry(%struct.htab* %call8, %union.tree_node* null) #7, !dbg !3457
  call void @llvm.dbg.value(metadata i32 %call36, metadata !3396, metadata !DIExpression()), !dbg !3458
  %conv38 = sext i32 %call36 to i64, !dbg !3459
  %call39 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv38) #6, !dbg !3460
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !3398, metadata !DIExpression()), !dbg !3458
  %call40 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call39, %union.tree_node* null) #6, !dbg !3461
  store %union.tree_node* %call40, %union.tree_node** %filter_list, align 8, !dbg !3462
  br label %for.inc43

for.inc43.loopexit:                               ; preds = %for.cond26
  br label %for.inc43, !dbg !3463

for.inc43:                                        ; preds = %for.inc43.loopexit, %if.else34
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !3463
  br label %for.cond20, !dbg !3464, !llvm.loop !3465

sw.bb45:                                          ; preds = %if.end19
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %11, metadata !3379, metadata !DIExpression()), !dbg !3421
  %type_list47 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %11, i64 0, i32 5, i32 0, i32 0, !dbg !3467
  %17 = load %union.tree_node*, %union.tree_node** %type_list47, align 8, !dbg !3467
  %call48 = call fastcc i32 @add_ehspec_entry(%struct.htab* %call9, %struct.htab* %call8, %union.tree_node* %17) #7, !dbg !3468
  %18 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !3469
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %18, metadata !3379, metadata !DIExpression()), !dbg !3421
  %filter = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %18, i64 0, i32 5, i32 0, i32 2, !dbg !3470
  store i32 %call48, i32* %filter, align 8, !dbg !3471
  br label %for.inc51, !dbg !3472

for.inc51.loopexit:                               ; preds = %for.cond20
  br label %for.inc51, !dbg !3473

for.inc51:                                        ; preds = %for.inc51.loopexit, %sw.bb45, %if.end19, %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3473
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3376, metadata !DIExpression()), !dbg !3421
  br label %for.cond, !dbg !3474, !llvm.loop !3475

for.end52:                                        ; preds = %cond.end
  call void @htab_delete(%struct.htab* %call8) #6, !dbg !3477
  call void @htab_delete(%struct.htab* %call9) #6, !dbg !3478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3479
  ret void, !dbg !3479
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3480 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3484, metadata !DIExpression()), !dbg !3485
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !3486
  %0 = bitcast i8* %call to %struct.VEC_tree_gc*, !dbg !3486
  ret %struct.VEC_tree_gc* %0, !dbg !3486
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_uchar_gc* @VEC_uchar_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3487 {
entry:
  call void @llvm.dbg.value(metadata i32 64, metadata !3491, metadata !DIExpression()), !dbg !3492
  %call = tail call i8* @vec_gc_o_reserve_exact(i8* null, i32 64, i64 8, i64 1) #6, !dbg !3493
  %0 = bitcast i8* %call to %struct.VEC_uchar_gc*, !dbg !3493
  ret %struct.VEC_uchar_gc* %0, !dbg !3493
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @ttypes_filter_hash(i8* %pentry) #5 !dbg !3494 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3496, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3497, metadata !DIExpression()), !dbg !3498
  %0 = bitcast i8* %pentry to i64*, !dbg !3499
  %1 = load i64, i64* %0, align 8, !dbg !3499
  %2 = trunc i64 %1 to i32, !dbg !3499
  %conv = and i32 %2, 262143, !dbg !3499
  ret i32 %conv, !dbg !3500
}

; Function Attrs: nounwind uwtable
define internal i32 @ttypes_filter_eq(i8* %pentry, i8* %pdata) #5 !dbg !3501 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3503, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* %pdata, metadata !3504, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3505, metadata !DIExpression()), !dbg !3508
  %0 = bitcast i8* %pdata to %union.tree_node*, !dbg !3509
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3507, metadata !DIExpression()), !dbg !3508
  %t = bitcast i8* %pentry to %union.tree_node**, !dbg !3510
  %1 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !3510
  %cmp = icmp eq %union.tree_node* %1, %0, !dbg !3511
  %conv = zext i1 %cmp to i32, !dbg !3511
  ret i32 %conv, !dbg !3512
}

; Function Attrs: nounwind uwtable
define internal i32 @ehspec_filter_hash(i8* %pentry) #5 !dbg !3513 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3515, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3516, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i32 0, metadata !3517, metadata !DIExpression()), !dbg !3519
  %t = bitcast i8* %pentry to %union.tree_node**, !dbg !3520
  br label %for.cond, !dbg !3522

for.cond:                                         ; preds = %for.body, %entry
  %h.0 = phi i32 [ 0, %entry ], [ %conv4, %for.body ], !dbg !3519
  %list.0.in = phi %union.tree_node** [ %t, %entry ], [ %chain, %for.body ]
  %list.0 = load %union.tree_node*, %union.tree_node** %list.0.in, align 8, !dbg !3523
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !3518, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i32 %h.0, metadata !3517, metadata !DIExpression()), !dbg !3519
  %tobool = icmp eq %union.tree_node* %list.0, null, !dbg !3524
  br i1 %tobool, label %for.end, label %for.body, !dbg !3524

for.body:                                         ; preds = %for.cond
  %shl = shl i32 %h.0, 5, !dbg !3525
  %shr = lshr i32 %h.0, 27, !dbg !3527
  %add = or i32 %shl, %shr, !dbg !3528
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3529
  %1 = bitcast %union.tree_node** %0 to i64*, !dbg !3529
  %2 = load i64, i64* %1, align 8, !dbg !3529
  %3 = trunc i64 %2 to i32, !dbg !3530
  %4 = and i32 %3, 262143, !dbg !3530
  %conv4 = add i32 %add, %4, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %conv4, metadata !3517, metadata !DIExpression()), !dbg !3519
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3531
  br label %for.cond, !dbg !3532, !llvm.loop !3533

for.end:                                          ; preds = %for.cond
  %h.0.lcssa = phi i32 [ %h.0, %for.cond ], !dbg !3519
  call void @llvm.dbg.value(metadata i32 %h.0.lcssa, metadata !3517, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i32 %h.0.lcssa, metadata !3517, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i32 %h.0.lcssa, metadata !3517, metadata !DIExpression()), !dbg !3519
  ret i32 %h.0.lcssa, !dbg !3535
}

; Function Attrs: nounwind uwtable
define internal i32 @ehspec_filter_eq(i8* %pentry, i8* %pdata) #5 !dbg !3536 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3538, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i8* %pdata, metadata !3539, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !3540, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i8* %pdata, metadata !3541, metadata !DIExpression()), !dbg !3542
  %t = bitcast i8* %pentry to %union.tree_node**, !dbg !3543
  %0 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !3543
  %t2 = bitcast i8* %pdata to %union.tree_node**, !dbg !3544
  %1 = load %union.tree_node*, %union.tree_node** %t2, align 8, !dbg !3544
  %call = tail call i32 @type_list_equal(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !3545
  ret i32 %call, !dbg !3546
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %vec_, i32 %ix_, %struct.eh_region_d** %ptr) unnamed_addr #0 !dbg !3547 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !3551, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3552, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %ptr, metadata !3553, metadata !DIExpression()), !dbg !3554
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !3555
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3555

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !3555
  %0 = load i32, i32* %num, align 8, !dbg !3555
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3555
  br i1 %cmp, label %if.then, label %if.else, !dbg !3557

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3558
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3558
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !3558
  br label %return, !dbg !3558

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3560

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_region_d* [ null, %if.else ], [ %1, %if.then ], !dbg !3562
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3562
  store %struct.eh_region_d* %storemerge, %struct.eh_region_d** %ptr, align 8, !dbg !3562
  ret i32 %retval.0, !dbg !3557
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_ttypes_entry(%struct.htab* %ttypes_hash, %union.tree_node* %type) unnamed_addr #5 !dbg !3563 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %ttypes_hash, metadata !3567, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3568, metadata !DIExpression()), !dbg !3571
  %0 = bitcast %union.tree_node* %type to i8*, !dbg !3572
  %1 = ptrtoint %union.tree_node* %type to i64, !dbg !3573
  %2 = trunc i64 %1 to i32, !dbg !3573
  %conv = and i32 %2, 262143, !dbg !3573
  %call = tail call i8** @htab_find_slot_with_hash(%struct.htab* %ttypes_hash, i8* %0, i32 %conv, i32 1) #6, !dbg !3574
  %3 = bitcast i8** %call to %struct.ttypes_filter**, !dbg !3575
  call void @llvm.dbg.value(metadata %struct.ttypes_filter** %3, metadata !3569, metadata !DIExpression()), !dbg !3571
  %4 = load %struct.ttypes_filter*, %struct.ttypes_filter** %3, align 8, !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ttypes_filter* %4, metadata !3570, metadata !DIExpression()), !dbg !3571
  %cmp = icmp eq %struct.ttypes_filter* %4, null, !dbg !3578
  br i1 %cmp, label %if.then, label %if.end, !dbg !3579

if.then:                                          ; preds = %entry
  %call2 = tail call i8* @xmalloc(i64 16) #6, !dbg !3580
  %5 = bitcast i8* %call2 to %struct.ttypes_filter*, !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ttypes_filter* %5, metadata !3570, metadata !DIExpression()), !dbg !3571
  %t = bitcast i8* %call2 to %union.tree_node**, !dbg !3582
  store %union.tree_node* %type, %union.tree_node** %t, align 8, !dbg !3583
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3584
  %eh = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 0, !dbg !3584
  %7 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3584
  %ttype_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %7, i64 0, i32 4, !dbg !3584
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ttype_data, align 8, !dbg !3584
  %tobool = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !3584
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3584

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !3584
  br label %cond.end, !dbg !3584

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.then ], !dbg !3584
  %call6 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3584
  %add = add i32 %call6, 1, !dbg !3585
  %filter = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !3586
  %9 = bitcast i8* %filter to i32*, !dbg !3586
  store i32 %add, i32* %9, align 8, !dbg !3587
  store i8* %call2, i8** %call, align 8, !dbg !3588
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3589
  %eh8 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 0, !dbg !3589
  %11 = load %struct.eh_status*, %struct.eh_status** %eh8, align 8, !dbg !3589
  %ttype_data9 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %11, i64 0, i32 4, !dbg !3589
  %call10 = tail call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %ttype_data9, %union.tree_node* %type) #7, !dbg !3589
  br label %if.end, !dbg !3590

if.end:                                           ; preds = %cond.end, %entry
  %n.0 = phi %struct.ttypes_filter* [ %5, %cond.end ], [ %4, %entry ], !dbg !3591
  call void @llvm.dbg.value(metadata %struct.ttypes_filter* %n.0, metadata !3570, metadata !DIExpression()), !dbg !3571
  %filter11 = getelementptr inbounds %struct.ttypes_filter, %struct.ttypes_filter* %n.0, i64 0, i32 1, !dbg !3592
  %12 = load i32, i32* %filter11, align 8, !dbg !3592
  ret i32 %12, !dbg !3593
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_ehspec_entry(%struct.htab* %ehspec_hash, %struct.htab* %ttypes_hash, %union.tree_node* %list) unnamed_addr #5 !dbg !3594 {
entry:
  %dummy = alloca %struct.ttypes_filter, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %ehspec_hash, metadata !3598, metadata !DIExpression()), !dbg !3607
  call void @llvm.dbg.value(metadata %struct.htab* %ttypes_hash, metadata !3599, metadata !DIExpression()), !dbg !3607
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !3600, metadata !DIExpression()), !dbg !3607
  %0 = bitcast %struct.ttypes_filter* %dummy to i8*, !dbg !3608
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3608
  %t = getelementptr inbounds %struct.ttypes_filter, %struct.ttypes_filter* %dummy, i64 0, i32 0, !dbg !3609
  store %union.tree_node* %list, %union.tree_node** %t, align 8, !dbg !3610
  %call = call i8** @htab_find_slot(%struct.htab* %ehspec_hash, i8* nonnull %0, i32 1) #6, !dbg !3611
  %1 = bitcast i8** %call to %struct.ttypes_filter**, !dbg !3612
  call void @llvm.dbg.value(metadata %struct.ttypes_filter** %1, metadata !3601, metadata !DIExpression()), !dbg !3607
  %2 = load %struct.ttypes_filter*, %struct.ttypes_filter** %1, align 8, !dbg !3613
  call void @llvm.dbg.value(metadata %struct.ttypes_filter* %2, metadata !3602, metadata !DIExpression()), !dbg !3607
  %cmp = icmp eq %struct.ttypes_filter* %2, null, !dbg !3614
  br i1 %cmp, label %if.then, label %if.end56, !dbg !3615

if.then:                                          ; preds = %entry
  %3 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !3616
  %tobool = icmp eq i8 %3, 0, !dbg !3618
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3619
  %eh = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 0, !dbg !3619
  %5 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3619
  %ehspec_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %5, i64 0, i32 5, !dbg !3619
  br i1 %tobool, label %if.else, label %if.then1, !dbg !3620

if.then1:                                         ; preds = %if.then
  %arm_eabi = getelementptr inbounds %union.eh_status_u, %union.eh_status_u* %ehspec_data, i64 0, i32 0, !dbg !3621
  %6 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arm_eabi, align 8, !dbg !3621
  %tobool2 = icmp eq %struct.VEC_tree_gc* %6, null, !dbg !3621
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !3621

cond.true:                                        ; preds = %if.then1
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %6, i64 0, i32 0, !dbg !3621
  br label %cond.end, !dbg !3621

cond.end:                                         ; preds = %if.then1, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.then1 ], !dbg !3621
  %call7 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %call7, metadata !3604, metadata !DIExpression()), !dbg !3622
  br label %if.end, !dbg !3623

if.else:                                          ; preds = %if.then
  %other = bitcast %union.eh_status_u* %ehspec_data to %struct.VEC_uchar_gc**, !dbg !3624
  %7 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %other, align 8, !dbg !3624
  %tobool11 = icmp eq %struct.VEC_uchar_gc* %7, null, !dbg !3624
  br i1 %tobool11, label %cond.end19, label %cond.true12, !dbg !3624

cond.true12:                                      ; preds = %if.else
  %base17 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %7, i64 0, i32 0, !dbg !3624
  br label %cond.end19, !dbg !3624

cond.end19:                                       ; preds = %if.else, %cond.true12
  %cond20 = phi %struct.VEC_uchar_base* [ %base17, %cond.true12 ], [ null, %if.else ], !dbg !3624
  %call21 = call fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %cond20) #7, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %call21, metadata !3604, metadata !DIExpression()), !dbg !3622
  br label %if.end

if.end:                                           ; preds = %cond.end19, %cond.end
  %len.0 = phi i32 [ %call7, %cond.end ], [ %call21, %cond.end19 ], !dbg !3619
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !3604, metadata !DIExpression()), !dbg !3622
  %call22 = call i8* @xmalloc(i64 16) #6, !dbg !3625
  call void @llvm.dbg.value(metadata %struct.ttypes_filter* %18, metadata !3602, metadata !DIExpression()), !dbg !3607
  %t23 = bitcast i8* %call22 to %union.tree_node**, !dbg !3626
  store %union.tree_node* %list, %union.tree_node** %t23, align 8, !dbg !3627
  %8 = xor i32 %len.0, -1, !dbg !3628
  %filter = getelementptr inbounds i8, i8* %call22, i64 8, !dbg !3629
  %9 = bitcast i8* %filter to i32*, !dbg !3629
  store i32 %8, i32* %9, align 8, !dbg !3630
  store i8* %call22, i8** %call, align 8, !dbg !3631
  br label %for.cond, !dbg !3632

for.cond:                                         ; preds = %for.inc, %if.end
  %list.addr.0 = phi %union.tree_node* [ %list, %if.end ], [ %17, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !3600, metadata !DIExpression()), !dbg !3607
  %tobool24 = icmp eq %union.tree_node* %list.addr.0, null, !dbg !3633
  %10 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !3622
  %tobool25 = icmp ne i8 %10, 0, !dbg !3622
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3622
  %eh28 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 0, !dbg !3622
  %12 = load %struct.eh_status*, %struct.eh_status** %eh28, align 8, !dbg !3622
  %ehspec_data29 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %12, i64 0, i32 5, !dbg !3622
  br i1 %tobool24, label %for.end, label %for.body, !dbg !3633

for.body:                                         ; preds = %for.cond
  br i1 %tobool25, label %if.then26, label %if.else33, !dbg !3635

if.then26:                                        ; preds = %for.body
  %arm_eabi30 = getelementptr inbounds %union.eh_status_u, %union.eh_status_u* %ehspec_data29, i64 0, i32 0, !dbg !3638
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3638
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !3638
  %call32 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %arm_eabi30, %union.tree_node* %14) #7, !dbg !3638
  br label %for.inc, !dbg !3638

if.else33:                                        ; preds = %for.body
  %other37 = bitcast %union.eh_status_u* %ehspec_data29 to %struct.VEC_uchar_gc**, !dbg !3640
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3642
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !3642
  %call40 = call fastcc i32 @add_ttypes_entry(%struct.htab* %ttypes_hash, %union.tree_node* %16) #7, !dbg !3643
  call fastcc void @push_uleb128(%struct.VEC_uchar_gc** nonnull %other37, i32 %call40) #7, !dbg !3644
  br label %for.inc

for.inc:                                          ; preds = %if.then26, %if.else33
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %list.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3645
  %17 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3645
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3600, metadata !DIExpression()), !dbg !3607
  br label %for.cond, !dbg !3646, !llvm.loop !3647

for.end:                                          ; preds = %for.cond
  %tobool25.lcssa = phi i1 [ %tobool25, %for.cond ], !dbg !3622
  %ehspec_data29.lcssa = phi %union.eh_status_u* [ %ehspec_data29, %for.cond ], !dbg !3622
  %18 = bitcast i8* %call22 to %struct.ttypes_filter*, !dbg !3625
  br i1 %tobool25.lcssa, label %if.then43, label %if.else49, !dbg !3649

if.then43:                                        ; preds = %for.end
  %arm_eabi47 = getelementptr inbounds %union.eh_status_u, %union.eh_status_u* %ehspec_data29.lcssa, i64 0, i32 0, !dbg !3650
  %call48 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %arm_eabi47, %union.tree_node* null) #7, !dbg !3650
  br label %if.end56, !dbg !3650

if.else49:                                        ; preds = %for.end
  %other53 = bitcast %union.eh_status_u* %ehspec_data29.lcssa to %struct.VEC_uchar_gc**, !dbg !3652
  %call54 = call fastcc i8* @VEC_uchar_gc_safe_push(%struct.VEC_uchar_gc** nonnull %other53, i8 zeroext 0) #7, !dbg !3652
  br label %if.end56

if.end56:                                         ; preds = %if.then43, %if.else49, %entry
  %n.0 = phi %struct.ttypes_filter* [ %2, %entry ], [ %18, %if.else49 ], [ %18, %if.then43 ], !dbg !3653
  call void @llvm.dbg.value(metadata %struct.ttypes_filter* %n.0, metadata !3602, metadata !DIExpression()), !dbg !3607
  %filter57 = getelementptr inbounds %struct.ttypes_filter, %struct.ttypes_filter* %n.0, i64 0, i32 1, !dbg !3654
  %19 = load i32, i32* %filter57, align 8, !dbg !3654
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3655
  ret i32 %19, !dbg !3656
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sjlj_emit_function_exit_after(%struct.rtx_def* %after) local_unnamed_addr #5 !dbg !3657 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !3661, metadata !DIExpression()), !dbg !3662
  store %struct.rtx_def* %after, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 4), align 8, !dbg !3663
  ret void, !dbg !3664
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_eh() #5 !dbg !3665 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3666
  %eh = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 0, !dbg !3667
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3667
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 0, !dbg !3668
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !3668
  %cmp = icmp ne %struct.eh_region_d* %2, null, !dbg !3669
  %conv1 = zext i1 %cmp to i8, !dbg !3666
  ret i8 %conv1, !dbg !3670
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_eh() #5 !dbg !3671 {
entry:
  tail call fastcc void @finish_eh_generation() #7, !dbg !3672
  %call = tail call zeroext i8 @cleanup_cfg(i32 16) #6, !dbg !3673
  ret i32 0, !dbg !3674
}

; Function Attrs: nounwind uwtable
define dso_local void @remove_eh_landing_pad(%struct.eh_landing_pad_d* %lp) local_unnamed_addr #5 !dbg !3675 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp, metadata !3679, metadata !DIExpression()), !dbg !3681
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 1, !dbg !3682
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !3682
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %0, i64 0, i32 6, !dbg !3684
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %landing_pads, metadata !3680, metadata !DIExpression()), !dbg !3681
  br label %for.cond, !dbg !3685

for.cond:                                         ; preds = %for.inc, %entry
  %pp.0 = phi %struct.eh_landing_pad_d** [ %landing_pads, %entry ], [ %next_lp, %for.inc ], !dbg !3686
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0, metadata !3680, metadata !DIExpression()), !dbg !3681
  %1 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %pp.0, align 8, !dbg !3687
  %cmp = icmp eq %struct.eh_landing_pad_d* %1, %lp, !dbg !3689
  br i1 %cmp, label %for.end, label %for.inc, !dbg !3690

for.inc:                                          ; preds = %for.cond
  %next_lp = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %1, i64 0, i32 0, !dbg !3691
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %next_lp, metadata !3680, metadata !DIExpression()), !dbg !3681
  br label %for.cond, !dbg !3692, !llvm.loop !3693

for.end:                                          ; preds = %for.cond
  %pp.0.lcssa = phi %struct.eh_landing_pad_d** [ %pp.0, %for.cond ], !dbg !3686
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0.lcssa, metadata !3680, metadata !DIExpression()), !dbg !3681
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0.lcssa, metadata !3680, metadata !DIExpression()), !dbg !3681
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0.lcssa, metadata !3680, metadata !DIExpression()), !dbg !3681
  %2 = bitcast %struct.eh_landing_pad_d* %lp to i64*, !dbg !3695
  %3 = load i64, i64* %2, align 8, !dbg !3695
  %4 = bitcast %struct.eh_landing_pad_d** %pp.0.lcssa to i64*, !dbg !3696
  store i64 %3, i64* %4, align 8, !dbg !3696
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 2, !dbg !3697
  %5 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !3697
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !3699
  br i1 %tobool, label %if.end, label %if.then, !dbg !3700

if.then:                                          ; preds = %for.end
  %6 = bitcast %union.tree_node* %5 to %struct.tree_label_decl*, !dbg !3700
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %6, i64 0, i32 2, !dbg !3701
  store i32 0, i32* %eh_landing_pad_nr, align 4, !dbg !3702
  br label %if.end, !dbg !3701

if.end:                                           ; preds = %for.end, %if.then
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3703
  %eh = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 0, !dbg !3703
  %8 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3703
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %8, i64 0, i32 2, !dbg !3703
  %9 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3703
  %tobool3 = icmp eq %struct.VEC_eh_landing_pad_gc* %9, null, !dbg !3703
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3703

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %9, i64 0, i32 0, !dbg !3703
  br label %cond.end, !dbg !3703

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3703
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 4, !dbg !3703
  %10 = load i32, i32* %index, align 8, !dbg !3703
  %call = tail call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_replace(%struct.VEC_eh_landing_pad_base* %cond, i32 %10, %struct.eh_landing_pad_d* null) #7, !dbg !3703
  ret void, !dbg !3704
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_replace(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_, %struct.eh_landing_pad_d* %obj_) unnamed_addr #0 !dbg !3705 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !3710, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3711, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* null, metadata !3712, metadata !DIExpression()), !dbg !3714
  %idxprom = zext i32 %ix_ to i64, !dbg !3715
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3715
  %0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !3715
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %0, metadata !3713, metadata !DIExpression()), !dbg !3714
  store %struct.eh_landing_pad_d* null, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !3715
  ret %struct.eh_landing_pad_d* %0, !dbg !3715
}

; Function Attrs: nounwind uwtable
define dso_local void @remove_eh_handler(%struct.eh_region_d* %region) local_unnamed_addr #5 !dbg !3716 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !3720, metadata !DIExpression()), !dbg !3726
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 6, !dbg !3727
  br label %for.cond, !dbg !3729

for.cond:                                         ; preds = %cond.end, %entry
  %lp.0.in = phi %struct.eh_landing_pad_d** [ %landing_pads, %entry ], [ %next_lp, %cond.end ]
  %lp.0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp.0.in, align 8, !dbg !3730
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.0, metadata !3725, metadata !DIExpression()), !dbg !3726
  %tobool = icmp eq %struct.eh_landing_pad_d* %lp.0, null, !dbg !3731
  br i1 %tobool, label %for.end, label %for.body, !dbg !3731

for.body:                                         ; preds = %for.cond
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 2, !dbg !3732
  %0 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !3732
  %tobool1 = icmp eq %union.tree_node* %0, null, !dbg !3736
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3737

if.then:                                          ; preds = %for.body
  %1 = bitcast %union.tree_node* %0 to %struct.tree_label_decl*, !dbg !3737
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %1, i64 0, i32 2, !dbg !3738
  store i32 0, i32* %eh_landing_pad_nr, align 4, !dbg !3739
  br label %if.end, !dbg !3738

if.end:                                           ; preds = %for.body, %if.then
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3740
  %eh = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 0, !dbg !3740
  %3 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3740
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %3, i64 0, i32 2, !dbg !3740
  %4 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3740
  %tobool3 = icmp eq %struct.VEC_eh_landing_pad_gc* %4, null, !dbg !3740
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3740

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %4, i64 0, i32 0, !dbg !3740
  br label %cond.end, !dbg !3740

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3740
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 4, !dbg !3740
  %5 = load i32, i32* %index, align 8, !dbg !3740
  %call = tail call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_replace(%struct.VEC_eh_landing_pad_base* %cond, i32 %5, %struct.eh_landing_pad_d* null) #7, !dbg !3740
  %next_lp = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 0, !dbg !3741
  br label %for.cond, !dbg !3742, !llvm.loop !3743

for.end:                                          ; preds = %for.cond
  %outer7 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 0, !dbg !3745
  %6 = load %struct.eh_region_d*, %struct.eh_region_d** %outer7, align 8, !dbg !3745
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %6, metadata !3724, metadata !DIExpression()), !dbg !3726
  %tobool8 = icmp eq %struct.eh_region_d* %6, null, !dbg !3746
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !3748

if.then9:                                         ; preds = %for.end
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %6, i64 0, i32 1, !dbg !3749
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %inner, metadata !3722, metadata !DIExpression()), !dbg !3726
  br label %if.end12, !dbg !3750

if.else:                                          ; preds = %for.end
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3751
  %eh11 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 0, !dbg !3752
  %8 = load %struct.eh_status*, %struct.eh_status** %eh11, align 8, !dbg !3752
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %8, i64 0, i32 0, !dbg !3753
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %region_tree, metadata !3722, metadata !DIExpression()), !dbg !3726
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  %pp_start.0 = phi %struct.eh_region_d** [ %inner, %if.then9 ], [ %region_tree, %if.else ], !dbg !3754
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pp_start.0, metadata !3722, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pp_start.0, metadata !3721, metadata !DIExpression()), !dbg !3726
  br label %for.cond13, !dbg !3755

for.cond13:                                       ; preds = %for.inc15, %if.end12
  %p.0.in = phi %struct.eh_region_d** [ %pp_start.0, %if.end12 ], [ %next_peer, %for.inc15 ]
  %pp.0 = phi %struct.eh_region_d** [ %pp_start.0, %if.end12 ], [ %next_peer, %for.inc15 ], !dbg !3757
  %p.0 = load %struct.eh_region_d*, %struct.eh_region_d** %p.0.in, align 8, !dbg !3757
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pp.0, metadata !3721, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %p.0, metadata !3723, metadata !DIExpression()), !dbg !3726
  %cmp = icmp eq %struct.eh_region_d* %p.0, %region, !dbg !3758
  br i1 %cmp, label %for.end16, label %for.inc15, !dbg !3760

for.inc15:                                        ; preds = %for.cond13
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %p.0, i64 0, i32 2, !dbg !3761
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %next_peer, metadata !3721, metadata !DIExpression()), !dbg !3726
  br label %for.cond13, !dbg !3762, !llvm.loop !3763

for.end16:                                        ; preds = %for.cond13
  %pp.0.lcssa = phi %struct.eh_region_d** [ %pp.0, %for.cond13 ], !dbg !3757
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pp.0.lcssa, metadata !3721, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pp.0.lcssa, metadata !3721, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pp.0.lcssa, metadata !3721, metadata !DIExpression()), !dbg !3726
  %inner17 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 1, !dbg !3765
  %9 = load %struct.eh_region_d*, %struct.eh_region_d** %inner17, align 8, !dbg !3765
  %tobool18 = icmp eq %struct.eh_region_d* %9, null, !dbg !3767
  br i1 %tobool18, label %if.end24, label %if.then19, !dbg !3768

if.then19:                                        ; preds = %for.end16
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %9, metadata !3723, metadata !DIExpression()), !dbg !3726
  store %struct.eh_region_d* %9, %struct.eh_region_d** %pp.0.lcssa, align 8, !dbg !3769
  br label %do.body, !dbg !3771

do.body:                                          ; preds = %do.body, %if.then19
  %p.1 = phi %struct.eh_region_d* [ %9, %if.then19 ], [ %10, %do.body ], !dbg !3772
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %p.1, metadata !3723, metadata !DIExpression()), !dbg !3726
  %outer21 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %p.1, i64 0, i32 0, !dbg !3773
  store %struct.eh_region_d* %6, %struct.eh_region_d** %outer21, align 8, !dbg !3775
  %next_peer22 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %p.1, i64 0, i32 2, !dbg !3776
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %next_peer22, metadata !3721, metadata !DIExpression()), !dbg !3726
  %10 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer22, align 8, !dbg !3777
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %10, metadata !3723, metadata !DIExpression()), !dbg !3726
  %tobool23 = icmp eq %struct.eh_region_d* %10, null, !dbg !3778
  br i1 %tobool23, label %if.end24.loopexit, label %do.body, !dbg !3778, !llvm.loop !3779

if.end24.loopexit:                                ; preds = %do.body
  %next_peer22.lcssa = phi %struct.eh_region_d** [ %next_peer22, %do.body ], !dbg !3776
  br label %if.end24, !dbg !3781

if.end24:                                         ; preds = %if.end24.loopexit, %for.end16
  %pp.1 = phi %struct.eh_region_d** [ %pp.0.lcssa, %for.end16 ], [ %next_peer22.lcssa, %if.end24.loopexit ], !dbg !3726
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pp.1, metadata !3721, metadata !DIExpression()), !dbg !3726
  %next_peer25 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 2, !dbg !3781
  %11 = bitcast %struct.eh_region_d** %next_peer25 to i64*, !dbg !3781
  %12 = load i64, i64* %11, align 8, !dbg !3781
  %13 = bitcast %struct.eh_region_d** %pp.1 to i64*, !dbg !3782
  store i64 %12, i64* %13, align 8, !dbg !3782
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3783
  %eh27 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 0, !dbg !3783
  %15 = load %struct.eh_status*, %struct.eh_status** %eh27, align 8, !dbg !3783
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %15, i64 0, i32 1, !dbg !3783
  %16 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !3783
  %tobool28 = icmp eq %struct.VEC_eh_region_gc* %16, null, !dbg !3783
  br i1 %tobool28, label %cond.end35, label %cond.true29, !dbg !3783

cond.true29:                                      ; preds = %if.end24
  %base33 = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %16, i64 0, i32 0, !dbg !3783
  br label %cond.end35, !dbg !3783

cond.end35:                                       ; preds = %if.end24, %cond.true29
  %cond36 = phi %struct.VEC_eh_region_base* [ %base33, %cond.true29 ], [ null, %if.end24 ], !dbg !3783
  %index37 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 3, !dbg !3783
  %17 = load i32, i32* %index37, align 8, !dbg !3783
  %call38 = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_replace(%struct.VEC_eh_region_base* %cond36, i32 %17, %struct.eh_region_d* null) #7, !dbg !3783
  ret void, !dbg !3784
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @VEC_eh_region_base_replace(%struct.VEC_eh_region_base* %vec_, i32 %ix_, %struct.eh_region_d* %obj_) unnamed_addr #0 !dbg !3785 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !3790, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3791, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !3792, metadata !DIExpression()), !dbg !3794
  %idxprom = zext i32 %ix_ to i64, !dbg !3795
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3795
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !3795
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %0, metadata !3793, metadata !DIExpression()), !dbg !3794
  store %struct.eh_region_d* null, %struct.eh_region_d** %arrayidx, align 8, !dbg !3795
  ret %struct.eh_region_d* %0, !dbg !3795
}

; Function Attrs: nounwind uwtable
define dso_local void @for_each_eh_label(void (%struct.rtx_def*)* %callback) local_unnamed_addr #5 !dbg !3796 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  call void @llvm.dbg.value(metadata void (%struct.rtx_def*)* %callback, metadata !3801, metadata !DIExpression()), !dbg !3810
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !3811
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3811
  call void @llvm.dbg.value(metadata i32 1, metadata !3803, metadata !DIExpression()), !dbg !3810
  br label %for.cond, !dbg !3812

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !3813
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3803, metadata !DIExpression()), !dbg !3810
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3814
  %eh = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !3814
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3814
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 2, !dbg !3814
  %3 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3814
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %3, null, !dbg !3814
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3814

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %3, i64 0, i32 0, !dbg !3814
  br label %cond.end, !dbg !3814

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3814
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !3802, metadata !DIExpression(DW_OP_deref)), !dbg !3810
  %call = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond, i32 %i.0, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !3814
  %tobool4 = icmp eq i32 %call, 0, !dbg !3815
  br i1 %tobool4, label %for.end, label %for.body, !dbg !3815

for.body:                                         ; preds = %cond.end
  %4 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !3816
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !3802, metadata !DIExpression()), !dbg !3810
  %tobool5 = icmp eq %struct.eh_landing_pad_d* %4, null, !dbg !3816
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !3817

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !3802, metadata !DIExpression()), !dbg !3810
  %landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %4, i64 0, i32 3, !dbg !3818
  %5 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad, align 8, !dbg !3818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3804, metadata !DIExpression()), !dbg !3819
  %tobool6 = icmp eq %struct.rtx_def* %5, null, !dbg !3820
  br i1 %tobool6, label %for.inc, label %land.lhs.true, !dbg !3822

land.lhs.true:                                    ; preds = %if.then
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !3823
  %bf.load = load i32, i32* %6, align 8, !dbg !3823
  %bf.clear = and i32 %bf.load, 65535, !dbg !3823
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !3823
  br i1 %cmp, label %if.then7, label %for.inc, !dbg !3824

if.then7:                                         ; preds = %land.lhs.true
  call void %callback(%struct.rtx_def* nonnull %5) #6, !dbg !3825
  br label %for.inc, !dbg !3825

for.inc:                                          ; preds = %if.then, %for.body, %if.then7, %land.lhs.true
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3803, metadata !DIExpression()), !dbg !3810
  br label %for.cond, !dbg !3827, !llvm.loop !3828

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3830
  ret void, !dbg !3830
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_, %struct.eh_landing_pad_d** %ptr) unnamed_addr #0 !dbg !3831 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !3835, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3836, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %ptr, metadata !3837, metadata !DIExpression()), !dbg !3838
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !3839
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3839

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !3839
  %0 = load i32, i32* %num, align 8, !dbg !3839
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3839
  br i1 %cmp, label %if.then, label %if.else, !dbg !3841

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3842
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3842
  %1 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !3842
  br label %return, !dbg !3842

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3844

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_landing_pad_d* [ null, %if.else ], [ %1, %if.then ], !dbg !3846
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3846
  store %struct.eh_landing_pad_d* %storemerge, %struct.eh_landing_pad_d** %ptr, align 8, !dbg !3846
  ret i32 %retval.0, !dbg !3841
}

; Function Attrs: nounwind uwtable
define dso_local void @make_reg_eh_region_note(%struct.rtx_def* %insn, i32 %ecf_flags, i32 %lp_nr) local_unnamed_addr #5 !dbg !3847 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3851, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 %ecf_flags, metadata !3852, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 %lp_nr, metadata !3853, metadata !DIExpression()), !dbg !3855
  %and = and i32 %ecf_flags, 64, !dbg !3856
  %tobool = icmp eq i32 %and, 0, !dbg !3856
  br i1 %tobool, label %if.else, label %if.then, !dbg !3858

if.then:                                          ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3854, metadata !DIExpression()), !dbg !3855
  br label %if.end3, !dbg !3860

if.else:                                          ; preds = %entry
  %cmp = icmp eq i32 %lp_nr, 0, !dbg !3861
  br i1 %cmp, label %cleanup.cont, label %if.then1, !dbg !3863

if.then1:                                         ; preds = %if.else
  %conv = sext i32 %lp_nr to i64, !dbg !3864
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !3864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3854, metadata !DIExpression()), !dbg !3855
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.then
  %value.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call, %if.then1 ], !dbg !3865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.0, metadata !3854, metadata !DIExpression()), !dbg !3855
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 25, %struct.rtx_def* %value.0) #6, !dbg !3866
  br label %cleanup.cont, !dbg !3867

cleanup.cont:                                     ; preds = %if.else, %if.end3
  ret void, !dbg !3867
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @make_reg_eh_region_note_nothrow_nononlocal(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3868 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3870, metadata !DIExpression()), !dbg !3873
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 25, %struct.rtx_def* null) #6, !dbg !3874
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3871, metadata !DIExpression()), !dbg !3873
  %call1 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -2147483648) #6, !dbg !3875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3872, metadata !DIExpression()), !dbg !3873
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !3876
  br i1 %cmp, label %if.else, label %if.then, !dbg !3878

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3879
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3879
  store %struct.rtx_def* %call1, %struct.rtx_def** %rt_rtx, align 8, !dbg !3880
  br label %if.end, !dbg !3879

if.else:                                          ; preds = %entry
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 25, %struct.rtx_def* %call1) #6, !dbg !3881
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3882
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @insn_could_throw_p(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3883 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3890, metadata !DIExpression()), !dbg !3891
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3892
  %bf.load = load i32, i32* %0, align 8, !dbg !3892
  %bf.clear = and i32 %bf.load, 65535, !dbg !3892
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !3892
  br i1 %cmp, label %return, label %if.end, !dbg !3894

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 8, !dbg !3895
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false, !dbg !3895

lor.lhs.false:                                    ; preds = %if.end
  %cmp6 = icmp eq i32 %bf.clear, 7, !dbg !3895
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false7, !dbg !3895

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear, 9, !dbg !3895
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false11, !dbg !3895

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  br i1 false, label %lor.lhs.false11.land.lhs.true_crit_edge, label %return, !dbg !3897

lor.lhs.false11.land.lhs.true_crit_edge:          ; preds = %lor.lhs.false11
  br label %land.lhs.true, !dbg !3897

land.lhs.true:                                    ; preds = %lor.lhs.false11.land.lhs.true_crit_edge, %lor.lhs.false7, %lor.lhs.false, %if.end
  %1 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !3898
  %tobool = icmp eq i32 %1, 0, !dbg !3898
  br i1 %tobool, label %return, label %if.then15, !dbg !3899

if.then15:                                        ; preds = %land.lhs.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3900
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !3900
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3900
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3900
  %call = tail call i32 @may_trap_p(%struct.rtx_def* %3) #6, !dbg !3901
  %conv = trunc i32 %call to i8, !dbg !3901
  br label %return, !dbg !3902

return:                                           ; preds = %land.lhs.true, %lor.lhs.false11, %entry, %if.then15
  %retval.0 = phi i8 [ %conv, %if.then15 ], [ 1, %entry ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false11 ], !dbg !3891
  ret i8 %retval.0, !dbg !3903
}

declare dso_local i32 @may_trap_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @copy_reg_eh_region_note_forward(%struct.rtx_def* %note_or_insn, %struct.rtx_def* %first, %struct.rtx_def* %last) local_unnamed_addr #5 !dbg !3904 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_or_insn, metadata !3908, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !3909, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !3910, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_or_insn, metadata !3912, metadata !DIExpression()), !dbg !3913
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note_or_insn, i64 0, i32 0, !dbg !3914
  %bf.load = load i32, i32* %0, align 8, !dbg !3914
  %bf.clear = and i32 %bf.load, 65535, !dbg !3914
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3914
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3914

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3914
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !3914

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3914
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !3914

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3914
  br i1 %cmp11, label %if.then, label %if.end14, !dbg !3916

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %note_or_insn, i32 25, %struct.rtx_def* null) #6, !dbg !3917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3912, metadata !DIExpression()), !dbg !3913
  %cmp12 = icmp eq %struct.rtx_def* %call, null, !dbg !3919
  br i1 %cmp12, label %cleanup.cont, label %if.end14, !dbg !3921

if.end14:                                         ; preds = %if.then, %lor.lhs.false8
  %note.0 = phi %struct.rtx_def* [ %note_or_insn, %lor.lhs.false8 ], [ %call, %if.then ], !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3912, metadata !DIExpression()), !dbg !3913
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3922
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3922
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3912, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !3911, metadata !DIExpression()), !dbg !3913
  br label %for.cond, !dbg !3923

for.cond:                                         ; preds = %for.inc, %if.end14
  %insn.0 = phi %struct.rtx_def* [ %first, %if.end14 ], [ %3, %for.inc ], !dbg !3925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3911, metadata !DIExpression()), !dbg !3913
  %cmp15 = icmp eq %struct.rtx_def* %insn.0, %last, !dbg !3926
  br i1 %cmp15, label %cleanup.cont.loopexit, label %for.body, !dbg !3928

for.body:                                         ; preds = %for.cond
  %call16 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0, i32 25, %struct.rtx_def* null) #6, !dbg !3929
  %tobool = icmp eq %struct.rtx_def* %call16, null, !dbg !3929
  br i1 %tobool, label %land.lhs.true, label %for.inc, !dbg !3931

land.lhs.true:                                    ; preds = %for.body
  %call17 = tail call zeroext i8 @insn_could_throw_p(%struct.rtx_def* %insn.0) #7, !dbg !3932
  %tobool18 = icmp eq i8 %call17, 0, !dbg !3932
  br i1 %tobool18, label %for.inc, label %if.then19, !dbg !3933

if.then19:                                        ; preds = %land.lhs.true
  tail call void @add_reg_note(%struct.rtx_def* %insn.0, i32 25, %struct.rtx_def* %1) #6, !dbg !3934
  br label %for.inc, !dbg !3934

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then19
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3935
  %rt_rtx24 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3935
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !3935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3911, metadata !DIExpression()), !dbg !3913
  br label %for.cond, !dbg !3936, !llvm.loop !3937

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3939

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then
  ret void, !dbg !3939
}

; Function Attrs: nounwind uwtable
define dso_local void @copy_reg_eh_region_note_backward(%struct.rtx_def* %note_or_insn, %struct.rtx_def* %last, %struct.rtx_def* %first) local_unnamed_addr #5 !dbg !3940 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_or_insn, metadata !3942, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !3943, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first, metadata !3944, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_or_insn, metadata !3946, metadata !DIExpression()), !dbg !3947
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note_or_insn, i64 0, i32 0, !dbg !3948
  %bf.load = load i32, i32* %0, align 8, !dbg !3948
  %bf.clear = and i32 %bf.load, 65535, !dbg !3948
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3948
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3948

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3948
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !3948

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3948
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !3948

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3948
  br i1 %cmp11, label %if.then, label %if.end14, !dbg !3950

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %note_or_insn, i32 25, %struct.rtx_def* null) #6, !dbg !3951
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3946, metadata !DIExpression()), !dbg !3947
  %cmp12 = icmp eq %struct.rtx_def* %call, null, !dbg !3953
  br i1 %cmp12, label %cleanup.cont, label %if.end14, !dbg !3955

if.end14:                                         ; preds = %if.then, %lor.lhs.false8
  %note.0 = phi %struct.rtx_def* [ %note_or_insn, %lor.lhs.false8 ], [ %call, %if.then ], !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3946, metadata !DIExpression()), !dbg !3947
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3956
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3956
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3956
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3946, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !3945, metadata !DIExpression()), !dbg !3947
  br label %for.cond, !dbg !3957

for.cond:                                         ; preds = %for.inc, %if.end14
  %insn.0 = phi %struct.rtx_def* [ %last, %if.end14 ], [ %3, %for.inc ], !dbg !3959
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3945, metadata !DIExpression()), !dbg !3947
  %cmp15 = icmp eq %struct.rtx_def* %insn.0, %first, !dbg !3960
  br i1 %cmp15, label %cleanup.cont.loopexit, label %for.body, !dbg !3962

for.body:                                         ; preds = %for.cond
  %call16 = tail call zeroext i8 @insn_could_throw_p(%struct.rtx_def* %insn.0) #7, !dbg !3963
  %tobool = icmp eq i8 %call16, 0, !dbg !3963
  br i1 %tobool, label %for.inc, label %if.then17, !dbg !3965

if.then17:                                        ; preds = %for.body
  tail call void @add_reg_note(%struct.rtx_def* %insn.0, i32 25, %struct.rtx_def* %1) #6, !dbg !3966
  br label %for.inc, !dbg !3966

for.inc:                                          ; preds = %for.body, %if.then17
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3967
  %rt_rtx22 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3967
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !3967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3945, metadata !DIExpression()), !dbg !3947
  br label %for.cond, !dbg !3968, !llvm.loop !3969

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3971

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then
  ret void, !dbg !3971
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_landing_pad_d* @get_eh_landing_pad_from_rtx(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3972 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %r = alloca %struct.eh_region_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3976, metadata !DIExpression()), !dbg !3979
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !3980
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3980
  %1 = bitcast %struct.eh_region_d** %r to i8*, !dbg !3981
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3981
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !3977, metadata !DIExpression(DW_OP_deref)), !dbg !3979
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !3978, metadata !DIExpression(DW_OP_deref)), !dbg !3979
  %call = call fastcc zeroext i8 @get_eh_region_and_lp_from_rtx(%struct.rtx_def* %insn, %struct.eh_region_d** nonnull %r, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !3982
  %2 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !3983
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %2, metadata !3977, metadata !DIExpression()), !dbg !3979
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3984
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3984
  ret %struct.eh_landing_pad_d* %2, !dbg !3985
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @get_eh_region_and_lp_from_rtx(%struct.rtx_def* %insn, %struct.eh_region_d** %pr, %struct.eh_landing_pad_d** %plp) unnamed_addr #5 !dbg !3986 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3990, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %pr, metadata !3991, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %plp, metadata !3992, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* null, metadata !3993, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !3994, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i8 0, metadata !3995, metadata !DIExpression()), !dbg !3999
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4000
  %bf.load = load i32, i32* %0, align 8, !dbg !4000
  %bf.clear = and i32 %bf.load, 65535, !dbg !4000
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4000
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4000

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4000
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4000

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4000
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4000

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4000
  br i1 %cmp11, label %if.end, label %egress, !dbg !4002

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !4003

land.lhs.true:                                    ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4005
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4005
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !4005
  %3 = load i32*, i32** %2, align 8, !dbg !4005
  %bf.load15 = load i32, i32* %3, align 8, !dbg !4005
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4005
  %cmp17 = icmp eq i32 %bf.clear16, 5, !dbg !4006
  br i1 %cmp17, label %if.then18, label %if.end27, !dbg !4007

if.then18:                                        ; preds = %land.lhs.true
  %arrayidx25 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !4008
  %rt_rtvec = bitcast i32* %arrayidx25 to %struct.rtvec_def**, !dbg !4008
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4008
  %arrayidx26 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 0, !dbg !4008
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx26, align 8, !dbg !4008
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3990, metadata !DIExpression()), !dbg !3999
  br label %if.end27, !dbg !4009

if.end27:                                         ; preds = %if.then18, %land.lhs.true, %if.end
  %insn.addr.0 = phi %struct.rtx_def* [ %5, %if.then18 ], [ %insn, %land.lhs.true ], [ %insn, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !3990, metadata !DIExpression()), !dbg !3999
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.addr.0, i32 25, %struct.rtx_def* null) #6, !dbg !4010
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3996, metadata !DIExpression()), !dbg !3999
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !4011
  br i1 %tobool, label %if.then28, label %if.end31, !dbg !4013

if.then28:                                        ; preds = %if.end27
  %call29 = tail call zeroext i8 @insn_could_throw_p(%struct.rtx_def* %insn.addr.0) #7, !dbg !4014
  %tobool30 = icmp eq i8 %call29, 0, !dbg !4016
  %conv = zext i1 %tobool30 to i8, !dbg !4016
  call void @llvm.dbg.value(metadata i8 %conv, metadata !3995, metadata !DIExpression()), !dbg !3999
  br label %egress, !dbg !4017

if.end31:                                         ; preds = %if.end27
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4018
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !4018
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !4018
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !4018
  %arrayidx37 = bitcast %union.u* %u36 to i64*, !dbg !4018
  %7 = load i64, i64* %arrayidx37, align 8, !dbg !4018
  %conv38 = trunc i64 %7 to i32, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %conv38, metadata !3997, metadata !DIExpression()), !dbg !3999
  switch i32 %conv38, label %if.end45 [
    i32 0, label %egress
    i32 -2147483648, label %egress
  ], !dbg !4019

if.end45:                                         ; preds = %if.end31
  %cmp46 = icmp slt i32 %conv38, 0, !dbg !4021
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4023
  %eh = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 0, !dbg !4023
  %9 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4023
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !4024

if.then48:                                        ; preds = %if.end45
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %9, i64 0, i32 1, !dbg !4025
  %10 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !4025
  %tobool49 = icmp eq %struct.VEC_eh_region_gc* %10, null, !dbg !4025
  br i1 %tobool49, label %cond.end, label %cond.true, !dbg !4025

cond.true:                                        ; preds = %if.then48
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %10, i64 0, i32 0, !dbg !4025
  br label %cond.end, !dbg !4025

cond.end:                                         ; preds = %if.then48, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %if.then48 ], !dbg !4025
  %sub = sub nsw i32 0, %conv38, !dbg !4025
  %call53 = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %cond, i32 %sub) #7, !dbg !4025
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call53, metadata !3994, metadata !DIExpression()), !dbg !3999
  br label %egress, !dbg !4026

if.else:                                          ; preds = %if.end45
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %9, i64 0, i32 2, !dbg !4027
  %11 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !4027
  %tobool56 = icmp eq %struct.VEC_eh_landing_pad_gc* %11, null, !dbg !4027
  br i1 %tobool56, label %cond.end63, label %cond.true57, !dbg !4027

cond.true57:                                      ; preds = %if.else
  %base61 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %11, i64 0, i32 0, !dbg !4027
  br label %cond.end63, !dbg !4027

cond.end63:                                       ; preds = %if.else, %cond.true57
  %cond64 = phi %struct.VEC_eh_landing_pad_base* [ %base61, %cond.true57 ], [ null, %if.else ], !dbg !4027
  %call65 = tail call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %cond64, i32 %conv38) #7, !dbg !4027
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call65, metadata !3993, metadata !DIExpression()), !dbg !3999
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call65, i64 0, i32 1, !dbg !4029
  %12 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !4029
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %12, metadata !3994, metadata !DIExpression()), !dbg !3999
  br label %egress

egress:                                           ; preds = %cond.end, %cond.end63, %if.end31, %if.end31, %lor.lhs.false8, %if.then28
  %lp.1 = phi %struct.eh_landing_pad_d* [ null, %if.then28 ], [ null, %lor.lhs.false8 ], [ null, %if.end31 ], [ null, %if.end31 ], [ null, %cond.end ], [ %call65, %cond.end63 ], !dbg !4030
  %r.1 = phi %struct.eh_region_d* [ null, %if.then28 ], [ null, %lor.lhs.false8 ], [ null, %if.end31 ], [ null, %if.end31 ], [ %call53, %cond.end ], [ %12, %cond.end63 ], !dbg !3999
  %ret.0 = phi i8 [ %conv, %if.then28 ], [ 0, %lor.lhs.false8 ], [ 1, %if.end31 ], [ 1, %if.end31 ], [ 0, %cond.end ], [ 0, %cond.end63 ], !dbg !3999
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !3995, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.1, metadata !3994, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.1, metadata !3993, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.label(metadata !3998), !dbg !4031
  store %struct.eh_landing_pad_d* %lp.1, %struct.eh_landing_pad_d** %plp, align 8, !dbg !4032
  store %struct.eh_region_d* %r.1, %struct.eh_region_d** %pr, align 8, !dbg !4033
  ret i8 %ret.0, !dbg !4034
}

; Function Attrs: nounwind uwtable
define dso_local %struct.eh_region_d* @get_eh_region_from_rtx(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4035 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %r = alloca %struct.eh_region_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4039, metadata !DIExpression()), !dbg !4042
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !4043
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4043
  %1 = bitcast %struct.eh_region_d** %r to i8*, !dbg !4044
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4044
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !4040, metadata !DIExpression(DW_OP_deref)), !dbg !4042
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !4041, metadata !DIExpression(DW_OP_deref)), !dbg !4042
  %call = call fastcc zeroext i8 @get_eh_region_and_lp_from_rtx(%struct.rtx_def* %insn, %struct.eh_region_d** nonnull %r, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !4045
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !4046
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %2, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4047
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4047
  ret %struct.eh_region_d* %2, !dbg !4048
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @can_throw_internal(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4049 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4051, metadata !DIExpression()), !dbg !4052
  %call = tail call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_rtx(%struct.rtx_def* %insn) #7, !dbg !4053
  %cmp = icmp ne %struct.eh_landing_pad_d* %call, null, !dbg !4054
  %conv1 = zext i1 %cmp to i8, !dbg !4053
  ret i8 %conv1, !dbg !4055
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @can_throw_external(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4056 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %r = alloca %struct.eh_region_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4058, metadata !DIExpression()), !dbg !4067
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !4068
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4068
  %1 = bitcast %struct.eh_region_d** %r to i8*, !dbg !4069
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4069
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4070
  %bf.load = load i32, i32* %2, align 8, !dbg !4070
  %bf.clear = and i32 %bf.load, 65535, !dbg !4070
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4070
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4070

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4070
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4070

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4070
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4070

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4070
  br i1 %cmp11, label %if.end, label %cleanup48, !dbg !4072

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br i1 %cmp, label %land.lhs.true, label %if.end36, !dbg !4073

land.lhs.true:                                    ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4074
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4074
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !4074
  %5 = load i32*, i32** %4, align 8, !dbg !4074
  %bf.load15 = load i32, i32* %5, align 8, !dbg !4074
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4074
  %cmp17 = icmp eq i32 %bf.clear16, 5, !dbg !4075
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !4076

if.then18:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32* %5, metadata !4062, metadata !DIExpression()), !dbg !4077
  %arrayidx25 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !4078
  %rt_rtvec = bitcast i32* %arrayidx25 to %struct.rtvec_def**, !dbg !4078
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4078
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !4078
  %7 = load i32, i32* %num_elem, align 8, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %7, metadata !4066, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 0, metadata !4065, metadata !DIExpression()), !dbg !4077
  %8 = sext i32 %7 to i64, !dbg !4079
  br label %for.cond, !dbg !4079

for.cond:                                         ; preds = %for.inc, %if.then18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then18 ], !dbg !4081
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4065, metadata !DIExpression()), !dbg !4077
  %cmp26 = icmp slt i64 %indvars.iv, %8, !dbg !4082
  br i1 %cmp26, label %for.body, label %cleanup48.loopexit, !dbg !4084

for.body:                                         ; preds = %for.cond
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4085
  %arrayidx31 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv, !dbg !4085
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !4085
  %call = tail call zeroext i8 @can_throw_external(%struct.rtx_def* %10) #7, !dbg !4087
  %tobool = icmp eq i8 %call, 0, !dbg !4087
  br i1 %tobool, label %for.inc, label %cleanup48.loopexit, !dbg !4088

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4089
  call void @llvm.dbg.value(metadata i32 undef, metadata !4065, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4077
  br label %for.cond, !dbg !4090, !llvm.loop !4091

if.end36:                                         ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !4059, metadata !DIExpression(DW_OP_deref)), !dbg !4067
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !4060, metadata !DIExpression(DW_OP_deref)), !dbg !4067
  %call37 = call fastcc zeroext i8 @get_eh_region_and_lp_from_rtx(%struct.rtx_def* %insn, %struct.eh_region_d** nonnull %r, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !4093
  call void @llvm.dbg.value(metadata i8 %call37, metadata !4061, metadata !DIExpression()), !dbg !4067
  %tobool38 = icmp ne i8 %call37, 0, !dbg !4094
  %11 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !4096
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %11, metadata !4059, metadata !DIExpression()), !dbg !4067
  %cmp41 = icmp ne %struct.eh_landing_pad_d* %11, null, !dbg !4098
  %or.cond = or i1 %tobool38, %cmp41, !dbg !4099
  br i1 %or.cond, label %cleanup48, label %if.end43, !dbg !4099

if.end43:                                         ; preds = %if.end36
  %12 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !4100
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %12, metadata !4060, metadata !DIExpression()), !dbg !4067
  %cmp44 = icmp eq %struct.eh_region_d* %12, null, !dbg !4102
  br i1 %cmp44, label %cleanup48, label %if.end46, !dbg !4103

if.end46:                                         ; preds = %if.end43
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %12, metadata !4060, metadata !DIExpression()), !dbg !4067
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %12, i64 0, i32 4, !dbg !4104
  %13 = load i32, i32* %type, align 4, !dbg !4104
  %cmp47 = icmp eq i32 %13, 3, !dbg !4104
  br i1 %cmp47, label %cleanup48, label %cond.true, !dbg !4104

cond.true:                                        ; preds = %if.end46
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 1796, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4104
  br label %cleanup48, !dbg !4104

cleanup48.loopexit:                               ; preds = %for.cond, %for.body
  %retval.1.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup48, !dbg !4105

cleanup48:                                        ; preds = %cleanup48.loopexit, %cond.true, %if.end46, %if.end43, %if.end36, %lor.lhs.false8
  %retval.1 = phi i8 [ 0, %lor.lhs.false8 ], [ 0, %if.end36 ], [ 1, %if.end43 ], [ 0, %if.end46 ], [ 0, %cond.true ], [ %retval.1.ph, %cleanup48.loopexit ], !dbg !4067
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4105
  ret i8 %retval.1, !dbg !4105
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @insn_nothrow_p(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4106 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %r = alloca %struct.eh_region_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4108, metadata !DIExpression()), !dbg !4116
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !4117
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4117
  %1 = bitcast %struct.eh_region_d** %r to i8*, !dbg !4118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4118
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4119
  %bf.load = load i32, i32* %2, align 8, !dbg !4119
  %bf.clear = and i32 %bf.load, 65535, !dbg !4119
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4119
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4119

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4119
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4119

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4119
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4119

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4119
  br i1 %cmp11, label %if.end, label %cleanup38, !dbg !4121

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  br i1 %cmp, label %land.lhs.true, label %if.end36, !dbg !4122

land.lhs.true:                                    ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4123
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4123
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !4123
  %5 = load i32*, i32** %4, align 8, !dbg !4123
  %bf.load15 = load i32, i32* %5, align 8, !dbg !4123
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4123
  %cmp17 = icmp eq i32 %bf.clear16, 5, !dbg !4124
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !4125

if.then18:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32* %5, metadata !4111, metadata !DIExpression()), !dbg !4126
  %arrayidx25 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !4127
  %rt_rtvec = bitcast i32* %arrayidx25 to %struct.rtvec_def**, !dbg !4127
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4127
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !4127
  %7 = load i32, i32* %num_elem, align 8, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %7, metadata !4115, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i32 0, metadata !4114, metadata !DIExpression()), !dbg !4126
  %8 = sext i32 %7 to i64, !dbg !4128
  br label %for.cond, !dbg !4128

for.cond:                                         ; preds = %for.inc, %if.then18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then18 ], !dbg !4130
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4114, metadata !DIExpression()), !dbg !4126
  %cmp26 = icmp slt i64 %indvars.iv, %8, !dbg !4131
  br i1 %cmp26, label %for.body, label %cleanup38.loopexit, !dbg !4133

for.body:                                         ; preds = %for.cond
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4134
  %arrayidx31 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv, !dbg !4134
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !4134
  %call = tail call zeroext i8 @insn_nothrow_p(%struct.rtx_def* %10) #7, !dbg !4136
  %tobool = icmp eq i8 %call, 0, !dbg !4136
  br i1 %tobool, label %cleanup38.loopexit, label %for.inc, !dbg !4137

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4138
  call void @llvm.dbg.value(metadata i32 undef, metadata !4114, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4126
  br label %for.cond, !dbg !4139, !llvm.loop !4140

if.end36:                                         ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !4109, metadata !DIExpression(DW_OP_deref)), !dbg !4116
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !4110, metadata !DIExpression(DW_OP_deref)), !dbg !4116
  %call37 = call fastcc zeroext i8 @get_eh_region_and_lp_from_rtx(%struct.rtx_def* %insn, %struct.eh_region_d** nonnull %r, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !4142
  br label %cleanup38, !dbg !4143

cleanup38.loopexit:                               ; preds = %for.cond, %for.body
  %retval.1.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup38, !dbg !4144

cleanup38:                                        ; preds = %cleanup38.loopexit, %lor.lhs.false8, %if.end36
  %retval.1 = phi i8 [ %call37, %if.end36 ], [ 1, %lor.lhs.false8 ], [ %retval.1.ph, %cleanup38.loopexit ], !dbg !4116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4144
  ret i8 %retval.1, !dbg !4144
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @can_nonlocal_goto(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4145 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4147, metadata !DIExpression()), !dbg !4151
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 10), align 8, !dbg !4152
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !4152
  br i1 %tobool, label %if.end6, label %land.lhs.true, !dbg !4153

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4154
  %bf.load = load i32, i32* %1, align 8, !dbg !4154
  %bf.clear = and i32 %bf.load, 65535, !dbg !4154
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !4154
  br i1 %cmp, label %if.then, label %if.end6, !dbg !4155

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 25, %struct.rtx_def* null) #6, !dbg !4156
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4148, metadata !DIExpression()), !dbg !4157
  %tobool1 = icmp eq %struct.rtx_def* %call, null, !dbg !4158
  br i1 %tobool1, label %cleanup, label %lor.lhs.false, !dbg !4160

lor.lhs.false:                                    ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4161
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4161
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4161
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !4161
  %arrayidx3 = bitcast %union.u* %u2 to i64*, !dbg !4161
  %3 = load i64, i64* %arrayidx3, align 8, !dbg !4161
  %cmp4 = icmp eq i64 %3, -2147483648, !dbg !4162
  br label %cleanup, !dbg !4163

cleanup:                                          ; preds = %if.then, %lor.lhs.false
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ %cmp4, %lor.lhs.false ]
  br i1 %cleanup.dest.slot.0, label %if.end6, label %return

if.end6:                                          ; preds = %entry, %cleanup, %land.lhs.true
  br label %return, !dbg !4164

return:                                           ; preds = %cleanup, %if.end6
  %retval.1 = phi i8 [ 1, %cleanup ], [ 0, %if.end6 ], !dbg !4151
  ret i8 %retval.1, !dbg !4165
}

; Function Attrs: nounwind uwtable
define internal i32 @set_nothrow_function_flags() #5 !dbg !4166 {
entry:
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 49), align 1, !dbg !4376
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 33), align 1, !dbg !4377
  %0 = load i64*, i64** bitcast (%union.tree_node** @current_function_decl to i64**), align 8, !dbg !4378
  %bf.load = load i64, i64* %0, align 8, !dbg !4378
  %bf.cast1 = and i64 %bf.load, 33554432, !dbg !4378
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4378
  %1 = load i32, i32* @flag_exceptions, align 4, !dbg !4380
  %tobool1 = icmp ne i32 %1, 0, !dbg !4380
  %or.cond = and i1 %tobool, %tobool1, !dbg !4382
  br i1 %or.cond, label %if.end3, label %cleanup, !dbg !4382

if.end3:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !4383
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4168, metadata !DIExpression()), !dbg !4385
  br label %for.cond, !dbg !4386

for.cond:                                         ; preds = %for.inc, %if.end3
  %insn.0 = phi %struct.rtx_def* [ %call, %if.end3 ], [ %4, %for.inc ], !dbg !4387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4168, metadata !DIExpression()), !dbg !4385
  %tobool4 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4388
  br i1 %tobool4, label %for.end, label %for.body, !dbg !4388

for.body:                                         ; preds = %for.cond
  %call5 = tail call zeroext i8 @can_throw_external(%struct.rtx_def* nonnull %insn.0) #7, !dbg !4389
  %tobool6 = icmp eq i8 %call5, 0, !dbg !4389
  br i1 %tobool6, label %for.inc, label %if.then7, !dbg !4392

if.then7:                                         ; preds = %for.body
  store i8 0, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 49), align 1, !dbg !4393
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4395
  %bf.load8 = load i32, i32* %2, align 8, !dbg !4395
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4395
  %cmp = icmp eq i32 %bf.clear9, 10, !dbg !4395
  br i1 %cmp, label %lor.lhs.false, label %if.then14, !dbg !4397

lor.lhs.false:                                    ; preds = %if.then7
  %bf.clear12 = and i32 %bf.load8, 16777216, !dbg !4398
  %tobool13 = icmp eq i32 %bf.clear12, 0, !dbg !4398
  br i1 %tobool13, label %if.then14, label %for.inc, !dbg !4399

if.then14:                                        ; preds = %lor.lhs.false, %if.then7
  store i8 0, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 33), align 1, !dbg !4400
  br label %cleanup, !dbg !4402

for.inc:                                          ; preds = %lor.lhs.false, %for.body
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4403
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4403
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4168, metadata !DIExpression()), !dbg !4385
  br label %for.cond, !dbg !4404, !llvm.loop !4405

for.end:                                          ; preds = %for.cond
  br label %for.cond17, !dbg !4407

for.cond17:                                       ; preds = %for.inc34, %for.end
  %insn.1.in = phi %struct.rtx_def** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 27), %for.end ], [ %rt_rtx38, %for.inc34 ]
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !4409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !4168, metadata !DIExpression()), !dbg !4385
  %tobool18 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !4410
  br i1 %tobool18, label %for.end39, label %for.body19, !dbg !4410

for.body19:                                       ; preds = %for.cond17
  %call20 = tail call zeroext i8 @can_throw_external(%struct.rtx_def* nonnull %insn.1) #7, !dbg !4411
  %tobool21 = icmp eq i8 %call20, 0, !dbg !4411
  br i1 %tobool21, label %for.inc34, label %if.then22, !dbg !4414

if.then22:                                        ; preds = %for.body19
  store i8 0, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 49), align 1, !dbg !4415
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !4417
  %bf.load23 = load i32, i32* %5, align 8, !dbg !4417
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4417
  %cmp25 = icmp eq i32 %bf.clear24, 10, !dbg !4417
  br i1 %cmp25, label %lor.lhs.false26, label %if.then31, !dbg !4419

lor.lhs.false26:                                  ; preds = %if.then22
  %bf.clear29 = and i32 %bf.load23, 16777216, !dbg !4420
  %tobool30 = icmp eq i32 %bf.clear29, 0, !dbg !4420
  br i1 %tobool30, label %if.then31, label %for.inc34, !dbg !4421

if.then31:                                        ; preds = %lor.lhs.false26, %if.then22
  store i8 0, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 33), align 1, !dbg !4422
  br label %cleanup, !dbg !4424

for.inc34:                                        ; preds = %lor.lhs.false26, %for.body19
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4425
  %rt_rtx38 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4425
  br label %for.cond17, !dbg !4426, !llvm.loop !4427

for.end39:                                        ; preds = %for.cond17
  %7 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 49), align 1, !dbg !4429
  %tobool40 = icmp eq i8 %7, 0, !dbg !4430
  br i1 %tobool40, label %cleanup, label %land.lhs.true, !dbg !4431

land.lhs.true:                                    ; preds = %for.end39
  %8 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4432
  %call41 = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %8) #6, !dbg !4433
  %call42 = tail call i32 @cgraph_function_body_availability(%struct.cgraph_node* %call41) #6, !dbg !4434
  %cmp43 = icmp ugt i32 %call42, 2, !dbg !4435
  br i1 %cmp43, label %if.then45, label %cleanup, !dbg !4436

if.then45:                                        ; preds = %land.lhs.true
  %9 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4437
  %call46 = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %9) #6, !dbg !4438
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call46, metadata !4169, metadata !DIExpression()), !dbg !4439
  %callers = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call46, i64 0, i32 2, !dbg !4440
  br label %for.cond47, !dbg !4442

for.cond47:                                       ; preds = %for.body49, %if.then45
  %e.0.in = phi %struct.cgraph_edge** [ %callers, %if.then45 ], [ %next_caller, %for.body49 ]
  %e.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %e.0.in, align 8, !dbg !4443
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %e.0, metadata !4375, metadata !DIExpression()), !dbg !4439
  %tobool48 = icmp eq %struct.cgraph_edge* %e.0, null, !dbg !4444
  br i1 %tobool48, label %for.end53, label %for.body49, !dbg !4444

for.body49:                                       ; preds = %for.cond47
  %can_throw_external = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 14, !dbg !4445
  %bf.load50 = load i8, i8* %can_throw_external, align 2, !dbg !4447
  %bf.clear51 = and i8 %bf.load50, -5, !dbg !4447
  store i8 %bf.clear51, i8* %can_throw_external, align 2, !dbg !4447
  %next_caller = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %e.0, i64 0, i32 4, !dbg !4448
  br label %for.cond47, !dbg !4449, !llvm.loop !4450

for.end53:                                        ; preds = %for.cond47
  tail call void @cgraph_set_nothrow_flag(%struct.cgraph_node* %call46, i8 zeroext 1) #6, !dbg !4452
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4453
  %tobool54 = icmp eq %struct._IO_FILE* %10, null, !dbg !4453
  br i1 %tobool54, label %cleanup, label %if.then55, !dbg !4455

if.then55:                                        ; preds = %for.end53
  %call56 = tail call i8* @current_function_name() #6, !dbg !4456
  %call57 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8* %call56) #6, !dbg !4457
  br label %cleanup, !dbg !4457

cleanup:                                          ; preds = %for.end53, %for.end39, %entry, %land.lhs.true, %if.then55, %if.then31, %if.then14
  ret i32 0, !dbg !4458
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_eh_pointer(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !4459 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4463, metadata !DIExpression()), !dbg !4465
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4466
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !4466
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4466
  %call = tail call fastcc %struct.eh_region_d* @expand_builtin_eh_common(%union.tree_node* %0) #7, !dbg !4467
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !4464, metadata !DIExpression()), !dbg !4465
  %exc_ptr_reg = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 7, !dbg !4468
  %1 = load %struct.rtx_def*, %struct.rtx_def** %exc_ptr_reg, align 8, !dbg !4468
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !4470
  br i1 %cmp, label %if.then, label %if.end, !dbg !4471

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @ptr_mode, align 4, !dbg !4472
  %call2 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %2) #6, !dbg !4473
  store %struct.rtx_def* %call2, %struct.rtx_def** %exc_ptr_reg, align 8, !dbg !4474
  br label %if.end, !dbg !4475

if.end:                                           ; preds = %if.then, %entry
  %3 = phi %struct.rtx_def* [ %call2, %if.then ], [ %1, %entry ], !dbg !4476
  ret %struct.rtx_def* %3, !dbg !4477
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.eh_region_d* @expand_builtin_eh_common(%union.tree_node* %region_nr_t) unnamed_addr #5 !dbg !4478 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %region_nr_t, metadata !4482, metadata !DIExpression()), !dbg !4485
  %call = tail call i32 @host_integerp(%union.tree_node* %region_nr_t, i32 0) #6, !dbg !4486
  %tobool = icmp eq i32 %call, 0, !dbg !4486
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4486

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 1941, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4486
  br label %cond.end, !dbg !4486

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call i64 @tree_low_cst(%union.tree_node* %region_nr_t, i32 0) #6, !dbg !4487
  call void @llvm.dbg.value(metadata i64 %call1, metadata !4483, metadata !DIExpression()), !dbg !4485
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4488
  %eh = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 0, !dbg !4488
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4488
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 1, !dbg !4488
  %2 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !4488
  %tobool2 = icmp eq %struct.VEC_eh_region_gc* %2, null, !dbg !4488
  br i1 %tobool2, label %cond.end8, label %cond.true3, !dbg !4488

cond.true3:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %2, i64 0, i32 0, !dbg !4488
  br label %cond.end8, !dbg !4488

cond.end8:                                        ; preds = %cond.end, %cond.true3
  %cond9 = phi %struct.VEC_eh_region_base* [ %base, %cond.true3 ], [ null, %cond.end ], !dbg !4488
  %conv = trunc i64 %call1 to i32, !dbg !4488
  %call10 = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %cond9, i32 %conv) #7, !dbg !4488
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call10, metadata !4484, metadata !DIExpression()), !dbg !4485
  %cmp = icmp eq %struct.eh_region_d* %call10, null, !dbg !4489
  br i1 %cmp, label %cond.true12, label %cond.end14, !dbg !4489

cond.true12:                                      ; preds = %cond.end8
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 1948, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4489
  br label %cond.end14, !dbg !4489

cond.end14:                                       ; preds = %cond.end8, %cond.true12
  ret %struct.eh_region_d* %call10, !dbg !4490
}

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_eh_filter(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !4491 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4493, metadata !DIExpression()), !dbg !4495
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4496
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !4496
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4496
  %call = tail call fastcc %struct.eh_region_d* @expand_builtin_eh_common(%union.tree_node* %0) #7, !dbg !4497
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !4494, metadata !DIExpression()), !dbg !4495
  %filter_reg = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 8, !dbg !4498
  %1 = load %struct.rtx_def*, %struct.rtx_def** %filter_reg, align 8, !dbg !4498
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !4500
  br i1 %cmp, label %if.then, label %if.end, !dbg !4501

if.then:                                          ; preds = %entry
  %2 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 7), align 8, !dbg !4502
  %call2 = tail call i32 %2() #6, !dbg !4503
  %call3 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call2) #6, !dbg !4504
  store %struct.rtx_def* %call3, %struct.rtx_def** %filter_reg, align 8, !dbg !4505
  br label %if.end, !dbg !4506

if.end:                                           ; preds = %if.then, %entry
  %3 = phi %struct.rtx_def* [ %call3, %if.then ], [ %1, %entry ], !dbg !4507
  ret %struct.rtx_def* %3, !dbg !4508
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_eh_copy_values(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !4509 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4511, metadata !DIExpression()), !dbg !4515
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4516
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !4516
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4516
  %call = tail call fastcc %struct.eh_region_d* @expand_builtin_eh_common(%union.tree_node* %0) #7, !dbg !4517
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !4512, metadata !DIExpression()), !dbg !4515
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !4518
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !4518
  %call5 = tail call fastcc %struct.eh_region_d* @expand_builtin_eh_common(%union.tree_node* %1) #7, !dbg !4519
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call5, metadata !4513, metadata !DIExpression()), !dbg !4515
  %2 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 7), align 8, !dbg !4520
  %call6 = tail call i32 %2() #6, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %call6, metadata !4514, metadata !DIExpression()), !dbg !4515
  %exc_ptr_reg = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 7, !dbg !4522
  %3 = load %struct.rtx_def*, %struct.rtx_def** %exc_ptr_reg, align 8, !dbg !4522
  %cmp = icmp eq %struct.rtx_def* %3, null, !dbg !4524
  br i1 %cmp, label %if.then, label %if.end, !dbg !4525

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @ptr_mode, align 4, !dbg !4526
  %call7 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %4) #6, !dbg !4527
  store %struct.rtx_def* %call7, %struct.rtx_def** %exc_ptr_reg, align 8, !dbg !4528
  br label %if.end, !dbg !4529

if.end:                                           ; preds = %if.then, %entry
  %exc_ptr_reg9 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call5, i64 0, i32 7, !dbg !4530
  %5 = load %struct.rtx_def*, %struct.rtx_def** %exc_ptr_reg9, align 8, !dbg !4530
  %cmp10 = icmp eq %struct.rtx_def* %5, null, !dbg !4532
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !4533

if.then11:                                        ; preds = %if.end
  %6 = load i32, i32* @ptr_mode, align 4, !dbg !4534
  %call12 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %6) #6, !dbg !4535
  store %struct.rtx_def* %call12, %struct.rtx_def** %exc_ptr_reg9, align 8, !dbg !4536
  br label %if.end14, !dbg !4537

if.end14:                                         ; preds = %if.then11, %if.end
  %filter_reg = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call, i64 0, i32 8, !dbg !4538
  %7 = load %struct.rtx_def*, %struct.rtx_def** %filter_reg, align 8, !dbg !4538
  %cmp15 = icmp eq %struct.rtx_def* %7, null, !dbg !4540
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !4541

if.then16:                                        ; preds = %if.end14
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call6) #6, !dbg !4542
  store %struct.rtx_def* %call17, %struct.rtx_def** %filter_reg, align 8, !dbg !4543
  br label %if.end19, !dbg !4544

if.end19:                                         ; preds = %if.then16, %if.end14
  %filter_reg20 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call5, i64 0, i32 8, !dbg !4545
  %8 = load %struct.rtx_def*, %struct.rtx_def** %filter_reg20, align 8, !dbg !4545
  %cmp21 = icmp eq %struct.rtx_def* %8, null, !dbg !4547
  br i1 %cmp21, label %if.then22, label %if.end25, !dbg !4548

if.then22:                                        ; preds = %if.end19
  %call23 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call6) #6, !dbg !4549
  store %struct.rtx_def* %call23, %struct.rtx_def** %filter_reg20, align 8, !dbg !4550
  br label %if.end25, !dbg !4551

if.end25:                                         ; preds = %if.then22, %if.end19
  %9 = load %struct.rtx_def*, %struct.rtx_def** %exc_ptr_reg, align 8, !dbg !4552
  %10 = load %struct.rtx_def*, %struct.rtx_def** %exc_ptr_reg9, align 8, !dbg !4553
  %call28 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %9, %struct.rtx_def* %10) #6, !dbg !4554
  %11 = load %struct.rtx_def*, %struct.rtx_def** %filter_reg, align 8, !dbg !4555
  %12 = load %struct.rtx_def*, %struct.rtx_def** %filter_reg20, align 8, !dbg !4556
  %call31 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %11, %struct.rtx_def* %12) #6, !dbg !4557
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4558
  ret %struct.rtx_def* %13, !dbg !4559
}

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_builtin_unwind_init() local_unnamed_addr #5 !dbg !4560 {
entry:
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 30), align 2, !dbg !4561
  tail call void @ix86_setup_frame_addresses() #6, !dbg !4562
  ret void, !dbg !4563
}

declare dso_local void @ix86_setup_frame_addresses() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_eh_return_data_regno(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !4564 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4566, metadata !DIExpression()), !dbg !4569
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4570
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !4570
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4570
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4567, metadata !DIExpression()), !dbg !4569
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4571
  %bf.load = load i64, i64* %1, align 8, !dbg !4571
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4573
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !4573
  br i1 %cmp, label %if.end, label %if.then, !dbg !4574

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4575
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !4577
  br label %cleanup, !dbg !4578

if.end:                                           ; preds = %entry
  %call = tail call i64 @tree_low_cst(%union.tree_node* %0, i32 1) #6, !dbg !4579
  call void @llvm.dbg.value(metadata i64 %call, metadata !4568, metadata !DIExpression()), !dbg !4569
  %cmp2 = icmp ugt i64 %call, 1, !dbg !4580
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !4581

if.then4:                                         ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !4582
  br label %cleanup, !dbg !4584

if.end5:                                          ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [53 x i32], [53 x i32]* @svr4_dbx_register_map, i64 0, i64 %call, !dbg !4585
  %4 = load i32, i32* %arrayidx6, align 4, !dbg !4585
  %conv = sext i32 %4 to i64, !dbg !4585
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4568, metadata !DIExpression()), !dbg !4569
  %call7 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !4586
  br label %cleanup, !dbg !4587

cleanup:                                          ; preds = %if.end5, %if.then4, %if.then
  %retval.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %3, %if.then4 ], [ %call7, %if.end5 ], !dbg !4569
  ret %struct.rtx_def* %retval.0, !dbg !4588
}

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_extract_return_addr(%union.tree_node* %addr_tree) local_unnamed_addr #5 !dbg !4589 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %addr_tree, metadata !4591, metadata !DIExpression()), !dbg !4593
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %addr_tree, %struct.rtx_def* null, i32 16, i32 0) #7, !dbg !4594
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4592, metadata !DIExpression()), !dbg !4593
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4595
  %bf.load = load i32, i32* %0, align 8, !dbg !4595
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4595
  %cmp = icmp eq i32 %bf.clear, 1048576, !dbg !4597
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !4598

land.lhs.true:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 0, !dbg !4599
  br i1 %cmp4, label %if.end, label %if.then, !dbg !4600

if.then:                                          ; preds = %land.lhs.true
  %call5 = tail call %struct.rtx_def* @convert_to_mode(i32 16, %struct.rtx_def* %call, i32 0) #6, !dbg !4601
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !4592, metadata !DIExpression()), !dbg !4593
  br label %if.end, !dbg !4603

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %addr.0 = phi %struct.rtx_def* [ %call5, %if.then ], [ %call, %land.lhs.true ], [ %call, %entry ], !dbg !4593
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0, metadata !4592, metadata !DIExpression()), !dbg !4593
  ret %struct.rtx_def* %addr.0, !dbg !4604
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !4605 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4609, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4610, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4611, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !4612, metadata !DIExpression()), !dbg !4613
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier, %struct.rtx_def** null) #6, !dbg !4614
  ret %struct.rtx_def* %call, !dbg !4615
}

declare dso_local %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_frob_return_addr(%union.tree_node* %addr_tree) local_unnamed_addr #5 !dbg !4616 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %addr_tree, metadata !4618, metadata !DIExpression()), !dbg !4620
  %0 = load i32, i32* @ptr_mode, align 4, !dbg !4621
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %addr_tree, %struct.rtx_def* null, i32 %0, i32 0) #7, !dbg !4622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4619, metadata !DIExpression()), !dbg !4620
  %call1 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %call, i8 zeroext 0) #6, !dbg !4623
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4619, metadata !DIExpression()), !dbg !4620
  ret %struct.rtx_def* %call1, !dbg !4624
}

declare dso_local %struct.rtx_def* @convert_memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_builtin_eh_return(%union.tree_node* %stackadj_tree, %union.tree_node* %handler_tree) local_unnamed_addr #5 !dbg !4625 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %stackadj_tree, metadata !4629, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata %union.tree_node* %handler_tree, metadata !4630, metadata !DIExpression()), !dbg !4632
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 0), align 8, !dbg !4633
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %stackadj_tree, %struct.rtx_def* %0, i32 0, i32 0) #7, !dbg !4634
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4631, metadata !DIExpression()), !dbg !4632
  %call1 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %call, i8 zeroext 0) #6, !dbg !4635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4631, metadata !DIExpression()), !dbg !4632
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 0), align 8, !dbg !4636
  %tobool = icmp eq %struct.rtx_def* %1, null, !dbg !4638
  br i1 %tobool, label %if.then, label %if.else, !dbg !4639

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call1) #6, !dbg !4640
  store %struct.rtx_def* %call2, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 0), align 8, !dbg !4641
  br label %if.end5, !dbg !4642

if.else:                                          ; preds = %entry
  %cmp = icmp eq %struct.rtx_def* %call1, %1, !dbg !4643
  br i1 %cmp, label %if.end5, label %if.then3, !dbg !4645

if.then3:                                         ; preds = %if.else
  %call4 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %1, %struct.rtx_def* %call1) #6, !dbg !4646
  br label %if.end5, !dbg !4646

if.end5:                                          ; preds = %if.else, %if.then3, %if.then
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 1), align 8, !dbg !4647
  %call6 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %handler_tree, %struct.rtx_def* %2, i32 0, i32 0) #7, !dbg !4648
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !4631, metadata !DIExpression()), !dbg !4632
  %call7 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %call6, i8 zeroext 0) #6, !dbg !4649
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !4631, metadata !DIExpression()), !dbg !4632
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 1), align 8, !dbg !4650
  %tobool8 = icmp eq %struct.rtx_def* %3, null, !dbg !4652
  br i1 %tobool8, label %if.then9, label %if.else11, !dbg !4653

if.then9:                                         ; preds = %if.end5
  %call10 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call7) #6, !dbg !4654
  store %struct.rtx_def* %call10, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 1), align 8, !dbg !4655
  br label %if.end16, !dbg !4656

if.else11:                                        ; preds = %if.end5
  %cmp12 = icmp eq %struct.rtx_def* %call7, %3, !dbg !4657
  br i1 %cmp12, label %if.end16, label %if.then13, !dbg !4659

if.then13:                                        ; preds = %if.else11
  %call14 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %3, %struct.rtx_def* %call7) #6, !dbg !4660
  br label %if.end16, !dbg !4660

if.end16:                                         ; preds = %if.else11, %if.then13, %if.then9
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 2), align 8, !dbg !4661
  %tobool17 = icmp eq %struct.rtx_def* %4, null, !dbg !4663
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !4664

if.then18:                                        ; preds = %if.end16
  %call19 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !4665
  store %struct.rtx_def* %call19, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 2), align 8, !dbg !4666
  br label %if.end20, !dbg !4667

if.end20:                                         ; preds = %if.end16, %if.then18
  %5 = phi %struct.rtx_def* [ %4, %if.end16 ], [ %call19, %if.then18 ], !dbg !4668
  tail call void @emit_jump(%struct.rtx_def* %5) #6, !dbg !4669
  ret void, !dbg !4670
}

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #2

declare dso_local void @emit_jump(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_eh_return() local_unnamed_addr #5 !dbg !4671 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 2), align 8, !dbg !4674
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !4676
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4677

if.end:                                           ; preds = %entry
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 29), align 1, !dbg !4678
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 2) #6, !dbg !4679
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4680
  %call1 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %1) #6, !dbg !4681
  %call2 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !4682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4673, metadata !DIExpression()), !dbg !4683
  tail call void @emit_jump(%struct.rtx_def* %call2) #6, !dbg !4684
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 2), align 8, !dbg !4685
  %call3 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %2) #6, !dbg !4686
  tail call void @clobber_return_register() #6, !dbg !4687
  %call4 = tail call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 2) #6, !dbg !4688
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 0), align 8, !dbg !4689
  %call5 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call4, %struct.rtx_def* %3) #6, !dbg !4690
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 1), align 8, !dbg !4691
  %call6 = tail call %struct.rtx_def* @gen_eh_return(%struct.rtx_def* %4) #6, !dbg !4693
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #6, !dbg !4694
  %call8 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2) #6, !dbg !4695
  br label %cleanup.cont, !dbg !4696

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !4696
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_label(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @clobber_return_register() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_eh_return(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_extend_pointer(%union.tree_node* %addr_tree) local_unnamed_addr #5 !dbg !4697 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %addr_tree, metadata !4699, metadata !DIExpression()), !dbg !4702
  %0 = load i32, i32* @ptr_mode, align 4, !dbg !4703
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %addr_tree, %struct.rtx_def* null, i32 %0, i32 0) #7, !dbg !4704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4700, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i32 1, metadata !4701, metadata !DIExpression()), !dbg !4702
  %1 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 10), align 8, !dbg !4705
  %call1 = tail call i32 %1() #6, !dbg !4706
  %2 = load i32, i32* @ptr_mode, align 4, !dbg !4707
  %call2 = tail call %struct.rtx_def* @convert_modes(i32 %call1, i32 %2, %struct.rtx_def* %call, i32 1) #6, !dbg !4708
  ret %struct.rtx_def* %call2, !dbg !4709
}

declare dso_local %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_convert_to_eh_region_ranges() #5 !dbg !4710 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4711
  %eh = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 0, !dbg !4712
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4712
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 0, !dbg !4713
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !4713
  %cmp = icmp ne %struct.eh_region_d* %2, null, !dbg !4714
  %conv = zext i1 %cmp to i8, !dbg !4715
  ret i8 %conv, !dbg !4716
}

; Function Attrs: nounwind uwtable
define internal i32 @convert_to_eh_region_ranges() #5 !dbg !4717 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %region = alloca %struct.eh_region_d*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 -3, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4724, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4725, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 0, metadata !4727, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 0, metadata !4728, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4729, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4730, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4731, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def** null, metadata !4732, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* null, metadata !4733, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 0, metadata !4734, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 0, metadata !4735, metadata !DIExpression()), !dbg !4778
  %0 = load i32, i32* @call_site_base, align 4, !dbg !4779
  call void @llvm.dbg.value(metadata i32 %0, metadata !4736, metadata !DIExpression()), !dbg !4778
  %call = tail call fastcc %struct.VEC_uchar_gc* @VEC_uchar_gc_alloc(i32 64) #7, !dbg !4780
  store %struct.VEC_uchar_gc* %call, %struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), align 8, !dbg !4781
  %call1 = tail call %struct.htab* @htab_create(i64 31, i32 (i8*)* nonnull @action_record_hash, i32 (i8*, i8*)* nonnull @action_record_eq, void (i8*)* nonnull @free) #6, !dbg !4782
  call void @llvm.dbg.value(metadata %struct.htab* %call1, metadata !4722, metadata !DIExpression()), !dbg !4778
  %call2 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4783
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4720, metadata !DIExpression()), !dbg !4778
  %1 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !4784
  %2 = bitcast %struct.eh_region_d** %region to i8*, !dbg !4784
  br label %for.cond, !dbg !4785

for.cond:                                         ; preds = %for.inc, %entry
  %min_labelno.0 = phi i32 [ 0, %entry ], [ %min_labelno.3, %for.inc ], !dbg !4786
  %pad_loc.0 = phi %struct.simple_bitmap_def* [ null, %entry ], [ %pad_loc.3, %for.inc ], !dbg !4787
  %3 = phi i8* [ null, %entry ], [ %23, %for.inc ], !dbg !4788
  %pad_map.0 = phi %struct.rtx_def** [ null, %entry ], [ %pad_map.3, %for.inc ], !dbg !4788
  %last_no_action_insn_before_switch.0 = phi %struct.rtx_def* [ null, %entry ], [ %last_no_action_insn_before_switch.4, %for.inc ], !dbg !4789
  %first_no_action_insn_before_switch.0 = phi %struct.rtx_def* [ null, %entry ], [ %first_no_action_insn_before_switch.4, %for.inc ], !dbg !4790
  %section_switch_note.0 = phi %struct.rtx_def* [ null, %entry ], [ %section_switch_note.3, %for.inc ], !dbg !4791
  %cur_sec.0 = phi i32 [ 0, %entry ], [ %cur_sec.3, %for.inc ], !dbg !4792
  %call_site.0 = phi i32 [ 0, %entry ], [ %call_site.8, %for.inc ], !dbg !4793
  %first_no_action_insn.0 = phi %struct.rtx_def* [ null, %entry ], [ %first_no_action_insn.10, %for.inc ], !dbg !4794
  %last_landing_pad.0 = phi %struct.rtx_def* [ null, %entry ], [ %last_landing_pad.7, %for.inc ], !dbg !4795
  %last_action_insn.0 = phi %struct.rtx_def* [ null, %entry ], [ %last_action_insn.3, %for.inc ], !dbg !4796
  %last_action.0 = phi i32 [ -3, %entry ], [ %last_action.8, %for.inc ], !dbg !4797
  %iter.0 = phi %struct.rtx_def* [ %call2, %entry ], [ %25, %for.inc ], !dbg !4798
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iter.0, metadata !4720, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %last_action.0, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_action_insn.0, metadata !4724, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_landing_pad.0, metadata !4725, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.0, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.0, metadata !4727, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %cur_sec.0, metadata !4728, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %section_switch_note.0, metadata !4729, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn_before_switch.0, metadata !4730, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_no_action_insn_before_switch.0, metadata !4731, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pad_map.0, metadata !4732, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %pad_loc.0, metadata !4733, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %min_labelno.0, metadata !4734, metadata !DIExpression()), !dbg !4778
  %tobool = icmp eq %struct.rtx_def* %iter.0, null, !dbg !4799
  br i1 %tobool, label %for.end, label %for.body, !dbg !4799

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.0, i64 0, i32 0, !dbg !4800
  %bf.load = load i32, i32* %4, align 8, !dbg !4800
  %bf.clear = and i32 %bf.load, 65535, !dbg !4800
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4800
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4800

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !4800
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !4800

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 9, !dbg !4800
  br i1 %cmp9, label %if.then, label %lor.lhs.false10, !dbg !4800

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %cmp13 = icmp eq i32 %bf.clear, 10, !dbg !4800
  br i1 %cmp13, label %if.then, label %if.else106, !dbg !4801

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.body
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4802
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iter.0, metadata !4719, metadata !DIExpression()), !dbg !4778
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4804

land.lhs.true:                                    ; preds = %if.then
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.0, i64 0, i32 1, !dbg !4806
  %5 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4806
  %6 = bitcast %union.rtunion_def* %5 to i32**, !dbg !4806
  %7 = load i32*, i32** %6, align 8, !dbg !4806
  %bf.load17 = load i32, i32* %7, align 8, !dbg !4806
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !4806
  %cmp19 = icmp eq i32 %bf.clear18, 5, !dbg !4807
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !4808

if.then20:                                        ; preds = %land.lhs.true
  %arrayidx27 = getelementptr inbounds i32, i32* %7, i64 2, !dbg !4809
  %rt_rtvec = bitcast i32* %arrayidx27 to %struct.rtvec_def**, !dbg !4809
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4809
  %arrayidx28 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 0, !dbg !4809
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx28, align 8, !dbg !4809
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !4719, metadata !DIExpression()), !dbg !4778
  br label %if.end, !dbg !4810

if.end:                                           ; preds = %if.then20, %land.lhs.true, %if.then
  %insn.0 = phi %struct.rtx_def* [ %9, %if.then20 ], [ %iter.0, %land.lhs.true ], [ %iter.0, %if.then ], !dbg !4784
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4719, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !4737, metadata !DIExpression(DW_OP_deref)), !dbg !4784
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %region, metadata !4742, metadata !DIExpression(DW_OP_deref)), !dbg !4784
  %call29 = call fastcc zeroext i8 @get_eh_region_and_lp_from_rtx(%struct.rtx_def* %insn.0, %struct.eh_region_d** nonnull %region, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !4811
  call void @llvm.dbg.value(metadata i8 %call29, metadata !4743, metadata !DIExpression()), !dbg !4784
  %tobool30 = icmp eq i8 %call29, 0, !dbg !4812
  br i1 %tobool30, label %if.end32, label %cleanup, !dbg !4814

if.end32:                                         ; preds = %if.end
  %10 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !4815
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %10, metadata !4742, metadata !DIExpression()), !dbg !4784
  %tobool33 = icmp eq %struct.eh_region_d* %10, null, !dbg !4815
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !4817

if.then34:                                        ; preds = %if.end32
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %10, metadata !4742, metadata !DIExpression()), !dbg !4784
  %call35 = call fastcc i32 @collect_one_action_chain(%struct.htab* %call1, %struct.eh_region_d* nonnull %10) #7, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %call35, metadata !4744, metadata !DIExpression()), !dbg !4784
  br label %if.end36, !dbg !4819

if.end36:                                         ; preds = %if.end32, %if.then34
  %this_action.0 = phi i32 [ %call35, %if.then34 ], [ -1, %if.end32 ], !dbg !4820
  call void @llvm.dbg.value(metadata i32 %this_action.0, metadata !4744, metadata !DIExpression()), !dbg !4784
  %cmp37 = icmp eq i32 %this_action.0, -1, !dbg !4821
  br i1 %cmp37, label %if.else39, label %if.then38, !dbg !4823

if.then38:                                        ; preds = %if.end36
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 38), align 2, !dbg !4824
  br label %if.end43, !dbg !4825

if.else39:                                        ; preds = %if.end36
  %cmp40 = icmp eq i32 %last_action.0, -3, !dbg !4826
  %spec.select = select i1 %cmp40, %struct.rtx_def* %iter.0, %struct.rtx_def* %first_no_action_insn.0, !dbg !4828
  %spec.select1 = select i1 %cmp40, i32 -1, i32 %last_action.0, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !4726, metadata !DIExpression()), !dbg !4778
  br label %if.end43

if.end43:                                         ; preds = %if.else39, %if.then38
  %first_no_action_insn.2 = phi %struct.rtx_def* [ %first_no_action_insn.0, %if.then38 ], [ %spec.select, %if.else39 ], !dbg !4778
  %last_action.2 = phi i32 [ %last_action.0, %if.then38 ], [ %spec.select1, %if.else39 ], !dbg !4778
  call void @llvm.dbg.value(metadata i32 %last_action.2, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.2, metadata !4726, metadata !DIExpression()), !dbg !4778
  %cmp44 = icmp sgt i32 %this_action.0, -1, !dbg !4829
  br i1 %cmp44, label %if.then45, label %if.end47, !dbg !4831

if.then45:                                        ; preds = %if.end43
  %11 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !4832
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %11, metadata !4737, metadata !DIExpression()), !dbg !4784
  %landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %11, i64 0, i32 3, !dbg !4833
  %12 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad, align 8, !dbg !4833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !4745, metadata !DIExpression()), !dbg !4784
  br label %if.end47, !dbg !4834

if.end47:                                         ; preds = %if.end43, %if.then45
  %this_landing_pad.0 = phi %struct.rtx_def* [ %12, %if.then45 ], [ null, %if.end43 ], !dbg !4835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %this_landing_pad.0, metadata !4745, metadata !DIExpression()), !dbg !4784
  %cmp48 = icmp ne i32 %last_action.2, %this_action.0, !dbg !4836
  %cmp50 = icmp ne %struct.rtx_def* %last_landing_pad.0, %this_landing_pad.0, !dbg !4838
  %or.cond = or i1 %cmp48, %cmp50, !dbg !4839
  br i1 %or.cond, label %if.then51, label %cleanup, !dbg !4839

if.then51:                                        ; preds = %if.end47
  %cmp52 = icmp sgt i32 %last_action.2, -2, !dbg !4840
  br i1 %cmp52, label %if.then53, label %if.end86, !dbg !4843

if.then53:                                        ; preds = %if.then51
  %tobool54 = icmp eq %struct.rtx_def* %first_no_action_insn_before_switch.0, null, !dbg !4844
  br i1 %tobool54, label %if.end71, label %if.then55, !dbg !4847

if.then55:                                        ; preds = %if.then53
  %call56 = call fastcc i32 @add_call_site(%struct.rtx_def* null, i32 0, i32 0) #7, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %call56, metadata !4727, metadata !DIExpression()), !dbg !4778
  %call57 = call %struct.rtx_def* @emit_note_before(i32 7, %struct.rtx_def* nonnull %first_no_action_insn_before_switch.0) #6, !dbg !4850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call57, metadata !4721, metadata !DIExpression()), !dbg !4778
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call57, i64 0, i32 1, i32 0, i32 2, !dbg !4851
  %rt_int = bitcast i64* %arrayidx60 to i32*, !dbg !4851
  store i32 %call56, i32* %rt_int, align 8, !dbg !4852
  %tobool61 = icmp eq %struct.rtx_def* %first_no_action_insn.2, null, !dbg !4853
  br i1 %tobool61, label %if.else68, label %if.then62, !dbg !4855

if.then62:                                        ; preds = %if.then55
  %call63 = call %struct.rtx_def* @emit_note_after(i32 8, %struct.rtx_def* %last_no_action_insn_before_switch.0) #6, !dbg !4856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call63, metadata !4721, metadata !DIExpression()), !dbg !4778
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call63, i64 0, i32 1, i32 0, i32 2, !dbg !4858
  %rt_int67 = bitcast i64* %arrayidx66 to i32*, !dbg !4858
  store i32 %call56, i32* %rt_int67, align 8, !dbg !4859
  br label %if.end71, !dbg !4860

if.else68:                                        ; preds = %if.then55
  %cmp69 = icmp eq %struct.rtx_def* %last_action_insn.0, %last_no_action_insn_before_switch.0, !dbg !4861
  br i1 %cmp69, label %if.end71, label %cond.true, !dbg !4861

cond.true:                                        ; preds = %if.else68
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 2481, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4861
  br label %if.end71, !dbg !4861

if.end71:                                         ; preds = %if.then53, %if.then62, %if.else68, %cond.true
  %call_site.1 = phi i32 [ %call_site.0, %if.then53 ], [ %call56, %cond.true ], [ %call56, %if.else68 ], [ %call56, %if.then62 ], !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.1, metadata !4727, metadata !DIExpression()), !dbg !4778
  %tobool72 = icmp eq %struct.rtx_def* %first_no_action_insn.2, null, !dbg !4862
  br i1 %tobool72, label %if.end80, label %if.then73, !dbg !4864

if.then73:                                        ; preds = %if.end71
  %call74 = call fastcc i32 @add_call_site(%struct.rtx_def* null, i32 0, i32 %cur_sec.0) #7, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %call74, metadata !4727, metadata !DIExpression()), !dbg !4778
  %call75 = call %struct.rtx_def* @emit_note_before(i32 7, %struct.rtx_def* nonnull %first_no_action_insn.2) #6, !dbg !4867
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !4721, metadata !DIExpression()), !dbg !4778
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call75, i64 0, i32 1, i32 0, i32 2, !dbg !4868
  %rt_int79 = bitcast i64* %arrayidx78 to i32*, !dbg !4868
  store i32 %call74, i32* %rt_int79, align 8, !dbg !4869
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4726, metadata !DIExpression()), !dbg !4778
  br label %if.end80, !dbg !4870

if.end80:                                         ; preds = %if.end71, %if.then73
  %call_site.2 = phi i32 [ %call74, %if.then73 ], [ %call_site.1, %if.end71 ], !dbg !4871
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.2, metadata !4727, metadata !DIExpression()), !dbg !4778
  %call81 = call %struct.rtx_def* @emit_note_after(i32 8, %struct.rtx_def* %last_action_insn.0) #6, !dbg !4872
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call81, metadata !4721, metadata !DIExpression()), !dbg !4778
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call81, i64 0, i32 1, i32 0, i32 2, !dbg !4873
  %rt_int85 = bitcast i64* %arrayidx84 to i32*, !dbg !4873
  store i32 %call_site.2, i32* %rt_int85, align 8, !dbg !4874
  br label %if.end86, !dbg !4875

if.end86:                                         ; preds = %if.end80, %if.then51
  %call_site.3 = phi i32 [ %call_site.2, %if.end80 ], [ %call_site.0, %if.then51 ], !dbg !4778
  %first_no_action_insn.4 = phi %struct.rtx_def* [ null, %if.end80 ], [ %first_no_action_insn.2, %if.then51 ], !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.4, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.3, metadata !4727, metadata !DIExpression()), !dbg !4778
  %cmp87 = icmp sgt i32 %this_action.0, -2, !dbg !4876
  br i1 %cmp87, label %if.then88, label %cleanup, !dbg !4878

if.then88:                                        ; preds = %if.end86
  %.this_action.0 = select i1 %cmp37, i32 0, i32 %this_action.0, !dbg !4879
  %call94 = call fastcc i32 @add_call_site(%struct.rtx_def* %this_landing_pad.0, i32 %.this_action.0, i32 %cur_sec.0) #7, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %call94, metadata !4727, metadata !DIExpression()), !dbg !4778
  %call95 = call %struct.rtx_def* @emit_note_before(i32 7, %struct.rtx_def* nonnull %iter.0) #6, !dbg !4882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call95, metadata !4721, metadata !DIExpression()), !dbg !4778
  %arrayidx98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call95, i64 0, i32 1, i32 0, i32 2, !dbg !4883
  %rt_int99 = bitcast i64* %arrayidx98 to i32*, !dbg !4883
  store i32 %call94, i32* %rt_int99, align 8, !dbg !4884
  br label %cleanup, !dbg !4885

cleanup:                                          ; preds = %if.end, %if.end47, %if.then88, %if.end86
  %call_site.6 = phi i32 [ %call_site.0, %if.end ], [ %call_site.0, %if.end47 ], [ %call94, %if.then88 ], [ %call_site.3, %if.end86 ], !dbg !4778
  %first_no_action_insn.6 = phi %struct.rtx_def* [ %first_no_action_insn.0, %if.end ], [ %first_no_action_insn.2, %if.end47 ], [ %first_no_action_insn.4, %if.then88 ], [ %first_no_action_insn.4, %if.end86 ], !dbg !4778
  %last_landing_pad.2 = phi %struct.rtx_def* [ %last_landing_pad.0, %if.end ], [ %last_landing_pad.0, %if.end47 ], [ %this_landing_pad.0, %if.then88 ], [ %this_landing_pad.0, %if.end86 ], !dbg !4778
  %last_action_insn.1 = phi %struct.rtx_def* [ %last_action_insn.0, %if.end ], [ %iter.0, %if.end47 ], [ %iter.0, %if.then88 ], [ %iter.0, %if.end86 ], !dbg !4778
  %last_action.4 = phi i32 [ %last_action.0, %if.end ], [ %this_action.0, %if.end47 ], [ %this_action.0, %if.then88 ], [ %this_action.0, %if.end86 ], !dbg !4778
  call void @llvm.dbg.value(metadata i32 %last_action.4, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_action_insn.1, metadata !4724, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_landing_pad.2, metadata !4725, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.6, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.6, metadata !4727, metadata !DIExpression()), !dbg !4778
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4886
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4886
  br label %for.inc

if.else106:                                       ; preds = %lor.lhs.false10
  %cmp109 = icmp eq i32 %bf.clear, 13, !dbg !4887
  br i1 %cmp109, label %land.lhs.true110, label %if.else165, !dbg !4889

land.lhs.true110:                                 ; preds = %if.else106
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.0, i64 0, i32 1, !dbg !4890
  %13 = getelementptr inbounds %union.u, %union.u* %u111, i64 1, i32 0, i32 0, i64 0, !dbg !4890
  %rt_int114 = bitcast %union.rtunion_def* %13 to i32*, !dbg !4890
  %14 = load i32, i32* %rt_int114, align 8, !dbg !4890
  %cmp115 = icmp eq i32 %14, 11, !dbg !4891
  br i1 %cmp115, label %if.then116, label %if.else165, !dbg !4892

if.then116:                                       ; preds = %land.lhs.true110
  %cmp117 = icmp eq %struct.rtx_def* %section_switch_note.0, null, !dbg !4893
  br i1 %cmp117, label %cond.end120, label %cond.true118, !dbg !4893

cond.true118:                                     ; preds = %if.then116
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 2516, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4893
  br label %cond.end120, !dbg !4893

cond.end120:                                      ; preds = %if.then116, %cond.true118
  %15 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !4895
  %tobool122 = icmp eq i32 %15, 0, !dbg !4895
  br i1 %tobool122, label %cond.true123, label %cond.end125, !dbg !4895

cond.true123:                                     ; preds = %cond.end120
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 2517, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4895
  br label %cond.end125, !dbg !4895

cond.end125:                                      ; preds = %cond.end120, %cond.true123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iter.0, metadata !4729, metadata !DIExpression()), !dbg !4778
  %tobool127 = icmp eq %struct.rtx_def* %first_no_action_insn.0, null, !dbg !4896
  br i1 %tobool127, label %if.else134, label %if.then128, !dbg !4898

if.then128:                                       ; preds = %cond.end125
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.0, metadata !4730, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_action_insn.0, metadata !4731, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4726, metadata !DIExpression()), !dbg !4778
  %cmp129 = icmp eq i32 %last_action.0, -1, !dbg !4899
  br i1 %cmp129, label %if.end138, label %cond.true130, !dbg !4899

cond.true130:                                     ; preds = %if.then128
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 2524, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4899
  br label %if.end138, !dbg !4899

if.else134:                                       ; preds = %cond.end125
  %cmp135 = icmp eq i32 %last_action.0, -3, !dbg !4901
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !4903
  %spec.select2 = select i1 %cmp135, %struct.rtx_def* %last_landing_pad.0, %struct.rtx_def* %16, !dbg !4904
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select2, metadata !4725, metadata !DIExpression()), !dbg !4778
  br label %if.end138

if.end138:                                        ; preds = %cond.true130, %if.then128, %if.else134
  %last_no_action_insn_before_switch.1 = phi %struct.rtx_def* [ %last_no_action_insn_before_switch.0, %if.else134 ], [ %last_action_insn.0, %if.then128 ], [ %last_action_insn.0, %cond.true130 ], !dbg !4778
  %first_no_action_insn_before_switch.1 = phi %struct.rtx_def* [ %first_no_action_insn_before_switch.0, %if.else134 ], [ %first_no_action_insn.0, %if.then128 ], [ %first_no_action_insn.0, %cond.true130 ], !dbg !4778
  %last_landing_pad.4 = phi %struct.rtx_def* [ %spec.select2, %if.else134 ], [ %last_landing_pad.0, %if.then128 ], [ %last_landing_pad.0, %cond.true130 ], !dbg !4778
  %last_action.5 = phi i32 [ %last_action.0, %if.else134 ], [ -3, %if.then128 ], [ -3, %cond.true130 ], !dbg !4778
  call void @llvm.dbg.value(metadata i32 %last_action.5, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_landing_pad.4, metadata !4725, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn_before_switch.1, metadata !4730, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_no_action_insn_before_switch.1, metadata !4731, metadata !DIExpression()), !dbg !4778
  %idxprom = sext i32 %cur_sec.0 to i64, !dbg !4905
  %arrayidx139 = getelementptr inbounds %struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 6, i64 %idxprom, !dbg !4905
  %17 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %arrayidx139, align 8, !dbg !4905
  %tobool140 = icmp eq %struct.VEC_call_site_record_gc* %17, null, !dbg !4905
  br i1 %tobool140, label %cond.end145, label %cond.true141, !dbg !4905

cond.true141:                                     ; preds = %if.end138
  %base = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %17, i64 0, i32 0, !dbg !4905
  br label %cond.end145, !dbg !4905

cond.end145:                                      ; preds = %if.end138, %cond.true141
  %cond146 = phi %struct.VEC_call_site_record_base* [ %base, %cond.true141 ], [ null, %if.end138 ], !dbg !4905
  %call147 = call fastcc i32 @VEC_call_site_record_base_length(%struct.VEC_call_site_record_base* %cond146) #7, !dbg !4905
  %18 = load i32, i32* @call_site_base, align 4, !dbg !4906
  %add = add i32 %18, %call147, !dbg !4906
  store i32 %add, i32* @call_site_base, align 4, !dbg !4906
  %inc = add nsw i32 %cur_sec.0, 1, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4728, metadata !DIExpression()), !dbg !4778
  %idxprom148 = sext i32 %inc to i64, !dbg !4908
  %arrayidx149 = getelementptr inbounds %struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 6, i64 %idxprom148, !dbg !4908
  %19 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %arrayidx149, align 8, !dbg !4908
  %cmp150 = icmp eq %struct.VEC_call_site_record_gc* %19, null, !dbg !4908
  br i1 %cmp150, label %cond.end153, label %cond.true151, !dbg !4908

cond.true151:                                     ; preds = %cond.end145
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 2534, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4908
  br label %cond.end153, !dbg !4908

cond.end153:                                      ; preds = %cond.end145, %cond.true151
  %call155 = call fastcc %struct.VEC_call_site_record_gc* @VEC_call_site_record_gc_alloc(i32 10) #7, !dbg !4909
  store %struct.VEC_call_site_record_gc* %call155, %struct.VEC_call_site_record_gc** %arrayidx149, align 8, !dbg !4910
  %call158 = call i32 @max_label_num() #6, !dbg !4911
  call void @llvm.dbg.value(metadata i32 %call158, metadata !4735, metadata !DIExpression()), !dbg !4778
  %call159 = call i32 @get_first_label_num() #6, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %call159, metadata !4734, metadata !DIExpression()), !dbg !4778
  %sub = sub nsw i32 %call158, %call159, !dbg !4913
  %add160 = add nsw i32 %sub, 1, !dbg !4913
  %conv = sext i32 %add160 to i64, !dbg !4913
  %call161 = call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !4913
  %20 = bitcast i8* %call161 to %struct.rtx_def**, !dbg !4913
  call void @llvm.dbg.value(metadata %struct.rtx_def** %20, metadata !4732, metadata !DIExpression()), !dbg !4778
  %call164 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %add160) #6, !dbg !4914
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call164, metadata !4733, metadata !DIExpression()), !dbg !4778
  br label %for.inc, !dbg !4915

if.else165:                                       ; preds = %land.lhs.true110, %if.else106
  %cmp168 = icmp eq i32 %bf.clear, 12, !dbg !4916
  %tobool171 = icmp ne %struct.rtx_def** %pad_map.0, null, !dbg !4918
  %or.cond3 = and i1 %cmp168, %tobool171, !dbg !4919
  br i1 %or.cond3, label %if.then172, label %for.inc, !dbg !4919

if.then172:                                       ; preds = %if.else165
  %u173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.0, i64 0, i32 1, !dbg !4920
  %21 = getelementptr inbounds %union.u, %union.u* %u173, i64 1, i32 0, i32 0, i64 1, !dbg !4920
  %rt_int176 = bitcast %union.rtunion_def* %21 to i32*, !dbg !4920
  %22 = load i32, i32* %rt_int176, align 8, !dbg !4920
  %sub177 = sub nsw i32 %22, %min_labelno.0, !dbg !4921
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %pad_loc.0, i32 %sub177) #7, !dbg !4922
  br label %for.inc, !dbg !4922

for.inc:                                          ; preds = %cleanup, %if.else165, %if.then172, %cond.end153
  %min_labelno.3 = phi i32 [ %min_labelno.0, %cleanup ], [ %call159, %cond.end153 ], [ %min_labelno.0, %if.then172 ], [ %min_labelno.0, %if.else165 ], !dbg !4786
  %pad_loc.3 = phi %struct.simple_bitmap_def* [ %pad_loc.0, %cleanup ], [ %call164, %cond.end153 ], [ %pad_loc.0, %if.then172 ], [ %pad_loc.0, %if.else165 ], !dbg !4787
  %23 = phi i8* [ %3, %cleanup ], [ %call161, %cond.end153 ], [ %3, %if.then172 ], [ %3, %if.else165 ], !dbg !4788
  %pad_map.3 = phi %struct.rtx_def** [ %pad_map.0, %cleanup ], [ %20, %cond.end153 ], [ %pad_map.0, %if.then172 ], [ %pad_map.0, %if.else165 ], !dbg !4788
  %last_no_action_insn_before_switch.4 = phi %struct.rtx_def* [ %last_no_action_insn_before_switch.0, %cleanup ], [ %last_no_action_insn_before_switch.1, %cond.end153 ], [ %last_no_action_insn_before_switch.0, %if.then172 ], [ %last_no_action_insn_before_switch.0, %if.else165 ], !dbg !4789
  %first_no_action_insn_before_switch.4 = phi %struct.rtx_def* [ %first_no_action_insn_before_switch.0, %cleanup ], [ %first_no_action_insn_before_switch.1, %cond.end153 ], [ %first_no_action_insn_before_switch.0, %if.then172 ], [ %first_no_action_insn_before_switch.0, %if.else165 ], !dbg !4790
  %section_switch_note.3 = phi %struct.rtx_def* [ %section_switch_note.0, %cleanup ], [ %iter.0, %cond.end153 ], [ %section_switch_note.0, %if.then172 ], [ %section_switch_note.0, %if.else165 ], !dbg !4791
  %cur_sec.3 = phi i32 [ %cur_sec.0, %cleanup ], [ %inc, %cond.end153 ], [ %cur_sec.0, %if.then172 ], [ %cur_sec.0, %if.else165 ], !dbg !4792
  %call_site.8 = phi i32 [ %call_site.6, %cleanup ], [ %call_site.0, %cond.end153 ], [ %call_site.0, %if.then172 ], [ %call_site.0, %if.else165 ], !dbg !4793
  %first_no_action_insn.10 = phi %struct.rtx_def* [ %first_no_action_insn.6, %cleanup ], [ null, %cond.end153 ], [ %first_no_action_insn.0, %if.then172 ], [ %first_no_action_insn.0, %if.else165 ], !dbg !4794
  %last_landing_pad.7 = phi %struct.rtx_def* [ %last_landing_pad.2, %cleanup ], [ %last_landing_pad.4, %cond.end153 ], [ %last_landing_pad.0, %if.then172 ], [ %last_landing_pad.0, %if.else165 ], !dbg !4795
  %last_action_insn.3 = phi %struct.rtx_def* [ %last_action_insn.1, %cleanup ], [ %last_action_insn.0, %cond.end153 ], [ %last_action_insn.0, %if.then172 ], [ %last_action_insn.0, %if.else165 ], !dbg !4796
  %last_action.8 = phi i32 [ %last_action.4, %cleanup ], [ %last_action.5, %cond.end153 ], [ %last_action.0, %if.then172 ], [ %last_action.0, %if.else165 ], !dbg !4797
  call void @llvm.dbg.value(metadata i32 %last_action.8, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_action_insn.3, metadata !4724, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_landing_pad.7, metadata !4725, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.10, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.8, metadata !4727, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %cur_sec.3, metadata !4728, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %section_switch_note.3, metadata !4729, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn_before_switch.4, metadata !4730, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_no_action_insn_before_switch.4, metadata !4731, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pad_map.3, metadata !4732, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %pad_loc.3, metadata !4733, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %min_labelno.3, metadata !4734, metadata !DIExpression()), !dbg !4778
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4923
  %rt_rtx184 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !4923
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !4923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !4720, metadata !DIExpression()), !dbg !4778
  br label %for.cond, !dbg !4924, !llvm.loop !4925

for.end:                                          ; preds = %for.cond
  %min_labelno.0.lcssa = phi i32 [ %min_labelno.0, %for.cond ], !dbg !4786
  %pad_loc.0.lcssa = phi %struct.simple_bitmap_def* [ %pad_loc.0, %for.cond ], !dbg !4787
  %.lcssa = phi i8* [ %3, %for.cond ], !dbg !4788
  %pad_map.0.lcssa = phi %struct.rtx_def** [ %pad_map.0, %for.cond ], !dbg !4788
  %section_switch_note.0.lcssa = phi %struct.rtx_def* [ %section_switch_note.0, %for.cond ], !dbg !4791
  %call_site.0.lcssa = phi i32 [ %call_site.0, %for.cond ], !dbg !4793
  %first_no_action_insn.0.lcssa = phi %struct.rtx_def* [ %first_no_action_insn.0, %for.cond ], !dbg !4794
  %last_action_insn.0.lcssa = phi %struct.rtx_def* [ %last_action_insn.0, %for.cond ], !dbg !4796
  %last_action.0.lcssa = phi i32 [ %last_action.0, %for.cond ], !dbg !4797
  call void @llvm.dbg.value(metadata i32 %min_labelno.0.lcssa, metadata !4734, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %pad_loc.0.lcssa, metadata !4733, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pad_map.0.lcssa, metadata !4732, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %section_switch_note.0.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.0.lcssa, metadata !4727, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.0.lcssa, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_action_insn.0.lcssa, metadata !4724, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %last_action.0.lcssa, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %min_labelno.0.lcssa, metadata !4734, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %pad_loc.0.lcssa, metadata !4733, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pad_map.0.lcssa, metadata !4732, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %section_switch_note.0.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.0.lcssa, metadata !4727, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.0.lcssa, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_action_insn.0.lcssa, metadata !4724, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %last_action.0.lcssa, metadata !4723, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %min_labelno.0.lcssa, metadata !4734, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %pad_loc.0.lcssa, metadata !4733, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pad_map.0.lcssa, metadata !4732, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %section_switch_note.0.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %call_site.0.lcssa, metadata !4727, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %first_no_action_insn.0.lcssa, metadata !4726, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_action_insn.0.lcssa, metadata !4724, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %last_action.0.lcssa, metadata !4723, metadata !DIExpression()), !dbg !4778
  %cmp185 = icmp slt i32 %last_action.0.lcssa, -1, !dbg !4927
  %tobool188 = icmp ne %struct.rtx_def* %first_no_action_insn.0.lcssa, null, !dbg !4929
  %or.cond4 = or i1 %cmp185, %tobool188, !dbg !4930
  br i1 %or.cond4, label %if.end195, label %if.then189, !dbg !4930

if.then189:                                       ; preds = %for.end
  %call190 = call %struct.rtx_def* @emit_note_after(i32 8, %struct.rtx_def* %last_action_insn.0.lcssa) #6, !dbg !4931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call190, metadata !4721, metadata !DIExpression()), !dbg !4778
  %arrayidx193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call190, i64 0, i32 1, i32 0, i32 2, !dbg !4933
  %rt_int194 = bitcast i64* %arrayidx193 to i32*, !dbg !4933
  store i32 %call_site.0.lcssa, i32* %rt_int194, align 8, !dbg !4934
  br label %if.end195, !dbg !4935

if.end195:                                        ; preds = %for.end, %if.then189
  store i32 %0, i32* @call_site_base, align 4, !dbg !4936
  %tobool196 = icmp eq %struct.rtx_def** %pad_map.0.lcssa, null, !dbg !4937
  br i1 %tobool196, label %if.end385, label %for.cond198.preheader, !dbg !4938

for.cond198.preheader:                            ; preds = %if.end195
  %26 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4939
  %27 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4940
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4940
  %29 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4940
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4942
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4942
  br label %for.cond198, !dbg !4944

for.cond198:                                      ; preds = %for.cond198.preheader, %for.inc382
  %indvars.iv = phi i64 [ 0, %for.cond198.preheader ], [ %indvars.iv.next, %for.inc382 ], !dbg !4945
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4728, metadata !DIExpression()), !dbg !4778
  %exitcond = icmp eq i64 %indvars.iv, 2, !dbg !4946
  br i1 %exitcond, label %for.end384, label %for.body201, !dbg !4944

for.body201:                                      ; preds = %for.cond198
  %arrayidx203 = getelementptr inbounds %struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 6, i64 %indvars.iv, !dbg !4947
  %32 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %arrayidx203, align 8, !dbg !4947
  %tobool204 = icmp eq %struct.VEC_call_site_record_gc* %32, null, !dbg !4947
  br i1 %tobool204, label %cond.end210, label %cond.true205, !dbg !4947

cond.true205:                                     ; preds = %for.body201
  %base208 = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %32, i64 0, i32 0, !dbg !4947
  br label %cond.end210, !dbg !4947

cond.end210:                                      ; preds = %for.body201, %cond.true205
  %cond211 = phi %struct.VEC_call_site_record_base* [ %base208, %cond.true205 ], [ null, %for.body201 ], !dbg !4947
  %call212 = call fastcc i32 @VEC_call_site_record_base_length(%struct.VEC_call_site_record_base* %cond211) #7, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %call212, metadata !4753, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4754, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i32 0, metadata !4746, metadata !DIExpression()), !dbg !4948
  %cmp242 = icmp eq i64 %indvars.iv, 0, !dbg !4949
  br label %for.cond213, !dbg !4951

for.cond213:                                      ; preds = %cleanup374, %cond.end210
  %prev_bb.0 = phi %struct.basic_block_def* [ null, %cond.end210 ], [ %prev_bb.6, %cleanup374 ], !dbg !4952
  %i.0 = phi i32 [ 0, %cond.end210 ], [ %inc380, %cleanup374 ], !dbg !4953
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4746, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.0, metadata !4754, metadata !DIExpression()), !dbg !4948
  %cmp214 = icmp slt i32 %i.0, %call212, !dbg !4954
  br i1 %cmp214, label %for.body216, label %for.inc382, !dbg !4955

for.body216:                                      ; preds = %for.cond213
  %33 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %arrayidx203, align 8, !dbg !4956
  %tobool219 = icmp eq %struct.VEC_call_site_record_gc* %33, null, !dbg !4956
  br i1 %tobool219, label %cond.end225, label %cond.true220, !dbg !4956

cond.true220:                                     ; preds = %for.body216
  %base223 = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %33, i64 0, i32 0, !dbg !4956
  br label %cond.end225, !dbg !4956

cond.end225:                                      ; preds = %for.body216, %cond.true220
  %cond226 = phi %struct.VEC_call_site_record_base* [ %base223, %cond.true220 ], [ null, %for.body216 ], !dbg !4956
  %call227 = call fastcc %struct.call_site_record_d* @VEC_call_site_record_base_index(%struct.VEC_call_site_record_base* %cond226, i32 %i.0) #7, !dbg !4956
  call void @llvm.dbg.value(metadata %struct.call_site_record_d* %call227, metadata !4756, metadata !DIExpression()), !dbg !4957
  %landing_pad229 = getelementptr inbounds %struct.call_site_record_d, %struct.call_site_record_d* %call227, i64 0, i32 0, !dbg !4958
  %34 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad229, align 8, !dbg !4958
  %cmp230 = icmp eq %struct.rtx_def* %34, null, !dbg !4960
  br i1 %cmp230, label %cleanup374, label %if.end233, !dbg !4961

if.end233:                                        ; preds = %cond.end225
  %u235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i64 0, i32 1, !dbg !4962
  %35 = getelementptr inbounds %union.u, %union.u* %u235, i64 1, i32 0, i32 0, i64 1, !dbg !4962
  %rt_int238 = bitcast %union.rtunion_def* %35 to i32*, !dbg !4962
  %36 = load i32, i32* %rt_int238, align 8, !dbg !4962
  %sub239 = sub nsw i32 %36, %min_labelno.0.lcssa, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %sub239, metadata !4752, metadata !DIExpression()), !dbg !4948
  %div = lshr i32 %sub239, 6, !dbg !4964
  %idxprom240 = zext i32 %div to i64, !dbg !4964
  %arrayidx241 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %pad_loc.0.lcssa, i64 0, i32 3, i64 %idxprom240, !dbg !4964
  %37 = load i64, i64* %arrayidx241, align 8, !dbg !4964
  %rem = and i32 %sub239, 63, !dbg !4964
  %sh_prom = zext i32 %rem to i64, !dbg !4964
  %38 = shl i64 1, %sh_prom, !dbg !4965
  %39 = and i64 %37, %38, !dbg !4965
  %40 = icmp ne i64 %39, 0, !dbg !4965
  %tobool245 = xor i1 %cmp242, %40, !dbg !4965
  br i1 %tobool245, label %cleanup374, label %if.end247, !dbg !4966

if.end247:                                        ; preds = %if.end233
  %idxprom248 = sext i32 %sub239 to i64, !dbg !4967
  %arrayidx249 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %pad_map.0.lcssa, i64 %idxprom248, !dbg !4967
  %41 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx249, align 8, !dbg !4967
  %cmp250 = icmp eq %struct.rtx_def* %41, null, !dbg !4968
  br i1 %cmp250, label %if.then252, label %if.end247.if.end370_crit_edge, !dbg !4969

if.end247.if.end370_crit_edge:                    ; preds = %if.end247
  %.pre = bitcast %struct.call_site_record_d* %call227 to i64*, !dbg !4970
  br label %if.end370, !dbg !4969

if.then252:                                       ; preds = %if.end247
  %call253 = call %struct.rtx_def* @gen_label_rtx() #6, !dbg !4971
  store %struct.rtx_def* %call253, %struct.rtx_def** %arrayidx249, align 8, !dbg !4972
  %cmp256 = icmp eq %struct.basic_block_def* %prev_bb.0, null, !dbg !4973
  br i1 %cmp256, label %for.cond259.preheader, label %if.end284, !dbg !4975

for.cond259.preheader:                            ; preds = %if.then252
  br label %for.cond259, !dbg !4976

for.cond259:                                      ; preds = %for.cond259.preheader, %for.inc278
  %iter.1 = phi %struct.rtx_def* [ %47, %for.inc278 ], [ %section_switch_note.0.lcssa, %for.cond259.preheader ], !dbg !4978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iter.1, metadata !4720, metadata !DIExpression()), !dbg !4778
  %tobool260 = icmp eq %struct.rtx_def* %iter.1, null, !dbg !4976
  br i1 %tobool260, label %if.end284.loopexit, label %for.body261, !dbg !4976

for.body261:                                      ; preds = %for.cond259
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.1, i64 0, i32 0, !dbg !4979
  %bf.load262 = load i32, i32* %42, align 8, !dbg !4979
  %bf.clear263 = and i32 %bf.load262, 65535, !dbg !4979
  %cmp264 = icmp eq i32 %bf.clear263, 13, !dbg !4979
  br i1 %cmp264, label %land.lhs.true266, label %for.inc278, !dbg !4979

land.lhs.true266:                                 ; preds = %for.body261
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.1, i64 0, i32 1, !dbg !4979
  %43 = getelementptr inbounds %union.u, %union.u* %u267, i64 1, i32 0, i32 0, i64 0, !dbg !4979
  %rt_int270 = bitcast %union.rtunion_def* %43 to i32*, !dbg !4979
  %44 = load i32, i32* %rt_int270, align 8, !dbg !4979
  %cmp271 = icmp eq i32 %44, 10, !dbg !4979
  br i1 %cmp271, label %if.then273, label %for.inc278, !dbg !4982

if.then273:                                       ; preds = %land.lhs.true266
  %iter.1.lcssa10 = phi %struct.rtx_def* [ %iter.1, %land.lhs.true266 ], !dbg !4978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iter.1.lcssa10, metadata !4720, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iter.1.lcssa10, metadata !4720, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %iter.1.lcssa10, metadata !4720, metadata !DIExpression()), !dbg !4778
  %arrayidx276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.1.lcssa10, i64 0, i32 1, i32 0, i32 2, !dbg !4983
  %rt_bb = bitcast i64* %arrayidx276 to %struct.basic_block_def**, !dbg !4983
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4983
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %45, metadata !4754, metadata !DIExpression()), !dbg !4948
  br label %if.end284, !dbg !4985

for.inc278:                                       ; preds = %for.body261, %land.lhs.true266
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %iter.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4986
  %rt_rtx282 = bitcast %union.rtunion_def* %46 to %struct.rtx_def**, !dbg !4986
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx282, align 8, !dbg !4986
  call void @llvm.dbg.value(metadata %struct.rtx_def* %47, metadata !4720, metadata !DIExpression()), !dbg !4778
  br label %for.cond259, !dbg !4987, !llvm.loop !4988

if.end284.loopexit:                               ; preds = %for.cond259
  br label %if.end284, !dbg !4990

if.end284:                                        ; preds = %if.end284.loopexit, %if.then273, %if.then252
  %prev_bb.2 = phi %struct.basic_block_def* [ %prev_bb.0, %if.then252 ], [ %45, %if.then273 ], [ null, %if.end284.loopexit ], !dbg !4948
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.2, metadata !4754, metadata !DIExpression()), !dbg !4948
  br i1 %cmp242, label %if.then287, label %if.else294, !dbg !4992

if.then287:                                       ; preds = %if.end284
  %call290 = call %struct.rtx_def* @emit_label_before(%struct.rtx_def* %call253, %struct.rtx_def* %section_switch_note.0.lcssa) #6, !dbg !4993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call290, metadata !4761, metadata !DIExpression()), !dbg !4957
  %48 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad229, align 8, !dbg !4995
  %call292 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %48) #6, !dbg !4996
  %call293 = call %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %call292, %struct.rtx_def* %section_switch_note.0.lcssa) #6, !dbg !4997
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call293, metadata !4760, metadata !DIExpression()), !dbg !4957
  br label %if.end301, !dbg !4998

if.else294:                                       ; preds = %if.end284
  %49 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad229, align 8, !dbg !4999
  %call296 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %49) #6, !dbg !5001
  %call297 = call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call296, %struct.rtx_def* %section_switch_note.0.lcssa) #6, !dbg !5002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call297, metadata !4760, metadata !DIExpression()), !dbg !4957
  %50 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx249, align 8, !dbg !5003
  %call300 = call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %50, %struct.rtx_def* %section_switch_note.0.lcssa) #6, !dbg !5004
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call300, metadata !4761, metadata !DIExpression()), !dbg !4957
  br label %if.end301

if.end301:                                        ; preds = %if.else294, %if.then287
  %jump.0 = phi %struct.rtx_def* [ %call293, %if.then287 ], [ %call297, %if.else294 ], !dbg !5005
  %note228.0 = phi %struct.rtx_def* [ %call290, %if.then287 ], [ %call300, %if.else294 ], !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note228.0, metadata !4761, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump.0, metadata !4760, metadata !DIExpression()), !dbg !4957
  %51 = bitcast %struct.call_site_record_d* %call227 to i64*, !dbg !5006
  %52 = load i64, i64* %51, align 8, !dbg !5006
  %u303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump.0, i64 0, i32 1, !dbg !5007
  %arrayidx305 = getelementptr inbounds %union.u, %union.u* %u303, i64 1, i32 0, i32 1, !dbg !5007
  %53 = bitcast %struct.object_block** %arrayidx305 to i64*, !dbg !5008
  store i64 %52, i64* %53, align 8, !dbg !5008
  call void @add_reg_note(%struct.rtx_def* %jump.0, i32 29, %struct.rtx_def* null) #6, !dbg !5009
  %54 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad229, align 8, !dbg !5010
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5010
  %rt_rtx311 = bitcast %union.rtunion_def* %55 to %struct.rtx_def**, !dbg !5010
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx311, align 8, !dbg !5010
  call void @llvm.dbg.value(metadata %struct.rtx_def* %56, metadata !4720, metadata !DIExpression()), !dbg !4778
  %tobool312 = icmp eq %struct.rtx_def* %56, null, !dbg !5011
  br i1 %tobool312, label %if.end331, label %land.lhs.true313, !dbg !5013

land.lhs.true313:                                 ; preds = %if.end301
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i64 0, i32 0, !dbg !5014
  %bf.load314 = load i32, i32* %57, align 8, !dbg !5014
  %bf.clear315 = and i32 %bf.load314, 65535, !dbg !5014
  %cmp316 = icmp eq i32 %bf.clear315, 13, !dbg !5014
  br i1 %cmp316, label %land.lhs.true318, label %if.end331, !dbg !5014

land.lhs.true318:                                 ; preds = %land.lhs.true313
  %u319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i64 0, i32 1, !dbg !5014
  %58 = getelementptr inbounds %union.u, %union.u* %u319, i64 1, i32 0, i32 0, i64 0, !dbg !5014
  %rt_int322 = bitcast %union.rtunion_def* %58 to i32*, !dbg !5014
  %59 = load i32, i32* %rt_int322, align 8, !dbg !5014
  %cmp323 = icmp eq i32 %59, 10, !dbg !5014
  br i1 %cmp323, label %if.then325, label %if.end331, !dbg !5015

if.then325:                                       ; preds = %land.lhs.true318
  %arrayidx328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i64 0, i32 1, i32 0, i32 2, !dbg !5016
  %rt_bb329 = bitcast i64* %arrayidx328 to %struct.basic_block_def**, !dbg !5016
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb329, align 8, !dbg !5016
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %60, metadata !4755, metadata !DIExpression()), !dbg !4948
  br label %if.end331, !dbg !5017

if.end331:                                        ; preds = %if.end301, %land.lhs.true313, %land.lhs.true318, %if.then325
  %padbb.0 = phi %struct.basic_block_def* [ %60, %if.then325 ], [ null, %land.lhs.true318 ], [ null, %land.lhs.true313 ], [ null, %if.end301 ], !dbg !5018
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %padbb.0, metadata !4755, metadata !DIExpression()), !dbg !4948
  %tobool332 = icmp ne %struct.basic_block_def* %padbb.0, null, !dbg !5019
  %tobool334 = icmp ne %struct.basic_block_def* %prev_bb.2, null, !dbg !5020
  %or.cond5 = and i1 %tobool332, %tobool334, !dbg !5021
  br i1 %or.cond5, label %land.lhs.true335, label %if.end370, !dbg !5021

land.lhs.true335:                                 ; preds = %if.end331
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %padbb.0, i64 0, i32 13, !dbg !5022
  %61 = load i32, i32* %flags, align 8, !dbg !5022
  %and336 = and i32 %61, 96, !dbg !5022
  %cmp337 = icmp eq i32 %and336, 0, !dbg !5023
  br i1 %cmp337, label %if.end370, label %if.then339, !dbg !5024

if.then339:                                       ; preds = %land.lhs.true335
  %cmp342 = icmp eq i32 %and336, 64, !dbg !5025
  %cond344 = select i1 %cmp342, i32 32, i32 64, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %cond344, metadata !4767, metadata !DIExpression()), !dbg !4939
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8, !dbg !5027
  %62 = bitcast %struct.rtx_def* %note228.0 to i8*, !dbg !5028
  %63 = bitcast %struct.rtx_def* %jump.0 to i8*, !dbg !5029
  %call345 = call %struct.basic_block_def* @create_basic_block(i8* %62, i8* %63, %struct.basic_block_def* nonnull %prev_bb.2) #6, !dbg !5030
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call345, metadata !4762, metadata !DIExpression()), !dbg !4939
  %call346 = call %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def* %call345, %struct.basic_block_def* nonnull %padbb.0, i32 8192) #6, !dbg !5031
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call345, metadata !4776, metadata !DIExpression()), !dbg !5032
  %flags347 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call345, i64 0, i32 13, !dbg !5033
  %64 = load i32, i32* %flags347, align 8, !dbg !5033
  %and348 = and i32 %64, -97, !dbg !5033
  %or = or i32 %and348, %cond344, !dbg !5033
  store i32 %or, i32* %flags347, align 8, !dbg !5033
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8, !dbg !5034
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %padbb.0, i64 0, i32 0, !dbg !5034
  %call350 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %preds) #7, !dbg !5034
  %65 = extractvalue { i32, %struct.VEC_edge_gc** } %call350, 0, !dbg !5034
  store i32 %65, i32* %28, align 8, !dbg !5034
  %66 = extractvalue { i32, %struct.VEC_edge_gc** } %call350, 1, !dbg !5034
  store %struct.VEC_edge_gc** %66, %struct.VEC_edge_gc*** %29, align 8, !dbg !5034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %27, i64 16, i1 false), !dbg !5034
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8, !dbg !5034
  br label %for.cond351, !dbg !5035

for.cond351:                                      ; preds = %if.end363, %if.then339
  %67 = load i32, i32* %30, align 8, !dbg !5036
  %68 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %31, align 8, !dbg !5036
  %call352 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %67, %struct.VEC_edge_gc** %68) #7, !dbg !5036
  call void @llvm.dbg.value(metadata %struct.edge_def* %call352, metadata !4775, metadata !DIExpression()), !dbg !4939
  %tobool353 = icmp eq %struct.edge_def* %call352, null, !dbg !5037
  br i1 %tobool353, label %for.end364, label %for.body354, !dbg !5037

for.body354:                                      ; preds = %for.cond351
  %flags355 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call352, i64 0, i32 7, !dbg !5038
  %69 = load i32, i32* %flags355, align 8, !dbg !5038
  %and356 = and i32 %69, 8200, !dbg !5041
  %cmp357 = icmp eq i32 %and356, 8200, !dbg !5042
  br i1 %cmp357, label %if.then359, label %if.else362, !dbg !5043

if.then359:                                       ; preds = %for.body354
  call void @redirect_edge_succ(%struct.edge_def* nonnull %call352, %struct.basic_block_def* %call345) #6, !dbg !5044
  %70 = load i32, i32* %flags355, align 8, !dbg !5046
  %and361 = and i32 %70, -8193, !dbg !5046
  store i32 %and361, i32* %flags355, align 8, !dbg !5046
  br label %if.end363, !dbg !5047

if.else362:                                       ; preds = %for.body354
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4768, metadata !DIExpression(DW_OP_deref)), !dbg !4939
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5048
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then359
  br label %for.cond351, !dbg !5049, !llvm.loop !5050

for.end364:                                       ; preds = %for.cond351
  %spec.select6 = select i1 %cmp242, %struct.basic_block_def* %call345, %struct.basic_block_def* %prev_bb.2, !dbg !5052
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %spec.select6, metadata !4754, metadata !DIExpression()), !dbg !4948
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8, !dbg !5053
  br label %if.end370, !dbg !5054

if.end370:                                        ; preds = %if.end247.if.end370_crit_edge, %land.lhs.true335, %if.end331, %for.end364
  %.pre-phi = phi i64* [ %.pre, %if.end247.if.end370_crit_edge ], [ %51, %land.lhs.true335 ], [ %51, %if.end331 ], [ %51, %for.end364 ], !dbg !4970
  %prev_bb.5 = phi %struct.basic_block_def* [ %prev_bb.0, %if.end247.if.end370_crit_edge ], [ %prev_bb.2, %land.lhs.true335 ], [ %prev_bb.2, %if.end331 ], [ %spec.select6, %for.end364 ], !dbg !4948
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.5, metadata !4754, metadata !DIExpression()), !dbg !4948
  %71 = bitcast %struct.rtx_def** %arrayidx249 to i64*, !dbg !5055
  %72 = load i64, i64* %71, align 8, !dbg !5055
  store i64 %72, i64* %.pre-phi, align 8, !dbg !4970
  br label %cleanup374, !dbg !5056

cleanup374:                                       ; preds = %if.end233, %cond.end225, %if.end370
  %prev_bb.6 = phi %struct.basic_block_def* [ %prev_bb.5, %if.end370 ], [ %prev_bb.0, %cond.end225 ], [ %prev_bb.0, %if.end233 ], !dbg !4948
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.6, metadata !4754, metadata !DIExpression()), !dbg !4948
  %inc380 = add nuw nsw i32 %i.0, 1, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %inc380, metadata !4746, metadata !DIExpression()), !dbg !4948
  br label %for.cond213, !dbg !5058, !llvm.loop !5059

for.inc382:                                       ; preds = %for.cond213
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5061
  call void @llvm.dbg.value(metadata i32 undef, metadata !4728, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4778
  br label %for.cond198, !dbg !5062, !llvm.loop !5063

for.end384:                                       ; preds = %for.cond198
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %pad_loc.0.lcssa, i64 0, i32 0, !dbg !5065
  %73 = load i8*, i8** %popcount, align 8, !dbg !5065
  call void @free(i8* %73) #6, !dbg !5065
  %74 = bitcast %struct.simple_bitmap_def* %pad_loc.0.lcssa to i8*, !dbg !5065
  call void @free(i8* %74) #6, !dbg !5065
  call void @free(i8* %.lcssa) #6, !dbg !5066
  br label %if.end385, !dbg !5067

if.end385:                                        ; preds = %if.end195, %for.end384
  call void @htab_delete(%struct.htab* %call1) #6, !dbg !5068
  ret i32 0, !dbg !5069
}

; Function Attrs: nounwind uwtable
define dso_local void @output_function_exception_table(i8* %fnname) local_unnamed_addr #5 !dbg !5070 {
entry:
  call void @llvm.dbg.value(metadata i8* %fnname, metadata !5074, metadata !DIExpression()), !dbg !5076
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5077
  %call = tail call %struct.rtx_def* @get_personality_function(%union.tree_node* %0) #6, !dbg !5078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5075, metadata !DIExpression()), !dbg !5076
  %1 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 38), align 2, !dbg !5079
  %tobool = icmp eq i8 %1, 0, !dbg !5081
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !5082

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %struct.rtx_def* %call, null, !dbg !5083
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5085

if.then2:                                         ; preds = %if.end
  tail call void @assemble_external_libcall(%struct.rtx_def* nonnull %call) #6, !dbg !5086
  br label %if.end3, !dbg !5086

if.end3:                                          ; preds = %if.end, %if.then2
  tail call fastcc void @output_one_function_exception_table(i8* %fnname, i32 0, %struct.rtx_def* %call) #7, !dbg !5087
  %2 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 6, i64 1), align 8, !dbg !5088
  %cmp = icmp eq %struct.VEC_call_site_record_gc* %2, null, !dbg !5090
  br i1 %cmp, label %if.end5, label %if.then4, !dbg !5091

if.then4:                                         ; preds = %if.end3
  tail call fastcc void @output_one_function_exception_table(i8* %fnname, i32 1, %struct.rtx_def* %call) #7, !dbg !5092
  br label %if.end5, !dbg !5092

if.end5:                                          ; preds = %if.end3, %if.then4
  %call6 = tail call %union.section* @current_function_section() #6, !dbg !5093
  tail call void @switch_to_section(%union.section* %call6) #6, !dbg !5094
  br label %cleanup.cont, !dbg !5095

cleanup.cont:                                     ; preds = %entry, %if.end5
  ret void, !dbg !5095
}

declare dso_local %struct.rtx_def* @get_personality_function(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @assemble_external_libcall(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_one_function_exception_table(i8* %fnname, i32 %section, %struct.rtx_def* %personality) unnamed_addr #5 !dbg !5096 {
entry:
  %ttype_label = alloca [32 x i8], align 16
  %cs_after_size_label = alloca [32 x i8], align 16
  %cs_end_label = alloca [32 x i8], align 16
  %ttype_after_disp_label = alloca [32 x i8], align 16
  %uc = alloca i8, align 1
  %type157 = alloca %union.tree_node*, align 8
  %uc180 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %fnname, metadata !5100, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %section, metadata !5101, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %personality, metadata !5102, metadata !DIExpression()), !dbg !5127
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %ttype_label, i64 0, i64 0, !dbg !5128
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5128
  call void @llvm.dbg.declare(metadata [32 x i8]* %ttype_label, metadata !5107, metadata !DIExpression()), !dbg !5129
  %1 = getelementptr inbounds [32 x i8], [32 x i8]* %cs_after_size_label, i64 0, i64 0, !dbg !5130
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5130
  call void @llvm.dbg.declare(metadata [32 x i8]* %cs_after_size_label, metadata !5111, metadata !DIExpression()), !dbg !5131
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %cs_end_label, i64 0, i64 0, !dbg !5132
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !5132
  call void @llvm.dbg.declare(metadata [32 x i8]* %cs_end_label, metadata !5112, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.value(metadata i32 0, metadata !5114, metadata !DIExpression()), !dbg !5127
  tail call fastcc void @switch_to_exception_section(i8* %fnname) #7, !dbg !5134
  %3 = load void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 9), align 8, !dbg !5135
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5136
  tail call void %3(%struct._IO_FILE* %4) #6, !dbg !5137
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5138
  %eh = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 0, !dbg !5138
  %6 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5138
  %ttype_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %6, i64 0, i32 4, !dbg !5138
  %7 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ttype_data, align 8, !dbg !5138
  %tobool = icmp eq %struct.VEC_tree_gc* %7, null, !dbg !5138
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5138

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %7, i64 0, i32 0, !dbg !5138
  br label %cond.end, !dbg !5138

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5138
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !5138
  %tobool4 = icmp eq i32 %call, 0, !dbg !5138
  br i1 %tobool4, label %lor.rhs, label %lor.end, !dbg !5139

lor.rhs:                                          ; preds = %cond.end
  %8 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !5140
  %tobool5 = icmp eq i8 %8, 0, !dbg !5141
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5127
  %eh8 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 0, !dbg !5127
  %10 = load %struct.eh_status*, %struct.eh_status** %eh8, align 8, !dbg !5127
  %ehspec_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %10, i64 0, i32 5, !dbg !5127
  br i1 %tobool5, label %cond.false20, label %cond.true6, !dbg !5141

cond.true6:                                       ; preds = %lor.rhs
  %arm_eabi = getelementptr inbounds %union.eh_status_u, %union.eh_status_u* %ehspec_data, i64 0, i32 0, !dbg !5142
  %11 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arm_eabi, align 8, !dbg !5142
  %tobool9 = icmp eq %struct.VEC_tree_gc* %11, null, !dbg !5142
  br i1 %tobool9, label %cond.end17, label %cond.true10, !dbg !5142

cond.true10:                                      ; preds = %cond.true6
  %base15 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %11, i64 0, i32 0, !dbg !5142
  br label %cond.end17, !dbg !5142

cond.end17:                                       ; preds = %cond.true6, %cond.true10
  %cond18 = phi %struct.VEC_tree_base* [ %base15, %cond.true10 ], [ null, %cond.true6 ], !dbg !5142
  %call19 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond18) #7, !dbg !5142
  br label %cond.end35, !dbg !5141

cond.false20:                                     ; preds = %lor.rhs
  %other = bitcast %union.eh_status_u* %ehspec_data to %struct.VEC_uchar_gc**, !dbg !5143
  %12 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %other, align 8, !dbg !5143
  %tobool24 = icmp eq %struct.VEC_uchar_gc* %12, null, !dbg !5143
  br i1 %tobool24, label %cond.end32, label %cond.true25, !dbg !5143

cond.true25:                                      ; preds = %cond.false20
  %base30 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %12, i64 0, i32 0, !dbg !5143
  br label %cond.end32, !dbg !5143

cond.end32:                                       ; preds = %cond.false20, %cond.true25
  %cond33 = phi %struct.VEC_uchar_base* [ %base30, %cond.true25 ], [ null, %cond.false20 ], !dbg !5143
  %call34 = tail call fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %cond33) #7, !dbg !5143
  br label %cond.end35, !dbg !5141

cond.end35:                                       ; preds = %cond.end32, %cond.end17
  %cond36 = phi i32 [ %call19, %cond.end17 ], [ %call34, %cond.end32 ], !dbg !5141
  %tobool37 = icmp ne i32 %cond36, 0, !dbg !5139
  br label %lor.end, !dbg !5139

lor.end:                                          ; preds = %cond.end, %cond.end35
  %13 = phi i1 [ true, %cond.end ], [ %tobool37, %cond.end35 ]
  br i1 %13, label %if.else, label %if.end, !dbg !5144

if.else:                                          ; preds = %lor.end
  %call39 = tail call i32 @asm_preferred_eh_data_format(i32 0, i32 1) #6, !dbg !5145
  call void @llvm.dbg.value(metadata i32 %call39, metadata !5103, metadata !DIExpression()), !dbg !5127
  %tobool40 = icmp eq i32 %section, 0, !dbg !5148
  %cond41 = select i1 %tobool40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), !dbg !5148
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5148
  %funcdef_no = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 14, !dbg !5148
  %15 = load i32, i32* %funcdef_no, align 4, !dbg !5148
  %call43 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* %cond41, i32 %15) #6, !dbg !5148
  %call44 = call i32 @size_of_encoded_value(i32 %call39) #6, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %call44, metadata !5114, metadata !DIExpression()), !dbg !5127
  %mul = shl nsw i32 %call44, 3, !dbg !5151
  call void @assemble_align(i32 %mul) #6, !dbg !5152
  br label %if.end

if.end:                                           ; preds = %lor.end, %if.else
  %tt_format.0 = phi i32 [ %call39, %if.else ], [ 255, %lor.end ], !dbg !5153
  %tt_format_size.0 = phi i32 [ %call44, %if.else ], [ 0, %lor.end ], !dbg !5127
  call void @llvm.dbg.value(metadata i32 %tt_format_size.0, metadata !5114, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %tt_format.0, metadata !5103, metadata !DIExpression()), !dbg !5127
  %16 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !5154
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5155
  %tobool45 = icmp eq i32 %section, 0, !dbg !5156
  %cond46 = select i1 %tobool45, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), !dbg !5156
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5157
  %funcdef_no48 = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, i32 14, !dbg !5157
  %19 = load i32, i32* %funcdef_no48, align 4, !dbg !5157
  %conv49 = sext i32 %19 to i64, !dbg !5157
  call void %16(%struct._IO_FILE* %17, i8* %cond46, i64 %conv49) #6, !dbg !5158
  call void @llvm.dbg.value(metadata i32 255, metadata !5105, metadata !DIExpression()), !dbg !5127
  %call51 = call i8* @eh_data_format_name(i32 255) #6, !dbg !5159
  call void (i32, i64, i8*, ...) @dw2_asm_output_data(i32 1, i64 255, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i64 0, i64 0), i8* %call51) #6, !dbg !5160
  %conv52 = sext i32 %tt_format.0 to i64, !dbg !5161
  %call53 = call i8* @eh_data_format_name(i32 %tt_format.0) #6, !dbg !5162
  call void (i32, i64, i8*, ...) @dw2_asm_output_data(i32 1, i64 %conv52, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i64 0, i64 0), i8* %call53) #6, !dbg !5163
  br i1 %13, label %if.then55, label %if.end72, !dbg !5164

if.then55:                                        ; preds = %if.end
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %ttype_after_disp_label, i64 0, i64 0, !dbg !5165
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #8, !dbg !5165
  call void @llvm.dbg.declare(metadata [32 x i8]* %ttype_after_disp_label, metadata !5115, metadata !DIExpression()), !dbg !5166
  %cond59 = select i1 %tobool45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), !dbg !5167
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5167
  %funcdef_no61 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 14, !dbg !5167
  %22 = load i32, i32* %funcdef_no61, align 4, !dbg !5167
  %call62 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* %cond59, i32 %22) #6, !dbg !5167
  call void (i8*, i8*, i8*, ...) @dw2_asm_output_delta_uleb128(i8* nonnull %0, i8* nonnull %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !5169
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5170
  call void @assemble_name(%struct._IO_FILE* %23, i8* nonnull %20) #6, !dbg !5170
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5170
  %call69 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0), %struct._IO_FILE* %24) #6, !dbg !5170
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #8, !dbg !5172
  br label %if.end72, !dbg !5173

if.end72:                                         ; preds = %if.then55, %if.end
  call void @llvm.dbg.value(metadata i32 1, metadata !5104, metadata !DIExpression()), !dbg !5127
  %call74 = call i8* @eh_data_format_name(i32 1) #6, !dbg !5174
  call void (i32, i64, i8*, ...) @dw2_asm_output_data(i32 1, i64 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i64 0, i64 0), i8* %call74) #6, !dbg !5175
  %cond78 = select i1 %tobool45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), !dbg !5176
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5176
  %funcdef_no80 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 14, !dbg !5176
  %26 = load i32, i32* %funcdef_no80, align 4, !dbg !5176
  %call81 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* %cond78, i32 %26) #6, !dbg !5176
  %cond87 = select i1 %tobool45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i64 0, i64 0), !dbg !5178
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5178
  %funcdef_no89 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, i32 14, !dbg !5178
  %28 = load i32, i32* %funcdef_no89, align 4, !dbg !5178
  %call90 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* %cond87, i32 %28) #6, !dbg !5178
  call void (i8*, i8*, i8*, ...) @dw2_asm_output_delta_uleb128(i8* nonnull %2, i8* nonnull %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !5180
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5181
  call void @assemble_name(%struct._IO_FILE* %29, i8* nonnull %1) #6, !dbg !5181
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5181
  %call97 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0), %struct._IO_FILE* %30) #6, !dbg !5181
  call fastcc void @dw2_output_call_site_table(i32 1, i32 %section) #7, !dbg !5183
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5185
  call void @assemble_name(%struct._IO_FILE* %31, i8* nonnull %2) #6, !dbg !5185
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5185
  %call102 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0), %struct._IO_FILE* %32) #6, !dbg !5185
  call void @llvm.dbg.value(metadata i8* %uc, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5187
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %uc) #8, !dbg !5188
  call void @llvm.dbg.value(metadata i32 0, metadata !5106, metadata !DIExpression()), !dbg !5127
  br label %for.cond, !dbg !5189

for.cond:                                         ; preds = %for.body, %if.end72
  %i.0 = phi i32 [ 0, %if.end72 ], [ %inc, %for.body ], !dbg !5191
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5106, metadata !DIExpression()), !dbg !5127
  %33 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), align 8, !dbg !5192
  %base107 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %33, i64 0, i32 0, !dbg !5192
  call void @llvm.dbg.value(metadata i8* %uc, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5187
  %call111 = call fastcc i32 @VEC_uchar_base_iterate(%struct.VEC_uchar_base* %base107, i32 %i.0, i8* nonnull %uc) #7, !dbg !5192
  %tobool112 = icmp eq i32 %call111, 0, !dbg !5194
  br i1 %tobool112, label %for.end, label %for.body, !dbg !5194

for.body:                                         ; preds = %for.cond
  %34 = load i8, i8* %uc, align 1, !dbg !5195
  call void @llvm.dbg.value(metadata i8 %34, metadata !5118, metadata !DIExpression()), !dbg !5187
  %conv113 = zext i8 %34 to i64, !dbg !5195
  %tobool114 = icmp eq i32 %i.0, 0, !dbg !5196
  %cond115 = select i1 %tobool114, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i64 0, i64 0), i8* null, !dbg !5196
  call void (i32, i64, i8*, ...) @dw2_asm_output_data(i32 1, i64 %conv113, i8* %cond115) #6, !dbg !5197
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5106, metadata !DIExpression()), !dbg !5127
  br label %for.cond, !dbg !5199, !llvm.loop !5200

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8* %uc, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5187
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %uc) #8, !dbg !5202
  br i1 %13, label %if.then117, label %if.end119, !dbg !5203

if.then117:                                       ; preds = %for.end
  %mul118 = shl nsw i32 %tt_format_size.0, 3, !dbg !5204
  call void @assemble_align(i32 %mul118) #6, !dbg !5206
  br label %if.end119, !dbg !5206

if.end119:                                        ; preds = %if.then117, %for.end
  %35 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5207
  %eh121 = getelementptr inbounds %struct.function, %struct.function* %35, i64 0, i32 0, !dbg !5207
  %36 = load %struct.eh_status*, %struct.eh_status** %eh121, align 8, !dbg !5207
  %ttype_data122 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %36, i64 0, i32 4, !dbg !5207
  %37 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ttype_data122, align 8, !dbg !5207
  %tobool123 = icmp eq %struct.VEC_tree_gc* %37, null, !dbg !5207
  br i1 %tobool123, label %cond.end130, label %cond.true124, !dbg !5207

cond.true124:                                     ; preds = %if.end119
  %base128 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %37, i64 0, i32 0, !dbg !5207
  br label %cond.end130, !dbg !5207

cond.end130:                                      ; preds = %if.end119, %cond.true124
  %cond131 = phi %struct.VEC_tree_base* [ %base128, %cond.true124 ], [ null, %if.end119 ], !dbg !5207
  %call132 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond131) #7, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %call132, metadata !5106, metadata !DIExpression()), !dbg !5127
  br label %while.cond, !dbg !5208

while.cond:                                       ; preds = %cond.end144, %cond.end130
  %i.1 = phi i32 [ %call132, %cond.end130 ], [ %dec, %cond.end144 ], !dbg !5127
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5106, metadata !DIExpression()), !dbg !5127
  %dec = add nsw i32 %i.1, -1, !dbg !5209
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5106, metadata !DIExpression()), !dbg !5127
  %cmp = icmp sgt i32 %i.1, 0, !dbg !5210
  br i1 %cmp, label %while.body, label %while.end, !dbg !5208

while.body:                                       ; preds = %while.cond
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5211
  %eh135 = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, i32 0, !dbg !5211
  %39 = load %struct.eh_status*, %struct.eh_status** %eh135, align 8, !dbg !5211
  %ttype_data136 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %39, i64 0, i32 4, !dbg !5211
  %40 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ttype_data136, align 8, !dbg !5211
  %tobool137 = icmp eq %struct.VEC_tree_gc* %40, null, !dbg !5211
  br i1 %tobool137, label %cond.end144, label %cond.true138, !dbg !5211

cond.true138:                                     ; preds = %while.body
  %base142 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %40, i64 0, i32 0, !dbg !5211
  br label %cond.end144, !dbg !5211

cond.end144:                                      ; preds = %while.body, %cond.true138
  %cond145 = phi %struct.VEC_tree_base* [ %base142, %cond.true138 ], [ null, %while.body ], !dbg !5211
  %call146 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond145, i32 %dec) #7, !dbg !5211
  call void @llvm.dbg.value(metadata %union.tree_node* %call146, metadata !5120, metadata !DIExpression()), !dbg !5212
  call fastcc void @output_ttype(%union.tree_node* %call146, i32 %tt_format.0, i32 %tt_format_size.0) #7, !dbg !5213
  br label %while.cond, !dbg !5208, !llvm.loop !5214

while.end:                                        ; preds = %while.cond
  br i1 %13, label %do.body149, label %if.end154, !dbg !5216

do.body149:                                       ; preds = %while.end
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5217
  call void @assemble_name(%struct._IO_FILE* %41, i8* nonnull %0) #6, !dbg !5217
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5217
  %call151 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0), %struct._IO_FILE* %42) #6, !dbg !5217
  br label %if.end154, !dbg !5217

if.end154:                                        ; preds = %do.body149, %while.end
  %43 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !5220
  %tobool155 = icmp eq i8 %43, 0, !dbg !5221
  br i1 %tobool155, label %if.else179, label %if.then156, !dbg !5222

if.then156:                                       ; preds = %if.end154
  %44 = bitcast %union.tree_node** %type157 to i8*, !dbg !5223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8, !dbg !5223
  call void @llvm.dbg.value(metadata i32 0, metadata !5106, metadata !DIExpression()), !dbg !5127
  br label %for.cond158, !dbg !5224

for.cond158:                                      ; preds = %for.body175, %if.then156
  %i.2 = phi i32 [ 0, %if.then156 ], [ %inc177, %for.body175 ], !dbg !5226
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !5106, metadata !DIExpression()), !dbg !5127
  %45 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5227
  %eh160 = getelementptr inbounds %struct.function, %struct.function* %45, i64 0, i32 0, !dbg !5227
  %46 = load %struct.eh_status*, %struct.eh_status** %eh160, align 8, !dbg !5227
  %arm_eabi162 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %46, i64 0, i32 5, i32 0, !dbg !5227
  %47 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arm_eabi162, align 8, !dbg !5227
  %tobool163 = icmp eq %struct.VEC_tree_gc* %47, null, !dbg !5227
  br i1 %tobool163, label %cond.end171, label %cond.true164, !dbg !5227

cond.true164:                                     ; preds = %for.cond158
  %base169 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %47, i64 0, i32 0, !dbg !5227
  br label %cond.end171, !dbg !5227

cond.end171:                                      ; preds = %for.cond158, %cond.true164
  %cond172 = phi %struct.VEC_tree_base* [ %base169, %cond.true164 ], [ null, %for.cond158 ], !dbg !5227
  call void @llvm.dbg.value(metadata %union.tree_node** %type157, metadata !5122, metadata !DIExpression(DW_OP_deref)), !dbg !5229
  %call173 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond172, i32 %i.2, %union.tree_node** nonnull %type157) #7, !dbg !5227
  %tobool174 = icmp eq i32 %call173, 0, !dbg !5230
  br i1 %tobool174, label %for.end178, label %for.body175, !dbg !5230

for.body175:                                      ; preds = %cond.end171
  %48 = load %union.tree_node*, %union.tree_node** %type157, align 8, !dbg !5231
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !5122, metadata !DIExpression()), !dbg !5229
  call fastcc void @output_ttype(%union.tree_node* %48, i32 %tt_format.0, i32 %tt_format_size.0) #7, !dbg !5232
  %inc177 = add nuw nsw i32 %i.2, 1, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %inc177, metadata !5106, metadata !DIExpression()), !dbg !5127
  br label %for.cond158, !dbg !5234, !llvm.loop !5235

for.end178:                                       ; preds = %cond.end171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8, !dbg !5237
  br label %if.end205, !dbg !5238

if.else179:                                       ; preds = %if.end154
  call void @llvm.dbg.value(metadata i8* %uc180, metadata !5125, metadata !DIExpression(DW_OP_deref)), !dbg !5239
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %uc180) #8, !dbg !5240
  call void @llvm.dbg.value(metadata i32 0, metadata !5106, metadata !DIExpression()), !dbg !5127
  br label %for.cond181, !dbg !5241

for.cond181:                                      ; preds = %for.body198, %if.else179
  %i.3 = phi i32 [ 0, %if.else179 ], [ %inc203, %for.body198 ], !dbg !5243
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !5106, metadata !DIExpression()), !dbg !5127
  %49 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5244
  %eh183 = getelementptr inbounds %struct.function, %struct.function* %49, i64 0, i32 0, !dbg !5244
  %50 = load %struct.eh_status*, %struct.eh_status** %eh183, align 8, !dbg !5244
  %ehspec_data184 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %50, i64 0, i32 5, !dbg !5244
  %other185 = bitcast %union.eh_status_u* %ehspec_data184 to %struct.VEC_uchar_gc**, !dbg !5244
  %51 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %other185, align 8, !dbg !5244
  %tobool186 = icmp eq %struct.VEC_uchar_gc* %51, null, !dbg !5244
  br i1 %tobool186, label %cond.end194, label %cond.true187, !dbg !5244

cond.true187:                                     ; preds = %for.cond181
  %base192 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %51, i64 0, i32 0, !dbg !5244
  br label %cond.end194, !dbg !5244

cond.end194:                                      ; preds = %for.cond181, %cond.true187
  %cond195 = phi %struct.VEC_uchar_base* [ %base192, %cond.true187 ], [ null, %for.cond181 ], !dbg !5244
  call void @llvm.dbg.value(metadata i8* %uc180, metadata !5125, metadata !DIExpression(DW_OP_deref)), !dbg !5239
  %call196 = call fastcc i32 @VEC_uchar_base_iterate(%struct.VEC_uchar_base* %cond195, i32 %i.3, i8* nonnull %uc180) #7, !dbg !5244
  %tobool197 = icmp eq i32 %call196, 0, !dbg !5246
  br i1 %tobool197, label %for.end204, label %for.body198, !dbg !5246

for.body198:                                      ; preds = %cond.end194
  %52 = load i8, i8* %uc180, align 1, !dbg !5247
  call void @llvm.dbg.value(metadata i8 %52, metadata !5125, metadata !DIExpression()), !dbg !5239
  %conv199 = zext i8 %52 to i64, !dbg !5247
  %tobool200 = icmp eq i32 %i.3, 0, !dbg !5248
  %cond201 = select i1 %tobool200, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i64 0, i64 0), i8* null, !dbg !5248
  call void (i32, i64, i8*, ...) @dw2_asm_output_data(i32 1, i64 %conv199, i8* %cond201) #6, !dbg !5249
  %inc203 = add nuw nsw i32 %i.3, 1, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %inc203, metadata !5106, metadata !DIExpression()), !dbg !5127
  br label %for.cond181, !dbg !5251, !llvm.loop !5252

for.end204:                                       ; preds = %cond.end194
  call void @llvm.dbg.value(metadata i8* %uc180, metadata !5125, metadata !DIExpression(DW_OP_deref)), !dbg !5239
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %uc180) #8, !dbg !5254
  br label %if.end205

if.end205:                                        ; preds = %for.end204, %for.end178
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !5255
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5255
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5255
  ret void, !dbg !5255
}

declare dso_local void @switch_to_section(%union.section*) local_unnamed_addr #2

declare dso_local %union.section* @current_function_section() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_eh_throw_stmt_table(%struct.function* %fun, %struct.htab* %table) local_unnamed_addr #5 !dbg !5256 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !5260, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !5261, metadata !DIExpression()), !dbg !5262
  %eh = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 0, !dbg !5263
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5263
  %throw_stmt_table = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 3, !dbg !5264
  store %struct.htab* %table, %struct.htab** %throw_stmt_table, align 8, !dbg !5265
  ret void, !dbg !5266
}

; Function Attrs: nounwind uwtable
define dso_local %struct.htab* @get_eh_throw_stmt_table(%struct.function* %fun) local_unnamed_addr #5 !dbg !5267 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !5271, metadata !DIExpression()), !dbg !5272
  %eh = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 0, !dbg !5273
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5273
  %throw_stmt_table = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 3, !dbg !5274
  %1 = load %struct.htab*, %struct.htab** %throw_stmt_table, align 8, !dbg !5274
  ret %struct.htab* %1, !dbg !5275
}

; Function Attrs: nounwind uwtable
define dso_local i32 @function_needs_eh_personality(%struct.function* %fn) local_unnamed_addr #5 !dbg !5276 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5280, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i32 0, metadata !5281, metadata !DIExpression()), !dbg !5283
  %eh = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 0, !dbg !5284
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5284
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 0, !dbg !5284
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !5284
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %1, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %for.cond, !dbg !5284

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi %struct.eh_region_d* [ %1, %entry ], [ %call, %for.inc ], !dbg !5286
  %kind.0 = phi i32 [ 0, %entry ], [ %kind.1, %for.inc ], !dbg !5287
  call void @llvm.dbg.value(metadata i32 %kind.0, metadata !5281, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %i.0, metadata !5282, metadata !DIExpression()), !dbg !5283
  %cmp = icmp eq %struct.eh_region_d* %i.0, null, !dbg !5288
  br i1 %cmp, label %cleanup, label %for.body, !dbg !5284

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 4, !dbg !5290
  %2 = load i32, i32* %type, align 4, !dbg !5290
  switch i32 %2, label %for.inc [
    i32 0, label %sw.bb
    i32 1, label %cleanup
    i32 2, label %cleanup
    i32 3, label %cleanup
  ], !dbg !5292

sw.bb:                                            ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 1, metadata !5281, metadata !DIExpression()), !dbg !5283
  br label %for.inc, !dbg !5293

for.inc:                                          ; preds = %sw.bb, %for.body
  %kind.1 = phi i32 [ %kind.0, %for.body ], [ 1, %sw.bb ], !dbg !5283
  call void @llvm.dbg.value(metadata i32 %kind.1, metadata !5281, metadata !DIExpression()), !dbg !5283
  %call = tail call fastcc %struct.eh_region_d* @ehr_next(%struct.eh_region_d* nonnull %i.0, %struct.eh_region_d* null) #7, !dbg !5288
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !5282, metadata !DIExpression()), !dbg !5283
  br label %for.cond, !dbg !5288, !llvm.loop !5295

cleanup:                                          ; preds = %for.cond, %for.body, %for.body, %for.body
  %retval.0 = phi i32 [ 2, %for.body ], [ 2, %for.body ], [ 2, %for.body ], [ %kind.0, %for.cond ], !dbg !5283
  ret i32 %retval.0, !dbg !5297
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @ehr_next(%struct.eh_region_d* %r, %struct.eh_region_d* %start) unnamed_addr #0 !dbg !5298 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r, metadata !5302, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !5303, metadata !DIExpression()), !dbg !5304
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 1, !dbg !5305
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %inner, align 8, !dbg !5305
  %tobool = icmp eq %struct.eh_region_d* %0, null, !dbg !5307
  br i1 %tobool, label %if.else, label %if.then, !dbg !5308

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %0, metadata !5302, metadata !DIExpression()), !dbg !5304
  br label %return, !dbg !5309

if.else:                                          ; preds = %entry
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 2, !dbg !5310
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer, align 8, !dbg !5310
  %tobool2 = icmp ne %struct.eh_region_d* %1, null, !dbg !5312
  %cmp = icmp ne %struct.eh_region_d* %r, null, !dbg !5313
  %or.cond = and i1 %tobool2, %cmp, !dbg !5314
  br i1 %or.cond, label %if.then3, label %do.body.preheader, !dbg !5314

do.body.preheader:                                ; preds = %if.else
  br label %do.body, !dbg !5315

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %1, metadata !5302, metadata !DIExpression()), !dbg !5304
  br label %return, !dbg !5317

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %r.addr.0 = phi %struct.eh_region_d* [ %2, %do.cond ], [ %r, %do.body.preheader ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.addr.0, metadata !5302, metadata !DIExpression()), !dbg !5304
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.addr.0, i64 0, i32 0, !dbg !5318
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !5318
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %2, metadata !5302, metadata !DIExpression()), !dbg !5304
  %cmp6 = icmp eq %struct.eh_region_d* %2, null, !dbg !5320
  br i1 %cmp6, label %return.loopexit, label %do.cond, !dbg !5322

do.cond:                                          ; preds = %do.body
  %next_peer8 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %2, i64 0, i32 2, !dbg !5323
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer8, align 8, !dbg !5323
  %cmp9 = icmp eq %struct.eh_region_d* %3, null, !dbg !5324
  br i1 %cmp9, label %do.body, label %do.end, !dbg !5325, !llvm.loop !5326

do.end:                                           ; preds = %do.cond
  %.lcssa = phi %struct.eh_region_d* [ %3, %do.cond ], !dbg !5323
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %.lcssa, metadata !5302, metadata !DIExpression()), !dbg !5304
  br label %return

return.loopexit:                                  ; preds = %do.body
  br label %return, !dbg !5328

return:                                           ; preds = %return.loopexit, %if.then, %do.end, %if.then3
  %retval.0 = phi %struct.eh_region_d* [ %0, %if.then ], [ %1, %if.then3 ], [ %.lcssa, %do.end ], [ null, %return.loopexit ], !dbg !5304
  ret %struct.eh_region_d* %retval.0, !dbg !5328
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_eh_tree(%struct._IO_FILE* %out, %struct.function* %fun) local_unnamed_addr #5 !dbg !2260 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %out, metadata !2315, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !2316, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 0, metadata !2318, metadata !DIExpression()), !dbg !5329
  %eh = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 0, !dbg !5330
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5330
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 0, !dbg !5331
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !5331
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %1, metadata !2317, metadata !DIExpression()), !dbg !5329
  %tobool = icmp eq %struct.eh_region_d* %1, null, !dbg !5332
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5334

if.end:                                           ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !5335
  br label %while.cond, !dbg !5336

while.cond:                                       ; preds = %if.end104, %if.end
  %depth.0 = phi i32 [ 0, %if.end ], [ %depth.3, %if.end104 ], !dbg !5329
  %i.0 = phi %struct.eh_region_d* [ %1, %if.end ], [ %i.3, %if.end104 ], !dbg !5329
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %i.0, metadata !2317, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 %depth.0, metadata !2318, metadata !DIExpression()), !dbg !5329
  %mul = shl nsw i32 %depth.0, 1, !dbg !5337
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 3, !dbg !5338
  %2 = load i32, i32* %index, align 8, !dbg !5338
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 4, !dbg !5339
  %3 = load i32, i32* %type, align 4, !dbg !5339
  %idxprom = sext i32 %3 to i64, !dbg !5340
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* @dump_eh_tree.type_name, i64 0, i64 %idxprom, !dbg !5340
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !5340
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i32 %mul, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i32 %2, i8* %4) #6, !dbg !5341
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 6, !dbg !5342
  %5 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %landing_pads, align 8, !dbg !5342
  %tobool2 = icmp eq %struct.eh_landing_pad_d* %5, null, !dbg !5343
  br i1 %tobool2, label %if.end59, label %if.then3, !dbg !5344

if.then3:                                         ; preds = %while.cond
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5345
  %call5 = tail call i32 @current_ir_type() #6, !dbg !5346
  %cmp = icmp eq i32 %call5, 0, !dbg !5347
  %6 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %landing_pads, align 8, !dbg !5348
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %6, metadata !2319, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %6, metadata !2319, metadata !DIExpression()), !dbg !5349
  br i1 %cmp, label %for.cond.preheader, label %for.cond18.preheader, !dbg !5350

for.cond18.preheader:                             ; preds = %if.then3
  br label %for.cond18, !dbg !5351

for.cond.preheader:                               ; preds = %if.then3
  br label %for.cond, !dbg !5353

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %lp.0 = phi %struct.eh_landing_pad_d* [ %10, %for.inc ], [ %6, %for.cond.preheader ], !dbg !5356
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.0, metadata !2319, metadata !DIExpression()), !dbg !5349
  %tobool8 = icmp eq %struct.eh_landing_pad_d* %lp.0, null, !dbg !5353
  br i1 %tobool8, label %if.end59.loopexit, label %for.body, !dbg !5353

for.body:                                         ; preds = %for.cond
  %index9 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 4, !dbg !5357
  %7 = load i32, i32* %index9, align 8, !dbg !5357
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i32 %7) #6, !dbg !5360
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 2, !dbg !5361
  %8 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !5361
  tail call void @print_generic_expr(%struct._IO_FILE* %out, %union.tree_node* %8, i32 0) #6, !dbg !5362
  %call11 = tail call i32 @fputc(i32 125, %struct._IO_FILE* %out) #6, !dbg !5363
  %next_lp = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 0, !dbg !5364
  %9 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %next_lp, align 8, !dbg !5364
  %tobool12 = icmp eq %struct.eh_landing_pad_d* %9, null, !dbg !5366
  br i1 %tobool12, label %for.inc, label %if.then13, !dbg !5367

if.then13:                                        ; preds = %for.body
  %call14 = tail call i32 @fputc(i32 44, %struct._IO_FILE* %out) #6, !dbg !5368
  %.pre = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %next_lp, align 8, !dbg !5369
  br label %for.inc, !dbg !5368

for.inc:                                          ; preds = %for.body, %if.then13
  %10 = phi %struct.eh_landing_pad_d* [ null, %for.body ], [ %.pre, %if.then13 ], !dbg !5369
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %10, metadata !2319, metadata !DIExpression()), !dbg !5349
  br label %for.cond, !dbg !5370, !llvm.loop !5371

for.cond18:                                       ; preds = %for.cond18.preheader, %for.inc21
  %lp.1 = phi %struct.eh_landing_pad_d* [ %11, %for.inc21 ], [ %6, %for.cond18.preheader ], !dbg !5373
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.1, metadata !2319, metadata !DIExpression()), !dbg !5349
  %tobool19 = icmp eq %struct.eh_landing_pad_d* %lp.1, null, !dbg !5351
  br i1 %tobool19, label %for.end23, label %for.inc21, !dbg !5351

for.inc21:                                        ; preds = %for.cond18
  %next_lp22 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.1, i64 0, i32 0, !dbg !5374
  %11 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %next_lp22, align 8, !dbg !5374
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %11, metadata !2319, metadata !DIExpression()), !dbg !5349
  br label %for.cond18, !dbg !5376, !llvm.loop !5377

for.end23:                                        ; preds = %for.cond18
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.1, metadata !2319, metadata !DIExpression()), !dbg !5349
  %12 = load i32, i32* inttoptr (i64 32 to i32*), align 32, !dbg !5379
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i32 %12) #6, !dbg !5380
  %13 = load %struct.rtx_def*, %struct.rtx_def** inttoptr (i64 24 to %struct.rtx_def**), align 8, !dbg !5381
  %tobool26 = icmp eq %struct.rtx_def* %13, null, !dbg !5383
  br i1 %tobool26, label %if.else33, label %if.then27, !dbg !5384

if.then27:                                        ; preds = %for.end23
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5385
  %rt_int = bitcast %union.rtunion_def* %arrayidx29 to i32*, !dbg !5385
  %14 = load i32, i32* %rt_int, align 8, !dbg !5385
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !5386
  %bf.load = load i32, i32* %.cast, align 8, !dbg !5386
  %bf.clear = and i32 %bf.load, 65535, !dbg !5386
  %cmp31 = icmp eq i32 %bf.clear, 13, !dbg !5386
  %cond = select i1 %cmp31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), !dbg !5386
  %call32 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i32 %14, i8* %cond) #6, !dbg !5387
  br label %if.end35, !dbg !5387

if.else33:                                        ; preds = %for.end23
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !5388
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then27
  %15 = load %union.tree_node*, %union.tree_node** inttoptr (i64 16 to %union.tree_node**), align 16, !dbg !5389
  %tobool37 = icmp eq %union.tree_node* %15, null, !dbg !5390
  br i1 %tobool37, label %if.else50, label %if.then38, !dbg !5391

if.then38:                                        ; preds = %if.end35
  %call40 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* nonnull %15) #6, !dbg !5392
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !2323, metadata !DIExpression()), !dbg !5393
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5394
  %rt_int44 = bitcast %union.rtunion_def* %arrayidx43 to i32*, !dbg !5394
  %16 = load i32, i32* %rt_int44, align 8, !dbg !5394
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 0, !dbg !5395
  %bf.load45 = load i32, i32* %17, align 8, !dbg !5395
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !5395
  %cmp47 = icmp eq i32 %bf.clear46, 13, !dbg !5395
  %cond48 = select i1 %cmp47, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), !dbg !5395
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 %16, i8* %cond48) #6, !dbg !5396
  br label %if.end52, !dbg !5397

if.else50:                                        ; preds = %if.end35
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !5398
  br label %if.end52

if.end52:                                         ; preds = %if.else50, %if.then38
  br i1 undef, label %if.end59, label %if.then55, !dbg !5399

if.then55:                                        ; preds = %if.end52
  %call56 = tail call i32 @fputc(i32 44, %struct._IO_FILE* %out) #6, !dbg !5400
  br label %if.end59, !dbg !5400

if.end59.loopexit:                                ; preds = %for.cond
  br label %if.end59, !dbg !5402

if.end59:                                         ; preds = %if.end59.loopexit, %if.end52, %while.cond, %if.then55
  %18 = load i32, i32* %type, align 4, !dbg !5402
  switch i32 %18, label %sw.epilog [
    i32 2, label %sw.bb82
    i32 1, label %sw.bb61
  ], !dbg !5403

sw.bb61:                                          ; preds = %if.end59
  %call62 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !5404
  %u63 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 5, !dbg !5405
  %first_catch = bitcast %union.eh_region_u* %u63 to %struct.eh_catch_d**, !dbg !5407
  br label %for.cond64, !dbg !5408

for.cond64:                                       ; preds = %for.inc79, %sw.bb61
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb61 ], [ %next_catch, %for.inc79 ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !5409
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !2329, metadata !DIExpression()), !dbg !5410
  %tobool65 = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !5411
  br i1 %tobool65, label %sw.epilog.loopexit, label %for.body66, !dbg !5411

for.body66:                                       ; preds = %for.cond64
  %call67 = tail call i32 @fputc(i32 123, %struct._IO_FILE* %out) #6, !dbg !5412
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 4, !dbg !5415
  %19 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !5415
  %tobool68 = icmp eq %union.tree_node* %19, null, !dbg !5417
  br i1 %tobool68, label %if.end73, label %if.then69, !dbg !5418

if.then69:                                        ; preds = %for.body66
  %call70 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !5419
  %20 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !5421
  tail call void @print_generic_expr(%struct._IO_FILE* %out, %union.tree_node* %20, i32 0) #6, !dbg !5422
  %call72 = tail call i32 @fputc(i32 59, %struct._IO_FILE* %out) #6, !dbg !5423
  br label %if.end73, !dbg !5424

if.end73:                                         ; preds = %for.body66, %if.then69
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 2, !dbg !5425
  %21 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !5425
  tail call void @print_generic_expr(%struct._IO_FILE* %out, %union.tree_node* %21, i32 0) #6, !dbg !5426
  %call74 = tail call i32 @fputc(i32 125, %struct._IO_FILE* %out) #6, !dbg !5427
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !5428
  %22 = load %struct.eh_catch_d*, %struct.eh_catch_d** %next_catch, align 8, !dbg !5428
  %tobool75 = icmp eq %struct.eh_catch_d* %22, null, !dbg !5430
  br i1 %tobool75, label %for.inc79, label %if.then76, !dbg !5431

if.then76:                                        ; preds = %if.end73
  %call77 = tail call i32 @fputc(i32 44, %struct._IO_FILE* %out) #6, !dbg !5432
  br label %for.inc79, !dbg !5432

for.inc79:                                        ; preds = %if.end73, %if.then76
  br label %for.cond64, !dbg !5433, !llvm.loop !5434

sw.bb82:                                          ; preds = %if.end59
  %filter = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 5, i32 0, i32 2, !dbg !5436
  %23 = load i32, i32* %filter, align 8, !dbg !5436
  %call84 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), i32 %23) #6, !dbg !5437
  %type_list87 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 5, i32 0, i32 0, !dbg !5438
  %24 = load %union.tree_node*, %union.tree_node** %type_list87, align 8, !dbg !5438
  tail call void @print_generic_expr(%struct._IO_FILE* %out, %union.tree_node* %24, i32 0) #6, !dbg !5439
  br label %sw.epilog, !dbg !5440

sw.epilog.loopexit:                               ; preds = %for.cond64
  br label %sw.epilog, !dbg !5441

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.end59, %sw.bb82
  %call88 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %out) #6, !dbg !5441
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 1, !dbg !5442
  %25 = load %struct.eh_region_d*, %struct.eh_region_d** %inner, align 8, !dbg !5442
  %tobool89 = icmp eq %struct.eh_region_d* %25, null, !dbg !5444
  br i1 %tobool89, label %if.else92, label %if.then90, !dbg !5445

if.then90:                                        ; preds = %sw.epilog
  %inc = add nsw i32 %depth.0, 1, !dbg !5446
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2318, metadata !DIExpression()), !dbg !5329
  br label %if.end104, !dbg !5447

if.else92:                                        ; preds = %sw.epilog
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.0, i64 0, i32 2, !dbg !5448
  %26 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer, align 8, !dbg !5448
  %tobool93 = icmp eq %struct.eh_region_d* %26, null, !dbg !5450
  br i1 %tobool93, label %do.body.preheader, label %if.then94, !dbg !5451

do.body.preheader:                                ; preds = %if.else92
  br label %do.body, !dbg !5452

if.then94:                                        ; preds = %if.else92
  br label %if.end104, !dbg !5454

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %depth.1 = phi i32 [ %dec, %do.cond ], [ %depth.0, %do.body.preheader ], !dbg !5329
  %i.1 = phi %struct.eh_region_d* [ %27, %do.cond ], [ %i.0, %do.body.preheader ], !dbg !5329
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %i.1, metadata !2317, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 %depth.1, metadata !2318, metadata !DIExpression()), !dbg !5329
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %i.1, i64 0, i32 0, !dbg !5455
  %27 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !5455
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %27, metadata !2317, metadata !DIExpression()), !dbg !5329
  %dec = add nsw i32 %depth.1, -1, !dbg !5457
  call void @llvm.dbg.value(metadata i32 %dec, metadata !2318, metadata !DIExpression()), !dbg !5329
  %cmp97 = icmp eq %struct.eh_region_d* %27, null, !dbg !5458
  br i1 %cmp97, label %cleanup.loopexit, label %do.cond, !dbg !5460

do.cond:                                          ; preds = %do.body
  %next_peer100 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %27, i64 0, i32 2, !dbg !5461
  %28 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer100, align 8, !dbg !5461
  %cmp101 = icmp eq %struct.eh_region_d* %28, null, !dbg !5462
  br i1 %cmp101, label %do.body, label %do.end, !dbg !5463, !llvm.loop !5464

do.end:                                           ; preds = %do.cond
  %.lcssa = phi %struct.eh_region_d* [ %28, %do.cond ], !dbg !5461
  %dec.lcssa6 = phi i32 [ %dec, %do.cond ], !dbg !5457
  br label %if.end104

if.end104:                                        ; preds = %if.then94, %do.end, %if.then90
  %i.3 = phi %struct.eh_region_d* [ %25, %if.then90 ], [ %26, %if.then94 ], [ %.lcssa, %do.end ], !dbg !5466
  %depth.3 = phi i32 [ %inc, %if.then90 ], [ %depth.0, %if.then94 ], [ %dec.lcssa6, %do.end ], !dbg !5329
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %i.3, metadata !2317, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 %depth.3, metadata !2318, metadata !DIExpression()), !dbg !5329
  br label %while.cond, !dbg !5336, !llvm.loop !5467

cleanup.loopexit:                                 ; preds = %do.body
  br label %cleanup, !dbg !5469

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  ret void, !dbg !5469
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @current_ir_type() local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @label_rtx(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_eh_tree(%struct.function* %fn) local_unnamed_addr #5 !dbg !5470 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5474, metadata !DIExpression()), !dbg !5475
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5476
  tail call void @dump_eh_tree(%struct._IO_FILE* %0, %struct.function* %fn) #7, !dbg !5477
  ret void, !dbg !5478
}

; Function Attrs: nounwind uwtable
define dso_local void @verify_eh_tree(%struct.function* %fun) local_unnamed_addr #5 !dbg !5479 {
entry:
  %r = alloca %struct.eh_region_d*, align 8
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !5481, metadata !DIExpression()), !dbg !5493
  %0 = bitcast %struct.eh_region_d** %r to i8*, !dbg !5494
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5494
  %1 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !5495
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5495
  call void @llvm.dbg.value(metadata i8 0, metadata !5491, metadata !DIExpression()), !dbg !5493
  %eh = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 0, !dbg !5496
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5496
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 0, !dbg !5498
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !5498
  %tobool = icmp eq %struct.eh_region_d* %3, null, !dbg !5499
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !5500

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5501

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %4 = phi %struct.eh_status* [ %.pre, %for.inc ], [ %2, %for.cond.preheader ], !dbg !5503
  %err.0 = phi i8 [ %err.2, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5505
  %i.0 = phi i32 [ %inc12, %for.inc ], [ 1, %for.cond.preheader ], !dbg !5506
  %count_r.0 = phi i32 [ %count_r.2, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_r.0, metadata !5487, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5489, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.0, metadata !5491, metadata !DIExpression()), !dbg !5493
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %4, i64 0, i32 1, !dbg !5503
  %5 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !5503
  %tobool2 = icmp eq %struct.VEC_eh_region_gc* %5, null, !dbg !5503
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !5503

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %5, i64 0, i32 0, !dbg !5503
  br label %cond.end, !dbg !5503

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !5503
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !5482, metadata !DIExpression(DW_OP_deref)), !dbg !5493
  %call = call fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %cond, i32 %i.0, %struct.eh_region_d** nonnull %r) #7, !dbg !5503
  %tobool5 = icmp eq i32 %call, 0, !dbg !5501
  br i1 %tobool5, label %for.cond13.preheader, label %for.body, !dbg !5501

for.cond13.preheader:                             ; preds = %cond.end
  %err.0.lcssa = phi i8 [ %err.0, %cond.end ], !dbg !5505
  %count_r.0.lcssa = phi i32 [ %count_r.0, %cond.end ], !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_r.0.lcssa, metadata !5487, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_r.0.lcssa, metadata !5487, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.0.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_r.0.lcssa, metadata !5487, metadata !DIExpression()), !dbg !5493
  br label %for.cond13, !dbg !5507

for.body:                                         ; preds = %cond.end
  %6 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5509
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %6, metadata !5482, metadata !DIExpression()), !dbg !5493
  %tobool6 = icmp eq %struct.eh_region_d* %6, null, !dbg !5509
  br i1 %tobool6, label %for.inc, label %if.then7, !dbg !5511

if.then7:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %6, metadata !5482, metadata !DIExpression()), !dbg !5493
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %6, i64 0, i32 3, !dbg !5512
  %7 = load i32, i32* %index, align 8, !dbg !5512
  %cmp = icmp eq i32 %7, %i.0, !dbg !5515
  br i1 %cmp, label %if.then8, label %if.else, !dbg !5516

if.then8:                                         ; preds = %if.then7
  %inc = add nsw i32 %count_r.0, 1, !dbg !5517
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5487, metadata !DIExpression()), !dbg !5493
  br label %for.inc, !dbg !5518

if.else:                                          ; preds = %if.then7
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %6, metadata !5482, metadata !DIExpression()), !dbg !5493
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i32 %7) #6, !dbg !5519
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else, %if.then8
  %err.2 = phi i8 [ %err.0, %for.body ], [ %err.0, %if.then8 ], [ 1, %if.else ], !dbg !5505
  %count_r.2 = phi i32 [ %count_r.0, %for.body ], [ %inc, %if.then8 ], [ %count_r.0, %if.else ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_r.2, metadata !5487, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.2, metadata !5491, metadata !DIExpression()), !dbg !5493
  %inc12 = add nuw nsw i32 %i.0, 1, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %inc12, metadata !5489, metadata !DIExpression()), !dbg !5493
  %.pre = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5503
  br label %for.cond, !dbg !5522, !llvm.loop !5523

for.cond13:                                       ; preds = %for.cond13.preheader, %for.inc36
  %err.3 = phi i8 [ %err.5, %for.inc36 ], [ %err.0.lcssa, %for.cond13.preheader ], !dbg !5505
  %i.1 = phi i32 [ %inc37, %for.inc36 ], [ 1, %for.cond13.preheader ], !dbg !5525
  %count_lp.0 = phi i32 [ %count_lp.2, %for.inc36 ], [ 0, %for.cond13.preheader ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_lp.0, metadata !5486, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5489, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.3, metadata !5491, metadata !DIExpression()), !dbg !5493
  %8 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5526
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %8, i64 0, i32 2, !dbg !5526
  %9 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !5526
  %tobool15 = icmp eq %struct.VEC_eh_landing_pad_gc* %9, null, !dbg !5526
  br i1 %tobool15, label %cond.end21, label %cond.true16, !dbg !5526

cond.true16:                                      ; preds = %for.cond13
  %base19 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %9, i64 0, i32 0, !dbg !5526
  br label %cond.end21, !dbg !5526

cond.end21:                                       ; preds = %for.cond13, %cond.true16
  %cond22 = phi %struct.VEC_eh_landing_pad_base* [ %base19, %cond.true16 ], [ null, %for.cond13 ], !dbg !5526
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !5490, metadata !DIExpression(DW_OP_deref)), !dbg !5493
  %call23 = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond22, i32 %i.1, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !5526
  %tobool24 = icmp eq i32 %call23, 0, !dbg !5507
  br i1 %tobool24, label %for.end38, label %for.body25, !dbg !5507

for.body25:                                       ; preds = %cond.end21
  %10 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5528
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %10, metadata !5490, metadata !DIExpression()), !dbg !5493
  %tobool26 = icmp eq %struct.eh_landing_pad_d* %10, null, !dbg !5528
  br i1 %tobool26, label %for.inc36, label %if.then27, !dbg !5530

if.then27:                                        ; preds = %for.body25
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %10, metadata !5490, metadata !DIExpression()), !dbg !5493
  %index28 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %10, i64 0, i32 4, !dbg !5531
  %11 = load i32, i32* %index28, align 8, !dbg !5531
  %cmp29 = icmp eq i32 %11, %i.1, !dbg !5534
  br i1 %cmp29, label %if.then30, label %if.else32, !dbg !5535

if.then30:                                        ; preds = %if.then27
  %inc31 = add nsw i32 %count_lp.0, 1, !dbg !5536
  call void @llvm.dbg.value(metadata i32 %inc31, metadata !5486, metadata !DIExpression()), !dbg !5493
  br label %for.inc36, !dbg !5537

if.else32:                                        ; preds = %if.then27
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %10, metadata !5490, metadata !DIExpression()), !dbg !5493
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0), i32 %11) #6, !dbg !5538
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %for.inc36

for.inc36:                                        ; preds = %for.body25, %if.else32, %if.then30
  %err.5 = phi i8 [ %err.3, %for.body25 ], [ %err.3, %if.then30 ], [ 1, %if.else32 ], !dbg !5505
  %count_lp.2 = phi i32 [ %count_lp.0, %for.body25 ], [ %inc31, %if.then30 ], [ %count_lp.0, %if.else32 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_lp.2, metadata !5486, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.5, metadata !5491, metadata !DIExpression()), !dbg !5493
  %inc37 = add nuw nsw i32 %i.1, 1, !dbg !5540
  call void @llvm.dbg.value(metadata i32 %inc37, metadata !5489, metadata !DIExpression()), !dbg !5493
  br label %for.cond13, !dbg !5541, !llvm.loop !5542

for.end38:                                        ; preds = %cond.end21
  %err.3.lcssa = phi i8 [ %err.3, %cond.end21 ], !dbg !5505
  %count_lp.0.lcssa = phi i32 [ %count_lp.0, %cond.end21 ], !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.3.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_lp.0.lcssa, metadata !5486, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.3.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_lp.0.lcssa, metadata !5486, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.3.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %count_lp.0.lcssa, metadata !5486, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 0, metadata !5485, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 0, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 0, metadata !5488, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !5483, metadata !DIExpression()), !dbg !5493
  %12 = bitcast %struct.function* %fun to i64**, !dbg !5544
  %13 = load i64*, i64** %12, align 8, !dbg !5544
  %14 = load i64, i64* %13, align 8, !dbg !5545
  %15 = bitcast %struct.eh_region_d** %r to i64*, !dbg !5546
  store i64 %14, i64* %15, align 8, !dbg !5546
  %16 = bitcast %struct.eh_landing_pad_d** %lp to i64*, !dbg !5547
  %17 = bitcast %struct.eh_landing_pad_d** %lp to i64**, !dbg !5550
  %18 = bitcast i64* %13 to %struct.eh_status*, !dbg !5552
  %19 = inttoptr i64 %14 to %struct.eh_region_d*, !dbg !5552
  br label %while.cond, !dbg !5552

while.cond:                                       ; preds = %if.end111, %for.end38
  %20 = phi %struct.eh_region_d* [ %19, %for.end38 ], [ %63, %if.end111 ]
  %21 = phi %struct.eh_status* [ %18, %for.end38 ], [ %.pre2, %if.end111 ]
  %22 = phi %struct.eh_status* [ %18, %for.end38 ], [ %.pre2, %if.end111 ], !dbg !5553
  %err.6 = phi i8 [ %err.3.lcssa, %for.end38 ], [ %err.10.lcssa, %if.end111 ], !dbg !5493
  %depth.0 = phi i32 [ 0, %for.end38 ], [ %depth.3, %if.end111 ], !dbg !5493
  %nvisited_r.0 = phi i32 [ 0, %for.end38 ], [ %inc66, %if.end111 ], !dbg !5493
  %nvisited_lp.0 = phi i32 [ 0, %for.end38 ], [ %nvisited_lp.1.lcssa, %if.end111 ], !dbg !5555
  %outer.0 = phi %struct.eh_region_d* [ null, %for.end38 ], [ %outer.2, %if.end111 ], !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer.0, metadata !5483, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.0, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_r.0, metadata !5485, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %depth.0, metadata !5488, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.6, metadata !5491, metadata !DIExpression()), !dbg !5493
  %region_array42 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %22, i64 0, i32 1, !dbg !5553
  %23 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array42, align 8, !dbg !5553
  %tobool43 = icmp eq %struct.VEC_eh_region_gc* %23, null, !dbg !5553
  br i1 %tobool43, label %cond.end49, label %cond.true44, !dbg !5553

cond.true44:                                      ; preds = %while.cond
  %region_array46 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %21, i64 0, i32 1, !dbg !5553
  %24 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array46, align 8, !dbg !5553
  %base47 = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %24, i64 0, i32 0, !dbg !5553
  br label %cond.end49, !dbg !5553

cond.end49:                                       ; preds = %while.cond, %cond.true44
  %cond50 = phi %struct.VEC_eh_region_base* [ %base47, %cond.true44 ], [ null, %while.cond ], !dbg !5553
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %20, metadata !5482, metadata !DIExpression()), !dbg !5493
  %index51 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %20, i64 0, i32 3, !dbg !5553
  %25 = load i32, i32* %index51, align 8, !dbg !5553
  %call52 = call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %cond50, i32 %25) #7, !dbg !5553
  %26 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5556
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %26, metadata !5482, metadata !DIExpression()), !dbg !5493
  %cmp53 = icmp eq %struct.eh_region_d* %call52, %26, !dbg !5557
  br i1 %cmp53, label %if.end56, label %if.then54, !dbg !5558

if.then54:                                        ; preds = %cond.end49
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %26, metadata !5482, metadata !DIExpression()), !dbg !5493
  %index55 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %26, i64 0, i32 3, !dbg !5559
  %27 = load i32, i32* %index55, align 8, !dbg !5559
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i32 %27) #6, !dbg !5561
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  %.pre3 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5562
  br label %if.end56, !dbg !5564

if.end56:                                         ; preds = %cond.end49, %if.then54
  %28 = phi %struct.eh_region_d* [ %.pre3, %if.then54 ], [ %call52, %cond.end49 ], !dbg !5562
  %err.7 = phi i8 [ 1, %if.then54 ], [ %err.6, %cond.end49 ], !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.7, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %28, metadata !5482, metadata !DIExpression()), !dbg !5493
  %outer57 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %28, i64 0, i32 0, !dbg !5565
  %29 = load %struct.eh_region_d*, %struct.eh_region_d** %outer57, align 8, !dbg !5565
  %cmp58 = icmp eq %struct.eh_region_d* %29, %outer.0, !dbg !5566
  br i1 %cmp58, label %if.end61, label %if.then59, !dbg !5567

if.then59:                                        ; preds = %if.end56
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %28, metadata !5482, metadata !DIExpression()), !dbg !5493
  %index60 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %28, i64 0, i32 3, !dbg !5568
  %30 = load i32, i32* %index60, align 8, !dbg !5568
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0), i32 %30) #6, !dbg !5570
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %if.end61, !dbg !5571

if.end61:                                         ; preds = %if.end56, %if.then59
  %err.8 = phi i8 [ 1, %if.then59 ], [ %err.7, %if.end56 ], !dbg !5572
  call void @llvm.dbg.value(metadata i8 %err.8, metadata !5491, metadata !DIExpression()), !dbg !5493
  %cmp62 = icmp slt i32 %depth.0, 0, !dbg !5573
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !5575

if.then63:                                        ; preds = %if.end61
  %31 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5576
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %31, metadata !5482, metadata !DIExpression()), !dbg !5493
  %index64 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %31, i64 0, i32 3, !dbg !5578
  %32 = load i32, i32* %index64, align 8, !dbg !5578
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i64 0, i64 0), i32 %32) #6, !dbg !5579
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %if.end65, !dbg !5580

if.end65:                                         ; preds = %if.then63, %if.end61
  %err.9 = phi i8 [ 1, %if.then63 ], [ %err.8, %if.end61 ], !dbg !5572
  call void @llvm.dbg.value(metadata i8 %err.9, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %inc66, metadata !5485, metadata !DIExpression()), !dbg !5493
  %33 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5581
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %33, metadata !5482, metadata !DIExpression()), !dbg !5493
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %33, i64 0, i32 6, !dbg !5582
  %34 = bitcast %struct.eh_landing_pad_d** %landing_pads to i64*, !dbg !5582
  %35 = load i64, i64* %34, align 8, !dbg !5582
  store i64 %35, i64* %16, align 8, !dbg !5583
  %36 = inttoptr i64 %35 to %struct.eh_landing_pad_d*, !dbg !5584
  br label %for.cond67, !dbg !5584

for.cond67:                                       ; preds = %if.end89, %if.end65
  %37 = phi %struct.eh_landing_pad_d* [ %36, %if.end65 ], [ %51, %if.end89 ]
  %38 = phi %struct.eh_landing_pad_d* [ %36, %if.end65 ], [ %51, %if.end89 ], !dbg !5585
  %err.10 = phi i8 [ %err.9, %if.end65 ], [ %err.12, %if.end89 ], !dbg !5572
  %nvisited_lp.1 = phi i32 [ %nvisited_lp.0, %if.end65 ], [ %inc90, %if.end89 ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.1, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.10, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %38, metadata !5490, metadata !DIExpression()), !dbg !5493
  %tobool68 = icmp eq %struct.eh_landing_pad_d* %38, null, !dbg !5586
  br i1 %tobool68, label %for.end92, label %for.body69, !dbg !5586

for.body69:                                       ; preds = %for.cond67
  %39 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5587
  %lp_array71 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %39, i64 0, i32 2, !dbg !5587
  %40 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array71, align 8, !dbg !5587
  %tobool72 = icmp eq %struct.VEC_eh_landing_pad_gc* %40, null, !dbg !5587
  br i1 %tobool72, label %cond.end78, label %cond.true73, !dbg !5587

cond.true73:                                      ; preds = %for.body69
  %base76 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %40, i64 0, i32 0, !dbg !5587
  br label %cond.end78, !dbg !5587

cond.end78:                                       ; preds = %for.body69, %cond.true73
  %cond79 = phi %struct.VEC_eh_landing_pad_base* [ %base76, %cond.true73 ], [ null, %for.body69 ], !dbg !5587
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %37, metadata !5490, metadata !DIExpression()), !dbg !5493
  %index80 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %37, i64 0, i32 4, !dbg !5587
  %41 = load i32, i32* %index80, align 8, !dbg !5587
  %call81 = call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %cond79, i32 %41) #7, !dbg !5587
  %42 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5590
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %42, metadata !5490, metadata !DIExpression()), !dbg !5493
  %cmp82 = icmp eq %struct.eh_landing_pad_d* %call81, %42, !dbg !5591
  br i1 %cmp82, label %if.end85, label %if.then83, !dbg !5592

if.then83:                                        ; preds = %cond.end78
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %42, metadata !5490, metadata !DIExpression()), !dbg !5493
  %index84 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %42, i64 0, i32 4, !dbg !5593
  %43 = load i32, i32* %index84, align 8, !dbg !5593
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0), i32 %43) #6, !dbg !5595
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  %.pre4 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5596
  br label %if.end85, !dbg !5598

if.end85:                                         ; preds = %cond.end78, %if.then83
  %.in = phi %struct.eh_landing_pad_d* [ %.pre4, %if.then83 ], [ %42, %cond.end78 ]
  %44 = phi %struct.eh_landing_pad_d* [ %.pre4, %if.then83 ], [ %call81, %cond.end78 ], !dbg !5596
  %err.11 = phi i8 [ 1, %if.then83 ], [ %err.10, %cond.end78 ], !dbg !5572
  %45 = bitcast %struct.eh_landing_pad_d* %.in to i64*, !dbg !5599
  call void @llvm.dbg.value(metadata i8 %err.11, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %44, metadata !5490, metadata !DIExpression()), !dbg !5493
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %44, i64 0, i32 1, !dbg !5600
  %46 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5600
  %47 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5601
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %47, metadata !5482, metadata !DIExpression()), !dbg !5493
  %cmp86 = icmp eq %struct.eh_region_d* %46, %47, !dbg !5602
  br i1 %cmp86, label %if.end89, label %if.then87, !dbg !5603

if.then87:                                        ; preds = %if.end85
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %44, metadata !5490, metadata !DIExpression()), !dbg !5493
  %index88 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %44, i64 0, i32 4, !dbg !5604
  %48 = load i32, i32* %index88, align 8, !dbg !5604
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28, i64 0, i64 0), i32 %48) #6, !dbg !5606
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  %.pre5 = load i64*, i64** %17, align 8, !dbg !5607
  br label %if.end89, !dbg !5608

if.end89:                                         ; preds = %if.end85, %if.then87
  %49 = phi i64* [ %.pre5, %if.then87 ], [ %45, %if.end85 ], !dbg !5607
  %err.12 = phi i8 [ 1, %if.then87 ], [ %err.11, %if.end85 ], !dbg !5599
  call void @llvm.dbg.value(metadata i8 %err.12, metadata !5491, metadata !DIExpression()), !dbg !5493
  %inc90 = add nsw i32 %nvisited_lp.1, 1, !dbg !5609
  call void @llvm.dbg.value(metadata i32 %inc90, metadata !5484, metadata !DIExpression()), !dbg !5493
  %50 = load i64, i64* %49, align 8, !dbg !5610
  store i64 %50, i64* %16, align 8, !dbg !5611
  %51 = inttoptr i64 %50 to %struct.eh_landing_pad_d*, !dbg !5612
  br label %for.cond67, !dbg !5612, !llvm.loop !5613

for.end92:                                        ; preds = %for.cond67
  %err.10.lcssa = phi i8 [ %err.10, %for.cond67 ], !dbg !5572
  %nvisited_lp.1.lcssa = phi i32 [ %nvisited_lp.1, %for.cond67 ], !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.10.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.1.lcssa, metadata !5484, metadata !DIExpression()), !dbg !5493
  %inc66 = add nuw nsw i32 %nvisited_r.0, 1, !dbg !5615
  call void @llvm.dbg.value(metadata i8 %err.10.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.1.lcssa, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.10.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.1.lcssa, metadata !5484, metadata !DIExpression()), !dbg !5493
  %52 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5616
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %52, metadata !5482, metadata !DIExpression()), !dbg !5493
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %52, i64 0, i32 1, !dbg !5618
  %53 = load %struct.eh_region_d*, %struct.eh_region_d** %inner, align 8, !dbg !5618
  %tobool93 = icmp eq %struct.eh_region_d* %53, null, !dbg !5616
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %52, metadata !5482, metadata !DIExpression()), !dbg !5493
  br i1 %tobool93, label %if.else97, label %if.then94, !dbg !5619

if.then94:                                        ; preds = %for.end92
  %54 = ptrtoint %struct.eh_region_d* %53 to i64, !dbg !5619
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %52, metadata !5483, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %52, metadata !5482, metadata !DIExpression()), !dbg !5493
  store i64 %54, i64* %15, align 8, !dbg !5620
  %inc96 = add nsw i32 %depth.0, 1, !dbg !5621
  call void @llvm.dbg.value(metadata i32 %inc96, metadata !5488, metadata !DIExpression()), !dbg !5493
  br label %if.end111, !dbg !5622

if.else97:                                        ; preds = %for.end92
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %52, i64 0, i32 2, !dbg !5623
  %55 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer, align 8, !dbg !5623
  %tobool98 = icmp eq %struct.eh_region_d* %55, null, !dbg !5625
  br i1 %tobool98, label %do.body.preheader, label %if.then99, !dbg !5626

do.body.preheader:                                ; preds = %if.else97
  br label %do.body, !dbg !5627

if.then99:                                        ; preds = %if.else97
  %56 = ptrtoint %struct.eh_region_d* %55 to i64, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %52, metadata !5482, metadata !DIExpression()), !dbg !5493
  store i64 %56, i64* %15, align 8, !dbg !5629
  br label %if.end111, !dbg !5630

do.body:                                          ; preds = %do.body.preheader, %if.end105
  %.in10 = phi %struct.eh_region_d* [ %59, %if.end105 ], [ %52, %do.body.preheader ]
  %depth.1 = phi i32 [ %dec, %if.end105 ], [ %depth.0, %do.body.preheader ], !dbg !5493
  %57 = bitcast %struct.eh_region_d* %.in10 to i64*, !dbg !5631
  call void @llvm.dbg.value(metadata i32 %depth.1, metadata !5488, metadata !DIExpression()), !dbg !5493
  %58 = load i64, i64* %57, align 8, !dbg !5633
  store i64 %58, i64* %15, align 8, !dbg !5634
  call void @llvm.dbg.value(metadata i64 %58, metadata !5482, metadata !DIExpression()), !dbg !5493
  %cmp103 = icmp eq i64 %58, 0, !dbg !5635
  %59 = inttoptr i64 %58 to %struct.eh_region_d*, !dbg !5637
  br i1 %cmp103, label %region_done, label %if.end105, !dbg !5637

if.end105:                                        ; preds = %do.body
  %dec = add nsw i32 %depth.1, -1, !dbg !5638
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5488, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* undef, metadata !5482, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* undef, metadata !5483, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %59, metadata !5482, metadata !DIExpression()), !dbg !5493
  %next_peer107 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %59, i64 0, i32 2, !dbg !5639
  %60 = load %struct.eh_region_d*, %struct.eh_region_d** %next_peer107, align 8, !dbg !5639
  %cmp108 = icmp eq %struct.eh_region_d* %60, null, !dbg !5640
  br i1 %cmp108, label %do.body, label %do.end, !dbg !5641, !llvm.loop !5642

do.end:                                           ; preds = %if.end105
  %dec.lcssa = phi i32 [ %dec, %if.end105 ], !dbg !5638
  %.lcssa13 = phi %struct.eh_region_d* [ %60, %if.end105 ], !dbg !5639
  %.lcssa11 = phi %struct.eh_region_d* [ %59, %if.end105 ], !dbg !5637
  %61 = ptrtoint %struct.eh_region_d* %.lcssa13 to i64, !dbg !5641
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %.lcssa11, metadata !5482, metadata !DIExpression()), !dbg !5493
  %outer106 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %.lcssa11, i64 0, i32 0, !dbg !5644
  %62 = load %struct.eh_region_d*, %struct.eh_region_d** %outer106, align 8, !dbg !5644
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %62, metadata !5483, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %.lcssa11, metadata !5482, metadata !DIExpression()), !dbg !5493
  store i64 %61, i64* %15, align 8, !dbg !5645
  br label %if.end111

if.end111:                                        ; preds = %if.then99, %do.end, %if.then94
  %63 = phi %struct.eh_region_d* [ %53, %if.then94 ], [ %55, %if.then99 ], [ %.lcssa13, %do.end ]
  %depth.3 = phi i32 [ %inc96, %if.then94 ], [ %depth.0, %if.then99 ], [ %dec.lcssa, %do.end ], !dbg !5493
  %outer.2 = phi %struct.eh_region_d* [ %52, %if.then94 ], [ %outer.0, %if.then99 ], [ %62, %do.end ], !dbg !5493
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %outer.2, metadata !5483, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %depth.3, metadata !5488, metadata !DIExpression()), !dbg !5493
  %.pre2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5553
  br label %while.cond, !dbg !5552, !llvm.loop !5646

region_done:                                      ; preds = %do.body
  %inc66.lcssa = phi i32 [ %inc66, %do.body ], !dbg !5615
  %depth.1.lcssa = phi i32 [ %depth.1, %do.body ], !dbg !5493
  %err.10.lcssa.lcssa = phi i8 [ %err.10.lcssa, %do.body ], !dbg !5572
  %nvisited_lp.1.lcssa.lcssa = phi i32 [ %nvisited_lp.1.lcssa, %do.body ], !dbg !5493
  call void @llvm.dbg.value(metadata i32 %depth.1.lcssa, metadata !5488, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.10.lcssa.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.1.lcssa.lcssa, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %depth.1.lcssa, metadata !5488, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.10.lcssa.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.1.lcssa.lcssa, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %depth.1.lcssa, metadata !5488, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.10.lcssa.lcssa, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %nvisited_lp.1.lcssa.lcssa, metadata !5484, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.label(metadata !5492), !dbg !5648
  %cmp112 = icmp eq i32 %depth.1.lcssa, 0, !dbg !5649
  br i1 %cmp112, label %if.end114, label %if.then113, !dbg !5651

if.then113:                                       ; preds = %region_done
  call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i32 %depth.1.lcssa) #6, !dbg !5652
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %if.end114, !dbg !5654

if.end114:                                        ; preds = %region_done, %if.then113
  %err.13 = phi i8 [ 1, %if.then113 ], [ %err.10.lcssa.lcssa, %region_done ], !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.13, metadata !5491, metadata !DIExpression()), !dbg !5493
  %cmp115 = icmp eq i32 %count_r.0.lcssa, %inc66.lcssa, !dbg !5655
  br i1 %cmp115, label %if.end117, label %if.then116, !dbg !5657

if.then116:                                       ; preds = %if.end114
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !5658
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %if.end117, !dbg !5660

if.end117:                                        ; preds = %if.end114, %if.then116
  %err.14 = phi i8 [ 1, %if.then116 ], [ %err.13, %if.end114 ], !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.14, metadata !5491, metadata !DIExpression()), !dbg !5493
  %cmp118 = icmp eq i32 %count_lp.0.lcssa, %nvisited_lp.1.lcssa.lcssa, !dbg !5661
  br i1 %cmp118, label %if.end120, label %if.then119, !dbg !5663

if.then119:                                       ; preds = %if.end117
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5664
  call void @llvm.dbg.value(metadata i8 1, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %if.end120, !dbg !5666

if.end120:                                        ; preds = %if.end117, %if.then119
  %err.15 = phi i8 [ 1, %if.then119 ], [ %err.14, %if.end117 ], !dbg !5493
  call void @llvm.dbg.value(metadata i8 %err.15, metadata !5491, metadata !DIExpression()), !dbg !5493
  %tobool121 = icmp eq i8 %err.15, 0, !dbg !5667
  br i1 %tobool121, label %cleanup, label %if.then122, !dbg !5669

if.then122:                                       ; preds = %if.end120
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5670
  call void @dump_eh_tree(%struct._IO_FILE* %64, %struct.function* %fun) #7, !dbg !5672
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5673
  br label %cleanup, !dbg !5674

cleanup:                                          ; preds = %if.end120, %entry, %if.then122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5675
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5675
  ret void, !dbg !5675
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @internal_error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_call_site_record_d(i8* %x_p) local_unnamed_addr #5 !dbg !5676 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5678, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5679, metadata !DIExpression()), !dbg !5681
  %cmp = icmp ne i8* %x_p, null, !dbg !5682
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !5682
  %or.cond = and i1 %cmp, %cmp1, !dbg !5682
  br i1 %or.cond, label %land.lhs.true2, label %if.end6, !dbg !5682

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !5682
  %tobool = icmp eq i32 %call, 0, !dbg !5682
  br i1 %tobool, label %do.body, label %if.end6, !dbg !5684

do.body:                                          ; preds = %land.lhs.true2
  %landing_pad = bitcast i8* %x_p to %struct.rtx_def**, !dbg !5685
  %0 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad, align 8, !dbg !5685
  %cmp3 = icmp eq %struct.rtx_def* %0, null, !dbg !5685
  br i1 %cmp3, label %if.end6, label %if.then4, !dbg !5689

if.then4:                                         ; preds = %do.body
  %1 = bitcast %struct.rtx_def* %0 to i8*, !dbg !5689
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %1) #6, !dbg !5685
  br label %if.end6, !dbg !5685

if.end6:                                          ; preds = %do.body, %land.lhs.true2, %if.then4, %entry
  ret void, !dbg !5690
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_rtx_def(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_call_site_record_d(i8* %x_p) local_unnamed_addr #5 !dbg !5691 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5693, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5694, metadata !DIExpression()), !dbg !5695
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_18call_site_record_d, i32 127) #6, !dbg !5696
  %tobool = icmp eq i32 %call, 0, !dbg !5696
  br i1 %tobool, label %if.end3, label %do.body, !dbg !5698

do.body:                                          ; preds = %entry
  %landing_pad = bitcast i8* %x_p to %struct.rtx_def**, !dbg !5699
  %0 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad, align 8, !dbg !5699
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !5699
  br i1 %cmp, label %if.end3, label %if.then1, !dbg !5703

if.then1:                                         ; preds = %do.body
  %1 = bitcast %struct.rtx_def* %0 to i8*, !dbg !5703
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %1) #6, !dbg !5699
  br label %if.end3, !dbg !5699

if.end3:                                          ; preds = %do.body, %entry, %if.then1
  ret void, !dbg !5704
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_18call_site_record_d(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !5705 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !5710, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5711, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !5712, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !5713, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5714, metadata !DIExpression()), !dbg !5715
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !5716
  br i1 %cmp, label %if.then, label %if.end, !dbg !5718

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5714, metadata !DIExpression()), !dbg !5715
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !5719
  br label %if.end, !dbg !5719

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5720
}

declare dso_local void @gt_pch_nx_rtx_def(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #2

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #2

declare dso_local void @gt_ggc_m_P9tree_node4htab(i8*) #2

declare dso_local void @gt_pch_n_P9tree_node4htab(i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_gc_reserve(%struct.VEC_eh_region_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5721 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_gc** %vec_, metadata !5725, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.value(metadata i32 1, metadata !5726, metadata !DIExpression()), !dbg !5728
  %0 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %vec_, align 8, !dbg !5729
  %tobool = icmp eq %struct.VEC_eh_region_gc* %0, null, !dbg !5729
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5729

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %0, i64 0, i32 0, !dbg !5729
  br label %cond.end, !dbg !5729

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5729
  %call = tail call fastcc i32 @VEC_eh_region_base_space(%struct.VEC_eh_region_base* %cond, i32 1) #7, !dbg !5729
  %tobool1 = icmp eq i32 %call, 0, !dbg !5729
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5727, metadata !DIExpression()), !dbg !5728
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5729

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_eh_region_gc** %vec_ to i8**, !dbg !5730
  %2 = load i8*, i8** %1, align 8, !dbg !5730
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !5730
  store i8* %call3, i8** %1, align 8, !dbg !5730
  br label %if.end, !dbg !5730

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d** @VEC_eh_region_base_quick_push(%struct.VEC_eh_region_base* %vec_, %struct.eh_region_d* %obj_) unnamed_addr #0 !dbg !5732 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5736, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %obj_, metadata !5737, metadata !DIExpression()), !dbg !5739
  %num1 = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !5740
  %0 = load i32, i32* %num1, align 8, !dbg !5740
  %inc = add i32 %0, 1, !dbg !5740
  store i32 %inc, i32* %num1, align 8, !dbg !5740
  %idxprom = zext i32 %0 to i64, !dbg !5740
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5740
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %arrayidx, metadata !5738, metadata !DIExpression()), !dbg !5739
  store %struct.eh_region_d* %obj_, %struct.eh_region_d** %arrayidx, align 8, !dbg !5740
  ret %struct.eh_region_d** %arrayidx, !dbg !5740
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_space(%struct.VEC_eh_region_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5741 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5745, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata i32 1, metadata !5746, metadata !DIExpression()), !dbg !5747
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !5748
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5748

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 1, !dbg !5748
  %0 = load i32, i32* %alloc, align 4, !dbg !5748
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !5748
  %1 = load i32, i32* %num, align 8, !dbg !5748
  %cmp1 = icmp ne i32 %0, %1, !dbg !5748
  %phitmp = zext i1 %cmp1 to i32, !dbg !5748
  br label %cond.end, !dbg !5748

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5748
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_gc_reserve(%struct.VEC_eh_landing_pad_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5749 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_gc** %vec_, metadata !5753, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.value(metadata i32 1, metadata !5754, metadata !DIExpression()), !dbg !5756
  %0 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %vec_, align 8, !dbg !5757
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %0, null, !dbg !5757
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5757

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %0, i64 0, i32 0, !dbg !5757
  br label %cond.end, !dbg !5757

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5757
  %call = tail call fastcc i32 @VEC_eh_landing_pad_base_space(%struct.VEC_eh_landing_pad_base* %cond, i32 1) #7, !dbg !5757
  %tobool1 = icmp eq i32 %call, 0, !dbg !5757
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5755, metadata !DIExpression()), !dbg !5756
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5757

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_eh_landing_pad_gc** %vec_ to i8**, !dbg !5758
  %2 = load i8*, i8** %1, align 8, !dbg !5758
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !5758
  store i8* %call3, i8** %1, align 8, !dbg !5758
  br label %if.end, !dbg !5758

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5757
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d** @VEC_eh_landing_pad_base_quick_push(%struct.VEC_eh_landing_pad_base* %vec_, %struct.eh_landing_pad_d* %obj_) unnamed_addr #0 !dbg !5760 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5764, metadata !DIExpression()), !dbg !5767
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %obj_, metadata !5765, metadata !DIExpression()), !dbg !5767
  %num1 = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !5768
  %0 = load i32, i32* %num1, align 8, !dbg !5768
  %inc = add i32 %0, 1, !dbg !5768
  store i32 %inc, i32* %num1, align 8, !dbg !5768
  %idxprom = zext i32 %0 to i64, !dbg !5768
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5768
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %arrayidx, metadata !5766, metadata !DIExpression()), !dbg !5767
  store %struct.eh_landing_pad_d* %obj_, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !5768
  ret %struct.eh_landing_pad_d** %arrayidx, !dbg !5768
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_space(%struct.VEC_eh_landing_pad_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5769 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5773, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 1, metadata !5774, metadata !DIExpression()), !dbg !5775
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !5776
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5776

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 1, !dbg !5776
  %0 = load i32, i32* %alloc, align 4, !dbg !5776
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !5776
  %1 = load i32, i32* %num, align 8, !dbg !5776
  %cmp1 = icmp ne i32 %0, %1, !dbg !5776
  %phitmp = zext i1 %cmp1 to i32, !dbg !5776
  br label %cond.end, !dbg !5776

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5776
}

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @vec_gc_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local i32 @type_list_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !5777 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5783, metadata !DIExpression()), !dbg !5784
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5785
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5785

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5785
  %0 = load i32, i32* %num, align 8, !dbg !5785
  br label %cond.end, !dbg !5785

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5785
  ret i32 %cond, !dbg !5785
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5786 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !5791, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5792, metadata !DIExpression()), !dbg !5793
  %call = tail call fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 1) #7, !dbg !5794
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !5794
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !5794
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5794

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !5794
  br label %cond.end, !dbg !5794

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5794
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !5794
  ret %union.tree_node** %call1, !dbg !5794
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5795 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !5799, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.value(metadata i32 1, metadata !5800, metadata !DIExpression()), !dbg !5802
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !5803
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !5803
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5803

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !5803
  br label %cond.end, !dbg !5803

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5803
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !5803
  %tobool1 = icmp eq i32 %call, 0, !dbg !5803
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5803
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5801, metadata !DIExpression()), !dbg !5802
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5803

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_gc** %vec_ to i8**, !dbg !5804
  %2 = load i8*, i8** %1, align 8, !dbg !5804
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !5804
  store i8* %call3, i8** %1, align 8, !dbg !5804
  br label %if.end, !dbg !5804

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5803
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5806 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5811, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5812, metadata !DIExpression()), !dbg !5814
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5815
  %0 = load i32, i32* %num1, align 8, !dbg !5815
  %inc = add i32 %0, 1, !dbg !5815
  store i32 %inc, i32* %num1, align 8, !dbg !5815
  %idxprom = zext i32 %0 to i64, !dbg !5815
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5815
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5813, metadata !DIExpression()), !dbg !5814
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5815
  ret %union.tree_node** %arrayidx, !dbg !5815
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5816 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5820, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 1, metadata !5821, metadata !DIExpression()), !dbg !5822
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5823
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5823

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !5823
  %0 = load i32, i32* %alloc, align 4, !dbg !5823
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5823
  %1 = load i32, i32* %num, align 8, !dbg !5823
  %cmp1 = icmp ne i32 %0, %1, !dbg !5823
  %phitmp = zext i1 %cmp1 to i32, !dbg !5823
  br label %cond.end, !dbg !5823

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5823
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %vec_) unnamed_addr #0 !dbg !5824 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5830, metadata !DIExpression()), !dbg !5831
  %tobool = icmp eq %struct.VEC_uchar_base* %vec_, null, !dbg !5832
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5832

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !5832
  %0 = load i32, i32* %num, align 4, !dbg !5832
  br label %cond.end, !dbg !5832

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5832
  ret i32 %cond, !dbg !5832
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_uleb128(%struct.VEC_uchar_gc** %data_area, i32 %value) unnamed_addr #5 !dbg !5833 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_gc** %data_area, metadata !5838, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i32 %value, metadata !5839, metadata !DIExpression()), !dbg !5842
  br label %do.body, !dbg !5843

do.body:                                          ; preds = %do.body, %entry
  %value.addr.0 = phi i32 [ %value, %entry ], [ %shr, %do.body ]
  call void @llvm.dbg.value(metadata i32 %value.addr.0, metadata !5839, metadata !DIExpression()), !dbg !5842
  %0 = trunc i32 %value.addr.0 to i8, !dbg !5844
  %conv = and i8 %0, 127, !dbg !5844
  call void @llvm.dbg.value(metadata i8 %conv, metadata !5840, metadata !DIExpression()), !dbg !5845
  %shr = lshr i32 %value.addr.0, 7, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %shr, metadata !5839, metadata !DIExpression()), !dbg !5842
  %tobool = icmp eq i32 %shr, 0, !dbg !5847
  %1 = or i8 %0, -128, !dbg !5849
  %byte.0 = select i1 %tobool, i8 %conv, i8 %1, !dbg !5849
  call void @llvm.dbg.value(metadata i8 %byte.0, metadata !5840, metadata !DIExpression()), !dbg !5845
  %call = tail call fastcc i8* @VEC_uchar_gc_safe_push(%struct.VEC_uchar_gc** %data_area, i8 zeroext %byte.0) #7, !dbg !5850
  br i1 %tobool, label %do.end, label %do.body, !dbg !5851, !llvm.loop !5852

do.end:                                           ; preds = %do.body
  ret void, !dbg !5854
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @VEC_uchar_gc_safe_push(%struct.VEC_uchar_gc** %vec_, i8 zeroext %obj_) unnamed_addr #0 !dbg !5855 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_gc** %vec_, metadata !5861, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata i8 %obj_, metadata !5862, metadata !DIExpression()), !dbg !5863
  %call = tail call fastcc i32 @VEC_uchar_gc_reserve(%struct.VEC_uchar_gc** %vec_, i32 1) #7, !dbg !5864
  %0 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %vec_, align 8, !dbg !5864
  %tobool = icmp eq %struct.VEC_uchar_gc* %0, null, !dbg !5864
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5864

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %0, i64 0, i32 0, !dbg !5864
  br label %cond.end, !dbg !5864

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_uchar_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5864
  %call1 = tail call fastcc i8* @VEC_uchar_base_quick_push(%struct.VEC_uchar_base* %cond, i8 zeroext %obj_) #7, !dbg !5864
  ret i8* %call1, !dbg !5864
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_gc_reserve(%struct.VEC_uchar_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5865 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_gc** %vec_, metadata !5869, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata i32 1, metadata !5870, metadata !DIExpression()), !dbg !5872
  %0 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %vec_, align 8, !dbg !5873
  %tobool = icmp eq %struct.VEC_uchar_gc* %0, null, !dbg !5873
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5873

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %0, i64 0, i32 0, !dbg !5873
  br label %cond.end, !dbg !5873

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_uchar_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5873
  %call = tail call fastcc i32 @VEC_uchar_base_space(%struct.VEC_uchar_base* %cond, i32 1) #7, !dbg !5873
  %tobool1 = icmp eq i32 %call, 0, !dbg !5873
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5873
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5871, metadata !DIExpression()), !dbg !5872
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5873

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_uchar_gc** %vec_ to i8**, !dbg !5874
  %2 = load i8*, i8** %1, align 8, !dbg !5874
  %call3 = tail call i8* @vec_gc_o_reserve(i8* %2, i32 1, i64 8, i64 1) #6, !dbg !5874
  store i8* %call3, i8** %1, align 8, !dbg !5874
  br label %if.end, !dbg !5874

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5873
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @VEC_uchar_base_quick_push(%struct.VEC_uchar_base* %vec_, i8 zeroext %obj_) unnamed_addr #0 !dbg !5876 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5881, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i8 %obj_, metadata !5882, metadata !DIExpression()), !dbg !5884
  %num1 = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !5885
  %0 = load i32, i32* %num1, align 4, !dbg !5885
  %inc = add i32 %0, 1, !dbg !5885
  store i32 %inc, i32* %num1, align 4, !dbg !5885
  %idxprom = zext i32 %0 to i64, !dbg !5885
  %arrayidx = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5885
  call void @llvm.dbg.value(metadata i8* %arrayidx, metadata !5883, metadata !DIExpression()), !dbg !5884
  store i8 %obj_, i8* %arrayidx, align 1, !dbg !5885
  ret i8* %arrayidx, !dbg !5885
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_base_space(%struct.VEC_uchar_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5886 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5890, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i32 1, metadata !5891, metadata !DIExpression()), !dbg !5892
  %tobool = icmp eq %struct.VEC_uchar_base* %vec_, null, !dbg !5893
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5893

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 1, !dbg !5893
  %0 = load i32, i32* %alloc, align 4, !dbg !5893
  %num = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !5893
  %1 = load i32, i32* %num, align 4, !dbg !5893
  %cmp1 = icmp ne i32 %0, %1, !dbg !5893
  %phitmp = zext i1 %cmp1 to i32, !dbg !5893
  br label %cond.end, !dbg !5893

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5893

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5893
}

declare dso_local i8* @vec_gc_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_eh_generation() unnamed_addr #5 !dbg !5894 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  tail call fastcc void @dw2_build_landing_pads() #7, !dbg !5903
  tail call void @break_superblocks() #6, !dbg !5905
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5906
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !5906
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5906
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !5906
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5906
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %2) #7, !dbg !5908
  %insns = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 2, !dbg !5909
  %r = bitcast %union.edge_def_insns* %insns to %struct.rtx_def**, !dbg !5910
  %3 = load %struct.rtx_def*, %struct.rtx_def** %r, align 8, !dbg !5910
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !5908
  br i1 %tobool, label %if.end, label %if.then, !dbg !5911

if.then:                                          ; preds = %entry
  tail call void @commit_edge_insertions() #6, !dbg !5912
  br label %if.end, !dbg !5912

if.end:                                           ; preds = %entry, %if.then
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5913
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5913
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !5913
  %x_entry_block_ptr3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !5913
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr3, align 8, !dbg !5913
  %7 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5914
  %8 = bitcast %struct.edge_def** %e to i8*, !dbg !5914
  %9 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5915
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5915
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5915
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5917
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5917
  br label %for.cond, !dbg !5913

for.cond:                                         ; preds = %if.end39, %if.end
  %14 = phi %struct.control_flow_graph* [ %5, %if.end ], [ %.pre1, %if.end39 ], !dbg !5919
  %.pn = phi %struct.basic_block_def* [ %6, %if.end ], [ %bb.0, %if.end39 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !5920
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5920
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5896, metadata !DIExpression()), !dbg !5921
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 1, !dbg !5919
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5919
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %15, !dbg !5919
  br i1 %cmp, label %for.end42, label %for.body, !dbg !5913

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !5922
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5923
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !5924
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5924
  %16 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5924
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %16, i64 0, i32 1, !dbg !5924
  %17 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5924
  %call6 = call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_rtx(%struct.rtx_def* %17) #7, !dbg !5925
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call6, metadata !5897, metadata !DIExpression()), !dbg !5914
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8, !dbg !5926
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !5926
  %call7 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5926
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call7, 0, !dbg !5926
  store i32 %18, i32* %10, align 8, !dbg !5926
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call7, 1, !dbg !5926
  store %struct.VEC_edge_gc** %19, %struct.VEC_edge_gc*** %11, align 8, !dbg !5926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %9, i64 16, i1 false), !dbg !5926
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8, !dbg !5926
  br label %for.cond8, !dbg !5926

for.cond8:                                        ; preds = %for.inc, %for.body
  %20 = load i32, i32* %12, align 8, !dbg !5927
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !5927
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5902, metadata !DIExpression(DW_OP_deref)), !dbg !5914
  %call9 = call fastcc zeroext i8 @ei_cond(i32 %20, %struct.VEC_edge_gc** %21, %struct.edge_def** nonnull %e) #7, !dbg !5927
  %tobool10 = icmp eq i8 %call9, 0, !dbg !5926
  br i1 %tobool10, label %for.cond8.for.end_crit_edge, label %for.body11, !dbg !5926

for.cond8.for.end_crit_edge:                      ; preds = %for.cond8
  %.pre2 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5928
  br label %for.end, !dbg !5926

for.body11:                                       ; preds = %for.cond8
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5929
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !5902, metadata !DIExpression()), !dbg !5914
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 7, !dbg !5931
  %23 = load i32, i32* %flags, align 8, !dbg !5931
  %and = and i32 %23, 8, !dbg !5932
  %tobool12 = icmp eq i32 %and, 0, !dbg !5932
  br i1 %tobool12, label %for.inc, label %for.end.loopexit, !dbg !5933

for.inc:                                          ; preds = %for.body11
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5901, metadata !DIExpression(DW_OP_deref)), !dbg !5914
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5927
  br label %for.cond8, !dbg !5927, !llvm.loop !5934

for.end.loopexit:                                 ; preds = %for.body11
  %.lcssa = phi %struct.edge_def* [ %22, %for.body11 ], !dbg !5929
  br label %for.end, !dbg !5928

for.end:                                          ; preds = %for.end.loopexit, %for.cond8.for.end_crit_edge
  %24 = phi %struct.edge_def* [ %.pre2, %for.cond8.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !5928
  %cmp15 = icmp eq %struct.eh_landing_pad_d* %call6, null, !dbg !5928
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !5902, metadata !DIExpression()), !dbg !5914
  %cmp16 = icmp ne %struct.edge_def* %24, null, !dbg !5928
  %cmp18 = xor i1 %cmp16, %cmp15, !dbg !5928
  br i1 %cmp18, label %cond.end, label %cond.true, !dbg !5928

cond.true:                                        ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 1441, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5928
  br label %cond.end, !dbg !5928

cond.end:                                         ; preds = %for.end, %cond.true
  br i1 %cmp15, label %if.end39, label %if.then22, !dbg !5936

if.then22:                                        ; preds = %cond.end
  %25 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5937
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !5902, metadata !DIExpression()), !dbg !5914
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 1, !dbg !5937
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5937
  %il23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 7, !dbg !5937
  %rtl24 = bitcast %union.basic_block_il_dependent* %il23 to %struct.rtl_bb_info**, !dbg !5937
  %27 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl24, align 8, !dbg !5937
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %27, i64 0, i32 0, !dbg !5937
  %28 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5937
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call6, i64 0, i32 2, !dbg !5937
  %29 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !5937
  %call25 = call %struct.rtx_def* @label_rtx(%union.tree_node* %29) #6, !dbg !5937
  %cmp26 = icmp eq %struct.rtx_def* %28, %call25, !dbg !5937
  br i1 %cmp26, label %cond.end30, label %cond.true28, !dbg !5937

cond.true28:                                      ; preds = %if.then22
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 1444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5937
  br label %cond.end30, !dbg !5937

cond.end30:                                       ; preds = %if.then22, %cond.true28
  %30 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5940
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !5902, metadata !DIExpression()), !dbg !5914
  %landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call6, i64 0, i32 3, !dbg !5941
  %31 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad, align 8, !dbg !5941
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 1, !dbg !5941
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !5941
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5941
  call void @redirect_edge_succ(%struct.edge_def* %30, %struct.basic_block_def* %32) #6, !dbg !5942
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5943
  %end_34 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i64 0, i32 1, !dbg !5943
  %34 = bitcast %struct.rtx_def** %end_34 to i32**, !dbg !5943
  %35 = load i32*, i32** %34, align 8, !dbg !5943
  %bf.load = load i32, i32* %35, align 8, !dbg !5943
  %bf.clear = and i32 %bf.load, 65535, !dbg !5943
  %cmp35 = icmp eq i32 %bf.clear, 10, !dbg !5943
  %cond37 = select i1 %cmp35, i32 6, i32 2, !dbg !5943
  %36 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5944
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !5902, metadata !DIExpression()), !dbg !5914
  %flags38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i64 0, i32 7, !dbg !5945
  %37 = load i32, i32* %flags38, align 8, !dbg !5946
  %or = or i32 %37, %cond37, !dbg !5946
  store i32 %or, i32* %flags38, align 8, !dbg !5946
  br label %if.end39, !dbg !5947

if.end39:                                         ; preds = %cond.end, %cond.end30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5948
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !5948
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5919
  %cfg5.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5949
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5.phi.trans.insert, align 8, !dbg !5919
  br label %for.cond, !dbg !5919, !llvm.loop !5950

for.end42:                                        ; preds = %for.cond
  ret void, !dbg !5952
}

declare dso_local zeroext i8 @cleanup_cfg(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dw2_build_landing_pads() unnamed_addr #5 !dbg !5953 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !5964
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5964
  call void @llvm.dbg.value(metadata i32 1, metadata !5955, metadata !DIExpression()), !dbg !5965
  br label %for.cond, !dbg !5966

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %cleanup ], !dbg !5967
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5955, metadata !DIExpression()), !dbg !5965
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5968
  %eh = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !5968
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5968
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 2, !dbg !5968
  %3 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !5968
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %3, null, !dbg !5968
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5968

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %3, i64 0, i32 0, !dbg !5968
  br label %cond.end, !dbg !5968

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !5968
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !5956, metadata !DIExpression(DW_OP_deref)), !dbg !5965
  %call = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond, i32 %i.0, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !5968
  %tobool4 = icmp eq i32 %call, 0, !dbg !5969
  br i1 %tobool4, label %for.end, label %for.body, !dbg !5969

for.body:                                         ; preds = %cond.end
  %4 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5970
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !5956, metadata !DIExpression()), !dbg !5965
  %cmp = icmp eq %struct.eh_landing_pad_d* %4, null, !dbg !5972
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !5973

lor.lhs.false:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !5956, metadata !DIExpression()), !dbg !5965
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %4, i64 0, i32 2, !dbg !5974
  %5 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !5974
  %cmp5 = icmp eq %union.tree_node* %5, null, !dbg !5975
  br i1 %cmp5, label %cleanup, label %if.end, !dbg !5976

if.end:                                           ; preds = %lor.lhs.false
  call void @start_sequence() #6, !dbg !5977
  %call6 = call %struct.rtx_def* @gen_label_rtx() #6, !dbg !5978
  %6 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5979
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %6, metadata !5956, metadata !DIExpression()), !dbg !5965
  %landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %6, i64 0, i32 3, !dbg !5980
  store %struct.rtx_def* %call6, %struct.rtx_def** %landing_pad, align 8, !dbg !5981
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %6, metadata !5956, metadata !DIExpression()), !dbg !5965
  %call8 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call6) #6, !dbg !5982
  %7 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5983
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %7, metadata !5956, metadata !DIExpression()), !dbg !5965
  %landing_pad9 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %7, i64 0, i32 3, !dbg !5983
  %8 = bitcast %struct.rtx_def** %landing_pad9 to i32**, !dbg !5983
  %9 = load i32*, i32** %8, align 8, !dbg !5983
  %bf.load = load i32, i32* %9, align 8, !dbg !5984
  %bf.set = or i32 %bf.load, 268435456, !dbg !5984
  store i32 %bf.set, i32* %9, align 8, !dbg !5984
  %10 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5985
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %10, metadata !5956, metadata !DIExpression()), !dbg !5965
  %region10 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %10, i64 0, i32 1, !dbg !5986
  %11 = load %struct.eh_region_d*, %struct.eh_region_d** %region10, align 8, !dbg !5986
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %11, metadata !5957, metadata !DIExpression()), !dbg !5987
  %exc_ptr_reg = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %11, i64 0, i32 7, !dbg !5988
  %12 = load %struct.rtx_def*, %struct.rtx_def** %exc_ptr_reg, align 8, !dbg !5988
  %tobool11 = icmp eq %struct.rtx_def* %12, null, !dbg !5990
  br i1 %tobool11, label %if.end16, label %if.then12, !dbg !5991

if.then12:                                        ; preds = %if.end
  %13 = load i32, i32* @ptr_mode, align 4, !dbg !5992
  %call14 = call %struct.rtx_def* @gen_rtx_REG(i32 %13, i32 0) #6, !dbg !5993
  %call15 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %12, %struct.rtx_def* %call14) #6, !dbg !5994
  br label %if.end16, !dbg !5994

if.end16:                                         ; preds = %if.end, %if.then12
  %filter_reg = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %11, i64 0, i32 8, !dbg !5995
  %14 = load %struct.rtx_def*, %struct.rtx_def** %filter_reg, align 8, !dbg !5995
  %tobool17 = icmp eq %struct.rtx_def* %14, null, !dbg !5997
  br i1 %tobool17, label %if.end23, label %if.then18, !dbg !5998

if.then18:                                        ; preds = %if.end16
  %15 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 7), align 8, !dbg !5999
  %call20 = call i32 %15() #6, !dbg !6000
  %call21 = call %struct.rtx_def* @gen_rtx_REG(i32 %call20, i32 1) #6, !dbg !6001
  %call22 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %14, %struct.rtx_def* %call21) #6, !dbg !6002
  br label %if.end23, !dbg !6002

if.end23:                                         ; preds = %if.end16, %if.then18
  %call24 = call %struct.rtx_def* @get_insns() #6, !dbg !6003
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !5962, metadata !DIExpression()), !dbg !5987
  call void @end_sequence() #6, !dbg !6004
  %16 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !6005
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %16, metadata !5956, metadata !DIExpression()), !dbg !5965
  %post_landing_pad25 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %16, i64 0, i32 2, !dbg !6006
  %17 = load %union.tree_node*, %union.tree_node** %post_landing_pad25, align 8, !dbg !6006
  %call26 = call %struct.rtx_def* @label_rtx(%union.tree_node* %17) #6, !dbg !6007
  %call27 = call fastcc %struct.basic_block_def* @emit_to_new_bb_before(%struct.rtx_def* %call24, %struct.rtx_def* %call26) #7, !dbg !6008
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call27, metadata !5961, metadata !DIExpression()), !dbg !5987
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call27, i64 0, i32 6, !dbg !6009
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6009
  %call28 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %call27, %struct.basic_block_def* %18, i32 1) #6, !dbg !6010
  call void @llvm.dbg.value(metadata %struct.edge_def* %call28, metadata !5963, metadata !DIExpression()), !dbg !5987
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call27, i64 0, i32 8, !dbg !6011
  %19 = load i64, i64* %count, align 8, !dbg !6011
  %count29 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call28, i64 0, i32 9, !dbg !6012
  store i64 %19, i64* %count29, align 8, !dbg !6013
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call28, i64 0, i32 8, !dbg !6014
  store i32 10000, i32* %probability, align 4, !dbg !6015
  br label %cleanup, !dbg !6016

cleanup:                                          ; preds = %for.body, %lor.lhs.false, %if.end23
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5955, metadata !DIExpression()), !dbg !5965
  br label %for.cond, !dbg !6018, !llvm.loop !6019

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6021
  ret void, !dbg !6021
}

declare dso_local void @break_superblocks() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6022 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6029, metadata !DIExpression()), !dbg !6030
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !6031
  %tobool = icmp eq i8 %call, 0, !dbg !6031
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6031

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6031
  br label %cond.end, !dbg !6031

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6032
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6032
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6032
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6032

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6032
  br label %cond.end5, !dbg !6032

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6032
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !6032
  ret %struct.edge_def* %call7, !dbg !6033
}

declare dso_local void @commit_edge_insertions() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !6034 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !6038, metadata !DIExpression()), !dbg !6040
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !6041
  store i32 0, i32* %index, align 8, !dbg !6042
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !6043
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !6044
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !6045
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !6045
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !6045
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6046 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6052, metadata !DIExpression()), !dbg !6053
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6054
  %tobool = icmp eq i8 %call, 0, !dbg !6054
  br i1 %tobool, label %if.then, label %if.else, !dbg !6056

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6057
  br label %return, !dbg !6059

if.else:                                          ; preds = %entry
  br label %return, !dbg !6060

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6062
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6062
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6062
  ret i8 %retval.0, !dbg !6063
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !6064 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !6069, metadata !DIExpression()), !dbg !6070
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !6071
  %0 = load i32, i32* %index, align 8, !dbg !6071
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !6071
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6071
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !6071
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6071
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6071

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !6071
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6071
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !6071
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6071
  br label %cond.end, !dbg !6071

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6071
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6071
  %cmp = icmp ult i32 %0, %call2, !dbg !6071
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !6071

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6071
  br label %cond.end5, !dbg !6071

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !6072
  %inc = add i32 %5, 1, !dbg !6072
  store i32 %inc, i32* %index, align 8, !dbg !6072
  ret void, !dbg !6073
}

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @start_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

declare dso_local void @end_sequence() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @emit_to_new_bb_before(%struct.rtx_def* %seq, %struct.rtx_def* %insn) unnamed_addr #5 !dbg !6074 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq, metadata !6078, metadata !DIExpression()), !dbg !6084
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6079, metadata !DIExpression()), !dbg !6084
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6085
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6085
  %1 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6086
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6086
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !6086
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !6086
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6086
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 0, !dbg !6086
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6086
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6086
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !6086
  store i32 %4, i32* %3, align 8, !dbg !6086
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6086
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !6086
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !6086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !6086
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6086
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6088
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6088
  br label %for.cond, !dbg !6090

for.cond:                                         ; preds = %if.end, %entry
  %9 = load i32, i32* %7, align 8, !dbg !6091
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !6091
  %call1 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %9, %struct.VEC_edge_gc** %10) #7, !dbg !6091
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !6082, metadata !DIExpression()), !dbg !6084
  %tobool = icmp eq %struct.edge_def* %call1, null, !dbg !6092
  br i1 %tobool, label %for.end, label %for.body, !dbg !6092

for.body:                                         ; preds = %for.cond
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 7, !dbg !6093
  %11 = load i32, i32* %flags, align 8, !dbg !6093
  %and = and i32 %11, 1, !dbg !6095
  %tobool2 = icmp eq i32 %and, 0, !dbg !6095
  br i1 %tobool2, label %if.else, label %if.then, !dbg !6096

if.then:                                          ; preds = %for.body
  %call3 = call %struct.basic_block_def* @force_nonfallthru(%struct.edge_def* nonnull %call1) #6, !dbg !6097
  br label %if.end, !dbg !6097

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6083, metadata !DIExpression(DW_OP_deref)), !dbg !6084
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6098
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond, !dbg !6099, !llvm.loop !6100

for.end:                                          ; preds = %for.cond
  %call4 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %seq, %struct.rtx_def* %insn) #6, !dbg !6102
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !6080, metadata !DIExpression()), !dbg !6084
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call4, i64 0, i32 0, !dbg !6103
  %bf.load = load i32, i32* %12, align 8, !dbg !6103
  %bf.clear = and i32 %bf.load, 65535, !dbg !6103
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !6103
  br i1 %cmp, label %if.then5, label %if.end9, !dbg !6105

if.then5:                                         ; preds = %for.end
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6106
  %rt_rtx = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !6106
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6106
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !6080, metadata !DIExpression()), !dbg !6084
  br label %if.end9, !dbg !6107

if.end9:                                          ; preds = %if.then5, %for.end
  %last.0 = phi %struct.rtx_def* [ %14, %if.then5 ], [ %call4, %for.end ], !dbg !6084
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !6080, metadata !DIExpression()), !dbg !6084
  %15 = bitcast %struct.rtx_def* %seq to i8*, !dbg !6108
  %16 = bitcast %struct.rtx_def* %last.0 to i8*, !dbg !6109
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6110
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 5, !dbg !6111
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6111
  %call14 = call %struct.basic_block_def* @create_basic_block(i8* %15, i8* %16, %struct.basic_block_def* %18) #6, !dbg !6112
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call14, metadata !6081, metadata !DIExpression()), !dbg !6084
  call void @update_bb_for_insn(%struct.basic_block_def* %call14) #6, !dbg !6113
  %flags15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call14, i64 0, i32 13, !dbg !6114
  %19 = load i32, i32* %flags15, align 8, !dbg !6115
  %or = or i32 %19, 8, !dbg !6115
  store i32 %or, i32* %flags15, align 8, !dbg !6115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6116
  ret %struct.basic_block_def* %call14, !dbg !6117
}

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6118 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6123
  %tobool = icmp eq i8 %call, 0, !dbg !6123
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6124

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6125
  br label %cond.end, !dbg !6124

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !6124
  ret %struct.edge_def* %cond, !dbg !6126
}

declare dso_local %struct.basic_block_def* @force_nonfallthru(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_basic_block(i8*, i8*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @update_bb_for_insn(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6127 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6132
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6132
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6132

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6132
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6132
  br label %cond.end, !dbg !6132

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6132
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6132
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6133
  %conv3 = zext i1 %cmp to i8, !dbg !6134
  ret i8 %conv3, !dbg !6135
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6136 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6139
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6139
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6139

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6139
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6139
  br label %cond.end, !dbg !6139

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6139
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !6139
  ret %struct.edge_def* %call2, !dbg !6140
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6141 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6147, metadata !DIExpression()), !dbg !6148
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6149
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6149

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6149
  %0 = load i32, i32* %num, align 8, !dbg !6149
  br label %cond.end, !dbg !6149

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6149
  ret i32 %cond, !dbg !6149
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6150 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6155
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6155

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6155
  br label %cond.end, !dbg !6155

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6156
  ret %struct.VEC_edge_gc* %0, !dbg !6157
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6158 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6162, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6163, metadata !DIExpression()), !dbg !6164
  br label %land.end, !dbg !6165

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6165
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6165
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6165
  ret %struct.edge_def* %0, !dbg !6165
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6166 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6170, metadata !DIExpression()), !dbg !6171
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6172
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6172
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6172
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6172

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6172
  br label %cond.end, !dbg !6172

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6172
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6172
  %cmp = icmp eq i32 %call, 1, !dbg !6173
  %conv2 = zext i1 %cmp to i8, !dbg !6172
  ret i8 %conv2, !dbg !6174
}

declare dso_local i32 @cgraph_function_body_availability(%struct.cgraph_node*) local_unnamed_addr #2

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @cgraph_set_nothrow_flag(%struct.cgraph_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local i8* @current_function_name() local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @action_record_hash(i8* %pentry) #5 !dbg !6175 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !6177, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !6178, metadata !DIExpression()), !dbg !6179
  %next = getelementptr inbounds i8, i8* %pentry, i64 8, !dbg !6180
  %0 = bitcast i8* %next to i32*, !dbg !6180
  %1 = load i32, i32* %0, align 4, !dbg !6180
  %mul = mul nsw i32 %1, 1009, !dbg !6181
  %filter = getelementptr inbounds i8, i8* %pentry, i64 4, !dbg !6182
  %2 = bitcast i8* %filter to i32*, !dbg !6182
  %3 = load i32, i32* %2, align 4, !dbg !6182
  %add = add nsw i32 %mul, %3, !dbg !6183
  ret i32 %add, !dbg !6184
}

; Function Attrs: nounwind uwtable
define internal i32 @action_record_eq(i8* %pentry, i8* %pdata) #5 !dbg !6185 {
entry:
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !6187, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata i8* %pdata, metadata !6188, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !6189, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata i8* %pdata, metadata !6190, metadata !DIExpression()), !dbg !6191
  %filter = getelementptr inbounds i8, i8* %pentry, i64 4, !dbg !6192
  %0 = bitcast i8* %filter to i32*, !dbg !6192
  %1 = load i32, i32* %0, align 4, !dbg !6192
  %filter2 = getelementptr inbounds i8, i8* %pdata, i64 4, !dbg !6193
  %2 = bitcast i8* %filter2 to i32*, !dbg !6193
  %3 = load i32, i32* %2, align 4, !dbg !6193
  %cmp = icmp eq i32 %1, %3, !dbg !6194
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6195

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %pdata, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata i8* %pentry, metadata !6189, metadata !DIExpression()), !dbg !6191
  %next = getelementptr inbounds i8, i8* %pentry, i64 8, !dbg !6196
  %4 = bitcast i8* %next to i32*, !dbg !6196
  %5 = load i32, i32* %4, align 4, !dbg !6196
  %next3 = getelementptr inbounds i8, i8* %pdata, i64 8, !dbg !6197
  %6 = bitcast i8* %next3 to i32*, !dbg !6197
  %7 = load i32, i32* %6, align 4, !dbg !6197
  %cmp4 = icmp eq i32 %5, %7, !dbg !6198
  %phitmp = zext i1 %cmp4 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %8, !dbg !6199
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @collect_one_action_chain(%struct.htab* %ar_hash, %struct.eh_region_d* %region) unnamed_addr #5 !dbg !6200 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %ar_hash, metadata !6204, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !6205, metadata !DIExpression()), !dbg !6224
  %cmp = icmp eq %struct.eh_region_d* %region, null, !dbg !6225
  br i1 %cmp, label %cleanup70, label %if.end, !dbg !6227

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 4, !dbg !6228
  %0 = load i32, i32* %type, align 4, !dbg !6228
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 2, label %sw.bb53
    i32 3, label %cleanup70
  ], !dbg !6229

sw.bb:                                            ; preds = %if.end
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 0, !dbg !6230
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !6230
  %call = tail call fastcc i32 @collect_one_action_chain(%struct.htab* %ar_hash, %struct.eh_region_d* %1) #7, !dbg !6231
  call void @llvm.dbg.value(metadata i32 %call, metadata !6206, metadata !DIExpression()), !dbg !6224
  %cmp1 = icmp slt i32 %call, 1, !dbg !6232
  br i1 %cmp1, label %cleanup70, label %if.end3, !dbg !6234

if.end3:                                          ; preds = %sw.bb
  br label %for.cond, !dbg !6235

for.cond:                                         ; preds = %for.inc, %if.end3
  %region.pn = phi %struct.eh_region_d* [ %region, %if.end3 ], [ %r.0, %for.inc ]
  %r.0.in = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region.pn, i64 0, i32 0, !dbg !6237
  %r.0 = load %struct.eh_region_d*, %struct.eh_region_d** %r.0.in, align 8, !dbg !6237
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r.0, metadata !6207, metadata !DIExpression()), !dbg !6238
  %tobool = icmp eq %struct.eh_region_d* %r.0, null, !dbg !6239
  br i1 %tobool, label %for.end, label %for.body, !dbg !6239

for.body:                                         ; preds = %for.cond
  %type5 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r.0, i64 0, i32 4, !dbg !6240
  %2 = load i32, i32* %type5, align 4, !dbg !6240
  %cmp6 = icmp eq i32 %2, 0, !dbg !6243
  br i1 %cmp6, label %cleanup70.loopexit, label %for.inc, !dbg !6244

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !6245, !llvm.loop !6246

for.end:                                          ; preds = %for.cond
  %call10 = tail call fastcc i32 @add_action_record(%struct.htab* %ar_hash, i32 0, i32 %call) #7, !dbg !6248
  br label %cleanup70, !dbg !6249

sw.bb11:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 -3, metadata !6206, metadata !DIExpression()), !dbg !6224
  %last_catch = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 5, i32 0, i32 1, !dbg !6250
  %3 = bitcast %union.tree_node** %last_catch to %struct.eh_catch_d**, !dbg !6250
  %outer22 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 0, !dbg !6251
  br label %for.cond12, !dbg !6254

for.cond12:                                       ; preds = %for.inc50, %sw.bb11
  %next.0 = phi i32 [ -3, %sw.bb11 ], [ %next.5, %for.inc50 ], !dbg !6255
  %c.0.in = phi %struct.eh_catch_d** [ %3, %sw.bb11 ], [ %prev_catch, %for.inc50 ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !6256
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !6210, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata i32 %next.0, metadata !6206, metadata !DIExpression()), !dbg !6224
  %tobool13 = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !6257
  br i1 %tobool13, label %cleanup70.loopexit1, label %for.body14, !dbg !6257

for.body14:                                       ; preds = %for.cond12
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 2, !dbg !6258
  %4 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !6258
  %cmp15 = icmp eq %union.tree_node* %4, null, !dbg !6259
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !6260

if.then16:                                        ; preds = %for.body14
  %filter_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 3, !dbg !6261
  %5 = bitcast %union.tree_node** %filter_list to %struct.tree_list**, !dbg !6261
  %6 = load %struct.tree_list*, %struct.tree_list** %5, align 8, !dbg !6261
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %6, i64 0, i32 2, !dbg !6261
  %7 = bitcast %union.tree_node** %value to %struct.tree_int_cst**, !dbg !6261
  %8 = load %struct.tree_int_cst*, %struct.tree_int_cst** %7, align 8, !dbg !6261
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %8, i64 0, i32 1, i32 0, !dbg !6261
  %9 = load i64, i64* %low, align 8, !dbg !6261
  %conv = trunc i64 %9 to i32, !dbg !6261
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6212, metadata !DIExpression()), !dbg !6262
  %call18 = tail call fastcc i32 @add_action_record(%struct.htab* %ar_hash, i32 %conv, i32 0) #7, !dbg !6263
  call void @llvm.dbg.value(metadata i32 %call18, metadata !6206, metadata !DIExpression()), !dbg !6224
  br label %for.inc50, !dbg !6264

if.else:                                          ; preds = %for.body14
  %cmp19 = icmp eq i32 %next.0, -3, !dbg !6265
  br i1 %cmp19, label %if.then21, label %if.end34, !dbg !6266

if.then21:                                        ; preds = %if.else
  %10 = load %struct.eh_region_d*, %struct.eh_region_d** %outer22, align 8, !dbg !6267
  %call23 = tail call fastcc i32 @collect_one_action_chain(%struct.htab* %ar_hash, %struct.eh_region_d* %10) #7, !dbg !6268
  call void @llvm.dbg.value(metadata i32 %call23, metadata !6206, metadata !DIExpression()), !dbg !6224
  %cmp24 = icmp eq i32 %call23, -1, !dbg !6269
  br i1 %cmp24, label %if.end34, label %if.else27, !dbg !6271

if.else27:                                        ; preds = %if.then21
  %cmp28 = icmp slt i32 %call23, 1, !dbg !6272
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !6274

if.then30:                                        ; preds = %if.else27
  %call31 = tail call fastcc i32 @add_action_record(%struct.htab* %ar_hash, i32 0, i32 0) #7, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %call31, metadata !6206, metadata !DIExpression()), !dbg !6224
  br label %if.end34, !dbg !6276

if.end34:                                         ; preds = %if.then21, %if.then30, %if.else27, %if.else
  %next.3 = phi i32 [ %next.0, %if.else ], [ 0, %if.then21 ], [ %call31, %if.then30 ], [ %call23, %if.else27 ], !dbg !6255
  call void @llvm.dbg.value(metadata i32 %next.3, metadata !6206, metadata !DIExpression()), !dbg !6224
  %filter_list35 = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 3, !dbg !6277
  br label %for.cond36, !dbg !6278

for.cond36:                                       ; preds = %for.body38, %if.end34
  %next.4 = phi i32 [ %next.3, %if.end34 ], [ %call46, %for.body38 ], !dbg !6279
  %flt_node.0.in = phi %union.tree_node** [ %filter_list35, %if.end34 ], [ %chain, %for.body38 ]
  %flt_node.0 = load %union.tree_node*, %union.tree_node** %flt_node.0.in, align 8, !dbg !6279
  call void @llvm.dbg.value(metadata %union.tree_node* %flt_node.0, metadata !6218, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata i32 %next.4, metadata !6206, metadata !DIExpression()), !dbg !6224
  %tobool37 = icmp eq %union.tree_node* %flt_node.0, null, !dbg !6280
  br i1 %tobool37, label %for.inc50.loopexit, label %for.body38, !dbg !6280

for.body38:                                       ; preds = %for.cond36
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %flt_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6281
  %12 = bitcast %union.tree_node** %11 to %struct.tree_int_cst**, !dbg !6281
  %13 = load %struct.tree_int_cst*, %struct.tree_int_cst** %12, align 8, !dbg !6281
  %low44 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %13, i64 0, i32 1, i32 0, !dbg !6281
  %14 = load i64, i64* %low44, align 8, !dbg !6281
  %conv45 = trunc i64 %14 to i32, !dbg !6281
  call void @llvm.dbg.value(metadata i32 %conv45, metadata !6220, metadata !DIExpression()), !dbg !6282
  %call46 = tail call fastcc i32 @add_action_record(%struct.htab* %ar_hash, i32 %conv45, i32 %next.4) #7, !dbg !6283
  call void @llvm.dbg.value(metadata i32 %call46, metadata !6206, metadata !DIExpression()), !dbg !6224
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %flt_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6284
  br label %for.cond36, !dbg !6285, !llvm.loop !6286

for.inc50.loopexit:                               ; preds = %for.cond36
  %next.4.lcssa = phi i32 [ %next.4, %for.cond36 ], !dbg !6279
  call void @llvm.dbg.value(metadata i32 %next.4.lcssa, metadata !6206, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32 %next.4.lcssa, metadata !6206, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32 %next.4.lcssa, metadata !6206, metadata !DIExpression()), !dbg !6224
  br label %for.inc50, !dbg !6288

for.inc50:                                        ; preds = %for.inc50.loopexit, %if.then16
  %next.5 = phi i32 [ %call18, %if.then16 ], [ %next.4.lcssa, %for.inc50.loopexit ], !dbg !6289
  call void @llvm.dbg.value(metadata i32 %next.5, metadata !6206, metadata !DIExpression()), !dbg !6224
  %prev_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 1, !dbg !6288
  br label %for.cond12, !dbg !6290, !llvm.loop !6291

sw.bb53:                                          ; preds = %if.end
  %outer54 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 0, !dbg !6293
  %15 = load %struct.eh_region_d*, %struct.eh_region_d** %outer54, align 8, !dbg !6293
  %call55 = tail call fastcc i32 @collect_one_action_chain(%struct.htab* %ar_hash, %struct.eh_region_d* %15) #7, !dbg !6294
  call void @llvm.dbg.value(metadata i32 %call55, metadata !6206, metadata !DIExpression()), !dbg !6224
  %cmp56 = icmp eq i32 %call55, -1, !dbg !6295
  br i1 %cmp56, label %if.end65, label %if.else59, !dbg !6297

if.else59:                                        ; preds = %sw.bb53
  %cmp60 = icmp slt i32 %call55, 1, !dbg !6298
  br i1 %cmp60, label %if.then62, label %if.end65, !dbg !6300

if.then62:                                        ; preds = %if.else59
  %call63 = tail call fastcc i32 @add_action_record(%struct.htab* %ar_hash, i32 0, i32 0) #7, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %call63, metadata !6206, metadata !DIExpression()), !dbg !6224
  br label %if.end65, !dbg !6302

if.end65:                                         ; preds = %if.else59, %if.then62, %sw.bb53
  %next.7 = phi i32 [ 0, %sw.bb53 ], [ %call63, %if.then62 ], [ %call55, %if.else59 ], !dbg !6303
  call void @llvm.dbg.value(metadata i32 %next.7, metadata !6206, metadata !DIExpression()), !dbg !6224
  %filter67 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 5, i32 0, i32 2, !dbg !6304
  %16 = load i32, i32* %filter67, align 8, !dbg !6304
  %call68 = tail call fastcc i32 @add_action_record(%struct.htab* %ar_hash, i32 %16, i32 %next.7) #7, !dbg !6305
  br label %cleanup70, !dbg !6306

sw.epilog:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 2365, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6307
  br label %cleanup70, !dbg !6308

cleanup70.loopexit:                               ; preds = %for.body
  br label %cleanup70, !dbg !6309

cleanup70.loopexit1:                              ; preds = %for.cond12
  %next.0.lcssa = phi i32 [ %next.0, %for.cond12 ], !dbg !6255
  call void @llvm.dbg.value(metadata i32 %next.0.lcssa, metadata !6206, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32 %next.0.lcssa, metadata !6206, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i32 %next.0.lcssa, metadata !6206, metadata !DIExpression()), !dbg !6224
  br label %cleanup70, !dbg !6309

cleanup70:                                        ; preds = %cleanup70.loopexit1, %cleanup70.loopexit, %if.end, %for.end, %sw.bb, %entry, %sw.epilog, %if.end65
  %retval.1 = phi i32 [ 0, %sw.epilog ], [ %call68, %if.end65 ], [ -1, %entry ], [ %call10, %for.end ], [ 0, %sw.bb ], [ -2, %if.end ], [ %call, %cleanup70.loopexit ], [ %next.0.lcssa, %cleanup70.loopexit1 ], !dbg !6224
  ret i32 %retval.1, !dbg !6309
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_call_site(%struct.rtx_def* %landing_pad, i32 %action, i32 %section) unnamed_addr #5 !dbg !6310 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %landing_pad, metadata !6314, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.value(metadata i32 %action, metadata !6315, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.value(metadata i32 %section, metadata !6316, metadata !DIExpression()), !dbg !6318
  %call = tail call i8* @ggc_alloc_stat(i64 16) #6, !dbg !6319
  %0 = bitcast i8* %call to %struct.call_site_record_d*, !dbg !6319
  call void @llvm.dbg.value(metadata %struct.call_site_record_d* %0, metadata !6317, metadata !DIExpression()), !dbg !6318
  %landing_pad1 = bitcast i8* %call to %struct.rtx_def**, !dbg !6320
  store %struct.rtx_def* %landing_pad, %struct.rtx_def** %landing_pad1, align 8, !dbg !6321
  %action2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6322
  %1 = bitcast i8* %action2 to i32*, !dbg !6322
  store i32 %action, i32* %1, align 8, !dbg !6323
  %idxprom = sext i32 %section to i64, !dbg !6324
  %arrayidx = getelementptr inbounds %struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 6, i64 %idxprom, !dbg !6324
  %call3 = tail call fastcc %struct.call_site_record_d** @VEC_call_site_record_gc_safe_push(%struct.VEC_call_site_record_gc** nonnull %arrayidx, %struct.call_site_record_d* %0) #7, !dbg !6324
  %2 = load i32, i32* @call_site_base, align 4, !dbg !6325
  %3 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %arrayidx, align 8, !dbg !6326
  %tobool = icmp eq %struct.VEC_call_site_record_gc* %3, null, !dbg !6326
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6326

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %3, i64 0, i32 0, !dbg !6326
  br label %cond.end, !dbg !6326

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_call_site_record_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6326
  %call8 = tail call fastcc i32 @VEC_call_site_record_base_length(%struct.VEC_call_site_record_base* %cond) #7, !dbg !6326
  %add = add i32 %2, %call8, !dbg !6327
  %sub = add i32 %add, -1, !dbg !6328
  ret i32 %sub, !dbg !6329
}

declare dso_local %struct.rtx_def* @emit_note_before(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_call_site_record_base_length(%struct.VEC_call_site_record_base* %vec_) unnamed_addr #0 !dbg !6330 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_call_site_record_base* %vec_, metadata !6336, metadata !DIExpression()), !dbg !6337
  %tobool = icmp eq %struct.VEC_call_site_record_base* %vec_, null, !dbg !6338
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6338

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_call_site_record_base, %struct.VEC_call_site_record_base* %vec_, i64 0, i32 0, !dbg !6338
  %0 = load i32, i32* %num, align 8, !dbg !6338
  br label %cond.end, !dbg !6338

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6338
  ret i32 %cond, !dbg !6338
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_call_site_record_gc* @VEC_call_site_record_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6339 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !6343, metadata !DIExpression()), !dbg !6344
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 10) #6, !dbg !6345
  %0 = bitcast i8* %call to %struct.VEC_call_site_record_gc*, !dbg !6345
  ret %struct.VEC_call_site_record_gc* %0, !dbg !6345
}

declare dso_local i32 @max_label_num() local_unnamed_addr #2

declare dso_local i32 @get_first_label_num() local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.call_site_record_d* @VEC_call_site_record_base_index(%struct.VEC_call_site_record_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6346 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_call_site_record_base* %vec_, metadata !6350, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6351, metadata !DIExpression()), !dbg !6352
  br label %land.end, !dbg !6353

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6353
  %arrayidx = getelementptr inbounds %struct.VEC_call_site_record_base, %struct.VEC_call_site_record_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6353
  %0 = load %struct.call_site_record_d*, %struct.call_site_record_d** %arrayidx, align 8, !dbg !6353
  ret %struct.call_site_record_d* %0, !dbg !6353
}

declare dso_local %struct.rtx_def* @emit_label_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_label_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @add_action_record(%struct.htab* %ar_hash, i32 %filter, i32 %next) unnamed_addr #5 !dbg !6354 {
entry:
  %tmp = alloca %struct.action_record, align 4
  call void @llvm.dbg.value(metadata %struct.htab* %ar_hash, metadata !6358, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i32 %filter, metadata !6359, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i32 %next, metadata !6360, metadata !DIExpression()), !dbg !6364
  %0 = bitcast %struct.action_record* %tmp to i8*, !dbg !6365
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #8, !dbg !6365
  %filter1 = getelementptr inbounds %struct.action_record, %struct.action_record* %tmp, i64 0, i32 1, !dbg !6366
  store i32 %filter, i32* %filter1, align 4, !dbg !6367
  %next2 = getelementptr inbounds %struct.action_record, %struct.action_record* %tmp, i64 0, i32 2, !dbg !6368
  store i32 %next, i32* %next2, align 4, !dbg !6369
  %call = call i8** @htab_find_slot(%struct.htab* %ar_hash, i8* nonnull %0, i32 1) #6, !dbg !6370
  %1 = bitcast i8** %call to %struct.action_record**, !dbg !6371
  call void @llvm.dbg.value(metadata %struct.action_record** %1, metadata !6361, metadata !DIExpression()), !dbg !6364
  %2 = load %struct.action_record*, %struct.action_record** %1, align 8, !dbg !6372
  call void @llvm.dbg.value(metadata %struct.action_record* %2, metadata !6362, metadata !DIExpression()), !dbg !6364
  %cmp = icmp eq %struct.action_record* %2, null, !dbg !6374
  br i1 %cmp, label %if.then, label %if.end17, !dbg !6375

if.then:                                          ; preds = %entry
  %call3 = call i8* @xmalloc(i64 12) #6, !dbg !6376
  %3 = bitcast i8* %call3 to %struct.action_record*, !dbg !6376
  call void @llvm.dbg.value(metadata %struct.action_record* %3, metadata !6362, metadata !DIExpression()), !dbg !6364
  %4 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), align 8, !dbg !6378
  %base = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %4, i64 0, i32 0, !dbg !6378
  %call4 = call fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %base) #7, !dbg !6378
  %add = add i32 %call4, 1, !dbg !6379
  %offset = bitcast i8* %call3 to i32*, !dbg !6380
  store i32 %add, i32* %offset, align 4, !dbg !6381
  %filter5 = getelementptr inbounds i8, i8* %call3, i64 4, !dbg !6382
  %5 = bitcast i8* %filter5 to i32*, !dbg !6382
  store i32 %filter, i32* %5, align 4, !dbg !6383
  %next6 = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !6384
  %6 = bitcast i8* %next6 to i32*, !dbg !6384
  store i32 %next, i32* %6, align 4, !dbg !6385
  store i8* %call3, i8** %call, align 8, !dbg !6386
  call fastcc void @push_sleb128(%struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), i32 %filter) #7, !dbg !6387
  %tobool7 = icmp eq i32 %next, 0, !dbg !6388
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !6390

if.then8:                                         ; preds = %if.then
  %7 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), align 8, !dbg !6391
  %base11 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %7, i64 0, i32 0, !dbg !6391
  %call15 = call fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %base11) #7, !dbg !6391
  %8 = xor i32 %call15, -1, !dbg !6392
  %sub = add i32 %8, %next, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6360, metadata !DIExpression()), !dbg !6364
  br label %if.end, !dbg !6393

if.end:                                           ; preds = %if.then, %if.then8
  %next.addr.0 = phi i32 [ %sub, %if.then8 ], [ 0, %if.then ]
  call void @llvm.dbg.value(metadata i32 %next.addr.0, metadata !6360, metadata !DIExpression()), !dbg !6364
  call fastcc void @push_sleb128(%struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), i32 %next.addr.0) #7, !dbg !6394
  br label %if.end17, !dbg !6395

if.end17:                                         ; preds = %if.end, %entry
  %new_ar.0 = phi %struct.action_record* [ %3, %if.end ], [ %2, %entry ], !dbg !6396
  call void @llvm.dbg.value(metadata %struct.action_record* %new_ar.0, metadata !6362, metadata !DIExpression()), !dbg !6364
  %offset18 = getelementptr inbounds %struct.action_record, %struct.action_record* %new_ar.0, i64 0, i32 0, !dbg !6397
  %9 = load i32, i32* %offset18, align 4, !dbg !6397
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #8, !dbg !6398
  ret i32 %9, !dbg !6399
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_sleb128(%struct.VEC_uchar_gc** %data_area, i32 %value) unnamed_addr #5 !dbg !6400 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), metadata !6404, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i32 %value, metadata !6405, metadata !DIExpression()), !dbg !6408
  br label %do.body, !dbg !6409

do.body:                                          ; preds = %lor.end, %entry
  %value.addr.0 = phi i32 [ %value, %entry ], [ %shr, %lor.end ]
  call void @llvm.dbg.value(metadata i32 %value.addr.0, metadata !6405, metadata !DIExpression()), !dbg !6408
  %0 = trunc i32 %value.addr.0 to i8, !dbg !6410
  %conv = and i8 %0, 127, !dbg !6410
  call void @llvm.dbg.value(metadata i8 %conv, metadata !6406, metadata !DIExpression()), !dbg !6408
  %shr = ashr i32 %value.addr.0, 7, !dbg !6412
  call void @llvm.dbg.value(metadata i32 %shr, metadata !6405, metadata !DIExpression()), !dbg !6408
  switch i32 %shr, label %lor.end [
    i32 0, label %land.lhs.true
    i32 -1, label %do.body.land.rhs_crit_edge
  ], !dbg !6413

do.body.land.rhs_crit_edge:                       ; preds = %do.body
  %.pre = and i32 %value.addr.0, 64, !dbg !6414
  br label %land.rhs, !dbg !6413

land.lhs.true:                                    ; preds = %do.body
  %1 = and i32 %value.addr.0, 64, !dbg !6415
  %cmp4 = icmp eq i32 %1, 0, !dbg !6416
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !6417

lor.rhs:                                          ; preds = %land.lhs.true
  br i1 false, label %lor.rhs.land.rhs_crit_edge, label %lor.end, !dbg !6418

lor.rhs.land.rhs_crit_edge:                       ; preds = %lor.rhs
  br label %land.rhs, !dbg !6418

land.rhs:                                         ; preds = %do.body.land.rhs_crit_edge, %lor.rhs.land.rhs_crit_edge
  %.pre-phi = phi i32 [ %.pre, %do.body.land.rhs_crit_edge ], [ %1, %lor.rhs.land.rhs_crit_edge ], !dbg !6414
  %cmp10 = icmp ne i32 %.pre-phi, 0, !dbg !6419
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %do.body, %land.lhs.true
  %2 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ %cmp10, %land.rhs ], [ false, %do.body ]
  call void @llvm.dbg.value(metadata i1 %2, metadata !6407, metadata !DIExpression(DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_stack_value)), !dbg !6408
  %3 = or i8 %0, -128, !dbg !6420
  %byte.0 = select i1 %2, i8 %conv, i8 %3, !dbg !6420
  call void @llvm.dbg.value(metadata i8 %byte.0, metadata !6406, metadata !DIExpression()), !dbg !6408
  %call = tail call fastcc i8* @VEC_uchar_gc_safe_push(%struct.VEC_uchar_gc** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 5), i8 zeroext %byte.0) #7, !dbg !6421
  br i1 %2, label %do.end, label %do.body, !dbg !6422, !llvm.loop !6423

do.end:                                           ; preds = %lor.end
  ret void, !dbg !6425
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.call_site_record_d** @VEC_call_site_record_gc_safe_push(%struct.VEC_call_site_record_gc** %vec_, %struct.call_site_record_d* %obj_) unnamed_addr #0 !dbg !6426 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_call_site_record_gc** %vec_, metadata !6432, metadata !DIExpression()), !dbg !6434
  call void @llvm.dbg.value(metadata %struct.call_site_record_d* %obj_, metadata !6433, metadata !DIExpression()), !dbg !6434
  %call = tail call fastcc i32 @VEC_call_site_record_gc_reserve(%struct.VEC_call_site_record_gc** %vec_, i32 1) #7, !dbg !6435
  %0 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %vec_, align 8, !dbg !6435
  %tobool = icmp eq %struct.VEC_call_site_record_gc* %0, null, !dbg !6435
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6435

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %0, i64 0, i32 0, !dbg !6435
  br label %cond.end, !dbg !6435

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_call_site_record_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6435
  %call1 = tail call fastcc %struct.call_site_record_d** @VEC_call_site_record_base_quick_push(%struct.VEC_call_site_record_base* %cond, %struct.call_site_record_d* %obj_) #7, !dbg !6435
  ret %struct.call_site_record_d** %call1, !dbg !6435
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_call_site_record_gc_reserve(%struct.VEC_call_site_record_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6436 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_call_site_record_gc** %vec_, metadata !6440, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i32 1, metadata !6441, metadata !DIExpression()), !dbg !6443
  %0 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %vec_, align 8, !dbg !6444
  %tobool = icmp eq %struct.VEC_call_site_record_gc* %0, null, !dbg !6444
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6444

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %0, i64 0, i32 0, !dbg !6444
  br label %cond.end, !dbg !6444

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_call_site_record_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6444
  %call = tail call fastcc i32 @VEC_call_site_record_base_space(%struct.VEC_call_site_record_base* %cond, i32 1) #7, !dbg !6444
  %tobool1 = icmp eq i32 %call, 0, !dbg !6444
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6444
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6442, metadata !DIExpression()), !dbg !6443
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6444

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_call_site_record_gc** %vec_ to i8**, !dbg !6445
  %2 = load i8*, i8** %1, align 8, !dbg !6445
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !6445
  store i8* %call3, i8** %1, align 8, !dbg !6445
  br label %if.end, !dbg !6445

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6444
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.call_site_record_d** @VEC_call_site_record_base_quick_push(%struct.VEC_call_site_record_base* %vec_, %struct.call_site_record_d* %obj_) unnamed_addr #0 !dbg !6447 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_call_site_record_base* %vec_, metadata !6452, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata %struct.call_site_record_d* %obj_, metadata !6453, metadata !DIExpression()), !dbg !6455
  %num1 = getelementptr inbounds %struct.VEC_call_site_record_base, %struct.VEC_call_site_record_base* %vec_, i64 0, i32 0, !dbg !6456
  %0 = load i32, i32* %num1, align 8, !dbg !6456
  %inc = add i32 %0, 1, !dbg !6456
  store i32 %inc, i32* %num1, align 8, !dbg !6456
  %idxprom = zext i32 %0 to i64, !dbg !6456
  %arrayidx = getelementptr inbounds %struct.VEC_call_site_record_base, %struct.VEC_call_site_record_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6456
  call void @llvm.dbg.value(metadata %struct.call_site_record_d** %arrayidx, metadata !6454, metadata !DIExpression()), !dbg !6455
  store %struct.call_site_record_d* %obj_, %struct.call_site_record_d** %arrayidx, align 8, !dbg !6456
  ret %struct.call_site_record_d** %arrayidx, !dbg !6456
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_call_site_record_base_space(%struct.VEC_call_site_record_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6457 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_call_site_record_base* %vec_, metadata !6461, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i32 1, metadata !6462, metadata !DIExpression()), !dbg !6463
  %tobool = icmp eq %struct.VEC_call_site_record_base* %vec_, null, !dbg !6464
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6464

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_call_site_record_base, %struct.VEC_call_site_record_base* %vec_, i64 0, i32 1, !dbg !6464
  %0 = load i32, i32* %alloc, align 4, !dbg !6464
  %num = getelementptr inbounds %struct.VEC_call_site_record_base, %struct.VEC_call_site_record_base* %vec_, i64 0, i32 0, !dbg !6464
  %1 = load i32, i32* %num, align 8, !dbg !6464
  %cmp1 = icmp ne i32 %0, %1, !dbg !6464
  %phitmp = zext i1 %cmp1 to i32, !dbg !6464
  br label %cond.end, !dbg !6464

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6464

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6464
}

; Function Attrs: nounwind uwtable
define internal fastcc void @switch_to_exception_section(i8* %fnname) unnamed_addr #5 !dbg !6465 {
entry:
  call void @llvm.dbg.value(metadata i8* %fnname, metadata !6467, metadata !DIExpression()), !dbg !6480
  %0 = load %union.section*, %union.section** @exception_section, align 8, !dbg !6481
  %tobool = icmp eq %union.section* %0, null, !dbg !6481
  br i1 %tobool, label %if.else, label %if.then, !dbg !6482

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.section* %0, metadata !6468, metadata !DIExpression()), !dbg !6480
  br label %if.end18, !dbg !6483

if.else:                                          ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !6484
  %tobool1 = icmp eq i8 %1, 0, !dbg !6485
  br i1 %tobool1, label %if.else14, label %if.then2, !dbg !6486

if.then2:                                         ; preds = %if.else
  %call = tail call i32 @asm_preferred_eh_data_format(i32 0, i32 1) #6, !dbg !6487
  call void @llvm.dbg.value(metadata i32 %call, metadata !6474, metadata !DIExpression()), !dbg !6488
  %2 = load i32, i32* @flag_pic, align 4, !dbg !6489
  %tobool3 = icmp eq i32 %2, 0, !dbg !6489
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !6490

lor.rhs:                                          ; preds = %if.then2
  %and = and i32 %call, 112, !dbg !6491
  %cmp = icmp ne i32 %and, 0, !dbg !6492
  %cmp5 = icmp ne i32 %and, 80, !dbg !6493
  %3 = and i1 %cmp, %cmp5, !dbg !6493
  %phitmp = select i1 %3, i32 0, i32 512, !dbg !6493
  br label %lor.end, !dbg !6493

lor.end:                                          ; preds = %if.then2, %lor.rhs
  %4 = phi i32 [ 0, %if.then2 ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !6469, metadata !DIExpression()), !dbg !6494
  %5 = load i32, i32* @flag_function_sections, align 4, !dbg !6495
  %tobool6 = icmp eq i32 %5, 0, !dbg !6495
  br i1 %tobool6, label %if.else12, label %if.then7, !dbg !6496

if.then7:                                         ; preds = %lor.end
  %call8 = tail call i64 @strlen(i8* %fnname) #6, !dbg !6497
  %add = add i64 %call8, 32, !dbg !6497
  %call9 = tail call i8* @xmalloc(i64 %add) #6, !dbg !6497
  call void @llvm.dbg.value(metadata i8* %call9, metadata !6477, metadata !DIExpression()), !dbg !6498
  %call10 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %call9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i8* %fnname) #6, !dbg !6499
  %call11 = tail call %union.section* @get_section(i8* %call9, i32 %4, %union.tree_node* null) #6, !dbg !6500
  call void @llvm.dbg.value(metadata %union.section* %call11, metadata !6468, metadata !DIExpression()), !dbg !6480
  tail call void @free(i8* %call9) #6, !dbg !6501
  br label %if.end18, !dbg !6502

if.else12:                                        ; preds = %lor.end
  %call13 = tail call %union.section* @get_section(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0), i32 %4, %union.tree_node* null) #6, !dbg !6503
  call void @llvm.dbg.value(metadata %union.section* %call13, metadata !6468, metadata !DIExpression()), !dbg !6480
  store %union.section* %call13, %union.section** @exception_section, align 8, !dbg !6504
  br label %if.end18

if.else14:                                        ; preds = %if.else
  %6 = load i32, i32* @flag_pic, align 4, !dbg !6505
  %tobool15 = icmp eq i32 %6, 0, !dbg !6505
  %7 = load %union.section*, %union.section** @data_section, align 8, !dbg !6505
  %8 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !6505
  %cond16 = select i1 %tobool15, %union.section* %8, %union.section* %7, !dbg !6505
  call void @llvm.dbg.value(metadata %union.section* %cond16, metadata !6468, metadata !DIExpression()), !dbg !6480
  store %union.section* %cond16, %union.section** @exception_section, align 8, !dbg !6506
  br label %if.end18

if.end18:                                         ; preds = %if.else14, %if.else12, %if.then7, %if.then
  %s.2 = phi %union.section* [ %0, %if.then ], [ %cond16, %if.else14 ], [ %call11, %if.then7 ], [ %call13, %if.else12 ], !dbg !6507
  call void @llvm.dbg.value(metadata %union.section* %s.2, metadata !6468, metadata !DIExpression()), !dbg !6480
  tail call void @switch_to_section(%union.section* %s.2) #6, !dbg !6508
  ret void, !dbg !6509
}

declare dso_local i32 @asm_preferred_eh_data_format(i32, i32) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @size_of_encoded_value(i32) local_unnamed_addr #2

declare dso_local void @assemble_align(i32) local_unnamed_addr #2

declare dso_local void @dw2_asm_output_data(i32, i64, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @eh_data_format_name(i32) local_unnamed_addr #2

declare dso_local void @dw2_asm_output_delta_uleb128(i8*, i8*, i8*, ...) local_unnamed_addr #2

declare dso_local void @assemble_name(%struct._IO_FILE*, i8*) local_unnamed_addr #2

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dw2_output_call_site_table(i32 %cs_format, i32 %section) unnamed_addr #5 !dbg !6510 {
entry:
  %reg_start_lab = alloca [32 x i8], align 16
  %reg_end_lab = alloca [32 x i8], align 16
  %landing_pad_lab = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata i32 1, metadata !6514, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i32 %section, metadata !6515, metadata !DIExpression()), !dbg !6526
  %idxprom = sext i32 %section to i64, !dbg !6527
  %arrayidx = getelementptr inbounds %struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 5, i32 6, i64 %idxprom, !dbg !6527
  %0 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %arrayidx, align 8, !dbg !6527
  %tobool = icmp eq %struct.VEC_call_site_record_gc* %0, null, !dbg !6527
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6527

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %0, i64 0, i32 0, !dbg !6527
  br label %cond.end, !dbg !6527

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_call_site_record_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6527
  %call = tail call fastcc i32 @VEC_call_site_record_base_length(%struct.VEC_call_site_record_base* %cond) #7, !dbg !6527
  call void @llvm.dbg.value(metadata i32 %call, metadata !6516, metadata !DIExpression()), !dbg !6526
  %cmp = icmp eq i32 %section, 0, !dbg !6528
  br i1 %cmp, label %if.then, label %if.else, !dbg !6530

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** @current_function_func_begin_label, align 8, !dbg !6531
  call void @llvm.dbg.value(metadata i8* %1, metadata !6518, metadata !DIExpression()), !dbg !6526
  br label %if.end6, !dbg !6532

if.else:                                          ; preds = %cond.end
  %2 = load i8, i8* @first_function_block_is_cold, align 1, !dbg !6533
  %tobool3 = icmp eq i8 %2, 0, !dbg !6533
  %3 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 0), align 8, !dbg !6535
  %4 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 1), align 8, !dbg !6535
  %begin.0 = select i1 %tobool3, i8* %4, i8* %3, !dbg !6535
  br label %if.end6, !dbg !6535

if.end6:                                          ; preds = %if.else, %if.then
  %begin.1 = phi i8* [ %1, %if.then ], [ %begin.0, %if.else ], !dbg !6536
  call void @llvm.dbg.value(metadata i8* %begin.1, metadata !6518, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i32 0, metadata !6517, metadata !DIExpression()), !dbg !6526
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %reg_start_lab, i64 0, i64 0, !dbg !6537
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %reg_end_lab, i64 0, i64 0, !dbg !6537
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %landing_pad_lab, i64 0, i64 0, !dbg !6537
  br label %for.cond.us, !dbg !6538

for.cond.us:                                      ; preds = %if.end57.us, %if.end6
  %i.0.us = phi i32 [ 0, %if.end6 ], [ %inc.us, %if.end57.us ], !dbg !6539
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !6517, metadata !DIExpression()), !dbg !6526
  %cmp7.us = icmp slt i32 %i.0.us, %call, !dbg !6540
  br i1 %cmp7.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !6541

for.body.us:                                      ; preds = %for.cond.us
  %8 = load %struct.VEC_call_site_record_gc*, %struct.VEC_call_site_record_gc** %arrayidx, align 8, !dbg !6542
  %tobool10.us = icmp eq %struct.VEC_call_site_record_gc* %8, null, !dbg !6542
  br i1 %tobool10.us, label %cond.end16.us, label %cond.true11.us, !dbg !6542

cond.true11.us:                                   ; preds = %for.body.us
  %base14.us = getelementptr inbounds %struct.VEC_call_site_record_gc, %struct.VEC_call_site_record_gc* %8, i64 0, i32 0, !dbg !6542
  br label %cond.end16.us, !dbg !6542

cond.end16.us:                                    ; preds = %cond.true11.us, %for.body.us
  %cond17.us = phi %struct.VEC_call_site_record_base* [ %base14.us, %cond.true11.us ], [ null, %for.body.us ], !dbg !6542
  %call18.us = call fastcc %struct.call_site_record_d* @VEC_call_site_record_base_index(%struct.VEC_call_site_record_base* %cond17.us, i32 %i.0.us) #7, !dbg !6542
  call void @llvm.dbg.value(metadata %struct.call_site_record_d* %call18.us, metadata !6519, metadata !DIExpression()), !dbg !6537
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8, !dbg !6543
  call void @llvm.dbg.declare(metadata [32 x i8]* %reg_start_lab, metadata !6523, metadata !DIExpression()), !dbg !6544
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8, !dbg !6545
  call void @llvm.dbg.declare(metadata [32 x i8]* %reg_end_lab, metadata !6524, metadata !DIExpression()), !dbg !6546
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8, !dbg !6547
  call void @llvm.dbg.declare(metadata [32 x i8]* %landing_pad_lab, metadata !6525, metadata !DIExpression()), !dbg !6548
  %9 = load i32, i32* @call_site_base, align 4, !dbg !6549
  %add.us = add nsw i32 %9, %i.0.us, !dbg !6549
  %call19.us = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), i32 %add.us) #6, !dbg !6549
  %10 = load i32, i32* @call_site_base, align 4, !dbg !6551
  %add22.us = add nsw i32 %10, %i.0.us, !dbg !6551
  %call23.us = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 %add22.us) #6, !dbg !6551
  %landing_pad.us = getelementptr inbounds %struct.call_site_record_d, %struct.call_site_record_d* %call18.us, i64 0, i32 0, !dbg !6553
  %11 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad.us, align 8, !dbg !6553
  %tobool26.us = icmp eq %struct.rtx_def* %11, null, !dbg !6555
  br i1 %tobool26.us, label %if.end35.us, label %do.body28.us, !dbg !6556

do.body28.us:                                     ; preds = %cond.end16.us
  %u.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, !dbg !6557
  %12 = getelementptr inbounds %union.u, %union.u* %u.us, i64 1, i32 0, i32 0, i64 1, !dbg !6557
  %rt_int.us = bitcast %union.rtunion_def* %12 to i32*, !dbg !6557
  %13 = load i32, i32* %rt_int.us, align 8, !dbg !6557
  %call32.us = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i32 %13) #6, !dbg !6557
  br label %if.end35.us, !dbg !6557

if.end35.us:                                      ; preds = %do.body28.us, %cond.end16.us
  call void (i8*, i8*, i8*, ...) @dw2_asm_output_delta_uleb128(i8* nonnull %5, i8* %begin.1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i32 %i.0.us) #6, !dbg !6559
  call void (i8*, i8*, i8*, ...) @dw2_asm_output_delta_uleb128(i8* nonnull %6, i8* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !6562
  %14 = load %struct.rtx_def*, %struct.rtx_def** %landing_pad.us, align 8, !dbg !6563
  %tobool42.us = icmp eq %struct.rtx_def* %14, null, !dbg !6565
  br i1 %tobool42.us, label %if.else45.us, label %if.then43.us, !dbg !6566

if.then43.us:                                     ; preds = %if.end35.us
  call void (i8*, i8*, i8*, ...) @dw2_asm_output_delta_uleb128(i8* nonnull %7, i8* %begin.1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !6567
  br label %if.end57.us, !dbg !6567

if.else45.us:                                     ; preds = %if.end35.us
  call void (i64, i8*, ...) @dw2_asm_output_data_uleb128(i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !6568
  br label %if.end57.us

if.end57.us:                                      ; preds = %if.else45.us, %if.then43.us
  %action.us = getelementptr inbounds %struct.call_site_record_d, %struct.call_site_record_d* %call18.us, i64 0, i32 1, !dbg !6569
  %15 = load i32, i32* %action.us, align 8, !dbg !6569
  %conv.us = sext i32 %15 to i64, !dbg !6570
  call void (i64, i8*, ...) @dw2_asm_output_data_uleb128(i64 %conv.us, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !6571
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8, !dbg !6572
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8, !dbg !6572
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8, !dbg !6572
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !6573
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !6517, metadata !DIExpression()), !dbg !6526
  br label %for.cond.us, !dbg !6574, !llvm.loop !6575

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %16 = load i32, i32* @call_site_base, align 4, !dbg !6577
  %add58 = add nsw i32 %16, %call, !dbg !6577
  store i32 %add58, i32* @call_site_base, align 4, !dbg !6577
  ret void, !dbg !6578
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_base_iterate(%struct.VEC_uchar_base* %vec_, i32 %ix_, i8* %ptr) unnamed_addr #0 !dbg !6579 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !6583, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6584, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !6585, metadata !DIExpression()), !dbg !6586
  %tobool = icmp eq %struct.VEC_uchar_base* %vec_, null, !dbg !6587
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6587

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !6587
  %0 = load i32, i32* %num, align 4, !dbg !6587
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6587
  br i1 %cmp, label %if.then, label %if.else, !dbg !6589

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6590
  %arrayidx = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6590
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6590
  br label %return, !dbg !6590

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6592

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i8 [ 0, %if.else ], [ %1, %if.then ], !dbg !6594
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6594
  store i8 %storemerge, i8* %ptr, align 1, !dbg !6594
  ret i32 %retval.0, !dbg !6589
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6595 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6599, metadata !DIExpression()), !dbg !6601
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6600, metadata !DIExpression()), !dbg !6601
  br label %land.end, !dbg !6602

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6602
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6602
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6602
  ret %union.tree_node* %0, !dbg !6602
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_ttype(%union.tree_node* %type, i32 %tt_format, i32 %tt_format_size) unnamed_addr #5 !dbg !6603 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6607, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %tt_format, metadata !6608, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %tt_format_size, metadata !6609, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i8 1, metadata !6611, metadata !DIExpression()), !dbg !6615
  %cmp = icmp eq %union.tree_node* %type, null, !dbg !6616
  br i1 %cmp, label %if.then, label %if.else, !dbg !6617

if.then:                                          ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6618
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6610, metadata !DIExpression()), !dbg !6615
  br label %if.end34, !dbg !6619

if.else:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6620
  %bf.load = load i64, i64* %1, align 8, !dbg !6620
  %bf.cast = and i64 %bf.load, 65535, !dbg !6620
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6620
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6620
  %cmp1 = icmp eq i32 %2, 2, !dbg !6620
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !6622

if.then2:                                         ; preds = %if.else
  %call = tail call %union.tree_node* @lookup_type_for_runtime(%union.tree_node* nonnull %type) #7, !dbg !6623
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6607, metadata !DIExpression()), !dbg !6615
  br label %if.end, !dbg !6624

if.end:                                           ; preds = %if.then2, %if.else
  %type.addr.0 = phi %union.tree_node* [ %call, %if.then2 ], [ %type, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !6607, metadata !DIExpression()), !dbg !6615
  %call3 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %type.addr.0, %struct.rtx_def* null, i32 0, i32 4) #7, !dbg !6625
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !6610, metadata !DIExpression()), !dbg !6615
  %call4 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %type.addr.0) #6, !dbg !6626
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6607, metadata !DIExpression()), !dbg !6615
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6627
  %bf.load6 = load i64, i64* %3, align 8, !dbg !6627
  %bf.cast81 = and i64 %bf.load6, 65535, !dbg !6629
  %cmp9 = icmp eq i64 %bf.cast81, 121, !dbg !6629
  br i1 %cmp9, label %if.then10, label %if.else26, !dbg !6630

if.then10:                                        ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6631
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6631
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6607, metadata !DIExpression()), !dbg !6615
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6633
  %bf.load13 = load i64, i64* %5, align 8, !dbg !6633
  %bf.cast153 = and i64 %bf.load13, 65535, !dbg !6635
  %cmp16 = icmp eq i64 %bf.cast153, 32, !dbg !6635
  br i1 %cmp16, label %if.then17, label %if.end34, !dbg !6636

if.then17:                                        ; preds = %if.then10
  %call18 = tail call %struct.varpool_node* @varpool_node(%union.tree_node* %4) #6, !dbg !6637
  call void @llvm.dbg.value(metadata %struct.varpool_node* %call18, metadata !6612, metadata !DIExpression()), !dbg !6639
  %tobool = icmp eq %struct.varpool_node* %call18, null, !dbg !6640
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !6642

if.then19:                                        ; preds = %if.then17
  tail call void @varpool_mark_needed_node(%struct.varpool_node* nonnull %call18) #6, !dbg !6643
  br label %if.end20, !dbg !6643

if.end20:                                         ; preds = %if.then17, %if.then19
  %bf.load22 = load i64, i64* %5, align 8, !dbg !6644
  %bf.lshr = lshr i64 %bf.load22, 27, !dbg !6644
  %6 = trunc i64 %bf.lshr to i8, !dbg !6644
  %bf.cast24 = and i8 %6, 1, !dbg !6644
  call void @llvm.dbg.value(metadata i8 %bf.cast24, metadata !6611, metadata !DIExpression()), !dbg !6615
  br label %if.end34, !dbg !6645

if.else26:                                        ; preds = %if.end
  %cmp31 = icmp eq i64 %bf.cast81, 23, !dbg !6646
  br i1 %cmp31, label %if.end34, label %cond.true, !dbg !6646

cond.true:                                        ; preds = %if.else26
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 2927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6646
  br label %if.end34, !dbg !6646

if.end34:                                         ; preds = %if.end20, %if.then10, %if.else26, %cond.true, %if.then
  %value.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call3, %cond.true ], [ %call3, %if.else26 ], [ %call3, %if.then10 ], [ %call3, %if.end20 ], !dbg !6647
  %is_public.2 = phi i8 [ 1, %if.then ], [ 1, %cond.true ], [ 1, %if.else26 ], [ 1, %if.then10 ], [ %bf.cast24, %if.end20 ], !dbg !6615
  call void @llvm.dbg.value(metadata i8 %is_public.2, metadata !6611, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.0, metadata !6610, metadata !DIExpression()), !dbg !6615
  %7 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 12), align 8, !dbg !6648
  %call35 = tail call zeroext i8 %7(%struct.rtx_def* %value.0) #6, !dbg !6650
  %tobool36 = icmp eq i8 %call35, 0, !dbg !6650
  br i1 %tobool36, label %if.end38, label %cleanup.cont, !dbg !6651

if.end38:                                         ; preds = %if.end34
  switch i32 %tt_format, label %if.else45 [
    i32 0, label %if.then43
    i32 80, label %if.then43
  ], !dbg !6652

if.then43:                                        ; preds = %if.end38, %if.end38
  %mul = shl nsw i32 %tt_format_size, 3, !dbg !6654
  %call44 = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %value.0, i32 %tt_format_size, i32 %mul, i32 1) #6, !dbg !6655
  br label %cleanup.cont, !dbg !6655

if.else45:                                        ; preds = %if.end38
  tail call void (i32, %struct.rtx_def*, i8, i8*, ...) @dw2_asm_output_encoded_addr_rtx(i32 %tt_format, %struct.rtx_def* %value.0, i8 zeroext %is_public.2, i8* null) #6, !dbg !6656
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end34, %if.else45, %if.then43
  ret void, !dbg !6657
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !6658 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6662, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6663, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !6664, metadata !DIExpression()), !dbg !6665
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6666
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6666

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6666
  %0 = load i32, i32* %num, align 8, !dbg !6666
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6666
  br i1 %cmp, label %if.then, label %if.else, !dbg !6668

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6669
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6669
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6669
  br label %return, !dbg !6669

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6671

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !6673
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6673
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !6673
  ret i32 %retval.0, !dbg !6668
}

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local %union.section* @get_section(i8*, i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @dw2_asm_output_data_uleb128(i64, i8*, ...) local_unnamed_addr #2

declare dso_local void @dw2_asm_output_delta(i32, i8*, i8*, i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.varpool_node* @varpool_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @varpool_mark_needed_node(%struct.varpool_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @assemble_integer(%struct.rtx_def*, i32, i32, i32) local_unnamed_addr #2

declare dso_local void @dw2_asm_output_encoded_addr_rtx(i32, %struct.rtx_def*, i8 zeroext, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!7}
!llvm.module.flags = !{!2370, !2371, !2372}
!llvm.ident = !{!2373}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1 = distinct !DIGlobalVariable(name: "warned", scope: !2, file: !3, line: 220, type: !6, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "doing_eh", scope: !3, file: !3, line: 216, type: !4, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2368)
!3 = !DIFile(filename: "except.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !6}
!6 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!7 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !8, retainedTypes: !752, globals: !2224, nameTableKind: None)
!8 = !{!9, !17, !145, !340, !346, !351, !356, !374, !381, !388, !395, !571, !714, !719, !742}
!9 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !10, line: 30, baseType: !11, size: 32, elements: !12)
!10 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!11 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!12 = !{!13, !14, !15, !16}
!13 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !18, line: 7, baseType: !11, size: 32, elements: !19)
!18 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144}
!20 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!27 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!28 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!29 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!30 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!31 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!32 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!33 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!34 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!35 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!36 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!37 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!38 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!39 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!40 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!41 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!42 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!43 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!44 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!45 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!46 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!47 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!48 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!49 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!50 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!51 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!52 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!53 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!54 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!55 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!56 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!57 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!58 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!59 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!60 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!61 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!62 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!63 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!64 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!65 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!66 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!67 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!68 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!69 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!70 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!71 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!72 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!73 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!74 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!75 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!76 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!77 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!78 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!79 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!80 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!81 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!82 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!83 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!84 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!85 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!86 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!87 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!88 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!89 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!93 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!94 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!95 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!96 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!97 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!98 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!99 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!100 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!101 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!102 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!103 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!104 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!105 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!106 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!107 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!108 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!109 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!110 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!111 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!112 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!114 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!115 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!117 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!118 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!119 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!120 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!121 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!122 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!123 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!124 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!125 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!126 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!127 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!128 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!129 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!130 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!131 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!132 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!133 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!134 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!140 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!143 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!144 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !146, line: 39, baseType: !11, size: 32, elements: !147)
!146 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339}
!148 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!154 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!155 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!156 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!157 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!158 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!159 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!160 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!161 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!162 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!163 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!164 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!165 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!166 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!167 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!168 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!169 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!170 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!171 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!172 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!173 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!174 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!175 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!176 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!177 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!178 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!179 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!180 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!181 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!182 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!183 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!184 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!185 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!186 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!187 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!188 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!190 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!191 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!192 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!193 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!194 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!195 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!196 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!197 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!198 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!199 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!200 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!201 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!202 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!203 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!204 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!205 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!206 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!207 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!208 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!209 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!210 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!211 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!212 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!213 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!214 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!215 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!216 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!217 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!218 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!219 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!220 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!221 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!222 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!223 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!224 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!225 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!226 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!227 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!228 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!229 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!230 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!231 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!232 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!233 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!234 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!235 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!236 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!237 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!238 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!239 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!240 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!241 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!242 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!243 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!244 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!245 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!246 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!247 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!248 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!249 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!250 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!251 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!252 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!253 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!254 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!255 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!256 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!257 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!258 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!259 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!260 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!261 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!262 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!263 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!264 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!265 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!266 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!267 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!268 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!269 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!270 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!271 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!272 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!273 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!274 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!275 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!276 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!277 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!278 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!279 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!280 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!281 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!282 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!283 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!284 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!285 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!286 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!287 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!288 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!289 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!290 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!291 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!292 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!293 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!294 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!295 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!296 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!297 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!298 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!299 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!300 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!307 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!308 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!309 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!310 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!311 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!312 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!313 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!314 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!315 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!316 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!317 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!329 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!330 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!331 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!332 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!333 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!334 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!335 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!336 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!337 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!338 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!339 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !341, line: 363, baseType: !11, size: 32, elements: !342)
!341 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344, !345}
!343 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!345 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !341, line: 355, baseType: !11, size: 32, elements: !347)
!347 = !{!348, !349, !350}
!348 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!350 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !352, line: 474, baseType: !11, size: 32, elements: !353)
!352 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!353 = !{!354, !355}
!354 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !146, line: 280, baseType: !11, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!358 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !146, line: 1817, baseType: !11, size: 32, elements: !375)
!375 = !{!376, !377, !378, !379, !380}
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !146, line: 1805, baseType: !11, size: 32, elements: !382)
!382 = !{!383, !384, !385, !386, !387}
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!384 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !389, line: 104, baseType: !11, size: 32, elements: !390)
!389 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!390 = !{!391, !392, !393, !394}
!391 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !396, line: 74, baseType: !11, size: 32, elements: !397)
!396 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!397 = !{!398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!398 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!570 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !572, line: 45, baseType: !11, size: 32, elements: !573)
!572 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!573 = !{!574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713}
!574 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!575 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!576 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!577 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!578 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!579 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!580 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!581 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!582 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!583 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!584 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!585 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!586 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!587 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!588 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!589 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!590 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!591 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!592 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!593 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!594 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!595 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!596 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!597 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!598 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!599 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!600 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!601 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!602 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!603 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!604 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!605 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!606 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!607 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!608 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!609 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!610 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!611 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!612 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!613 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!614 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!615 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!616 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!617 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!618 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!619 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!620 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!621 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!622 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!623 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!624 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!625 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!626 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!627 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!628 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!629 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!630 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!631 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!632 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!633 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!634 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!635 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!636 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!637 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!638 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!639 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!640 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!641 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!642 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!643 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!644 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!645 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!646 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!647 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!648 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!649 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!650 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!651 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!652 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!653 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!654 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!655 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!656 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!657 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!658 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!659 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!660 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!661 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!662 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!663 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!664 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!665 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!666 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!667 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!668 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!669 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!670 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!671 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!672 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!673 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!674 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!675 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!676 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!677 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!678 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!679 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!680 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!681 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!682 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!683 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!684 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!685 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!686 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!687 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!688 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!689 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!690 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!691 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!692 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!693 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!694 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!695 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!696 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!697 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!698 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!699 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!700 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!701 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!702 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!703 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!704 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!705 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!706 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!707 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!708 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!709 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!710 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!711 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!712 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!713 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!714 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_personality_kind", file: !10, line: 352, baseType: !11, size: 32, elements: !715)
!715 = !{!716, !717, !718}
!716 = !DIEnumerator(name: "eh_personality_none", value: 0, isUnsigned: true)
!717 = !DIEnumerator(name: "eh_personality_any", value: 1, isUnsigned: true)
!718 = !DIEnumerator(name: "eh_personality_lang", value: 2, isUnsigned: true)
!719 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !720, line: 309, baseType: !11, size: 32, elements: !721)
!720 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!721 = !{!722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741}
!722 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!723 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!724 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!725 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!726 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!727 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!728 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!729 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!730 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!731 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!732 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!733 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!734 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!735 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!736 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!737 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!738 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!739 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!740 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!741 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!742 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !743, line: 52, baseType: !11, size: 32, elements: !744)
!743 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!744 = !{!745, !746, !747, !748, !749, !750, !751}
!745 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!746 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!747 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!748 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!749 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!750 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!751 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!752 = !{!753, !754, !6, !755, !758, !759, !761, !145, !787, !781, !2126, !11, !1146, !1257, !571, !962, !17, !2185, !2138, !2151, !766, !841, !2190, !1636, !2171, !2193, !765, !2199, !2200, !2163, !2201, !2202, !2209, !2210, !2211, !756, !2184, !789, !2191}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !757)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !10, line: 194, size: 384, elements: !763)
!763 = !{!764, !2137, !2150, !2164, !2165, !2166}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !762, file: !10, line: 197, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !10, line: 182, baseType: !766)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !10, line: 116, size: 704, elements: !768)
!768 = !{!769, !770, !771, !772, !773, !774, !2125, !2134, !2135, !2136}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !767, file: !10, line: 119, baseType: !766, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !767, file: !10, line: 122, baseType: !766, size: 64, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !767, file: !10, line: 123, baseType: !766, size: 64, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !767, file: !10, line: 126, baseType: !6, size: 32, offset: 192)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !767, file: !10, line: 129, baseType: !9, size: 32, offset: 224)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !767, file: !10, line: 165, baseType: !775, size: 192, offset: 256)
!775 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !10, line: 132, size: 192, elements: !776)
!776 = !{!777, !2114, !2120}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !775, file: !10, line: 137, baseType: !778, size: 128)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !10, line: 133, size: 128, elements: !779)
!779 = !{!780, !2113}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !778, file: !10, line: 135, baseType: !781, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !10, line: 93, size: 320, elements: !783)
!783 = !{!784, !785, !786, !2111, !2112}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !782, file: !10, line: 96, baseType: !781, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !782, file: !10, line: 97, baseType: !781, size: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !782, file: !10, line: 101, baseType: !787, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !788, line: 56, baseType: !789)
!788 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !146, line: 3371, size: 1792, elements: !791)
!791 = !{!792, !825, !831, !844, !863, !874, !879, !888, !894, !907, !919, !957, !1449, !1477, !1494, !1495, !1500, !1509, !1515, !1520, !1524, !1528, !1762, !1809, !1815, !1821, !1828, !1841, !1855, !1872, !1884, !1906, !1921, !2093}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !790, file: !146, line: 3372, baseType: !793, size: 64)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !146, line: 360, size: 64, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !793, file: !146, line: 361, baseType: !11, size: 16, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !793, file: !146, line: 363, baseType: !11, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !793, file: !146, line: 364, baseType: !11, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !793, file: !146, line: 365, baseType: !11, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !793, file: !146, line: 366, baseType: !11, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !793, file: !146, line: 367, baseType: !11, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !793, file: !146, line: 368, baseType: !11, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !793, file: !146, line: 369, baseType: !11, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !793, file: !146, line: 370, baseType: !11, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !793, file: !146, line: 372, baseType: !11, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !793, file: !146, line: 373, baseType: !11, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !793, file: !146, line: 374, baseType: !11, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !793, file: !146, line: 375, baseType: !11, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !793, file: !146, line: 376, baseType: !11, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !793, file: !146, line: 377, baseType: !11, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !793, file: !146, line: 378, baseType: !11, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !793, file: !146, line: 379, baseType: !11, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !793, file: !146, line: 381, baseType: !11, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !793, file: !146, line: 382, baseType: !11, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !793, file: !146, line: 383, baseType: !11, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !793, file: !146, line: 384, baseType: !11, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !793, file: !146, line: 385, baseType: !11, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !793, file: !146, line: 386, baseType: !11, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !793, file: !146, line: 387, baseType: !11, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !793, file: !146, line: 388, baseType: !11, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !793, file: !146, line: 390, baseType: !11, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !793, file: !146, line: 391, baseType: !11, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !793, file: !146, line: 392, baseType: !11, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !793, file: !146, line: 394, baseType: !11, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !793, file: !146, line: 399, baseType: !11, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !790, file: !146, line: 3373, baseType: !826, size: 192)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !146, line: 402, size: 192, elements: !827)
!827 = !{!828, !829, !830}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !826, file: !146, line: 403, baseType: !793, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !826, file: !146, line: 404, baseType: !787, size: 64, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !826, file: !146, line: 405, baseType: !787, size: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !790, file: !146, line: 3374, baseType: !832, size: 320)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !146, line: 1384, size: 320, elements: !833)
!833 = !{!834, !835}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !832, file: !146, line: 1385, baseType: !826, size: 192)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !832, file: !146, line: 1386, baseType: !836, size: 128, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !837, line: 58, baseType: !838)
!837 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !837, line: 54, size: 128, elements: !839)
!839 = !{!840, !842}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !838, file: !837, line: 56, baseType: !841, size: 64)
!841 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !838, file: !837, line: 57, baseType: !843, size: 64, offset: 64)
!843 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !790, file: !146, line: 3375, baseType: !845, size: 256)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !146, line: 1397, size: 256, elements: !846)
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !845, file: !146, line: 1398, baseType: !826, size: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !845, file: !146, line: 1399, baseType: !849, size: 64, offset: 192)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !851, line: 52, size: 256, elements: !852)
!851 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!852 = !{!853, !854, !855, !856, !857, !858, !859}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !850, file: !851, line: 56, baseType: !11, size: 2, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !850, file: !851, line: 57, baseType: !11, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !850, file: !851, line: 58, baseType: !11, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !850, file: !851, line: 59, baseType: !11, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !850, file: !851, line: 60, baseType: !11, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !850, file: !851, line: 61, baseType: !11, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !850, file: !851, line: 62, baseType: !860, size: 192, offset: 64)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !841, size: 192, elements: !861)
!861 = !{!862}
!862 = !DISubrange(count: 3)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !790, file: !146, line: 3376, baseType: !864, size: 256)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !146, line: 1408, size: 256, elements: !865)
!865 = !{!866, !867}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !864, file: !146, line: 1409, baseType: !826, size: 192)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !864, file: !146, line: 1410, baseType: !868, size: 64, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !870, line: 27, size: 192, elements: !871)
!870 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!871 = !{!872, !873}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !869, file: !870, line: 29, baseType: !836, size: 128)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !869, file: !870, line: 30, baseType: !17, size: 32, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !790, file: !146, line: 3377, baseType: !875, size: 256)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !146, line: 1437, size: 256, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !875, file: !146, line: 1438, baseType: !826, size: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !875, file: !146, line: 1439, baseType: !787, size: 64, offset: 192)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !790, file: !146, line: 3378, baseType: !880, size: 256)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !146, line: 1418, size: 256, elements: !881)
!881 = !{!882, !883, !884}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !880, file: !146, line: 1419, baseType: !826, size: 192)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !880, file: !146, line: 1420, baseType: !6, size: 32, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !880, file: !146, line: 1421, baseType: !885, size: 8, offset: 224)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 8, elements: !886)
!886 = !{!887}
!887 = !DISubrange(count: 1)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !790, file: !146, line: 3379, baseType: !889, size: 320)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !146, line: 1428, size: 320, elements: !890)
!890 = !{!891, !892, !893}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !889, file: !146, line: 1429, baseType: !826, size: 192)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !889, file: !146, line: 1430, baseType: !787, size: 64, offset: 192)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !889, file: !146, line: 1431, baseType: !787, size: 64, offset: 256)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !790, file: !146, line: 3380, baseType: !895, size: 320)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !146, line: 1460, size: 320, elements: !896)
!896 = !{!897, !898}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !895, file: !146, line: 1461, baseType: !826, size: 192)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !895, file: !146, line: 1462, baseType: !899, size: 128, offset: 192)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !900, line: 31, size: 128, elements: !901)
!900 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!901 = !{!902, !905, !906}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !899, file: !900, line: 32, baseType: !903, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !899, file: !900, line: 33, baseType: !11, size: 32, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !899, file: !900, line: 34, baseType: !11, size: 32, offset: 96)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !790, file: !146, line: 3381, baseType: !908, size: 384)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !146, line: 2507, size: 384, elements: !909)
!909 = !{!910, !911, !916, !917, !918}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !908, file: !146, line: 2508, baseType: !826, size: 192)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !908, file: !146, line: 2509, baseType: !912, size: 32, offset: 192)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !913, line: 58, baseType: !914)
!913 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !915, line: 44, baseType: !11)
!915 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!916 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !908, file: !146, line: 2510, baseType: !11, size: 32, offset: 224)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !908, file: !146, line: 2511, baseType: !787, size: 64, offset: 256)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !908, file: !146, line: 2512, baseType: !787, size: 64, offset: 320)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !790, file: !146, line: 3382, baseType: !920, size: 896)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !146, line: 2652, size: 896, elements: !921)
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !920, file: !146, line: 2653, baseType: !908, size: 384)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !920, file: !146, line: 2654, baseType: !787, size: 64, offset: 384)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !920, file: !146, line: 2656, baseType: !11, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !920, file: !146, line: 2658, baseType: !11, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !920, file: !146, line: 2659, baseType: !11, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !920, file: !146, line: 2660, baseType: !11, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !920, file: !146, line: 2661, baseType: !11, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !920, file: !146, line: 2662, baseType: !11, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !920, file: !146, line: 2663, baseType: !11, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !920, file: !146, line: 2664, baseType: !11, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !920, file: !146, line: 2666, baseType: !11, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !920, file: !146, line: 2667, baseType: !11, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !920, file: !146, line: 2668, baseType: !11, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !920, file: !146, line: 2669, baseType: !11, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !920, file: !146, line: 2670, baseType: !11, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !920, file: !146, line: 2671, baseType: !11, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !920, file: !146, line: 2672, baseType: !11, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !920, file: !146, line: 2673, baseType: !11, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !920, file: !146, line: 2674, baseType: !11, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !920, file: !146, line: 2678, baseType: !11, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !920, file: !146, line: 2682, baseType: !11, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !920, file: !146, line: 2685, baseType: !11, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !920, file: !146, line: 2688, baseType: !11, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !920, file: !146, line: 2690, baseType: !11, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !920, file: !146, line: 2692, baseType: !11, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !920, file: !146, line: 2695, baseType: !11, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !920, file: !146, line: 2698, baseType: !11, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !920, file: !146, line: 2703, baseType: !11, size: 32, offset: 512)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !920, file: !146, line: 2705, baseType: !787, size: 64, offset: 576)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !920, file: !146, line: 2706, baseType: !787, size: 64, offset: 640)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !920, file: !146, line: 2707, baseType: !787, size: 64, offset: 704)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !920, file: !146, line: 2708, baseType: !787, size: 64, offset: 768)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !920, file: !146, line: 2711, baseType: !955, size: 64, offset: 832)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !146, line: 2711, flags: DIFlagFwdDecl)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !790, file: !146, line: 3383, baseType: !958, size: 960)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !146, line: 2756, size: 960, elements: !959)
!959 = !{!960, !961}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !958, file: !146, line: 2757, baseType: !920, size: 896)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !958, file: !146, line: 2758, baseType: !962, size: 64, offset: 896)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !788, line: 50, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !572, line: 240, size: 384, elements: !965)
!965 = !{!966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !964, file: !572, line: 242, baseType: !11, size: 16, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !964, file: !572, line: 245, baseType: !11, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !964, file: !572, line: 252, baseType: !11, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !964, file: !572, line: 257, baseType: !11, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !964, file: !572, line: 265, baseType: !11, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !964, file: !572, line: 277, baseType: !11, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !964, file: !572, line: 291, baseType: !11, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !964, file: !572, line: 298, baseType: !11, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !964, file: !572, line: 305, baseType: !11, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !964, file: !572, line: 310, baseType: !11, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !964, file: !572, line: 321, baseType: !977, size: 320, offset: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !572, line: 315, size: 320, elements: !978)
!978 = !{!979, !1382, !1384, !1447, !1448}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !977, file: !572, line: 316, baseType: !980, size: 64)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 64, elements: !886)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !572, line: 183, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !572, line: 166, size: 64, elements: !983)
!983 = !{!984, !985, !986, !987, !988, !996, !997, !1009, !1012, !1072, !1073, !1359, !1372, !1379}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !982, file: !572, line: 168, baseType: !6, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !982, file: !572, line: 169, baseType: !11, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !982, file: !572, line: 170, baseType: !759, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !982, file: !572, line: 171, baseType: !962, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !982, file: !572, line: 172, baseType: !989, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !788, line: 53, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !572, line: 359, size: 128, elements: !992)
!992 = !{!993, !994}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !991, file: !572, line: 360, baseType: !6, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !991, file: !572, line: 361, baseType: !995, size: 64, offset: 64)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 64, elements: !886)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !982, file: !572, line: 173, baseType: !17, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !982, file: !572, line: 174, baseType: !998, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !572, line: 133, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 115, size: 32, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !999, file: !572, line: 118, baseType: !11, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !999, file: !572, line: 120, baseType: !11, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !999, file: !572, line: 121, baseType: !11, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !999, file: !572, line: 123, baseType: !11, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !999, file: !572, line: 125, baseType: !11, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !999, file: !572, line: 127, baseType: !11, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !999, file: !572, line: 130, baseType: !11, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !999, file: !572, line: 132, baseType: !11, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !982, file: !572, line: 175, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !572, line: 175, flags: DIFlagFwdDecl)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !982, file: !572, line: 176, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1015, line: 75, size: 256, elements: !1016)
!1015 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1016 = !{!1017, !1031, !1032, !1033}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1014, file: !1015, line: 76, baseType: !1018, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1015, line: 68, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1015, line: 63, size: 320, elements: !1021)
!1021 = !{!1022, !1024, !1025, !1026}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1020, file: !1015, line: 64, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1020, file: !1015, line: 65, baseType: !1023, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1020, file: !1015, line: 66, baseType: !11, size: 32, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1020, file: !1015, line: 67, baseType: !1027, size: 128, offset: 192)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 128, elements: !1029)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1015, line: 29, baseType: !841)
!1029 = !{!1030}
!1030 = !DISubrange(count: 2)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1014, file: !1015, line: 77, baseType: !1018, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1014, file: !1015, line: 78, baseType: !11, size: 32, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1014, file: !1015, line: 79, baseType: !1034, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1015, line: 49, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1015, line: 45, size: 832, elements: !1037)
!1037 = !{!1038, !1039, !1040}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1036, file: !1015, line: 46, baseType: !1023, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1036, file: !1015, line: 47, baseType: !1013, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1036, file: !1015, line: 48, baseType: !1041, size: 704, offset: 128)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1042, line: 164, size: 704, elements: !1043)
!1042 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1043 = !{!1044, !1045, !1055, !1056, !1057, !1058, !1059, !1060, !1064, !1068, !1069, !1070, !1071}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1041, file: !1042, line: 166, baseType: !843, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1041, file: !1042, line: 167, baseType: !1046, size: 64, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1042, line: 157, size: 192, elements: !1048)
!1048 = !{!1049, !1050, !1051}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1047, file: !1042, line: 159, baseType: !756, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1047, file: !1042, line: 160, baseType: !1046, size: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1047, file: !1042, line: 161, baseType: !1052, size: 32, offset: 128)
!1052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 32, elements: !1053)
!1053 = !{!1054}
!1054 = !DISubrange(count: 4)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1041, file: !1042, line: 168, baseType: !756, size: 64, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1041, file: !1042, line: 169, baseType: !756, size: 64, offset: 192)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1041, file: !1042, line: 170, baseType: !756, size: 64, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1041, file: !1042, line: 171, baseType: !843, size: 64, offset: 320)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1041, file: !1042, line: 172, baseType: !6, size: 32, offset: 384)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1041, file: !1042, line: 176, baseType: !1061, size: 64, offset: 448)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!1046, !758, !843}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1041, file: !1042, line: 177, baseType: !1065, size: 64, offset: 512)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !758, !1046}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1041, file: !1042, line: 178, baseType: !758, size: 64, offset: 576)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1041, file: !1042, line: 179, baseType: !11, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1041, file: !1042, line: 180, baseType: !11, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1041, file: !1042, line: 184, baseType: !11, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !982, file: !572, line: 177, baseType: !787, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !982, file: !572, line: 178, baseType: !1074, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !341, line: 217, size: 832, elements: !1076)
!1076 = !{!1077, !1324, !1325, !1326, !1329, !1333, !1334, !1335, !1353, !1354, !1355, !1356, !1357, !1358}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1075, file: !341, line: 219, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !341, line: 151, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !341, line: 151, size: 128, elements: !1081)
!1081 = !{!1082}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1080, file: !341, line: 151, baseType: !1083, size: 128)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !341, line: 150, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !341, line: 150, size: 128, elements: !1085)
!1085 = !{!1086, !1087, !1088}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1084, file: !341, line: 150, baseType: !11, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1084, file: !341, line: 150, baseType: !11, size: 32, offset: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1084, file: !341, line: 150, baseType: !1089, size: 64, offset: 64)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1090, size: 64, elements: !886)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !788, line: 108, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !341, line: 122, size: 512, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1316, !1317, !1318, !1319, !1320, !1321, !1322}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1092, file: !341, line: 124, baseType: !1074, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1092, file: !341, line: 125, baseType: !1074, size: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1092, file: !341, line: 131, baseType: !1097, size: 64, offset: 128)
!1097 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !341, line: 128, size: 64, elements: !1098)
!1098 = !{!1099, !1315}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1097, file: !341, line: 129, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !788, line: 66, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1103, line: 143, size: 192, elements: !1104)
!1103 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1104 = !{!1105, !1313, !1314}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1102, file: !1103, line: 145, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !788, line: 69, baseType: !1107)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !1103, line: 136, size: 192, elements: !1109)
!1109 = !{!1110, !1311, !1312}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1108, file: !1103, line: 137, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !788, line: 58, baseType: !1112)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1103, line: 737, size: 768, elements: !1114)
!1114 = !{!1115, !1132, !1166, !1172, !1177, !1182, !1189, !1195, !1201, !1206, !1220, !1225, !1231, !1236, !1246, !1251, !1269, !1276, !1283, !1289, !1294, !1300, !1306}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1113, file: !1103, line: 738, baseType: !1116, size: 256)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !1103, line: 271, size: 256, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1116, file: !1103, line: 274, baseType: !11, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1116, file: !1103, line: 277, baseType: !11, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1116, file: !1103, line: 281, baseType: !11, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1116, file: !1103, line: 284, baseType: !11, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1116, file: !1103, line: 291, baseType: !11, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1116, file: !1103, line: 295, baseType: !11, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1116, file: !1103, line: 298, baseType: !11, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1116, file: !1103, line: 301, baseType: !11, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1116, file: !1103, line: 307, baseType: !11, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1116, file: !1103, line: 312, baseType: !11, size: 32, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1116, file: !1103, line: 316, baseType: !912, size: 32, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1116, file: !1103, line: 319, baseType: !11, size: 32, offset: 96)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1116, file: !1103, line: 323, baseType: !1074, size: 64, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1116, file: !1103, line: 327, baseType: !787, size: 64, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1113, file: !1103, line: 739, baseType: !1133, size: 448)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !1103, line: 350, size: 448, elements: !1134)
!1134 = !{!1135, !1164}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1133, file: !1103, line: 353, baseType: !1136, size: 384)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !1103, line: 333, size: 384, elements: !1137)
!1137 = !{!1138, !1139, !1147}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1136, file: !1103, line: 336, baseType: !1116, size: 256)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1136, file: !1103, line: 343, baseType: !1140, size: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1142, line: 37, size: 128, elements: !1143)
!1142 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1141, file: !1142, line: 39, baseType: !1140, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1141, file: !1142, line: 40, baseType: !1146, size: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1136, file: !1103, line: 344, baseType: !1148, size: 64, offset: 320)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1142, line: 45, size: 320, elements: !1150)
!1150 = !{!1151, !1152}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1149, file: !1142, line: 47, baseType: !1148, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1149, file: !1142, line: 48, baseType: !1153, size: 256, offset: 64)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !146, line: 1883, size: 256, elements: !1154)
!1154 = !{!1155, !1157, !1158, !1163}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1153, file: !146, line: 1884, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1153, file: !146, line: 1885, baseType: !1156, size: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1153, file: !146, line: 1891, baseType: !1159, size: 64, offset: 128)
!1159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1153, file: !146, line: 1891, size: 64, elements: !1160)
!1160 = !{!1161, !1162}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1159, file: !146, line: 1891, baseType: !1111, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1159, file: !146, line: 1891, baseType: !787, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1153, file: !146, line: 1892, baseType: !1146, size: 64, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1133, file: !1103, line: 359, baseType: !1165, size: 64, offset: 384)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 64, elements: !886)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1113, file: !1103, line: 740, baseType: !1167, size: 512)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !1103, line: 365, size: 512, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1167, file: !1103, line: 368, baseType: !1136, size: 384)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1167, file: !1103, line: 373, baseType: !787, size: 64, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1167, file: !1103, line: 374, baseType: !787, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1113, file: !1103, line: 741, baseType: !1173, size: 576)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !1103, line: 380, size: 576, elements: !1174)
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1173, file: !1103, line: 383, baseType: !1167, size: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1173, file: !1103, line: 389, baseType: !1165, size: 64, offset: 512)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1113, file: !1103, line: 742, baseType: !1178, size: 320)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !1103, line: 395, size: 320, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1178, file: !1103, line: 397, baseType: !1116, size: 256)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1178, file: !1103, line: 400, baseType: !1100, size: 64, offset: 256)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1113, file: !1103, line: 743, baseType: !1183, size: 448)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !1103, line: 406, size: 448, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1183, file: !1103, line: 408, baseType: !1116, size: 256)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1183, file: !1103, line: 412, baseType: !787, size: 64, offset: 256)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1183, file: !1103, line: 420, baseType: !787, size: 64, offset: 320)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1183, file: !1103, line: 423, baseType: !1100, size: 64, offset: 384)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1113, file: !1103, line: 744, baseType: !1190, size: 384)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !1103, line: 429, size: 384, elements: !1191)
!1191 = !{!1192, !1193, !1194}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1190, file: !1103, line: 431, baseType: !1116, size: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1190, file: !1103, line: 434, baseType: !787, size: 64, offset: 256)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1190, file: !1103, line: 437, baseType: !1100, size: 64, offset: 320)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1113, file: !1103, line: 745, baseType: !1196, size: 384)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !1103, line: 443, size: 384, elements: !1197)
!1197 = !{!1198, !1199, !1200}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1196, file: !1103, line: 445, baseType: !1116, size: 256)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1196, file: !1103, line: 449, baseType: !787, size: 64, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1196, file: !1103, line: 453, baseType: !1100, size: 64, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1113, file: !1103, line: 746, baseType: !1202, size: 320)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !1103, line: 459, size: 320, elements: !1203)
!1203 = !{!1204, !1205}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1202, file: !1103, line: 461, baseType: !1116, size: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1202, file: !1103, line: 464, baseType: !787, size: 64, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1113, file: !1103, line: 747, baseType: !1207, size: 768)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !1103, line: 469, size: 768, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1213}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1207, file: !1103, line: 471, baseType: !1116, size: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1207, file: !1103, line: 474, baseType: !11, size: 32, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1207, file: !1103, line: 475, baseType: !11, size: 32, offset: 288)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1207, file: !1103, line: 478, baseType: !787, size: 64, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1207, file: !1103, line: 481, baseType: !1214, size: 384, offset: 384)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 384, elements: !886)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !146, line: 1917, size: 384, elements: !1216)
!1216 = !{!1217, !1218, !1219}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1215, file: !146, line: 1920, baseType: !1153, size: 256)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1215, file: !146, line: 1921, baseType: !787, size: 64, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1215, file: !146, line: 1922, baseType: !912, size: 32, offset: 320)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1113, file: !1103, line: 748, baseType: !1221, size: 320)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !1103, line: 487, size: 320, elements: !1222)
!1222 = !{!1223, !1224}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1221, file: !1103, line: 490, baseType: !1116, size: 256)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1221, file: !1103, line: 494, baseType: !6, size: 32, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1113, file: !1103, line: 749, baseType: !1226, size: 384)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !1103, line: 500, size: 384, elements: !1227)
!1227 = !{!1228, !1229, !1230}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1226, file: !1103, line: 502, baseType: !1116, size: 256)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1226, file: !1103, line: 506, baseType: !1100, size: 64, offset: 256)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1226, file: !1103, line: 510, baseType: !1100, size: 64, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1113, file: !1103, line: 750, baseType: !1232, size: 320)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !1103, line: 529, size: 320, elements: !1233)
!1233 = !{!1234, !1235}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1232, file: !1103, line: 531, baseType: !1116, size: 256)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1232, file: !1103, line: 540, baseType: !1100, size: 64, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1113, file: !1103, line: 751, baseType: !1237, size: 704)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !1103, line: 546, size: 704, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1237, file: !1103, line: 549, baseType: !1167, size: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1237, file: !1103, line: 553, baseType: !759, size: 64, offset: 512)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1237, file: !1103, line: 557, baseType: !754, size: 8, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1237, file: !1103, line: 558, baseType: !754, size: 8, offset: 584)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1237, file: !1103, line: 559, baseType: !754, size: 8, offset: 592)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1237, file: !1103, line: 560, baseType: !754, size: 8, offset: 600)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1237, file: !1103, line: 566, baseType: !1165, size: 64, offset: 640)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1113, file: !1103, line: 752, baseType: !1247, size: 384)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !1103, line: 571, size: 384, elements: !1248)
!1248 = !{!1249, !1250}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1247, file: !1103, line: 573, baseType: !1178, size: 320)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1247, file: !1103, line: 577, baseType: !787, size: 64, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1113, file: !1103, line: 753, baseType: !1252, size: 576)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !1103, line: 600, size: 576, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1259, !1268}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1252, file: !1103, line: 602, baseType: !1178, size: 320)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1252, file: !1103, line: 605, baseType: !787, size: 64, offset: 320)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1252, file: !1103, line: 609, baseType: !1257, size: 64, offset: 384)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1258, line: 46, baseType: !841)
!1258 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1252, file: !1103, line: 612, baseType: !1260, size: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !1103, line: 581, size: 320, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1267}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1261, file: !1103, line: 583, baseType: !145, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1261, file: !1103, line: 586, baseType: !787, size: 64, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1261, file: !1103, line: 589, baseType: !787, size: 64, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1261, file: !1103, line: 592, baseType: !787, size: 64, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1261, file: !1103, line: 595, baseType: !787, size: 64, offset: 256)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1252, file: !1103, line: 616, baseType: !1100, size: 64, offset: 512)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1113, file: !1103, line: 754, baseType: !1270, size: 512)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !1103, line: 622, size: 512, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1270, file: !1103, line: 624, baseType: !1178, size: 320)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1270, file: !1103, line: 628, baseType: !787, size: 64, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1270, file: !1103, line: 632, baseType: !787, size: 64, offset: 384)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1270, file: !1103, line: 636, baseType: !787, size: 64, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1113, file: !1103, line: 755, baseType: !1277, size: 704)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !1103, line: 642, size: 704, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1277, file: !1103, line: 644, baseType: !1270, size: 512)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1277, file: !1103, line: 648, baseType: !787, size: 64, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1277, file: !1103, line: 652, baseType: !787, size: 64, offset: 576)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1277, file: !1103, line: 653, baseType: !787, size: 64, offset: 640)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1113, file: !1103, line: 756, baseType: !1284, size: 448)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !1103, line: 663, size: 448, elements: !1285)
!1285 = !{!1286, !1287, !1288}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1284, file: !1103, line: 665, baseType: !1178, size: 320)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1284, file: !1103, line: 668, baseType: !787, size: 64, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1284, file: !1103, line: 673, baseType: !787, size: 64, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1113, file: !1103, line: 757, baseType: !1290, size: 384)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !1103, line: 694, size: 384, elements: !1291)
!1291 = !{!1292, !1293}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1290, file: !1103, line: 696, baseType: !1178, size: 320)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1290, file: !1103, line: 699, baseType: !787, size: 64, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1113, file: !1103, line: 758, baseType: !1295, size: 384)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !1103, line: 681, size: 384, elements: !1296)
!1296 = !{!1297, !1298, !1299}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1295, file: !1103, line: 683, baseType: !1116, size: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1295, file: !1103, line: 686, baseType: !787, size: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1295, file: !1103, line: 689, baseType: !787, size: 64, offset: 320)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1113, file: !1103, line: 759, baseType: !1301, size: 384)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !1103, line: 707, size: 384, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1301, file: !1103, line: 709, baseType: !1116, size: 256)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1301, file: !1103, line: 712, baseType: !787, size: 64, offset: 256)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1301, file: !1103, line: 712, baseType: !787, size: 64, offset: 320)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1113, file: !1103, line: 760, baseType: !1307, size: 320)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !1103, line: 718, size: 320, elements: !1308)
!1308 = !{!1309, !1310}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1307, file: !1103, line: 720, baseType: !1116, size: 256)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1307, file: !1103, line: 723, baseType: !787, size: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1108, file: !1103, line: 138, baseType: !1107, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1108, file: !1103, line: 139, baseType: !1107, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1102, file: !1103, line: 146, baseType: !1106, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1102, file: !1103, line: 152, baseType: !1100, size: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1097, file: !341, line: 130, baseType: !962, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1092, file: !341, line: 134, baseType: !758, size: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1092, file: !341, line: 137, baseType: !787, size: 64, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1092, file: !341, line: 138, baseType: !912, size: 32, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1092, file: !341, line: 142, baseType: !11, size: 32, offset: 352)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1092, file: !341, line: 144, baseType: !6, size: 32, offset: 384)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1092, file: !341, line: 145, baseType: !6, size: 32, offset: 416)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1092, file: !341, line: 146, baseType: !1323, size: 64, offset: 448)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !341, line: 119, baseType: !843)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1075, file: !341, line: 220, baseType: !1078, size: 64, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1075, file: !341, line: 223, baseType: !758, size: 64, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1075, file: !341, line: 226, baseType: !1327, size: 64, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !341, line: 185, flags: DIFlagFwdDecl)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1075, file: !341, line: 229, baseType: !1330, size: 128, offset: 256)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1331, size: 128, elements: !1029)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !341, line: 229, flags: DIFlagFwdDecl)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1075, file: !341, line: 232, baseType: !1074, size: 64, offset: 384)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1075, file: !341, line: 233, baseType: !1074, size: 64, offset: 448)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1075, file: !341, line: 238, baseType: !1336, size: 64, offset: 512)
!1336 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !341, line: 235, size: 64, elements: !1337)
!1337 = !{!1338, !1344}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1336, file: !341, line: 236, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !341, line: 273, size: 128, elements: !1341)
!1341 = !{!1342, !1343}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1340, file: !341, line: 275, baseType: !1100, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1340, file: !341, line: 278, baseType: !1100, size: 64, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1336, file: !341, line: 237, baseType: !1345, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !341, line: 259, size: 320, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1346, file: !341, line: 261, baseType: !962, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1346, file: !341, line: 262, baseType: !962, size: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1346, file: !341, line: 266, baseType: !962, size: 64, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1346, file: !341, line: 267, baseType: !962, size: 64, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1346, file: !341, line: 270, baseType: !6, size: 32, offset: 256)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1075, file: !341, line: 241, baseType: !1323, size: 64, offset: 576)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1075, file: !341, line: 244, baseType: !6, size: 32, offset: 640)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1075, file: !341, line: 247, baseType: !6, size: 32, offset: 672)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1075, file: !341, line: 250, baseType: !6, size: 32, offset: 704)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1075, file: !341, line: 253, baseType: !6, size: 32, offset: 736)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1075, file: !341, line: 256, baseType: !6, size: 32, offset: 768)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !982, file: !572, line: 179, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !572, line: 150, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !572, line: 142, size: 320, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367, !1370, !1371}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1362, file: !572, line: 144, baseType: !787, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1362, file: !572, line: 145, baseType: !962, size: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1362, file: !572, line: 146, baseType: !962, size: 64, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1362, file: !572, line: 147, baseType: !1368, size: 32, offset: 192)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1369, line: 31, baseType: !6)
!1369 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1362, file: !572, line: 148, baseType: !11, size: 32, offset: 224)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1362, file: !572, line: 149, baseType: !754, size: 8, offset: 256)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !982, file: !572, line: 180, baseType: !1373, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !572, line: 162, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !572, line: 159, size: 128, elements: !1376)
!1376 = !{!1377, !1378}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1375, file: !572, line: 160, baseType: !787, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1375, file: !572, line: 161, baseType: !843, size: 64, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !982, file: !572, line: 181, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !572, line: 181, flags: DIFlagFwdDecl)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !977, file: !572, line: 317, baseType: !1383, size: 64)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !843, size: 64, elements: !886)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !977, file: !572, line: 318, baseType: !1385, size: 320)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !572, line: 188, size: 320, elements: !1386)
!1386 = !{!1387, !1389, !1446}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1385, file: !572, line: 190, baseType: !1388, size: 192)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 192, elements: !861)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1385, file: !572, line: 193, baseType: !1390, size: 64, offset: 192)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !572, line: 206, size: 320, elements: !1392)
!1392 = !{!1393, !1431, !1432, !1433, !1445}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1391, file: !572, line: 208, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !788, line: 62, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1397, line: 538, size: 256, elements: !1398)
!1397 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1398 = !{!1399, !1403, !1409, !1422}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1396, file: !1397, line: 539, baseType: !1400, size: 32)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1397, line: 482, size: 32, elements: !1401)
!1401 = !{!1402}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1400, file: !1397, line: 484, baseType: !11, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1396, file: !1397, line: 540, baseType: !1404, size: 192)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1397, line: 488, size: 192, elements: !1405)
!1405 = !{!1406, !1407, !1408}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1404, file: !1397, line: 489, baseType: !1400, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1404, file: !1397, line: 492, baseType: !759, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1404, file: !1397, line: 496, baseType: !787, size: 64, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1396, file: !1397, line: 541, baseType: !1410, size: 256)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1397, line: 504, size: 256, elements: !1411)
!1411 = !{!1412, !1413, !1420, !1421}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !1397, line: 505, baseType: !1400, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1410, file: !1397, line: 509, baseType: !1414, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1397, line: 501, baseType: !1415)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !1418}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1410, file: !1397, line: 510, baseType: !1418, size: 64, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1410, file: !1397, line: 513, baseType: !1394, size: 64, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1396, file: !1397, line: 542, baseType: !1423, size: 128)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1397, line: 530, size: 128, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1423, file: !1397, line: 531, baseType: !1400, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1423, file: !1397, line: 534, baseType: !1427, size: 64, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1397, line: 525, baseType: !1428)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!754, !787, !759, !841, !841}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1391, file: !572, line: 211, baseType: !11, size: 32, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1391, file: !572, line: 214, baseType: !843, size: 64, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1391, file: !572, line: 224, baseType: !1434, size: 64, offset: 192)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !572, line: 202, baseType: !1436)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !572, line: 202, size: 128, elements: !1437)
!1437 = !{!1438}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1436, file: !572, line: 202, baseType: !1439, size: 128)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !572, line: 200, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !572, line: 200, size: 128, elements: !1441)
!1441 = !{!1442, !1443, !1444}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1440, file: !572, line: 200, baseType: !11, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1440, file: !572, line: 200, baseType: !11, size: 32, offset: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1440, file: !572, line: 200, baseType: !995, size: 64, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1391, file: !572, line: 234, baseType: !1434, size: 64, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1385, file: !572, line: 197, baseType: !843, size: 64, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !977, file: !572, line: 319, baseType: !850, size: 256)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !977, file: !572, line: 320, baseType: !869, size: 192)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !790, file: !146, line: 3384, baseType: !1450, size: 1472)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !146, line: 3114, size: 1472, elements: !1451)
!1451 = !{!1452, !1473, !1474, !1475, !1476}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1450, file: !146, line: 3115, baseType: !1453, size: 1216)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !146, line: 2984, size: 1216, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1453, file: !146, line: 2985, baseType: !958, size: 960)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1453, file: !146, line: 2986, baseType: !787, size: 64, offset: 960)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1453, file: !146, line: 2987, baseType: !787, size: 64, offset: 1024)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1453, file: !146, line: 2988, baseType: !787, size: 64, offset: 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1453, file: !146, line: 2991, baseType: !11, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1453, file: !146, line: 2992, baseType: !11, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1453, file: !146, line: 2993, baseType: !11, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1453, file: !146, line: 2994, baseType: !11, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1453, file: !146, line: 2995, baseType: !11, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1453, file: !146, line: 2996, baseType: !11, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1453, file: !146, line: 2998, baseType: !11, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1453, file: !146, line: 3000, baseType: !11, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1453, file: !146, line: 3002, baseType: !11, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1453, file: !146, line: 3003, baseType: !11, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1453, file: !146, line: 3004, baseType: !11, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1453, file: !146, line: 3005, baseType: !11, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1453, file: !146, line: 3007, baseType: !11, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1453, file: !146, line: 3010, baseType: !11, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1450, file: !146, line: 3117, baseType: !787, size: 64, offset: 1216)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1450, file: !146, line: 3119, baseType: !787, size: 64, offset: 1280)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1450, file: !146, line: 3121, baseType: !787, size: 64, offset: 1344)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1450, file: !146, line: 3123, baseType: !787, size: 64, offset: 1408)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !790, file: !146, line: 3385, baseType: !1478, size: 1088)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !146, line: 2874, size: 1088, elements: !1479)
!1479 = !{!1480, !1481, !1482}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1478, file: !146, line: 2875, baseType: !958, size: 960)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1478, file: !146, line: 2876, baseType: !962, size: 64, offset: 960)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1478, file: !146, line: 2877, baseType: !1483, size: 64, offset: 1024)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1485, line: 172, size: 128, elements: !1486)
!1485 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1486 = !{!1487, !1488, !1489, !1490, !1491, !1492, !1493}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1484, file: !1485, line: 174, baseType: !11, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1484, file: !1485, line: 178, baseType: !11, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1484, file: !1485, line: 183, baseType: !11, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1484, file: !1485, line: 187, baseType: !11, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1484, file: !1485, line: 192, baseType: !11, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1484, file: !1485, line: 195, baseType: !11, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1484, file: !1485, line: 199, baseType: !787, size: 64, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !790, file: !146, line: 3386, baseType: !1453, size: 1216)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !790, file: !146, line: 3387, baseType: !1496, size: 1280)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !146, line: 3093, size: 1280, elements: !1497)
!1497 = !{!1498, !1499}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1496, file: !146, line: 3094, baseType: !1453, size: 1216)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1496, file: !146, line: 3095, baseType: !1483, size: 64, offset: 1216)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !790, file: !146, line: 3388, baseType: !1501, size: 1216)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !146, line: 2824, size: 1216, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506, !1507, !1508}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1501, file: !146, line: 2825, baseType: !920, size: 896)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1501, file: !146, line: 2827, baseType: !787, size: 64, offset: 896)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1501, file: !146, line: 2828, baseType: !787, size: 64, offset: 960)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1501, file: !146, line: 2829, baseType: !787, size: 64, offset: 1024)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1501, file: !146, line: 2830, baseType: !787, size: 64, offset: 1088)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1501, file: !146, line: 2831, baseType: !787, size: 64, offset: 1152)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !790, file: !146, line: 3389, baseType: !1510, size: 1024)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !146, line: 2850, size: 1024, elements: !1511)
!1511 = !{!1512, !1513, !1514}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1510, file: !146, line: 2851, baseType: !958, size: 960)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1510, file: !146, line: 2852, baseType: !6, size: 32, offset: 960)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1510, file: !146, line: 2853, baseType: !6, size: 32, offset: 992)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !790, file: !146, line: 3390, baseType: !1516, size: 1024)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !146, line: 2857, size: 1024, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1516, file: !146, line: 2858, baseType: !958, size: 960)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1516, file: !146, line: 2859, baseType: !1483, size: 64, offset: 960)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !790, file: !146, line: 3391, baseType: !1521, size: 960)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !146, line: 2862, size: 960, elements: !1522)
!1522 = !{!1523}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1521, file: !146, line: 2863, baseType: !958, size: 960)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !790, file: !146, line: 3392, baseType: !1525, size: 1472)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !146, line: 3304, size: 1472, elements: !1526)
!1526 = !{!1527}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1525, file: !146, line: 3305, baseType: !1450, size: 1472)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !790, file: !146, line: 3393, baseType: !1529, size: 1792)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !146, line: 3248, size: 1792, elements: !1530)
!1530 = !{!1531, !1532, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1529, file: !146, line: 3249, baseType: !1450, size: 1472)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1529, file: !146, line: 3251, baseType: !1533, size: 64, offset: 1472)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1535, line: 463, size: 1152, elements: !1536)
!1535 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1536 = !{!1537, !1538, !1569, !1570, !1682, !1685, !1686, !1687, !1688, !1689, !1690, !1714, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1534, file: !1535, line: 464, baseType: !761, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1534, file: !1535, line: 467, baseType: !1539, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !341, line: 374, size: 640, elements: !1541)
!1541 = !{!1542, !1544, !1545, !1558, !1559, !1560, !1561, !1562, !1563, !1565, !1567, !1568}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1540, file: !341, line: 377, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !788, line: 111, baseType: !1074)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1540, file: !341, line: 378, baseType: !1543, size: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1540, file: !341, line: 381, baseType: !1546, size: 64, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !341, line: 282, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !341, line: 282, size: 128, elements: !1549)
!1549 = !{!1550}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1548, file: !341, line: 282, baseType: !1551, size: 128)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !341, line: 281, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !341, line: 281, size: 128, elements: !1553)
!1553 = !{!1554, !1555, !1556}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1552, file: !341, line: 281, baseType: !11, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1552, file: !341, line: 281, baseType: !11, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1552, file: !341, line: 281, baseType: !1557, size: 64, offset: 64)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1543, size: 64, elements: !886)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1540, file: !341, line: 384, baseType: !6, size: 32, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1540, file: !341, line: 387, baseType: !6, size: 32, offset: 224)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1540, file: !341, line: 390, baseType: !6, size: 32, offset: 256)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1540, file: !341, line: 394, baseType: !1546, size: 64, offset: 320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1540, file: !341, line: 396, baseType: !340, size: 32, offset: 384)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1540, file: !341, line: 399, baseType: !1564, size: 64, offset: 416)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 64, elements: !1029)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1540, file: !341, line: 402, baseType: !1566, size: 64, offset: 480)
!1566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 64, elements: !1029)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1540, file: !341, line: 406, baseType: !6, size: 32, offset: 544)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1540, file: !341, line: 409, baseType: !6, size: 32, offset: 576)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1534, file: !1535, line: 470, baseType: !1101, size: 64, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1534, file: !1535, line: 473, baseType: !1571, size: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1485, line: 39, size: 1152, elements: !1573)
!1573 = !{!1574, !1622, !1635, !1647, !1648, !1660, !1661, !1664, !1665, !1666, !1667, !1668}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1572, file: !1485, line: 41, baseType: !1575, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1576, line: 144, baseType: !1577)
!1576 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1576, line: 100, size: 896, elements: !1579)
!1579 = !{!1580, !1586, !1591, !1596, !1598, !1599, !1600, !1601, !1602, !1603, !1608, !1610, !1611, !1616, !1621}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1578, file: !1576, line: 102, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1576, line: 52, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!1585, !1418}
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1576, line: 47, baseType: !11)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1578, file: !1576, line: 105, baseType: !1587, size: 64, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1576, line: 59, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!6, !1418, !1418}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1578, file: !1576, line: 108, baseType: !1592, size: 64, offset: 128)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1576, line: 63, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{null, !758}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1578, file: !1576, line: 111, baseType: !1597, size: 64, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1578, file: !1576, line: 114, baseType: !1257, size: 64, offset: 256)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1578, file: !1576, line: 117, baseType: !1257, size: 64, offset: 320)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1578, file: !1576, line: 120, baseType: !1257, size: 64, offset: 384)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1578, file: !1576, line: 124, baseType: !11, size: 32, offset: 448)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1578, file: !1576, line: 128, baseType: !11, size: 32, offset: 480)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1578, file: !1576, line: 131, baseType: !1604, size: 64, offset: 512)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1576, line: 75, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!758, !1257, !1257}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1578, file: !1576, line: 132, baseType: !1609, size: 64, offset: 576)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1576, line: 78, baseType: !1593)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1578, file: !1576, line: 135, baseType: !758, size: 64, offset: 640)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1578, file: !1576, line: 136, baseType: !1612, size: 64, offset: 704)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1576, line: 82, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!758, !758, !1257, !1257}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1578, file: !1576, line: 137, baseType: !1617, size: 64, offset: 768)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1576, line: 83, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{null, !758, !758}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1578, file: !1576, line: 141, baseType: !11, size: 32, offset: 832)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1572, file: !1485, line: 48, baseType: !1623, size: 64, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !1103, line: 35, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !1103, line: 35, size: 128, elements: !1626)
!1626 = !{!1627}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1625, file: !1103, line: 35, baseType: !1628, size: 128)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !1103, line: 33, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !1103, line: 33, size: 128, elements: !1630)
!1630 = !{!1631, !1632, !1633}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1629, file: !1103, line: 33, baseType: !11, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1629, file: !1103, line: 33, baseType: !11, size: 32, offset: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1629, file: !1103, line: 33, baseType: !1634, size: 64, offset: 64)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1111, size: 64, elements: !886)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1572, file: !1485, line: 51, baseType: !1636, size: 64, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !146, line: 183, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !146, line: 183, size: 128, elements: !1639)
!1639 = !{!1640}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1638, file: !146, line: 183, baseType: !1641, size: 128)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !146, line: 182, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !146, line: 182, size: 128, elements: !1643)
!1643 = !{!1644, !1645, !1646}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1642, file: !146, line: 182, baseType: !11, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1642, file: !146, line: 182, baseType: !11, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1642, file: !146, line: 182, baseType: !1165, size: 64, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1572, file: !1485, line: 54, baseType: !787, size: 64, offset: 192)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1572, file: !1485, line: 57, baseType: !1649, size: 128, offset: 256)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1650, line: 31, size: 128, elements: !1651)
!1650 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1651 = !{!1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1649, file: !1650, line: 35, baseType: !11, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1649, file: !1650, line: 39, baseType: !11, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1649, file: !1650, line: 42, baseType: !11, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1649, file: !1650, line: 46, baseType: !11, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1649, file: !1650, line: 50, baseType: !11, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1649, file: !1650, line: 53, baseType: !11, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1649, file: !1650, line: 56, baseType: !1659, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !788, line: 47, baseType: !1013)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1572, file: !1485, line: 60, baseType: !1649, size: 128, offset: 384)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1572, file: !1485, line: 64, baseType: !1662, size: 64, offset: 512)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !10, line: 27, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1572, file: !1485, line: 67, baseType: !787, size: 64, offset: 576)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1572, file: !1485, line: 73, baseType: !1575, size: 64, offset: 640)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1572, file: !1485, line: 77, baseType: !1659, size: 64, offset: 704)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1572, file: !1485, line: 80, baseType: !11, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1572, file: !1485, line: 82, baseType: !1669, size: 320, offset: 832)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1142, line: 62, size: 320, elements: !1670)
!1670 = !{!1671, !1677, !1678, !1679, !1680, !1681}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1669, file: !1142, line: 63, baseType: !1672, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1142, line: 56, size: 128, elements: !1674)
!1674 = !{!1675, !1676}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1673, file: !1142, line: 57, baseType: !1672, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1673, file: !1142, line: 58, baseType: !885, size: 8, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1669, file: !1142, line: 64, baseType: !11, size: 32, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1669, file: !1142, line: 66, baseType: !11, size: 32, offset: 96)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1669, file: !1142, line: 68, baseType: !754, size: 8, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1669, file: !1142, line: 70, baseType: !1140, size: 64, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1669, file: !1142, line: 71, baseType: !1148, size: 64, offset: 256)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1534, file: !1535, line: 476, baseType: !1683, size: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1535, line: 476, flags: DIFlagFwdDecl)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1534, file: !1535, line: 479, baseType: !1575, size: 64, offset: 320)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1534, file: !1535, line: 484, baseType: !787, size: 64, offset: 384)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1534, file: !1535, line: 488, baseType: !787, size: 64, offset: 448)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1534, file: !1535, line: 493, baseType: !787, size: 64, offset: 512)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1534, file: !1535, line: 496, baseType: !787, size: 64, offset: 576)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1534, file: !1535, line: 501, baseType: !1691, size: 64, offset: 640)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !352, line: 2355, size: 576, elements: !1693)
!1693 = !{!1694, !1697, !1698, !1699, !1700, !1702, !1703, !1708, !1709, !1710, !1711, !1712, !1713}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1692, file: !352, line: 2356, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !352, line: 2356, flags: DIFlagFwdDecl)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1692, file: !352, line: 2357, baseType: !759, size: 64, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1692, file: !352, line: 2358, baseType: !6, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1692, file: !352, line: 2359, baseType: !6, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1692, file: !352, line: 2360, baseType: !1701, size: 128, offset: 192)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, elements: !1053)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1692, file: !352, line: 2364, baseType: !6, size: 32, offset: 320)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1692, file: !352, line: 2367, baseType: !1704, size: 128, offset: 384)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !352, line: 2349, size: 128, elements: !1705)
!1705 = !{!1706, !1707}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1704, file: !352, line: 2351, baseType: !962, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1704, file: !352, line: 2352, baseType: !843, size: 64, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1692, file: !352, line: 2371, baseType: !351, size: 32, offset: 512)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1692, file: !352, line: 2374, baseType: !11, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1692, file: !352, line: 2377, baseType: !11, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1692, file: !352, line: 2381, baseType: !11, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1692, file: !352, line: 2392, baseType: !11, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1692, file: !352, line: 2396, baseType: !11, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1534, file: !1535, line: 504, baseType: !1715, size: 64, offset: 704)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1535, line: 504, flags: DIFlagFwdDecl)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1534, file: !1535, line: 507, baseType: !1575, size: 64, offset: 768)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1534, file: !1535, line: 510, baseType: !6, size: 32, offset: 832)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1534, file: !1535, line: 513, baseType: !6, size: 32, offset: 864)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1534, file: !1535, line: 516, baseType: !912, size: 32, offset: 896)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1534, file: !1535, line: 519, baseType: !912, size: 32, offset: 928)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1534, file: !1535, line: 522, baseType: !11, size: 32, offset: 960)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1534, file: !1535, line: 523, baseType: !11, size: 32, offset: 992)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1534, file: !1535, line: 528, baseType: !759, size: 64, offset: 1024)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1534, file: !1535, line: 535, baseType: !11, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1534, file: !1535, line: 539, baseType: !11, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1534, file: !1535, line: 543, baseType: !11, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1534, file: !1535, line: 546, baseType: !11, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1534, file: !1535, line: 550, baseType: !11, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1534, file: !1535, line: 554, baseType: !11, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1534, file: !1535, line: 559, baseType: !11, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1534, file: !1535, line: 562, baseType: !11, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1534, file: !1535, line: 571, baseType: !11, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1534, file: !1535, line: 573, baseType: !11, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1534, file: !1535, line: 574, baseType: !11, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1534, file: !1535, line: 581, baseType: !11, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1534, file: !1535, line: 585, baseType: !11, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1534, file: !1535, line: 588, baseType: !11, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1534, file: !1535, line: 592, baseType: !11, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1534, file: !1535, line: 598, baseType: !11, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1529, file: !146, line: 3254, baseType: !787, size: 64, offset: 1536)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1529, file: !146, line: 3257, baseType: !787, size: 64, offset: 1600)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1529, file: !146, line: 3258, baseType: !787, size: 64, offset: 1664)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1529, file: !146, line: 3264, baseType: !11, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1529, file: !146, line: 3265, baseType: !11, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1529, file: !146, line: 3267, baseType: !11, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1529, file: !146, line: 3268, baseType: !11, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1529, file: !146, line: 3269, baseType: !11, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1529, file: !146, line: 3271, baseType: !11, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1529, file: !146, line: 3272, baseType: !11, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1529, file: !146, line: 3273, baseType: !11, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1529, file: !146, line: 3274, baseType: !11, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1529, file: !146, line: 3275, baseType: !11, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1529, file: !146, line: 3276, baseType: !11, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1529, file: !146, line: 3277, baseType: !11, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1529, file: !146, line: 3279, baseType: !11, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1529, file: !146, line: 3280, baseType: !11, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1529, file: !146, line: 3281, baseType: !11, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1529, file: !146, line: 3282, baseType: !11, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1529, file: !146, line: 3283, baseType: !11, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1529, file: !146, line: 3284, baseType: !11, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !790, file: !146, line: 3394, baseType: !1763, size: 1344)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !146, line: 2279, size: 1344, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1763, file: !146, line: 2280, baseType: !826, size: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1763, file: !146, line: 2281, baseType: !787, size: 64, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1763, file: !146, line: 2282, baseType: !787, size: 64, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1763, file: !146, line: 2283, baseType: !787, size: 64, offset: 320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1763, file: !146, line: 2284, baseType: !787, size: 64, offset: 384)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1763, file: !146, line: 2285, baseType: !11, size: 32, offset: 448)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1763, file: !146, line: 2287, baseType: !11, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1763, file: !146, line: 2288, baseType: !11, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1763, file: !146, line: 2289, baseType: !11, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1763, file: !146, line: 2290, baseType: !11, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1763, file: !146, line: 2291, baseType: !11, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1763, file: !146, line: 2292, baseType: !11, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1763, file: !146, line: 2294, baseType: !11, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1763, file: !146, line: 2296, baseType: !11, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1763, file: !146, line: 2297, baseType: !11, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1763, file: !146, line: 2298, baseType: !11, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1763, file: !146, line: 2299, baseType: !11, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1763, file: !146, line: 2300, baseType: !11, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1763, file: !146, line: 2301, baseType: !11, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1763, file: !146, line: 2302, baseType: !11, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1763, file: !146, line: 2303, baseType: !11, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1763, file: !146, line: 2305, baseType: !11, size: 32, offset: 512)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1763, file: !146, line: 2306, baseType: !1368, size: 32, offset: 544)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1763, file: !146, line: 2307, baseType: !787, size: 64, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1763, file: !146, line: 2308, baseType: !787, size: 64, offset: 640)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1763, file: !146, line: 2314, baseType: !1791, size: 64, offset: 704)
!1791 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !146, line: 2309, size: 64, elements: !1792)
!1792 = !{!1793, !1794, !1795}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1791, file: !146, line: 2310, baseType: !6, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1791, file: !146, line: 2311, baseType: !759, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1791, file: !146, line: 2312, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !146, line: 2277, flags: DIFlagFwdDecl)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1763, file: !146, line: 2315, baseType: !787, size: 64, offset: 768)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1763, file: !146, line: 2316, baseType: !787, size: 64, offset: 832)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1763, file: !146, line: 2317, baseType: !787, size: 64, offset: 896)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1763, file: !146, line: 2318, baseType: !787, size: 64, offset: 960)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1763, file: !146, line: 2319, baseType: !787, size: 64, offset: 1024)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1763, file: !146, line: 2320, baseType: !787, size: 64, offset: 1088)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1763, file: !146, line: 2321, baseType: !787, size: 64, offset: 1152)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1763, file: !146, line: 2322, baseType: !787, size: 64, offset: 1216)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1763, file: !146, line: 2324, baseType: !1807, size: 64, offset: 1280)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !146, line: 2324, flags: DIFlagFwdDecl)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !790, file: !146, line: 3395, baseType: !1810, size: 320)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !146, line: 1469, size: 320, elements: !1811)
!1811 = !{!1812, !1813, !1814}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1810, file: !146, line: 1470, baseType: !826, size: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1810, file: !146, line: 1471, baseType: !787, size: 64, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1810, file: !146, line: 1472, baseType: !787, size: 64, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !790, file: !146, line: 3396, baseType: !1816, size: 320)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !146, line: 1482, size: 320, elements: !1817)
!1817 = !{!1818, !1819, !1820}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1816, file: !146, line: 1483, baseType: !826, size: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1816, file: !146, line: 1484, baseType: !6, size: 32, offset: 192)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1816, file: !146, line: 1485, baseType: !1165, size: 64, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !790, file: !146, line: 3397, baseType: !1822, size: 384)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !146, line: 1829, size: 384, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1822, file: !146, line: 1830, baseType: !826, size: 192)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1822, file: !146, line: 1831, baseType: !912, size: 32, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1822, file: !146, line: 1832, baseType: !787, size: 64, offset: 256)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1822, file: !146, line: 1835, baseType: !1165, size: 64, offset: 320)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !790, file: !146, line: 3398, baseType: !1829, size: 704)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !146, line: 1898, size: 704, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835, !1840}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1829, file: !146, line: 1899, baseType: !826, size: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1829, file: !146, line: 1902, baseType: !787, size: 64, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1829, file: !146, line: 1905, baseType: !1111, size: 64, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1829, file: !146, line: 1908, baseType: !11, size: 32, offset: 320)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1829, file: !146, line: 1911, baseType: !1836, size: 64, offset: 384)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1485, line: 117, size: 128, elements: !1838)
!1838 = !{!1839}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1837, file: !1485, line: 120, baseType: !1649, size: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1829, file: !146, line: 1914, baseType: !1153, size: 256, offset: 448)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !790, file: !146, line: 3399, baseType: !1842, size: 704)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !146, line: 2008, size: 704, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1842, file: !146, line: 2009, baseType: !826, size: 192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1842, file: !146, line: 2011, baseType: !11, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1842, file: !146, line: 2012, baseType: !11, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1842, file: !146, line: 2014, baseType: !912, size: 32, offset: 224)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1842, file: !146, line: 2016, baseType: !787, size: 64, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1842, file: !146, line: 2017, baseType: !1636, size: 64, offset: 320)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1842, file: !146, line: 2019, baseType: !787, size: 64, offset: 384)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1842, file: !146, line: 2020, baseType: !787, size: 64, offset: 448)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1842, file: !146, line: 2021, baseType: !787, size: 64, offset: 512)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1842, file: !146, line: 2022, baseType: !787, size: 64, offset: 576)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1842, file: !146, line: 2023, baseType: !787, size: 64, offset: 640)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !790, file: !146, line: 3400, baseType: !1856, size: 832)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !146, line: 2430, size: 832, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1856, file: !146, line: 2431, baseType: !826, size: 192)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1856, file: !146, line: 2433, baseType: !787, size: 64, offset: 192)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1856, file: !146, line: 2434, baseType: !787, size: 64, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1856, file: !146, line: 2435, baseType: !787, size: 64, offset: 320)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1856, file: !146, line: 2436, baseType: !787, size: 64, offset: 384)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1856, file: !146, line: 2437, baseType: !1636, size: 64, offset: 448)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1856, file: !146, line: 2438, baseType: !787, size: 64, offset: 512)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1856, file: !146, line: 2440, baseType: !787, size: 64, offset: 576)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1856, file: !146, line: 2441, baseType: !787, size: 64, offset: 640)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1856, file: !146, line: 2443, baseType: !1868, size: 128, offset: 704)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !146, line: 182, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !146, line: 182, size: 128, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1869, file: !146, line: 182, baseType: !1641, size: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !790, file: !146, line: 3401, baseType: !1873, size: 320)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !146, line: 3327, size: 320, elements: !1874)
!1874 = !{!1875, !1876, !1883}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1873, file: !146, line: 3329, baseType: !826, size: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1873, file: !146, line: 3330, baseType: !1877, size: 64, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !146, line: 3320, size: 192, elements: !1879)
!1879 = !{!1880, !1881, !1882}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1878, file: !146, line: 3322, baseType: !1877, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1878, file: !146, line: 3323, baseType: !1877, size: 64, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1878, file: !146, line: 3324, baseType: !787, size: 64, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1873, file: !146, line: 3331, baseType: !1877, size: 64, offset: 256)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !790, file: !146, line: 3402, baseType: !1885, size: 256)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !146, line: 1540, size: 256, elements: !1886)
!1886 = !{!1887, !1888}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1885, file: !146, line: 1541, baseType: !826, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1885, file: !146, line: 1542, baseType: !1889, size: 64, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !146, line: 1538, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !146, line: 1538, size: 192, elements: !1892)
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1891, file: !146, line: 1538, baseType: !1894, size: 192)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !146, line: 1537, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !146, line: 1537, size: 192, elements: !1896)
!1896 = !{!1897, !1898, !1899}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1895, file: !146, line: 1537, baseType: !11, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1895, file: !146, line: 1537, baseType: !11, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1895, file: !146, line: 1537, baseType: !1900, size: 128, offset: 64)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1901, size: 128, elements: !886)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !146, line: 1535, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !146, line: 1532, size: 128, elements: !1903)
!1903 = !{!1904, !1905}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1902, file: !146, line: 1533, baseType: !787, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1902, file: !146, line: 1534, baseType: !787, size: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !790, file: !146, line: 3403, baseType: !1907, size: 512)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !146, line: 1938, size: 512, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912, !1918, !1919, !1920}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1907, file: !146, line: 1939, baseType: !826, size: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1907, file: !146, line: 1940, baseType: !912, size: 32, offset: 192)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1907, file: !146, line: 1941, baseType: !356, size: 32, offset: 224)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1907, file: !146, line: 1946, baseType: !1913, size: 32, offset: 256)
!1913 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !146, line: 1942, size: 32, elements: !1914)
!1914 = !{!1915, !1916, !1917}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1913, file: !146, line: 1943, baseType: !374, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1913, file: !146, line: 1944, baseType: !381, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1913, file: !146, line: 1945, baseType: !145, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1907, file: !146, line: 1950, baseType: !1100, size: 64, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1907, file: !146, line: 1951, baseType: !1100, size: 64, offset: 384)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1907, file: !146, line: 1953, baseType: !1165, size: 64, offset: 448)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !790, file: !146, line: 3404, baseType: !1922, size: 1664)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !146, line: 3337, size: 1664, elements: !1923)
!1923 = !{!1924, !1925}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1922, file: !146, line: 3338, baseType: !826, size: 192)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1922, file: !146, line: 3341, baseType: !1926, size: 1472, offset: 192)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1927, line: 410, size: 1472, elements: !1928)
!1927 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1928 = !{!1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1926, file: !1927, line: 412, baseType: !6, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1926, file: !1927, line: 413, baseType: !6, size: 32, offset: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1926, file: !1927, line: 414, baseType: !6, size: 32, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1926, file: !1927, line: 415, baseType: !6, size: 32, offset: 96)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1926, file: !1927, line: 416, baseType: !6, size: 32, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1926, file: !1927, line: 417, baseType: !6, size: 32, offset: 160)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1926, file: !1927, line: 418, baseType: !754, size: 8, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1926, file: !1927, line: 419, baseType: !754, size: 8, offset: 200)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1926, file: !1927, line: 420, baseType: !1938, size: 8, offset: 208)
!1938 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1926, file: !1927, line: 421, baseType: !1938, size: 8, offset: 216)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1926, file: !1927, line: 422, baseType: !1938, size: 8, offset: 224)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1926, file: !1927, line: 423, baseType: !1938, size: 8, offset: 232)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1926, file: !1927, line: 424, baseType: !1938, size: 8, offset: 240)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1926, file: !1927, line: 425, baseType: !1938, size: 8, offset: 248)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1926, file: !1927, line: 426, baseType: !1938, size: 8, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1926, file: !1927, line: 427, baseType: !1938, size: 8, offset: 264)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1926, file: !1927, line: 428, baseType: !1938, size: 8, offset: 272)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1926, file: !1927, line: 429, baseType: !1938, size: 8, offset: 280)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1926, file: !1927, line: 430, baseType: !1938, size: 8, offset: 288)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1926, file: !1927, line: 431, baseType: !1938, size: 8, offset: 296)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1926, file: !1927, line: 432, baseType: !1938, size: 8, offset: 304)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1926, file: !1927, line: 433, baseType: !1938, size: 8, offset: 312)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1926, file: !1927, line: 434, baseType: !1938, size: 8, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1926, file: !1927, line: 435, baseType: !1938, size: 8, offset: 328)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1926, file: !1927, line: 436, baseType: !1938, size: 8, offset: 336)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1926, file: !1927, line: 437, baseType: !1938, size: 8, offset: 344)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1926, file: !1927, line: 438, baseType: !1938, size: 8, offset: 352)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1926, file: !1927, line: 439, baseType: !1938, size: 8, offset: 360)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1926, file: !1927, line: 440, baseType: !1938, size: 8, offset: 368)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1926, file: !1927, line: 441, baseType: !1938, size: 8, offset: 376)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1926, file: !1927, line: 442, baseType: !1938, size: 8, offset: 384)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1926, file: !1927, line: 443, baseType: !1938, size: 8, offset: 392)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1926, file: !1927, line: 444, baseType: !1938, size: 8, offset: 400)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1926, file: !1927, line: 445, baseType: !1938, size: 8, offset: 408)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1926, file: !1927, line: 446, baseType: !1938, size: 8, offset: 416)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1926, file: !1927, line: 447, baseType: !1938, size: 8, offset: 424)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1926, file: !1927, line: 448, baseType: !1938, size: 8, offset: 432)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1926, file: !1927, line: 449, baseType: !1938, size: 8, offset: 440)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1926, file: !1927, line: 450, baseType: !1938, size: 8, offset: 448)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1926, file: !1927, line: 451, baseType: !1938, size: 8, offset: 456)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1926, file: !1927, line: 452, baseType: !1938, size: 8, offset: 464)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1926, file: !1927, line: 453, baseType: !1938, size: 8, offset: 472)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1926, file: !1927, line: 454, baseType: !1938, size: 8, offset: 480)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1926, file: !1927, line: 455, baseType: !1938, size: 8, offset: 488)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1926, file: !1927, line: 456, baseType: !1938, size: 8, offset: 496)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1926, file: !1927, line: 457, baseType: !1938, size: 8, offset: 504)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1926, file: !1927, line: 458, baseType: !1938, size: 8, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1926, file: !1927, line: 459, baseType: !1938, size: 8, offset: 520)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1926, file: !1927, line: 460, baseType: !1938, size: 8, offset: 528)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1926, file: !1927, line: 461, baseType: !1938, size: 8, offset: 536)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1926, file: !1927, line: 462, baseType: !1938, size: 8, offset: 544)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1926, file: !1927, line: 463, baseType: !1938, size: 8, offset: 552)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1926, file: !1927, line: 464, baseType: !1938, size: 8, offset: 560)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1926, file: !1927, line: 465, baseType: !1938, size: 8, offset: 568)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1926, file: !1927, line: 466, baseType: !1938, size: 8, offset: 576)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1926, file: !1927, line: 467, baseType: !1938, size: 8, offset: 584)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1926, file: !1927, line: 468, baseType: !1938, size: 8, offset: 592)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1926, file: !1927, line: 469, baseType: !1938, size: 8, offset: 600)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1926, file: !1927, line: 470, baseType: !1938, size: 8, offset: 608)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1926, file: !1927, line: 471, baseType: !1938, size: 8, offset: 616)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1926, file: !1927, line: 472, baseType: !1938, size: 8, offset: 624)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1926, file: !1927, line: 473, baseType: !1938, size: 8, offset: 632)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1926, file: !1927, line: 474, baseType: !1938, size: 8, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1926, file: !1927, line: 475, baseType: !1938, size: 8, offset: 648)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1926, file: !1927, line: 476, baseType: !1938, size: 8, offset: 656)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1926, file: !1927, line: 477, baseType: !1938, size: 8, offset: 664)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1926, file: !1927, line: 478, baseType: !1938, size: 8, offset: 672)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1926, file: !1927, line: 479, baseType: !1938, size: 8, offset: 680)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1926, file: !1927, line: 480, baseType: !1938, size: 8, offset: 688)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1926, file: !1927, line: 481, baseType: !1938, size: 8, offset: 696)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1926, file: !1927, line: 482, baseType: !1938, size: 8, offset: 704)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1926, file: !1927, line: 483, baseType: !1938, size: 8, offset: 712)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1926, file: !1927, line: 484, baseType: !1938, size: 8, offset: 720)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1926, file: !1927, line: 485, baseType: !1938, size: 8, offset: 728)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1926, file: !1927, line: 486, baseType: !1938, size: 8, offset: 736)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1926, file: !1927, line: 487, baseType: !1938, size: 8, offset: 744)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1926, file: !1927, line: 488, baseType: !1938, size: 8, offset: 752)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1926, file: !1927, line: 489, baseType: !1938, size: 8, offset: 760)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1926, file: !1927, line: 490, baseType: !1938, size: 8, offset: 768)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1926, file: !1927, line: 491, baseType: !1938, size: 8, offset: 776)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1926, file: !1927, line: 492, baseType: !1938, size: 8, offset: 784)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1926, file: !1927, line: 493, baseType: !1938, size: 8, offset: 792)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1926, file: !1927, line: 494, baseType: !1938, size: 8, offset: 800)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1926, file: !1927, line: 495, baseType: !1938, size: 8, offset: 808)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1926, file: !1927, line: 496, baseType: !1938, size: 8, offset: 816)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1926, file: !1927, line: 497, baseType: !1938, size: 8, offset: 824)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1926, file: !1927, line: 498, baseType: !1938, size: 8, offset: 832)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1926, file: !1927, line: 499, baseType: !1938, size: 8, offset: 840)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1926, file: !1927, line: 500, baseType: !1938, size: 8, offset: 848)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1926, file: !1927, line: 501, baseType: !1938, size: 8, offset: 856)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1926, file: !1927, line: 502, baseType: !1938, size: 8, offset: 864)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1926, file: !1927, line: 503, baseType: !1938, size: 8, offset: 872)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1926, file: !1927, line: 504, baseType: !1938, size: 8, offset: 880)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1926, file: !1927, line: 505, baseType: !1938, size: 8, offset: 888)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1926, file: !1927, line: 506, baseType: !1938, size: 8, offset: 896)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1926, file: !1927, line: 507, baseType: !1938, size: 8, offset: 904)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1926, file: !1927, line: 508, baseType: !1938, size: 8, offset: 912)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1926, file: !1927, line: 509, baseType: !1938, size: 8, offset: 920)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1926, file: !1927, line: 510, baseType: !1938, size: 8, offset: 928)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1926, file: !1927, line: 511, baseType: !1938, size: 8, offset: 936)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1926, file: !1927, line: 512, baseType: !1938, size: 8, offset: 944)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1926, file: !1927, line: 513, baseType: !1938, size: 8, offset: 952)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1926, file: !1927, line: 514, baseType: !1938, size: 8, offset: 960)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1926, file: !1927, line: 515, baseType: !1938, size: 8, offset: 968)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1926, file: !1927, line: 516, baseType: !1938, size: 8, offset: 976)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1926, file: !1927, line: 517, baseType: !1938, size: 8, offset: 984)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1926, file: !1927, line: 518, baseType: !1938, size: 8, offset: 992)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1926, file: !1927, line: 519, baseType: !1938, size: 8, offset: 1000)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1926, file: !1927, line: 520, baseType: !1938, size: 8, offset: 1008)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1926, file: !1927, line: 521, baseType: !1938, size: 8, offset: 1016)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1926, file: !1927, line: 522, baseType: !1938, size: 8, offset: 1024)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1926, file: !1927, line: 523, baseType: !1938, size: 8, offset: 1032)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1926, file: !1927, line: 524, baseType: !1938, size: 8, offset: 1040)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1926, file: !1927, line: 525, baseType: !1938, size: 8, offset: 1048)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1926, file: !1927, line: 526, baseType: !1938, size: 8, offset: 1056)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1926, file: !1927, line: 527, baseType: !1938, size: 8, offset: 1064)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1926, file: !1927, line: 528, baseType: !1938, size: 8, offset: 1072)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1926, file: !1927, line: 529, baseType: !1938, size: 8, offset: 1080)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1926, file: !1927, line: 530, baseType: !1938, size: 8, offset: 1088)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1926, file: !1927, line: 531, baseType: !1938, size: 8, offset: 1096)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1926, file: !1927, line: 532, baseType: !1938, size: 8, offset: 1104)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1926, file: !1927, line: 533, baseType: !1938, size: 8, offset: 1112)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1926, file: !1927, line: 534, baseType: !1938, size: 8, offset: 1120)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1926, file: !1927, line: 535, baseType: !1938, size: 8, offset: 1128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1926, file: !1927, line: 536, baseType: !1938, size: 8, offset: 1136)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1926, file: !1927, line: 537, baseType: !1938, size: 8, offset: 1144)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1926, file: !1927, line: 538, baseType: !1938, size: 8, offset: 1152)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1926, file: !1927, line: 539, baseType: !1938, size: 8, offset: 1160)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1926, file: !1927, line: 540, baseType: !1938, size: 8, offset: 1168)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1926, file: !1927, line: 541, baseType: !1938, size: 8, offset: 1176)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1926, file: !1927, line: 542, baseType: !1938, size: 8, offset: 1184)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1926, file: !1927, line: 543, baseType: !1938, size: 8, offset: 1192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1926, file: !1927, line: 544, baseType: !1938, size: 8, offset: 1200)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1926, file: !1927, line: 545, baseType: !1938, size: 8, offset: 1208)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1926, file: !1927, line: 546, baseType: !1938, size: 8, offset: 1216)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1926, file: !1927, line: 547, baseType: !1938, size: 8, offset: 1224)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1926, file: !1927, line: 548, baseType: !1938, size: 8, offset: 1232)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1926, file: !1927, line: 549, baseType: !1938, size: 8, offset: 1240)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1926, file: !1927, line: 550, baseType: !1938, size: 8, offset: 1248)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1926, file: !1927, line: 551, baseType: !1938, size: 8, offset: 1256)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1926, file: !1927, line: 552, baseType: !1938, size: 8, offset: 1264)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1926, file: !1927, line: 553, baseType: !1938, size: 8, offset: 1272)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1926, file: !1927, line: 554, baseType: !1938, size: 8, offset: 1280)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1926, file: !1927, line: 555, baseType: !1938, size: 8, offset: 1288)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1926, file: !1927, line: 556, baseType: !1938, size: 8, offset: 1296)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1926, file: !1927, line: 557, baseType: !1938, size: 8, offset: 1304)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1926, file: !1927, line: 558, baseType: !1938, size: 8, offset: 1312)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1926, file: !1927, line: 559, baseType: !1938, size: 8, offset: 1320)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1926, file: !1927, line: 560, baseType: !1938, size: 8, offset: 1328)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1926, file: !1927, line: 561, baseType: !1938, size: 8, offset: 1336)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1926, file: !1927, line: 562, baseType: !1938, size: 8, offset: 1344)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1926, file: !1927, line: 563, baseType: !1938, size: 8, offset: 1352)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1926, file: !1927, line: 564, baseType: !1938, size: 8, offset: 1360)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1926, file: !1927, line: 565, baseType: !1938, size: 8, offset: 1368)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1926, file: !1927, line: 566, baseType: !1938, size: 8, offset: 1376)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1926, file: !1927, line: 567, baseType: !1938, size: 8, offset: 1384)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1926, file: !1927, line: 568, baseType: !1938, size: 8, offset: 1392)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1926, file: !1927, line: 569, baseType: !1938, size: 8, offset: 1400)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1926, file: !1927, line: 570, baseType: !1938, size: 8, offset: 1408)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1926, file: !1927, line: 571, baseType: !1938, size: 8, offset: 1416)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1926, file: !1927, line: 572, baseType: !1938, size: 8, offset: 1424)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1926, file: !1927, line: 573, baseType: !1938, size: 8, offset: 1432)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1926, file: !1927, line: 574, baseType: !1938, size: 8, offset: 1440)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !790, file: !146, line: 3405, baseType: !2094, size: 384)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !146, line: 3352, size: 384, elements: !2095)
!2095 = !{!2096, !2097}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2094, file: !146, line: 3353, baseType: !826, size: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2094, file: !146, line: 3356, baseType: !2098, size: 192, offset: 192)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1927, line: 578, size: 192, elements: !2099)
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2098, file: !1927, line: 580, baseType: !6, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2098, file: !1927, line: 581, baseType: !6, size: 32, offset: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2098, file: !1927, line: 582, baseType: !6, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2098, file: !1927, line: 583, baseType: !6, size: 32, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2098, file: !1927, line: 584, baseType: !754, size: 8, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2098, file: !1927, line: 585, baseType: !754, size: 8, offset: 136)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2098, file: !1927, line: 586, baseType: !754, size: 8, offset: 144)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2098, file: !1927, line: 587, baseType: !754, size: 8, offset: 152)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2098, file: !1927, line: 588, baseType: !754, size: 8, offset: 160)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2098, file: !1927, line: 589, baseType: !754, size: 8, offset: 168)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2098, file: !1927, line: 590, baseType: !754, size: 8, offset: 176)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !782, file: !10, line: 106, baseType: !787, size: 64, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !782, file: !10, line: 111, baseType: !787, size: 64, offset: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !778, file: !10, line: 136, baseType: !781, size: 64, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !775, file: !10, line: 151, baseType: !2115, size: 192)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !10, line: 139, size: 192, elements: !2116)
!2116 = !{!2117, !2118, !2119}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2115, file: !10, line: 141, baseType: !787, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2115, file: !10, line: 145, baseType: !787, size: 64, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2115, file: !10, line: 150, baseType: !6, size: 32, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !775, file: !10, line: 164, baseType: !2121, size: 128)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !10, line: 153, size: 128, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !2121, file: !10, line: 161, baseType: !787, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !2121, file: !10, line: 163, baseType: !912, size: 32, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !767, file: !10, line: 168, baseType: !2126, size: 64, offset: 448)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !10, line: 67, size: 320, elements: !2128)
!2128 = !{!2129, !2130, !2131, !2132, !2133}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !2127, file: !10, line: 70, baseType: !2126, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2127, file: !10, line: 73, baseType: !766, size: 64, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !2127, file: !10, line: 78, baseType: !787, size: 64, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !2127, file: !10, line: 85, baseType: !962, size: 64, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2127, file: !10, line: 88, baseType: !6, size: 32, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !767, file: !10, line: 173, baseType: !962, size: 64, offset: 512)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !767, file: !10, line: 173, baseType: !962, size: 64, offset: 576)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !767, file: !10, line: 177, baseType: !754, size: 8, offset: 640)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !762, file: !10, line: 200, baseType: !2138, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !10, line: 185, baseType: !2140)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !10, line: 185, size: 128, elements: !2141)
!2141 = !{!2142}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2140, file: !10, line: 185, baseType: !2143, size: 128)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !10, line: 184, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !10, line: 184, size: 128, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2144, file: !10, line: 184, baseType: !11, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2144, file: !10, line: 184, baseType: !11, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2144, file: !10, line: 184, baseType: !2149, size: 64, offset: 64)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 64, elements: !886)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !762, file: !10, line: 203, baseType: !2151, size: 64, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !10, line: 189, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !10, line: 189, size: 128, elements: !2154)
!2154 = !{!2155}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2153, file: !10, line: 189, baseType: !2156, size: 128)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !10, line: 188, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !10, line: 188, size: 128, elements: !2158)
!2158 = !{!2159, !2160, !2161}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2157, file: !10, line: 188, baseType: !11, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2157, file: !10, line: 188, baseType: !11, size: 32, offset: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2157, file: !10, line: 188, baseType: !2162, size: 64, offset: 64)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2163, size: 64, elements: !886)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !10, line: 180, baseType: !2126)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !762, file: !10, line: 207, baseType: !1575, size: 64, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !762, file: !10, line: 211, baseType: !1636, size: 64, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !762, file: !10, line: 220, baseType: !2167, size: 64, offset: 320)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !10, line: 217, size: 64, elements: !2168)
!2168 = !{!2169, !2170}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !2167, file: !10, line: 218, baseType: !1636, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2167, file: !10, line: 219, baseType: !2171, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !2173, line: 29, baseType: !2174)
!2173 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !2173, line: 29, size: 96, elements: !2175)
!2175 = !{!2176}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2174, file: !2173, line: 29, baseType: !2177, size: 96)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !2173, line: 27, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !2173, line: 27, size: 96, elements: !2179)
!2179 = !{!2180, !2181, !2182}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2178, file: !2173, line: 27, baseType: !11, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2178, file: !2173, line: 27, baseType: !11, size: 32, offset: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2178, file: !2173, line: 27, baseType: !2183, size: 8, offset: 64)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 8, elements: !886)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !2173, line: 26, baseType: !754)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "call_site_record_d", file: !3, line: 172, size: 128, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !2186, file: !3, line: 174, baseType: !962, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2186, file: !3, line: 175, baseType: !6, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !788, line: 59, baseType: !2191)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ttypes_filter", file: !3, line: 718, size: 128, elements: !2196)
!2196 = !{!2197, !2198}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !2195, file: !3, line: 719, baseType: !787, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2195, file: !3, line: 720, baseType: !6, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2204)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "action_record", file: !3, line: 2207, size: 96, elements: !2205)
!2205 = !{!2206, !2207, !2208}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2204, file: !3, line: 2209, baseType: !6, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2204, file: !3, line: 2210, baseType: !6, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2204, file: !3, line: 2211, baseType: !6, size: 32, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_call_site_record_gc", file: !1535, line: 143, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_call_site_record_gc", file: !1535, line: 143, size: 128, elements: !2214)
!2214 = !{!2215}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2213, file: !1535, line: 143, baseType: !2216, size: 128)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_call_site_record_base", file: !1535, line: 142, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_call_site_record_base", file: !1535, line: 142, size: 128, elements: !2218)
!2218 = !{!2219, !2220, !2221}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2217, file: !1535, line: 142, baseType: !11, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2217, file: !1535, line: 142, baseType: !11, size: 32, offset: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2217, file: !1535, line: 142, baseType: !2222, size: 64, offset: 64)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2223, size: 64, elements: !886)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "call_site_record", file: !1535, line: 141, baseType: !2185)
!2224 = !{!2225, !2226, !2254, !2256, !2258, !2335, !2349, !2352, !2357, !2362, !2364, !2366}
!2225 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "pass_rtl_eh", scope: !7, file: !3, line: 1470, type: !2228, isLocal: false, isDefinition: true)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !389, line: 162, size: 640, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2228, file: !389, line: 164, baseType: !2231, size: 640)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !389, line: 114, size: 640, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2239, !2243, !2245, !2246, !2247, !2249, !2250, !2251, !2252, !2253}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2231, file: !389, line: 117, baseType: !388, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2231, file: !389, line: 121, baseType: !759, size: 64, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2231, file: !389, line: 125, baseType: !2236, size: 64, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{!754}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2231, file: !389, line: 130, baseType: !2240, size: 64, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!11}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2231, file: !389, line: 133, baseType: !2244, size: 64, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2231, file: !389, line: 136, baseType: !2244, size: 64, offset: 320)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2231, file: !389, line: 139, baseType: !6, size: 32, offset: 384)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2231, file: !389, line: 143, baseType: !2248, size: 32, offset: 416)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !396, line: 80, baseType: !395)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2231, file: !389, line: 146, baseType: !11, size: 32, offset: 448)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2231, file: !389, line: 147, baseType: !11, size: 32, offset: 480)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2231, file: !389, line: 148, baseType: !11, size: 32, offset: 512)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2231, file: !389, line: 151, baseType: !11, size: 32, offset: 544)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2231, file: !389, line: 152, baseType: !11, size: 32, offset: 576)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "pass_set_nothrow_function_flags", scope: !7, file: !3, line: 1910, type: !2228, isLocal: false, isDefinition: true)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "pass_convert_to_eh_region_ranges", scope: !7, file: !3, line: 2661, type: !2228, isLocal: false, isDefinition: true)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "type_name", scope: !2260, file: !3, line: 3203, type: !2333, isLocal: true, isDefinition: true)
!2260 = distinct !DISubprogram(name: "dump_eh_tree", scope: !3, file: !3, line: 3199, type: !2261, scopeLine: 3200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2314)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{null, !2263, !1533}
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2265, line: 7, baseType: !2266)
!2265 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2267, line: 49, size: 1728, elements: !2268)
!2267 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2268 = !{!2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2284, !2286, !2287, !2288, !2291, !2293, !2294, !2295, !2298, !2300, !2303, !2306, !2307, !2308, !2309, !2310}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2266, file: !2267, line: 51, baseType: !6, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2266, file: !2267, line: 54, baseType: !756, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2266, file: !2267, line: 55, baseType: !756, size: 64, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2266, file: !2267, line: 56, baseType: !756, size: 64, offset: 192)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2266, file: !2267, line: 57, baseType: !756, size: 64, offset: 256)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2266, file: !2267, line: 58, baseType: !756, size: 64, offset: 320)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2266, file: !2267, line: 59, baseType: !756, size: 64, offset: 384)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2266, file: !2267, line: 60, baseType: !756, size: 64, offset: 448)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2266, file: !2267, line: 61, baseType: !756, size: 64, offset: 512)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2266, file: !2267, line: 64, baseType: !756, size: 64, offset: 576)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2266, file: !2267, line: 65, baseType: !756, size: 64, offset: 640)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2266, file: !2267, line: 66, baseType: !756, size: 64, offset: 704)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2266, file: !2267, line: 68, baseType: !2282, size: 64, offset: 768)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2267, line: 36, flags: DIFlagFwdDecl)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2266, file: !2267, line: 70, baseType: !2285, size: 64, offset: 832)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2266, file: !2267, line: 72, baseType: !6, size: 32, offset: 896)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2266, file: !2267, line: 73, baseType: !6, size: 32, offset: 928)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2266, file: !2267, line: 74, baseType: !2289, size: 64, offset: 960)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2290, line: 152, baseType: !843)
!2290 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2266, file: !2267, line: 77, baseType: !2292, size: 16, offset: 1024)
!2292 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2266, file: !2267, line: 78, baseType: !1938, size: 8, offset: 1040)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2266, file: !2267, line: 79, baseType: !885, size: 8, offset: 1048)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2266, file: !2267, line: 81, baseType: !2296, size: 64, offset: 1088)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2267, line: 43, baseType: null)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2266, file: !2267, line: 89, baseType: !2299, size: 64, offset: 1152)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2290, line: 153, baseType: !843)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2266, file: !2267, line: 91, baseType: !2301, size: 64, offset: 1216)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2267, line: 37, flags: DIFlagFwdDecl)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2266, file: !2267, line: 92, baseType: !2304, size: 64, offset: 1280)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2267, line: 38, flags: DIFlagFwdDecl)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2266, file: !2267, line: 93, baseType: !2285, size: 64, offset: 1344)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2266, file: !2267, line: 94, baseType: !758, size: 64, offset: 1408)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2266, file: !2267, line: 95, baseType: !1257, size: 64, offset: 1472)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2266, file: !2267, line: 96, baseType: !6, size: 32, offset: 1536)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2266, file: !2267, line: 98, baseType: !2311, size: 160, offset: 1568)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 160, elements: !2312)
!2312 = !{!2313}
!2313 = !DISubrange(count: 20)
!2314 = !{!2315, !2316, !2317, !2318, !2319, !2323, !2329}
!2315 = !DILocalVariable(name: "out", arg: 1, scope: !2260, file: !3, line: 3199, type: !2263)
!2316 = !DILocalVariable(name: "fun", arg: 2, scope: !2260, file: !3, line: 3199, type: !1533)
!2317 = !DILocalVariable(name: "i", scope: !2260, file: !3, line: 3201, type: !765)
!2318 = !DILocalVariable(name: "depth", scope: !2260, file: !3, line: 3202, type: !6)
!2319 = !DILocalVariable(name: "lp", scope: !2320, file: !3, line: 3219, type: !2163)
!2320 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 3218, column: 2)
!2321 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 3217, column: 11)
!2322 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 3213, column: 5)
!2323 = !DILocalVariable(name: "lab", scope: !2324, file: !3, line: 3245, type: !962)
!2324 = distinct !DILexicalBlock(scope: !2325, file: !3, line: 3244, column: 7)
!2325 = distinct !DILexicalBlock(scope: !2326, file: !3, line: 3243, column: 9)
!2326 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 3236, column: 3)
!2327 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 3234, column: 6)
!2328 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 3222, column: 8)
!2329 = !DILocalVariable(name: "c", scope: !2330, file: !3, line: 3265, type: !2332)
!2330 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 3264, column: 4)
!2331 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 3258, column: 2)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_catch", file: !10, line: 181, baseType: !781)
!2333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2334, size: 256, elements: !1053)
!2334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_except_h", scope: !7, file: !2337, line: 55, type: !2338, isLocal: false, isDefinition: true)
!2337 = !DIFile(filename: "./gt-except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2339, size: 960, elements: !861)
!2339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2341, line: 69, size: 320, elements: !2342)
!2341 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2342 = !{!2343, !2344, !2345, !2346, !2348}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2340, file: !2341, line: 70, baseType: !758, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2340, file: !2341, line: 71, baseType: !1257, size: 64, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2340, file: !2341, line: 72, baseType: !1257, size: 64, offset: 128)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2340, file: !2341, line: 73, baseType: !2347, size: 64, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2341, line: 65, baseType: !1593)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2340, file: !2341, line: 74, baseType: !2347, size: 64, offset: 256)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_except_h", scope: !7, file: !2337, line: 73, type: !2351, isLocal: false, isDefinition: true)
!2351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2339, size: 640, elements: !1029)
!2352 = !DIGlobalVariableExpression(var: !2353, expr: !DIExpression())
!2353 = distinct !DIGlobalVariable(name: "lang_protect_cleanup_actions", scope: !7, file: !3, line: 154, type: !2354, isLocal: false, isDefinition: true)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!787}
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "lang_eh_type_covers", scope: !7, file: !3, line: 157, type: !2359, isLocal: false, isDefinition: true)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!6, !787, !787}
!2362 = !DIGlobalVariableExpression(var: !2363, expr: !DIExpression())
!2363 = distinct !DIGlobalVariable(name: "call_site_base", scope: !7, file: !3, line: 159, type: !6, isLocal: true, isDefinition: true)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "type_to_runtime_map", scope: !7, file: !3, line: 161, type: !1575, isLocal: true, isDefinition: true)
!2366 = !DIGlobalVariableExpression(var: !2367, expr: !DIExpression())
!2367 = distinct !DIGlobalVariable(name: "sjlj_fc_type_node", scope: !7, file: !3, line: 164, type: !787, isLocal: true, isDefinition: true)
!2368 = !{!2369}
!2369 = !DILocalVariable(name: "do_warn", arg: 1, scope: !2, file: !3, line: 216, type: !6)
!2370 = !{i32 2, !"Dwarf Version", i32 4}
!2371 = !{i32 2, !"Debug Info Version", i32 3}
!2372 = !{i32 1, !"wchar_size", i32 4}
!2373 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2374 = distinct !DISubprogram(name: "vprintf", scope: !2375, file: !2375, line: 39, type: !2376, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2386)
!2375 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2376 = !DISubroutineType(types: !2377)
!2377 = !{!6, !2378, !2379}
!2378 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !759)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2381)
!2381 = !{!2382, !2383, !2384, !2385}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2380, file: !3, baseType: !11, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2380, file: !3, baseType: !11, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2380, file: !3, baseType: !758, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2380, file: !3, baseType: !758, size: 64, offset: 128)
!2386 = !{!2387, !2388}
!2387 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2374, file: !2375, line: 39, type: !2378)
!2388 = !DILocalVariable(name: "__arg", arg: 2, scope: !2374, file: !2375, line: 39, type: !2379)
!2389 = !DILocation(line: 0, scope: !2374)
!2390 = !DILocation(line: 41, column: 20, scope: !2374)
!2391 = !DILocation(line: 41, column: 10, scope: !2374)
!2392 = !DILocation(line: 41, column: 3, scope: !2374)
!2393 = distinct !DISubprogram(name: "getchar", scope: !2375, file: !2375, line: 47, type: !2394, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{!6}
!2396 = !{}
!2397 = !DILocation(line: 49, column: 16, scope: !2393)
!2398 = !DILocation(line: 49, column: 10, scope: !2393)
!2399 = !DILocation(line: 49, column: 3, scope: !2393)
!2400 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2375, file: !2375, line: 56, type: !2401, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2403)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!6, !2263}
!2403 = !{!2404}
!2404 = !DILocalVariable(name: "__fp", arg: 1, scope: !2400, file: !2375, line: 56, type: !2263)
!2405 = !DILocation(line: 0, scope: !2400)
!2406 = !DILocation(line: 58, column: 10, scope: !2400)
!2407 = !DILocation(line: 58, column: 3, scope: !2400)
!2408 = distinct !DISubprogram(name: "getc_unlocked", scope: !2375, file: !2375, line: 66, type: !2401, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2409)
!2409 = !{!2410}
!2410 = !DILocalVariable(name: "__fp", arg: 1, scope: !2408, file: !2375, line: 66, type: !2263)
!2411 = !DILocation(line: 0, scope: !2408)
!2412 = !DILocation(line: 68, column: 10, scope: !2408)
!2413 = !DILocation(line: 68, column: 3, scope: !2408)
!2414 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2375, file: !2375, line: 73, type: !2394, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!2415 = !DILocation(line: 75, column: 10, scope: !2414)
!2416 = !DILocation(line: 75, column: 3, scope: !2414)
!2417 = distinct !DISubprogram(name: "putchar", scope: !2375, file: !2375, line: 82, type: !4, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2418)
!2418 = !{!2419}
!2419 = !DILocalVariable(name: "__c", arg: 1, scope: !2417, file: !2375, line: 82, type: !6)
!2420 = !DILocation(line: 0, scope: !2417)
!2421 = !DILocation(line: 84, column: 21, scope: !2417)
!2422 = !DILocation(line: 84, column: 10, scope: !2417)
!2423 = !DILocation(line: 84, column: 3, scope: !2417)
!2424 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2375, file: !2375, line: 91, type: !2425, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2427)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!6, !6, !2263}
!2427 = !{!2428, !2429}
!2428 = !DILocalVariable(name: "__c", arg: 1, scope: !2424, file: !2375, line: 91, type: !6)
!2429 = !DILocalVariable(name: "__stream", arg: 2, scope: !2424, file: !2375, line: 91, type: !2263)
!2430 = !DILocation(line: 0, scope: !2424)
!2431 = !DILocation(line: 93, column: 10, scope: !2424)
!2432 = !DILocation(line: 93, column: 3, scope: !2424)
!2433 = distinct !DISubprogram(name: "putc_unlocked", scope: !2375, file: !2375, line: 101, type: !2425, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2434)
!2434 = !{!2435, !2436}
!2435 = !DILocalVariable(name: "__c", arg: 1, scope: !2433, file: !2375, line: 101, type: !6)
!2436 = !DILocalVariable(name: "__stream", arg: 2, scope: !2433, file: !2375, line: 101, type: !2263)
!2437 = !DILocation(line: 0, scope: !2433)
!2438 = !DILocation(line: 103, column: 10, scope: !2433)
!2439 = !DILocation(line: 103, column: 3, scope: !2433)
!2440 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2375, file: !2375, line: 108, type: !4, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2441)
!2441 = !{!2442}
!2442 = !DILocalVariable(name: "__c", arg: 1, scope: !2440, file: !2375, line: 108, type: !6)
!2443 = !DILocation(line: 0, scope: !2440)
!2444 = !DILocation(line: 110, column: 10, scope: !2440)
!2445 = !DILocation(line: 110, column: 3, scope: !2440)
!2446 = distinct !DISubprogram(name: "getline", scope: !2375, file: !2375, line: 118, type: !2447, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2451)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!2449, !755, !2450, !2263}
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2290, line: 193, baseType: !843)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!2451 = !{!2452, !2453, !2454}
!2452 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2446, file: !2375, line: 118, type: !755)
!2453 = !DILocalVariable(name: "__n", arg: 2, scope: !2446, file: !2375, line: 118, type: !2450)
!2454 = !DILocalVariable(name: "__stream", arg: 3, scope: !2446, file: !2375, line: 118, type: !2263)
!2455 = !DILocation(line: 0, scope: !2446)
!2456 = !DILocation(line: 120, column: 10, scope: !2446)
!2457 = !DILocation(line: 120, column: 3, scope: !2446)
!2458 = distinct !DISubprogram(name: "feof_unlocked", scope: !2375, file: !2375, line: 128, type: !2401, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2459)
!2459 = !{!2460}
!2460 = !DILocalVariable(name: "__stream", arg: 1, scope: !2458, file: !2375, line: 128, type: !2263)
!2461 = !DILocation(line: 0, scope: !2458)
!2462 = !DILocation(line: 130, column: 10, scope: !2458)
!2463 = !DILocation(line: 130, column: 3, scope: !2458)
!2464 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2375, file: !2375, line: 135, type: !2401, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2465)
!2465 = !{!2466}
!2466 = !DILocalVariable(name: "__stream", arg: 1, scope: !2464, file: !2375, line: 135, type: !2263)
!2467 = !DILocation(line: 0, scope: !2464)
!2468 = !DILocation(line: 137, column: 10, scope: !2464)
!2469 = !DILocation(line: 137, column: 3, scope: !2464)
!2470 = distinct !DISubprogram(name: "tolower", scope: !2471, file: !2471, line: 207, type: !4, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2472)
!2471 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2472 = !{!2473}
!2473 = !DILocalVariable(name: "__c", arg: 1, scope: !2470, file: !2471, line: 207, type: !6)
!2474 = !DILocation(line: 0, scope: !2470)
!2475 = !DILocation(line: 209, column: 22, scope: !2470)
!2476 = !DILocation(line: 209, column: 39, scope: !2470)
!2477 = !DILocation(line: 209, column: 38, scope: !2470)
!2478 = !DILocation(line: 209, column: 37, scope: !2470)
!2479 = !DILocation(line: 209, column: 10, scope: !2470)
!2480 = !DILocation(line: 209, column: 3, scope: !2470)
!2481 = distinct !DISubprogram(name: "toupper", scope: !2471, file: !2471, line: 213, type: !4, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2482)
!2482 = !{!2483}
!2483 = !DILocalVariable(name: "__c", arg: 1, scope: !2481, file: !2471, line: 213, type: !6)
!2484 = !DILocation(line: 0, scope: !2481)
!2485 = !DILocation(line: 215, column: 22, scope: !2481)
!2486 = !DILocation(line: 215, column: 39, scope: !2481)
!2487 = !DILocation(line: 215, column: 38, scope: !2481)
!2488 = !DILocation(line: 215, column: 37, scope: !2481)
!2489 = !DILocation(line: 215, column: 10, scope: !2481)
!2490 = !DILocation(line: 215, column: 3, scope: !2481)
!2491 = distinct !DISubprogram(name: "atoi", scope: !2492, file: !2492, line: 361, type: !2493, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2495)
!2492 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!6, !759}
!2495 = !{!2496}
!2496 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2491, file: !2492, line: 361, type: !759)
!2497 = !DILocation(line: 0, scope: !2491)
!2498 = !DILocation(line: 363, column: 16, scope: !2491)
!2499 = !DILocation(line: 363, column: 10, scope: !2491)
!2500 = !DILocation(line: 363, column: 3, scope: !2491)
!2501 = distinct !DISubprogram(name: "atol", scope: !2492, file: !2492, line: 366, type: !2502, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2504)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!843, !759}
!2504 = !{!2505}
!2505 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2501, file: !2492, line: 366, type: !759)
!2506 = !DILocation(line: 0, scope: !2501)
!2507 = !DILocation(line: 368, column: 10, scope: !2501)
!2508 = !DILocation(line: 368, column: 3, scope: !2501)
!2509 = distinct !DISubprogram(name: "atoll", scope: !2492, file: !2492, line: 373, type: !2510, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2513)
!2510 = !DISubroutineType(types: !2511)
!2511 = !{!2512, !759}
!2512 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2513 = !{!2514}
!2514 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2509, file: !2492, line: 373, type: !759)
!2515 = !DILocation(line: 0, scope: !2509)
!2516 = !DILocation(line: 375, column: 10, scope: !2509)
!2517 = !DILocation(line: 375, column: 3, scope: !2509)
!2518 = distinct !DISubprogram(name: "bsearch", scope: !2519, file: !2519, line: 20, type: !2520, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2523)
!2519 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!758, !1418, !1418, !1257, !1257, !2522}
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2492, line: 808, baseType: !1588)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533}
!2524 = !DILocalVariable(name: "__key", arg: 1, scope: !2518, file: !2519, line: 20, type: !1418)
!2525 = !DILocalVariable(name: "__base", arg: 2, scope: !2518, file: !2519, line: 20, type: !1418)
!2526 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2518, file: !2519, line: 20, type: !1257)
!2527 = !DILocalVariable(name: "__size", arg: 4, scope: !2518, file: !2519, line: 20, type: !1257)
!2528 = !DILocalVariable(name: "__compar", arg: 5, scope: !2518, file: !2519, line: 21, type: !2522)
!2529 = !DILocalVariable(name: "__l", scope: !2518, file: !2519, line: 23, type: !1257)
!2530 = !DILocalVariable(name: "__u", scope: !2518, file: !2519, line: 23, type: !1257)
!2531 = !DILocalVariable(name: "__idx", scope: !2518, file: !2519, line: 23, type: !1257)
!2532 = !DILocalVariable(name: "__p", scope: !2518, file: !2519, line: 24, type: !1418)
!2533 = !DILocalVariable(name: "__comparison", scope: !2518, file: !2519, line: 25, type: !6)
!2534 = !DILocation(line: 0, scope: !2518)
!2535 = !DILocation(line: 29, column: 3, scope: !2518)
!2536 = !DILocation(line: 27, column: 7, scope: !2518)
!2537 = !DILocation(line: 29, column: 14, scope: !2518)
!2538 = !DILocation(line: 31, column: 20, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2518, file: !2519, line: 30, column: 5)
!2540 = !DILocation(line: 31, column: 27, scope: !2539)
!2541 = !DILocation(line: 32, column: 56, scope: !2539)
!2542 = !DILocation(line: 32, column: 47, scope: !2539)
!2543 = !DILocation(line: 33, column: 22, scope: !2539)
!2544 = !DILocation(line: 34, column: 24, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2539, file: !2519, line: 34, column: 11)
!2546 = !DILocation(line: 34, column: 11, scope: !2539)
!2547 = !DILocation(line: 36, column: 29, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2545, file: !2519, line: 36, column: 16)
!2549 = !DILocation(line: 36, column: 16, scope: !2545)
!2550 = !DILocation(line: 37, column: 14, scope: !2548)
!2551 = distinct !{!2551, !2535, !2552}
!2552 = !DILocation(line: 40, column: 5, scope: !2518)
!2553 = !DILocation(line: 43, column: 1, scope: !2518)
!2554 = distinct !DISubprogram(name: "atof", scope: !2555, file: !2555, line: 25, type: !2556, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2559)
!2555 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!2558, !759}
!2558 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2559 = !{!2560}
!2560 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2554, file: !2555, line: 25, type: !759)
!2561 = !DILocation(line: 0, scope: !2554)
!2562 = !DILocation(line: 27, column: 10, scope: !2554)
!2563 = !DILocation(line: 27, column: 3, scope: !2554)
!2564 = distinct !DISubprogram(name: "strtoimax", scope: !2565, file: !2565, line: 324, type: !2566, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2572)
!2565 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!2568, !2378, !2571, !6}
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2569, line: 101, baseType: !2570)
!2569 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2290, line: 72, baseType: !843)
!2571 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !755)
!2572 = !{!2573, !2574, !2575}
!2573 = !DILocalVariable(name: "nptr", arg: 1, scope: !2564, file: !2565, line: 324, type: !2378)
!2574 = !DILocalVariable(name: "endptr", arg: 2, scope: !2564, file: !2565, line: 324, type: !2571)
!2575 = !DILocalVariable(name: "base", arg: 3, scope: !2564, file: !2565, line: 324, type: !6)
!2576 = !DILocation(line: 0, scope: !2564)
!2577 = !DILocation(line: 327, column: 10, scope: !2564)
!2578 = !DILocation(line: 327, column: 3, scope: !2564)
!2579 = distinct !DISubprogram(name: "strtoumax", scope: !2565, file: !2565, line: 336, type: !2580, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2584)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!2582, !2378, !2571, !6}
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2569, line: 102, baseType: !2583)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2290, line: 73, baseType: !841)
!2584 = !{!2585, !2586, !2587}
!2585 = !DILocalVariable(name: "nptr", arg: 1, scope: !2579, file: !2565, line: 336, type: !2378)
!2586 = !DILocalVariable(name: "endptr", arg: 2, scope: !2579, file: !2565, line: 336, type: !2571)
!2587 = !DILocalVariable(name: "base", arg: 3, scope: !2579, file: !2565, line: 336, type: !6)
!2588 = !DILocation(line: 0, scope: !2579)
!2589 = !DILocation(line: 339, column: 10, scope: !2579)
!2590 = !DILocation(line: 339, column: 3, scope: !2579)
!2591 = distinct !DISubprogram(name: "wcstoimax", scope: !2565, file: !2565, line: 348, type: !2592, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2601)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!2568, !2594, !2598, !6}
!2594 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2595)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2597)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2565, line: 34, baseType: !6)
!2598 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2599)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2601 = !{!2602, !2603, !2604}
!2602 = !DILocalVariable(name: "nptr", arg: 1, scope: !2591, file: !2565, line: 348, type: !2594)
!2603 = !DILocalVariable(name: "endptr", arg: 2, scope: !2591, file: !2565, line: 348, type: !2598)
!2604 = !DILocalVariable(name: "base", arg: 3, scope: !2591, file: !2565, line: 348, type: !6)
!2605 = !DILocation(line: 0, scope: !2591)
!2606 = !DILocation(line: 351, column: 10, scope: !2591)
!2607 = !DILocation(line: 351, column: 3, scope: !2591)
!2608 = distinct !DISubprogram(name: "wcstoumax", scope: !2565, file: !2565, line: 362, type: !2609, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2611)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!2582, !2594, !2598, !6}
!2611 = !{!2612, !2613, !2614}
!2612 = !DILocalVariable(name: "nptr", arg: 1, scope: !2608, file: !2565, line: 362, type: !2594)
!2613 = !DILocalVariable(name: "endptr", arg: 2, scope: !2608, file: !2565, line: 362, type: !2598)
!2614 = !DILocalVariable(name: "base", arg: 3, scope: !2608, file: !2565, line: 362, type: !6)
!2615 = !DILocation(line: 0, scope: !2608)
!2616 = !DILocation(line: 365, column: 10, scope: !2608)
!2617 = !DILocation(line: 365, column: 3, scope: !2608)
!2618 = distinct !DISubprogram(name: "stat", scope: !2619, file: !2619, line: 453, type: !2620, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2657)
!2619 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!6, !759, !2622}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2624, line: 46, size: 1152, elements: !2625)
!2624 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2625 = !{!2626, !2628, !2630, !2632, !2634, !2636, !2638, !2639, !2640, !2641, !2643, !2645, !2653, !2654, !2655}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2623, file: !2624, line: 48, baseType: !2627, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2290, line: 145, baseType: !841)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2623, file: !2624, line: 53, baseType: !2629, size: 64, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2290, line: 148, baseType: !841)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2623, file: !2624, line: 61, baseType: !2631, size: 64, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2290, line: 151, baseType: !841)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2623, file: !2624, line: 62, baseType: !2633, size: 32, offset: 192)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2290, line: 150, baseType: !11)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2623, file: !2624, line: 64, baseType: !2635, size: 32, offset: 224)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2290, line: 146, baseType: !11)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2623, file: !2624, line: 65, baseType: !2637, size: 32, offset: 256)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2290, line: 147, baseType: !11)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2623, file: !2624, line: 67, baseType: !6, size: 32, offset: 288)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2623, file: !2624, line: 69, baseType: !2627, size: 64, offset: 320)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2623, file: !2624, line: 74, baseType: !2289, size: 64, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2623, file: !2624, line: 78, baseType: !2642, size: 64, offset: 448)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2290, line: 174, baseType: !843)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2623, file: !2624, line: 80, baseType: !2644, size: 64, offset: 512)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2290, line: 179, baseType: !843)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2623, file: !2624, line: 91, baseType: !2646, size: 128, offset: 576)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2647, line: 10, size: 128, elements: !2648)
!2647 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2648 = !{!2649, !2651}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2646, file: !2647, line: 12, baseType: !2650, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2290, line: 160, baseType: !843)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2646, file: !2647, line: 16, baseType: !2652, size: 64, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2290, line: 196, baseType: !843)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2623, file: !2624, line: 92, baseType: !2646, size: 128, offset: 704)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2623, file: !2624, line: 93, baseType: !2646, size: 128, offset: 832)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2623, file: !2624, line: 106, baseType: !2656, size: 192, offset: 960)
!2656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2652, size: 192, elements: !861)
!2657 = !{!2658, !2659}
!2658 = !DILocalVariable(name: "__path", arg: 1, scope: !2618, file: !2619, line: 453, type: !759)
!2659 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2618, file: !2619, line: 453, type: !2622)
!2660 = !DILocation(line: 0, scope: !2618)
!2661 = !DILocation(line: 455, column: 10, scope: !2618)
!2662 = !DILocation(line: 455, column: 3, scope: !2618)
!2663 = distinct !DISubprogram(name: "lstat", scope: !2619, file: !2619, line: 460, type: !2620, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2664)
!2664 = !{!2665, !2666}
!2665 = !DILocalVariable(name: "__path", arg: 1, scope: !2663, file: !2619, line: 460, type: !759)
!2666 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2663, file: !2619, line: 460, type: !2622)
!2667 = !DILocation(line: 0, scope: !2663)
!2668 = !DILocation(line: 462, column: 10, scope: !2663)
!2669 = !DILocation(line: 462, column: 3, scope: !2663)
!2670 = distinct !DISubprogram(name: "fstat", scope: !2619, file: !2619, line: 467, type: !2671, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2673)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{!6, !6, !2622}
!2673 = !{!2674, !2675}
!2674 = !DILocalVariable(name: "__fd", arg: 1, scope: !2670, file: !2619, line: 467, type: !6)
!2675 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2670, file: !2619, line: 467, type: !2622)
!2676 = !DILocation(line: 0, scope: !2670)
!2677 = !DILocation(line: 469, column: 10, scope: !2670)
!2678 = !DILocation(line: 469, column: 3, scope: !2670)
!2679 = distinct !DISubprogram(name: "fstatat", scope: !2619, file: !2619, line: 474, type: !2680, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2682)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!6, !6, !759, !2622, !6}
!2682 = !{!2683, !2684, !2685, !2686}
!2683 = !DILocalVariable(name: "__fd", arg: 1, scope: !2679, file: !2619, line: 474, type: !6)
!2684 = !DILocalVariable(name: "__filename", arg: 2, scope: !2679, file: !2619, line: 474, type: !759)
!2685 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2679, file: !2619, line: 474, type: !2622)
!2686 = !DILocalVariable(name: "__flag", arg: 4, scope: !2679, file: !2619, line: 474, type: !6)
!2687 = !DILocation(line: 0, scope: !2679)
!2688 = !DILocation(line: 477, column: 10, scope: !2679)
!2689 = !DILocation(line: 477, column: 3, scope: !2679)
!2690 = distinct !DISubprogram(name: "mknod", scope: !2619, file: !2619, line: 483, type: !2691, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2693)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!6, !759, !2633, !2627}
!2693 = !{!2694, !2695, !2696}
!2694 = !DILocalVariable(name: "__path", arg: 1, scope: !2690, file: !2619, line: 483, type: !759)
!2695 = !DILocalVariable(name: "__mode", arg: 2, scope: !2690, file: !2619, line: 483, type: !2633)
!2696 = !DILocalVariable(name: "__dev", arg: 3, scope: !2690, file: !2619, line: 483, type: !2627)
!2697 = !DILocation(line: 0, scope: !2690)
!2698 = !DILocation(line: 485, column: 10, scope: !2690)
!2699 = !DILocation(line: 485, column: 3, scope: !2690)
!2700 = distinct !DISubprogram(name: "mknodat", scope: !2619, file: !2619, line: 491, type: !2701, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2703)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{!6, !6, !759, !2633, !2627}
!2703 = !{!2704, !2705, !2706, !2707}
!2704 = !DILocalVariable(name: "__fd", arg: 1, scope: !2700, file: !2619, line: 491, type: !6)
!2705 = !DILocalVariable(name: "__path", arg: 2, scope: !2700, file: !2619, line: 491, type: !759)
!2706 = !DILocalVariable(name: "__mode", arg: 3, scope: !2700, file: !2619, line: 491, type: !2633)
!2707 = !DILocalVariable(name: "__dev", arg: 4, scope: !2700, file: !2619, line: 491, type: !2627)
!2708 = !DILocation(line: 0, scope: !2700)
!2709 = !DILocation(line: 494, column: 10, scope: !2700)
!2710 = !DILocation(line: 494, column: 3, scope: !2700)
!2711 = distinct !DISubprogram(name: "stat64", scope: !2619, file: !2619, line: 502, type: !2712, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2734)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!6, !759, !2714}
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2624, line: 119, size: 1152, elements: !2716)
!2716 = !{!2717, !2718, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2730, !2731, !2732, !2733}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2715, file: !2624, line: 121, baseType: !2627, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2715, file: !2624, line: 123, baseType: !2719, size: 64, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2290, line: 149, baseType: !841)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2715, file: !2624, line: 124, baseType: !2631, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2715, file: !2624, line: 125, baseType: !2633, size: 32, offset: 192)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2715, file: !2624, line: 132, baseType: !2635, size: 32, offset: 224)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2715, file: !2624, line: 133, baseType: !2637, size: 32, offset: 256)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2715, file: !2624, line: 135, baseType: !6, size: 32, offset: 288)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2715, file: !2624, line: 136, baseType: !2627, size: 64, offset: 320)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2715, file: !2624, line: 137, baseType: !2289, size: 64, offset: 384)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2715, file: !2624, line: 143, baseType: !2642, size: 64, offset: 448)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2715, file: !2624, line: 144, baseType: !2729, size: 64, offset: 512)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2290, line: 180, baseType: !843)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2715, file: !2624, line: 152, baseType: !2646, size: 128, offset: 576)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2715, file: !2624, line: 153, baseType: !2646, size: 128, offset: 704)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2715, file: !2624, line: 154, baseType: !2646, size: 128, offset: 832)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2715, file: !2624, line: 164, baseType: !2656, size: 192, offset: 960)
!2734 = !{!2735, !2736}
!2735 = !DILocalVariable(name: "__path", arg: 1, scope: !2711, file: !2619, line: 502, type: !759)
!2736 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2711, file: !2619, line: 502, type: !2714)
!2737 = !DILocation(line: 0, scope: !2711)
!2738 = !DILocation(line: 504, column: 10, scope: !2711)
!2739 = !DILocation(line: 504, column: 3, scope: !2711)
!2740 = distinct !DISubprogram(name: "lstat64", scope: !2619, file: !2619, line: 509, type: !2712, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2741)
!2741 = !{!2742, !2743}
!2742 = !DILocalVariable(name: "__path", arg: 1, scope: !2740, file: !2619, line: 509, type: !759)
!2743 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2740, file: !2619, line: 509, type: !2714)
!2744 = !DILocation(line: 0, scope: !2740)
!2745 = !DILocation(line: 511, column: 10, scope: !2740)
!2746 = !DILocation(line: 511, column: 3, scope: !2740)
!2747 = distinct !DISubprogram(name: "fstat64", scope: !2619, file: !2619, line: 516, type: !2748, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2750)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!6, !6, !2714}
!2750 = !{!2751, !2752}
!2751 = !DILocalVariable(name: "__fd", arg: 1, scope: !2747, file: !2619, line: 516, type: !6)
!2752 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2747, file: !2619, line: 516, type: !2714)
!2753 = !DILocation(line: 0, scope: !2747)
!2754 = !DILocation(line: 518, column: 10, scope: !2747)
!2755 = !DILocation(line: 518, column: 3, scope: !2747)
!2756 = distinct !DISubprogram(name: "fstatat64", scope: !2619, file: !2619, line: 523, type: !2757, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2759)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!6, !6, !759, !2714, !6}
!2759 = !{!2760, !2761, !2762, !2763}
!2760 = !DILocalVariable(name: "__fd", arg: 1, scope: !2756, file: !2619, line: 523, type: !6)
!2761 = !DILocalVariable(name: "__filename", arg: 2, scope: !2756, file: !2619, line: 523, type: !759)
!2762 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2756, file: !2619, line: 523, type: !2714)
!2763 = !DILocalVariable(name: "__flag", arg: 4, scope: !2756, file: !2619, line: 523, type: !6)
!2764 = !DILocation(line: 0, scope: !2756)
!2765 = !DILocation(line: 526, column: 10, scope: !2756)
!2766 = !DILocation(line: 526, column: 3, scope: !2756)
!2767 = !DILocation(line: 0, scope: !2)
!2768 = !DILocation(line: 218, column: 9, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2, file: !3, line: 218, column: 7)
!2770 = !DILocation(line: 218, column: 7, scope: !2)
!2771 = !DILocation(line: 221, column: 13, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 221, column: 11)
!2773 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 219, column: 5)
!2774 = !DILocation(line: 221, column: 23, scope: !2772)
!2775 = !DILocation(line: 221, column: 20, scope: !2772)
!2776 = !DILocation(line: 223, column: 4, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 222, column: 2)
!2778 = !DILocation(line: 224, column: 11, scope: !2777)
!2779 = !DILocation(line: 225, column: 2, scope: !2777)
!2780 = !DILocation(line: 229, column: 1, scope: !2)
!2781 = distinct !DISubprogram(name: "init_eh", scope: !3, file: !3, line: 233, type: !2782, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{null}
!2784 = !DILocation(line: 235, column: 9, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 235, column: 7)
!2786 = !DILocation(line: 235, column: 7, scope: !2781)
!2787 = !DILocation(line: 238, column: 25, scope: !2781)
!2788 = !DILocation(line: 238, column: 23, scope: !2781)
!2789 = !DILocation(line: 329, column: 1, scope: !2781)
!2790 = distinct !DISubprogram(name: "t2r_hash", scope: !3, file: !3, line: 675, type: !1583, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2791)
!2791 = !{!2792, !2793}
!2792 = !DILocalVariable(name: "pentry", arg: 1, scope: !2790, file: !3, line: 675, type: !1418)
!2793 = !DILocalVariable(name: "entry", scope: !2790, file: !3, line: 677, type: !2794)
!2794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2190)
!2795 = !DILocation(line: 0, scope: !2790)
!2796 = !DILocation(line: 678, column: 10, scope: !2790)
!2797 = !DILocation(line: 678, column: 3, scope: !2790)
!2798 = distinct !DISubprogram(name: "t2r_eq", scope: !3, file: !3, line: 666, type: !1589, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2799)
!2799 = !{!2800, !2801, !2802, !2803}
!2800 = !DILocalVariable(name: "pentry", arg: 1, scope: !2798, file: !3, line: 666, type: !1418)
!2801 = !DILocalVariable(name: "pdata", arg: 2, scope: !2798, file: !3, line: 666, type: !1418)
!2802 = !DILocalVariable(name: "entry", scope: !2798, file: !3, line: 668, type: !2794)
!2803 = !DILocalVariable(name: "data", scope: !2798, file: !3, line: 669, type: !2794)
!2804 = !DILocation(line: 0, scope: !2798)
!2805 = !DILocation(line: 669, column: 27, scope: !2798)
!2806 = !DILocation(line: 671, column: 10, scope: !2798)
!2807 = !DILocation(line: 671, column: 31, scope: !2798)
!2808 = !DILocation(line: 671, column: 3, scope: !2798)
!2809 = distinct !DISubprogram(name: "init_eh_for_function", scope: !3, file: !3, line: 332, type: !2782, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!2810 = !DILocation(line: 334, column: 14, scope: !2809)
!2811 = !DILocation(line: 334, column: 3, scope: !2809)
!2812 = !DILocation(line: 334, column: 12, scope: !2809)
!2813 = !DILocation(line: 337, column: 3, scope: !2809)
!2814 = !DILocation(line: 338, column: 3, scope: !2809)
!2815 = !DILocation(line: 339, column: 1, scope: !2809)
!2816 = distinct !DISubprogram(name: "VEC_eh_region_gc_safe_push", scope: !10, file: !10, line: 185, type: !2817, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2821)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!2819, !2820, !765}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2821 = !{!2822, !2823}
!2822 = !DILocalVariable(name: "vec_", arg: 1, scope: !2816, file: !10, line: 185, type: !2820)
!2823 = !DILocalVariable(name: "obj_", arg: 2, scope: !2816, file: !10, line: 185, type: !765)
!2824 = !DILocation(line: 0, scope: !2816)
!2825 = !DILocation(line: 185, column: 1, scope: !2816)
!2826 = distinct !DISubprogram(name: "VEC_eh_landing_pad_gc_safe_push", scope: !10, file: !10, line: 189, type: !2827, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2831)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!2829, !2830, !2163}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2831 = !{!2832, !2833}
!2832 = !DILocalVariable(name: "vec_", arg: 1, scope: !2826, file: !10, line: 189, type: !2830)
!2833 = !DILocalVariable(name: "obj_", arg: 2, scope: !2826, file: !10, line: 189, type: !2163)
!2834 = !DILocation(line: 0, scope: !2826)
!2835 = !DILocation(line: 189, column: 1, scope: !2826)
!2836 = distinct !DISubprogram(name: "gen_eh_region_cleanup", scope: !3, file: !3, line: 380, type: !2837, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2839)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!765, !765}
!2839 = !{!2840}
!2840 = !DILocalVariable(name: "outer", arg: 1, scope: !2836, file: !3, line: 380, type: !765)
!2841 = !DILocation(line: 0, scope: !2836)
!2842 = !DILocation(line: 382, column: 10, scope: !2836)
!2843 = !DILocation(line: 382, column: 3, scope: !2836)
!2844 = distinct !DISubprogram(name: "gen_eh_region", scope: !3, file: !3, line: 346, type: !2845, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2847)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!765, !9, !765}
!2847 = !{!2848, !2849, !2850}
!2848 = !DILocalVariable(name: "type", arg: 1, scope: !2844, file: !3, line: 346, type: !9)
!2849 = !DILocalVariable(name: "outer", arg: 2, scope: !2844, file: !3, line: 346, type: !765)
!2850 = !DILocalVariable(name: "new_eh", scope: !2844, file: !3, line: 348, type: !765)
!2851 = !DILocation(line: 0, scope: !2844)
!2852 = !DILocation(line: 355, column: 12, scope: !2844)
!2853 = !DILocation(line: 356, column: 11, scope: !2844)
!2854 = !DILocation(line: 356, column: 16, scope: !2844)
!2855 = !DILocation(line: 357, column: 11, scope: !2844)
!2856 = !DILocation(line: 357, column: 17, scope: !2844)
!2857 = !DILocation(line: 358, column: 7, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 358, column: 7)
!2859 = !DILocation(line: 358, column: 7, scope: !2844)
!2860 = !DILocation(line: 360, column: 34, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 359, column: 5)
!2862 = !DILocation(line: 360, column: 15, scope: !2861)
!2863 = !DILocation(line: 360, column: 25, scope: !2861)
!2864 = !DILocation(line: 361, column: 20, scope: !2861)
!2865 = !DILocation(line: 362, column: 5, scope: !2861)
!2866 = !DILocation(line: 365, column: 27, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 364, column: 5)
!2868 = !DILocation(line: 365, column: 33, scope: !2867)
!2869 = !DILocation(line: 365, column: 37, scope: !2867)
!2870 = !DILocation(line: 365, column: 15, scope: !2867)
!2871 = !DILocation(line: 365, column: 25, scope: !2867)
!2872 = !DILocation(line: 366, column: 13, scope: !2867)
!2873 = !DILocation(line: 366, column: 29, scope: !2867)
!2874 = !DILocation(line: 369, column: 19, scope: !2844)
!2875 = !DILocation(line: 369, column: 11, scope: !2844)
!2876 = !DILocation(line: 369, column: 17, scope: !2844)
!2877 = !DILocation(line: 370, column: 3, scope: !2844)
!2878 = !DILocation(line: 373, column: 15, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 373, column: 7)
!2880 = !DILocation(line: 373, column: 7, scope: !2879)
!2881 = !DILocation(line: 373, column: 33, scope: !2879)
!2882 = !DILocation(line: 373, column: 47, scope: !2879)
!2883 = !DILocation(line: 373, column: 36, scope: !2879)
!2884 = !DILocation(line: 373, column: 7, scope: !2844)
!2885 = !DILocation(line: 374, column: 13, scope: !2879)
!2886 = !DILocation(line: 374, column: 33, scope: !2879)
!2887 = !DILocation(line: 374, column: 5, scope: !2879)
!2888 = !DILocation(line: 376, column: 3, scope: !2844)
!2889 = distinct !DISubprogram(name: "gen_eh_region_try", scope: !3, file: !3, line: 386, type: !2837, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2890)
!2890 = !{!2891}
!2891 = !DILocalVariable(name: "outer", arg: 1, scope: !2889, file: !3, line: 386, type: !765)
!2892 = !DILocation(line: 0, scope: !2889)
!2893 = !DILocation(line: 388, column: 10, scope: !2889)
!2894 = !DILocation(line: 388, column: 3, scope: !2889)
!2895 = distinct !DISubprogram(name: "gen_eh_region_catch", scope: !3, file: !3, line: 392, type: !2896, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2898)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!2332, !765, !787}
!2898 = !{!2899, !2900, !2901, !2902, !2903, !2904}
!2899 = !DILocalVariable(name: "t", arg: 1, scope: !2895, file: !3, line: 392, type: !765)
!2900 = !DILocalVariable(name: "type_or_list", arg: 2, scope: !2895, file: !3, line: 392, type: !787)
!2901 = !DILocalVariable(name: "c", scope: !2895, file: !3, line: 394, type: !2332)
!2902 = !DILocalVariable(name: "l", scope: !2895, file: !3, line: 394, type: !2332)
!2903 = !DILocalVariable(name: "type_list", scope: !2895, file: !3, line: 395, type: !787)
!2904 = !DILocalVariable(name: "type_node", scope: !2895, file: !3, line: 395, type: !787)
!2905 = !DILocation(line: 0, scope: !2895)
!2906 = !DILocation(line: 397, column: 3, scope: !2895)
!2907 = !DILocation(line: 402, column: 7, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 402, column: 7)
!2909 = !DILocation(line: 402, column: 7, scope: !2895)
!2910 = !DILocation(line: 404, column: 11, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 404, column: 11)
!2912 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 403, column: 5)
!2913 = !DILocation(line: 404, column: 36, scope: !2911)
!2914 = !DILocation(line: 404, column: 11, scope: !2912)
!2915 = !DILocation(line: 405, column: 14, scope: !2911)
!2916 = !DILocation(line: 405, column: 2, scope: !2911)
!2917 = !DILocation(line: 408, column: 7, scope: !2912)
!2918 = !DILocation(line: 0, scope: !2912)
!2919 = !DILocation(line: 408, column: 7, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 408, column: 7)
!2921 = !DILocation(line: 409, column: 24, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 408, column: 7)
!2923 = !DILocation(line: 409, column: 2, scope: !2922)
!2924 = !DILocation(line: 408, column: 37, scope: !2922)
!2925 = !DILocation(line: 408, column: 7, scope: !2922)
!2926 = distinct !{!2926, !2919, !2927}
!2927 = !DILocation(line: 409, column: 46, scope: !2920)
!2928 = !DILocation(line: 412, column: 7, scope: !2895)
!2929 = !DILocation(line: 413, column: 6, scope: !2895)
!2930 = !DILocation(line: 413, column: 16, scope: !2895)
!2931 = !DILocation(line: 414, column: 19, scope: !2895)
!2932 = !DILocation(line: 415, column: 6, scope: !2895)
!2933 = !DILocation(line: 415, column: 17, scope: !2895)
!2934 = !DILocation(line: 416, column: 7, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 416, column: 7)
!2936 = !DILocation(line: 416, column: 7, scope: !2895)
!2937 = !DILocation(line: 417, column: 19, scope: !2935)
!2938 = !DILocation(line: 417, column: 5, scope: !2935)
!2939 = !DILocation(line: 419, column: 8, scope: !2935)
!2940 = !DILocation(line: 419, column: 29, scope: !2935)
!2941 = !DILocation(line: 420, column: 26, scope: !2895)
!2942 = !DILocation(line: 422, column: 3, scope: !2895)
!2943 = distinct !DISubprogram(name: "add_type_for_runtime", scope: !3, file: !3, line: 682, type: !2944, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2946)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !787}
!2946 = !{!2947, !2948, !2949}
!2947 = !DILocalVariable(name: "type", arg: 1, scope: !2943, file: !3, line: 682, type: !787)
!2948 = !DILocalVariable(name: "slot", scope: !2943, file: !3, line: 684, type: !1146)
!2949 = !DILocalVariable(name: "runtime", scope: !2950, file: !3, line: 694, type: !787)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 693, column: 5)
!2951 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 692, column: 7)
!2952 = !DILocation(line: 0, scope: !2943)
!2953 = !DILocation(line: 687, column: 7, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 687, column: 7)
!2955 = !DILocation(line: 687, column: 24, scope: !2954)
!2956 = !DILocation(line: 687, column: 7, scope: !2943)
!2957 = !DILocation(line: 690, column: 45, scope: !2943)
!2958 = !DILocation(line: 690, column: 66, scope: !2943)
!2959 = !DILocation(line: 691, column: 10, scope: !2943)
!2960 = !DILocation(line: 690, column: 19, scope: !2943)
!2961 = !DILocation(line: 690, column: 10, scope: !2943)
!2962 = !DILocation(line: 692, column: 7, scope: !2951)
!2963 = !DILocation(line: 692, column: 13, scope: !2951)
!2964 = !DILocation(line: 692, column: 7, scope: !2943)
!2965 = !DILocation(line: 694, column: 33, scope: !2950)
!2966 = !DILocation(line: 694, column: 22, scope: !2950)
!2967 = !DILocation(line: 0, scope: !2950)
!2968 = !DILocation(line: 695, column: 15, scope: !2950)
!2969 = !DILocation(line: 695, column: 13, scope: !2950)
!2970 = !DILocation(line: 696, column: 5, scope: !2950)
!2971 = !DILocation(line: 697, column: 1, scope: !2943)
!2972 = distinct !DISubprogram(name: "gen_eh_region_allowed", scope: !3, file: !3, line: 426, type: !2973, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2975)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!765, !765, !787}
!2975 = !{!2976, !2977, !2978}
!2976 = !DILocalVariable(name: "outer", arg: 1, scope: !2972, file: !3, line: 426, type: !765)
!2977 = !DILocalVariable(name: "allowed", arg: 2, scope: !2972, file: !3, line: 426, type: !787)
!2978 = !DILocalVariable(name: "region", scope: !2972, file: !3, line: 428, type: !765)
!2979 = !DILocation(line: 0, scope: !2972)
!2980 = !DILocation(line: 428, column: 22, scope: !2972)
!2981 = !DILocation(line: 429, column: 21, scope: !2972)
!2982 = !DILocation(line: 429, column: 31, scope: !2972)
!2983 = !DILocation(line: 431, column: 3, scope: !2972)
!2984 = !DILocation(line: 431, column: 3, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 431, column: 3)
!2986 = !DILocation(line: 432, column: 27, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 431, column: 3)
!2988 = !DILocation(line: 432, column: 5, scope: !2987)
!2989 = !DILocation(line: 431, column: 30, scope: !2987)
!2990 = !DILocation(line: 431, column: 3, scope: !2987)
!2991 = distinct !{!2991, !2984, !2992}
!2992 = !DILocation(line: 432, column: 47, scope: !2985)
!2993 = !DILocation(line: 434, column: 3, scope: !2972)
!2994 = distinct !DISubprogram(name: "gen_eh_region_must_not_throw", scope: !3, file: !3, line: 438, type: !2837, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2995)
!2995 = !{!2996}
!2996 = !DILocalVariable(name: "outer", arg: 1, scope: !2994, file: !3, line: 438, type: !765)
!2997 = !DILocation(line: 0, scope: !2994)
!2998 = !DILocation(line: 440, column: 10, scope: !2994)
!2999 = !DILocation(line: 440, column: 3, scope: !2994)
!3000 = distinct !DISubprogram(name: "gen_eh_landing_pad", scope: !3, file: !3, line: 444, type: !3001, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3003)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!2163, !765}
!3003 = !{!3004, !3005}
!3004 = !DILocalVariable(name: "region", arg: 1, scope: !3000, file: !3, line: 444, type: !765)
!3005 = !DILocalVariable(name: "lp", scope: !3000, file: !3, line: 446, type: !2163)
!3006 = !DILocation(line: 0, scope: !3000)
!3007 = !DILocation(line: 446, column: 23, scope: !3000)
!3008 = !DILocation(line: 448, column: 25, scope: !3000)
!3009 = !DILocation(line: 448, column: 15, scope: !3000)
!3010 = !DILocation(line: 449, column: 7, scope: !3000)
!3011 = !DILocation(line: 449, column: 14, scope: !3000)
!3012 = !DILocation(line: 450, column: 15, scope: !3000)
!3013 = !DILocation(line: 450, column: 7, scope: !3000)
!3014 = !DILocation(line: 450, column: 13, scope: !3000)
!3015 = !DILocation(line: 451, column: 24, scope: !3000)
!3016 = !DILocation(line: 453, column: 3, scope: !3000)
!3017 = !DILocation(line: 455, column: 3, scope: !3000)
!3018 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_length", scope: !10, file: !10, line: 188, type: !3019, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3023)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!11, !3021}
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2156)
!3023 = !{!3024}
!3024 = !DILocalVariable(name: "vec_", arg: 1, scope: !3018, file: !10, line: 188, type: !3021)
!3025 = !DILocation(line: 0, scope: !3018)
!3026 = !DILocation(line: 188, column: 1, scope: !3018)
!3027 = distinct !DISubprogram(name: "get_eh_region_from_number_fn", scope: !3, file: !3, line: 459, type: !3028, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3030)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!765, !1533, !6}
!3030 = !{!3031, !3032}
!3031 = !DILocalVariable(name: "ifun", arg: 1, scope: !3027, file: !3, line: 459, type: !1533)
!3032 = !DILocalVariable(name: "i", arg: 2, scope: !3027, file: !3, line: 459, type: !6)
!3033 = !DILocation(line: 0, scope: !3027)
!3034 = !DILocation(line: 461, column: 10, scope: !3027)
!3035 = !DILocation(line: 461, column: 3, scope: !3027)
!3036 = distinct !DISubprogram(name: "VEC_eh_region_base_index", scope: !10, file: !10, line: 184, type: !3037, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3041)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!765, !3039, !11}
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!3041 = !{!3042, !3043}
!3042 = !DILocalVariable(name: "vec_", arg: 1, scope: !3036, file: !10, line: 184, type: !3039)
!3043 = !DILocalVariable(name: "ix_", arg: 2, scope: !3036, file: !10, line: 184, type: !11)
!3044 = !DILocation(line: 0, scope: !3036)
!3045 = !DILocation(line: 184, column: 1, scope: !3036)
!3046 = distinct !DISubprogram(name: "get_eh_region_from_number", scope: !3, file: !3, line: 465, type: !3047, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3049)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!765, !6}
!3049 = !{!3050}
!3050 = !DILocalVariable(name: "i", arg: 1, scope: !3046, file: !3, line: 465, type: !6)
!3051 = !DILocation(line: 0, scope: !3046)
!3052 = !DILocation(line: 467, column: 40, scope: !3046)
!3053 = !DILocation(line: 467, column: 10, scope: !3046)
!3054 = !DILocation(line: 467, column: 3, scope: !3046)
!3055 = distinct !DISubprogram(name: "get_eh_landing_pad_from_number_fn", scope: !3, file: !3, line: 471, type: !3056, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3058)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!2163, !1533, !6}
!3058 = !{!3059, !3060}
!3059 = !DILocalVariable(name: "ifun", arg: 1, scope: !3055, file: !3, line: 471, type: !1533)
!3060 = !DILocalVariable(name: "i", arg: 2, scope: !3055, file: !3, line: 471, type: !6)
!3061 = !DILocation(line: 0, scope: !3055)
!3062 = !DILocation(line: 473, column: 10, scope: !3055)
!3063 = !DILocation(line: 473, column: 3, scope: !3055)
!3064 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_index", scope: !10, file: !10, line: 188, type: !3065, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3067)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{!2163, !3021, !11}
!3067 = !{!3068, !3069}
!3068 = !DILocalVariable(name: "vec_", arg: 1, scope: !3064, file: !10, line: 188, type: !3021)
!3069 = !DILocalVariable(name: "ix_", arg: 2, scope: !3064, file: !10, line: 188, type: !11)
!3070 = !DILocation(line: 0, scope: !3064)
!3071 = !DILocation(line: 188, column: 1, scope: !3064)
!3072 = distinct !DISubprogram(name: "get_eh_landing_pad_from_number", scope: !3, file: !3, line: 477, type: !3073, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3075)
!3073 = !DISubroutineType(types: !3074)
!3074 = !{!2163, !6}
!3075 = !{!3076}
!3076 = !DILocalVariable(name: "i", arg: 1, scope: !3072, file: !3, line: 477, type: !6)
!3077 = !DILocation(line: 0, scope: !3072)
!3078 = !DILocation(line: 479, column: 45, scope: !3072)
!3079 = !DILocation(line: 479, column: 10, scope: !3072)
!3080 = !DILocation(line: 479, column: 3, scope: !3072)
!3081 = distinct !DISubprogram(name: "get_eh_region_from_lp_number_fn", scope: !3, file: !3, line: 483, type: !3028, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3082)
!3082 = !{!3083, !3084, !3085}
!3083 = !DILocalVariable(name: "ifun", arg: 1, scope: !3081, file: !3, line: 483, type: !1533)
!3084 = !DILocalVariable(name: "i", arg: 2, scope: !3081, file: !3, line: 483, type: !6)
!3085 = !DILocalVariable(name: "lp", scope: !3086, file: !3, line: 491, type: !2163)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 490, column: 5)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 487, column: 12)
!3088 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 485, column: 7)
!3089 = !DILocation(line: 0, scope: !3081)
!3090 = !DILocation(line: 485, column: 9, scope: !3088)
!3091 = !DILocation(line: 485, column: 7, scope: !3081)
!3092 = !DILocation(line: 486, column: 12, scope: !3088)
!3093 = !DILocation(line: 486, column: 5, scope: !3088)
!3094 = !DILocation(line: 487, column: 14, scope: !3087)
!3095 = !DILocation(line: 487, column: 12, scope: !3088)
!3096 = !DILocation(line: 492, column: 12, scope: !3086)
!3097 = !DILocation(line: 0, scope: !3086)
!3098 = !DILocation(line: 493, column: 18, scope: !3086)
!3099 = !DILocation(line: 0, scope: !3088)
!3100 = !DILocation(line: 495, column: 1, scope: !3081)
!3101 = distinct !DISubprogram(name: "get_eh_region_from_lp_number", scope: !3, file: !3, line: 498, type: !3047, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3102)
!3102 = !{!3103}
!3103 = !DILocalVariable(name: "i", arg: 1, scope: !3101, file: !3, line: 498, type: !6)
!3104 = !DILocation(line: 0, scope: !3101)
!3105 = !DILocation(line: 500, column: 43, scope: !3101)
!3106 = !DILocation(line: 500, column: 10, scope: !3101)
!3107 = !DILocation(line: 500, column: 3, scope: !3101)
!3108 = distinct !DISubprogram(name: "current_function_has_exception_handlers", scope: !3, file: !3, line: 506, type: !2237, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!3109 = !DILocation(line: 508, column: 10, scope: !3108)
!3110 = !DILocation(line: 508, column: 16, scope: !3108)
!3111 = !DILocation(line: 508, column: 20, scope: !3108)
!3112 = !DILocation(line: 508, column: 32, scope: !3108)
!3113 = !DILocation(line: 508, column: 3, scope: !3108)
!3114 = distinct !DISubprogram(name: "duplicate_eh_regions", scope: !3, file: !3, line: 598, type: !3115, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3121)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!1662, !1533, !765, !6, !3117, !758}
!3117 = !DIDerivedType(tag: DW_TAG_typedef, name: "duplicate_eh_regions_map", file: !10, line: 253, baseType: !3118)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{!787, !787, !758}
!3121 = !{!3122, !3123, !3124, !3125, !3126, !3127, !3133, !3134}
!3122 = !DILocalVariable(name: "ifun", arg: 1, scope: !3114, file: !3, line: 598, type: !1533)
!3123 = !DILocalVariable(name: "copy_region", arg: 2, scope: !3114, file: !3, line: 599, type: !765)
!3124 = !DILocalVariable(name: "outer_lp", arg: 3, scope: !3114, file: !3, line: 599, type: !6)
!3125 = !DILocalVariable(name: "map", arg: 4, scope: !3114, file: !3, line: 600, type: !3117)
!3126 = !DILocalVariable(name: "map_data", arg: 5, scope: !3114, file: !3, line: 600, type: !758)
!3127 = !DILocalVariable(name: "data", scope: !3114, file: !3, line: 602, type: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "duplicate_eh_regions_data", file: !3, line: 514, size: 192, elements: !3129)
!3129 = !{!3130, !3131, !3132}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "label_map", scope: !3128, file: !3, line: 516, baseType: !3117, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "label_map_data", scope: !3128, file: !3, line: 517, baseType: !758, size: 64, offset: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "eh_map", scope: !3128, file: !3, line: 518, baseType: !1662, size: 64, offset: 128)
!3133 = !DILocalVariable(name: "outer_region", scope: !3114, file: !3, line: 603, type: !765)
!3134 = !DILocalVariable(name: "r", scope: !3135, file: !3, line: 620, type: !765)
!3135 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 619, column: 5)
!3136 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 616, column: 7)
!3137 = !DILocation(line: 0, scope: !3114)
!3138 = !DILocation(line: 602, column: 3, scope: !3114)
!3139 = !DILocation(line: 609, column: 8, scope: !3114)
!3140 = !DILocation(line: 609, column: 18, scope: !3114)
!3141 = !DILocation(line: 610, column: 8, scope: !3114)
!3142 = !DILocation(line: 610, column: 23, scope: !3114)
!3143 = !DILocation(line: 611, column: 17, scope: !3114)
!3144 = !DILocation(line: 611, column: 8, scope: !3114)
!3145 = !DILocation(line: 611, column: 15, scope: !3114)
!3146 = !DILocation(line: 613, column: 18, scope: !3114)
!3147 = !DILocation(line: 616, column: 7, scope: !3136)
!3148 = !DILocation(line: 616, column: 7, scope: !3114)
!3149 = !DILocation(line: 617, column: 5, scope: !3136)
!3150 = !DILocation(line: 621, column: 22, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 621, column: 7)
!3152 = !DILocation(line: 621, column: 26, scope: !3151)
!3153 = !DILocation(line: 621, column: 12, scope: !3151)
!3154 = !DILocation(line: 0, scope: !3151)
!3155 = !DILocation(line: 0, scope: !3135)
!3156 = !DILocation(line: 621, column: 7, scope: !3151)
!3157 = !DILocation(line: 622, column: 2, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 621, column: 7)
!3159 = !DILocation(line: 621, column: 50, scope: !3158)
!3160 = !DILocation(line: 621, column: 7, scope: !3158)
!3161 = distinct !{!3161, !3156, !3162}
!3162 = !DILocation(line: 622, column: 48, scope: !3151)
!3163 = !DILocation(line: 629, column: 15, scope: !3114)
!3164 = !DILocation(line: 630, column: 1, scope: !3114)
!3165 = !DILocation(line: 629, column: 3, scope: !3114)
!3166 = distinct !DISubprogram(name: "duplicate_eh_regions_1", scope: !3, file: !3, line: 522, type: !3167, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3170)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{null, !3169, !765, !765}
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3170 = !{!3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3181}
!3171 = !DILocalVariable(name: "data", arg: 1, scope: !3166, file: !3, line: 522, type: !3169)
!3172 = !DILocalVariable(name: "old_r", arg: 2, scope: !3166, file: !3, line: 523, type: !765)
!3173 = !DILocalVariable(name: "outer", arg: 3, scope: !3166, file: !3, line: 523, type: !765)
!3174 = !DILocalVariable(name: "old_lp", scope: !3166, file: !3, line: 525, type: !2163)
!3175 = !DILocalVariable(name: "new_lp", scope: !3166, file: !3, line: 525, type: !2163)
!3176 = !DILocalVariable(name: "new_r", scope: !3166, file: !3, line: 526, type: !765)
!3177 = !DILocalVariable(name: "slot", scope: !3166, file: !3, line: 527, type: !1597)
!3178 = !DILocalVariable(name: "oc", scope: !3179, file: !3, line: 541, type: !2332)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !3, line: 540, column: 7)
!3180 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 535, column: 5)
!3181 = !DILocalVariable(name: "nc", scope: !3179, file: !3, line: 541, type: !2332)
!3182 = !DILocation(line: 0, scope: !3166)
!3183 = !DILocation(line: 529, column: 33, scope: !3166)
!3184 = !DILocation(line: 529, column: 11, scope: !3166)
!3185 = !DILocation(line: 530, column: 36, scope: !3166)
!3186 = !DILocation(line: 530, column: 44, scope: !3166)
!3187 = !DILocation(line: 530, column: 10, scope: !3166)
!3188 = !DILocation(line: 531, column: 3, scope: !3166)
!3189 = !DILocation(line: 532, column: 9, scope: !3166)
!3190 = !DILocation(line: 534, column: 18, scope: !3166)
!3191 = !DILocation(line: 534, column: 3, scope: !3166)
!3192 = !DILocation(line: 542, column: 19, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 542, column: 2)
!3194 = !DILocation(line: 542, column: 28, scope: !3193)
!3195 = !DILocation(line: 0, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 543, column: 4)
!3197 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 542, column: 2)
!3198 = !DILocation(line: 542, column: 7, scope: !3193)
!3199 = !DILocation(line: 0, scope: !3193)
!3200 = !DILocation(line: 0, scope: !3179)
!3201 = !DILocation(line: 542, column: 2, scope: !3193)
!3202 = !DILocation(line: 546, column: 6, scope: !3196)
!3203 = !DILocation(line: 547, column: 43, scope: !3196)
!3204 = !DILocation(line: 547, column: 11, scope: !3196)
!3205 = !DILocation(line: 548, column: 24, scope: !3196)
!3206 = !DILocation(line: 548, column: 39, scope: !3196)
!3207 = !DILocation(line: 548, column: 52, scope: !3196)
!3208 = !DILocation(line: 548, column: 18, scope: !3196)
!3209 = !DILocation(line: 548, column: 10, scope: !3196)
!3210 = !DILocation(line: 548, column: 16, scope: !3196)
!3211 = !DILocation(line: 542, column: 55, scope: !3197)
!3212 = !DILocation(line: 542, column: 2, scope: !3197)
!3213 = distinct !{!3213, !3201, !3214}
!3214 = !DILocation(line: 549, column: 4, scope: !3193)
!3215 = !DILocation(line: 554, column: 53, scope: !3180)
!3216 = !DILocation(line: 554, column: 14, scope: !3180)
!3217 = !DILocation(line: 554, column: 34, scope: !3180)
!3218 = !DILocation(line: 555, column: 28, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3180, file: !3, line: 555, column: 11)
!3220 = !DILocation(line: 555, column: 11, scope: !3219)
!3221 = !DILocation(line: 555, column: 11, scope: !3180)
!3222 = !DILocation(line: 557, column: 14, scope: !3219)
!3223 = !DILocation(line: 557, column: 55, scope: !3219)
!3224 = !DILocation(line: 557, column: 8, scope: !3219)
!3225 = !DILocation(line: 556, column: 19, scope: !3219)
!3226 = !DILocation(line: 557, column: 6, scope: !3219)
!3227 = !DILocation(line: 556, column: 2, scope: !3219)
!3228 = !DILocation(line: 559, column: 19, scope: !3219)
!3229 = !DILocation(line: 559, column: 25, scope: !3219)
!3230 = !DILocation(line: 563, column: 14, scope: !3180)
!3231 = !DILocation(line: 563, column: 40, scope: !3180)
!3232 = !DILocation(line: 563, column: 42, scope: !3180)
!3233 = !DILocation(line: 564, column: 7, scope: !3180)
!3234 = !DILocation(line: 567, column: 24, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 567, column: 3)
!3236 = !DILocation(line: 0, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 568, column: 5)
!3238 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 567, column: 3)
!3239 = !DILocation(line: 567, column: 8, scope: !3235)
!3240 = !DILocation(line: 0, scope: !3235)
!3241 = !DILocation(line: 567, column: 3, scope: !3235)
!3242 = !DILocation(line: 570, column: 19, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 570, column: 11)
!3244 = !DILocation(line: 570, column: 36, scope: !3243)
!3245 = !DILocation(line: 570, column: 11, scope: !3237)
!3246 = !DILocation(line: 573, column: 16, scope: !3237)
!3247 = !DILocation(line: 574, column: 40, scope: !3237)
!3248 = !DILocation(line: 574, column: 48, scope: !3237)
!3249 = !DILocation(line: 574, column: 14, scope: !3237)
!3250 = !DILocation(line: 575, column: 7, scope: !3237)
!3251 = !DILocation(line: 576, column: 13, scope: !3237)
!3252 = !DILocation(line: 579, column: 10, scope: !3237)
!3253 = !DILocation(line: 579, column: 29, scope: !3237)
!3254 = !DILocation(line: 579, column: 53, scope: !3237)
!3255 = !DILocation(line: 579, column: 4, scope: !3237)
!3256 = !DILocation(line: 578, column: 15, scope: !3237)
!3257 = !DILocation(line: 579, column: 2, scope: !3237)
!3258 = !DILocation(line: 580, column: 62, scope: !3237)
!3259 = !DILocation(line: 580, column: 7, scope: !3237)
!3260 = !DILocation(line: 580, column: 52, scope: !3237)
!3261 = !DILocation(line: 581, column: 5, scope: !3237)
!3262 = !DILocation(line: 567, column: 64, scope: !3238)
!3263 = !DILocation(line: 567, column: 3, scope: !3238)
!3264 = distinct !{!3264, !3241, !3265}
!3265 = !DILocation(line: 581, column: 5, scope: !3235)
!3266 = !DILocation(line: 584, column: 39, scope: !3166)
!3267 = !DILocation(line: 584, column: 10, scope: !3166)
!3268 = !DILocation(line: 584, column: 30, scope: !3166)
!3269 = !DILocation(line: 586, column: 23, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 586, column: 3)
!3271 = !DILocation(line: 586, column: 8, scope: !3270)
!3272 = !DILocation(line: 0, scope: !3270)
!3273 = !DILocation(line: 586, column: 3, scope: !3270)
!3274 = !DILocation(line: 587, column: 5, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 586, column: 3)
!3276 = !DILocation(line: 586, column: 53, scope: !3275)
!3277 = !DILocation(line: 586, column: 3, scope: !3275)
!3278 = distinct !{!3278, !3273, !3279}
!3279 = !DILocation(line: 587, column: 47, scope: !3270)
!3280 = !DILocation(line: 588, column: 1, scope: !3166)
!3281 = distinct !DISubprogram(name: "eh_region_outermost", scope: !3, file: !3, line: 635, type: !3282, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3284)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!765, !1533, !765, !765}
!3284 = !{!3285, !3286, !3287, !3288}
!3285 = !DILocalVariable(name: "ifun", arg: 1, scope: !3281, file: !3, line: 635, type: !1533)
!3286 = !DILocalVariable(name: "region_a", arg: 2, scope: !3281, file: !3, line: 635, type: !765)
!3287 = !DILocalVariable(name: "region_b", arg: 3, scope: !3281, file: !3, line: 636, type: !765)
!3288 = !DILocalVariable(name: "b_outer", scope: !3281, file: !3, line: 638, type: !3289)
!3289 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !3290, line: 45, baseType: !3291)
!3290 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !3290, line: 39, size: 192, elements: !3293)
!3293 = !{!3294, !3295, !3296, !3297}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !3292, file: !3290, line: 41, baseType: !753, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !3292, file: !3290, line: 42, baseType: !11, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3292, file: !3290, line: 43, baseType: !11, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !3292, file: !3290, line: 44, baseType: !3298, size: 64, offset: 128)
!3298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !841, size: 64, elements: !886)
!3299 = !DILocation(line: 0, scope: !3281)
!3300 = !DILocation(line: 640, column: 3, scope: !3281)
!3301 = !DILocation(line: 641, column: 3, scope: !3281)
!3302 = !DILocation(line: 643, column: 28, scope: !3281)
!3303 = !DILocation(line: 643, column: 13, scope: !3281)
!3304 = !DILocation(line: 644, column: 3, scope: !3281)
!3305 = !DILocation(line: 646, column: 3, scope: !3281)
!3306 = !DILocation(line: 648, column: 35, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 647, column: 5)
!3308 = !DILocation(line: 648, column: 7, scope: !3307)
!3309 = !DILocation(line: 649, column: 28, scope: !3307)
!3310 = !DILocation(line: 650, column: 5, scope: !3307)
!3311 = distinct !{!3311, !3305, !3312}
!3312 = !DILocation(line: 651, column: 18, scope: !3281)
!3313 = !DILocation(line: 653, column: 3, scope: !3281)
!3314 = !DILocation(line: 655, column: 11, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 655, column: 11)
!3316 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 654, column: 5)
!3317 = !DILocation(line: 655, column: 11, scope: !3316)
!3318 = !DILocation(line: 657, column: 28, scope: !3316)
!3319 = !DILocation(line: 658, column: 5, scope: !3316)
!3320 = distinct !{!3320, !3313, !3321}
!3321 = !DILocation(line: 659, column: 18, scope: !3281)
!3322 = !DILocation(line: 661, column: 3, scope: !3281)
!3323 = !DILocation(line: 662, column: 3, scope: !3281)
!3324 = distinct !DISubprogram(name: "VEC_eh_region_base_length", scope: !10, file: !10, line: 184, type: !3325, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3327)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!11, !3039}
!3327 = !{!3328}
!3328 = !DILocalVariable(name: "vec_", arg: 1, scope: !3324, file: !10, line: 184, type: !3039)
!3329 = !DILocation(line: 0, scope: !3324)
!3330 = !DILocation(line: 184, column: 1, scope: !3324)
!3331 = distinct !DISubprogram(name: "SET_BIT", scope: !3290, file: !3290, line: 63, type: !3332, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3334)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{null, !3289, !11}
!3334 = !{!3335, !3336, !3337}
!3335 = !DILocalVariable(name: "map", arg: 1, scope: !3331, file: !3290, line: 63, type: !3289)
!3336 = !DILocalVariable(name: "bitno", arg: 2, scope: !3331, file: !3290, line: 63, type: !11)
!3337 = !DILocalVariable(name: "oldbit", scope: !3338, file: !3290, line: 67, type: !754)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !3290, line: 66, column: 5)
!3339 = distinct !DILexicalBlock(scope: !3331, file: !3290, line: 65, column: 7)
!3340 = !DILocation(line: 0, scope: !3331)
!3341 = !DILocation(line: 65, column: 12, scope: !3339)
!3342 = !DILocation(line: 65, column: 7, scope: !3339)
!3343 = !DILocation(line: 65, column: 7, scope: !3331)
!3344 = !DILocation(line: 73, column: 40, scope: !3331)
!3345 = !DILocation(line: 73, column: 29, scope: !3331)
!3346 = !DILocation(line: 72, column: 19, scope: !3331)
!3347 = !DILocation(line: 72, column: 3, scope: !3331)
!3348 = !DILocation(line: 68, column: 16, scope: !3338)
!3349 = !DILocation(line: 69, column: 12, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3338, file: !3290, line: 69, column: 11)
!3351 = !DILocation(line: 69, column: 11, scope: !3338)
!3352 = !DILocation(line: 70, column: 2, scope: !3350)
!3353 = !DILocation(line: 70, column: 41, scope: !3350)
!3354 = !DILocation(line: 73, column: 5, scope: !3331)
!3355 = !DILocation(line: 74, column: 1, scope: !3331)
!3356 = distinct !DISubprogram(name: "lookup_type_for_runtime", scope: !3, file: !3, line: 700, type: !3357, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3359)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!787, !787}
!3359 = !{!3360, !3361}
!3360 = !DILocalVariable(name: "type", arg: 1, scope: !3356, file: !3, line: 700, type: !787)
!3361 = !DILocalVariable(name: "slot", scope: !3356, file: !3, line: 702, type: !1146)
!3362 = !DILocation(line: 0, scope: !3356)
!3363 = !DILocation(line: 705, column: 7, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 705, column: 7)
!3365 = !DILocation(line: 705, column: 24, scope: !3364)
!3366 = !DILocation(line: 705, column: 7, scope: !3356)
!3367 = !DILocation(line: 708, column: 45, scope: !3356)
!3368 = !DILocation(line: 708, column: 66, scope: !3356)
!3369 = !DILocation(line: 709, column: 10, scope: !3356)
!3370 = !DILocation(line: 708, column: 19, scope: !3356)
!3371 = !DILocation(line: 712, column: 10, scope: !3356)
!3372 = !DILocation(line: 712, column: 3, scope: !3356)
!3373 = !DILocation(line: 713, column: 1, scope: !3356)
!3374 = distinct !DISubprogram(name: "assign_filter_values", scope: !3, file: !3, line: 855, type: !2782, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3375)
!3375 = !{!3376, !3377, !3378, !3379, !3380, !3381, !3391, !3395, !3396, !3398}
!3376 = !DILocalVariable(name: "i", scope: !3374, file: !3, line: 857, type: !6)
!3377 = !DILocalVariable(name: "ttypes", scope: !3374, file: !3, line: 858, type: !1575)
!3378 = !DILocalVariable(name: "ehspec", scope: !3374, file: !3, line: 858, type: !1575)
!3379 = !DILocalVariable(name: "r", scope: !3374, file: !3, line: 859, type: !765)
!3380 = !DILocalVariable(name: "c", scope: !3374, file: !3, line: 860, type: !2332)
!3381 = !DILocalVariable(name: "tp_node", scope: !3382, file: !3, line: 889, type: !787)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 886, column: 3)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 885, column: 12)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 880, column: 6)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 879, column: 4)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 879, column: 4)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 877, column: 2)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 872, column: 5)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 871, column: 3)
!3390 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 871, column: 3)
!3391 = !DILocalVariable(name: "flt", scope: !3392, file: !3, line: 893, type: !6)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 892, column: 7)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 891, column: 5)
!3394 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 891, column: 5)
!3395 = !DILocalVariable(name: "flt_node", scope: !3392, file: !3, line: 894, type: !787)
!3396 = !DILocalVariable(name: "flt", scope: !3397, file: !3, line: 904, type: !6)
!3397 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 901, column: 3)
!3398 = !DILocalVariable(name: "flt_node", scope: !3397, file: !3, line: 905, type: !787)
!3399 = !DILocation(line: 859, column: 3, scope: !3374)
!3400 = !DILocation(line: 862, column: 26, scope: !3374)
!3401 = !DILocation(line: 862, column: 3, scope: !3374)
!3402 = !DILocation(line: 862, column: 9, scope: !3374)
!3403 = !DILocation(line: 862, column: 13, scope: !3374)
!3404 = !DILocation(line: 862, column: 24, scope: !3374)
!3405 = !DILocation(line: 863, column: 15, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 863, column: 7)
!3407 = !DILocation(line: 863, column: 7, scope: !3406)
!3408 = !DILocation(line: 863, column: 7, scope: !3374)
!3409 = !DILocation(line: 864, column: 38, scope: !3406)
!3410 = !DILocation(line: 864, column: 5, scope: !3406)
!3411 = !DILocation(line: 864, column: 11, scope: !3406)
!3412 = !DILocation(line: 864, column: 27, scope: !3406)
!3413 = !DILocation(line: 864, column: 36, scope: !3406)
!3414 = !DILocation(line: 866, column: 35, scope: !3406)
!3415 = !DILocation(line: 866, column: 5, scope: !3406)
!3416 = !DILocation(line: 866, column: 11, scope: !3406)
!3417 = !DILocation(line: 866, column: 15, scope: !3406)
!3418 = !DILocation(line: 866, column: 27, scope: !3406)
!3419 = !DILocation(line: 866, column: 33, scope: !3406)
!3420 = !DILocation(line: 868, column: 12, scope: !3374)
!3421 = !DILocation(line: 0, scope: !3374)
!3422 = !DILocation(line: 869, column: 12, scope: !3374)
!3423 = !DILocation(line: 871, column: 8, scope: !3390)
!3424 = !DILocation(line: 0, scope: !3390)
!3425 = !DILocation(line: 871, column: 15, scope: !3389)
!3426 = !DILocation(line: 871, column: 3, scope: !3390)
!3427 = !DILocation(line: 873, column: 11, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 873, column: 11)
!3429 = !DILocation(line: 873, column: 13, scope: !3428)
!3430 = !DILocation(line: 873, column: 11, scope: !3388)
!3431 = !DILocation(line: 876, column: 18, scope: !3388)
!3432 = !DILocation(line: 876, column: 7, scope: !3388)
!3433 = !DILocation(line: 879, column: 16, scope: !3386)
!3434 = !DILocation(line: 879, column: 25, scope: !3386)
!3435 = !DILocation(line: 879, column: 9, scope: !3386)
!3436 = !DILocation(line: 0, scope: !3386)
!3437 = !DILocation(line: 879, column: 4, scope: !3386)
!3438 = !DILocation(line: 883, column: 11, scope: !3384)
!3439 = !DILocation(line: 883, column: 23, scope: !3384)
!3440 = !DILocation(line: 885, column: 15, scope: !3383)
!3441 = !DILocation(line: 885, column: 25, scope: !3383)
!3442 = !DILocation(line: 885, column: 12, scope: !3384)
!3443 = !DILocation(line: 891, column: 5, scope: !3382)
!3444 = !DILocation(line: 0, scope: !3382)
!3445 = !DILocation(line: 891, column: 5, scope: !3394)
!3446 = !DILocation(line: 893, column: 45, scope: !3392)
!3447 = !DILocation(line: 893, column: 19, scope: !3392)
!3448 = !DILocation(line: 0, scope: !3392)
!3449 = !DILocation(line: 894, column: 51, scope: !3392)
!3450 = !DILocation(line: 894, column: 25, scope: !3392)
!3451 = !DILocation(line: 897, column: 6, scope: !3392)
!3452 = !DILocation(line: 897, column: 4, scope: !3392)
!3453 = !DILocation(line: 891, column: 32, scope: !3393)
!3454 = !DILocation(line: 891, column: 5, scope: !3393)
!3455 = distinct !{!3455, !3445, !3456}
!3456 = !DILocation(line: 898, column: 7, scope: !3394)
!3457 = !DILocation(line: 904, column: 15, scope: !3397)
!3458 = !DILocation(line: 0, scope: !3397)
!3459 = !DILocation(line: 905, column: 47, scope: !3397)
!3460 = !DILocation(line: 905, column: 21, scope: !3397)
!3461 = !DILocation(line: 908, column: 9, scope: !3397)
!3462 = !DILocation(line: 908, column: 7, scope: !3397)
!3463 = !DILocation(line: 879, column: 49, scope: !3385)
!3464 = !DILocation(line: 879, column: 4, scope: !3385)
!3465 = distinct !{!3465, !3437, !3466}
!3466 = !DILocation(line: 910, column: 6, scope: !3386)
!3467 = !DILocation(line: 915, column: 55, scope: !3387)
!3468 = !DILocation(line: 915, column: 8, scope: !3387)
!3469 = !DILocation(line: 914, column: 4, scope: !3387)
!3470 = !DILocation(line: 914, column: 17, scope: !3387)
!3471 = !DILocation(line: 915, column: 6, scope: !3387)
!3472 = !DILocation(line: 916, column: 4, scope: !3387)
!3473 = !DILocation(line: 871, column: 70, scope: !3389)
!3474 = !DILocation(line: 871, column: 3, scope: !3389)
!3475 = distinct !{!3475, !3426, !3476}
!3476 = !DILocation(line: 921, column: 5, scope: !3390)
!3477 = !DILocation(line: 923, column: 3, scope: !3374)
!3478 = !DILocation(line: 924, column: 3, scope: !3374)
!3479 = !DILocation(line: 925, column: 1, scope: !3374)
!3480 = distinct !DISubprogram(name: "VEC_tree_gc_alloc", scope: !146, file: !146, line: 183, type: !3481, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3483)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!1636, !6}
!3483 = !{!3484}
!3484 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3480, file: !146, line: 183, type: !6)
!3485 = !DILocation(line: 0, scope: !3480)
!3486 = !DILocation(line: 183, column: 1, scope: !3480)
!3487 = distinct !DISubprogram(name: "VEC_uchar_gc_alloc", scope: !2173, file: !2173, line: 29, type: !3488, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3490)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!2171, !6}
!3490 = !{!3491}
!3491 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3487, file: !2173, line: 29, type: !6)
!3492 = !DILocation(line: 0, scope: !3487)
!3493 = !DILocation(line: 29, column: 1, scope: !3487)
!3494 = distinct !DISubprogram(name: "ttypes_filter_hash", scope: !3, file: !3, line: 737, type: !1583, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3495)
!3495 = !{!3496, !3497}
!3496 = !DILocalVariable(name: "pentry", arg: 1, scope: !3494, file: !3, line: 737, type: !1418)
!3497 = !DILocalVariable(name: "entry", scope: !3494, file: !3, line: 739, type: !2193)
!3498 = !DILocation(line: 0, scope: !3494)
!3499 = !DILocation(line: 740, column: 10, scope: !3494)
!3500 = !DILocation(line: 740, column: 3, scope: !3494)
!3501 = distinct !DISubprogram(name: "ttypes_filter_eq", scope: !3, file: !3, line: 727, type: !1589, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3502)
!3502 = !{!3503, !3504, !3505, !3507}
!3503 = !DILocalVariable(name: "pentry", arg: 1, scope: !3501, file: !3, line: 727, type: !1418)
!3504 = !DILocalVariable(name: "pdata", arg: 2, scope: !3501, file: !3, line: 727, type: !1418)
!3505 = !DILocalVariable(name: "entry", scope: !3501, file: !3, line: 729, type: !3506)
!3506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2193)
!3507 = !DILocalVariable(name: "data", scope: !3501, file: !3, line: 731, type: !2794)
!3508 = !DILocation(line: 0, scope: !3501)
!3509 = !DILocation(line: 731, column: 27, scope: !3501)
!3510 = !DILocation(line: 733, column: 17, scope: !3501)
!3511 = !DILocation(line: 733, column: 19, scope: !3501)
!3512 = !DILocation(line: 733, column: 3, scope: !3501)
!3513 = distinct !DISubprogram(name: "ehspec_filter_hash", scope: !3, file: !3, line: 760, type: !1583, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3514)
!3514 = !{!3515, !3516, !3517, !3518}
!3515 = !DILocalVariable(name: "pentry", arg: 1, scope: !3513, file: !3, line: 760, type: !1418)
!3516 = !DILocalVariable(name: "entry", scope: !3513, file: !3, line: 762, type: !2193)
!3517 = !DILocalVariable(name: "h", scope: !3513, file: !3, line: 763, type: !1585)
!3518 = !DILocalVariable(name: "list", scope: !3513, file: !3, line: 764, type: !787)
!3519 = !DILocation(line: 0, scope: !3513)
!3520 = !DILocation(line: 766, column: 22, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 766, column: 3)
!3522 = !DILocation(line: 766, column: 8, scope: !3521)
!3523 = !DILocation(line: 0, scope: !3521)
!3524 = !DILocation(line: 766, column: 3, scope: !3521)
!3525 = !DILocation(line: 767, column: 12, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 766, column: 3)
!3527 = !DILocation(line: 767, column: 23, scope: !3526)
!3528 = !DILocation(line: 767, column: 18, scope: !3526)
!3529 = !DILocation(line: 767, column: 32, scope: !3526)
!3530 = !DILocation(line: 767, column: 9, scope: !3526)
!3531 = !DILocation(line: 766, column: 39, scope: !3526)
!3532 = !DILocation(line: 766, column: 3, scope: !3526)
!3533 = distinct !{!3533, !3524, !3534}
!3534 = !DILocation(line: 767, column: 32, scope: !3521)
!3535 = !DILocation(line: 768, column: 3, scope: !3513)
!3536 = distinct !DISubprogram(name: "ehspec_filter_eq", scope: !3, file: !3, line: 749, type: !1589, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3537)
!3537 = !{!3538, !3539, !3540, !3541}
!3538 = !DILocalVariable(name: "pentry", arg: 1, scope: !3536, file: !3, line: 749, type: !1418)
!3539 = !DILocalVariable(name: "pdata", arg: 2, scope: !3536, file: !3, line: 749, type: !1418)
!3540 = !DILocalVariable(name: "entry", scope: !3536, file: !3, line: 751, type: !2193)
!3541 = !DILocalVariable(name: "data", scope: !3536, file: !3, line: 752, type: !2193)
!3542 = !DILocation(line: 0, scope: !3536)
!3543 = !DILocation(line: 754, column: 34, scope: !3536)
!3544 = !DILocation(line: 754, column: 43, scope: !3536)
!3545 = !DILocation(line: 754, column: 10, scope: !3536)
!3546 = !DILocation(line: 754, column: 3, scope: !3536)
!3547 = distinct !DISubprogram(name: "VEC_eh_region_base_iterate", scope: !10, file: !10, line: 184, type: !3548, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3550)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!6, !3039, !11, !2819}
!3550 = !{!3551, !3552, !3553}
!3551 = !DILocalVariable(name: "vec_", arg: 1, scope: !3547, file: !10, line: 184, type: !3039)
!3552 = !DILocalVariable(name: "ix_", arg: 2, scope: !3547, file: !10, line: 184, type: !11)
!3553 = !DILocalVariable(name: "ptr", arg: 3, scope: !3547, file: !10, line: 184, type: !2819)
!3554 = !DILocation(line: 0, scope: !3547)
!3555 = !DILocation(line: 184, column: 1, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3547, file: !10, line: 184, column: 1)
!3557 = !DILocation(line: 184, column: 1, scope: !3547)
!3558 = !DILocation(line: 184, column: 1, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3556, file: !10, line: 184, column: 1)
!3560 = !DILocation(line: 184, column: 1, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3556, file: !10, line: 184, column: 1)
!3562 = !DILocation(line: 0, scope: !3556)
!3563 = distinct !DISubprogram(name: "add_ttypes_entry", scope: !3, file: !3, line: 775, type: !3564, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3566)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!6, !1575, !787}
!3566 = !{!3567, !3568, !3569, !3570}
!3567 = !DILocalVariable(name: "ttypes_hash", arg: 1, scope: !3563, file: !3, line: 775, type: !1575)
!3568 = !DILocalVariable(name: "type", arg: 2, scope: !3563, file: !3, line: 775, type: !787)
!3569 = !DILocalVariable(name: "slot", scope: !3563, file: !3, line: 777, type: !2199)
!3570 = !DILocalVariable(name: "n", scope: !3563, file: !3, line: 777, type: !2200)
!3571 = !DILocation(line: 0, scope: !3563)
!3572 = !DILocation(line: 780, column: 44, scope: !3563)
!3573 = !DILocation(line: 780, column: 50, scope: !3563)
!3574 = !DILocation(line: 780, column: 5, scope: !3563)
!3575 = !DILocation(line: 779, column: 10, scope: !3563)
!3576 = !DILocation(line: 782, column: 12, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 782, column: 7)
!3578 = !DILocation(line: 782, column: 19, scope: !3577)
!3579 = !DILocation(line: 782, column: 7, scope: !3563)
!3580 = !DILocation(line: 786, column: 11, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 783, column: 5)
!3582 = !DILocation(line: 787, column: 10, scope: !3581)
!3583 = !DILocation(line: 787, column: 12, scope: !3581)
!3584 = !DILocation(line: 788, column: 19, scope: !3581)
!3585 = !DILocation(line: 788, column: 59, scope: !3581)
!3586 = !DILocation(line: 788, column: 10, scope: !3581)
!3587 = !DILocation(line: 788, column: 17, scope: !3581)
!3588 = !DILocation(line: 789, column: 13, scope: !3581)
!3589 = !DILocation(line: 791, column: 7, scope: !3581)
!3590 = !DILocation(line: 792, column: 5, scope: !3581)
!3591 = !DILocation(line: 0, scope: !3577)
!3592 = !DILocation(line: 794, column: 13, scope: !3563)
!3593 = !DILocation(line: 794, column: 3, scope: !3563)
!3594 = distinct !DISubprogram(name: "add_ehspec_entry", scope: !3, file: !3, line: 801, type: !3595, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3597)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!6, !1575, !1575, !787}
!3597 = !{!3598, !3599, !3600, !3601, !3602, !3603, !3604}
!3598 = !DILocalVariable(name: "ehspec_hash", arg: 1, scope: !3594, file: !3, line: 801, type: !1575)
!3599 = !DILocalVariable(name: "ttypes_hash", arg: 2, scope: !3594, file: !3, line: 801, type: !1575)
!3600 = !DILocalVariable(name: "list", arg: 3, scope: !3594, file: !3, line: 801, type: !787)
!3601 = !DILocalVariable(name: "slot", scope: !3594, file: !3, line: 803, type: !2199)
!3602 = !DILocalVariable(name: "n", scope: !3594, file: !3, line: 803, type: !2200)
!3603 = !DILocalVariable(name: "dummy", scope: !3594, file: !3, line: 804, type: !2195)
!3604 = !DILocalVariable(name: "len", scope: !3605, file: !3, line: 812, type: !6)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 811, column: 5)
!3606 = distinct !DILexicalBlock(scope: !3594, file: !3, line: 810, column: 7)
!3607 = !DILocation(line: 0, scope: !3594)
!3608 = !DILocation(line: 804, column: 3, scope: !3594)
!3609 = !DILocation(line: 806, column: 9, scope: !3594)
!3610 = !DILocation(line: 806, column: 11, scope: !3594)
!3611 = !DILocation(line: 808, column: 5, scope: !3594)
!3612 = !DILocation(line: 807, column: 10, scope: !3594)
!3613 = !DILocation(line: 810, column: 12, scope: !3606)
!3614 = !DILocation(line: 810, column: 19, scope: !3606)
!3615 = !DILocation(line: 810, column: 7, scope: !3594)
!3616 = !DILocation(line: 814, column: 19, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 814, column: 11)
!3618 = !DILocation(line: 814, column: 11, scope: !3617)
!3619 = !DILocation(line: 0, scope: !3617)
!3620 = !DILocation(line: 814, column: 11, scope: !3605)
!3621 = !DILocation(line: 815, column: 8, scope: !3617)
!3622 = !DILocation(line: 0, scope: !3605)
!3623 = !DILocation(line: 815, column: 2, scope: !3617)
!3624 = !DILocation(line: 817, column: 8, scope: !3617)
!3625 = !DILocation(line: 821, column: 11, scope: !3605)
!3626 = !DILocation(line: 822, column: 10, scope: !3605)
!3627 = !DILocation(line: 822, column: 12, scope: !3605)
!3628 = !DILocation(line: 823, column: 19, scope: !3605)
!3629 = !DILocation(line: 823, column: 10, scope: !3605)
!3630 = !DILocation(line: 823, column: 17, scope: !3605)
!3631 = !DILocation(line: 824, column: 13, scope: !3605)
!3632 = !DILocation(line: 827, column: 7, scope: !3605)
!3633 = !DILocation(line: 827, column: 7, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 827, column: 7)
!3635 = !DILocation(line: 829, column: 8, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 828, column: 2)
!3637 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 827, column: 7)
!3638 = !DILocation(line: 830, column: 6, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 829, column: 8)
!3640 = !DILocation(line: 836, column: 45, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 833, column: 6)
!3642 = !DILocation(line: 837, column: 39, scope: !3641)
!3643 = !DILocation(line: 837, column: 8, scope: !3641)
!3644 = !DILocation(line: 836, column: 8, scope: !3641)
!3645 = !DILocation(line: 827, column: 28, scope: !3637)
!3646 = !DILocation(line: 827, column: 7, scope: !3637)
!3647 = distinct !{!3647, !3633, !3648}
!3648 = !DILocation(line: 839, column: 2, scope: !3634)
!3649 = !DILocation(line: 840, column: 11, scope: !3605)
!3650 = !DILocation(line: 841, column: 2, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 840, column: 11)
!3652 = !DILocation(line: 843, column: 2, scope: !3651)
!3653 = !DILocation(line: 0, scope: !3606)
!3654 = !DILocation(line: 846, column: 13, scope: !3594)
!3655 = !DILocation(line: 847, column: 1, scope: !3594)
!3656 = !DILocation(line: 846, column: 3, scope: !3594)
!3657 = distinct !DISubprogram(name: "sjlj_emit_function_exit_after", scope: !3, file: !3, line: 1208, type: !3658, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3660)
!3658 = !DISubroutineType(types: !3659)
!3659 = !{null, !962}
!3660 = !{!3661}
!3661 = !DILocalVariable(name: "after", arg: 1, scope: !3657, file: !3, line: 1208, type: !962)
!3662 = !DILocation(line: 0, scope: !3657)
!3663 = !DILocation(line: 1210, column: 28, scope: !3657)
!3664 = !DILocation(line: 1211, column: 1, scope: !3657)
!3665 = distinct !DISubprogram(name: "gate_handle_eh", scope: !3, file: !3, line: 1455, type: !2237, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!3666 = !DILocation(line: 1458, column: 10, scope: !3665)
!3667 = !DILocation(line: 1458, column: 16, scope: !3665)
!3668 = !DILocation(line: 1458, column: 20, scope: !3665)
!3669 = !DILocation(line: 1458, column: 32, scope: !3665)
!3670 = !DILocation(line: 1458, column: 3, scope: !3665)
!3671 = distinct !DISubprogram(name: "rest_of_handle_eh", scope: !3, file: !3, line: 1463, type: !2241, scopeLine: 1464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!3672 = !DILocation(line: 1465, column: 3, scope: !3671)
!3673 = !DILocation(line: 1466, column: 3, scope: !3671)
!3674 = !DILocation(line: 1467, column: 3, scope: !3671)
!3675 = distinct !DISubprogram(name: "remove_eh_landing_pad", scope: !3, file: !3, line: 1492, type: !3676, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3678)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{null, !2163}
!3678 = !{!3679, !3680}
!3679 = !DILocalVariable(name: "lp", arg: 1, scope: !3675, file: !3, line: 1492, type: !2163)
!3680 = !DILocalVariable(name: "pp", scope: !3675, file: !3, line: 1494, type: !2829)
!3681 = !DILocation(line: 0, scope: !3675)
!3682 = !DILocation(line: 1496, column: 18, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 1496, column: 3)
!3684 = !DILocation(line: 1496, column: 26, scope: !3683)
!3685 = !DILocation(line: 1496, column: 8, scope: !3683)
!3686 = !DILocation(line: 0, scope: !3683)
!3687 = !DILocation(line: 1496, column: 40, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 1496, column: 3)
!3689 = !DILocation(line: 1496, column: 44, scope: !3688)
!3690 = !DILocation(line: 1496, column: 3, scope: !3683)
!3691 = !DILocation(line: 1496, column: 64, scope: !3688)
!3692 = !DILocation(line: 1496, column: 3, scope: !3688)
!3693 = distinct !{!3693, !3690, !3694}
!3694 = !DILocation(line: 1497, column: 5, scope: !3683)
!3695 = !DILocation(line: 1498, column: 13, scope: !3675)
!3696 = !DILocation(line: 1498, column: 7, scope: !3675)
!3697 = !DILocation(line: 1500, column: 11, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 1500, column: 7)
!3699 = !DILocation(line: 1500, column: 7, scope: !3698)
!3700 = !DILocation(line: 1500, column: 7, scope: !3675)
!3701 = !DILocation(line: 1501, column: 5, scope: !3698)
!3702 = !DILocation(line: 1501, column: 46, scope: !3698)
!3703 = !DILocation(line: 1502, column: 3, scope: !3675)
!3704 = !DILocation(line: 1503, column: 1, scope: !3675)
!3705 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_replace", scope: !10, file: !10, line: 188, type: !3706, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3709)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!2163, !3708, !11, !2163}
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!3709 = !{!3710, !3711, !3712, !3713}
!3710 = !DILocalVariable(name: "vec_", arg: 1, scope: !3705, file: !10, line: 188, type: !3708)
!3711 = !DILocalVariable(name: "ix_", arg: 2, scope: !3705, file: !10, line: 188, type: !11)
!3712 = !DILocalVariable(name: "obj_", arg: 3, scope: !3705, file: !10, line: 188, type: !2163)
!3713 = !DILocalVariable(name: "old_obj_", scope: !3705, file: !10, line: 188, type: !2163)
!3714 = !DILocation(line: 0, scope: !3705)
!3715 = !DILocation(line: 188, column: 1, scope: !3705)
!3716 = distinct !DISubprogram(name: "remove_eh_handler", scope: !3, file: !3, line: 1508, type: !3717, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3719)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{null, !765}
!3719 = !{!3720, !3721, !3722, !3723, !3724, !3725}
!3720 = !DILocalVariable(name: "region", arg: 1, scope: !3716, file: !3, line: 1508, type: !765)
!3721 = !DILocalVariable(name: "pp", scope: !3716, file: !3, line: 1510, type: !2819)
!3722 = !DILocalVariable(name: "pp_start", scope: !3716, file: !3, line: 1510, type: !2819)
!3723 = !DILocalVariable(name: "p", scope: !3716, file: !3, line: 1510, type: !765)
!3724 = !DILocalVariable(name: "outer", scope: !3716, file: !3, line: 1510, type: !765)
!3725 = !DILocalVariable(name: "lp", scope: !3716, file: !3, line: 1511, type: !2163)
!3726 = !DILocation(line: 0, scope: !3716)
!3727 = !DILocation(line: 1513, column: 21, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1513, column: 3)
!3729 = !DILocation(line: 1513, column: 8, scope: !3728)
!3730 = !DILocation(line: 0, scope: !3728)
!3731 = !DILocation(line: 1513, column: 3, scope: !3728)
!3732 = !DILocation(line: 1515, column: 15, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 1515, column: 11)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 1514, column: 5)
!3735 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 1513, column: 3)
!3736 = !DILocation(line: 1515, column: 11, scope: !3733)
!3737 = !DILocation(line: 1515, column: 11, scope: !3734)
!3738 = !DILocation(line: 1516, column: 2, scope: !3733)
!3739 = !DILocation(line: 1516, column: 43, scope: !3733)
!3740 = !DILocation(line: 1517, column: 7, scope: !3734)
!3741 = !DILocation(line: 1513, column: 49, scope: !3735)
!3742 = !DILocation(line: 1513, column: 3, scope: !3735)
!3743 = distinct !{!3743, !3731, !3744}
!3744 = !DILocation(line: 1518, column: 5, scope: !3728)
!3745 = !DILocation(line: 1520, column: 19, scope: !3716)
!3746 = !DILocation(line: 1521, column: 7, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1521, column: 7)
!3748 = !DILocation(line: 1521, column: 7, scope: !3716)
!3749 = !DILocation(line: 1522, column: 24, scope: !3747)
!3750 = !DILocation(line: 1522, column: 5, scope: !3747)
!3751 = !DILocation(line: 1524, column: 17, scope: !3747)
!3752 = !DILocation(line: 1524, column: 23, scope: !3747)
!3753 = !DILocation(line: 1524, column: 27, scope: !3747)
!3754 = !DILocation(line: 0, scope: !3747)
!3755 = !DILocation(line: 1525, column: 8, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1525, column: 3)
!3757 = !DILocation(line: 0, scope: !3756)
!3758 = !DILocation(line: 1525, column: 34, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1525, column: 3)
!3760 = !DILocation(line: 1525, column: 3, scope: !3756)
!3761 = !DILocation(line: 1525, column: 54, scope: !3759)
!3762 = !DILocation(line: 1525, column: 3, scope: !3759)
!3763 = distinct !{!3763, !3760, !3764}
!3764 = !DILocation(line: 1526, column: 5, scope: !3756)
!3765 = !DILocation(line: 1527, column: 15, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1527, column: 7)
!3767 = !DILocation(line: 1527, column: 7, scope: !3766)
!3768 = !DILocation(line: 1527, column: 7, scope: !3716)
!3769 = !DILocation(line: 1529, column: 11, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 1528, column: 5)
!3771 = !DILocation(line: 1530, column: 7, scope: !3770)
!3772 = !DILocation(line: 0, scope: !3770)
!3773 = !DILocation(line: 1532, column: 7, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 1531, column: 2)
!3775 = !DILocation(line: 1532, column: 13, scope: !3774)
!3776 = !DILocation(line: 1533, column: 13, scope: !3774)
!3777 = !DILocation(line: 1534, column: 8, scope: !3774)
!3778 = !DILocation(line: 1535, column: 2, scope: !3774)
!3779 = distinct !{!3779, !3771, !3780}
!3780 = !DILocation(line: 1536, column: 15, scope: !3770)
!3781 = !DILocation(line: 1538, column: 17, scope: !3716)
!3782 = !DILocation(line: 1538, column: 7, scope: !3716)
!3783 = !DILocation(line: 1540, column: 3, scope: !3716)
!3784 = !DILocation(line: 1541, column: 1, scope: !3716)
!3785 = distinct !DISubprogram(name: "VEC_eh_region_base_replace", scope: !10, file: !10, line: 184, type: !3786, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3789)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!765, !3788, !11, !765}
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!3789 = !{!3790, !3791, !3792, !3793}
!3790 = !DILocalVariable(name: "vec_", arg: 1, scope: !3785, file: !10, line: 184, type: !3788)
!3791 = !DILocalVariable(name: "ix_", arg: 2, scope: !3785, file: !10, line: 184, type: !11)
!3792 = !DILocalVariable(name: "obj_", arg: 3, scope: !3785, file: !10, line: 184, type: !765)
!3793 = !DILocalVariable(name: "old_obj_", scope: !3785, file: !10, line: 184, type: !765)
!3794 = !DILocation(line: 0, scope: !3785)
!3795 = !DILocation(line: 184, column: 1, scope: !3785)
!3796 = distinct !DISubprogram(name: "for_each_eh_label", scope: !3, file: !3, line: 1547, type: !3797, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3800)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{null, !3799}
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3800 = !{!3801, !3802, !3803, !3804}
!3801 = !DILocalVariable(name: "callback", arg: 1, scope: !3796, file: !3, line: 1547, type: !3799)
!3802 = !DILocalVariable(name: "lp", scope: !3796, file: !3, line: 1549, type: !2163)
!3803 = !DILocalVariable(name: "i", scope: !3796, file: !3, line: 1550, type: !6)
!3804 = !DILocalVariable(name: "lab", scope: !3805, file: !3, line: 1556, type: !962)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1555, column: 2)
!3806 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1554, column: 11)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 1553, column: 5)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 1552, column: 3)
!3809 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1552, column: 3)
!3810 = !DILocation(line: 0, scope: !3796)
!3811 = !DILocation(line: 1549, column: 3, scope: !3796)
!3812 = !DILocation(line: 1552, column: 8, scope: !3809)
!3813 = !DILocation(line: 0, scope: !3809)
!3814 = !DILocation(line: 1552, column: 15, scope: !3808)
!3815 = !DILocation(line: 1552, column: 3, scope: !3809)
!3816 = !DILocation(line: 1554, column: 11, scope: !3806)
!3817 = !DILocation(line: 1554, column: 11, scope: !3807)
!3818 = !DILocation(line: 1556, column: 18, scope: !3805)
!3819 = !DILocation(line: 0, scope: !3805)
!3820 = !DILocation(line: 1557, column: 8, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3805, file: !3, line: 1557, column: 8)
!3822 = !DILocation(line: 1557, column: 12, scope: !3821)
!3823 = !DILocation(line: 1557, column: 15, scope: !3821)
!3824 = !DILocation(line: 1557, column: 8, scope: !3805)
!3825 = !DILocation(line: 1558, column: 6, scope: !3821)
!3826 = !DILocation(line: 1552, column: 72, scope: !3808)
!3827 = !DILocation(line: 1552, column: 3, scope: !3808)
!3828 = distinct !{!3828, !3815, !3829}
!3829 = !DILocation(line: 1560, column: 5, scope: !3809)
!3830 = !DILocation(line: 1561, column: 1, scope: !3796)
!3831 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_iterate", scope: !10, file: !10, line: 188, type: !3832, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3834)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!6, !3021, !11, !2829}
!3834 = !{!3835, !3836, !3837}
!3835 = !DILocalVariable(name: "vec_", arg: 1, scope: !3831, file: !10, line: 188, type: !3021)
!3836 = !DILocalVariable(name: "ix_", arg: 2, scope: !3831, file: !10, line: 188, type: !11)
!3837 = !DILocalVariable(name: "ptr", arg: 3, scope: !3831, file: !10, line: 188, type: !2829)
!3838 = !DILocation(line: 0, scope: !3831)
!3839 = !DILocation(line: 188, column: 1, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3831, file: !10, line: 188, column: 1)
!3841 = !DILocation(line: 188, column: 1, scope: !3831)
!3842 = !DILocation(line: 188, column: 1, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3840, file: !10, line: 188, column: 1)
!3844 = !DILocation(line: 188, column: 1, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3840, file: !10, line: 188, column: 1)
!3846 = !DILocation(line: 0, scope: !3840)
!3847 = distinct !DISubprogram(name: "make_reg_eh_region_note", scope: !3, file: !3, line: 1588, type: !3848, scopeLine: 1589, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3850)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{null, !962, !6, !6}
!3850 = !{!3851, !3852, !3853, !3854}
!3851 = !DILocalVariable(name: "insn", arg: 1, scope: !3847, file: !3, line: 1588, type: !962)
!3852 = !DILocalVariable(name: "ecf_flags", arg: 2, scope: !3847, file: !3, line: 1588, type: !6)
!3853 = !DILocalVariable(name: "lp_nr", arg: 3, scope: !3847, file: !3, line: 1588, type: !6)
!3854 = !DILocalVariable(name: "value", scope: !3847, file: !3, line: 1590, type: !962)
!3855 = !DILocation(line: 0, scope: !3847)
!3856 = !DILocation(line: 1591, column: 17, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 1591, column: 7)
!3858 = !DILocation(line: 1591, column: 7, scope: !3847)
!3859 = !DILocation(line: 1592, column: 13, scope: !3857)
!3860 = !DILocation(line: 1592, column: 5, scope: !3857)
!3861 = !DILocation(line: 1593, column: 18, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1593, column: 12)
!3863 = !DILocation(line: 1593, column: 12, scope: !3857)
!3864 = !DILocation(line: 1594, column: 13, scope: !3862)
!3865 = !DILocation(line: 0, scope: !3857)
!3866 = !DILocation(line: 1597, column: 3, scope: !3847)
!3867 = !DILocation(line: 1598, column: 1, scope: !3847)
!3868 = distinct !DISubprogram(name: "make_reg_eh_region_note_nothrow_nononlocal", scope: !3, file: !3, line: 1605, type: !3658, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3869)
!3869 = !{!3870, !3871, !3872}
!3870 = !DILocalVariable(name: "insn", arg: 1, scope: !3868, file: !3, line: 1605, type: !962)
!3871 = !DILocalVariable(name: "note", scope: !3868, file: !3, line: 1607, type: !962)
!3872 = !DILocalVariable(name: "intmin", scope: !3868, file: !3, line: 1608, type: !962)
!3873 = !DILocation(line: 0, scope: !3868)
!3874 = !DILocation(line: 1607, column: 14, scope: !3868)
!3875 = !DILocation(line: 1608, column: 16, scope: !3868)
!3876 = !DILocation(line: 1610, column: 12, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 1610, column: 7)
!3878 = !DILocation(line: 1610, column: 7, scope: !3868)
!3879 = !DILocation(line: 1611, column: 5, scope: !3877)
!3880 = !DILocation(line: 1611, column: 20, scope: !3877)
!3881 = !DILocation(line: 1613, column: 5, scope: !3877)
!3882 = !DILocation(line: 1614, column: 1, scope: !3868)
!3883 = distinct !DISubprogram(name: "insn_could_throw_p", scope: !3, file: !3, line: 1620, type: !3884, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3889)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!754, !3886}
!3886 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !788, line: 51, baseType: !3887)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!3889 = !{!3890}
!3890 = !DILocalVariable(name: "insn", arg: 1, scope: !3883, file: !3, line: 1620, type: !3886)
!3891 = !DILocation(line: 0, scope: !3883)
!3892 = !DILocation(line: 1622, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 1622, column: 7)
!3894 = !DILocation(line: 1622, column: 7, scope: !3883)
!3895 = !DILocation(line: 1624, column: 7, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 1624, column: 7)
!3897 = !DILocation(line: 1624, column: 21, scope: !3896)
!3898 = !DILocation(line: 1624, column: 24, scope: !3896)
!3899 = !DILocation(line: 1624, column: 7, scope: !3883)
!3900 = !DILocation(line: 1625, column: 24, scope: !3896)
!3901 = !DILocation(line: 1625, column: 12, scope: !3896)
!3902 = !DILocation(line: 1625, column: 5, scope: !3896)
!3903 = !DILocation(line: 1627, column: 1, scope: !3883)
!3904 = distinct !DISubprogram(name: "copy_reg_eh_region_note_forward", scope: !3, file: !3, line: 1634, type: !3905, scopeLine: 1635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !962, !962, !962}
!3907 = !{!3908, !3909, !3910, !3911, !3912}
!3908 = !DILocalVariable(name: "note_or_insn", arg: 1, scope: !3904, file: !3, line: 1634, type: !962)
!3909 = !DILocalVariable(name: "first", arg: 2, scope: !3904, file: !3, line: 1634, type: !962)
!3910 = !DILocalVariable(name: "last", arg: 3, scope: !3904, file: !3, line: 1634, type: !962)
!3911 = !DILocalVariable(name: "insn", scope: !3904, file: !3, line: 1636, type: !962)
!3912 = !DILocalVariable(name: "note", scope: !3904, file: !3, line: 1636, type: !962)
!3913 = !DILocation(line: 0, scope: !3904)
!3914 = !DILocation(line: 1638, column: 7, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1638, column: 7)
!3916 = !DILocation(line: 1638, column: 7, scope: !3904)
!3917 = !DILocation(line: 1640, column: 14, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3915, file: !3, line: 1639, column: 5)
!3919 = !DILocation(line: 1641, column: 16, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 1641, column: 11)
!3921 = !DILocation(line: 1641, column: 11, scope: !3918)
!3922 = !DILocation(line: 1644, column: 10, scope: !3904)
!3923 = !DILocation(line: 1646, column: 8, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1646, column: 3)
!3925 = !DILocation(line: 0, scope: !3924)
!3926 = !DILocation(line: 1646, column: 27, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 1646, column: 3)
!3928 = !DILocation(line: 1646, column: 3, scope: !3924)
!3929 = !DILocation(line: 1647, column: 10, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 1647, column: 9)
!3931 = !DILocation(line: 1648, column: 9, scope: !3930)
!3932 = !DILocation(line: 1648, column: 12, scope: !3930)
!3933 = !DILocation(line: 1647, column: 9, scope: !3927)
!3934 = !DILocation(line: 1649, column: 7, scope: !3930)
!3935 = !DILocation(line: 1646, column: 44, scope: !3927)
!3936 = !DILocation(line: 1646, column: 3, scope: !3927)
!3937 = distinct !{!3937, !3928, !3938}
!3938 = !DILocation(line: 1649, column: 46, scope: !3924)
!3939 = !DILocation(line: 1650, column: 1, scope: !3904)
!3940 = distinct !DISubprogram(name: "copy_reg_eh_region_note_backward", scope: !3, file: !3, line: 1655, type: !3905, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3941)
!3941 = !{!3942, !3943, !3944, !3945, !3946}
!3942 = !DILocalVariable(name: "note_or_insn", arg: 1, scope: !3940, file: !3, line: 1655, type: !962)
!3943 = !DILocalVariable(name: "last", arg: 2, scope: !3940, file: !3, line: 1655, type: !962)
!3944 = !DILocalVariable(name: "first", arg: 3, scope: !3940, file: !3, line: 1655, type: !962)
!3945 = !DILocalVariable(name: "insn", scope: !3940, file: !3, line: 1657, type: !962)
!3946 = !DILocalVariable(name: "note", scope: !3940, file: !3, line: 1657, type: !962)
!3947 = !DILocation(line: 0, scope: !3940)
!3948 = !DILocation(line: 1659, column: 7, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 1659, column: 7)
!3950 = !DILocation(line: 1659, column: 7, scope: !3940)
!3951 = !DILocation(line: 1661, column: 14, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 1660, column: 5)
!3953 = !DILocation(line: 1662, column: 16, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 1662, column: 11)
!3955 = !DILocation(line: 1662, column: 11, scope: !3952)
!3956 = !DILocation(line: 1665, column: 10, scope: !3940)
!3957 = !DILocation(line: 1667, column: 8, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 1667, column: 3)
!3959 = !DILocation(line: 0, scope: !3958)
!3960 = !DILocation(line: 1667, column: 26, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 1667, column: 3)
!3962 = !DILocation(line: 1667, column: 3, scope: !3958)
!3963 = !DILocation(line: 1668, column: 9, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 1668, column: 9)
!3965 = !DILocation(line: 1668, column: 9, scope: !3961)
!3966 = !DILocation(line: 1669, column: 7, scope: !3964)
!3967 = !DILocation(line: 1667, column: 43, scope: !3961)
!3968 = !DILocation(line: 1667, column: 3, scope: !3961)
!3969 = distinct !{!3969, !3962, !3970}
!3970 = !DILocation(line: 1669, column: 46, scope: !3958)
!3971 = !DILocation(line: 1670, column: 1, scope: !3940)
!3972 = distinct !DISubprogram(name: "get_eh_landing_pad_from_rtx", scope: !3, file: !3, line: 1725, type: !3973, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!2163, !3886}
!3975 = !{!3976, !3977, !3978}
!3976 = !DILocalVariable(name: "insn", arg: 1, scope: !3972, file: !3, line: 1725, type: !3886)
!3977 = !DILocalVariable(name: "lp", scope: !3972, file: !3, line: 1727, type: !2163)
!3978 = !DILocalVariable(name: "r", scope: !3972, file: !3, line: 1728, type: !765)
!3979 = !DILocation(line: 0, scope: !3972)
!3980 = !DILocation(line: 1727, column: 3, scope: !3972)
!3981 = !DILocation(line: 1728, column: 3, scope: !3972)
!3982 = !DILocation(line: 1730, column: 3, scope: !3972)
!3983 = !DILocation(line: 1731, column: 10, scope: !3972)
!3984 = !DILocation(line: 1732, column: 1, scope: !3972)
!3985 = !DILocation(line: 1731, column: 3, scope: !3972)
!3986 = distinct !DISubprogram(name: "get_eh_region_and_lp_from_rtx", scope: !3, file: !3, line: 1677, type: !3987, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !3989)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!754, !3886, !2819, !2829}
!3989 = !{!3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998}
!3990 = !DILocalVariable(name: "insn", arg: 1, scope: !3986, file: !3, line: 1677, type: !3886)
!3991 = !DILocalVariable(name: "pr", arg: 2, scope: !3986, file: !3, line: 1677, type: !2819)
!3992 = !DILocalVariable(name: "plp", arg: 3, scope: !3986, file: !3, line: 1678, type: !2829)
!3993 = !DILocalVariable(name: "lp", scope: !3986, file: !3, line: 1680, type: !2163)
!3994 = !DILocalVariable(name: "r", scope: !3986, file: !3, line: 1681, type: !765)
!3995 = !DILocalVariable(name: "ret", scope: !3986, file: !3, line: 1682, type: !754)
!3996 = !DILocalVariable(name: "note", scope: !3986, file: !3, line: 1683, type: !962)
!3997 = !DILocalVariable(name: "lp_nr", scope: !3986, file: !3, line: 1684, type: !6)
!3998 = !DILabel(scope: !3986, name: "egress", file: !3, line: 1715)
!3999 = !DILocation(line: 0, scope: !3986)
!4000 = !DILocation(line: 1686, column: 9, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1686, column: 7)
!4002 = !DILocation(line: 1686, column: 7, scope: !3986)
!4003 = !DILocation(line: 1690, column: 7, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1689, column: 7)
!4005 = !DILocation(line: 1690, column: 10, scope: !4004)
!4006 = !DILocation(line: 1690, column: 36, scope: !4004)
!4007 = !DILocation(line: 1689, column: 7, scope: !3986)
!4008 = !DILocation(line: 1691, column: 12, scope: !4004)
!4009 = !DILocation(line: 1691, column: 5, scope: !4004)
!4010 = !DILocation(line: 1693, column: 10, scope: !3986)
!4011 = !DILocation(line: 1694, column: 8, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1694, column: 7)
!4013 = !DILocation(line: 1694, column: 7, scope: !3986)
!4014 = !DILocation(line: 1696, column: 14, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 1695, column: 5)
!4016 = !DILocation(line: 1696, column: 13, scope: !4015)
!4017 = !DILocation(line: 1697, column: 7, scope: !4015)
!4018 = !DILocation(line: 1700, column: 11, scope: !3986)
!4019 = !DILocation(line: 1701, column: 18, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1701, column: 7)
!4021 = !DILocation(line: 1707, column: 13, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1707, column: 7)
!4023 = !DILocation(line: 0, scope: !4022)
!4024 = !DILocation(line: 1707, column: 7, scope: !3986)
!4025 = !DILocation(line: 1708, column: 9, scope: !4022)
!4026 = !DILocation(line: 1708, column: 5, scope: !4022)
!4027 = !DILocation(line: 1711, column: 12, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 1710, column: 5)
!4029 = !DILocation(line: 1712, column: 15, scope: !4028)
!4030 = !DILocation(line: 1680, column: 18, scope: !3986)
!4031 = !DILocation(line: 1715, column: 2, scope: !3986)
!4032 = !DILocation(line: 1716, column: 8, scope: !3986)
!4033 = !DILocation(line: 1717, column: 7, scope: !3986)
!4034 = !DILocation(line: 1718, column: 3, scope: !3986)
!4035 = distinct !DISubprogram(name: "get_eh_region_from_rtx", scope: !3, file: !3, line: 1738, type: !4036, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4038)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!765, !3886}
!4038 = !{!4039, !4040, !4041}
!4039 = !DILocalVariable(name: "insn", arg: 1, scope: !4035, file: !3, line: 1738, type: !3886)
!4040 = !DILocalVariable(name: "lp", scope: !4035, file: !3, line: 1740, type: !2163)
!4041 = !DILocalVariable(name: "r", scope: !4035, file: !3, line: 1741, type: !765)
!4042 = !DILocation(line: 0, scope: !4035)
!4043 = !DILocation(line: 1740, column: 3, scope: !4035)
!4044 = !DILocation(line: 1741, column: 3, scope: !4035)
!4045 = !DILocation(line: 1743, column: 3, scope: !4035)
!4046 = !DILocation(line: 1744, column: 10, scope: !4035)
!4047 = !DILocation(line: 1745, column: 1, scope: !4035)
!4048 = !DILocation(line: 1744, column: 3, scope: !4035)
!4049 = distinct !DISubprogram(name: "can_throw_internal", scope: !3, file: !3, line: 1750, type: !3884, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4050)
!4050 = !{!4051}
!4051 = !DILocalVariable(name: "insn", arg: 1, scope: !4049, file: !3, line: 1750, type: !3886)
!4052 = !DILocation(line: 0, scope: !4049)
!4053 = !DILocation(line: 1752, column: 10, scope: !4049)
!4054 = !DILocation(line: 1752, column: 45, scope: !4049)
!4055 = !DILocation(line: 1752, column: 3, scope: !4049)
!4056 = distinct !DISubprogram(name: "can_throw_external", scope: !3, file: !3, line: 1758, type: !3884, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4057)
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4065, !4066}
!4058 = !DILocalVariable(name: "insn", arg: 1, scope: !4056, file: !3, line: 1758, type: !3886)
!4059 = !DILocalVariable(name: "lp", scope: !4056, file: !3, line: 1760, type: !2163)
!4060 = !DILocalVariable(name: "r", scope: !4056, file: !3, line: 1761, type: !765)
!4061 = !DILocalVariable(name: "nothrow", scope: !4056, file: !3, line: 1762, type: !754)
!4062 = !DILocalVariable(name: "seq", scope: !4063, file: !3, line: 1770, type: !962)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 1769, column: 5)
!4064 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1767, column: 7)
!4065 = !DILocalVariable(name: "i", scope: !4063, file: !3, line: 1771, type: !6)
!4066 = !DILocalVariable(name: "n", scope: !4063, file: !3, line: 1771, type: !6)
!4067 = !DILocation(line: 0, scope: !4056)
!4068 = !DILocation(line: 1760, column: 3, scope: !4056)
!4069 = !DILocation(line: 1761, column: 3, scope: !4056)
!4070 = !DILocation(line: 1764, column: 9, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1764, column: 7)
!4072 = !DILocation(line: 1764, column: 7, scope: !4056)
!4073 = !DILocation(line: 1768, column: 7, scope: !4064)
!4074 = !DILocation(line: 1768, column: 10, scope: !4064)
!4075 = !DILocation(line: 1768, column: 36, scope: !4064)
!4076 = !DILocation(line: 1767, column: 7, scope: !4056)
!4077 = !DILocation(line: 0, scope: !4063)
!4078 = !DILocation(line: 1771, column: 18, scope: !4063)
!4079 = !DILocation(line: 1773, column: 12, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 1773, column: 7)
!4081 = !DILocation(line: 0, scope: !4080)
!4082 = !DILocation(line: 1773, column: 21, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 1773, column: 7)
!4084 = !DILocation(line: 1773, column: 7, scope: !4080)
!4085 = !DILocation(line: 1774, column: 26, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 1774, column: 6)
!4087 = !DILocation(line: 1774, column: 6, scope: !4086)
!4088 = !DILocation(line: 1774, column: 6, scope: !4083)
!4089 = !DILocation(line: 1773, column: 27, scope: !4083)
!4090 = !DILocation(line: 1773, column: 7, scope: !4083)
!4091 = distinct !{!4091, !4084, !4092}
!4092 = !DILocation(line: 1775, column: 11, scope: !4080)
!4093 = !DILocation(line: 1780, column: 13, scope: !4056)
!4094 = !DILocation(line: 1783, column: 7, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1783, column: 7)
!4096 = !DILocation(line: 1787, column: 7, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1787, column: 7)
!4098 = !DILocation(line: 1787, column: 10, scope: !4097)
!4099 = !DILocation(line: 1783, column: 7, scope: !4056)
!4100 = !DILocation(line: 1791, column: 7, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 1791, column: 7)
!4102 = !DILocation(line: 1791, column: 9, scope: !4101)
!4103 = !DILocation(line: 1791, column: 7, scope: !4056)
!4104 = !DILocation(line: 1796, column: 3, scope: !4056)
!4105 = !DILocation(line: 1798, column: 1, scope: !4056)
!4106 = distinct !DISubprogram(name: "insn_nothrow_p", scope: !3, file: !3, line: 1803, type: !3884, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4107)
!4107 = !{!4108, !4109, !4110, !4111, !4114, !4115}
!4108 = !DILocalVariable(name: "insn", arg: 1, scope: !4106, file: !3, line: 1803, type: !3886)
!4109 = !DILocalVariable(name: "lp", scope: !4106, file: !3, line: 1805, type: !2163)
!4110 = !DILocalVariable(name: "r", scope: !4106, file: !3, line: 1806, type: !765)
!4111 = !DILocalVariable(name: "seq", scope: !4112, file: !3, line: 1814, type: !962)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 1813, column: 5)
!4113 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1811, column: 7)
!4114 = !DILocalVariable(name: "i", scope: !4112, file: !3, line: 1815, type: !6)
!4115 = !DILocalVariable(name: "n", scope: !4112, file: !3, line: 1815, type: !6)
!4116 = !DILocation(line: 0, scope: !4106)
!4117 = !DILocation(line: 1805, column: 3, scope: !4106)
!4118 = !DILocation(line: 1806, column: 3, scope: !4106)
!4119 = !DILocation(line: 1808, column: 9, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1808, column: 7)
!4121 = !DILocation(line: 1808, column: 7, scope: !4106)
!4122 = !DILocation(line: 1812, column: 7, scope: !4113)
!4123 = !DILocation(line: 1812, column: 10, scope: !4113)
!4124 = !DILocation(line: 1812, column: 36, scope: !4113)
!4125 = !DILocation(line: 1811, column: 7, scope: !4106)
!4126 = !DILocation(line: 0, scope: !4112)
!4127 = !DILocation(line: 1815, column: 18, scope: !4112)
!4128 = !DILocation(line: 1817, column: 12, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 1817, column: 7)
!4130 = !DILocation(line: 0, scope: !4129)
!4131 = !DILocation(line: 1817, column: 21, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 1817, column: 7)
!4133 = !DILocation(line: 1817, column: 7, scope: !4129)
!4134 = !DILocation(line: 1818, column: 23, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1818, column: 6)
!4136 = !DILocation(line: 1818, column: 7, scope: !4135)
!4137 = !DILocation(line: 1818, column: 6, scope: !4132)
!4138 = !DILocation(line: 1817, column: 27, scope: !4132)
!4139 = !DILocation(line: 1817, column: 7, scope: !4132)
!4140 = distinct !{!4140, !4133, !4141}
!4141 = !DILocation(line: 1819, column: 11, scope: !4129)
!4142 = !DILocation(line: 1824, column: 10, scope: !4106)
!4143 = !DILocation(line: 1824, column: 3, scope: !4106)
!4144 = !DILocation(line: 1825, column: 1, scope: !4106)
!4145 = distinct !DISubprogram(name: "can_nonlocal_goto", scope: !3, file: !3, line: 1831, type: !3884, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4146)
!4146 = !{!4147, !4148}
!4147 = !DILocalVariable(name: "insn", arg: 1, scope: !4145, file: !3, line: 1831, type: !3886)
!4148 = !DILocalVariable(name: "note", scope: !4149, file: !3, line: 1835, type: !962)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1834, column: 5)
!4150 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 1833, column: 7)
!4151 = !DILocation(line: 0, scope: !4145)
!4152 = !DILocation(line: 1833, column: 7, scope: !4150)
!4153 = !DILocation(line: 1833, column: 36, scope: !4150)
!4154 = !DILocation(line: 1833, column: 39, scope: !4150)
!4155 = !DILocation(line: 1833, column: 7, scope: !4145)
!4156 = !DILocation(line: 1835, column: 18, scope: !4149)
!4157 = !DILocation(line: 0, scope: !4149)
!4158 = !DILocation(line: 1836, column: 12, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1836, column: 11)
!4160 = !DILocation(line: 1836, column: 17, scope: !4159)
!4161 = !DILocation(line: 1836, column: 20, scope: !4159)
!4162 = !DILocation(line: 1836, column: 44, scope: !4159)
!4163 = !DILocation(line: 1836, column: 11, scope: !4149)
!4164 = !DILocation(line: 1839, column: 3, scope: !4145)
!4165 = !DILocation(line: 1840, column: 1, scope: !4145)
!4166 = distinct !DISubprogram(name: "set_nothrow_function_flags", scope: !3, file: !3, line: 1845, type: !2241, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4167)
!4167 = !{!4168, !4169, !4375}
!4168 = !DILocalVariable(name: "insn", scope: !4166, file: !3, line: 1847, type: !962)
!4169 = !DILocalVariable(name: "node", scope: !4170, file: !3, line: 1897, type: !4172)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !3, line: 1896, column: 5)
!4171 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 1892, column: 7)
!4172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4173, size: 64)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !720, line: 181, size: 2496, elements: !4174)
!4174 = !{!4175, !4176, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4290, !4312, !4322, !4326, !4352, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !4173, file: !720, line: 182, baseType: !787, size: 64)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !4173, file: !720, line: 183, baseType: !4177, size: 64, offset: 64)
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4178, size: 64)
!4178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !720, line: 314, size: 768, elements: !4179)
!4179 = !{!4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4191, !4192, !4193, !4194, !4195, !4196, !4197}
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4178, file: !720, line: 316, baseType: !1323, size: 64)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4178, file: !720, line: 317, baseType: !4172, size: 64, offset: 64)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !4178, file: !720, line: 318, baseType: !4172, size: 64, offset: 128)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !4178, file: !720, line: 319, baseType: !4177, size: 64, offset: 192)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !4178, file: !720, line: 320, baseType: !4177, size: 64, offset: 256)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !4178, file: !720, line: 321, baseType: !4177, size: 64, offset: 320)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !4178, file: !720, line: 322, baseType: !4177, size: 64, offset: 384)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !4178, file: !720, line: 323, baseType: !1111, size: 64, offset: 448)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !4178, file: !720, line: 324, baseType: !758, size: 64, offset: 512)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !4178, file: !720, line: 327, baseType: !4190, size: 32, offset: 576)
!4190 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !720, line: 312, baseType: !719)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !4178, file: !720, line: 330, baseType: !11, size: 32, offset: 608)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4178, file: !720, line: 334, baseType: !6, size: 32, offset: 640)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4178, file: !720, line: 336, baseType: !6, size: 32, offset: 672)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !4178, file: !720, line: 338, baseType: !2292, size: 16, offset: 704)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !4178, file: !720, line: 340, baseType: !11, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !4178, file: !720, line: 342, baseType: !11, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !4178, file: !720, line: 344, baseType: !11, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !4173, file: !720, line: 184, baseType: !4177, size: 64, offset: 128)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4173, file: !720, line: 185, baseType: !4172, size: 64, offset: 192)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !4173, file: !720, line: 186, baseType: !4172, size: 64, offset: 256)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !4173, file: !720, line: 188, baseType: !4172, size: 64, offset: 320)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !4173, file: !720, line: 190, baseType: !4172, size: 64, offset: 384)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !4173, file: !720, line: 192, baseType: !4172, size: 64, offset: 448)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !4173, file: !720, line: 194, baseType: !4172, size: 64, offset: 512)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !4173, file: !720, line: 196, baseType: !4172, size: 64, offset: 576)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !4173, file: !720, line: 197, baseType: !4172, size: 64, offset: 640)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !4173, file: !720, line: 198, baseType: !4172, size: 64, offset: 704)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !4173, file: !720, line: 199, baseType: !4172, size: 64, offset: 768)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !4173, file: !720, line: 202, baseType: !4172, size: 64, offset: 832)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !4173, file: !720, line: 204, baseType: !4172, size: 64, offset: 896)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !4173, file: !720, line: 207, baseType: !1575, size: 64, offset: 960)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !4173, file: !720, line: 209, baseType: !758, size: 64, offset: 1024)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !4173, file: !720, line: 214, baseType: !4214, size: 64, offset: 1088)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1535, line: 177, baseType: !4216)
!4216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1535, line: 177, size: 128, elements: !4217)
!4217 = !{!4218}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4216, file: !1535, line: 177, baseType: !4219, size: 128)
!4219 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1535, line: 176, baseType: !4220)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1535, line: 176, size: 128, elements: !4221)
!4221 = !{!4222, !4223, !4224}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4220, file: !1535, line: 176, baseType: !11, size: 32)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4220, file: !1535, line: 176, baseType: !11, size: 32, offset: 32)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4220, file: !1535, line: 176, baseType: !4225, size: 64, offset: 64)
!4225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4226, size: 64, elements: !886)
!4226 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1535, line: 174, baseType: !4227)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !389, line: 173, size: 1152, elements: !4229)
!4229 = !{!4230, !4231, !4233, !4256, !4257, !4261, !4266, !4267, !4271}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !4228, file: !389, line: 175, baseType: !2231, size: 640)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !4228, file: !389, line: 179, baseType: !4232, size: 64, offset: 640)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !4228, file: !389, line: 182, baseType: !4234, size: 64, offset: 704)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{null, !4237}
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !720, line: 276, size: 192, elements: !4239)
!4239 = !{!4240, !4241, !4255}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !4238, file: !720, line: 278, baseType: !1575, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !4238, file: !720, line: 279, baseType: !4242, size: 64, offset: 64)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !720, line: 272, baseType: !4244)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !720, line: 272, size: 128, elements: !4245)
!4245 = !{!4246}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4244, file: !720, line: 272, baseType: !4247, size: 128)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !720, line: 270, baseType: !4248)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !720, line: 270, size: 128, elements: !4249)
!4249 = !{!4250, !4251, !4252}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4248, file: !720, line: 270, baseType: !11, size: 32)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4248, file: !720, line: 270, baseType: !11, size: 32, offset: 32)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4248, file: !720, line: 270, baseType: !4253, size: 64, offset: 64)
!4253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4254, size: 64, elements: !886)
!4254 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !720, line: 268, baseType: !4172)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !4238, file: !720, line: 280, baseType: !758, size: 64, offset: 128)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !4228, file: !389, line: 187, baseType: !4232, size: 64, offset: 768)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !4228, file: !389, line: 188, baseType: !4258, size: 64, offset: 832)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{null, !4172}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !4228, file: !389, line: 191, baseType: !4262, size: 64, offset: 896)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{null, !4172, !4265}
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !4228, file: !389, line: 195, baseType: !11, size: 32, offset: 960)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !4228, file: !389, line: 196, baseType: !4268, size: 64, offset: 1024)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!11, !4172}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !4228, file: !389, line: 197, baseType: !4272, size: 64, offset: 1088)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{null, !4275}
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !720, line: 358, size: 320, elements: !4277)
!4277 = !{!4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !4276, file: !720, line: 359, baseType: !787, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4276, file: !720, line: 361, baseType: !4275, size: 64, offset: 64)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !4276, file: !720, line: 363, baseType: !4275, size: 64, offset: 128)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !4276, file: !720, line: 366, baseType: !4275, size: 64, offset: 192)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !4276, file: !720, line: 368, baseType: !6, size: 32, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !4276, file: !720, line: 372, baseType: !11, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !4276, file: !720, line: 375, baseType: !11, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !4276, file: !720, line: 378, baseType: !11, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !4276, file: !720, line: 380, baseType: !11, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !4276, file: !720, line: 382, baseType: !11, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !4276, file: !720, line: 384, baseType: !11, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !4276, file: !720, line: 387, baseType: !11, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4173, file: !720, line: 216, baseType: !4291, size: 320, offset: 1152)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !720, line: 88, size: 320, elements: !4292)
!4292 = !{!4293, !4296, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !4291, file: !720, line: 90, baseType: !4294, size: 64)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4295, size: 64)
!4295 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !720, line: 51, flags: DIFlagFwdDecl)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !4291, file: !720, line: 92, baseType: !4297, size: 192, offset: 64)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !720, line: 57, size: 192, elements: !4298)
!4298 = !{!4299, !4300, !4301, !4302, !4303}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !4297, file: !720, line: 60, baseType: !843, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !4297, file: !720, line: 63, baseType: !6, size: 32, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !4297, file: !720, line: 65, baseType: !6, size: 32, offset: 96)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !4297, file: !720, line: 67, baseType: !6, size: 32, offset: 128)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !4297, file: !720, line: 69, baseType: !6, size: 32, offset: 160)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4291, file: !720, line: 96, baseType: !11, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !4291, file: !720, line: 99, baseType: !11, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !4291, file: !720, line: 102, baseType: !11, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !4291, file: !720, line: 105, baseType: !11, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !4291, file: !720, line: 108, baseType: !11, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !4291, file: !720, line: 112, baseType: !11, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !4291, file: !720, line: 116, baseType: !11, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !4291, file: !720, line: 120, baseType: !11, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !4173, file: !720, line: 217, baseType: !4313, size: 320, offset: 1472)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !720, line: 126, size: 320, elements: !4314)
!4314 = !{!4315, !4316, !4317, !4318, !4319, !4320, !4321}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !4313, file: !720, line: 128, baseType: !843, size: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !4313, file: !720, line: 130, baseType: !843, size: 64, offset: 64)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !4313, file: !720, line: 134, baseType: !4172, size: 64, offset: 128)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4313, file: !720, line: 137, baseType: !6, size: 32, offset: 192)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4313, file: !720, line: 138, baseType: !6, size: 32, offset: 224)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !4313, file: !720, line: 141, baseType: !6, size: 32, offset: 256)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !4313, file: !720, line: 144, baseType: !754, size: 8, offset: 288)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !4173, file: !720, line: 218, baseType: !4323, size: 32, offset: 1792)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !720, line: 150, size: 32, elements: !4324)
!4324 = !{!4325}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !4323, file: !720, line: 151, baseType: !11, size: 32)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !4173, file: !720, line: 219, baseType: !4327, size: 192, offset: 1856)
!4327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !720, line: 171, size: 192, elements: !4328)
!4328 = !{!4329, !4350, !4351}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !4327, file: !720, line: 173, baseType: !4330, size: 64)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !720, line: 169, baseType: !4332)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !720, line: 169, size: 128, elements: !4333)
!4333 = !{!4334}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4332, file: !720, line: 169, baseType: !4335, size: 128)
!4335 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !720, line: 168, baseType: !4336)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !720, line: 168, size: 128, elements: !4337)
!4337 = !{!4338, !4339, !4340}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4336, file: !720, line: 168, baseType: !11, size: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4336, file: !720, line: 168, baseType: !11, size: 32, offset: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4336, file: !720, line: 168, baseType: !4341, size: 64, offset: 64)
!4341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4342, size: 64, elements: !886)
!4342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !720, line: 167, baseType: !4343)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !720, line: 156, size: 192, elements: !4345)
!4345 = !{!4346, !4347, !4348, !4349}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !4344, file: !720, line: 159, baseType: !787, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !4344, file: !720, line: 161, baseType: !787, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !4344, file: !720, line: 163, baseType: !754, size: 8, offset: 128)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !4344, file: !720, line: 165, baseType: !754, size: 8, offset: 136)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !4327, file: !720, line: 174, baseType: !1659, size: 64, offset: 64)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !4327, file: !720, line: 175, baseType: !1659, size: 64, offset: 128)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !4173, file: !720, line: 220, baseType: !4353, size: 256, offset: 2048)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !720, line: 74, size: 256, elements: !4354)
!4354 = !{!4355, !4356, !4357, !4358, !4359, !4360}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !4353, file: !720, line: 76, baseType: !843, size: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !4353, file: !720, line: 77, baseType: !843, size: 64, offset: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !4353, file: !720, line: 78, baseType: !787, size: 64, offset: 128)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !4353, file: !720, line: 79, baseType: !754, size: 8, offset: 192)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !4353, file: !720, line: 80, baseType: !754, size: 8, offset: 200)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !4353, file: !720, line: 82, baseType: !754, size: 8, offset: 208)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4173, file: !720, line: 223, baseType: !1323, size: 64, offset: 2304)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4173, file: !720, line: 225, baseType: !6, size: 32, offset: 2368)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !4173, file: !720, line: 227, baseType: !6, size: 32, offset: 2400)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4173, file: !720, line: 231, baseType: !6, size: 32, offset: 2432)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !4173, file: !720, line: 238, baseType: !11, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !4173, file: !720, line: 241, baseType: !11, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !4173, file: !720, line: 244, baseType: !11, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !4173, file: !720, line: 251, baseType: !11, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !4173, file: !720, line: 253, baseType: !11, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !4173, file: !720, line: 256, baseType: !11, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !4173, file: !720, line: 258, baseType: !11, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !4173, file: !720, line: 260, baseType: !11, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !4173, file: !720, line: 262, baseType: !11, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !4173, file: !720, line: 265, baseType: !11, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!4375 = !DILocalVariable(name: "e", scope: !4170, file: !3, line: 1898, type: !4177)
!4376 = !DILocation(line: 1849, column: 17, scope: !4166)
!4377 = !DILocation(line: 1857, column: 35, scope: !4166)
!4378 = !DILocation(line: 1862, column: 7, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 1862, column: 7)
!4380 = !DILocation(line: 1865, column: 9, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 1865, column: 7)
!4382 = !DILocation(line: 1862, column: 7, scope: !4166)
!4383 = !DILocation(line: 1868, column: 15, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 1868, column: 3)
!4385 = !DILocation(line: 0, scope: !4166)
!4386 = !DILocation(line: 1868, column: 8, scope: !4384)
!4387 = !DILocation(line: 0, scope: !4384)
!4388 = !DILocation(line: 1868, column: 3, scope: !4384)
!4389 = !DILocation(line: 1869, column: 9, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1869, column: 9)
!4391 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 1868, column: 3)
!4392 = !DILocation(line: 1869, column: 9, scope: !4391)
!4393 = !DILocation(line: 1871, column: 23, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 1870, column: 7)
!4395 = !DILocation(line: 1873, column: 7, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 1873, column: 6)
!4397 = !DILocation(line: 1873, column: 21, scope: !4396)
!4398 = !DILocation(line: 1873, column: 25, scope: !4396)
!4399 = !DILocation(line: 1873, column: 6, scope: !4394)
!4400 = !DILocation(line: 1875, column: 38, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1874, column: 4)
!4402 = !DILocation(line: 1876, column: 6, scope: !4401)
!4403 = !DILocation(line: 1868, column: 42, scope: !4391)
!4404 = !DILocation(line: 1868, column: 3, scope: !4391)
!4405 = distinct !{!4405, !4388, !4406}
!4406 = !DILocation(line: 1878, column: 7, scope: !4384)
!4407 = !DILocation(line: 1880, column: 8, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 1880, column: 3)
!4409 = !DILocation(line: 0, scope: !4408)
!4410 = !DILocation(line: 1880, column: 3, scope: !4408)
!4411 = !DILocation(line: 1882, column: 9, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 1882, column: 9)
!4413 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1880, column: 3)
!4414 = !DILocation(line: 1882, column: 9, scope: !4413)
!4415 = !DILocation(line: 1884, column: 23, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 1883, column: 7)
!4417 = !DILocation(line: 1886, column: 7, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1886, column: 6)
!4419 = !DILocation(line: 1886, column: 21, scope: !4418)
!4420 = !DILocation(line: 1886, column: 25, scope: !4418)
!4421 = !DILocation(line: 1886, column: 6, scope: !4416)
!4422 = !DILocation(line: 1888, column: 38, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 1887, column: 4)
!4424 = !DILocation(line: 1889, column: 6, scope: !4423)
!4425 = !DILocation(line: 1881, column: 15, scope: !4413)
!4426 = !DILocation(line: 1880, column: 3, scope: !4413)
!4427 = distinct !{!4427, !4410, !4428}
!4428 = !DILocation(line: 1891, column: 7, scope: !4408)
!4429 = !DILocation(line: 1892, column: 13, scope: !4171)
!4430 = !DILocation(line: 1892, column: 7, scope: !4171)
!4431 = !DILocation(line: 1893, column: 7, scope: !4171)
!4432 = !DILocation(line: 1894, column: 12, scope: !4171)
!4433 = !DILocation(line: 1893, column: 46, scope: !4171)
!4434 = !DILocation(line: 1893, column: 11, scope: !4171)
!4435 = !DILocation(line: 1895, column: 11, scope: !4171)
!4436 = !DILocation(line: 1892, column: 7, scope: !4166)
!4437 = !DILocation(line: 1897, column: 47, scope: !4170)
!4438 = !DILocation(line: 1897, column: 34, scope: !4170)
!4439 = !DILocation(line: 0, scope: !4170)
!4440 = !DILocation(line: 1899, column: 22, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 1899, column: 7)
!4442 = !DILocation(line: 1899, column: 12, scope: !4441)
!4443 = !DILocation(line: 0, scope: !4441)
!4444 = !DILocation(line: 1899, column: 7, scope: !4441)
!4445 = !DILocation(line: 1900, column: 12, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 1899, column: 7)
!4447 = !DILocation(line: 1900, column: 31, scope: !4446)
!4448 = !DILocation(line: 1899, column: 41, scope: !4446)
!4449 = !DILocation(line: 1899, column: 7, scope: !4446)
!4450 = distinct !{!4450, !4444, !4451}
!4451 = !DILocation(line: 1900, column: 33, scope: !4441)
!4452 = !DILocation(line: 1901, column: 7, scope: !4170)
!4453 = !DILocation(line: 1903, column: 11, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 1903, column: 11)
!4455 = !DILocation(line: 1903, column: 11, scope: !4170)
!4456 = !DILocation(line: 1905, column: 4, scope: !4454)
!4457 = !DILocation(line: 1904, column: 2, scope: !4454)
!4458 = !DILocation(line: 1908, column: 1, scope: !4166)
!4459 = distinct !DISubprogram(name: "expand_builtin_eh_pointer", scope: !3, file: !3, line: 1956, type: !4460, scopeLine: 1957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4462)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{!962, !787}
!4462 = !{!4463, !4464}
!4463 = !DILocalVariable(name: "exp", arg: 1, scope: !4459, file: !3, line: 1956, type: !787)
!4464 = !DILocalVariable(name: "region", scope: !4459, file: !3, line: 1958, type: !765)
!4465 = !DILocation(line: 0, scope: !4459)
!4466 = !DILocation(line: 1959, column: 33, scope: !4459)
!4467 = !DILocation(line: 1959, column: 7, scope: !4459)
!4468 = !DILocation(line: 1960, column: 15, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 1960, column: 7)
!4470 = !DILocation(line: 1960, column: 27, scope: !4469)
!4471 = !DILocation(line: 1960, column: 7, scope: !4459)
!4472 = !DILocation(line: 1961, column: 40, scope: !4469)
!4473 = !DILocation(line: 1961, column: 27, scope: !4469)
!4474 = !DILocation(line: 1961, column: 25, scope: !4469)
!4475 = !DILocation(line: 1961, column: 5, scope: !4469)
!4476 = !DILocation(line: 1962, column: 18, scope: !4459)
!4477 = !DILocation(line: 1962, column: 3, scope: !4459)
!4478 = distinct !DISubprogram(name: "expand_builtin_eh_common", scope: !3, file: !3, line: 1936, type: !4479, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4481)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!765, !787}
!4481 = !{!4482, !4483, !4484}
!4482 = !DILocalVariable(name: "region_nr_t", arg: 1, scope: !4478, file: !3, line: 1936, type: !787)
!4483 = !DILocalVariable(name: "region_nr", scope: !4478, file: !3, line: 1938, type: !843)
!4484 = !DILocalVariable(name: "region", scope: !4478, file: !3, line: 1939, type: !765)
!4485 = !DILocation(line: 0, scope: !4478)
!4486 = !DILocation(line: 1941, column: 3, scope: !4478)
!4487 = !DILocation(line: 1942, column: 15, scope: !4478)
!4488 = !DILocation(line: 1944, column: 12, scope: !4478)
!4489 = !DILocation(line: 1948, column: 3, scope: !4478)
!4490 = !DILocation(line: 1950, column: 3, scope: !4478)
!4491 = distinct !DISubprogram(name: "expand_builtin_eh_filter", scope: !3, file: !3, line: 1968, type: !4460, scopeLine: 1969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4492)
!4492 = !{!4493, !4494}
!4493 = !DILocalVariable(name: "exp", arg: 1, scope: !4491, file: !3, line: 1968, type: !787)
!4494 = !DILocalVariable(name: "region", scope: !4491, file: !3, line: 1970, type: !765)
!4495 = !DILocation(line: 0, scope: !4491)
!4496 = !DILocation(line: 1971, column: 33, scope: !4491)
!4497 = !DILocation(line: 1971, column: 7, scope: !4491)
!4498 = !DILocation(line: 1972, column: 15, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 1972, column: 7)
!4500 = !DILocation(line: 1972, column: 26, scope: !4499)
!4501 = !DILocation(line: 1972, column: 7, scope: !4491)
!4502 = !DILocation(line: 1973, column: 47, scope: !4499)
!4503 = !DILocation(line: 1973, column: 39, scope: !4499)
!4504 = !DILocation(line: 1973, column: 26, scope: !4499)
!4505 = !DILocation(line: 1973, column: 24, scope: !4499)
!4506 = !DILocation(line: 1973, column: 5, scope: !4499)
!4507 = !DILocation(line: 1974, column: 18, scope: !4491)
!4508 = !DILocation(line: 1974, column: 3, scope: !4491)
!4509 = distinct !DISubprogram(name: "expand_builtin_eh_copy_values", scope: !3, file: !3, line: 1981, type: !4460, scopeLine: 1982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4510)
!4510 = !{!4511, !4512, !4513, !4514}
!4511 = !DILocalVariable(name: "exp", arg: 1, scope: !4509, file: !3, line: 1981, type: !787)
!4512 = !DILocalVariable(name: "dst", scope: !4509, file: !3, line: 1983, type: !765)
!4513 = !DILocalVariable(name: "src", scope: !4509, file: !3, line: 1985, type: !765)
!4514 = !DILocalVariable(name: "fmode", scope: !4509, file: !3, line: 1987, type: !17)
!4515 = !DILocation(line: 0, scope: !4509)
!4516 = !DILocation(line: 1984, column: 33, scope: !4509)
!4517 = !DILocation(line: 1984, column: 7, scope: !4509)
!4518 = !DILocation(line: 1986, column: 33, scope: !4509)
!4519 = !DILocation(line: 1986, column: 7, scope: !4509)
!4520 = !DILocation(line: 1987, column: 37, scope: !4509)
!4521 = !DILocation(line: 1987, column: 29, scope: !4509)
!4522 = !DILocation(line: 1989, column: 12, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1989, column: 7)
!4524 = !DILocation(line: 1989, column: 24, scope: !4523)
!4525 = !DILocation(line: 1989, column: 7, scope: !4509)
!4526 = !DILocation(line: 1990, column: 37, scope: !4523)
!4527 = !DILocation(line: 1990, column: 24, scope: !4523)
!4528 = !DILocation(line: 1990, column: 22, scope: !4523)
!4529 = !DILocation(line: 1990, column: 5, scope: !4523)
!4530 = !DILocation(line: 1991, column: 12, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1991, column: 7)
!4532 = !DILocation(line: 1991, column: 24, scope: !4531)
!4533 = !DILocation(line: 1991, column: 7, scope: !4509)
!4534 = !DILocation(line: 1992, column: 37, scope: !4531)
!4535 = !DILocation(line: 1992, column: 24, scope: !4531)
!4536 = !DILocation(line: 1992, column: 22, scope: !4531)
!4537 = !DILocation(line: 1992, column: 5, scope: !4531)
!4538 = !DILocation(line: 1994, column: 12, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1994, column: 7)
!4540 = !DILocation(line: 1994, column: 23, scope: !4539)
!4541 = !DILocation(line: 1994, column: 7, scope: !4509)
!4542 = !DILocation(line: 1995, column: 23, scope: !4539)
!4543 = !DILocation(line: 1995, column: 21, scope: !4539)
!4544 = !DILocation(line: 1995, column: 5, scope: !4539)
!4545 = !DILocation(line: 1996, column: 12, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 1996, column: 7)
!4547 = !DILocation(line: 1996, column: 23, scope: !4546)
!4548 = !DILocation(line: 1996, column: 7, scope: !4509)
!4549 = !DILocation(line: 1997, column: 23, scope: !4546)
!4550 = !DILocation(line: 1997, column: 21, scope: !4546)
!4551 = !DILocation(line: 1997, column: 5, scope: !4546)
!4552 = !DILocation(line: 1999, column: 24, scope: !4509)
!4553 = !DILocation(line: 1999, column: 42, scope: !4509)
!4554 = !DILocation(line: 1999, column: 3, scope: !4509)
!4555 = !DILocation(line: 2000, column: 24, scope: !4509)
!4556 = !DILocation(line: 2000, column: 41, scope: !4509)
!4557 = !DILocation(line: 2000, column: 3, scope: !4509)
!4558 = !DILocation(line: 2002, column: 10, scope: !4509)
!4559 = !DILocation(line: 2002, column: 3, scope: !4509)
!4560 = distinct !DISubprogram(name: "expand_builtin_unwind_init", scope: !3, file: !3, line: 2009, type: !2782, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!4561 = !DILocation(line: 2013, column: 29, scope: !4560)
!4562 = !DILocation(line: 2016, column: 3, scope: !4560)
!4563 = !DILocation(line: 2018, column: 1, scope: !4560)
!4564 = distinct !DISubprogram(name: "expand_builtin_eh_return_data_regno", scope: !3, file: !3, line: 2025, type: !4460, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4565)
!4565 = !{!4566, !4567, !4568}
!4566 = !DILocalVariable(name: "exp", arg: 1, scope: !4564, file: !3, line: 2025, type: !787)
!4567 = !DILocalVariable(name: "which", scope: !4564, file: !3, line: 2027, type: !787)
!4568 = !DILocalVariable(name: "iwhich", scope: !4564, file: !3, line: 2028, type: !841)
!4569 = !DILocation(line: 0, scope: !4564)
!4570 = !DILocation(line: 2027, column: 16, scope: !4564)
!4571 = !DILocation(line: 2030, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 2030, column: 7)
!4573 = !DILocation(line: 2030, column: 25, scope: !4572)
!4574 = !DILocation(line: 2030, column: 7, scope: !4564)
!4575 = !DILocation(line: 2032, column: 7, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 2031, column: 5)
!4577 = !DILocation(line: 2033, column: 14, scope: !4576)
!4578 = !DILocation(line: 2033, column: 7, scope: !4576)
!4579 = !DILocation(line: 2036, column: 12, scope: !4564)
!4580 = !DILocation(line: 2037, column: 12, scope: !4564)
!4581 = !DILocation(line: 2038, column: 7, scope: !4564)
!4582 = !DILocation(line: 2039, column: 12, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 2038, column: 7)
!4584 = !DILocation(line: 2039, column: 5, scope: !4583)
!4585 = !DILocation(line: 2044, column: 12, scope: !4564)
!4586 = !DILocation(line: 2047, column: 10, scope: !4564)
!4587 = !DILocation(line: 2047, column: 3, scope: !4564)
!4588 = !DILocation(line: 2048, column: 1, scope: !4564)
!4589 = distinct !DISubprogram(name: "expand_builtin_extract_return_addr", scope: !3, file: !3, line: 2054, type: !4460, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4590)
!4590 = !{!4591, !4592}
!4591 = !DILocalVariable(name: "addr_tree", arg: 1, scope: !4589, file: !3, line: 2054, type: !787)
!4592 = !DILocalVariable(name: "addr", scope: !4589, file: !3, line: 2056, type: !962)
!4593 = !DILocation(line: 0, scope: !4589)
!4594 = !DILocation(line: 2056, column: 14, scope: !4589)
!4595 = !DILocation(line: 2058, column: 7, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2058, column: 7)
!4597 = !DILocation(line: 2058, column: 23, scope: !4596)
!4598 = !DILocation(line: 2059, column: 7, scope: !4596)
!4599 = !DILocation(line: 2059, column: 26, scope: !4596)
!4600 = !DILocation(line: 2058, column: 7, scope: !4589)
!4601 = !DILocation(line: 2064, column: 14, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2060, column: 5)
!4603 = !DILocation(line: 2066, column: 5, scope: !4602)
!4604 = !DILocation(line: 2078, column: 3, scope: !4589)
!4605 = distinct !DISubprogram(name: "expand_expr", scope: !743, file: !743, line: 555, type: !4606, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4608)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!962, !787, !962, !17, !742}
!4608 = !{!4609, !4610, !4611, !4612}
!4609 = !DILocalVariable(name: "exp", arg: 1, scope: !4605, file: !743, line: 555, type: !787)
!4610 = !DILocalVariable(name: "target", arg: 2, scope: !4605, file: !743, line: 555, type: !962)
!4611 = !DILocalVariable(name: "mode", arg: 3, scope: !4605, file: !743, line: 555, type: !17)
!4612 = !DILocalVariable(name: "modifier", arg: 4, scope: !4605, file: !743, line: 556, type: !742)
!4613 = !DILocation(line: 0, scope: !4605)
!4614 = !DILocation(line: 558, column: 10, scope: !4605)
!4615 = !DILocation(line: 558, column: 3, scope: !4605)
!4616 = distinct !DISubprogram(name: "expand_builtin_frob_return_addr", scope: !3, file: !3, line: 2086, type: !4460, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4617)
!4617 = !{!4618, !4619}
!4618 = !DILocalVariable(name: "addr_tree", arg: 1, scope: !4616, file: !3, line: 2086, type: !787)
!4619 = !DILocalVariable(name: "addr", scope: !4616, file: !3, line: 2088, type: !962)
!4620 = !DILocation(line: 0, scope: !4616)
!4621 = !DILocation(line: 2088, column: 48, scope: !4616)
!4622 = !DILocation(line: 2088, column: 14, scope: !4616)
!4623 = !DILocation(line: 2090, column: 10, scope: !4616)
!4624 = !DILocation(line: 2097, column: 3, scope: !4616)
!4625 = distinct !DISubprogram(name: "expand_builtin_eh_return", scope: !3, file: !3, line: 2104, type: !4626, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4628)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{null, !787, !787}
!4628 = !{!4629, !4630, !4631}
!4629 = !DILocalVariable(name: "stackadj_tree", arg: 1, scope: !4625, file: !3, line: 2104, type: !787)
!4630 = !DILocalVariable(name: "handler_tree", arg: 2, scope: !4625, file: !3, line: 2105, type: !787)
!4631 = !DILocalVariable(name: "tmp", scope: !4625, file: !3, line: 2107, type: !962)
!4632 = !DILocation(line: 0, scope: !4625)
!4633 = !DILocation(line: 2110, column: 46, scope: !4625)
!4634 = !DILocation(line: 2110, column: 9, scope: !4625)
!4635 = !DILocation(line: 2112, column: 9, scope: !4625)
!4636 = !DILocation(line: 2113, column: 17, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2113, column: 7)
!4638 = !DILocation(line: 2113, column: 8, scope: !4637)
!4639 = !DILocation(line: 2113, column: 7, scope: !4625)
!4640 = !DILocation(line: 2114, column: 29, scope: !4637)
!4641 = !DILocation(line: 2114, column: 27, scope: !4637)
!4642 = !DILocation(line: 2114, column: 5, scope: !4637)
!4643 = !DILocation(line: 2115, column: 16, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 2115, column: 12)
!4645 = !DILocation(line: 2115, column: 12, scope: !4637)
!4646 = !DILocation(line: 2116, column: 5, scope: !4644)
!4647 = !DILocation(line: 2119, column: 45, scope: !4625)
!4648 = !DILocation(line: 2119, column: 9, scope: !4625)
!4649 = !DILocation(line: 2121, column: 9, scope: !4625)
!4650 = !DILocation(line: 2122, column: 17, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2122, column: 7)
!4652 = !DILocation(line: 2122, column: 8, scope: !4651)
!4653 = !DILocation(line: 2122, column: 7, scope: !4625)
!4654 = !DILocation(line: 2123, column: 28, scope: !4651)
!4655 = !DILocation(line: 2123, column: 26, scope: !4651)
!4656 = !DILocation(line: 2123, column: 5, scope: !4651)
!4657 = !DILocation(line: 2124, column: 16, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 2124, column: 12)
!4659 = !DILocation(line: 2124, column: 12, scope: !4651)
!4660 = !DILocation(line: 2125, column: 5, scope: !4658)
!4661 = !DILocation(line: 2127, column: 17, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 2127, column: 7)
!4663 = !DILocation(line: 2127, column: 8, scope: !4662)
!4664 = !DILocation(line: 2127, column: 7, scope: !4625)
!4665 = !DILocation(line: 2128, column: 26, scope: !4662)
!4666 = !DILocation(line: 2128, column: 24, scope: !4662)
!4667 = !DILocation(line: 2128, column: 5, scope: !4662)
!4668 = !DILocation(line: 2129, column: 23, scope: !4625)
!4669 = !DILocation(line: 2129, column: 3, scope: !4625)
!4670 = !DILocation(line: 2130, column: 1, scope: !4625)
!4671 = distinct !DISubprogram(name: "expand_eh_return", scope: !3, file: !3, line: 2137, type: !2782, scopeLine: 2138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4672)
!4672 = !{!4673}
!4673 = !DILocalVariable(name: "around_label", scope: !4671, file: !3, line: 2139, type: !962)
!4674 = !DILocation(line: 2141, column: 18, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2141, column: 7)
!4676 = !DILocation(line: 2141, column: 9, scope: !4675)
!4677 = !DILocation(line: 2141, column: 7, scope: !4671)
!4678 = !DILocation(line: 2144, column: 25, scope: !4671)
!4679 = !DILocation(line: 2147, column: 19, scope: !4671)
!4680 = !DILocation(line: 2147, column: 43, scope: !4671)
!4681 = !DILocation(line: 2147, column: 3, scope: !4671)
!4682 = !DILocation(line: 2150, column: 18, scope: !4671)
!4683 = !DILocation(line: 0, scope: !4671)
!4684 = !DILocation(line: 2151, column: 3, scope: !4671)
!4685 = !DILocation(line: 2153, column: 24, scope: !4671)
!4686 = !DILocation(line: 2153, column: 3, scope: !4671)
!4687 = !DILocation(line: 2154, column: 3, scope: !4671)
!4688 = !DILocation(line: 2157, column: 19, scope: !4671)
!4689 = !DILocation(line: 2157, column: 52, scope: !4671)
!4690 = !DILocation(line: 2157, column: 3, scope: !4671)
!4691 = !DILocation(line: 2162, column: 40, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2161, column: 7)
!4693 = !DILocation(line: 2162, column: 16, scope: !4692)
!4694 = !DILocation(line: 2162, column: 5, scope: !4692)
!4695 = !DILocation(line: 2173, column: 3, scope: !4671)
!4696 = !DILocation(line: 2174, column: 1, scope: !4671)
!4697 = distinct !DISubprogram(name: "expand_builtin_extend_pointer", scope: !3, file: !3, line: 2180, type: !4460, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4698)
!4698 = !{!4699, !4700, !4701}
!4699 = !DILocalVariable(name: "addr_tree", arg: 1, scope: !4697, file: !3, line: 2180, type: !787)
!4700 = !DILocalVariable(name: "addr", scope: !4697, file: !3, line: 2182, type: !962)
!4701 = !DILocalVariable(name: "extend", scope: !4697, file: !3, line: 2183, type: !6)
!4702 = !DILocation(line: 0, scope: !4697)
!4703 = !DILocation(line: 2182, column: 48, scope: !4697)
!4704 = !DILocation(line: 2182, column: 14, scope: !4697)
!4705 = !DILocation(line: 2193, column: 33, scope: !4697)
!4706 = !DILocation(line: 2193, column: 25, scope: !4697)
!4707 = !DILocation(line: 2193, column: 54, scope: !4697)
!4708 = !DILocation(line: 2193, column: 10, scope: !4697)
!4709 = !DILocation(line: 2193, column: 3, scope: !4697)
!4710 = distinct !DISubprogram(name: "gate_convert_to_eh_region_ranges", scope: !3, file: !3, line: 2655, type: !2237, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !2396)
!4711 = !DILocation(line: 2658, column: 37, scope: !4710)
!4712 = !DILocation(line: 2658, column: 43, scope: !4710)
!4713 = !DILocation(line: 2658, column: 47, scope: !4710)
!4714 = !DILocation(line: 2658, column: 59, scope: !4710)
!4715 = !DILocation(line: 2658, column: 10, scope: !4710)
!4716 = !DILocation(line: 2658, column: 3, scope: !4710)
!4717 = distinct !DISubprogram(name: "convert_to_eh_region_ranges", scope: !3, file: !3, line: 2392, type: !2241, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !4718)
!4718 = !{!4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4742, !4743, !4744, !4745, !4746, !4752, !4753, !4754, !4755, !4756, !4760, !4761, !4762, !4767, !4768, !4775, !4776}
!4719 = !DILocalVariable(name: "insn", scope: !4717, file: !3, line: 2394, type: !962)
!4720 = !DILocalVariable(name: "iter", scope: !4717, file: !3, line: 2394, type: !962)
!4721 = !DILocalVariable(name: "note", scope: !4717, file: !3, line: 2394, type: !962)
!4722 = !DILocalVariable(name: "ar_hash", scope: !4717, file: !3, line: 2395, type: !1575)
!4723 = !DILocalVariable(name: "last_action", scope: !4717, file: !3, line: 2396, type: !6)
!4724 = !DILocalVariable(name: "last_action_insn", scope: !4717, file: !3, line: 2397, type: !962)
!4725 = !DILocalVariable(name: "last_landing_pad", scope: !4717, file: !3, line: 2398, type: !962)
!4726 = !DILocalVariable(name: "first_no_action_insn", scope: !4717, file: !3, line: 2399, type: !962)
!4727 = !DILocalVariable(name: "call_site", scope: !4717, file: !3, line: 2400, type: !6)
!4728 = !DILocalVariable(name: "cur_sec", scope: !4717, file: !3, line: 2401, type: !6)
!4729 = !DILocalVariable(name: "section_switch_note", scope: !4717, file: !3, line: 2402, type: !962)
!4730 = !DILocalVariable(name: "first_no_action_insn_before_switch", scope: !4717, file: !3, line: 2403, type: !962)
!4731 = !DILocalVariable(name: "last_no_action_insn_before_switch", scope: !4717, file: !3, line: 2404, type: !962)
!4732 = !DILocalVariable(name: "pad_map", scope: !4717, file: !3, line: 2405, type: !2201)
!4733 = !DILocalVariable(name: "pad_loc", scope: !4717, file: !3, line: 2406, type: !3289)
!4734 = !DILocalVariable(name: "min_labelno", scope: !4717, file: !3, line: 2407, type: !6)
!4735 = !DILocalVariable(name: "max_labelno", scope: !4717, file: !3, line: 2407, type: !6)
!4736 = !DILocalVariable(name: "saved_call_site_base", scope: !4717, file: !3, line: 2408, type: !6)
!4737 = !DILocalVariable(name: "lp", scope: !4738, file: !3, line: 2417, type: !2163)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 2416, column: 7)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 2415, column: 9)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 2414, column: 3)
!4741 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 2414, column: 3)
!4742 = !DILocalVariable(name: "region", scope: !4738, file: !3, line: 2418, type: !765)
!4743 = !DILocalVariable(name: "nothrow", scope: !4738, file: !3, line: 2419, type: !754)
!4744 = !DILocalVariable(name: "this_action", scope: !4738, file: !3, line: 2420, type: !6)
!4745 = !DILocalVariable(name: "this_landing_pad", scope: !4738, file: !3, line: 2421, type: !962)
!4746 = !DILocalVariable(name: "i", scope: !4747, file: !3, line: 2560, type: !6)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 2559, column: 2)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 2558, column: 7)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 2558, column: 7)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 2554, column: 5)
!4751 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 2553, column: 7)
!4752 = !DILocalVariable(name: "idx", scope: !4747, file: !3, line: 2560, type: !6)
!4753 = !DILocalVariable(name: "n", scope: !4747, file: !3, line: 2561, type: !6)
!4754 = !DILocalVariable(name: "prev_bb", scope: !4747, file: !3, line: 2563, type: !1543)
!4755 = !DILocalVariable(name: "padbb", scope: !4747, file: !3, line: 2563, type: !1543)
!4756 = !DILocalVariable(name: "cs", scope: !4757, file: !3, line: 2567, type: !2185)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 2566, column: 6)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 2565, column: 4)
!4759 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 2565, column: 4)
!4760 = !DILocalVariable(name: "jump", scope: !4757, file: !3, line: 2570, type: !962)
!4761 = !DILocalVariable(name: "note", scope: !4757, file: !3, line: 2570, type: !962)
!4762 = !DILocalVariable(name: "bb", scope: !4763, file: !3, line: 2616, type: !1543)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 2615, column: 7)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2613, column: 9)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2582, column: 3)
!4766 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 2581, column: 12)
!4767 = !DILocalVariable(name: "part", scope: !4763, file: !3, line: 2617, type: !6)
!4768 = !DILocalVariable(name: "ei", scope: !4763, file: !3, line: 2620, type: !4769)
!4769 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !341, line: 682, baseType: !4770)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 679, size: 128, elements: !4771)
!4771 = !{!4772, !4773}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4770, file: !341, line: 680, baseType: !11, size: 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !4770, file: !341, line: 681, baseType: !4774, size: 64, offset: 64)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!4775 = !DILocalVariable(name: "e", scope: !4763, file: !3, line: 2621, type: !1090)
!4776 = !DILocalVariable(name: "bb_", scope: !4777, file: !3, line: 2625, type: !1543)
!4777 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 2625, column: 9)
!4778 = !DILocation(line: 0, scope: !4717)
!4779 = !DILocation(line: 2408, column: 30, scope: !4717)
!4780 = !DILocation(line: 2410, column: 33, scope: !4717)
!4781 = !DILocation(line: 2410, column: 31, scope: !4717)
!4782 = !DILocation(line: 2412, column: 13, scope: !4717)
!4783 = !DILocation(line: 2414, column: 15, scope: !4741)
!4784 = !DILocation(line: 0, scope: !4738)
!4785 = !DILocation(line: 2414, column: 8, scope: !4741)
!4786 = !DILocation(line: 2407, column: 7, scope: !4717)
!4787 = !DILocation(line: 2406, column: 11, scope: !4717)
!4788 = !DILocation(line: 2405, column: 8, scope: !4717)
!4789 = !DILocation(line: 2404, column: 7, scope: !4717)
!4790 = !DILocation(line: 2403, column: 7, scope: !4717)
!4791 = !DILocation(line: 2402, column: 7, scope: !4717)
!4792 = !DILocation(line: 2401, column: 7, scope: !4717)
!4793 = !DILocation(line: 2400, column: 7, scope: !4717)
!4794 = !DILocation(line: 2399, column: 7, scope: !4717)
!4795 = !DILocation(line: 2398, column: 7, scope: !4717)
!4796 = !DILocation(line: 2397, column: 7, scope: !4717)
!4797 = !DILocation(line: 2396, column: 7, scope: !4717)
!4798 = !DILocation(line: 0, scope: !4741)
!4799 = !DILocation(line: 2414, column: 3, scope: !4741)
!4800 = !DILocation(line: 2415, column: 9, scope: !4739)
!4801 = !DILocation(line: 2415, column: 9, scope: !4740)
!4802 = !DILocation(line: 2417, column: 2, scope: !4738)
!4803 = !DILocation(line: 2418, column: 2, scope: !4738)
!4804 = !DILocation(line: 2425, column: 6, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 2424, column: 6)
!4806 = !DILocation(line: 2425, column: 9, scope: !4805)
!4807 = !DILocation(line: 2425, column: 35, scope: !4805)
!4808 = !DILocation(line: 2424, column: 6, scope: !4738)
!4809 = !DILocation(line: 2426, column: 11, scope: !4805)
!4810 = !DILocation(line: 2426, column: 4, scope: !4805)
!4811 = !DILocation(line: 2428, column: 12, scope: !4738)
!4812 = !DILocation(line: 2429, column: 6, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 2429, column: 6)
!4814 = !DILocation(line: 2429, column: 6, scope: !4738)
!4815 = !DILocation(line: 2431, column: 6, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 2431, column: 6)
!4817 = !DILocation(line: 2431, column: 6, scope: !4738)
!4818 = !DILocation(line: 2432, column: 18, scope: !4816)
!4819 = !DILocation(line: 2432, column: 4, scope: !4816)
!4820 = !DILocation(line: 0, scope: !4816)
!4821 = !DILocation(line: 2438, column: 18, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 2438, column: 6)
!4823 = !DILocation(line: 2438, column: 6, scope: !4738)
!4824 = !DILocation(line: 2439, column: 23, scope: !4822)
!4825 = !DILocation(line: 2439, column: 4, scope: !4822)
!4826 = !DILocation(line: 2443, column: 23, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 2443, column: 11)
!4828 = !DILocation(line: 2443, column: 11, scope: !4822)
!4829 = !DILocation(line: 2449, column: 18, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 2449, column: 6)
!4831 = !DILocation(line: 2449, column: 6, scope: !4738)
!4832 = !DILocation(line: 2450, column: 23, scope: !4830)
!4833 = !DILocation(line: 2450, column: 27, scope: !4830)
!4834 = !DILocation(line: 2450, column: 4, scope: !4830)
!4835 = !DILocation(line: 0, scope: !4830)
!4836 = !DILocation(line: 2456, column: 18, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 2456, column: 6)
!4838 = !DILocation(line: 2457, column: 26, scope: !4837)
!4839 = !DILocation(line: 2457, column: 6, scope: !4837)
!4840 = !DILocation(line: 2462, column: 22, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 2462, column: 10)
!4842 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 2458, column: 4)
!4843 = !DILocation(line: 2462, column: 10, scope: !4842)
!4844 = !DILocation(line: 2465, column: 7, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 2465, column: 7)
!4846 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 2463, column: 8)
!4847 = !DILocation(line: 2465, column: 7, scope: !4846)
!4848 = !DILocation(line: 2467, column: 19, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2466, column: 5)
!4850 = !DILocation(line: 2469, column: 11, scope: !4849)
!4851 = !DILocation(line: 2471, column: 7, scope: !4849)
!4852 = !DILocation(line: 2471, column: 30, scope: !4849)
!4853 = !DILocation(line: 2472, column: 11, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 2472, column: 11)
!4855 = !DILocation(line: 2472, column: 11, scope: !4849)
!4856 = !DILocation(line: 2475, column: 8, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2473, column: 9)
!4858 = !DILocation(line: 2477, column: 4, scope: !4857)
!4859 = !DILocation(line: 2477, column: 27, scope: !4857)
!4860 = !DILocation(line: 2478, column: 9, scope: !4857)
!4861 = !DILocation(line: 2480, column: 9, scope: !4854)
!4862 = !DILocation(line: 2483, column: 7, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 2483, column: 7)
!4864 = !DILocation(line: 2483, column: 7, scope: !4846)
!4865 = !DILocation(line: 2485, column: 19, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2484, column: 5)
!4867 = !DILocation(line: 2486, column: 14, scope: !4866)
!4868 = !DILocation(line: 2488, column: 7, scope: !4866)
!4869 = !DILocation(line: 2488, column: 30, scope: !4866)
!4870 = !DILocation(line: 2490, column: 5, scope: !4866)
!4871 = !DILocation(line: 0, scope: !4846)
!4872 = !DILocation(line: 2492, column: 10, scope: !4846)
!4873 = !DILocation(line: 2494, column: 3, scope: !4846)
!4874 = !DILocation(line: 2494, column: 26, scope: !4846)
!4875 = !DILocation(line: 2495, column: 8, scope: !4846)
!4876 = !DILocation(line: 2499, column: 22, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 2499, column: 10)
!4878 = !DILocation(line: 2499, column: 10, scope: !4842)
!4879 = !DILocation(line: 2502, column: 9, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 2500, column: 8)
!4881 = !DILocation(line: 2501, column: 15, scope: !4880)
!4882 = !DILocation(line: 2504, column: 10, scope: !4880)
!4883 = !DILocation(line: 2505, column: 3, scope: !4880)
!4884 = !DILocation(line: 2505, column: 26, scope: !4880)
!4885 = !DILocation(line: 2506, column: 8, scope: !4880)
!4886 = !DILocation(line: 2512, column: 7, scope: !4739)
!4887 = !DILocation(line: 2513, column: 14, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 2513, column: 14)
!4889 = !DILocation(line: 2514, column: 7, scope: !4888)
!4890 = !DILocation(line: 2514, column: 10, scope: !4888)
!4891 = !DILocation(line: 2514, column: 27, scope: !4888)
!4892 = !DILocation(line: 2513, column: 14, scope: !4739)
!4893 = !DILocation(line: 2516, column: 2, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 2515, column: 7)
!4895 = !DILocation(line: 2517, column: 2, scope: !4894)
!4896 = !DILocation(line: 2519, column: 6, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2519, column: 6)
!4898 = !DILocation(line: 2519, column: 6, scope: !4894)
!4899 = !DILocation(line: 2524, column: 6, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2520, column: 4)
!4901 = !DILocation(line: 2529, column: 23, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2529, column: 11)
!4903 = !DILocation(line: 2530, column: 23, scope: !4902)
!4904 = !DILocation(line: 2529, column: 11, scope: !4897)
!4905 = !DILocation(line: 2531, column: 20, scope: !4894)
!4906 = !DILocation(line: 2531, column: 17, scope: !4894)
!4907 = !DILocation(line: 2533, column: 9, scope: !4894)
!4908 = !DILocation(line: 2534, column: 2, scope: !4894)
!4909 = !DILocation(line: 2536, column: 6, scope: !4894)
!4910 = !DILocation(line: 2536, column: 4, scope: !4894)
!4911 = !DILocation(line: 2537, column: 16, scope: !4894)
!4912 = !DILocation(line: 2538, column: 16, scope: !4894)
!4913 = !DILocation(line: 2539, column: 12, scope: !4894)
!4914 = !DILocation(line: 2540, column: 12, scope: !4894)
!4915 = !DILocation(line: 2541, column: 7, scope: !4894)
!4916 = !DILocation(line: 2542, column: 14, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 2542, column: 14)
!4918 = !DILocation(line: 2542, column: 32, scope: !4917)
!4919 = !DILocation(line: 2542, column: 29, scope: !4917)
!4920 = !DILocation(line: 2543, column: 25, scope: !4917)
!4921 = !DILocation(line: 2543, column: 50, scope: !4917)
!4922 = !DILocation(line: 2543, column: 7, scope: !4917)
!4923 = !DILocation(line: 2414, column: 43, scope: !4740)
!4924 = !DILocation(line: 2414, column: 3, scope: !4740)
!4925 = distinct !{!4925, !4799, !4926}
!4926 = !DILocation(line: 2543, column: 63, scope: !4741)
!4927 = !DILocation(line: 2545, column: 19, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 2545, column: 7)
!4929 = !DILocation(line: 2545, column: 30, scope: !4928)
!4930 = !DILocation(line: 2545, column: 25, scope: !4928)
!4931 = !DILocation(line: 2547, column: 14, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2546, column: 5)
!4933 = !DILocation(line: 2548, column: 7, scope: !4932)
!4934 = !DILocation(line: 2548, column: 30, scope: !4932)
!4935 = !DILocation(line: 2549, column: 5, scope: !4932)
!4936 = !DILocation(line: 2551, column: 18, scope: !4717)
!4937 = !DILocation(line: 2553, column: 7, scope: !4751)
!4938 = !DILocation(line: 2553, column: 7, scope: !4717)
!4939 = !DILocation(line: 0, scope: !4763)
!4940 = !DILocation(line: 0, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 2626, column: 9)
!4942 = !DILocation(line: 0, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 2626, column: 9)
!4944 = !DILocation(line: 2558, column: 7, scope: !4749)
!4945 = !DILocation(line: 0, scope: !4749)
!4946 = !DILocation(line: 2558, column: 33, scope: !4748)
!4947 = !DILocation(line: 2561, column: 12, scope: !4747)
!4948 = !DILocation(line: 0, scope: !4747)
!4949 = !DILocation(line: 0, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 2577, column: 12)
!4951 = !DILocation(line: 2565, column: 9, scope: !4759)
!4952 = !DILocation(line: 2563, column: 16, scope: !4747)
!4953 = !DILocation(line: 0, scope: !4759)
!4954 = !DILocation(line: 2565, column: 18, scope: !4758)
!4955 = !DILocation(line: 2565, column: 4, scope: !4759)
!4956 = !DILocation(line: 2568, column: 3, scope: !4757)
!4957 = !DILocation(line: 0, scope: !4757)
!4958 = !DILocation(line: 2572, column: 16, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 2572, column: 12)
!4960 = !DILocation(line: 2572, column: 28, scope: !4959)
!4961 = !DILocation(line: 2572, column: 12, scope: !4757)
!4962 = !DILocation(line: 2574, column: 14, scope: !4757)
!4963 = !DILocation(line: 2574, column: 50, scope: !4757)
!4964 = !DILocation(line: 2577, column: 12, scope: !4950)
!4965 = !DILocation(line: 2577, column: 36, scope: !4950)
!4966 = !DILocation(line: 2577, column: 12, scope: !4757)
!4967 = !DILocation(line: 2581, column: 12, scope: !4766)
!4968 = !DILocation(line: 2581, column: 25, scope: !4766)
!4969 = !DILocation(line: 2581, column: 12, scope: !4757)
!4970 = !DILocation(line: 2642, column: 24, scope: !4757)
!4971 = !DILocation(line: 2583, column: 20, scope: !4765)
!4972 = !DILocation(line: 2583, column: 18, scope: !4765)
!4973 = !DILocation(line: 2584, column: 17, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2584, column: 9)
!4975 = !DILocation(line: 2584, column: 9, scope: !4765)
!4976 = !DILocation(line: 2585, column: 7, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 2585, column: 7)
!4978 = !DILocation(line: 0, scope: !4977)
!4979 = !DILocation(line: 2587, column: 13, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 2587, column: 13)
!4981 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2585, column: 7)
!4982 = !DILocation(line: 2587, column: 13, scope: !4981)
!4983 = !DILocation(line: 2589, column: 16, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 2588, column: 4)
!4985 = !DILocation(line: 2590, column: 6, scope: !4984)
!4986 = !DILocation(line: 2586, column: 18, scope: !4981)
!4987 = !DILocation(line: 2585, column: 7, scope: !4981)
!4988 = distinct !{!4988, !4976, !4989}
!4989 = !DILocation(line: 2591, column: 4, scope: !4977)
!4990 = !DILocation(line: 2592, column: 17, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2592, column: 9)
!4992 = !DILocation(line: 2592, column: 9, scope: !4765)
!4993 = !DILocation(line: 2594, column: 16, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 2593, column: 7)
!4995 = !DILocation(line: 2596, column: 53, scope: !4994)
!4996 = !DILocation(line: 2596, column: 39, scope: !4994)
!4997 = !DILocation(line: 2596, column: 16, scope: !4994)
!4998 = !DILocation(line: 2598, column: 7, scope: !4994)
!4999 = !DILocation(line: 2601, column: 52, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 2600, column: 7)
!5001 = !DILocation(line: 2601, column: 38, scope: !5000)
!5002 = !DILocation(line: 2601, column: 16, scope: !5000)
!5003 = !DILocation(line: 2603, column: 34, scope: !5000)
!5004 = !DILocation(line: 2603, column: 16, scope: !5000)
!5005 = !DILocation(line: 0, scope: !4991)
!5006 = !DILocation(line: 2606, column: 29, scope: !4765)
!5007 = !DILocation(line: 2606, column: 5, scope: !4765)
!5008 = !DILocation(line: 2606, column: 23, scope: !4765)
!5009 = !DILocation(line: 2607, column: 5, scope: !4765)
!5010 = !DILocation(line: 2608, column: 12, scope: !4765)
!5011 = !DILocation(line: 2609, column: 9, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2609, column: 9)
!5013 = !DILocation(line: 2609, column: 14, scope: !5012)
!5014 = !DILocation(line: 2609, column: 17, scope: !5012)
!5015 = !DILocation(line: 2609, column: 9, scope: !4765)
!5016 = !DILocation(line: 2610, column: 15, scope: !5012)
!5017 = !DILocation(line: 2610, column: 7, scope: !5012)
!5018 = !DILocation(line: 0, scope: !5012)
!5019 = !DILocation(line: 2613, column: 9, scope: !4764)
!5020 = !DILocation(line: 2613, column: 18, scope: !4764)
!5021 = !DILocation(line: 2613, column: 15, scope: !4764)
!5022 = !DILocation(line: 2614, column: 12, scope: !4764)
!5023 = !DILocation(line: 2614, column: 33, scope: !4764)
!5024 = !DILocation(line: 2613, column: 9, scope: !4765)
!5025 = !DILocation(line: 2618, column: 27, scope: !4763)
!5026 = !DILocation(line: 2618, column: 6, scope: !4763)
!5027 = !DILocation(line: 2620, column: 9, scope: !4763)
!5028 = !DILocation(line: 2623, column: 34, scope: !4763)
!5029 = !DILocation(line: 2623, column: 40, scope: !4763)
!5030 = !DILocation(line: 2623, column: 14, scope: !4763)
!5031 = !DILocation(line: 2624, column: 9, scope: !4763)
!5032 = !DILocation(line: 0, scope: !4777)
!5033 = !DILocation(line: 2625, column: 9, scope: !4777)
!5034 = !DILocation(line: 2626, column: 19, scope: !4941)
!5035 = !DILocation(line: 2626, column: 14, scope: !4941)
!5036 = !DILocation(line: 2627, column: 12, scope: !4943)
!5037 = !DILocation(line: 2626, column: 9, scope: !4941)
!5038 = !DILocation(line: 2629, column: 14, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 2629, column: 10)
!5040 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 2628, column: 4)
!5041 = !DILocation(line: 2629, column: 20, scope: !5039)
!5042 = !DILocation(line: 2630, column: 10, scope: !5039)
!5043 = !DILocation(line: 2629, column: 10, scope: !5040)
!5044 = !DILocation(line: 2632, column: 10, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 2631, column: 8)
!5046 = !DILocation(line: 2633, column: 19, scope: !5045)
!5047 = !DILocation(line: 2634, column: 8, scope: !5045)
!5048 = !DILocation(line: 2636, column: 8, scope: !5039)
!5049 = !DILocation(line: 2626, column: 9, scope: !4943)
!5050 = distinct !{!5050, !5037, !5051}
!5051 = !DILocation(line: 2637, column: 4, scope: !4941)
!5052 = !DILocation(line: 2638, column: 13, scope: !4763)
!5053 = !DILocation(line: 2640, column: 7, scope: !4764)
!5054 = !DILocation(line: 2640, column: 7, scope: !4763)
!5055 = !DILocation(line: 2642, column: 26, scope: !4757)
!5056 = !DILocation(line: 2643, column: 6, scope: !4758)
!5057 = !DILocation(line: 2565, column: 23, scope: !4758)
!5058 = !DILocation(line: 2565, column: 4, scope: !4758)
!5059 = distinct !{!5059, !4955, !5060}
!5060 = !DILocation(line: 2643, column: 6, scope: !4759)
!5061 = !DILocation(line: 2558, column: 45, scope: !4748)
!5062 = !DILocation(line: 2558, column: 7, scope: !4748)
!5063 = distinct !{!5063, !4944, !5064}
!5064 = !DILocation(line: 2644, column: 2, scope: !4749)
!5065 = !DILocation(line: 2646, column: 7, scope: !4750)
!5066 = !DILocation(line: 2647, column: 7, scope: !4750)
!5067 = !DILocation(line: 2648, column: 5, scope: !4750)
!5068 = !DILocation(line: 2650, column: 3, scope: !4717)
!5069 = !DILocation(line: 2651, column: 3, scope: !4717)
!5070 = distinct !DISubprogram(name: "output_function_exception_table", scope: !3, file: !3, line: 3133, type: !5071, scopeLine: 3134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{null, !759}
!5073 = !{!5074, !5075}
!5074 = !DILocalVariable(name: "fnname", arg: 1, scope: !5070, file: !3, line: 3133, type: !759)
!5075 = !DILocalVariable(name: "personality", scope: !5070, file: !3, line: 3135, type: !962)
!5076 = !DILocation(line: 0, scope: !5070)
!5077 = !DILocation(line: 3135, column: 47, scope: !5070)
!5078 = !DILocation(line: 3135, column: 21, scope: !5070)
!5079 = !DILocation(line: 3138, column: 15, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3138, column: 7)
!5081 = !DILocation(line: 3138, column: 9, scope: !5080)
!5082 = !DILocation(line: 3138, column: 7, scope: !5070)
!5083 = !DILocation(line: 3141, column: 7, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3141, column: 7)
!5085 = !DILocation(line: 3141, column: 7, scope: !5070)
!5086 = !DILocation(line: 3142, column: 5, scope: !5084)
!5087 = !DILocation(line: 3144, column: 3, scope: !5070)
!5088 = !DILocation(line: 3145, column: 7, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3145, column: 7)
!5090 = !DILocation(line: 3145, column: 36, scope: !5089)
!5091 = !DILocation(line: 3145, column: 7, scope: !5070)
!5092 = !DILocation(line: 3146, column: 5, scope: !5089)
!5093 = !DILocation(line: 3148, column: 22, scope: !5070)
!5094 = !DILocation(line: 3148, column: 3, scope: !5070)
!5095 = !DILocation(line: 3149, column: 1, scope: !5070)
!5096 = distinct !DISubprogram(name: "output_one_function_exception_table", scope: !3, file: !3, line: 2942, type: !5097, scopeLine: 2944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5099)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{null, !759, !6, !962}
!5099 = !{!5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5111, !5112, !5113, !5114, !5115, !5118, !5120, !5122, !5125}
!5100 = !DILocalVariable(name: "fnname", arg: 1, scope: !5096, file: !3, line: 2942, type: !759)
!5101 = !DILocalVariable(name: "section", arg: 2, scope: !5096, file: !3, line: 2943, type: !6)
!5102 = !DILocalVariable(name: "personality", arg: 3, scope: !5096, file: !3, line: 2943, type: !962)
!5103 = !DILocalVariable(name: "tt_format", scope: !5096, file: !3, line: 2945, type: !6)
!5104 = !DILocalVariable(name: "cs_format", scope: !5096, file: !3, line: 2945, type: !6)
!5105 = !DILocalVariable(name: "lp_format", scope: !5096, file: !3, line: 2945, type: !6)
!5106 = !DILocalVariable(name: "i", scope: !5096, file: !3, line: 2945, type: !6)
!5107 = !DILocalVariable(name: "ttype_label", scope: !5096, file: !3, line: 2947, type: !5108)
!5108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 256, elements: !5109)
!5109 = !{!5110}
!5110 = !DISubrange(count: 32)
!5111 = !DILocalVariable(name: "cs_after_size_label", scope: !5096, file: !3, line: 2948, type: !5108)
!5112 = !DILocalVariable(name: "cs_end_label", scope: !5096, file: !3, line: 2949, type: !5108)
!5113 = !DILocalVariable(name: "have_tt_data", scope: !5096, file: !3, line: 2953, type: !6)
!5114 = !DILocalVariable(name: "tt_format_size", scope: !5096, file: !3, line: 2954, type: !6)
!5115 = !DILocalVariable(name: "ttype_after_disp_label", scope: !5116, file: !3, line: 3022, type: !5108)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 3020, column: 5)
!5117 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3019, column: 7)
!5118 = !DILocalVariable(name: "uc", scope: !5119, file: !3, line: 3094, type: !2184)
!5119 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3093, column: 3)
!5120 = !DILocalVariable(name: "type", scope: !5121, file: !3, line: 3105, type: !787)
!5121 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3104, column: 5)
!5122 = !DILocalVariable(name: "type", scope: !5123, file: !3, line: 3117, type: !787)
!5123 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 3116, column: 5)
!5124 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3115, column: 7)
!5125 = !DILocalVariable(name: "uc", scope: !5126, file: !3, line: 3124, type: !2184)
!5126 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 3123, column: 5)
!5127 = !DILocation(line: 0, scope: !5096)
!5128 = !DILocation(line: 2947, column: 3, scope: !5096)
!5129 = !DILocation(line: 2947, column: 8, scope: !5096)
!5130 = !DILocation(line: 2948, column: 3, scope: !5096)
!5131 = !DILocation(line: 2948, column: 8, scope: !5096)
!5132 = !DILocation(line: 2949, column: 3, scope: !5096)
!5133 = !DILocation(line: 2949, column: 8, scope: !5096)
!5134 = !DILocation(line: 2964, column: 3, scope: !5096)
!5135 = !DILocation(line: 2968, column: 19, scope: !5096)
!5136 = !DILocation(line: 2968, column: 39, scope: !5096)
!5137 = !DILocation(line: 2968, column: 3, scope: !5096)
!5138 = !DILocation(line: 2970, column: 19, scope: !5096)
!5139 = !DILocation(line: 2971, column: 5, scope: !5096)
!5140 = !DILocation(line: 2971, column: 17, scope: !5096)
!5141 = !DILocation(line: 2971, column: 9, scope: !5096)
!5142 = !DILocation(line: 2972, column: 11, scope: !5096)
!5143 = !DILocation(line: 2973, column: 11, scope: !5096)
!5144 = !DILocation(line: 2976, column: 7, scope: !5096)
!5145 = !DILocation(line: 2980, column: 19, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 2979, column: 5)
!5147 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 2976, column: 7)
!5148 = !DILocation(line: 2982, column: 7, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 2982, column: 7)
!5150 = !DILocation(line: 2986, column: 24, scope: !5146)
!5151 = !DILocation(line: 2988, column: 38, scope: !5146)
!5152 = !DILocation(line: 2988, column: 7, scope: !5146)
!5153 = !DILocation(line: 0, scope: !5147)
!5154 = !DILocation(line: 2991, column: 19, scope: !5096)
!5155 = !DILocation(line: 2991, column: 35, scope: !5096)
!5156 = !DILocation(line: 2991, column: 49, scope: !5096)
!5157 = !DILocation(line: 2992, column: 7, scope: !5096)
!5158 = !DILocation(line: 2991, column: 3, scope: !5096)
!5159 = !DILocation(line: 3004, column: 10, scope: !5096)
!5160 = !DILocation(line: 3003, column: 3, scope: !5096)
!5161 = !DILocation(line: 3008, column: 27, scope: !5096)
!5162 = !DILocation(line: 3009, column: 10, scope: !5096)
!5163 = !DILocation(line: 3008, column: 3, scope: !5096)
!5164 = !DILocation(line: 3019, column: 7, scope: !5096)
!5165 = !DILocation(line: 3022, column: 7, scope: !5116)
!5166 = !DILocation(line: 3022, column: 12, scope: !5116)
!5167 = !DILocation(line: 3023, column: 7, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 3023, column: 7)
!5169 = !DILocation(line: 3026, column: 7, scope: !5116)
!5170 = !DILocation(line: 3028, column: 7, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 3028, column: 7)
!5172 = !DILocation(line: 3058, column: 5, scope: !5117)
!5173 = !DILocation(line: 3058, column: 5, scope: !5116)
!5174 = !DILocation(line: 3067, column: 10, scope: !5096)
!5175 = !DILocation(line: 3066, column: 3, scope: !5096)
!5176 = !DILocation(line: 3070, column: 3, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3070, column: 3)
!5178 = !DILocation(line: 3073, column: 3, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3073, column: 3)
!5180 = !DILocation(line: 3076, column: 3, scope: !5096)
!5181 = !DILocation(line: 3078, column: 3, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3078, column: 3)
!5183 = !DILocation(line: 3082, column: 5, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3079, column: 7)
!5185 = !DILocation(line: 3083, column: 3, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3083, column: 3)
!5187 = !DILocation(line: 0, scope: !5119)
!5188 = !DILocation(line: 3094, column: 5, scope: !5119)
!5189 = !DILocation(line: 3095, column: 10, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 3095, column: 5)
!5191 = !DILocation(line: 0, scope: !5190)
!5192 = !DILocation(line: 3095, column: 17, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 3095, column: 5)
!5194 = !DILocation(line: 3095, column: 5, scope: !5190)
!5195 = !DILocation(line: 3096, column: 31, scope: !5193)
!5196 = !DILocation(line: 3096, column: 35, scope: !5193)
!5197 = !DILocation(line: 3096, column: 7, scope: !5193)
!5198 = !DILocation(line: 3095, column: 74, scope: !5193)
!5199 = !DILocation(line: 3095, column: 5, scope: !5193)
!5200 = distinct !{!5200, !5194, !5201}
!5201 = !DILocation(line: 3096, column: 67, scope: !5190)
!5202 = !DILocation(line: 3097, column: 3, scope: !5096)
!5203 = !DILocation(line: 3099, column: 7, scope: !5096)
!5204 = !DILocation(line: 3100, column: 36, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3099, column: 7)
!5206 = !DILocation(line: 3100, column: 5, scope: !5205)
!5207 = !DILocation(line: 3102, column: 7, scope: !5096)
!5208 = !DILocation(line: 3103, column: 3, scope: !5096)
!5209 = !DILocation(line: 3103, column: 11, scope: !5096)
!5210 = !DILocation(line: 3103, column: 14, scope: !5096)
!5211 = !DILocation(line: 3105, column: 19, scope: !5121)
!5212 = !DILocation(line: 0, scope: !5121)
!5213 = !DILocation(line: 3106, column: 7, scope: !5121)
!5214 = distinct !{!5214, !5208, !5215}
!5215 = !DILocation(line: 3107, column: 5, scope: !5096)
!5216 = !DILocation(line: 3110, column: 7, scope: !5096)
!5217 = !DILocation(line: 3111, column: 7, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 3111, column: 7)
!5219 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 3110, column: 7)
!5220 = !DILocation(line: 3115, column: 15, scope: !5124)
!5221 = !DILocation(line: 3115, column: 7, scope: !5124)
!5222 = !DILocation(line: 3115, column: 7, scope: !5096)
!5223 = !DILocation(line: 3117, column: 7, scope: !5123)
!5224 = !DILocation(line: 3118, column: 12, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 3118, column: 7)
!5226 = !DILocation(line: 0, scope: !5225)
!5227 = !DILocation(line: 3119, column: 5, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 3118, column: 7)
!5229 = !DILocation(line: 0, scope: !5123)
!5230 = !DILocation(line: 3118, column: 7, scope: !5225)
!5231 = !DILocation(line: 3120, column: 16, scope: !5228)
!5232 = !DILocation(line: 3120, column: 2, scope: !5228)
!5233 = !DILocation(line: 3119, column: 66, scope: !5228)
!5234 = !DILocation(line: 3118, column: 7, scope: !5228)
!5235 = distinct !{!5235, !5230, !5236}
!5236 = !DILocation(line: 3120, column: 47, scope: !5225)
!5237 = !DILocation(line: 3121, column: 5, scope: !5124)
!5238 = !DILocation(line: 3121, column: 5, scope: !5123)
!5239 = !DILocation(line: 0, scope: !5126)
!5240 = !DILocation(line: 3124, column: 7, scope: !5126)
!5241 = !DILocation(line: 3125, column: 12, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 3125, column: 7)
!5243 = !DILocation(line: 0, scope: !5242)
!5244 = !DILocation(line: 3126, column: 5, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 3125, column: 7)
!5246 = !DILocation(line: 3125, column: 7, scope: !5242)
!5247 = !DILocation(line: 3127, column: 26, scope: !5245)
!5248 = !DILocation(line: 3128, column: 9, scope: !5245)
!5249 = !DILocation(line: 3127, column: 2, scope: !5245)
!5250 = !DILocation(line: 3126, column: 62, scope: !5245)
!5251 = !DILocation(line: 3125, column: 7, scope: !5245)
!5252 = distinct !{!5252, !5246, !5253}
!5253 = !DILocation(line: 3128, column: 51, scope: !5242)
!5254 = !DILocation(line: 3129, column: 5, scope: !5124)
!5255 = !DILocation(line: 3130, column: 1, scope: !5096)
!5256 = distinct !DISubprogram(name: "set_eh_throw_stmt_table", scope: !3, file: !3, line: 3152, type: !5257, scopeLine: 3153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5259)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{null, !1533, !1577}
!5259 = !{!5260, !5261}
!5260 = !DILocalVariable(name: "fun", arg: 1, scope: !5256, file: !3, line: 3152, type: !1533)
!5261 = !DILocalVariable(name: "table", arg: 2, scope: !5256, file: !3, line: 3152, type: !1577)
!5262 = !DILocation(line: 0, scope: !5256)
!5263 = !DILocation(line: 3154, column: 8, scope: !5256)
!5264 = !DILocation(line: 3154, column: 12, scope: !5256)
!5265 = !DILocation(line: 3154, column: 29, scope: !5256)
!5266 = !DILocation(line: 3155, column: 1, scope: !5256)
!5267 = distinct !DISubprogram(name: "get_eh_throw_stmt_table", scope: !3, file: !3, line: 3158, type: !5268, scopeLine: 3159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5270)
!5268 = !DISubroutineType(types: !5269)
!5269 = !{!1577, !1533}
!5270 = !{!5271}
!5271 = !DILocalVariable(name: "fun", arg: 1, scope: !5267, file: !3, line: 3158, type: !1533)
!5272 = !DILocation(line: 0, scope: !5267)
!5273 = !DILocation(line: 3160, column: 15, scope: !5267)
!5274 = !DILocation(line: 3160, column: 19, scope: !5267)
!5275 = !DILocation(line: 3160, column: 3, scope: !5267)
!5276 = distinct !DISubprogram(name: "function_needs_eh_personality", scope: !3, file: !3, line: 3166, type: !5277, scopeLine: 3167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5279)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{!714, !1533}
!5279 = !{!5280, !5281, !5282}
!5280 = !DILocalVariable(name: "fn", arg: 1, scope: !5276, file: !3, line: 3166, type: !1533)
!5281 = !DILocalVariable(name: "kind", scope: !5276, file: !3, line: 3168, type: !714)
!5282 = !DILocalVariable(name: "i", scope: !5276, file: !3, line: 3169, type: !765)
!5283 = !DILocation(line: 0, scope: !5276)
!5284 = !DILocation(line: 3171, column: 3, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 3171, column: 3)
!5286 = !DILocation(line: 0, scope: !5285)
!5287 = !DILocation(line: 3168, column: 28, scope: !5276)
!5288 = !DILocation(line: 3171, column: 3, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 3171, column: 3)
!5290 = !DILocation(line: 3173, column: 18, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 3172, column: 5)
!5292 = !DILocation(line: 3173, column: 7, scope: !5291)
!5293 = !DILocation(line: 3178, column: 4, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 3174, column: 2)
!5295 = distinct !{!5295, !5284, !5296}
!5296 = !DILocation(line: 3191, column: 5, scope: !5285)
!5297 = !DILocation(line: 3194, column: 1, scope: !5276)
!5298 = distinct !DISubprogram(name: "ehr_next", scope: !10, file: !10, line: 364, type: !5299, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5301)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{!765, !765, !765}
!5301 = !{!5302, !5303}
!5302 = !DILocalVariable(name: "r", arg: 1, scope: !5298, file: !10, line: 364, type: !765)
!5303 = !DILocalVariable(name: "start", arg: 2, scope: !5298, file: !10, line: 364, type: !765)
!5304 = !DILocation(line: 0, scope: !5298)
!5305 = !DILocation(line: 366, column: 10, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5298, file: !10, line: 366, column: 7)
!5307 = !DILocation(line: 366, column: 7, scope: !5306)
!5308 = !DILocation(line: 366, column: 7, scope: !5298)
!5309 = !DILocation(line: 367, column: 5, scope: !5306)
!5310 = !DILocation(line: 368, column: 15, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5306, file: !10, line: 368, column: 12)
!5312 = !DILocation(line: 368, column: 12, scope: !5311)
!5313 = !DILocation(line: 368, column: 30, scope: !5311)
!5314 = !DILocation(line: 368, column: 25, scope: !5311)
!5315 = !DILocation(line: 372, column: 7, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5311, file: !10, line: 371, column: 5)
!5317 = !DILocation(line: 369, column: 5, scope: !5311)
!5318 = !DILocation(line: 374, column: 11, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5316, file: !10, line: 373, column: 2)
!5320 = !DILocation(line: 375, column: 10, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5319, file: !10, line: 375, column: 8)
!5322 = !DILocation(line: 375, column: 8, scope: !5319)
!5323 = !DILocation(line: 378, column: 17, scope: !5316)
!5324 = !DILocation(line: 378, column: 27, scope: !5316)
!5325 = !DILocation(line: 377, column: 2, scope: !5319)
!5326 = distinct !{!5326, !5315, !5327}
!5327 = !DILocation(line: 378, column: 34, scope: !5316)
!5328 = !DILocation(line: 382, column: 1, scope: !5298)
!5329 = !DILocation(line: 0, scope: !2260)
!5330 = !DILocation(line: 3207, column: 12, scope: !2260)
!5331 = !DILocation(line: 3207, column: 16, scope: !2260)
!5332 = !DILocation(line: 3208, column: 8, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 3208, column: 7)
!5334 = !DILocation(line: 3208, column: 7, scope: !2260)
!5335 = !DILocation(line: 3211, column: 3, scope: !2260)
!5336 = !DILocation(line: 3212, column: 3, scope: !2260)
!5337 = !DILocation(line: 3214, column: 42, scope: !2322)
!5338 = !DILocation(line: 3215, column: 12, scope: !2322)
!5339 = !DILocation(line: 3215, column: 38, scope: !2322)
!5340 = !DILocation(line: 3215, column: 19, scope: !2322)
!5341 = !DILocation(line: 3214, column: 7, scope: !2322)
!5342 = !DILocation(line: 3217, column: 14, scope: !2321)
!5343 = !DILocation(line: 3217, column: 11, scope: !2321)
!5344 = !DILocation(line: 3217, column: 11, scope: !2322)
!5345 = !DILocation(line: 3221, column: 4, scope: !2320)
!5346 = !DILocation(line: 3222, column: 8, scope: !2328)
!5347 = !DILocation(line: 3222, column: 27, scope: !2328)
!5348 = !DILocation(line: 0, scope: !2328)
!5349 = !DILocation(line: 0, scope: !2320)
!5350 = !DILocation(line: 3222, column: 8, scope: !2320)
!5351 = !DILocation(line: 3235, column: 8, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 3235, column: 8)
!5353 = !DILocation(line: 3224, column: 8, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 3224, column: 8)
!5355 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 3223, column: 6)
!5356 = !DILocation(line: 0, scope: !5354)
!5357 = !DILocation(line: 3226, column: 31, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 3225, column: 3)
!5359 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 3224, column: 8)
!5360 = !DILocation(line: 3226, column: 5, scope: !5358)
!5361 = !DILocation(line: 3227, column: 34, scope: !5358)
!5362 = !DILocation(line: 3227, column: 5, scope: !5358)
!5363 = !DILocation(line: 3228, column: 5, scope: !5358)
!5364 = !DILocation(line: 3229, column: 13, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 3229, column: 9)
!5366 = !DILocation(line: 3229, column: 9, scope: !5365)
!5367 = !DILocation(line: 3229, column: 9, scope: !5358)
!5368 = !DILocation(line: 3230, column: 7, scope: !5365)
!5369 = !DILocation(line: 3224, column: 49, scope: !5359)
!5370 = !DILocation(line: 3224, column: 8, scope: !5359)
!5371 = distinct !{!5371, !5353, !5372}
!5372 = !DILocation(line: 3231, column: 3, scope: !5354)
!5373 = !DILocation(line: 0, scope: !5352)
!5374 = !DILocation(line: 3235, column: 49, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 3235, column: 8)
!5376 = !DILocation(line: 3235, column: 8, scope: !5375)
!5377 = distinct !{!5377, !5351, !5378}
!5378 = !DILocation(line: 3235, column: 57, scope: !5352)
!5379 = !DILocation(line: 3237, column: 31, scope: !2326)
!5380 = !DILocation(line: 3237, column: 5, scope: !2326)
!5381 = !DILocation(line: 3238, column: 13, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !2326, file: !3, line: 3238, column: 9)
!5383 = !DILocation(line: 3238, column: 9, scope: !5382)
!5384 = !DILocation(line: 3238, column: 9, scope: !2326)
!5385 = !DILocation(line: 3239, column: 30, scope: !5382)
!5386 = !DILocation(line: 3240, column: 9, scope: !5382)
!5387 = !DILocation(line: 3239, column: 7, scope: !5382)
!5388 = !DILocation(line: 3242, column: 7, scope: !5382)
!5389 = !DILocation(line: 3243, column: 13, scope: !2325)
!5390 = !DILocation(line: 3243, column: 9, scope: !2325)
!5391 = !DILocation(line: 3243, column: 9, scope: !2326)
!5392 = !DILocation(line: 3245, column: 19, scope: !2324)
!5393 = !DILocation(line: 0, scope: !2324)
!5394 = !DILocation(line: 3246, column: 32, scope: !2324)
!5395 = !DILocation(line: 3247, column: 11, scope: !2324)
!5396 = !DILocation(line: 3246, column: 9, scope: !2324)
!5397 = !DILocation(line: 3248, column: 7, scope: !2324)
!5398 = !DILocation(line: 3250, column: 7, scope: !2325)
!5399 = !DILocation(line: 3251, column: 9, scope: !2326)
!5400 = !DILocation(line: 3252, column: 7, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !2326, file: !3, line: 3251, column: 9)
!5402 = !DILocation(line: 3257, column: 18, scope: !2322)
!5403 = !DILocation(line: 3257, column: 7, scope: !2322)
!5404 = !DILocation(line: 3266, column: 6, scope: !2330)
!5405 = !DILocation(line: 3267, column: 18, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !2330, file: !3, line: 3267, column: 6)
!5407 = !DILocation(line: 3267, column: 27, scope: !5406)
!5408 = !DILocation(line: 3267, column: 11, scope: !5406)
!5409 = !DILocation(line: 0, scope: !5406)
!5410 = !DILocation(line: 0, scope: !2330)
!5411 = !DILocation(line: 3267, column: 6, scope: !5406)
!5412 = !DILocation(line: 3269, column: 3, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 3268, column: 8)
!5414 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 3267, column: 6)
!5415 = !DILocation(line: 3270, column: 10, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 3270, column: 7)
!5417 = !DILocation(line: 3270, column: 7, scope: !5416)
!5418 = !DILocation(line: 3270, column: 7, scope: !5413)
!5419 = !DILocation(line: 3272, column: 7, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 3271, column: 5)
!5421 = !DILocation(line: 3273, column: 35, scope: !5420)
!5422 = !DILocation(line: 3273, column: 7, scope: !5420)
!5423 = !DILocation(line: 3274, column: 7, scope: !5420)
!5424 = !DILocation(line: 3275, column: 5, scope: !5420)
!5425 = !DILocation(line: 3276, column: 31, scope: !5413)
!5426 = !DILocation(line: 3276, column: 3, scope: !5413)
!5427 = !DILocation(line: 3277, column: 3, scope: !5413)
!5428 = !DILocation(line: 3278, column: 10, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 3278, column: 7)
!5430 = !DILocation(line: 3278, column: 7, scope: !5429)
!5431 = !DILocation(line: 3278, column: 7, scope: !5413)
!5432 = !DILocation(line: 3279, column: 5, scope: !5429)
!5433 = !DILocation(line: 3267, column: 6, scope: !5414)
!5434 = distinct !{!5434, !5411, !5435}
!5435 = !DILocation(line: 3280, column: 8, scope: !5406)
!5436 = !DILocation(line: 3285, column: 53, scope: !2331)
!5437 = !DILocation(line: 3285, column: 4, scope: !2331)
!5438 = !DILocation(line: 3286, column: 42, scope: !2331)
!5439 = !DILocation(line: 3286, column: 4, scope: !2331)
!5440 = !DILocation(line: 3287, column: 4, scope: !2331)
!5441 = !DILocation(line: 3289, column: 7, scope: !2322)
!5442 = !DILocation(line: 3292, column: 14, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 3292, column: 11)
!5444 = !DILocation(line: 3292, column: 11, scope: !5443)
!5445 = !DILocation(line: 3292, column: 11, scope: !2322)
!5446 = !DILocation(line: 3293, column: 21, scope: !5443)
!5447 = !DILocation(line: 3293, column: 2, scope: !5443)
!5448 = !DILocation(line: 3295, column: 19, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 3295, column: 16)
!5450 = !DILocation(line: 3295, column: 16, scope: !5449)
!5451 = !DILocation(line: 3295, column: 16, scope: !5443)
!5452 = !DILocation(line: 3300, column: 4, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 3299, column: 2)
!5454 = !DILocation(line: 3296, column: 2, scope: !5449)
!5455 = !DILocation(line: 3302, column: 15, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 3301, column: 6)
!5457 = !DILocation(line: 3303, column: 13, scope: !5456)
!5458 = !DILocation(line: 3304, column: 14, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 3304, column: 12)
!5460 = !DILocation(line: 3304, column: 12, scope: !5456)
!5461 = !DILocation(line: 3307, column: 14, scope: !5453)
!5462 = !DILocation(line: 3307, column: 24, scope: !5453)
!5463 = !DILocation(line: 3306, column: 6, scope: !5456)
!5464 = distinct !{!5464, !5452, !5465}
!5465 = !DILocation(line: 3307, column: 31, scope: !5453)
!5466 = !DILocation(line: 0, scope: !5443)
!5467 = distinct !{!5467, !5336, !5468}
!5468 = !DILocation(line: 3310, column: 5, scope: !2260)
!5469 = !DILocation(line: 3311, column: 1, scope: !2260)
!5470 = distinct !DISubprogram(name: "debug_eh_tree", scope: !3, file: !3, line: 3316, type: !5471, scopeLine: 3317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5473)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{null, !1533}
!5473 = !{!5474}
!5474 = !DILocalVariable(name: "fn", arg: 1, scope: !5470, file: !3, line: 3316, type: !1533)
!5475 = !DILocation(line: 0, scope: !5470)
!5476 = !DILocation(line: 3318, column: 17, scope: !5470)
!5477 = !DILocation(line: 3318, column: 3, scope: !5470)
!5478 = !DILocation(line: 3319, column: 1, scope: !5470)
!5479 = distinct !DISubprogram(name: "verify_eh_tree", scope: !3, file: !3, line: 3324, type: !5471, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5480)
!5480 = !{!5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492}
!5481 = !DILocalVariable(name: "fun", arg: 1, scope: !5479, file: !3, line: 3324, type: !1533)
!5482 = !DILocalVariable(name: "r", scope: !5479, file: !3, line: 3326, type: !765)
!5483 = !DILocalVariable(name: "outer", scope: !5479, file: !3, line: 3326, type: !765)
!5484 = !DILocalVariable(name: "nvisited_lp", scope: !5479, file: !3, line: 3327, type: !6)
!5485 = !DILocalVariable(name: "nvisited_r", scope: !5479, file: !3, line: 3327, type: !6)
!5486 = !DILocalVariable(name: "count_lp", scope: !5479, file: !3, line: 3328, type: !6)
!5487 = !DILocalVariable(name: "count_r", scope: !5479, file: !3, line: 3328, type: !6)
!5488 = !DILocalVariable(name: "depth", scope: !5479, file: !3, line: 3328, type: !6)
!5489 = !DILocalVariable(name: "i", scope: !5479, file: !3, line: 3328, type: !6)
!5490 = !DILocalVariable(name: "lp", scope: !5479, file: !3, line: 3329, type: !2163)
!5491 = !DILocalVariable(name: "err", scope: !5479, file: !3, line: 3330, type: !754)
!5492 = !DILabel(scope: !5479, name: "region_done", file: !3, line: 3416)
!5493 = !DILocation(line: 0, scope: !5479)
!5494 = !DILocation(line: 3326, column: 3, scope: !5479)
!5495 = !DILocation(line: 3329, column: 3, scope: !5479)
!5496 = !DILocation(line: 3332, column: 13, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3332, column: 7)
!5498 = !DILocation(line: 3332, column: 17, scope: !5497)
!5499 = !DILocation(line: 3332, column: 8, scope: !5497)
!5500 = !DILocation(line: 3332, column: 7, scope: !5479)
!5501 = !DILocation(line: 3336, column: 3, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3336, column: 3)
!5503 = !DILocation(line: 3336, column: 15, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 3336, column: 3)
!5505 = !DILocation(line: 3330, column: 8, scope: !5479)
!5506 = !DILocation(line: 0, scope: !5502)
!5507 = !DILocation(line: 3349, column: 3, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3349, column: 3)
!5509 = !DILocation(line: 3337, column: 9, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 3337, column: 9)
!5511 = !DILocation(line: 3337, column: 9, scope: !5504)
!5512 = !DILocation(line: 3339, column: 9, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 3339, column: 6)
!5514 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 3338, column: 7)
!5515 = !DILocation(line: 3339, column: 15, scope: !5513)
!5516 = !DILocation(line: 3339, column: 6, scope: !5514)
!5517 = !DILocation(line: 3340, column: 11, scope: !5513)
!5518 = !DILocation(line: 3340, column: 4, scope: !5513)
!5519 = !DILocation(line: 3343, column: 6, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 3342, column: 4)
!5521 = !DILocation(line: 3336, column: 69, scope: !5504)
!5522 = !DILocation(line: 3336, column: 3, scope: !5504)
!5523 = distinct !{!5523, !5501, !5524}
!5524 = !DILocation(line: 3346, column: 7, scope: !5502)
!5525 = !DILocation(line: 0, scope: !5508)
!5526 = !DILocation(line: 3349, column: 15, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 3349, column: 3)
!5528 = !DILocation(line: 3350, column: 9, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 3350, column: 9)
!5530 = !DILocation(line: 3350, column: 9, scope: !5527)
!5531 = !DILocation(line: 3352, column: 10, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 3352, column: 6)
!5533 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 3351, column: 7)
!5534 = !DILocation(line: 3352, column: 16, scope: !5532)
!5535 = !DILocation(line: 3352, column: 6, scope: !5533)
!5536 = !DILocation(line: 3353, column: 12, scope: !5532)
!5537 = !DILocation(line: 3353, column: 4, scope: !5532)
!5538 = !DILocation(line: 3356, column: 6, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 3355, column: 4)
!5540 = !DILocation(line: 3349, column: 71, scope: !5527)
!5541 = !DILocation(line: 3349, column: 3, scope: !5527)
!5542 = distinct !{!5542, !5507, !5543}
!5543 = !DILocation(line: 3359, column: 7, scope: !5508)
!5544 = !DILocation(line: 3363, column: 12, scope: !5479)
!5545 = !DILocation(line: 3363, column: 16, scope: !5479)
!5546 = !DILocation(line: 3363, column: 5, scope: !5479)
!5547 = !DILocation(line: 0, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3383, column: 7)
!5549 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3365, column: 5)
!5550 = !DILocation(line: 0, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 3383, column: 7)
!5552 = !DILocation(line: 3364, column: 3, scope: !5479)
!5553 = !DILocation(line: 3366, column: 11, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3366, column: 11)
!5555 = !DILocation(line: 3361, column: 23, scope: !5479)
!5556 = !DILocation(line: 3366, column: 69, scope: !5554)
!5557 = !DILocation(line: 3366, column: 66, scope: !5554)
!5558 = !DILocation(line: 3366, column: 11, scope: !5549)
!5559 = !DILocation(line: 3368, column: 57, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 3367, column: 2)
!5561 = !DILocation(line: 3368, column: 4, scope: !5560)
!5562 = !DILocation(line: 3371, column: 11, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3371, column: 11)
!5564 = !DILocation(line: 3370, column: 2, scope: !5560)
!5565 = !DILocation(line: 3371, column: 14, scope: !5563)
!5566 = !DILocation(line: 3371, column: 20, scope: !5563)
!5567 = !DILocation(line: 3371, column: 11, scope: !5549)
!5568 = !DILocation(line: 3373, column: 51, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 3372, column: 2)
!5570 = !DILocation(line: 3373, column: 4, scope: !5569)
!5571 = !DILocation(line: 3375, column: 2, scope: !5569)
!5572 = !DILocation(line: 0, scope: !5549)
!5573 = !DILocation(line: 3376, column: 17, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3376, column: 11)
!5575 = !DILocation(line: 3376, column: 11, scope: !5549)
!5576 = !DILocation(line: 3378, column: 50, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 3377, column: 2)
!5578 = !DILocation(line: 3378, column: 53, scope: !5577)
!5579 = !DILocation(line: 3378, column: 4, scope: !5577)
!5580 = !DILocation(line: 3380, column: 2, scope: !5577)
!5581 = !DILocation(line: 3383, column: 17, scope: !5548)
!5582 = !DILocation(line: 3383, column: 20, scope: !5548)
!5583 = !DILocation(line: 3383, column: 15, scope: !5548)
!5584 = !DILocation(line: 3383, column: 12, scope: !5548)
!5585 = !DILocation(line: 3383, column: 34, scope: !5551)
!5586 = !DILocation(line: 3383, column: 7, scope: !5548)
!5587 = !DILocation(line: 3385, column: 8, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 3385, column: 8)
!5589 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 3384, column: 2)
!5590 = !DILocation(line: 3385, column: 68, scope: !5588)
!5591 = !DILocation(line: 3385, column: 65, scope: !5588)
!5592 = !DILocation(line: 3385, column: 8, scope: !5589)
!5593 = !DILocation(line: 3387, column: 54, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 3386, column: 6)
!5595 = !DILocation(line: 3387, column: 8, scope: !5594)
!5596 = !DILocation(line: 3390, column: 8, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 3390, column: 8)
!5598 = !DILocation(line: 3389, column: 6, scope: !5594)
!5599 = !DILocation(line: 0, scope: !5589)
!5600 = !DILocation(line: 3390, column: 12, scope: !5597)
!5601 = !DILocation(line: 3390, column: 22, scope: !5597)
!5602 = !DILocation(line: 3390, column: 19, scope: !5597)
!5603 = !DILocation(line: 3390, column: 8, scope: !5589)
!5604 = !DILocation(line: 3392, column: 47, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 3391, column: 6)
!5606 = !DILocation(line: 3392, column: 8, scope: !5605)
!5607 = !DILocation(line: 3383, column: 44, scope: !5551)
!5608 = !DILocation(line: 3394, column: 6, scope: !5605)
!5609 = !DILocation(line: 3395, column: 15, scope: !5589)
!5610 = !DILocation(line: 3383, column: 48, scope: !5551)
!5611 = !DILocation(line: 3383, column: 42, scope: !5551)
!5612 = !DILocation(line: 3383, column: 7, scope: !5551)
!5613 = distinct !{!5613, !5586, !5614}
!5614 = !DILocation(line: 3396, column: 2, scope: !5548)
!5615 = !DILocation(line: 3381, column: 17, scope: !5549)
!5616 = !DILocation(line: 3398, column: 11, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3398, column: 11)
!5618 = !DILocation(line: 3398, column: 14, scope: !5617)
!5619 = !DILocation(line: 3398, column: 11, scope: !5549)
!5620 = !DILocation(line: 3399, column: 15, scope: !5617)
!5621 = !DILocation(line: 3399, column: 32, scope: !5617)
!5622 = !DILocation(line: 3399, column: 2, scope: !5617)
!5623 = !DILocation(line: 3400, column: 19, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 3400, column: 16)
!5625 = !DILocation(line: 3400, column: 16, scope: !5624)
!5626 = !DILocation(line: 3400, column: 16, scope: !5617)
!5627 = !DILocation(line: 3404, column: 4, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 3403, column: 2)
!5629 = !DILocation(line: 3401, column: 4, scope: !5624)
!5630 = !DILocation(line: 3401, column: 2, scope: !5624)
!5631 = !DILocation(line: 3406, column: 12, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 3405, column: 6)
!5633 = !DILocation(line: 3406, column: 15, scope: !5632)
!5634 = !DILocation(line: 3406, column: 10, scope: !5632)
!5635 = !DILocation(line: 3407, column: 14, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 3407, column: 12)
!5637 = !DILocation(line: 3407, column: 12, scope: !5632)
!5638 = !DILocation(line: 3409, column: 13, scope: !5632)
!5639 = !DILocation(line: 3412, column: 14, scope: !5628)
!5640 = !DILocation(line: 3412, column: 24, scope: !5628)
!5641 = !DILocation(line: 3411, column: 6, scope: !5632)
!5642 = distinct !{!5642, !5627, !5643}
!5643 = !DILocation(line: 3412, column: 31, scope: !5628)
!5644 = !DILocation(line: 3410, column: 19, scope: !5632)
!5645 = !DILocation(line: 3413, column: 6, scope: !5628)
!5646 = distinct !{!5646, !5552, !5647}
!5647 = !DILocation(line: 3415, column: 5, scope: !5479)
!5648 = !DILocation(line: 3416, column: 2, scope: !5479)
!5649 = !DILocation(line: 3417, column: 13, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3417, column: 7)
!5651 = !DILocation(line: 3417, column: 7, scope: !5479)
!5652 = !DILocation(line: 3419, column: 7, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 3418, column: 5)
!5654 = !DILocation(line: 3421, column: 5, scope: !5653)
!5655 = !DILocation(line: 3422, column: 15, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3422, column: 7)
!5657 = !DILocation(line: 3422, column: 7, scope: !5479)
!5658 = !DILocation(line: 3424, column: 7, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 3423, column: 5)
!5660 = !DILocation(line: 3426, column: 5, scope: !5659)
!5661 = !DILocation(line: 3427, column: 16, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3427, column: 7)
!5663 = !DILocation(line: 3427, column: 7, scope: !5479)
!5664 = !DILocation(line: 3429, column: 7, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 3428, column: 5)
!5666 = !DILocation(line: 3431, column: 5, scope: !5665)
!5667 = !DILocation(line: 3433, column: 7, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3433, column: 7)
!5669 = !DILocation(line: 3433, column: 7, scope: !5479)
!5670 = !DILocation(line: 3435, column: 21, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 3434, column: 5)
!5672 = !DILocation(line: 3435, column: 7, scope: !5671)
!5673 = !DILocation(line: 3436, column: 7, scope: !5671)
!5674 = !DILocation(line: 3437, column: 5, scope: !5671)
!5675 = !DILocation(line: 3438, column: 1, scope: !5479)
!5676 = distinct !DISubprogram(name: "gt_ggc_mx_call_site_record_d", scope: !2337, file: !2337, line: 23, type: !1594, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5677)
!5677 = !{!5678, !5679}
!5678 = !DILocalVariable(name: "x_p", arg: 1, scope: !5676, file: !2337, line: 23, type: !758)
!5679 = !DILocalVariable(name: "x", scope: !5676, file: !2337, line: 25, type: !5680)
!5680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!5681 = !DILocation(line: 0, scope: !5676)
!5682 = !DILocation(line: 26, column: 7, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5676, file: !2337, line: 26, column: 7)
!5684 = !DILocation(line: 26, column: 7, scope: !5676)
!5685 = !DILocation(line: 28, column: 7, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5687, file: !2337, line: 28, column: 7)
!5687 = distinct !DILexicalBlock(scope: !5688, file: !2337, line: 28, column: 7)
!5688 = distinct !DILexicalBlock(scope: !5683, file: !2337, line: 27, column: 5)
!5689 = !DILocation(line: 28, column: 7, scope: !5687)
!5690 = !DILocation(line: 30, column: 1, scope: !5676)
!5691 = distinct !DISubprogram(name: "gt_pch_nx_call_site_record_d", scope: !2337, file: !2337, line: 33, type: !1594, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5692)
!5692 = !{!5693, !5694}
!5693 = !DILocalVariable(name: "x_p", arg: 1, scope: !5691, file: !2337, line: 33, type: !758)
!5694 = !DILocalVariable(name: "x", scope: !5691, file: !2337, line: 35, type: !5680)
!5695 = !DILocation(line: 0, scope: !5691)
!5696 = !DILocation(line: 36, column: 7, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5691, file: !2337, line: 36, column: 7)
!5698 = !DILocation(line: 36, column: 7, scope: !5691)
!5699 = !DILocation(line: 38, column: 7, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !2337, line: 38, column: 7)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !2337, line: 38, column: 7)
!5702 = distinct !DILexicalBlock(scope: !5697, file: !2337, line: 37, column: 5)
!5703 = !DILocation(line: 38, column: 7, scope: !5701)
!5704 = !DILocation(line: 40, column: 1, scope: !5691)
!5705 = distinct !DISubprogram(name: "gt_pch_p_18call_site_record_d", scope: !2337, file: !2337, line: 43, type: !5706, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5709)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{null, !758, !758, !5708, !758}
!5708 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !2341, line: 38, baseType: !1618)
!5709 = !{!5710, !5711, !5712, !5713, !5714}
!5710 = !DILocalVariable(name: "this_obj", arg: 1, scope: !5705, file: !2337, line: 43, type: !758)
!5711 = !DILocalVariable(name: "x_p", arg: 2, scope: !5705, file: !2337, line: 44, type: !758)
!5712 = !DILocalVariable(name: "op", arg: 3, scope: !5705, file: !2337, line: 45, type: !5708)
!5713 = !DILocalVariable(name: "cookie", arg: 4, scope: !5705, file: !2337, line: 46, type: !758)
!5714 = !DILocalVariable(name: "x", scope: !5705, file: !2337, line: 48, type: !5680)
!5715 = !DILocation(line: 0, scope: !5705)
!5716 = !DILocation(line: 49, column: 19, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5705, file: !2337, line: 49, column: 7)
!5718 = !DILocation(line: 49, column: 7, scope: !5705)
!5719 = !DILocation(line: 50, column: 5, scope: !5717)
!5720 = !DILocation(line: 51, column: 1, scope: !5705)
!5721 = distinct !DISubprogram(name: "VEC_eh_region_gc_reserve", scope: !10, file: !10, line: 185, type: !5722, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5724)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!6, !2820, !6}
!5724 = !{!5725, !5726, !5727}
!5725 = !DILocalVariable(name: "vec_", arg: 1, scope: !5721, file: !10, line: 185, type: !2820)
!5726 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5721, file: !10, line: 185, type: !6)
!5727 = !DILocalVariable(name: "extend", scope: !5721, file: !10, line: 185, type: !6)
!5728 = !DILocation(line: 0, scope: !5721)
!5729 = !DILocation(line: 185, column: 1, scope: !5721)
!5730 = !DILocation(line: 185, column: 1, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5721, file: !10, line: 185, column: 1)
!5732 = distinct !DISubprogram(name: "VEC_eh_region_base_quick_push", scope: !10, file: !10, line: 184, type: !5733, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5735)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{!2819, !3788, !765}
!5735 = !{!5736, !5737, !5738}
!5736 = !DILocalVariable(name: "vec_", arg: 1, scope: !5732, file: !10, line: 184, type: !3788)
!5737 = !DILocalVariable(name: "obj_", arg: 2, scope: !5732, file: !10, line: 184, type: !765)
!5738 = !DILocalVariable(name: "slot_", scope: !5732, file: !10, line: 184, type: !2819)
!5739 = !DILocation(line: 0, scope: !5732)
!5740 = !DILocation(line: 184, column: 1, scope: !5732)
!5741 = distinct !DISubprogram(name: "VEC_eh_region_base_space", scope: !10, file: !10, line: 184, type: !5742, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5744)
!5742 = !DISubroutineType(types: !5743)
!5743 = !{!6, !3788, !6}
!5744 = !{!5745, !5746}
!5745 = !DILocalVariable(name: "vec_", arg: 1, scope: !5741, file: !10, line: 184, type: !3788)
!5746 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5741, file: !10, line: 184, type: !6)
!5747 = !DILocation(line: 0, scope: !5741)
!5748 = !DILocation(line: 184, column: 1, scope: !5741)
!5749 = distinct !DISubprogram(name: "VEC_eh_landing_pad_gc_reserve", scope: !10, file: !10, line: 189, type: !5750, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5752)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!6, !2830, !6}
!5752 = !{!5753, !5754, !5755}
!5753 = !DILocalVariable(name: "vec_", arg: 1, scope: !5749, file: !10, line: 189, type: !2830)
!5754 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5749, file: !10, line: 189, type: !6)
!5755 = !DILocalVariable(name: "extend", scope: !5749, file: !10, line: 189, type: !6)
!5756 = !DILocation(line: 0, scope: !5749)
!5757 = !DILocation(line: 189, column: 1, scope: !5749)
!5758 = !DILocation(line: 189, column: 1, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5749, file: !10, line: 189, column: 1)
!5760 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_quick_push", scope: !10, file: !10, line: 188, type: !5761, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5763)
!5761 = !DISubroutineType(types: !5762)
!5762 = !{!2829, !3708, !2163}
!5763 = !{!5764, !5765, !5766}
!5764 = !DILocalVariable(name: "vec_", arg: 1, scope: !5760, file: !10, line: 188, type: !3708)
!5765 = !DILocalVariable(name: "obj_", arg: 2, scope: !5760, file: !10, line: 188, type: !2163)
!5766 = !DILocalVariable(name: "slot_", scope: !5760, file: !10, line: 188, type: !2829)
!5767 = !DILocation(line: 0, scope: !5760)
!5768 = !DILocation(line: 188, column: 1, scope: !5760)
!5769 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_space", scope: !10, file: !10, line: 188, type: !5770, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5772)
!5770 = !DISubroutineType(types: !5771)
!5771 = !{!6, !3708, !6}
!5772 = !{!5773, !5774}
!5773 = !DILocalVariable(name: "vec_", arg: 1, scope: !5769, file: !10, line: 188, type: !3708)
!5774 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5769, file: !10, line: 188, type: !6)
!5775 = !DILocation(line: 0, scope: !5769)
!5776 = !DILocation(line: 188, column: 1, scope: !5769)
!5777 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !146, file: !146, line: 182, type: !5778, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5782)
!5778 = !DISubroutineType(types: !5779)
!5779 = !{!11, !5780}
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5781, size: 64)
!5781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!5782 = !{!5783}
!5783 = !DILocalVariable(name: "vec_", arg: 1, scope: !5777, file: !146, line: 182, type: !5780)
!5784 = !DILocation(line: 0, scope: !5777)
!5785 = !DILocation(line: 182, column: 1, scope: !5777)
!5786 = distinct !DISubprogram(name: "VEC_tree_gc_safe_push", scope: !146, file: !146, line: 183, type: !5787, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5790)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{!1146, !5789, !787}
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!5790 = !{!5791, !5792}
!5791 = !DILocalVariable(name: "vec_", arg: 1, scope: !5786, file: !146, line: 183, type: !5789)
!5792 = !DILocalVariable(name: "obj_", arg: 2, scope: !5786, file: !146, line: 183, type: !787)
!5793 = !DILocation(line: 0, scope: !5786)
!5794 = !DILocation(line: 183, column: 1, scope: !5786)
!5795 = distinct !DISubprogram(name: "VEC_tree_gc_reserve", scope: !146, file: !146, line: 183, type: !5796, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5798)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!6, !5789, !6}
!5798 = !{!5799, !5800, !5801}
!5799 = !DILocalVariable(name: "vec_", arg: 1, scope: !5795, file: !146, line: 183, type: !5789)
!5800 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5795, file: !146, line: 183, type: !6)
!5801 = !DILocalVariable(name: "extend", scope: !5795, file: !146, line: 183, type: !6)
!5802 = !DILocation(line: 0, scope: !5795)
!5803 = !DILocation(line: 183, column: 1, scope: !5795)
!5804 = !DILocation(line: 183, column: 1, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5795, file: !146, line: 183, column: 1)
!5806 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !146, file: !146, line: 182, type: !5807, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5810)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!1146, !5809, !787}
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!5810 = !{!5811, !5812, !5813}
!5811 = !DILocalVariable(name: "vec_", arg: 1, scope: !5806, file: !146, line: 182, type: !5809)
!5812 = !DILocalVariable(name: "obj_", arg: 2, scope: !5806, file: !146, line: 182, type: !787)
!5813 = !DILocalVariable(name: "slot_", scope: !5806, file: !146, line: 182, type: !1146)
!5814 = !DILocation(line: 0, scope: !5806)
!5815 = !DILocation(line: 182, column: 1, scope: !5806)
!5816 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !146, file: !146, line: 182, type: !5817, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5819)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!6, !5809, !6}
!5819 = !{!5820, !5821}
!5820 = !DILocalVariable(name: "vec_", arg: 1, scope: !5816, file: !146, line: 182, type: !5809)
!5821 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5816, file: !146, line: 182, type: !6)
!5822 = !DILocation(line: 0, scope: !5816)
!5823 = !DILocation(line: 182, column: 1, scope: !5816)
!5824 = distinct !DISubprogram(name: "VEC_uchar_base_length", scope: !2173, file: !2173, line: 27, type: !5825, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5829)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!11, !5827}
!5827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5828, size: 64)
!5828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2177)
!5829 = !{!5830}
!5830 = !DILocalVariable(name: "vec_", arg: 1, scope: !5824, file: !2173, line: 27, type: !5827)
!5831 = !DILocation(line: 0, scope: !5824)
!5832 = !DILocation(line: 27, column: 1, scope: !5824)
!5833 = distinct !DISubprogram(name: "push_uleb128", scope: !3, file: !3, line: 2681, type: !5834, scopeLine: 2682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5837)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{null, !5836, !11}
!5836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!5837 = !{!5838, !5839, !5840}
!5838 = !DILocalVariable(name: "data_area", arg: 1, scope: !5833, file: !3, line: 2681, type: !5836)
!5839 = !DILocalVariable(name: "value", arg: 2, scope: !5833, file: !3, line: 2681, type: !11)
!5840 = !DILocalVariable(name: "byte", scope: !5841, file: !3, line: 2685, type: !754)
!5841 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 2684, column: 5)
!5842 = !DILocation(line: 0, scope: !5833)
!5843 = !DILocation(line: 2683, column: 3, scope: !5833)
!5844 = !DILocation(line: 2685, column: 28, scope: !5841)
!5845 = !DILocation(line: 0, scope: !5841)
!5846 = !DILocation(line: 2686, column: 13, scope: !5841)
!5847 = !DILocation(line: 2687, column: 11, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 2687, column: 11)
!5849 = !DILocation(line: 2687, column: 11, scope: !5841)
!5850 = !DILocation(line: 2689, column: 7, scope: !5841)
!5851 = !DILocation(line: 2690, column: 5, scope: !5841)
!5852 = distinct !{!5852, !5843, !5853}
!5853 = !DILocation(line: 2691, column: 15, scope: !5833)
!5854 = !DILocation(line: 2692, column: 1, scope: !5833)
!5855 = distinct !DISubprogram(name: "VEC_uchar_gc_safe_push", scope: !2173, file: !2173, line: 29, type: !5856, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5860)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!5858, !5836, !5859}
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2184)
!5860 = !{!5861, !5862}
!5861 = !DILocalVariable(name: "vec_", arg: 1, scope: !5855, file: !2173, line: 29, type: !5836)
!5862 = !DILocalVariable(name: "obj_", arg: 2, scope: !5855, file: !2173, line: 29, type: !5859)
!5863 = !DILocation(line: 0, scope: !5855)
!5864 = !DILocation(line: 29, column: 1, scope: !5855)
!5865 = distinct !DISubprogram(name: "VEC_uchar_gc_reserve", scope: !2173, file: !2173, line: 29, type: !5866, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5868)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{!6, !5836, !6}
!5868 = !{!5869, !5870, !5871}
!5869 = !DILocalVariable(name: "vec_", arg: 1, scope: !5865, file: !2173, line: 29, type: !5836)
!5870 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5865, file: !2173, line: 29, type: !6)
!5871 = !DILocalVariable(name: "extend", scope: !5865, file: !2173, line: 29, type: !6)
!5872 = !DILocation(line: 0, scope: !5865)
!5873 = !DILocation(line: 29, column: 1, scope: !5865)
!5874 = !DILocation(line: 29, column: 1, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5865, file: !2173, line: 29, column: 1)
!5876 = distinct !DISubprogram(name: "VEC_uchar_base_quick_push", scope: !2173, file: !2173, line: 27, type: !5877, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5880)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!5858, !5879, !2184}
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!5880 = !{!5881, !5882, !5883}
!5881 = !DILocalVariable(name: "vec_", arg: 1, scope: !5876, file: !2173, line: 27, type: !5879)
!5882 = !DILocalVariable(name: "obj_", arg: 2, scope: !5876, file: !2173, line: 27, type: !2184)
!5883 = !DILocalVariable(name: "slot_", scope: !5876, file: !2173, line: 27, type: !5858)
!5884 = !DILocation(line: 0, scope: !5876)
!5885 = !DILocation(line: 27, column: 1, scope: !5876)
!5886 = distinct !DISubprogram(name: "VEC_uchar_base_space", scope: !2173, file: !2173, line: 27, type: !5887, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5889)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{!6, !5879, !6}
!5889 = !{!5890, !5891}
!5890 = !DILocalVariable(name: "vec_", arg: 1, scope: !5886, file: !2173, line: 27, type: !5879)
!5891 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5886, file: !2173, line: 27, type: !6)
!5892 = !DILocation(line: 0, scope: !5886)
!5893 = !DILocation(line: 27, column: 1, scope: !5886)
!5894 = distinct !DISubprogram(name: "finish_eh_generation", scope: !3, file: !3, line: 1407, type: !2782, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5895)
!5895 = !{!5896, !5897, !5901, !5902}
!5896 = !DILocalVariable(name: "bb", scope: !5894, file: !3, line: 1409, type: !1543)
!5897 = !DILocalVariable(name: "lp", scope: !5898, file: !3, line: 1426, type: !2163)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 1425, column: 5)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1424, column: 3)
!5900 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1424, column: 3)
!5901 = !DILocalVariable(name: "ei", scope: !5898, file: !3, line: 1427, type: !4769)
!5902 = !DILocalVariable(name: "e", scope: !5898, file: !3, line: 1428, type: !1090)
!5903 = !DILocation(line: 1415, column: 5, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1412, column: 7)
!5905 = !DILocation(line: 1416, column: 3, scope: !5894)
!5906 = !DILocation(line: 1420, column: 28, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1418, column: 7)
!5908 = !DILocation(line: 1420, column: 10, scope: !5907)
!5909 = !DILocation(line: 1420, column: 46, scope: !5907)
!5910 = !DILocation(line: 1420, column: 52, scope: !5907)
!5911 = !DILocation(line: 1418, column: 7, scope: !5894)
!5912 = !DILocation(line: 1421, column: 5, scope: !5907)
!5913 = !DILocation(line: 1424, column: 3, scope: !5900)
!5914 = !DILocation(line: 0, scope: !5898)
!5915 = !DILocation(line: 0, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1432, column: 7)
!5917 = !DILocation(line: 0, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 1432, column: 7)
!5919 = !DILocation(line: 1424, column: 3, scope: !5899)
!5920 = !DILocation(line: 0, scope: !5900)
!5921 = !DILocation(line: 0, scope: !5894)
!5922 = !DILocation(line: 1427, column: 7, scope: !5898)
!5923 = !DILocation(line: 1428, column: 7, scope: !5898)
!5924 = !DILocation(line: 1430, column: 41, scope: !5898)
!5925 = !DILocation(line: 1430, column: 12, scope: !5898)
!5926 = !DILocation(line: 1432, column: 7, scope: !5916)
!5927 = !DILocation(line: 1432, column: 7, scope: !5918)
!5928 = !DILocation(line: 1441, column: 7, scope: !5898)
!5929 = !DILocation(line: 1433, column: 6, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1433, column: 6)
!5931 = !DILocation(line: 1433, column: 9, scope: !5930)
!5932 = !DILocation(line: 1433, column: 15, scope: !5930)
!5933 = !DILocation(line: 1433, column: 6, scope: !5918)
!5934 = distinct !{!5934, !5926, !5935}
!5935 = !DILocation(line: 1434, column: 4, scope: !5916)
!5936 = !DILocation(line: 1442, column: 11, scope: !5898)
!5937 = !DILocation(line: 1444, column: 4, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1443, column: 2)
!5939 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1442, column: 11)
!5940 = !DILocation(line: 1446, column: 24, scope: !5938)
!5941 = !DILocation(line: 1446, column: 27, scope: !5938)
!5942 = !DILocation(line: 1446, column: 4, scope: !5938)
!5943 = !DILocation(line: 1447, column: 17, scope: !5938)
!5944 = !DILocation(line: 1447, column: 4, scope: !5938)
!5945 = !DILocation(line: 1447, column: 7, scope: !5938)
!5946 = !DILocation(line: 1447, column: 13, scope: !5938)
!5947 = !DILocation(line: 1450, column: 2, scope: !5938)
!5948 = !DILocation(line: 1451, column: 5, scope: !5899)
!5949 = !DILocation(line: 0, scope: !5899)
!5950 = distinct !{!5950, !5913, !5951}
!5951 = !DILocation(line: 1451, column: 5, scope: !5900)
!5952 = !DILocation(line: 1452, column: 1, scope: !5894)
!5953 = distinct !DISubprogram(name: "dw2_build_landing_pads", scope: !3, file: !3, line: 958, type: !2782, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !5954)
!5954 = !{!5955, !5956, !5957, !5961, !5962, !5963}
!5955 = !DILocalVariable(name: "i", scope: !5953, file: !3, line: 960, type: !6)
!5956 = !DILocalVariable(name: "lp", scope: !5953, file: !3, line: 961, type: !2163)
!5957 = !DILocalVariable(name: "region", scope: !5958, file: !3, line: 965, type: !765)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 964, column: 5)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 963, column: 3)
!5960 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 963, column: 3)
!5961 = !DILocalVariable(name: "bb", scope: !5958, file: !3, line: 966, type: !1543)
!5962 = !DILocalVariable(name: "seq", scope: !5958, file: !3, line: 967, type: !962)
!5963 = !DILocalVariable(name: "e", scope: !5958, file: !3, line: 968, type: !1090)
!5964 = !DILocation(line: 961, column: 3, scope: !5953)
!5965 = !DILocation(line: 0, scope: !5953)
!5966 = !DILocation(line: 963, column: 8, scope: !5960)
!5967 = !DILocation(line: 0, scope: !5960)
!5968 = !DILocation(line: 963, column: 15, scope: !5959)
!5969 = !DILocation(line: 963, column: 3, scope: !5960)
!5970 = !DILocation(line: 970, column: 11, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 970, column: 11)
!5972 = !DILocation(line: 970, column: 14, scope: !5971)
!5973 = !DILocation(line: 970, column: 22, scope: !5971)
!5974 = !DILocation(line: 970, column: 29, scope: !5971)
!5975 = !DILocation(line: 970, column: 46, scope: !5971)
!5976 = !DILocation(line: 970, column: 11, scope: !5958)
!5977 = !DILocation(line: 973, column: 7, scope: !5958)
!5978 = !DILocation(line: 975, column: 25, scope: !5958)
!5979 = !DILocation(line: 975, column: 7, scope: !5958)
!5980 = !DILocation(line: 975, column: 11, scope: !5958)
!5981 = !DILocation(line: 975, column: 23, scope: !5958)
!5982 = !DILocation(line: 976, column: 7, scope: !5958)
!5983 = !DILocation(line: 977, column: 7, scope: !5958)
!5984 = !DILocation(line: 977, column: 42, scope: !5958)
!5985 = !DILocation(line: 991, column: 16, scope: !5958)
!5986 = !DILocation(line: 991, column: 20, scope: !5958)
!5987 = !DILocation(line: 0, scope: !5958)
!5988 = !DILocation(line: 992, column: 19, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 992, column: 11)
!5990 = !DILocation(line: 992, column: 11, scope: !5989)
!5991 = !DILocation(line: 992, column: 11, scope: !5958)
!5992 = !DILocation(line: 994, column: 17, scope: !5989)
!5993 = !DILocation(line: 994, column: 4, scope: !5989)
!5994 = !DILocation(line: 993, column: 2, scope: !5989)
!5995 = !DILocation(line: 995, column: 19, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 995, column: 11)
!5997 = !DILocation(line: 995, column: 11, scope: !5996)
!5998 = !DILocation(line: 995, column: 11, scope: !5958)
!5999 = !DILocation(line: 997, column: 25, scope: !5996)
!6000 = !DILocation(line: 997, column: 17, scope: !5996)
!6001 = !DILocation(line: 997, column: 4, scope: !5996)
!6002 = !DILocation(line: 996, column: 2, scope: !5996)
!6003 = !DILocation(line: 1000, column: 13, scope: !5958)
!6004 = !DILocation(line: 1001, column: 7, scope: !5958)
!6005 = !DILocation(line: 1003, column: 51, scope: !5958)
!6006 = !DILocation(line: 1003, column: 55, scope: !5958)
!6007 = !DILocation(line: 1003, column: 40, scope: !5958)
!6008 = !DILocation(line: 1003, column: 12, scope: !5958)
!6009 = !DILocation(line: 1004, column: 30, scope: !5958)
!6010 = !DILocation(line: 1004, column: 11, scope: !5958)
!6011 = !DILocation(line: 1005, column: 22, scope: !5958)
!6012 = !DILocation(line: 1005, column: 10, scope: !5958)
!6013 = !DILocation(line: 1005, column: 16, scope: !5958)
!6014 = !DILocation(line: 1006, column: 10, scope: !5958)
!6015 = !DILocation(line: 1006, column: 22, scope: !5958)
!6016 = !DILocation(line: 1007, column: 5, scope: !5959)
!6017 = !DILocation(line: 963, column: 72, scope: !5959)
!6018 = !DILocation(line: 963, column: 3, scope: !5959)
!6019 = distinct !{!6019, !5969, !6020}
!6020 = !DILocation(line: 1007, column: 5, scope: !5960)
!6021 = !DILocation(line: 1008, column: 1, scope: !5953)
!6022 = distinct !DISubprogram(name: "single_succ_edge", scope: !341, file: !341, line: 643, type: !6023, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6028)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!1090, !6025}
!6025 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !788, line: 112, baseType: !6026)
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!6028 = !{!6029}
!6029 = !DILocalVariable(name: "bb", arg: 1, scope: !6022, file: !341, line: 643, type: !6025)
!6030 = !DILocation(line: 0, scope: !6022)
!6031 = !DILocation(line: 645, column: 3, scope: !6022)
!6032 = !DILocation(line: 646, column: 10, scope: !6022)
!6033 = !DILocation(line: 646, column: 3, scope: !6022)
!6034 = distinct !DISubprogram(name: "ei_start_1", scope: !341, file: !341, line: 696, type: !6035, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6037)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!4769, !4774}
!6037 = !{!6038, !6039}
!6038 = !DILocalVariable(name: "ev", arg: 1, scope: !6034, file: !341, line: 696, type: !4774)
!6039 = !DILocalVariable(name: "i", scope: !6034, file: !341, line: 698, type: !4769)
!6040 = !DILocation(line: 0, scope: !6034)
!6041 = !DILocation(line: 700, column: 5, scope: !6034)
!6042 = !DILocation(line: 700, column: 11, scope: !6034)
!6043 = !DILocation(line: 701, column: 5, scope: !6034)
!6044 = !DILocation(line: 701, column: 15, scope: !6034)
!6045 = !DILocation(line: 703, column: 3, scope: !6034)
!6046 = distinct !DISubprogram(name: "ei_cond", scope: !341, file: !341, line: 771, type: !6047, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6050)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!754, !4769, !6049}
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!6050 = !{!6051, !6052}
!6051 = !DILocalVariable(name: "ei", arg: 1, scope: !6046, file: !341, line: 771, type: !4769)
!6052 = !DILocalVariable(name: "p", arg: 2, scope: !6046, file: !341, line: 771, type: !6049)
!6053 = !DILocation(line: 0, scope: !6046)
!6054 = !DILocation(line: 773, column: 8, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6046, file: !341, line: 773, column: 7)
!6056 = !DILocation(line: 773, column: 7, scope: !6046)
!6057 = !DILocation(line: 775, column: 12, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6055, file: !341, line: 774, column: 5)
!6059 = !DILocation(line: 776, column: 7, scope: !6058)
!6060 = !DILocation(line: 781, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6055, file: !341, line: 779, column: 5)
!6062 = !DILocation(line: 0, scope: !6055)
!6063 = !DILocation(line: 783, column: 1, scope: !6046)
!6064 = distinct !DISubprogram(name: "ei_next", scope: !341, file: !341, line: 736, type: !6065, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6068)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{null, !6067}
!6067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4769, size: 64)
!6068 = !{!6069}
!6069 = !DILocalVariable(name: "i", arg: 1, scope: !6064, file: !341, line: 736, type: !6067)
!6070 = !DILocation(line: 0, scope: !6064)
!6071 = !DILocation(line: 738, column: 3, scope: !6064)
!6072 = !DILocation(line: 739, column: 11, scope: !6064)
!6073 = !DILocation(line: 740, column: 1, scope: !6064)
!6074 = distinct !DISubprogram(name: "emit_to_new_bb_before", scope: !3, file: !3, line: 931, type: !6075, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6077)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{!1543, !962, !962}
!6077 = !{!6078, !6079, !6080, !6081, !6082, !6083}
!6078 = !DILocalVariable(name: "seq", arg: 1, scope: !6074, file: !3, line: 931, type: !962)
!6079 = !DILocalVariable(name: "insn", arg: 2, scope: !6074, file: !3, line: 931, type: !962)
!6080 = !DILocalVariable(name: "last", scope: !6074, file: !3, line: 933, type: !962)
!6081 = !DILocalVariable(name: "bb", scope: !6074, file: !3, line: 934, type: !1543)
!6082 = !DILocalVariable(name: "e", scope: !6074, file: !3, line: 935, type: !1090)
!6083 = !DILocalVariable(name: "ei", scope: !6074, file: !3, line: 936, type: !4769)
!6084 = !DILocation(line: 0, scope: !6074)
!6085 = !DILocation(line: 936, column: 3, scope: !6074)
!6086 = !DILocation(line: 941, column: 13, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 941, column: 3)
!6088 = !DILocation(line: 0, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 941, column: 3)
!6090 = !DILocation(line: 941, column: 8, scope: !6087)
!6091 = !DILocation(line: 941, column: 59, scope: !6089)
!6092 = !DILocation(line: 941, column: 3, scope: !6087)
!6093 = !DILocation(line: 942, column: 12, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 942, column: 9)
!6095 = !DILocation(line: 942, column: 18, scope: !6094)
!6096 = !DILocation(line: 942, column: 9, scope: !6089)
!6097 = !DILocation(line: 943, column: 7, scope: !6094)
!6098 = !DILocation(line: 945, column: 7, scope: !6094)
!6099 = !DILocation(line: 941, column: 3, scope: !6089)
!6100 = distinct !{!6100, !6092, !6101}
!6101 = !DILocation(line: 945, column: 19, scope: !6087)
!6102 = !DILocation(line: 946, column: 10, scope: !6074)
!6103 = !DILocation(line: 947, column: 7, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 947, column: 7)
!6105 = !DILocation(line: 947, column: 7, scope: !6074)
!6106 = !DILocation(line: 948, column: 12, scope: !6104)
!6107 = !DILocation(line: 948, column: 5, scope: !6104)
!6108 = !DILocation(line: 949, column: 28, scope: !6074)
!6109 = !DILocation(line: 949, column: 33, scope: !6074)
!6110 = !DILocation(line: 949, column: 39, scope: !6074)
!6111 = !DILocation(line: 949, column: 62, scope: !6074)
!6112 = !DILocation(line: 949, column: 8, scope: !6074)
!6113 = !DILocation(line: 950, column: 3, scope: !6074)
!6114 = !DILocation(line: 951, column: 7, scope: !6074)
!6115 = !DILocation(line: 951, column: 13, scope: !6074)
!6116 = !DILocation(line: 953, column: 1, scope: !6074)
!6117 = !DILocation(line: 952, column: 3, scope: !6074)
!6118 = distinct !DISubprogram(name: "ei_safe_edge", scope: !341, file: !341, line: 761, type: !6119, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!1090, !4769}
!6121 = !{!6122}
!6122 = !DILocalVariable(name: "i", arg: 1, scope: !6118, file: !341, line: 761, type: !4769)
!6123 = !DILocation(line: 763, column: 11, scope: !6118)
!6124 = !DILocation(line: 763, column: 10, scope: !6118)
!6125 = !DILocation(line: 763, column: 26, scope: !6118)
!6126 = !DILocation(line: 763, column: 3, scope: !6118)
!6127 = distinct !DISubprogram(name: "ei_end_p", scope: !341, file: !341, line: 721, type: !6128, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6130)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!754, !4769}
!6130 = !{!6131}
!6131 = !DILocalVariable(name: "i", arg: 1, scope: !6127, file: !341, line: 721, type: !4769)
!6132 = !DILocation(line: 723, column: 22, scope: !6127)
!6133 = !DILocation(line: 723, column: 19, scope: !6127)
!6134 = !DILocation(line: 723, column: 10, scope: !6127)
!6135 = !DILocation(line: 723, column: 3, scope: !6127)
!6136 = distinct !DISubprogram(name: "ei_edge", scope: !341, file: !341, line: 752, type: !6119, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6137)
!6137 = !{!6138}
!6138 = !DILocalVariable(name: "i", arg: 1, scope: !6136, file: !341, line: 752, type: !4769)
!6139 = !DILocation(line: 754, column: 10, scope: !6136)
!6140 = !DILocation(line: 754, column: 3, scope: !6136)
!6141 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !341, file: !341, line: 150, type: !6142, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6146)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!11, !6144}
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!6146 = !{!6147}
!6147 = !DILocalVariable(name: "vec_", arg: 1, scope: !6141, file: !341, line: 150, type: !6144)
!6148 = !DILocation(line: 0, scope: !6141)
!6149 = !DILocation(line: 150, column: 1, scope: !6141)
!6150 = distinct !DISubprogram(name: "ei_container", scope: !341, file: !341, line: 685, type: !6151, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6153)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!1078, !4769}
!6153 = !{!6154}
!6154 = !DILocalVariable(name: "i", arg: 1, scope: !6150, file: !341, line: 685, type: !4769)
!6155 = !DILocation(line: 687, column: 3, scope: !6150)
!6156 = !DILocation(line: 688, column: 10, scope: !6150)
!6157 = !DILocation(line: 688, column: 3, scope: !6150)
!6158 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !341, file: !341, line: 150, type: !6159, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6161)
!6159 = !DISubroutineType(types: !6160)
!6160 = !{!1090, !6144, !11}
!6161 = !{!6162, !6163}
!6162 = !DILocalVariable(name: "vec_", arg: 1, scope: !6158, file: !341, line: 150, type: !6144)
!6163 = !DILocalVariable(name: "ix_", arg: 2, scope: !6158, file: !341, line: 150, type: !11)
!6164 = !DILocation(line: 0, scope: !6158)
!6165 = !DILocation(line: 150, column: 1, scope: !6158)
!6166 = distinct !DISubprogram(name: "single_succ_p", scope: !341, file: !341, line: 626, type: !6167, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6169)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!754, !6025}
!6169 = !{!6170}
!6170 = !DILocalVariable(name: "bb", arg: 1, scope: !6166, file: !341, line: 626, type: !6025)
!6171 = !DILocation(line: 0, scope: !6166)
!6172 = !DILocation(line: 628, column: 10, scope: !6166)
!6173 = !DILocation(line: 628, column: 33, scope: !6166)
!6174 = !DILocation(line: 628, column: 3, scope: !6166)
!6175 = distinct !DISubprogram(name: "action_record_hash", scope: !3, file: !3, line: 2223, type: !1583, scopeLine: 2224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6176)
!6176 = !{!6177, !6178}
!6177 = !DILocalVariable(name: "pentry", arg: 1, scope: !6175, file: !3, line: 2223, type: !1418)
!6178 = !DILocalVariable(name: "entry", scope: !6175, file: !3, line: 2225, type: !2202)
!6179 = !DILocation(line: 0, scope: !6175)
!6180 = !DILocation(line: 2226, column: 17, scope: !6175)
!6181 = !DILocation(line: 2226, column: 22, scope: !6175)
!6182 = !DILocation(line: 2226, column: 38, scope: !6175)
!6183 = !DILocation(line: 2226, column: 29, scope: !6175)
!6184 = !DILocation(line: 2226, column: 3, scope: !6175)
!6185 = distinct !DISubprogram(name: "action_record_eq", scope: !3, file: !3, line: 2215, type: !1589, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6186)
!6186 = !{!6187, !6188, !6189, !6190}
!6187 = !DILocalVariable(name: "pentry", arg: 1, scope: !6185, file: !3, line: 2215, type: !1418)
!6188 = !DILocalVariable(name: "pdata", arg: 2, scope: !6185, file: !3, line: 2215, type: !1418)
!6189 = !DILocalVariable(name: "entry", scope: !6185, file: !3, line: 2217, type: !2202)
!6190 = !DILocalVariable(name: "data", scope: !6185, file: !3, line: 2218, type: !2202)
!6191 = !DILocation(line: 0, scope: !6185)
!6192 = !DILocation(line: 2219, column: 17, scope: !6185)
!6193 = !DILocation(line: 2219, column: 33, scope: !6185)
!6194 = !DILocation(line: 2219, column: 24, scope: !6185)
!6195 = !DILocation(line: 2219, column: 40, scope: !6185)
!6196 = !DILocation(line: 2219, column: 50, scope: !6185)
!6197 = !DILocation(line: 2219, column: 64, scope: !6185)
!6198 = !DILocation(line: 2219, column: 55, scope: !6185)
!6199 = !DILocation(line: 2219, column: 3, scope: !6185)
!6200 = distinct !DISubprogram(name: "collect_one_action_chain", scope: !3, file: !3, line: 2261, type: !6201, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6203)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{!6, !1575, !765}
!6203 = !{!6204, !6205, !6206, !6207, !6210, !6212, !6218, !6220}
!6204 = !DILocalVariable(name: "ar_hash", arg: 1, scope: !6200, file: !3, line: 2261, type: !1575)
!6205 = !DILocalVariable(name: "region", arg: 2, scope: !6200, file: !3, line: 2261, type: !765)
!6206 = !DILocalVariable(name: "next", scope: !6200, file: !3, line: 2263, type: !6)
!6207 = !DILocalVariable(name: "r", scope: !6208, file: !3, line: 2274, type: !765)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2273, column: 7)
!6209 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 2271, column: 5)
!6210 = !DILocalVariable(name: "c", scope: !6211, file: !3, line: 2292, type: !2332)
!6211 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2291, column: 7)
!6212 = !DILocalVariable(name: "filter", scope: !6213, file: !3, line: 2305, type: !6)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 2302, column: 8)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 2301, column: 10)
!6215 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 2300, column: 4)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2299, column: 2)
!6217 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 2299, column: 2)
!6218 = !DILocalVariable(name: "flt_node", scope: !6219, file: !3, line: 2312, type: !787)
!6219 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 2309, column: 8)
!6220 = !DILocalVariable(name: "filter", scope: !6221, file: !3, line: 2332, type: !6)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 2331, column: 5)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 2330, column: 3)
!6223 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 2330, column: 3)
!6224 = !DILocation(line: 0, scope: !6200)
!6225 = !DILocation(line: 2267, column: 14, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 2267, column: 7)
!6227 = !DILocation(line: 2267, column: 7, scope: !6200)
!6228 = !DILocation(line: 2270, column: 19, scope: !6200)
!6229 = !DILocation(line: 2270, column: 3, scope: !6200)
!6230 = !DILocation(line: 2281, column: 52, scope: !6208)
!6231 = !DILocation(line: 2281, column: 9, scope: !6208)
!6232 = !DILocation(line: 2282, column: 11, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2282, column: 6)
!6234 = !DILocation(line: 2282, column: 6, scope: !6208)
!6235 = !DILocation(line: 2284, column: 7, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2284, column: 2)
!6237 = !DILocation(line: 0, scope: !6236)
!6238 = !DILocation(line: 0, scope: !6208)
!6239 = !DILocation(line: 2284, column: 2, scope: !6236)
!6240 = !DILocation(line: 2285, column: 11, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 2285, column: 8)
!6242 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 2284, column: 2)
!6243 = !DILocation(line: 2285, column: 16, scope: !6241)
!6244 = !DILocation(line: 2285, column: 8, scope: !6242)
!6245 = !DILocation(line: 2284, column: 2, scope: !6242)
!6246 = distinct !{!6246, !6239, !6247}
!6247 = !DILocation(line: 2286, column: 13, scope: !6236)
!6248 = !DILocation(line: 2287, column: 9, scope: !6208)
!6249 = !DILocation(line: 2287, column: 2, scope: !6208)
!6250 = !DILocation(line: 2299, column: 28, scope: !6217)
!6251 = !DILocation(line: 0, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 2315, column: 5)
!6253 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 2314, column: 7)
!6254 = !DILocation(line: 2299, column: 7, scope: !6217)
!6255 = !DILocation(line: 0, scope: !6211)
!6256 = !DILocation(line: 0, scope: !6217)
!6257 = !DILocation(line: 2299, column: 2, scope: !6217)
!6258 = !DILocation(line: 2301, column: 13, scope: !6214)
!6259 = !DILocation(line: 2301, column: 23, scope: !6214)
!6260 = !DILocation(line: 2301, column: 10, scope: !6215)
!6261 = !DILocation(line: 2305, column: 16, scope: !6213)
!6262 = !DILocation(line: 0, scope: !6213)
!6263 = !DILocation(line: 2306, column: 10, scope: !6213)
!6264 = !DILocation(line: 2307, column: 8, scope: !6213)
!6265 = !DILocation(line: 2314, column: 12, scope: !6253)
!6266 = !DILocation(line: 2314, column: 7, scope: !6219)
!6267 = !DILocation(line: 2316, column: 57, scope: !6252)
!6268 = !DILocation(line: 2316, column: 14, scope: !6252)
!6269 = !DILocation(line: 2319, column: 16, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 2319, column: 11)
!6271 = !DILocation(line: 2319, column: 11, scope: !6252)
!6272 = !DILocation(line: 2325, column: 21, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 2325, column: 16)
!6274 = !DILocation(line: 2325, column: 16, scope: !6270)
!6275 = !DILocation(line: 2326, column: 16, scope: !6273)
!6276 = !DILocation(line: 2326, column: 9, scope: !6273)
!6277 = !DILocation(line: 2329, column: 17, scope: !6219)
!6278 = !DILocation(line: 2330, column: 3, scope: !6219)
!6279 = !DILocation(line: 0, scope: !6219)
!6280 = !DILocation(line: 2330, column: 3, scope: !6223)
!6281 = !DILocation(line: 2332, column: 20, scope: !6221)
!6282 = !DILocation(line: 0, scope: !6221)
!6283 = !DILocation(line: 2333, column: 14, scope: !6221)
!6284 = !DILocation(line: 2330, column: 31, scope: !6222)
!6285 = !DILocation(line: 2330, column: 3, scope: !6222)
!6286 = distinct !{!6286, !6280, !6287}
!6287 = !DILocation(line: 2334, column: 5, scope: !6223)
!6288 = !DILocation(line: 2299, column: 51, scope: !6216)
!6289 = !DILocation(line: 0, scope: !6214)
!6290 = !DILocation(line: 2299, column: 2, scope: !6216)
!6291 = distinct !{!6291, !6257, !6292}
!6292 = !DILocation(line: 2336, column: 4, scope: !6217)
!6293 = !DILocation(line: 2343, column: 57, scope: !6209)
!6294 = !DILocation(line: 2343, column: 14, scope: !6209)
!6295 = !DILocation(line: 2346, column: 16, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2346, column: 11)
!6297 = !DILocation(line: 2346, column: 11, scope: !6209)
!6298 = !DILocation(line: 2352, column: 21, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 2352, column: 16)
!6300 = !DILocation(line: 2352, column: 16, scope: !6296)
!6301 = !DILocation(line: 2353, column: 9, scope: !6299)
!6302 = !DILocation(line: 2353, column: 2, scope: !6299)
!6303 = !DILocation(line: 0, scope: !6296)
!6304 = !DILocation(line: 2355, column: 60, scope: !6209)
!6305 = !DILocation(line: 2355, column: 14, scope: !6209)
!6306 = !DILocation(line: 2355, column: 7, scope: !6209)
!6307 = !DILocation(line: 2365, column: 3, scope: !6200)
!6308 = !DILocation(line: 2367, column: 5, scope: !6200)
!6309 = !DILocation(line: 2369, column: 1, scope: !6200)
!6310 = distinct !DISubprogram(name: "add_call_site", scope: !3, file: !3, line: 2372, type: !6311, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6313)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!6, !962, !6, !6}
!6313 = !{!6314, !6315, !6316, !6317}
!6314 = !DILocalVariable(name: "landing_pad", arg: 1, scope: !6310, file: !3, line: 2372, type: !962)
!6315 = !DILocalVariable(name: "action", arg: 2, scope: !6310, file: !3, line: 2372, type: !6)
!6316 = !DILocalVariable(name: "section", arg: 3, scope: !6310, file: !3, line: 2372, type: !6)
!6317 = !DILocalVariable(name: "record", scope: !6310, file: !3, line: 2374, type: !2223)
!6318 = !DILocation(line: 0, scope: !6310)
!6319 = !DILocation(line: 2376, column: 12, scope: !6310)
!6320 = !DILocation(line: 2377, column: 11, scope: !6310)
!6321 = !DILocation(line: 2377, column: 23, scope: !6310)
!6322 = !DILocation(line: 2378, column: 11, scope: !6310)
!6323 = !DILocation(line: 2378, column: 18, scope: !6310)
!6324 = !DILocation(line: 2380, column: 3, scope: !6310)
!6325 = !DILocation(line: 2383, column: 10, scope: !6310)
!6326 = !DILocation(line: 2383, column: 27, scope: !6310)
!6327 = !DILocation(line: 2383, column: 25, scope: !6310)
!6328 = !DILocation(line: 2384, column: 47, scope: !6310)
!6329 = !DILocation(line: 2383, column: 3, scope: !6310)
!6330 = distinct !DISubprogram(name: "VEC_call_site_record_base_length", scope: !1535, file: !1535, line: 142, type: !6331, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6335)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!11, !6333}
!6333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6334, size: 64)
!6334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2216)
!6335 = !{!6336}
!6336 = !DILocalVariable(name: "vec_", arg: 1, scope: !6330, file: !1535, line: 142, type: !6333)
!6337 = !DILocation(line: 0, scope: !6330)
!6338 = !DILocation(line: 142, column: 1, scope: !6330)
!6339 = distinct !DISubprogram(name: "VEC_call_site_record_gc_alloc", scope: !1535, file: !1535, line: 143, type: !6340, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6342)
!6340 = !DISubroutineType(types: !6341)
!6341 = !{!2211, !6}
!6342 = !{!6343}
!6343 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6339, file: !1535, line: 143, type: !6)
!6344 = !DILocation(line: 0, scope: !6339)
!6345 = !DILocation(line: 143, column: 1, scope: !6339)
!6346 = distinct !DISubprogram(name: "VEC_call_site_record_base_index", scope: !1535, file: !1535, line: 142, type: !6347, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6349)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{!2223, !6333, !11}
!6349 = !{!6350, !6351}
!6350 = !DILocalVariable(name: "vec_", arg: 1, scope: !6346, file: !1535, line: 142, type: !6333)
!6351 = !DILocalVariable(name: "ix_", arg: 2, scope: !6346, file: !1535, line: 142, type: !11)
!6352 = !DILocation(line: 0, scope: !6346)
!6353 = !DILocation(line: 142, column: 1, scope: !6346)
!6354 = distinct !DISubprogram(name: "add_action_record", scope: !3, file: !3, line: 2230, type: !6355, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!6, !1575, !6, !6}
!6357 = !{!6358, !6359, !6360, !6361, !6362, !6363}
!6358 = !DILocalVariable(name: "ar_hash", arg: 1, scope: !6354, file: !3, line: 2230, type: !1575)
!6359 = !DILocalVariable(name: "filter", arg: 2, scope: !6354, file: !3, line: 2230, type: !6)
!6360 = !DILocalVariable(name: "next", arg: 3, scope: !6354, file: !3, line: 2230, type: !6)
!6361 = !DILocalVariable(name: "slot", scope: !6354, file: !3, line: 2232, type: !2209)
!6362 = !DILocalVariable(name: "new_ar", scope: !6354, file: !3, line: 2232, type: !2210)
!6363 = !DILocalVariable(name: "tmp", scope: !6354, file: !3, line: 2232, type: !2204)
!6364 = !DILocation(line: 0, scope: !6354)
!6365 = !DILocation(line: 2232, column: 3, scope: !6354)
!6366 = !DILocation(line: 2234, column: 7, scope: !6354)
!6367 = !DILocation(line: 2234, column: 14, scope: !6354)
!6368 = !DILocation(line: 2235, column: 7, scope: !6354)
!6369 = !DILocation(line: 2235, column: 12, scope: !6354)
!6370 = !DILocation(line: 2236, column: 36, scope: !6354)
!6371 = !DILocation(line: 2236, column: 10, scope: !6354)
!6372 = !DILocation(line: 2238, column: 17, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 2238, column: 7)
!6374 = !DILocation(line: 2238, column: 24, scope: !6373)
!6375 = !DILocation(line: 2238, column: 7, scope: !6354)
!6376 = !DILocation(line: 2240, column: 16, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 2239, column: 5)
!6378 = !DILocation(line: 2241, column: 24, scope: !6377)
!6379 = !DILocation(line: 2241, column: 72, scope: !6377)
!6380 = !DILocation(line: 2241, column: 15, scope: !6377)
!6381 = !DILocation(line: 2241, column: 22, scope: !6377)
!6382 = !DILocation(line: 2242, column: 15, scope: !6377)
!6383 = !DILocation(line: 2242, column: 22, scope: !6377)
!6384 = !DILocation(line: 2243, column: 15, scope: !6377)
!6385 = !DILocation(line: 2243, column: 20, scope: !6377)
!6386 = !DILocation(line: 2244, column: 13, scope: !6377)
!6387 = !DILocation(line: 2251, column: 7, scope: !6377)
!6388 = !DILocation(line: 2252, column: 11, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 2252, column: 11)
!6390 = !DILocation(line: 2252, column: 11, scope: !6377)
!6391 = !DILocation(line: 2253, column: 10, scope: !6389)
!6392 = !DILocation(line: 2253, column: 7, scope: !6389)
!6393 = !DILocation(line: 2253, column: 2, scope: !6389)
!6394 = !DILocation(line: 2254, column: 7, scope: !6377)
!6395 = !DILocation(line: 2255, column: 5, scope: !6377)
!6396 = !DILocation(line: 0, scope: !6373)
!6397 = !DILocation(line: 2257, column: 18, scope: !6354)
!6398 = !DILocation(line: 2258, column: 1, scope: !6354)
!6399 = !DILocation(line: 2257, column: 3, scope: !6354)
!6400 = distinct !DISubprogram(name: "push_sleb128", scope: !3, file: !3, line: 2695, type: !6401, scopeLine: 2696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6403)
!6401 = !DISubroutineType(types: !6402)
!6402 = !{null, !5836, !6}
!6403 = !{!6404, !6405, !6406, !6407}
!6404 = !DILocalVariable(name: "data_area", arg: 1, scope: !6400, file: !3, line: 2695, type: !5836)
!6405 = !DILocalVariable(name: "value", arg: 2, scope: !6400, file: !3, line: 2695, type: !6)
!6406 = !DILocalVariable(name: "byte", scope: !6400, file: !3, line: 2697, type: !754)
!6407 = !DILocalVariable(name: "more", scope: !6400, file: !3, line: 2698, type: !6)
!6408 = !DILocation(line: 0, scope: !6400)
!6409 = !DILocation(line: 2700, column: 3, scope: !6400)
!6410 = !DILocation(line: 2702, column: 14, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2701, column: 5)
!6412 = !DILocation(line: 2703, column: 13, scope: !6411)
!6413 = !DILocation(line: 2704, column: 29, scope: !6411)
!6414 = !DILocation(line: 2705, column: 28, scope: !6411)
!6415 = !DILocation(line: 2704, column: 38, scope: !6411)
!6416 = !DILocation(line: 2704, column: 46, scope: !6411)
!6417 = !DILocation(line: 2705, column: 3, scope: !6411)
!6418 = !DILocation(line: 2705, column: 19, scope: !6411)
!6419 = !DILocation(line: 2705, column: 36, scope: !6411)
!6420 = !DILocation(line: 2706, column: 11, scope: !6411)
!6421 = !DILocation(line: 2708, column: 7, scope: !6411)
!6422 = !DILocation(line: 2709, column: 5, scope: !6411)
!6423 = distinct !{!6423, !6409, !6424}
!6424 = !DILocation(line: 2710, column: 14, scope: !6400)
!6425 = !DILocation(line: 2711, column: 1, scope: !6400)
!6426 = distinct !DISubprogram(name: "VEC_call_site_record_gc_safe_push", scope: !1535, file: !1535, line: 143, type: !6427, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6431)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!6429, !6430, !2223}
!6429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!6431 = !{!6432, !6433}
!6432 = !DILocalVariable(name: "vec_", arg: 1, scope: !6426, file: !1535, line: 143, type: !6430)
!6433 = !DILocalVariable(name: "obj_", arg: 2, scope: !6426, file: !1535, line: 143, type: !2223)
!6434 = !DILocation(line: 0, scope: !6426)
!6435 = !DILocation(line: 143, column: 1, scope: !6426)
!6436 = distinct !DISubprogram(name: "VEC_call_site_record_gc_reserve", scope: !1535, file: !1535, line: 143, type: !6437, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6439)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!6, !6430, !6}
!6439 = !{!6440, !6441, !6442}
!6440 = !DILocalVariable(name: "vec_", arg: 1, scope: !6436, file: !1535, line: 143, type: !6430)
!6441 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6436, file: !1535, line: 143, type: !6)
!6442 = !DILocalVariable(name: "extend", scope: !6436, file: !1535, line: 143, type: !6)
!6443 = !DILocation(line: 0, scope: !6436)
!6444 = !DILocation(line: 143, column: 1, scope: !6436)
!6445 = !DILocation(line: 143, column: 1, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6436, file: !1535, line: 143, column: 1)
!6447 = distinct !DISubprogram(name: "VEC_call_site_record_base_quick_push", scope: !1535, file: !1535, line: 142, type: !6448, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6451)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{!6429, !6450, !2223}
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!6451 = !{!6452, !6453, !6454}
!6452 = !DILocalVariable(name: "vec_", arg: 1, scope: !6447, file: !1535, line: 142, type: !6450)
!6453 = !DILocalVariable(name: "obj_", arg: 2, scope: !6447, file: !1535, line: 142, type: !2223)
!6454 = !DILocalVariable(name: "slot_", scope: !6447, file: !1535, line: 142, type: !6429)
!6455 = !DILocation(line: 0, scope: !6447)
!6456 = !DILocation(line: 142, column: 1, scope: !6447)
!6457 = distinct !DISubprogram(name: "VEC_call_site_record_base_space", scope: !1535, file: !1535, line: 142, type: !6458, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6460)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{!6, !6450, !6}
!6460 = !{!6461, !6462}
!6461 = !DILocalVariable(name: "vec_", arg: 1, scope: !6457, file: !1535, line: 142, type: !6450)
!6462 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6457, file: !1535, line: 142, type: !6)
!6463 = !DILocation(line: 0, scope: !6457)
!6464 = !DILocation(line: 142, column: 1, scope: !6457)
!6465 = distinct !DISubprogram(name: "switch_to_exception_section", scope: !3, file: !3, line: 2836, type: !5071, scopeLine: 2837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6466)
!6466 = !{!6467, !6468, !6469, !6474, !6477}
!6467 = !DILocalVariable(name: "fnname", arg: 1, scope: !6465, file: !3, line: 2836, type: !759)
!6468 = !DILocalVariable(name: "s", scope: !6465, file: !3, line: 2838, type: !1394)
!6469 = !DILocalVariable(name: "flags", scope: !6470, file: !3, line: 2848, type: !6)
!6470 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 2847, column: 2)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2846, column: 11)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 2843, column: 5)
!6473 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 2840, column: 7)
!6474 = !DILocalVariable(name: "tt_format", scope: !6475, file: !3, line: 2852, type: !6)
!6475 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2851, column: 6)
!6476 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2850, column: 8)
!6477 = !DILocalVariable(name: "section_name", scope: !6478, file: !3, line: 2865, type: !756)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 2864, column: 6)
!6479 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2863, column: 8)
!6480 = !DILocation(line: 0, scope: !6465)
!6481 = !DILocation(line: 2840, column: 7, scope: !6473)
!6482 = !DILocation(line: 2840, column: 7, scope: !6465)
!6483 = !DILocation(line: 2841, column: 5, scope: !6473)
!6484 = !DILocation(line: 2846, column: 19, scope: !6471)
!6485 = !DILocation(line: 2846, column: 11, scope: !6471)
!6486 = !DILocation(line: 2846, column: 11, scope: !6472)
!6487 = !DILocation(line: 2853, column: 3, scope: !6475)
!6488 = !DILocation(line: 0, scope: !6475)
!6489 = !DILocation(line: 2854, column: 20, scope: !6475)
!6490 = !DILocation(line: 2855, column: 4, scope: !6475)
!6491 = !DILocation(line: 2855, column: 19, scope: !6475)
!6492 = !DILocation(line: 2855, column: 27, scope: !6475)
!6493 = !DILocation(line: 2856, column: 8, scope: !6475)
!6494 = !DILocation(line: 0, scope: !6470)
!6495 = !DILocation(line: 2863, column: 8, scope: !6479)
!6496 = !DILocation(line: 2863, column: 8, scope: !6470)
!6497 = !DILocation(line: 2865, column: 29, scope: !6478)
!6498 = !DILocation(line: 0, scope: !6478)
!6499 = !DILocation(line: 2866, column: 8, scope: !6478)
!6500 = !DILocation(line: 2867, column: 12, scope: !6478)
!6501 = !DILocation(line: 2868, column: 8, scope: !6478)
!6502 = !DILocation(line: 2869, column: 6, scope: !6478)
!6503 = !DILocation(line: 2873, column: 14, scope: !6479)
!6504 = !DILocation(line: 2873, column: 8, scope: !6479)
!6505 = !DILocation(line: 2877, column: 10, scope: !6471)
!6506 = !DILocation(line: 2877, column: 4, scope: !6471)
!6507 = !DILocation(line: 0, scope: !6473)
!6508 = !DILocation(line: 2880, column: 3, scope: !6465)
!6509 = !DILocation(line: 2881, column: 1, scope: !6465)
!6510 = distinct !DISubprogram(name: "dw2_output_call_site_table", scope: !3, file: !3, line: 2752, type: !6511, scopeLine: 2753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6513)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{null, !6, !6}
!6513 = !{!6514, !6515, !6516, !6517, !6518, !6519, !6523, !6524, !6525}
!6514 = !DILocalVariable(name: "cs_format", arg: 1, scope: !6510, file: !3, line: 2752, type: !6)
!6515 = !DILocalVariable(name: "section", arg: 2, scope: !6510, file: !3, line: 2752, type: !6)
!6516 = !DILocalVariable(name: "n", scope: !6510, file: !3, line: 2754, type: !6)
!6517 = !DILocalVariable(name: "i", scope: !6510, file: !3, line: 2755, type: !6)
!6518 = !DILocalVariable(name: "begin", scope: !6510, file: !3, line: 2756, type: !759)
!6519 = !DILocalVariable(name: "cs", scope: !6520, file: !3, line: 2767, type: !2185)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2766, column: 5)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2765, column: 3)
!6522 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 2765, column: 3)
!6523 = !DILocalVariable(name: "reg_start_lab", scope: !6520, file: !3, line: 2769, type: !5108)
!6524 = !DILocalVariable(name: "reg_end_lab", scope: !6520, file: !3, line: 2770, type: !5108)
!6525 = !DILocalVariable(name: "landing_pad_lab", scope: !6520, file: !3, line: 2771, type: !5108)
!6526 = !DILocation(line: 0, scope: !6510)
!6527 = !DILocation(line: 2754, column: 11, scope: !6510)
!6528 = !DILocation(line: 2758, column: 15, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 2758, column: 7)
!6530 = !DILocation(line: 2758, column: 7, scope: !6510)
!6531 = !DILocation(line: 2759, column: 13, scope: !6529)
!6532 = !DILocation(line: 2759, column: 5, scope: !6529)
!6533 = !DILocation(line: 2760, column: 12, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 2760, column: 12)
!6535 = !DILocation(line: 2760, column: 12, scope: !6529)
!6536 = !DILocation(line: 0, scope: !6529)
!6537 = !DILocation(line: 0, scope: !6520)
!6538 = !DILocation(line: 2765, column: 8, scope: !6522)
!6539 = !DILocation(line: 0, scope: !6522)
!6540 = !DILocation(line: 2765, column: 17, scope: !6521)
!6541 = !DILocation(line: 2765, column: 3, scope: !6522)
!6542 = !DILocation(line: 2768, column: 2, scope: !6520)
!6543 = !DILocation(line: 2769, column: 7, scope: !6520)
!6544 = !DILocation(line: 2769, column: 12, scope: !6520)
!6545 = !DILocation(line: 2770, column: 7, scope: !6520)
!6546 = !DILocation(line: 2770, column: 12, scope: !6520)
!6547 = !DILocation(line: 2771, column: 7, scope: !6520)
!6548 = !DILocation(line: 2771, column: 12, scope: !6520)
!6549 = !DILocation(line: 2773, column: 7, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2773, column: 7)
!6551 = !DILocation(line: 2774, column: 7, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2774, column: 7)
!6553 = !DILocation(line: 2776, column: 15, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2776, column: 11)
!6555 = !DILocation(line: 2776, column: 11, scope: !6554)
!6556 = !DILocation(line: 2776, column: 11, scope: !6520)
!6557 = !DILocation(line: 2777, column: 2, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2777, column: 2)
!6559 = !DILocation(line: 2786, column: 4, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2785, column: 2)
!6561 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2784, column: 11)
!6562 = !DILocation(line: 2788, column: 4, scope: !6560)
!6563 = !DILocation(line: 2790, column: 12, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 2790, column: 8)
!6565 = !DILocation(line: 2790, column: 8, scope: !6564)
!6566 = !DILocation(line: 2790, column: 8, scope: !6560)
!6567 = !DILocation(line: 2791, column: 6, scope: !6564)
!6568 = !DILocation(line: 2794, column: 6, scope: !6564)
!6569 = !DILocation(line: 2807, column: 40, scope: !6520)
!6570 = !DILocation(line: 2807, column: 36, scope: !6520)
!6571 = !DILocation(line: 2807, column: 7, scope: !6520)
!6572 = !DILocation(line: 2808, column: 5, scope: !6521)
!6573 = !DILocation(line: 2765, column: 22, scope: !6521)
!6574 = !DILocation(line: 2765, column: 3, scope: !6521)
!6575 = distinct !{!6575, !6541, !6576}
!6576 = !DILocation(line: 2808, column: 5, scope: !6522)
!6577 = !DILocation(line: 2810, column: 18, scope: !6510)
!6578 = !DILocation(line: 2811, column: 1, scope: !6510)
!6579 = distinct !DISubprogram(name: "VEC_uchar_base_iterate", scope: !2173, file: !2173, line: 27, type: !6580, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6582)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!6, !5827, !11, !5858}
!6582 = !{!6583, !6584, !6585}
!6583 = !DILocalVariable(name: "vec_", arg: 1, scope: !6579, file: !2173, line: 27, type: !5827)
!6584 = !DILocalVariable(name: "ix_", arg: 2, scope: !6579, file: !2173, line: 27, type: !11)
!6585 = !DILocalVariable(name: "ptr", arg: 3, scope: !6579, file: !2173, line: 27, type: !5858)
!6586 = !DILocation(line: 0, scope: !6579)
!6587 = !DILocation(line: 27, column: 1, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6579, file: !2173, line: 27, column: 1)
!6589 = !DILocation(line: 27, column: 1, scope: !6579)
!6590 = !DILocation(line: 27, column: 1, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6588, file: !2173, line: 27, column: 1)
!6592 = !DILocation(line: 27, column: 1, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !2173, line: 27, column: 1)
!6594 = !DILocation(line: 0, scope: !6588)
!6595 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !146, file: !146, line: 182, type: !6596, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6598)
!6596 = !DISubroutineType(types: !6597)
!6597 = !{!787, !5780, !11}
!6598 = !{!6599, !6600}
!6599 = !DILocalVariable(name: "vec_", arg: 1, scope: !6595, file: !146, line: 182, type: !5780)
!6600 = !DILocalVariable(name: "ix_", arg: 2, scope: !6595, file: !146, line: 182, type: !11)
!6601 = !DILocation(line: 0, scope: !6595)
!6602 = !DILocation(line: 182, column: 1, scope: !6595)
!6603 = distinct !DISubprogram(name: "output_ttype", scope: !3, file: !3, line: 2890, type: !6604, scopeLine: 2891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6606)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{null, !787, !6, !6}
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612}
!6607 = !DILocalVariable(name: "type", arg: 1, scope: !6603, file: !3, line: 2890, type: !787)
!6608 = !DILocalVariable(name: "tt_format", arg: 2, scope: !6603, file: !3, line: 2890, type: !6)
!6609 = !DILocalVariable(name: "tt_format_size", arg: 3, scope: !6603, file: !3, line: 2890, type: !6)
!6610 = !DILocalVariable(name: "value", scope: !6603, file: !3, line: 2892, type: !962)
!6611 = !DILocalVariable(name: "is_public", scope: !6603, file: !3, line: 2893, type: !754)
!6612 = !DILocalVariable(name: "node", scope: !6613, file: !3, line: 2899, type: !4275)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2898, column: 5)
!6614 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2895, column: 7)
!6615 = !DILocation(line: 0, scope: !6603)
!6616 = !DILocation(line: 2895, column: 12, scope: !6614)
!6617 = !DILocation(line: 2895, column: 7, scope: !6603)
!6618 = !DILocation(line: 2896, column: 13, scope: !6614)
!6619 = !DILocation(line: 2896, column: 5, scope: !6614)
!6620 = !DILocation(line: 2906, column: 11, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2906, column: 11)
!6622 = !DILocation(line: 2906, column: 11, scope: !6613)
!6623 = !DILocation(line: 2907, column: 9, scope: !6621)
!6624 = !DILocation(line: 2907, column: 2, scope: !6621)
!6625 = !DILocation(line: 2909, column: 15, scope: !6613)
!6626 = !DILocation(line: 2914, column: 7, scope: !6613)
!6627 = !DILocation(line: 2915, column: 11, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2915, column: 11)
!6629 = !DILocation(line: 2915, column: 28, scope: !6628)
!6630 = !DILocation(line: 2915, column: 11, scope: !6613)
!6631 = !DILocation(line: 2917, column: 11, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2916, column: 2)
!6633 = !DILocation(line: 2918, column: 8, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 2918, column: 8)
!6635 = !DILocation(line: 2918, column: 25, scope: !6634)
!6636 = !DILocation(line: 2918, column: 8, scope: !6632)
!6637 = !DILocation(line: 2920, column: 15, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2919, column: 6)
!6639 = !DILocation(line: 0, scope: !6613)
!6640 = !DILocation(line: 2921, column: 12, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 2921, column: 12)
!6642 = !DILocation(line: 2921, column: 12, scope: !6638)
!6643 = !DILocation(line: 2922, column: 3, scope: !6641)
!6644 = !DILocation(line: 2923, column: 20, scope: !6638)
!6645 = !DILocation(line: 2924, column: 6, scope: !6638)
!6646 = !DILocation(line: 2927, column: 2, scope: !6628)
!6647 = !DILocation(line: 0, scope: !6614)
!6648 = !DILocation(line: 2931, column: 23, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2931, column: 7)
!6650 = !DILocation(line: 2931, column: 7, scope: !6649)
!6651 = !DILocation(line: 2931, column: 7, scope: !6603)
!6652 = !DILocation(line: 2934, column: 36, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2934, column: 7)
!6654 = !DILocation(line: 2936, column: 24, scope: !6653)
!6655 = !DILocation(line: 2935, column: 5, scope: !6653)
!6656 = !DILocation(line: 2938, column: 5, scope: !6653)
!6657 = !DILocation(line: 2939, column: 1, scope: !6603)
!6658 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !146, file: !146, line: 182, type: !6659, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !7, retainedNodes: !6661)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!6, !5780, !11, !1146}
!6661 = !{!6662, !6663, !6664}
!6662 = !DILocalVariable(name: "vec_", arg: 1, scope: !6658, file: !146, line: 182, type: !5780)
!6663 = !DILocalVariable(name: "ix_", arg: 2, scope: !6658, file: !146, line: 182, type: !11)
!6664 = !DILocalVariable(name: "ptr", arg: 3, scope: !6658, file: !146, line: 182, type: !1146)
!6665 = !DILocation(line: 0, scope: !6658)
!6666 = !DILocation(line: 182, column: 1, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6658, file: !146, line: 182, column: 1)
!6668 = !DILocation(line: 182, column: 1, scope: !6658)
!6669 = !DILocation(line: 182, column: 1, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6667, file: !146, line: 182, column: 1)
!6671 = !DILocation(line: 182, column: 1, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6667, file: !146, line: 182, column: 1)
!6673 = !DILocation(line: 0, scope: !6667)
