; ModuleID = 'predict.bc'
source_filename = "predict.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gcov_ctr_summary = type { i32, i32, i64, i64, i64 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.predictor_info = type { i8*, i32, i32 }
%struct.sreal = type { i64, i32 }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_prediction = type { %struct.edge_prediction*, %struct.edge_def*, i32, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.tree_niter_desc = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.double_int, %struct.affine_iv, %union.tree_node*, i32 }
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }
%struct.edge_info_def = type { %struct.sreal, i8 }
%struct.block_info_def = type { %struct.sreal, %struct.basic_block_def*, i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@profile_info = external dso_local local_unnamed_addr global %struct.gcov_ctr_summary*, align 8
@flag_branch_probabilities = external dso_local local_unnamed_addr global i32, align 4
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str = private unnamed_addr constant [5 x i8] c"cold\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"hot\00", align 1
@flag_guess_branch_prob = external dso_local local_unnamed_addr global i32, align 4
@optimize_size = external dso_local local_unnamed_addr global i32, align 4
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@bb_predictions = internal unnamed_addr global %struct.pointer_map_t* null, align 8, !dbg !0
@.str.2 = private unnamed_addr constant [10 x i8] c"predict.c\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@predictor_info = internal unnamed_addr constant [29 x %struct.predictor_info] [%struct.predictor_info { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i32 10000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i32 10000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i32 10000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i32 10000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0), i32 10000, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 10000, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i32 0, i32 0), i32 9996, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 10000, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i32 5000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i32 9996, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i32 9996, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i32 8600, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i32 9100, i32 1 }, %struct.predictor_info { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i32 8500, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i32 0, i32 0), i32 8500, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0), i32 7900, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i32 7100, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32 9000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i32 0, i32 0), i32 7300, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i32 0, i32 0), i32 7200, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0), i32 9000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i32 7100, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 6100, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), i32 7000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0), i32 6700, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i32 9600, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i32 9000, i32 0 }, %struct.predictor_info { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i32 9996, i32 0 }, %struct.predictor_info zeroinitializer], align 16, !dbg !2512
@optimize = external dso_local local_unnamed_addr global i32, align 4
@estimate_bb_frequencies.real_values_initialized = internal unnamed_addr global i1 false, align 4, !dbg !2525
@real_zero = internal global %struct.sreal zeroinitializer, align 8, !dbg !2498
@real_one = internal global %struct.sreal zeroinitializer, align 8, !dbg !2500
@real_br_prob_base = internal global %struct.sreal zeroinitializer, align 8, !dbg !2504
@real_bb_freq_max = internal global %struct.sreal zeroinitializer, align 8, !dbg !2510
@real_one_half = internal global %struct.sreal zeroinitializer, align 8, !dbg !2508
@real_inv_br_prob_base = internal global %struct.sreal zeroinitializer, align 8, !dbg !2506
@real_almost_one = internal global %struct.sreal zeroinitializer, align 8, !dbg !2502
@flag_reorder_functions = external dso_local local_unnamed_addr global i32, align 4
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.4 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@pass_profile = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8 ()* @gate_estimate_probability, i32 ()* @tree_estimate_probability_driver, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 138, i32 8, i32 0, i32 0, i32 0, i32 6 } }, align 8, !dbg !2468
@.str.5 = private unnamed_addr constant [21 x i8] c"*strip_predict_hints\00", align 1
@pass_strip_predict_hints = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i32 0, i32 0), i8 ()* null, i32 ()* @strip_predict_hints, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 138, i32 8, i32 0, i32 0, i32 0, i32 6 } }, align 8, !dbg !2496
@.str.6 = private unnamed_addr constant [9 x i8] c"combined\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"DS theory\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"first match\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"no prediction\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"unconditional jump\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"loop iterations\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"__builtin_expect\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"guessed loop iterations\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"noreturn call\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"cold function call\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"loop branch\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"loop exit\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"pointer\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"pointer (on trees)\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"opcode values positive\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"opcode values nonequal\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"fp_opcode\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"opcode values positive (on trees)\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"opcode values nonequal (on trees)\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"fp_opcode (on trees)\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"early return (on trees)\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"const return\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"negative return\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"null return\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"mudflap check\00", align 1
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.34 = private unnamed_addr constant [31 x i8] c"Predictions for insn %i bb %i\0A\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"  %s heuristics%s: %.1f%%\00", align 1
@.str.36 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.37 = private unnamed_addr constant [11 x i8] c" (ignored)\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"  exec \00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c" hit \00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c" (%.1f%%)\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.43 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"%i edges in bb %i predicted to even probabilities\0A\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"Predictions for bb %i\0A\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.47 = private unnamed_addr constant [49 x i8] c"Irreducible region hit, ignoring edge to %i->%i\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@flag_reorder_blocks_and_partition = external dso_local local_unnamed_addr global i32, align 4
@.str.48 = private unnamed_addr constant [10 x i8] c".text.hot\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c".text.unlikely\00", align 1
@dump_flags = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2530 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2543, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2544, metadata !DIExpression()), !dbg !2545
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2546
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2547
  ret i32 %call, !dbg !2548
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2549 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2553
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2554
  ret i32 %call, !dbg !2555
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2556 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2611, metadata !DIExpression()), !dbg !2612
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2613
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2613
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2613
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2613
  %cmp = icmp uge i8* %0, %1, !dbg !2613
  %conv1 = zext i1 %cmp to i64, !dbg !2613
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2613
  %tobool = icmp eq i64 %expval, 0, !dbg !2613
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2613

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2613
  br label %cond.end, !dbg !2613

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2613
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2613
  %2 = load i8, i8* %0, align 1, !dbg !2613
  %conv3 = zext i8 %2 to i32, !dbg !2613
  br label %cond.end, !dbg !2613

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2613
  ret i32 %cond, !dbg !2614
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2615 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2617, metadata !DIExpression()), !dbg !2618
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2619
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2619
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2619
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2619
  %cmp = icmp uge i8* %0, %1, !dbg !2619
  %conv1 = zext i1 %cmp to i64, !dbg !2619
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2619
  %tobool = icmp eq i64 %expval, 0, !dbg !2619
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2619

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2619
  br label %cond.end, !dbg !2619

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2619
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2619
  %2 = load i8, i8* %0, align 1, !dbg !2619
  %conv3 = zext i8 %2 to i32, !dbg !2619
  br label %cond.end, !dbg !2619

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2619
  ret i32 %cond, !dbg !2620
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2621 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2622
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2622
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2622
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2622
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2622
  %cmp = icmp uge i8* %1, %2, !dbg !2622
  %conv1 = zext i1 %cmp to i64, !dbg !2622
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2622
  %tobool = icmp eq i64 %expval, 0, !dbg !2622
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2622

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2622
  br label %cond.end, !dbg !2622

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2622
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2622
  %3 = load i8, i8* %1, align 1, !dbg !2622
  %conv3 = zext i8 %3 to i32, !dbg !2622
  br label %cond.end, !dbg !2622

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2622
  ret i32 %cond, !dbg !2623
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2624 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2628, metadata !DIExpression()), !dbg !2629
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2630
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2631
  ret i32 %call, !dbg !2632
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2633 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2637, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2638, metadata !DIExpression()), !dbg !2639
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2640
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2640
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2640
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2640
  %cmp = icmp uge i8* %0, %1, !dbg !2640
  %conv1 = zext i1 %cmp to i64, !dbg !2640
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2640
  %tobool = icmp eq i64 %expval, 0, !dbg !2640
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2640

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2640
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2640
  br label %cond.end, !dbg !2640

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2640
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2640
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2640
  store i8 %conv2, i8* %0, align 1, !dbg !2640
  %conv6 = and i32 %__c, 255, !dbg !2640
  br label %cond.end, !dbg !2640

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2640
  ret i32 %cond, !dbg !2641
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2642 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2644, metadata !DIExpression()), !dbg !2646
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2645, metadata !DIExpression()), !dbg !2646
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2647
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2647
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2647
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2647
  %cmp = icmp uge i8* %0, %1, !dbg !2647
  %conv1 = zext i1 %cmp to i64, !dbg !2647
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2647
  %tobool = icmp eq i64 %expval, 0, !dbg !2647
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2647

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2647
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2647
  br label %cond.end, !dbg !2647

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2647
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2647
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2647
  store i8 %conv2, i8* %0, align 1, !dbg !2647
  %conv6 = and i32 %__c, 255, !dbg !2647
  br label %cond.end, !dbg !2647

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2647
  ret i32 %cond, !dbg !2648
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2649 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2651, metadata !DIExpression()), !dbg !2652
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2653
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2653
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2653
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2653
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2653
  %cmp = icmp uge i8* %1, %2, !dbg !2653
  %conv1 = zext i1 %cmp to i64, !dbg !2653
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2653
  %tobool = icmp eq i64 %expval, 0, !dbg !2653
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2653

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2653
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2653
  br label %cond.end, !dbg !2653

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2653
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2653
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2653
  store i8 %conv4, i8* %1, align 1, !dbg !2653
  %conv6 = and i32 %__c, 255, !dbg !2653
  br label %cond.end, !dbg !2653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2653
  ret i32 %cond, !dbg !2654
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2655 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2661, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2662, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2663, metadata !DIExpression()), !dbg !2664
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2665
  ret i64 %call, !dbg !2666
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2667 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2669, metadata !DIExpression()), !dbg !2670
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2671
  %0 = load i32, i32* %_flags, align 8, !dbg !2671
  %and = lshr i32 %0, 4, !dbg !2671
  %and.lobit = and i32 %and, 1, !dbg !2671
  ret i32 %and.lobit, !dbg !2672
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2673 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2675, metadata !DIExpression()), !dbg !2676
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2677
  %0 = load i32, i32* %_flags, align 8, !dbg !2677
  %and = lshr i32 %0, 5, !dbg !2677
  %and.lobit = and i32 %and, 1, !dbg !2677
  ret i32 %and.lobit, !dbg !2678
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2679 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2682, metadata !DIExpression()), !dbg !2683
  %__c.off = add i32 %__c, 128, !dbg !2684
  %0 = icmp ult i32 %__c.off, 384, !dbg !2684
  br i1 %0, label %cond.true, label %cond.end, !dbg !2684

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2685
  %1 = load i32*, i32** %call, align 8, !dbg !2686
  %idxprom = sext i32 %__c to i64, !dbg !2687
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2687
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2687
  br label %cond.end, !dbg !2688

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2688
  ret i32 %cond, !dbg !2689
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2690 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2692, metadata !DIExpression()), !dbg !2693
  %__c.off = add i32 %__c, 128, !dbg !2694
  %0 = icmp ult i32 %__c.off, 384, !dbg !2694
  br i1 %0, label %cond.true, label %cond.end, !dbg !2694

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2695
  %1 = load i32*, i32** %call, align 8, !dbg !2696
  %idxprom = sext i32 %__c to i64, !dbg !2697
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2697
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2697
  br label %cond.end, !dbg !2698

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2698
  ret i32 %cond, !dbg !2699
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2700 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2705, metadata !DIExpression()), !dbg !2706
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2707
  %conv = trunc i64 %call to i32, !dbg !2708
  ret i32 %conv, !dbg !2709
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2710 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2714, metadata !DIExpression()), !dbg !2715
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2716
  ret i64 %call, !dbg !2717
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2718 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2723, metadata !DIExpression()), !dbg !2724
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2725
  ret i64 %call, !dbg !2726
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2727 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2733, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2734, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2735, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2736, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2737, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i64 0, metadata !2738, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2739, metadata !DIExpression()), !dbg !2743
  br label %while.cond, !dbg !2744

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2745
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2743
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2739, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2738, metadata !DIExpression()), !dbg !2743
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2746
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2744

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2747
  %div = lshr i64 %add, 1, !dbg !2749
  call void @llvm.dbg.value(metadata i64 %div, metadata !2740, metadata !DIExpression()), !dbg !2743
  %mul = mul i64 %div, %__size, !dbg !2750
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2751
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2741, metadata !DIExpression()), !dbg !2743
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2752
  call void @llvm.dbg.value(metadata i32 %call, metadata !2742, metadata !DIExpression()), !dbg !2743
  %cmp1 = icmp slt i32 %call, 0, !dbg !2753
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2755

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2756
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2758

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2759
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2738, metadata !DIExpression()), !dbg !2743
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2743
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2743
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2739, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2738, metadata !DIExpression()), !dbg !2743
  br label %while.cond, !dbg !2744, !llvm.loop !2760

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2743
  ret i8* %retval.0, !dbg !2762
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2763 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2768, metadata !DIExpression()), !dbg !2769
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2770
  ret double %call, !dbg !2771
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2772 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2781, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2782, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.value(metadata i32 %base, metadata !2783, metadata !DIExpression()), !dbg !2784
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2785
  ret i64 %call, !dbg !2786
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2787 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2793, metadata !DIExpression()), !dbg !2796
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2794, metadata !DIExpression()), !dbg !2796
  call void @llvm.dbg.value(metadata i32 %base, metadata !2795, metadata !DIExpression()), !dbg !2796
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2797
  ret i64 %call, !dbg !2798
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2799 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2810, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2811, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.value(metadata i32 %base, metadata !2812, metadata !DIExpression()), !dbg !2813
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2814
  ret i64 %call, !dbg !2815
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2816 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2820, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2821, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.value(metadata i32 %base, metadata !2822, metadata !DIExpression()), !dbg !2823
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2824
  ret i64 %call, !dbg !2825
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2826 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2866, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2867, metadata !DIExpression()), !dbg !2868
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2869
  ret i32 %call, !dbg !2870
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2871 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2873, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2874, metadata !DIExpression()), !dbg !2875
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2876
  ret i32 %call, !dbg !2877
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2878 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2882, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2883, metadata !DIExpression()), !dbg !2884
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2885
  ret i32 %call, !dbg !2886
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2887 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2891, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2892, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2893, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2894, metadata !DIExpression()), !dbg !2895
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2896
  ret i32 %call, !dbg !2897
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2898 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2902, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2903, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2904, metadata !DIExpression()), !dbg !2905
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2904, metadata !DIExpression(DW_OP_deref)), !dbg !2905
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2906
  ret i32 %call, !dbg !2907
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2908 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2912, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2913, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2914, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2915, metadata !DIExpression()), !dbg !2916
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2915, metadata !DIExpression(DW_OP_deref)), !dbg !2916
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2917
  ret i32 %call, !dbg !2918
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2919 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2943, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2944, metadata !DIExpression()), !dbg !2945
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2946
  ret i32 %call, !dbg !2947
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2948 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2950, metadata !DIExpression()), !dbg !2952
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2951, metadata !DIExpression()), !dbg !2952
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2953
  ret i32 %call, !dbg !2954
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2955 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2959, metadata !DIExpression()), !dbg !2961
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2960, metadata !DIExpression()), !dbg !2961
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2962
  ret i32 %call, !dbg !2963
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2964 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2968, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2969, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2970, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2971, metadata !DIExpression()), !dbg !2972
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2973
  ret i32 %call, !dbg !2974
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_hot_bb_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !2975 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2982, metadata !DIExpression()), !dbg !2983
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2984
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2984
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2984
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 7, !dbg !2984
  %2 = load i32, i32* %x_profile_status, align 8, !dbg !2984
  %cmp = icmp eq i32 %2, 2, !dbg !2986
  br i1 %cmp, label %if.then, label %if.end, !dbg !2987

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !2988
  %3 = load i64, i64* %count, align 8, !dbg !2988
  %call = tail call fastcc zeroext i8 @maybe_hot_count_p(i64 %3) #7, !dbg !2989
  br label %return, !dbg !2990

if.end:                                           ; preds = %entry
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 11, !dbg !2991
  %4 = load i32, i32* %frequency, align 8, !dbg !2991
  %call1 = tail call fastcc zeroext i8 @maybe_hot_frequency_p(i32 %4) #7, !dbg !2992
  br label %return, !dbg !2993

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ %call, %if.then ], [ %call1, %if.end ], !dbg !2983
  ret i8 %retval.0, !dbg !2994
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @maybe_hot_count_p(i64 %count) unnamed_addr #0 !dbg !2995 {
entry:
  call void @llvm.dbg.value(metadata i64 %count, metadata !2999, metadata !DIExpression()), !dbg !3000
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3001
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3001
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3001
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 7, !dbg !3001
  %2 = load i32, i32* %x_profile_status, align 8, !dbg !3001
  %cmp = icmp eq i32 %2, 2, !dbg !3003
  br i1 %cmp, label %if.end, label %return, !dbg !3004

if.end:                                           ; preds = %entry
  %3 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !3005
  %runs = getelementptr inbounds %struct.gcov_ctr_summary, %struct.gcov_ctr_summary* %3, i64 0, i32 1, !dbg !3007
  %4 = load i32, i32* %runs, align 4, !dbg !3007
  %conv = zext i32 %4 to i64, !dbg !3005
  %cmp1 = icmp slt i64 %conv, %count, !dbg !3008
  br i1 %cmp1, label %if.end4, label %return, !dbg !3009

if.end4:                                          ; preds = %if.end
  %sum_max = getelementptr inbounds %struct.gcov_ctr_summary, %struct.gcov_ctr_summary* %3, i64 0, i32 4, !dbg !3010
  %5 = load i64, i64* %sum_max, align 8, !dbg !3010
  %6 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3011
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %6, i64 42, i32 1, !dbg !3011
  %7 = load i32, i32* %value, align 8, !dbg !3011
  %conv5 = sext i32 %7 to i64, !dbg !3011
  %div = sdiv i64 %5, %conv5, !dbg !3012
  %cmp6 = icmp slt i64 %div, %count, !dbg !3013
  %conv8 = zext i1 %cmp6 to i8, !dbg !3014
  br label %return, !dbg !3015

return:                                           ; preds = %if.end, %entry, %if.end4
  %retval.0 = phi i8 [ %conv8, %if.end4 ], [ 1, %entry ], [ 0, %if.end ], !dbg !3000
  ret i8 %retval.0, !dbg !3016
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @maybe_hot_frequency_p(i32 %freq) unnamed_addr #0 !dbg !3017 {
entry:
  call void @llvm.dbg.value(metadata i32 %freq, metadata !3021, metadata !DIExpression()), !dbg !3022
  %0 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !3023
  %tobool = icmp ne %struct.gcov_ctr_summary* %0, null, !dbg !3023
  %1 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !3025
  %tobool1 = icmp ne i32 %1, 0, !dbg !3025
  %or.cond = and i1 %tobool, %tobool1, !dbg !3026
  br i1 %or.cond, label %entry.if.end11_crit_edge, label %if.then, !dbg !3026

entry.if.end11_crit_edge:                         ; preds = %entry
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3027
  br label %if.end11, !dbg !3026

if.then:                                          ; preds = %entry
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3029
  %function_frequency = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !3032
  %bf.load = load i32, i32* %function_frequency, align 8, !dbg !3032
  %bf.clear = and i32 %bf.load, 196608, !dbg !3032
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !3033
  br i1 %cmp, label %return, label %if.end, !dbg !3034

if.end:                                           ; preds = %if.then
  %cmp8 = icmp eq i32 %bf.clear, 131072, !dbg !3035
  br i1 %cmp8, label %return, label %if.end11, !dbg !3037

if.end11:                                         ; preds = %entry.if.end11_crit_edge, %if.end
  %3 = phi %struct.function* [ %.pre, %entry.if.end11_crit_edge ], [ %2, %if.end ], !dbg !3027
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3027
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3027
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 7, !dbg !3027
  %5 = load i32, i32* %x_profile_status, align 8, !dbg !3027
  %cmp13 = icmp eq i32 %5, 0, !dbg !3038
  br i1 %cmp13, label %return, label %if.end15, !dbg !3039

if.end15:                                         ; preds = %if.end11
  %6 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3040
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %6, i64 43, i32 1, !dbg !3040
  %7 = load i32, i32* %value, align 8, !dbg !3040
  %div = sdiv i32 10000, %7, !dbg !3042
  %cmp16 = icmp sle i32 %div, %freq, !dbg !3043
  %. = zext i1 %cmp16 to i8, !dbg !3022
  br label %return, !dbg !3022

return:                                           ; preds = %if.end15, %if.end11, %if.end, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ 1, %if.end ], [ 1, %if.end11 ], [ %., %if.end15 ], !dbg !3022
  ret i8 %retval.0, !dbg !3044
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @cgraph_maybe_hot_edge_p(%struct.cgraph_edge* %edge) local_unnamed_addr #5 !dbg !3045 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %edge, metadata !3252, metadata !DIExpression()), !dbg !3253
  %0 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !3254
  %tobool = icmp ne %struct.gcov_ctr_summary* %0, null, !dbg !3254
  %1 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !3256
  %tobool1 = icmp ne i32 %1, 0, !dbg !3256
  %or.cond = and i1 %tobool, %tobool1, !dbg !3257
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !3257

land.lhs.true2:                                   ; preds = %entry
  %count = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %edge, i64 0, i32 0, !dbg !3258
  %2 = load i64, i64* %count, align 8, !dbg !3258
  %sum_max = getelementptr inbounds %struct.gcov_ctr_summary, %struct.gcov_ctr_summary* %0, i64 0, i32 4, !dbg !3259
  %3 = load i64, i64* %sum_max, align 8, !dbg !3259
  %4 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3260
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %4, i64 42, i32 1, !dbg !3260
  %5 = load i32, i32* %value, align 8, !dbg !3260
  %conv = sext i32 %5 to i64, !dbg !3260
  %div = sdiv i64 %3, %conv, !dbg !3261
  %cmp = icmp sgt i64 %2, %div, !dbg !3262
  br i1 %cmp, label %if.end, label %return, !dbg !3263

if.end:                                           ; preds = %land.lhs.true2, %entry
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %edge, i64 0, i32 2, !dbg !3264
  %6 = bitcast %struct.cgraph_node** %callee to %struct.tree_decl_common***, !dbg !3264
  %7 = load %struct.tree_decl_common**, %struct.tree_decl_common*** %6, align 8, !dbg !3264
  %8 = load %struct.tree_decl_common*, %struct.tree_decl_common** %7, align 8, !dbg !3264
  %attributes = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %8, i64 0, i32 6, !dbg !3264
  %9 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !3264
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %union.tree_node* %9) #6, !dbg !3266
  %tobool4 = icmp eq %union.tree_node* %call, null, !dbg !3266
  br i1 %tobool4, label %lor.lhs.false, label %return, !dbg !3267

lor.lhs.false:                                    ; preds = %if.end
  %caller = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %edge, i64 0, i32 1, !dbg !3268
  %10 = bitcast %struct.cgraph_node** %caller to %struct.tree_decl_common***, !dbg !3268
  %11 = load %struct.tree_decl_common**, %struct.tree_decl_common*** %10, align 8, !dbg !3268
  %12 = load %struct.tree_decl_common*, %struct.tree_decl_common** %11, align 8, !dbg !3268
  %attributes7 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %12, i64 0, i32 6, !dbg !3268
  %13 = load %union.tree_node*, %union.tree_node** %attributes7, align 8, !dbg !3268
  %call8 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %union.tree_node* %13) #6, !dbg !3269
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !3269
  br i1 %tobool9, label %if.end11, label %return, !dbg !3270

if.end11:                                         ; preds = %lor.lhs.false
  %14 = load %struct.tree_decl_common**, %struct.tree_decl_common*** %10, align 8, !dbg !3271
  %15 = load %struct.tree_decl_common*, %struct.tree_decl_common** %14, align 8, !dbg !3271
  %attributes15 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %15, i64 0, i32 6, !dbg !3271
  %16 = load %union.tree_node*, %union.tree_node** %attributes15, align 8, !dbg !3271
  %call16 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %union.tree_node* %16) #6, !dbg !3273
  %tobool17 = icmp eq %union.tree_node* %call16, null, !dbg !3273
  br i1 %tobool17, label %if.end19, label %return, !dbg !3274

if.end19:                                         ; preds = %if.end11
  %17 = load i32, i32* @flag_guess_branch_prob, align 4, !dbg !3275
  %tobool20 = icmp eq i32 %17, 0, !dbg !3275
  br i1 %tobool20, label %if.end28, label %land.lhs.true21, !dbg !3277

land.lhs.true21:                                  ; preds = %if.end19
  %frequency = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %edge, i64 0, i32 11, !dbg !3278
  %18 = load i32, i32* %frequency, align 8, !dbg !3278
  %19 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3279
  %value23 = getelementptr inbounds %struct.param_info, %struct.param_info* %19, i64 43, i32 1, !dbg !3279
  %20 = load i32, i32* %value23, align 8, !dbg !3279
  %div24 = sdiv i32 1000, %20, !dbg !3280
  %cmp25 = icmp sgt i32 %18, %div24, !dbg !3281
  br i1 %cmp25, label %if.end28, label %return, !dbg !3282

if.end28:                                         ; preds = %land.lhs.true21, %if.end19
  br label %return, !dbg !3283

return:                                           ; preds = %land.lhs.true2, %land.lhs.true21, %if.end11, %lor.lhs.false, %if.end, %if.end28
  %retval.0 = phi i8 [ 1, %if.end28 ], [ 0, %land.lhs.true2 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 1, %if.end11 ], [ 0, %land.lhs.true21 ], !dbg !3253
  ret i8 %retval.0, !dbg !3284
}

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_hot_edge_p(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !3285 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3289, metadata !DIExpression()), !dbg !3290
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3291
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3291
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3291
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 7, !dbg !3291
  %2 = load i32, i32* %x_profile_status, align 8, !dbg !3291
  %cmp = icmp eq i32 %2, 2, !dbg !3293
  br i1 %cmp, label %if.then, label %if.end, !dbg !3294

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 9, !dbg !3295
  %3 = load i64, i64* %count, align 8, !dbg !3295
  %call = tail call fastcc zeroext i8 @maybe_hot_count_p(i64 %3) #7, !dbg !3296
  br label %return, !dbg !3297

if.end:                                           ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3298
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3298
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 11, !dbg !3298
  %5 = load i32, i32* %frequency, align 8, !dbg !3298
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 8, !dbg !3298
  %6 = load i32, i32* %probability, align 4, !dbg !3298
  %mul = mul nsw i32 %5, %6, !dbg !3298
  %add = add nsw i32 %mul, 5000, !dbg !3298
  %div = sdiv i32 %add, 10000, !dbg !3298
  %call1 = tail call fastcc zeroext i8 @maybe_hot_frequency_p(i32 %div) #7, !dbg !3299
  br label %return, !dbg !3300

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ %call, %if.then ], [ %call1, %if.end ], !dbg !3290
  ret i8 %retval.0, !dbg !3301
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @probably_never_executed_bb_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3302 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3304, metadata !DIExpression()), !dbg !3305
  %0 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !3306
  %tobool = icmp ne %struct.gcov_ctr_summary* %0, null, !dbg !3306
  %1 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !3308
  %tobool1 = icmp ne i32 %1, 0, !dbg !3308
  %or.cond = and i1 %tobool, %tobool1, !dbg !3309
  br i1 %or.cond, label %if.then, label %if.end, !dbg !3309

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !3310
  %2 = load i64, i64* %count, align 8, !dbg !3310
  %runs = getelementptr inbounds %struct.gcov_ctr_summary, %struct.gcov_ctr_summary* %0, i64 0, i32 1, !dbg !3311
  %3 = load i32, i32* %runs, align 4, !dbg !3311
  %div = lshr i32 %3, 1, !dbg !3312
  %conv = zext i32 %div to i64, !dbg !3313
  %add = add nsw i64 %2, %conv, !dbg !3314
  %conv3 = zext i32 %3 to i64, !dbg !3315
  %div4 = sdiv i64 %add, %conv3, !dbg !3316
  %cmp = icmp eq i64 %div4, 0, !dbg !3317
  %conv6 = zext i1 %cmp to i8, !dbg !3318
  br label %return, !dbg !3319

if.end:                                           ; preds = %entry
  br i1 false, label %if.end.if.end13_crit_edge, label %land.lhs.true9, !dbg !3320

if.end.if.end13_crit_edge:                        ; preds = %if.end
  br label %if.end13, !dbg !3320

land.lhs.true9:                                   ; preds = %if.end
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3322
  %function_frequency = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 20, !dbg !3323
  %bf.load = load i32, i32* %function_frequency, align 8, !dbg !3323
  %bf.clear = and i32 %bf.load, 196608, !dbg !3323
  %cmp10 = icmp eq i32 %bf.clear, 0, !dbg !3324
  br i1 %cmp10, label %return, label %if.end13, !dbg !3325

if.end13:                                         ; preds = %if.end.if.end13_crit_edge, %land.lhs.true9
  br label %return, !dbg !3326

return:                                           ; preds = %land.lhs.true9, %if.end13, %if.then
  %retval.0 = phi i8 [ %conv6, %if.then ], [ 0, %if.end13 ], [ 1, %land.lhs.true9 ], !dbg !3305
  ret i8 %retval.0, !dbg !3327
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_function_for_size_p(%struct.function* %fun) local_unnamed_addr #5 !dbg !3328 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !3332, metadata !DIExpression()), !dbg !3333
  %0 = load i32, i32* @optimize_size, align 4, !dbg !3334
  %tobool = icmp eq i32 %0, 0, !dbg !3334
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3335

lor.rhs:                                          ; preds = %entry
  %tobool1 = icmp eq %struct.function* %fun, null, !dbg !3336
  br i1 %tobool1, label %lor.end, label %land.rhs, !dbg !3337

land.rhs:                                         ; preds = %lor.rhs
  %function_frequency = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 20, !dbg !3338
  %bf.load = load i32, i32* %function_frequency, align 8, !dbg !3338
  %bf.clear = and i32 %bf.load, 196608, !dbg !3338
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !3339
  %phitmp = zext i1 %cmp to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry, %land.rhs
  %1 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !3340
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function* %fun) local_unnamed_addr #5 !dbg !3341 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !3343, metadata !DIExpression()), !dbg !3344
  %call = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %fun) #7, !dbg !3345
  %tobool = icmp eq i8 %call, 0, !dbg !3346
  %conv = zext i1 %tobool to i8, !dbg !3346
  ret i8 %conv, !dbg !3347
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_bb_for_size_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3348 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3350, metadata !DIExpression()), !dbg !3351
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3352
  %call = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %0) #7, !dbg !3353
  %tobool = icmp eq i8 %call, 0, !dbg !3353
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3354

lor.rhs:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @maybe_hot_bb_p(%struct.basic_block_def* %bb) #7, !dbg !3355
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3356
  %phitmp = zext i1 %tobool2 to i8, !dbg !3354
  br label %lor.end, !dbg !3354

lor.end:                                          ; preds = %entry, %lor.rhs
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !3357
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3358 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3360, metadata !DIExpression()), !dbg !3361
  %call = tail call zeroext i8 @optimize_bb_for_size_p(%struct.basic_block_def* %bb) #7, !dbg !3362
  %tobool = icmp eq i8 %call, 0, !dbg !3363
  %conv = zext i1 %tobool to i8, !dbg !3363
  ret i8 %conv, !dbg !3364
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_edge_for_size_p(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !3365 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3367, metadata !DIExpression()), !dbg !3368
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3369
  %call = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %0) #7, !dbg !3370
  %tobool = icmp eq i8 %call, 0, !dbg !3370
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3371

lor.rhs:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @maybe_hot_edge_p(%struct.edge_def* %e) #7, !dbg !3372
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3373
  %phitmp = zext i1 %tobool2 to i8, !dbg !3371
  br label %lor.end, !dbg !3371

lor.end:                                          ; preds = %entry, %lor.rhs
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !3374
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_edge_for_speed_p(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !3375 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3377, metadata !DIExpression()), !dbg !3378
  %call = tail call zeroext i8 @optimize_edge_for_size_p(%struct.edge_def* %e) #7, !dbg !3379
  %tobool = icmp eq i8 %call, 0, !dbg !3380
  %conv = zext i1 %tobool to i8, !dbg !3380
  ret i8 %conv, !dbg !3381
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_insn_for_size_p() local_unnamed_addr #5 !dbg !3382 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3383
  %call = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %0) #7, !dbg !3384
  %tobool = icmp eq i8 %call, 0, !dbg !3384
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3385

lor.rhs:                                          ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 42), align 2, !dbg !3386
  %tobool1 = icmp eq i8 %1, 0, !dbg !3387
  %phitmp = zext i1 %tobool1 to i8, !dbg !3385
  br label %lor.end, !dbg !3385

lor.end:                                          ; preds = %entry, %lor.rhs
  %2 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %2, !dbg !3388
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_insn_for_speed_p() local_unnamed_addr #5 !dbg !3389 {
entry:
  %call = tail call zeroext i8 @optimize_insn_for_size_p() #7, !dbg !3390
  %tobool = icmp eq i8 %call, 0, !dbg !3391
  %conv = zext i1 %tobool to i8, !dbg !3391
  ret i8 %conv, !dbg !3392
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_loop_for_size_p(%struct.loop* %loop) local_unnamed_addr #5 !dbg !3393 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3397, metadata !DIExpression()), !dbg !3398
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3399
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3399
  %call = tail call zeroext i8 @optimize_bb_for_size_p(%struct.basic_block_def* %0) #7, !dbg !3400
  ret i8 %call, !dbg !3401
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_loop_for_speed_p(%struct.loop* %loop) local_unnamed_addr #5 !dbg !3402 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3404, metadata !DIExpression()), !dbg !3405
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3406
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3406
  %call = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %0) #7, !dbg !3407
  ret i8 %call, !dbg !3408
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_loop_nest_for_speed_p(%struct.loop* %loop) local_unnamed_addr #5 !dbg !3409 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3411, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3412, metadata !DIExpression()), !dbg !3413
  %call = tail call zeroext i8 @optimize_loop_for_speed_p(%struct.loop* %loop) #7, !dbg !3414
  %tobool = icmp eq i8 %call, 0, !dbg !3414
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3416

if.end:                                           ; preds = %entry
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !3417
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3417
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !3412, metadata !DIExpression()), !dbg !3413
  br label %while.cond, !dbg !3418

while.cond:                                       ; preds = %if.end27, %if.end
  %l.0 = phi %struct.loop* [ %0, %if.end ], [ %l.4, %if.end27 ], !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %l.0, metadata !3412, metadata !DIExpression()), !dbg !3413
  %tobool1 = icmp ne %struct.loop* %l.0, null, !dbg !3419
  %cmp = icmp ne %struct.loop* %l.0, %loop, !dbg !3420
  %spec.select = and i1 %cmp, %tobool1, !dbg !3421
  br i1 %spec.select, label %while.body, label %cleanup.loopexit, !dbg !3418

while.body:                                       ; preds = %while.cond
  %call2 = tail call zeroext i8 @optimize_loop_for_speed_p(%struct.loop* nonnull %l.0) #7, !dbg !3422
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3422
  br i1 %tobool3, label %if.end5, label %cleanup.loopexit, !dbg !3425

if.end5:                                          ; preds = %while.body
  %inner6 = getelementptr inbounds %struct.loop, %struct.loop* %l.0, i64 0, i32 8, !dbg !3426
  %1 = load %struct.loop*, %struct.loop** %inner6, align 8, !dbg !3426
  %tobool7 = icmp eq %struct.loop* %1, null, !dbg !3428
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !3429

if.then8:                                         ; preds = %if.end5
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !3412, metadata !DIExpression()), !dbg !3413
  br label %if.end27, !dbg !3430

if.else:                                          ; preds = %if.end5
  %next = getelementptr inbounds %struct.loop, %struct.loop* %l.0, i64 0, i32 9, !dbg !3431
  %2 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !3431
  %tobool10 = icmp eq %struct.loop* %2, null, !dbg !3433
  br i1 %tobool10, label %while.cond14.preheader, label %if.then11, !dbg !3434

while.cond14.preheader:                           ; preds = %if.else
  br label %while.cond14, !dbg !3435

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3412, metadata !DIExpression()), !dbg !3413
  br label %if.end27, !dbg !3437

while.cond14:                                     ; preds = %while.cond14.preheader, %while.body20
  %l.1 = phi %struct.loop* [ %call21, %while.body20 ], [ %l.0, %while.cond14.preheader ], !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %l.1, metadata !3412, metadata !DIExpression()), !dbg !3413
  %cmp15 = icmp eq %struct.loop* %l.1, %loop, !dbg !3438
  br i1 %cmp15, label %while.end, label %land.rhs16, !dbg !3439

land.rhs16:                                       ; preds = %while.cond14
  %next17 = getelementptr inbounds %struct.loop, %struct.loop* %l.1, i64 0, i32 9, !dbg !3440
  %3 = load %struct.loop*, %struct.loop** %next17, align 8, !dbg !3440
  %tobool18 = icmp eq %struct.loop* %3, null, !dbg !3441
  br i1 %tobool18, label %while.body20, label %while.end, !dbg !3435

while.body20:                                     ; preds = %land.rhs16
  %call21 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %l.1) #7, !dbg !3442
  call void @llvm.dbg.value(metadata %struct.loop* %call21, metadata !3412, metadata !DIExpression()), !dbg !3413
  br label %while.cond14, !dbg !3435, !llvm.loop !3443

while.end:                                        ; preds = %while.cond14, %land.rhs16
  %l.1.lcssa = phi %struct.loop* [ %l.1, %while.cond14 ], [ %l.1, %land.rhs16 ], !dbg !3413
  %cmp15.lcssa = phi i1 [ %cmp15, %while.cond14 ], [ %cmp15, %land.rhs16 ], !dbg !3438
  call void @llvm.dbg.value(metadata %struct.loop* %l.1.lcssa, metadata !3412, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %l.1.lcssa, metadata !3412, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %l.1.lcssa, metadata !3412, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %l.1.lcssa, metadata !3412, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %l.1.lcssa, metadata !3412, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata %struct.loop* %l.1.lcssa, metadata !3412, metadata !DIExpression()), !dbg !3413
  br i1 %cmp15.lcssa, label %if.end27, label %if.then23, !dbg !3445

if.then23:                                        ; preds = %while.end
  %next24 = getelementptr inbounds %struct.loop, %struct.loop* %l.1.lcssa, i64 0, i32 9, !dbg !3446
  %4 = load %struct.loop*, %struct.loop** %next24, align 8, !dbg !3446
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !3412, metadata !DIExpression()), !dbg !3413
  br label %if.end27, !dbg !3448

if.end27:                                         ; preds = %while.end, %if.then11, %if.then23, %if.then8
  %l.4 = phi %struct.loop* [ %1, %if.then8 ], [ %2, %if.then11 ], [ %4, %if.then23 ], [ %loop, %while.end ], !dbg !3449
  call void @llvm.dbg.value(metadata %struct.loop* %l.4, metadata !3412, metadata !DIExpression()), !dbg !3413
  br label %while.cond, !dbg !3418, !llvm.loop !3450

cleanup.loopexit:                                 ; preds = %while.cond, %while.body
  %retval.0.ph = phi i8 [ 0, %while.cond ], [ 1, %while.body ]
  br label %cleanup, !dbg !3452

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3413
  ret i8 %retval.0, !dbg !3452
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !3453 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3459, metadata !DIExpression()), !dbg !3461
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !3462
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3462
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !3462
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3462

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !3462
  br label %cond.end, !dbg !3462

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3462
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %call, metadata !3460, metadata !DIExpression()), !dbg !3461
  %cmp = icmp eq i32 %call, 0, !dbg !3463
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3465

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3466
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !3466
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3466

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !3466
  br label %cond.end8, !dbg !3466

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !3466
  %sub = add i32 %call, -1, !dbg !3466
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !3466
  br label %cleanup, !dbg !3467

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !3461
  ret %struct.loop* %retval.0, !dbg !3468
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @optimize_loop_nest_for_size_p(%struct.loop* %loop) local_unnamed_addr #5 !dbg !3469 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3471, metadata !DIExpression()), !dbg !3472
  %call = tail call zeroext i8 @optimize_loop_nest_for_speed_p(%struct.loop* %loop) #7, !dbg !3473
  %tobool = icmp eq i8 %call, 0, !dbg !3474
  %conv = zext i1 %tobool to i8, !dbg !3474
  ret i8 %conv, !dbg !3475
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @predictable_edge_p(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !3476 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3478, metadata !DIExpression()), !dbg !3479
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3480
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3480
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3480
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 7, !dbg !3480
  %2 = load i32, i32* %x_profile_status, align 8, !dbg !3480
  %cmp = icmp eq i32 %2, 0, !dbg !3482
  br i1 %cmp, label %return, label %if.end, !dbg !3483

if.end:                                           ; preds = %entry
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 8, !dbg !3484
  %3 = load i32, i32* %probability, align 4, !dbg !3484
  %4 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3486
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %4, i64 1, i32 1, !dbg !3486
  %5 = load i32, i32* %value, align 8, !dbg !3486
  %div = mul nsw i32 %5, 100, !dbg !3487
  %cmp1 = icmp sgt i32 %3, %div, !dbg !3488
  br i1 %cmp1, label %lor.lhs.false, label %return, !dbg !3489

lor.lhs.false:                                    ; preds = %if.end
  %sub = sub nsw i32 10000, %3, !dbg !3490
  %cmp7 = icmp sle i32 %sub, %div, !dbg !3491
  %spec.select = zext i1 %cmp7 to i8, !dbg !3492
  ret i8 %spec.select, !dbg !3492

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.end ], !dbg !3479
  ret i8 %retval.0, !dbg !3493
}

; Function Attrs: nounwind uwtable
define dso_local void @rtl_profile_for_bb(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3494 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3498, metadata !DIExpression()), !dbg !3499
  %call = tail call zeroext i8 @maybe_hot_bb_p(%struct.basic_block_def* %bb) #7, !dbg !3500
  store i8 %call, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 42), align 2, !dbg !3501
  ret void, !dbg !3502
}

; Function Attrs: nounwind uwtable
define dso_local void @rtl_profile_for_edge(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !3503 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3507, metadata !DIExpression()), !dbg !3508
  %call = tail call zeroext i8 @maybe_hot_edge_p(%struct.edge_def* %e) #7, !dbg !3509
  store i8 %call, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 42), align 2, !dbg !3510
  ret void, !dbg !3511
}

; Function Attrs: nounwind uwtable
define dso_local void @default_rtl_profile() local_unnamed_addr #5 !dbg !3512 {
entry:
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 42), align 2, !dbg !3513
  ret void, !dbg !3514
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @rtl_predicted_by_p(%struct.basic_block_def* %bb, i32 %predictor) local_unnamed_addr #5 !dbg !3515 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3519, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !3520, metadata !DIExpression()), !dbg !3522
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3523
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3523
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3523
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !3523
  %1 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !3523
  %2 = load i32*, i32** %1, align 8, !dbg !3523
  %bf.load = load i32, i32* %2, align 8, !dbg !3523
  %bf.clear = and i32 %bf.load, 65535, !dbg !3523
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3523
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3523

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i32 %bf.clear, 7, !dbg !3523
  br i1 %cmp6, label %if.end, label %lor.lhs.false7, !dbg !3523

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i32 %bf.clear, 9, !dbg !3523
  br i1 %cmp13, label %if.end, label %lor.lhs.false14, !dbg !3523

lor.lhs.false14:                                  ; preds = %lor.lhs.false7
  %cmp20 = icmp eq i32 %bf.clear, 10, !dbg !3523
  br i1 %cmp20, label %if.end, label %cleanup, !dbg !3525

if.end:                                           ; preds = %lor.lhs.false14, %lor.lhs.false7, %lor.lhs.false, %entry
  %3 = getelementptr inbounds i32, i32* %2, i64 16, !dbg !3526
  %4 = bitcast i32* %3 to %union.rtunion_def*, !dbg !3526
  %conv = sext i32 %predictor to i64, !dbg !3528
  br label %for.cond, !dbg !3531

for.cond:                                         ; preds = %for.inc, %if.end
  %note.0.in.in = phi %union.rtunion_def* [ %4, %if.end ], [ %9, %for.inc ]
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !3532
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !3532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3521, metadata !DIExpression()), !dbg !3522
  %tobool = icmp eq %struct.rtx_def* %note.0, null, !dbg !3533
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !3533

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !3534
  %bf.load24 = load i32, i32* %5, align 8, !dbg !3534
  %bf.clear25 = and i32 %bf.load24, 16711680, !dbg !3534
  %cmp26 = icmp eq i32 %bf.clear25, 1048576, !dbg !3535
  br i1 %cmp26, label %land.lhs.true, label %for.inc, !dbg !3536

land.lhs.true:                                    ; preds = %for.body
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3537
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !3537
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !3537
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3537
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !3537
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !3537
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, !dbg !3537
  %arrayidx36 = bitcast %union.u* %u35 to i64*, !dbg !3537
  %8 = load i64, i64* %arrayidx36, align 8, !dbg !3537
  %cmp37 = icmp eq i64 %8, %conv, !dbg !3538
  br i1 %cmp37, label %cleanup.loopexit, label %for.inc, !dbg !3539

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3540
  br label %for.cond, !dbg !3541, !llvm.loop !3542

cleanup.loopexit:                                 ; preds = %land.lhs.true, %for.cond
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %land.lhs.true ]
  br label %cleanup, !dbg !3544

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false14
  %retval.0 = phi i8 [ 0, %lor.lhs.false14 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3522
  ret i8 %retval.0, !dbg !3544
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @gimple_predicted_by_p(%struct.basic_block_def* %bb, i32 %predictor) local_unnamed_addr #5 !dbg !3545 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3547, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !3548, metadata !DIExpression()), !dbg !3551
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !3552
  %1 = bitcast %struct.basic_block_def* %bb to i8*, !dbg !3553
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !3554
  call void @llvm.dbg.value(metadata i8** %call, metadata !3550, metadata !DIExpression()), !dbg !3551
  %tobool = icmp eq i8** %call, null, !dbg !3555
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3557

if.end:                                           ; preds = %entry
  %2 = bitcast i8** %call to %struct.edge_prediction**, !dbg !3558
  br label %for.cond, !dbg !3560

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0.in = phi %struct.edge_prediction** [ %2, %if.end ], [ %ep_next, %for.inc ]
  %i.0 = load %struct.edge_prediction*, %struct.edge_prediction** %i.0.in, align 8, !dbg !3561
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %i.0, metadata !3549, metadata !DIExpression()), !dbg !3551
  %tobool1 = icmp eq %struct.edge_prediction* %i.0, null, !dbg !3562
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !3562

for.body:                                         ; preds = %for.cond
  %ep_predictor = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %i.0, i64 0, i32 2, !dbg !3563
  %3 = load i32, i32* %ep_predictor, align 8, !dbg !3563
  %cmp = icmp eq i32 %3, %predictor, !dbg !3566
  br i1 %cmp, label %cleanup.loopexit, label %for.inc, !dbg !3567

for.inc:                                          ; preds = %for.body
  %ep_next = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %i.0, i64 0, i32 0, !dbg !3568
  br label %for.cond, !dbg !3569, !llvm.loop !3570

cleanup.loopexit:                                 ; preds = %for.body, %for.cond
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !3572

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3551
  ret i8 %retval.0, !dbg !3572
}

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @edge_probability_reliable_p(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !3573 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3580, metadata !DIExpression()), !dbg !3581
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 8, !dbg !3582
  %0 = load i32, i32* %probability, align 4, !dbg !3582
  %call = tail call fastcc zeroext i8 @probability_reliable_p(i32 %0) #7, !dbg !3583
  ret i8 %call, !dbg !3584
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @probability_reliable_p(i32 %prob) unnamed_addr #5 !dbg !3585 {
entry:
  call void @llvm.dbg.value(metadata i32 %prob, metadata !3587, metadata !DIExpression()), !dbg !3588
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3589
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3589
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3589
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 7, !dbg !3589
  %2 = load i32, i32* %x_profile_status, align 8, !dbg !3589
  %cmp = icmp eq i32 %2, 2, !dbg !3590
  br i1 %cmp, label %lor.end8, label %lor.rhs, !dbg !3591

lor.rhs:                                          ; preds = %entry
  %cmp4 = icmp eq i32 %2, 1, !dbg !3592
  br i1 %cmp4, label %land.rhs, label %lor.end8, !dbg !3593

land.rhs:                                         ; preds = %lor.rhs
  %prob.off = add i32 %prob, -101, !dbg !3594
  %3 = icmp ugt i32 %prob.off, 9798, !dbg !3594
  %phitmp = zext i1 %3 to i8
  br label %lor.end8

lor.end8:                                         ; preds = %lor.rhs, %land.rhs, %entry
  %4 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %4, !dbg !3595
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @br_prob_note_reliable_p(%struct.rtx_def* %note) local_unnamed_addr #5 !dbg !3596 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note, metadata !3603, metadata !DIExpression()), !dbg !3604
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note, i64 0, i32 0, !dbg !3605
  %bf.load = load i32, i32* %0, align 8, !dbg !3605
  %bf.clear = and i32 %bf.load, 16711680, !dbg !3605
  %cmp = icmp eq i32 %bf.clear, 851968, !dbg !3605
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3605

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3605
  br label %cond.end, !dbg !3605

cond.end:                                         ; preds = %entry, %cond.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3606
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3606
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3606
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !3606
  %arrayidx2 = bitcast %union.u* %u1 to i64*, !dbg !3606
  %2 = load i64, i64* %arrayidx2, align 8, !dbg !3606
  %conv = trunc i64 %2 to i32, !dbg !3606
  %call = tail call fastcc zeroext i8 @probability_reliable_p(i32 %conv) #7, !dbg !3607
  ret i8 %call, !dbg !3608
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @predict_insn_def(%struct.rtx_def* %insn, i32 %predictor, i32 %taken) local_unnamed_addr #5 !dbg !3609 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3613, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !3614, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %taken, metadata !3615, metadata !DIExpression()), !dbg !3617
  %idxprom = sext i32 %predictor to i64, !dbg !3618
  %hitrate = getelementptr inbounds [29 x %struct.predictor_info], [29 x %struct.predictor_info]* @predictor_info, i64 0, i64 %idxprom, i32 1, !dbg !3619
  %0 = load i32, i32* %hitrate, align 8, !dbg !3619
  call void @llvm.dbg.value(metadata i32 %0, metadata !3616, metadata !DIExpression()), !dbg !3617
  %cmp = icmp eq i32 %taken, 1, !dbg !3620
  %sub = sub nsw i32 10000, %0, !dbg !3622
  %spec.select = select i1 %cmp, i32 %0, i32 %sub, !dbg !3623
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3616, metadata !DIExpression()), !dbg !3617
  tail call fastcc void @predict_insn(%struct.rtx_def* %insn, i32 %predictor, i32 %spec.select) #7, !dbg !3624
  ret void, !dbg !3625
}

; Function Attrs: nounwind uwtable
define internal fastcc void @predict_insn(%struct.rtx_def* %insn, i32 %predictor, i32 %probability) unnamed_addr #5 !dbg !3626 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3630, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !3631, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %probability, metadata !3632, metadata !DIExpression()), !dbg !3633
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %insn) #6, !dbg !3634
  %tobool = icmp eq i32 %call, 0, !dbg !3634
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3634

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 438, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3634
  br label %cond.end, !dbg !3634

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load i32, i32* @flag_guess_branch_prob, align 4, !dbg !3635
  %tobool1 = icmp eq i32 %0, 0, !dbg !3635
  br i1 %tobool1, label %return, label %if.end, !dbg !3637

if.end:                                           ; preds = %cond.end
  %conv = sext i32 %predictor to i64, !dbg !3638
  %call2 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !3638
  %conv3 = sext i32 %probability to i64, !dbg !3638
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv3) #6, !dbg !3638
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %call4) #6, !dbg !3638
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 16, %struct.rtx_def* %call5) #6, !dbg !3639
  br label %return, !dbg !3640

return:                                           ; preds = %cond.end, %if.end
  ret void, !dbg !3640
}

; Function Attrs: nounwind uwtable
define dso_local void @rtl_predict_edge(%struct.edge_def* %e, i32 %predictor, i32 %probability) local_unnamed_addr #5 !dbg !3641 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3645, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !3646, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 %probability, metadata !3647, metadata !DIExpression()), !dbg !3649
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3650
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3650
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !3650
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3650
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3650
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !3650
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3648, metadata !DIExpression()), !dbg !3649
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %2) #6, !dbg !3651
  %tobool = icmp eq i32 %call, 0, !dbg !3651
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !3653

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !3654
  %3 = load i32, i32* %flags, align 8, !dbg !3654
  %and = and i32 %3, 1, !dbg !3656
  %tobool1 = icmp eq i32 %and, 0, !dbg !3656
  %sub = sub nsw i32 10000, %probability, !dbg !3657
  %spec.select = select i1 %tobool1, i32 %probability, i32 %sub, !dbg !3658
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3647, metadata !DIExpression()), !dbg !3649
  tail call fastcc void @predict_insn(%struct.rtx_def* %2, i32 %predictor, i32 %spec.select) #7, !dbg !3659
  br label %cleanup.cont, !dbg !3660

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !3660
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gimple_predict_edge(%struct.edge_def* %e, i32 %predictor, i32 %probability) local_unnamed_addr #5 !dbg !3661 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3663, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !3664, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 %probability, metadata !3665, metadata !DIExpression()), !dbg !3670
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3671
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3671
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3671
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 7, !dbg !3671
  %2 = load i32, i32* %x_profile_status, align 8, !dbg !3671
  %cmp = icmp eq i32 %2, 1, !dbg !3671
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3671

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3671
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3672
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3673
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3672
  br label %cond.end, !dbg !3671

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %cond.true ], !dbg !3672
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3674
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3674
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !3672
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3672
  %cmp3 = icmp eq %struct.basic_block_def* %4, %5, !dbg !3675
  br i1 %cmp3, label %if.end, label %land.lhs.true, !dbg !3676

land.lhs.true:                                    ; preds = %cond.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 1, !dbg !3677
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3677
  %tobool = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !3677
  br i1 %tobool, label %cond.end9, label %cond.true5, !dbg !3677

cond.true5:                                       ; preds = %land.lhs.true
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !3677
  br label %cond.end9, !dbg !3677

cond.end9:                                        ; preds = %land.lhs.true, %cond.true5
  %cond10 = phi %struct.VEC_edge_base* [ %base, %cond.true5 ], [ null, %land.lhs.true ], !dbg !3677
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond10) #7, !dbg !3677
  %cmp11 = icmp ugt i32 %call, 1, !dbg !3678
  %7 = load i32, i32* @flag_guess_branch_prob, align 4, !dbg !3679
  %tobool13 = icmp ne i32 %7, 0, !dbg !3679
  %or.cond = and i1 %cmp11, %tobool13, !dbg !3680
  %8 = load i32, i32* @optimize, align 4, !dbg !3681
  %tobool15 = icmp ne i32 %8, 0, !dbg !3681
  %or.cond1 = and i1 %or.cond, %tobool15, !dbg !3680
  br i1 %or.cond1, label %if.then, label %if.end, !dbg !3680

if.then:                                          ; preds = %cond.end9
  %call16 = tail call i8* @xmalloc(i64 24) #6, !dbg !3682
  call void @llvm.dbg.value(metadata i8* %call16, metadata !3666, metadata !DIExpression()), !dbg !3683
  %9 = load %struct.pointer_map_t*, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !3684
  %10 = bitcast %struct.edge_def* %e to i8**, !dbg !3685
  %11 = load i8*, i8** %10, align 8, !dbg !3685
  %call18 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %9, i8* %11) #6, !dbg !3686
  call void @llvm.dbg.value(metadata i8** %call18, metadata !3669, metadata !DIExpression()), !dbg !3683
  %12 = bitcast i8** %call18 to i64*, !dbg !3687
  %13 = load i64, i64* %12, align 8, !dbg !3687
  %14 = bitcast i8* %call16 to i64*, !dbg !3688
  store i64 %13, i64* %14, align 8, !dbg !3688
  store i8* %call16, i8** %call18, align 8, !dbg !3689
  %ep_probability = getelementptr inbounds i8, i8* %call16, i64 20, !dbg !3690
  %15 = bitcast i8* %ep_probability to i32*, !dbg !3690
  store i32 %probability, i32* %15, align 4, !dbg !3691
  %ep_predictor = getelementptr inbounds i8, i8* %call16, i64 16, !dbg !3692
  %16 = bitcast i8* %ep_predictor to i32*, !dbg !3692
  store i32 %predictor, i32* %16, align 8, !dbg !3693
  %ep_edge = getelementptr inbounds i8, i8* %call16, i64 8, !dbg !3694
  %17 = bitcast i8* %ep_edge to %struct.edge_def**, !dbg !3694
  store %struct.edge_def* %e, %struct.edge_def** %17, align 8, !dbg !3695
  br label %if.end, !dbg !3696

if.end:                                           ; preds = %cond.end, %if.then, %cond.end9
  ret void, !dbg !3697
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !3698 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3704, metadata !DIExpression()), !dbg !3705
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !3706
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3706

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !3706
  %0 = load i32, i32* %num, align 8, !dbg !3706
  br label %cond.end, !dbg !3706

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3706
  ret i32 %cond, !dbg !3706
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @remove_predictions_associated_with_edge(%struct.edge_def* %e) local_unnamed_addr #5 !dbg !3707 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3709, metadata !DIExpression()), !dbg !3715
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !3716
  %tobool = icmp eq %struct.pointer_map_t* %0, null, !dbg !3716
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !3718

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.edge_def* %e to i8**, !dbg !3719
  %2 = load i8*, i8** %1, align 8, !dbg !3719
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* nonnull %0, i8* %2) #6, !dbg !3720
  call void @llvm.dbg.value(metadata i8** %call, metadata !3710, metadata !DIExpression()), !dbg !3715
  %tobool1 = icmp eq i8** %call, null, !dbg !3721
  br i1 %tobool1, label %cleanup.cont, label %if.then2, !dbg !3722

if.then2:                                         ; preds = %if.end
  %3 = bitcast i8** %call to %struct.edge_prediction**, !dbg !3723
  call void @llvm.dbg.value(metadata %struct.edge_prediction** %3, metadata !3711, metadata !DIExpression()), !dbg !3724
  br label %while.cond, !dbg !3725

while.cond:                                       ; preds = %if.end6, %if.then2
  %prediction.0 = phi %struct.edge_prediction** [ %3, %if.then2 ], [ %prediction.1, %if.end6 ], !dbg !3726
  call void @llvm.dbg.value(metadata %struct.edge_prediction** %prediction.0, metadata !3711, metadata !DIExpression()), !dbg !3724
  %4 = load %struct.edge_prediction*, %struct.edge_prediction** %prediction.0, align 8, !dbg !3727
  %tobool3 = icmp eq %struct.edge_prediction* %4, null, !dbg !3725
  %5 = bitcast %struct.edge_prediction* %4 to i8*, !dbg !3725
  br i1 %tobool3, label %cleanup.cont.loopexit, label %while.body, !dbg !3725

while.body:                                       ; preds = %while.cond
  %ep_edge = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %4, i64 0, i32 1, !dbg !3728
  %6 = load %struct.edge_def*, %struct.edge_def** %ep_edge, align 8, !dbg !3728
  %cmp = icmp eq %struct.edge_def* %6, %e, !dbg !3731
  %ep_next = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %4, i64 0, i32 0, !dbg !3732
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !3733

if.then4:                                         ; preds = %while.body
  %7 = bitcast %struct.edge_prediction* %4 to i64*, !dbg !3734
  %8 = load i64, i64* %7, align 8, !dbg !3734
  tail call void @free(i8* nonnull %5) #6, !dbg !3736
  %9 = bitcast %struct.edge_prediction** %prediction.0 to i64*, !dbg !3737
  store i64 %8, i64* %9, align 8, !dbg !3737
  br label %if.end6, !dbg !3738

if.end6:                                          ; preds = %while.body, %if.then4
  %prediction.1 = phi %struct.edge_prediction** [ %prediction.0, %if.then4 ], [ %ep_next, %while.body ], !dbg !3724
  call void @llvm.dbg.value(metadata %struct.edge_prediction** %prediction.1, metadata !3711, metadata !DIExpression()), !dbg !3724
  br label %while.cond, !dbg !3725, !llvm.loop !3739

cleanup.cont.loopexit:                            ; preds = %while.cond
  br label %cleanup.cont, !dbg !3741

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end, %entry
  ret void, !dbg !3741
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @predict_edge_def(%struct.edge_def* %e, i32 %predictor, i32 %taken) local_unnamed_addr #5 !dbg !3742 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3746, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !3747, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata i32 %taken, metadata !3748, metadata !DIExpression()), !dbg !3750
  %idxprom = sext i32 %predictor to i64, !dbg !3751
  %hitrate = getelementptr inbounds [29 x %struct.predictor_info], [29 x %struct.predictor_info]* @predictor_info, i64 0, i64 %idxprom, i32 1, !dbg !3752
  %0 = load i32, i32* %hitrate, align 8, !dbg !3752
  call void @llvm.dbg.value(metadata i32 %0, metadata !3749, metadata !DIExpression()), !dbg !3750
  %cmp = icmp eq i32 %taken, 1, !dbg !3753
  %sub = sub nsw i32 10000, %0, !dbg !3755
  %spec.select = select i1 %cmp, i32 %0, i32 %sub, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3749, metadata !DIExpression()), !dbg !3750
  tail call void @predict_edge(%struct.edge_def* %e, i32 %predictor, i32 %spec.select) #6, !dbg !3757
  ret void, !dbg !3758
}

declare dso_local void @predict_edge(%struct.edge_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @invert_br_probabilities(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3759 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3763, metadata !DIExpression()), !dbg !3765
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3766
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !3766
  br label %for.cond, !dbg !3768

for.cond:                                         ; preds = %for.inc, %entry
  %note.0.in.in = phi %union.rtunion_def* [ %0, %entry ], [ %10, %for.inc ]
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !3769
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !3769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3764, metadata !DIExpression()), !dbg !3765
  %tobool = icmp eq %struct.rtx_def* %note.0, null, !dbg !3770
  br i1 %tobool, label %for.end, label %for.body, !dbg !3770

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !3771
  %bf.load = load i32, i32* %1, align 8, !dbg !3771
  %bf.clear = and i32 %bf.load, 16711680, !dbg !3771
  %cmp = icmp eq i32 %bf.clear, 851968, !dbg !3774
  br i1 %cmp, label %if.then, label %if.else, !dbg !3775

if.then:                                          ; preds = %for.body
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3776
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !3776
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3776
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !3776
  %arrayidx6 = bitcast %union.u* %u5 to i64*, !dbg !3776
  %3 = load i64, i64* %arrayidx6, align 8, !dbg !3776
  %sub = sub nsw i64 10000, %3, !dbg !3776
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #6, !dbg !3776
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3777
  br label %for.inc, !dbg !3778

if.else:                                          ; preds = %for.body
  %cmp14 = icmp eq i32 %bf.clear, 1048576, !dbg !3779
  br i1 %cmp14, label %if.then15, label %for.inc, !dbg !3781

if.then15:                                        ; preds = %if.else
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3782
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !3782
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !3782
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3782
  %rt_rtx23 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !3782
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !3782
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !3782
  %arrayidx26 = bitcast %union.u* %u24 to i64*, !dbg !3782
  %7 = load i64, i64* %arrayidx26, align 8, !dbg !3782
  %sub27 = sub nsw i64 10000, %7, !dbg !3782
  %call28 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub27) #6, !dbg !3782
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !3783
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3783
  %rt_rtx36 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !3783
  store %struct.rtx_def* %call28, %struct.rtx_def** %rt_rtx36, align 8, !dbg !3784
  br label %for.inc, !dbg !3783

for.inc:                                          ; preds = %if.then, %if.then15, %if.else
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3785
  br label %for.cond, !dbg !3786, !llvm.loop !3787

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3789
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @guess_outgoing_edge_probabilities(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3790 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3792, metadata !DIExpression()), !dbg !3793
  tail call fastcc void @bb_estimate_probability_locally(%struct.basic_block_def* %bb) #7, !dbg !3794
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3795
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3795
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3795
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !3795
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3795
  tail call fastcc void @combine_predictions_for_insn(%struct.rtx_def* %1, %struct.basic_block_def* %bb) #7, !dbg !3796
  ret void, !dbg !3797
}

; Function Attrs: nounwind uwtable
define internal fastcc void @bb_estimate_probability_locally(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !3798 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3800, metadata !DIExpression()), !dbg !3803
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3804
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3804
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3804
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !3804
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3804
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3801, metadata !DIExpression()), !dbg !3803
  %call = tail call fastcc zeroext i8 @can_predict_insn_p(%struct.rtx_def* %1) #7, !dbg !3805
  %tobool = icmp eq i8 %call, 0, !dbg !3805
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !3807

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.rtx_def* @get_condition(%struct.rtx_def* %1, %struct.rtx_def** null, i32 0, i32 0) #6, !dbg !3808
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3802, metadata !DIExpression()), !dbg !3803
  %tobool2 = icmp eq %struct.rtx_def* %call1, null, !dbg !3809
  br i1 %tobool2, label %cleanup.cont, label %if.end4, !dbg !3811

if.end4:                                          ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 0, !dbg !3812
  %bf.load = load i32, i32* %2, align 8, !dbg !3812
  %bf.clear = and i32 %bf.load, 65535, !dbg !3812
  %idxprom = zext i32 %bf.clear to i64, !dbg !3812
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3812
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3812
  %cmp = icmp ult i32 %3, 2, !dbg !3812
  br i1 %cmp, label %land.lhs.true, label %if.else44, !dbg !3814

land.lhs.true:                                    ; preds = %if.end4
  %arrayidx5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3815
  %4 = bitcast %union.rtunion_def* %arrayidx5 to i32**, !dbg !3815
  %5 = load i32*, i32** %4, align 8, !dbg !3815
  %bf.load6 = load i32, i32* %5, align 8, !dbg !3815
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !3815
  %cmp8 = icmp eq i32 %bf.clear7, 37, !dbg !3815
  br i1 %cmp8, label %land.lhs.true9, label %lor.lhs.false, !dbg !3816

land.lhs.true9:                                   ; preds = %land.lhs.true
  %bf.clear15 = and i32 %bf.load6, 1073741824, !dbg !3817
  %tobool16 = icmp eq i32 %bf.clear15, 0, !dbg !3817
  br i1 %tobool16, label %lor.lhs.false, label %if.then33, !dbg !3818

lor.lhs.false:                                    ; preds = %land.lhs.true9, %land.lhs.true
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3819
  %7 = bitcast %union.rtunion_def* %6 to i32**, !dbg !3819
  %8 = load i32*, i32** %7, align 8, !dbg !3819
  %bf.load21 = load i32, i32* %8, align 8, !dbg !3819
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !3819
  %cmp23 = icmp eq i32 %bf.clear22, 37, !dbg !3819
  br i1 %cmp23, label %land.lhs.true24, label %if.else44, !dbg !3820

land.lhs.true24:                                  ; preds = %lor.lhs.false
  %bf.clear31 = and i32 %bf.load21, 1073741824, !dbg !3821
  %tobool32 = icmp eq i32 %bf.clear31, 0, !dbg !3821
  br i1 %tobool32, label %if.else44, label %if.then33, !dbg !3822

if.then33:                                        ; preds = %land.lhs.true9, %land.lhs.true24
  %cmp36 = icmp eq i32 %bf.clear, 81, !dbg !3823
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !3826

if.then37:                                        ; preds = %if.then33
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 13, i32 0) #7, !dbg !3827
  br label %cleanup.cont, !dbg !3827

if.else:                                          ; preds = %if.then33
  %cmp40 = icmp eq i32 %bf.clear, 80, !dbg !3828
  br i1 %cmp40, label %if.then41, label %cleanup.cont, !dbg !3830

if.then41:                                        ; preds = %if.else
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 13, i32 1) #7, !dbg !3831
  br label %cleanup.cont, !dbg !3831

if.else44:                                        ; preds = %land.lhs.true24, %lor.lhs.false, %if.end4
  %trunc = trunc i32 %bf.load to i16, !dbg !3832
  switch i16 %trunc, label %cleanup.cont [
    i16 30, label %sw.bb
    i16 81, label %sw.bb49
    i16 92, label %sw.bb49
    i16 80, label %sw.bb119
    i16 97, label %sw.bb119
    i16 91, label %sw.bb190
    i16 90, label %sw.bb191
    i16 84, label %sw.bb192
    i16 85, label %sw.bb192
    i16 82, label %sw.bb215
    i16 83, label %sw.bb215
  ], !dbg !3832

sw.bb:                                            ; preds = %if.else44
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3833
  %cmp47 = icmp ne %struct.rtx_def* %call1, %9, !dbg !3835
  %cond48 = zext i1 %cmp47 to i32, !dbg !3836
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 4, i32 %cond48) #7, !dbg !3837
  br label %cleanup.cont, !dbg !3838

sw.bb49:                                          ; preds = %if.else44, %if.else44
  %arrayidx52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3839
  %10 = bitcast %union.rtunion_def* %arrayidx52 to i32**, !dbg !3839
  %11 = load i32*, i32** %10, align 8, !dbg !3839
  %bf.load54 = load i32, i32* %11, align 8, !dbg !3839
  %bf.lshr55 = lshr i32 %bf.load54, 16, !dbg !3839
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !3839
  %idxprom57 = zext i32 %bf.clear56 to i64, !dbg !3839
  %arrayidx58 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom57, !dbg !3839
  %12 = load i8, i8* %arrayidx58, align 1, !dbg !3839
  %cmp59 = icmp eq i8 %12, 8, !dbg !3839
  %13 = bitcast i32* %11 to %struct.rtx_def*, !dbg !3839
  br i1 %cmp59, label %cleanup.cont, label %lor.lhs.false61, !dbg !3839

lor.lhs.false61:                                  ; preds = %sw.bb49
  %cmp72 = icmp eq i8 %12, 9, !dbg !3839
  br i1 %cmp72, label %cleanup.cont, label %lor.lhs.false74, !dbg !3839

lor.lhs.false74:                                  ; preds = %lor.lhs.false61
  %cmp85 = icmp eq i8 %12, 11, !dbg !3839
  br i1 %cmp85, label %cleanup.cont, label %lor.lhs.false87, !dbg !3839

lor.lhs.false87:                                  ; preds = %lor.lhs.false74
  %cmp98 = icmp eq i8 %12, 17, !dbg !3839
  br i1 %cmp98, label %cleanup.cont, label %if.else101, !dbg !3841

if.else101:                                       ; preds = %lor.lhs.false87
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3842
  %rt_rtx105 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !3842
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx105, align 8, !dbg !3842
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3844
  %cmp106 = icmp eq %struct.rtx_def* %15, %16, !dbg !3845
  br i1 %cmp106, label %cleanup.cont, label %lor.lhs.false108, !dbg !3846

lor.lhs.false108:                                 ; preds = %if.else101
  %cmp113 = icmp eq %struct.rtx_def* %16, %13, !dbg !3847
  br i1 %cmp113, label %cleanup.cont, label %if.else116, !dbg !3848

if.else116:                                       ; preds = %lor.lhs.false108
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 16, i32 0) #7, !dbg !3849
  br label %cleanup.cont

sw.bb119:                                         ; preds = %if.else44, %if.else44
  %arrayidx122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3850
  %17 = bitcast %union.rtunion_def* %arrayidx122 to i32**, !dbg !3850
  %18 = load i32*, i32** %17, align 8, !dbg !3850
  %bf.load124 = load i32, i32* %18, align 8, !dbg !3850
  %bf.lshr125 = lshr i32 %bf.load124, 16, !dbg !3850
  %bf.clear126 = and i32 %bf.lshr125, 255, !dbg !3850
  %idxprom127 = zext i32 %bf.clear126 to i64, !dbg !3850
  %arrayidx128 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom127, !dbg !3850
  %19 = load i8, i8* %arrayidx128, align 1, !dbg !3850
  %cmp130 = icmp eq i8 %19, 8, !dbg !3850
  %20 = bitcast i32* %18 to %struct.rtx_def*, !dbg !3850
  br i1 %cmp130, label %cleanup.cont, label %lor.lhs.false132, !dbg !3850

lor.lhs.false132:                                 ; preds = %sw.bb119
  %cmp143 = icmp eq i8 %19, 9, !dbg !3850
  br i1 %cmp143, label %cleanup.cont, label %lor.lhs.false145, !dbg !3850

lor.lhs.false145:                                 ; preds = %lor.lhs.false132
  %cmp156 = icmp eq i8 %19, 11, !dbg !3850
  br i1 %cmp156, label %cleanup.cont, label %lor.lhs.false158, !dbg !3850

lor.lhs.false158:                                 ; preds = %lor.lhs.false145
  %cmp169 = icmp eq i8 %19, 17, !dbg !3850
  br i1 %cmp169, label %cleanup.cont, label %if.else172, !dbg !3852

if.else172:                                       ; preds = %lor.lhs.false158
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3853
  %rt_rtx176 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !3853
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx176, align 8, !dbg !3853
  %23 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3855
  %cmp177 = icmp eq %struct.rtx_def* %22, %23, !dbg !3856
  br i1 %cmp177, label %cleanup.cont, label %lor.lhs.false179, !dbg !3857

lor.lhs.false179:                                 ; preds = %if.else172
  %cmp184 = icmp eq %struct.rtx_def* %23, %20, !dbg !3858
  br i1 %cmp184, label %cleanup.cont, label %if.else187, !dbg !3859

if.else187:                                       ; preds = %lor.lhs.false179
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 16, i32 1) #7, !dbg !3860
  br label %cleanup.cont

sw.bb190:                                         ; preds = %if.else44
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 17, i32 1) #7, !dbg !3861
  br label %cleanup.cont, !dbg !3862

sw.bb191:                                         ; preds = %if.else44
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 17, i32 0) #7, !dbg !3863
  br label %cleanup.cont, !dbg !3864

sw.bb192:                                         ; preds = %if.else44, %if.else44
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3865
  %rt_rtx196 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !3865
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx196, align 8, !dbg !3865
  %26 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3867
  %cmp197 = icmp eq %struct.rtx_def* %25, %26, !dbg !3868
  br i1 %cmp197, label %if.then213, label %lor.lhs.false199, !dbg !3869

lor.lhs.false199:                                 ; preds = %sw.bb192
  %27 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !3870
  %cmp204 = icmp eq %struct.rtx_def* %25, %27, !dbg !3871
  br i1 %cmp204, label %if.then213, label %lor.lhs.false206, !dbg !3872

lor.lhs.false206:                                 ; preds = %lor.lhs.false199
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !3873
  %cmp211 = icmp eq %struct.rtx_def* %25, %28, !dbg !3874
  br i1 %cmp211, label %if.then213, label %cleanup.cont, !dbg !3875

if.then213:                                       ; preds = %lor.lhs.false206, %lor.lhs.false199, %sw.bb192
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 15, i32 0) #7, !dbg !3876
  br label %cleanup.cont, !dbg !3876

sw.bb215:                                         ; preds = %if.else44, %if.else44
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3877
  %rt_rtx219 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !3877
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx219, align 8, !dbg !3877
  %31 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3879
  %cmp220 = icmp eq %struct.rtx_def* %30, %31, !dbg !3880
  br i1 %cmp220, label %if.then236, label %lor.lhs.false222, !dbg !3881

lor.lhs.false222:                                 ; preds = %sw.bb215
  %32 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !3882
  %cmp227 = icmp eq %struct.rtx_def* %30, %32, !dbg !3883
  br i1 %cmp227, label %if.then236, label %lor.lhs.false229, !dbg !3884

lor.lhs.false229:                                 ; preds = %lor.lhs.false222
  %33 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !3885
  %cmp234 = icmp eq %struct.rtx_def* %30, %33, !dbg !3886
  br i1 %cmp234, label %if.then236, label %cleanup.cont, !dbg !3887

if.then236:                                       ; preds = %lor.lhs.false229, %lor.lhs.false222, %sw.bb215
  tail call void @predict_insn_def(%struct.rtx_def* %1, i32 15, i32 1) #7, !dbg !3888
  br label %cleanup.cont, !dbg !3888

cleanup.cont:                                     ; preds = %if.end, %entry, %sw.bb, %sw.bb190, %sw.bb191, %if.else116, %lor.lhs.false108, %if.else101, %sw.bb49, %lor.lhs.false61, %lor.lhs.false74, %lor.lhs.false87, %if.else187, %lor.lhs.false179, %if.else172, %sw.bb119, %lor.lhs.false132, %lor.lhs.false145, %lor.lhs.false158, %if.then213, %lor.lhs.false206, %if.then236, %lor.lhs.false229, %if.else44, %if.then37, %if.then41, %if.else
  ret void, !dbg !3889
}

; Function Attrs: nounwind uwtable
define internal fastcc void @combine_predictions_for_insn(%struct.rtx_def* %insn, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !3890 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3894, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3895, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 5000, metadata !3900, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 28, metadata !3901, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 5000, metadata !3902, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 0, metadata !3904, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 0, metadata !3905, metadata !DIExpression()), !dbg !3921
  %call = tail call fastcc zeroext i8 @can_predict_insn_p(%struct.rtx_def* %insn) #7, !dbg !3922
  %tobool = icmp eq i8 %call, 0, !dbg !3922
  br i1 %tobool, label %if.then, label %if.end, !dbg !3924

if.then:                                          ; preds = %entry
  tail call fastcc void @set_even_probabilities(%struct.basic_block_def* %bb) #7, !dbg !3925
  br label %cleanup.cont, !dbg !3927

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 13, %struct.rtx_def* null) #6, !dbg !3928
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3896, metadata !DIExpression()), !dbg !3921
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3929
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !3929
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3929
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx, metadata !3897, metadata !DIExpression()), !dbg !3921
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3930
  %tobool2 = icmp eq %struct._IO_FILE* %1, null, !dbg !3930
  br i1 %tobool2, label %if.end8, label %if.then3, !dbg !3932

if.then3:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3933
  %rt_int = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !3933
  %2 = load i32, i32* %rt_int, align 8, !dbg !3933
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3934
  %3 = load i32, i32* %index, align 8, !dbg !3934
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i32 %2, i32 %3) #6, !dbg !3935
  br label %if.end8, !dbg !3935

if.end8:                                          ; preds = %if.end, %if.then3
  br label %for.cond, !dbg !3936

for.cond:                                         ; preds = %for.inc, %if.end8
  %combined_probability.0 = phi i32 [ 5000, %if.end8 ], [ %combined_probability.2, %for.inc ], !dbg !3921
  %best_predictor.0 = phi i32 [ 28, %if.end8 ], [ %best_predictor.2, %for.inc ], !dbg !3921
  %best_probability.0 = phi i32 [ 5000, %if.end8 ], [ %best_probability.2, %for.inc ], !dbg !3921
  %note.0.in.in = phi %union.rtunion_def* [ %0, %if.end8 ], [ %11, %for.inc ]
  %found.0 = phi i8 [ 0, %if.end8 ], [ %found.1, %for.inc ], !dbg !3921
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !3937
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !3937
  call void @llvm.dbg.value(metadata i8 %found.0, metadata !3905, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3899, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_probability.0, metadata !3900, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_predictor.0, metadata !3901, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %combined_probability.0, metadata !3902, metadata !DIExpression()), !dbg !3921
  %tobool13 = icmp eq %struct.rtx_def* %note.0, null, !dbg !3938
  br i1 %tobool13, label %for.end, label %for.body, !dbg !3938

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !3939
  %bf.load = load i32, i32* %4, align 8, !dbg !3939
  %bf.clear = and i32 %bf.load, 16711680, !dbg !3939
  %cmp = icmp eq i32 %bf.clear, 1048576, !dbg !3940
  br i1 %cmp, label %if.then14, label %for.inc, !dbg !3941

if.then14:                                        ; preds = %for.body
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3942
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !3942
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !3942
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3942
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3942
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !3942
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, !dbg !3942
  %arrayidx24 = bitcast %union.u* %u23 to i64*, !dbg !3942
  %7 = load i64, i64* %arrayidx24, align 8, !dbg !3942
  %conv = trunc i64 %7 to i32, !dbg !3943
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3906, metadata !DIExpression()), !dbg !3944
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3945
  %rt_rtx32 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !3945
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !3945
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, !dbg !3945
  %arrayidx35 = bitcast %union.u* %u33 to i64*, !dbg !3945
  %10 = load i64, i64* %arrayidx35, align 8, !dbg !3945
  %conv36 = trunc i64 %10 to i32, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %conv36, metadata !3911, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i8 1, metadata !3905, metadata !DIExpression()), !dbg !3921
  %cmp37 = icmp ugt i32 %best_predictor.0, %conv, !dbg !3946
  %spec.select = select i1 %cmp37, i32 %conv, i32 %best_predictor.0, !dbg !3948
  %spec.select1 = select i1 %cmp37, i32 %conv36, i32 %best_probability.0, !dbg !3948
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !3900, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3901, metadata !DIExpression()), !dbg !3921
  %mul = mul nsw i32 %combined_probability.0, %conv36, !dbg !3949
  %sub = sub nsw i32 10000, %combined_probability.0, !dbg !3950
  %sub41 = sub nsw i32 10000, %conv36, !dbg !3951
  %mul42 = mul nsw i32 %sub, %sub41, !dbg !3952
  %add = add nsw i32 %mul, %mul42, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %add, metadata !3903, metadata !DIExpression()), !dbg !3921
  %cmp43 = icmp eq i32 %add, 0, !dbg !3954
  br i1 %cmp43, label %for.inc, label %if.else, !dbg !3956

if.else:                                          ; preds = %if.then14
  %conv46 = sitofp i32 %combined_probability.0 to double, !dbg !3957
  %conv47 = sitofp i32 %conv36 to double, !dbg !3958
  %mul48 = fmul double %conv46, %conv47, !dbg !3959
  %mul49 = fmul double %mul48, 1.000000e+04, !dbg !3960
  %conv50 = sitofp i32 %add to double, !dbg !3961
  %div = fdiv double %mul49, %conv50, !dbg !3962
  %add51 = fadd double %div, 5.000000e-01, !dbg !3963
  %conv52 = fptosi double %add51 to i32, !dbg !3964
  call void @llvm.dbg.value(metadata i32 %conv52, metadata !3902, metadata !DIExpression()), !dbg !3921
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then14, %if.else
  %combined_probability.2 = phi i32 [ %combined_probability.0, %for.body ], [ %conv52, %if.else ], [ 5000, %if.then14 ], !dbg !3921
  %best_predictor.2 = phi i32 [ %best_predictor.0, %for.body ], [ %spec.select, %if.else ], [ %spec.select, %if.then14 ], !dbg !3921
  %best_probability.2 = phi i32 [ %best_probability.0, %for.body ], [ %spec.select1, %if.else ], [ %spec.select1, %if.then14 ], !dbg !3921
  %found.1 = phi i8 [ %found.0, %for.body ], [ 1, %if.else ], [ 1, %if.then14 ], !dbg !3921
  call void @llvm.dbg.value(metadata i8 %found.1, metadata !3905, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_probability.2, metadata !3900, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_predictor.2, metadata !3901, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %combined_probability.2, metadata !3902, metadata !DIExpression()), !dbg !3921
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3965
  br label %for.cond, !dbg !3966, !llvm.loop !3967

for.end:                                          ; preds = %for.cond
  %combined_probability.0.lcssa = phi i32 [ %combined_probability.0, %for.cond ], !dbg !3921
  %best_predictor.0.lcssa = phi i32 [ %best_predictor.0, %for.cond ], !dbg !3921
  %best_probability.0.lcssa = phi i32 [ %best_probability.0, %for.cond ], !dbg !3921
  %found.0.lcssa = phi i8 [ %found.0, %for.cond ], !dbg !3921
  call void @llvm.dbg.value(metadata i32 %combined_probability.0.lcssa, metadata !3902, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_predictor.0.lcssa, metadata !3901, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_probability.0.lcssa, metadata !3900, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !3905, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %combined_probability.0.lcssa, metadata !3902, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_predictor.0.lcssa, metadata !3901, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_probability.0.lcssa, metadata !3900, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !3905, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %combined_probability.0.lcssa, metadata !3902, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_predictor.0.lcssa, metadata !3901, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i32 %best_probability.0.lcssa, metadata !3900, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !3905, metadata !DIExpression()), !dbg !3921
  %idxprom = zext i32 %best_predictor.0.lcssa to i64, !dbg !3969
  %12 = lshr i64 7920, %idxprom, !dbg !3971
  %13 = trunc i64 %12 to i8, !dbg !3972
  %14 = and i8 %13, 1, !dbg !3972
  call void @llvm.dbg.value(metadata i8 %14, metadata !3904, metadata !DIExpression()), !dbg !3921
  %tobool63 = icmp eq i8 %found.0.lcssa, 0, !dbg !3973
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3975
  br i1 %tobool63, label %if.then64, label %if.else65, !dbg !3976

if.then64:                                        ; preds = %for.end
  tail call fastcc void @dump_prediction(%struct._IO_FILE* %15, i32 3, i32 %combined_probability.0.lcssa, %struct.basic_block_def* %bb, i32 1) #7, !dbg !3977
  %.pre = xor i8 %14, 1, !dbg !3978
  %.pre7 = zext i8 %.pre to i32, !dbg !3978
  br label %if.end68, !dbg !3977

if.else65:                                        ; preds = %for.end
  %16 = xor i8 %14, 1, !dbg !3979
  %17 = zext i8 %16 to i32, !dbg !3979
  tail call fastcc void @dump_prediction(%struct._IO_FILE* %15, i32 1, i32 %combined_probability.0.lcssa, %struct.basic_block_def* %bb, i32 %17) #7, !dbg !3981
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3982
  %conv67 = zext i8 %14 to i32, !dbg !3983
  tail call fastcc void @dump_prediction(%struct._IO_FILE* %18, i32 2, i32 %best_probability.0.lcssa, %struct.basic_block_def* %bb, i32 %conv67) #7, !dbg !3984
  br label %if.end68

if.end68:                                         ; preds = %if.else65, %if.then64
  %.pre-phi8 = phi i32 [ %17, %if.else65 ], [ %.pre7, %if.then64 ], !dbg !3978
  %tobool69 = icmp eq i8 %14, 0, !dbg !3985
  %spec.select3 = select i1 %tobool69, i32 %combined_probability.0.lcssa, i32 %best_probability.0.lcssa, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !3902, metadata !DIExpression()), !dbg !3921
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3988
  tail call fastcc void @dump_prediction(%struct._IO_FILE* %19, i32 0, i32 %spec.select3, %struct.basic_block_def* %bb, i32 1) #7, !dbg !3989
  br label %while.cond, !dbg !3990

while.cond:                                       ; preds = %if.end117, %if.end68
  %pnote.0 = phi %struct.rtx_def** [ %rt_rtx, %if.end68 ], [ %pnote.1, %if.end117 ], !dbg !3991
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pnote.0, metadata !3897, metadata !DIExpression()), !dbg !3921
  %20 = load %struct.rtx_def*, %struct.rtx_def** %pnote.0, align 8, !dbg !3992
  %tobool72 = icmp eq %struct.rtx_def* %20, null, !dbg !3990
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 0, !dbg !3990
  br i1 %tobool72, label %while.end, label %while.body, !dbg !3990

while.body:                                       ; preds = %while.cond
  %bf.load73 = load i32, i32* %21, align 8, !dbg !3993
  %bf.clear75 = and i32 %bf.load73, 16711680, !dbg !3993
  %cmp76 = icmp eq i32 %bf.clear75, 1048576, !dbg !3994
  br i1 %cmp76, label %if.then78, label %if.else112, !dbg !3995

if.then78:                                        ; preds = %while.body
  %u80 = getelementptr inbounds i32, i32* %21, i64 2, !dbg !3996
  %rt_rtx83 = bitcast i32* %u80 to %struct.rtx_def**, !dbg !3997
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !3997
  %arrayidx86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3997
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !3997
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !3997
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, !dbg !3997
  %arrayidx90 = bitcast %union.u* %u88 to i64*, !dbg !3997
  %24 = load i64, i64* %arrayidx90, align 8, !dbg !3997
  %conv91 = trunc i64 %24 to i32, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %conv91, metadata !3912, metadata !DIExpression()), !dbg !3978
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3999
  %rt_rtx100 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !3999
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !3999
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 1, !dbg !3999
  %arrayidx103 = bitcast %union.u* %u101 to i64*, !dbg !3999
  %27 = load i64, i64* %arrayidx103, align 8, !dbg !3999
  %conv104 = trunc i64 %27 to i32, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %conv104, metadata !3916, metadata !DIExpression()), !dbg !3978
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4000
  %cmp106 = icmp eq i32 %best_predictor.0.lcssa, %conv91, !dbg !4001
  %cmp1066 = zext i1 %cmp106 to i32, !dbg !4002
  %lor.ext = or i32 %.pre-phi8, %cmp1066, !dbg !4002
  tail call fastcc void @dump_prediction(%struct._IO_FILE* %28, i32 %conv91, i32 %conv104, %struct.basic_block_def* %bb, i32 %lor.ext) #7, !dbg !4003
  %29 = load %struct.rtx_def*, %struct.rtx_def** %pnote.0, align 8, !dbg !4004
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4004
  %31 = bitcast %union.rtunion_def* %30 to i64*, !dbg !4004
  %32 = load i64, i64* %31, align 8, !dbg !4004
  %33 = bitcast %struct.rtx_def** %pnote.0 to i64*, !dbg !4005
  store i64 %32, i64* %33, align 8, !dbg !4005
  br label %if.end117, !dbg !4006

if.else112:                                       ; preds = %while.body
  %arrayidx115 = getelementptr inbounds i32, i32* %21, i64 4, !dbg !4007
  %rt_rtx116 = bitcast i32* %arrayidx115 to %struct.rtx_def**, !dbg !4007
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx116, metadata !3897, metadata !DIExpression()), !dbg !3921
  br label %if.end117

if.end117:                                        ; preds = %if.else112, %if.then78
  %pnote.1 = phi %struct.rtx_def** [ %pnote.0, %if.then78 ], [ %rt_rtx116, %if.else112 ], !dbg !3921
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pnote.1, metadata !3897, metadata !DIExpression()), !dbg !3921
  br label %while.cond, !dbg !3990, !llvm.loop !4008

while.end:                                        ; preds = %while.cond
  %tobool118 = icmp eq %struct.rtx_def* %call1, null, !dbg !4010
  br i1 %tobool118, label %if.then119, label %if.else191, !dbg !4011

if.then119:                                       ; preds = %while.end
  %conv120 = sext i32 %spec.select3 to i64, !dbg !4012
  %call121 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv120) #6, !dbg !4012
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 13, %struct.rtx_def* %call121) #6, !dbg !4014
  %call122 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !4015
  %tobool123 = icmp eq i8 %call122, 0, !dbg !4015
  br i1 %tobool123, label %if.then124, label %cleanup.cont, !dbg !4017

if.then124:                                       ; preds = %if.then119
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4018
  %34 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4018
  %tobool125 = icmp eq %struct.VEC_edge_gc* %34, null, !dbg !4018
  br i1 %tobool125, label %cond.end, label %cond.true, !dbg !4018

cond.true:                                        ; preds = %if.then124
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %34, i64 0, i32 0, !dbg !4018
  br label %cond.end, !dbg !4018

cond.end:                                         ; preds = %if.then124, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.then124 ], !dbg !4018
  %call127 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !4018
  %flags128 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call127, i64 0, i32 7, !dbg !4018
  %35 = load i32, i32* %flags128, align 8, !dbg !4018
  %and129 = and i32 %35, 1, !dbg !4018
  %tobool130 = icmp eq i32 %and129, 0, !dbg !4018
  %36 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4018
  %tobool133 = icmp ne %struct.VEC_edge_gc* %36, null, !dbg !4018
  br i1 %tobool130, label %cond.false141, label %cond.true131, !dbg !4018

cond.true131:                                     ; preds = %cond.end
  br i1 %tobool133, label %cond.true134, label %cond.end138, !dbg !4018

cond.true134:                                     ; preds = %cond.true131
  %base136 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %36, i64 0, i32 0, !dbg !4018
  br label %cond.end138, !dbg !4018

cond.end138:                                      ; preds = %cond.true131, %cond.true134
  %cond139 = phi %struct.VEC_edge_base* [ %base136, %cond.true134 ], [ null, %cond.true131 ], !dbg !4018
  %call140 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond139, i32 1) #7, !dbg !4018
  br label %cond.end151, !dbg !4018

cond.false141:                                    ; preds = %cond.end
  br i1 %tobool133, label %cond.true144, label %cond.end148, !dbg !4018

cond.true144:                                     ; preds = %cond.false141
  %base146 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %36, i64 0, i32 0, !dbg !4018
  br label %cond.end148, !dbg !4018

cond.end148:                                      ; preds = %cond.false141, %cond.true144
  %cond149 = phi %struct.VEC_edge_base* [ %base146, %cond.true144 ], [ null, %cond.false141 ], !dbg !4018
  %call150 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond149, i32 0) #7, !dbg !4018
  br label %cond.end151, !dbg !4018

cond.end151:                                      ; preds = %cond.end148, %cond.end138
  %cond152 = phi %struct.edge_def* [ %call140, %cond.end138 ], [ %call150, %cond.end148 ], !dbg !4018
  %probability153 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond152, i64 0, i32 8, !dbg !4020
  store i32 %spec.select3, i32* %probability153, align 4, !dbg !4021
  %sub154 = sub nsw i32 10000, %spec.select3, !dbg !4022
  %37 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4023
  %tobool156 = icmp eq %struct.VEC_edge_gc* %37, null, !dbg !4023
  br i1 %tobool156, label %cond.end161, label %cond.true157, !dbg !4023

cond.true157:                                     ; preds = %cond.end151
  %base159 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %37, i64 0, i32 0, !dbg !4023
  br label %cond.end161, !dbg !4023

cond.end161:                                      ; preds = %cond.end151, %cond.true157
  %cond162 = phi %struct.VEC_edge_base* [ %base159, %cond.true157 ], [ null, %cond.end151 ], !dbg !4023
  %call163 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond162, i32 0) #7, !dbg !4023
  %flags164 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call163, i64 0, i32 7, !dbg !4023
  %38 = load i32, i32* %flags164, align 8, !dbg !4023
  %and165 = and i32 %38, 1, !dbg !4023
  %tobool166 = icmp eq i32 %and165, 0, !dbg !4023
  %39 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4023
  %tobool169 = icmp ne %struct.VEC_edge_gc* %39, null, !dbg !4023
  br i1 %tobool166, label %cond.false177, label %cond.true167, !dbg !4023

cond.true167:                                     ; preds = %cond.end161
  br i1 %tobool169, label %cond.true170, label %cond.end174, !dbg !4023

cond.true170:                                     ; preds = %cond.true167
  %base172 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i64 0, i32 0, !dbg !4023
  br label %cond.end174, !dbg !4023

cond.end174:                                      ; preds = %cond.true167, %cond.true170
  %cond175 = phi %struct.VEC_edge_base* [ %base172, %cond.true170 ], [ null, %cond.true167 ], !dbg !4023
  %call176 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond175, i32 0) #7, !dbg !4023
  br label %cond.end187, !dbg !4023

cond.false177:                                    ; preds = %cond.end161
  br i1 %tobool169, label %cond.true180, label %cond.end184, !dbg !4023

cond.true180:                                     ; preds = %cond.false177
  %base182 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i64 0, i32 0, !dbg !4023
  br label %cond.end184, !dbg !4023

cond.end184:                                      ; preds = %cond.false177, %cond.true180
  %cond185 = phi %struct.VEC_edge_base* [ %base182, %cond.true180 ], [ null, %cond.false177 ], !dbg !4023
  %call186 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond185, i32 1) #7, !dbg !4023
  br label %cond.end187, !dbg !4023

cond.end187:                                      ; preds = %cond.end184, %cond.end174
  %cond188 = phi %struct.edge_def* [ %call176, %cond.end174 ], [ %call186, %cond.end184 ], !dbg !4023
  %probability189 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond188, i64 0, i32 8, !dbg !4024
  store i32 %sub154, i32* %probability189, align 4, !dbg !4025
  br label %cleanup.cont, !dbg !4026

if.else191:                                       ; preds = %while.end
  %call192 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !4027
  %tobool193 = icmp eq i8 %call192, 0, !dbg !4027
  br i1 %tobool193, label %if.then194, label %if.else274, !dbg !4028

if.then194:                                       ; preds = %if.else191
  %arrayidx197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4029
  %rt_rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**, !dbg !4029
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !4029
  %u199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 1, !dbg !4029
  %arrayidx201 = bitcast %union.u* %u199 to i64*, !dbg !4029
  %41 = load i64, i64* %arrayidx201, align 8, !dbg !4029
  %conv202 = trunc i64 %41 to i32, !dbg !4029
  call void @llvm.dbg.value(metadata i32 %conv202, metadata !3917, metadata !DIExpression()), !dbg !4030
  %succs203 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4031
  %42 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs203, align 8, !dbg !4031
  %tobool204 = icmp eq %struct.VEC_edge_gc* %42, null, !dbg !4031
  br i1 %tobool204, label %cond.end209, label %cond.true205, !dbg !4031

cond.true205:                                     ; preds = %if.then194
  %base207 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %42, i64 0, i32 0, !dbg !4031
  br label %cond.end209, !dbg !4031

cond.end209:                                      ; preds = %if.then194, %cond.true205
  %cond210 = phi %struct.VEC_edge_base* [ %base207, %cond.true205 ], [ null, %if.then194 ], !dbg !4031
  %call211 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond210, i32 0) #7, !dbg !4031
  %flags212 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call211, i64 0, i32 7, !dbg !4031
  %43 = load i32, i32* %flags212, align 8, !dbg !4031
  %and213 = and i32 %43, 1, !dbg !4031
  %tobool214 = icmp eq i32 %and213, 0, !dbg !4031
  %44 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs203, align 8, !dbg !4031
  %tobool217 = icmp ne %struct.VEC_edge_gc* %44, null, !dbg !4031
  br i1 %tobool214, label %cond.false225, label %cond.true215, !dbg !4031

cond.true215:                                     ; preds = %cond.end209
  br i1 %tobool217, label %cond.true218, label %cond.end222, !dbg !4031

cond.true218:                                     ; preds = %cond.true215
  %base220 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %44, i64 0, i32 0, !dbg !4031
  br label %cond.end222, !dbg !4031

cond.end222:                                      ; preds = %cond.true215, %cond.true218
  %cond223 = phi %struct.VEC_edge_base* [ %base220, %cond.true218 ], [ null, %cond.true215 ], !dbg !4031
  %call224 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond223, i32 1) #7, !dbg !4031
  br label %cond.end235, !dbg !4031

cond.false225:                                    ; preds = %cond.end209
  br i1 %tobool217, label %cond.true228, label %cond.end232, !dbg !4031

cond.true228:                                     ; preds = %cond.false225
  %base230 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %44, i64 0, i32 0, !dbg !4031
  br label %cond.end232, !dbg !4031

cond.end232:                                      ; preds = %cond.false225, %cond.true228
  %cond233 = phi %struct.VEC_edge_base* [ %base230, %cond.true228 ], [ null, %cond.false225 ], !dbg !4031
  %call234 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond233, i32 0) #7, !dbg !4031
  br label %cond.end235, !dbg !4031

cond.end235:                                      ; preds = %cond.end232, %cond.end222
  %cond236 = phi %struct.edge_def* [ %call224, %cond.end222 ], [ %call234, %cond.end232 ], !dbg !4031
  %probability237 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond236, i64 0, i32 8, !dbg !4032
  store i32 %conv202, i32* %probability237, align 4, !dbg !4033
  %sub238 = sub nsw i32 10000, %conv202, !dbg !4034
  %45 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs203, align 8, !dbg !4035
  %tobool240 = icmp eq %struct.VEC_edge_gc* %45, null, !dbg !4035
  br i1 %tobool240, label %cond.end245, label %cond.true241, !dbg !4035

cond.true241:                                     ; preds = %cond.end235
  %base243 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %45, i64 0, i32 0, !dbg !4035
  br label %cond.end245, !dbg !4035

cond.end245:                                      ; preds = %cond.end235, %cond.true241
  %cond246 = phi %struct.VEC_edge_base* [ %base243, %cond.true241 ], [ null, %cond.end235 ], !dbg !4035
  %call247 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond246, i32 0) #7, !dbg !4035
  %flags248 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call247, i64 0, i32 7, !dbg !4035
  %46 = load i32, i32* %flags248, align 8, !dbg !4035
  %and249 = and i32 %46, 1, !dbg !4035
  %tobool250 = icmp eq i32 %and249, 0, !dbg !4035
  %47 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs203, align 8, !dbg !4035
  %tobool253 = icmp ne %struct.VEC_edge_gc* %47, null, !dbg !4035
  br i1 %tobool250, label %cond.false261, label %cond.true251, !dbg !4035

cond.true251:                                     ; preds = %cond.end245
  br i1 %tobool253, label %cond.true254, label %cond.end258, !dbg !4035

cond.true254:                                     ; preds = %cond.true251
  %base256 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %47, i64 0, i32 0, !dbg !4035
  br label %cond.end258, !dbg !4035

cond.end258:                                      ; preds = %cond.true251, %cond.true254
  %cond259 = phi %struct.VEC_edge_base* [ %base256, %cond.true254 ], [ null, %cond.true251 ], !dbg !4035
  %call260 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond259, i32 0) #7, !dbg !4035
  br label %cond.end271, !dbg !4035

cond.false261:                                    ; preds = %cond.end245
  br i1 %tobool253, label %cond.true264, label %cond.end268, !dbg !4035

cond.true264:                                     ; preds = %cond.false261
  %base266 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %47, i64 0, i32 0, !dbg !4035
  br label %cond.end268, !dbg !4035

cond.end268:                                      ; preds = %cond.false261, %cond.true264
  %cond269 = phi %struct.VEC_edge_base* [ %base266, %cond.true264 ], [ null, %cond.false261 ], !dbg !4035
  %call270 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond269, i32 1) #7, !dbg !4035
  br label %cond.end271, !dbg !4035

cond.end271:                                      ; preds = %cond.end268, %cond.end258
  %cond272 = phi %struct.edge_def* [ %call260, %cond.end258 ], [ %call270, %cond.end268 ], !dbg !4035
  %probability273 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond272, i64 0, i32 8, !dbg !4036
  store i32 %sub238, i32* %probability273, align 4, !dbg !4037
  br label %cleanup.cont, !dbg !4038

if.else274:                                       ; preds = %if.else191
  %call275 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !4039
  %probability276 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call275, i64 0, i32 8, !dbg !4040
  store i32 10000, i32* %probability276, align 4, !dbg !4041
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then119, %if.then, %cond.end271, %if.else274, %cond.end187
  ret void, !dbg !4042
}

; Function Attrs: nounwind uwtable
define dso_local void @tree_estimate_probability() local_unnamed_addr #5 !dbg !4043 {
entry:
  tail call void @add_noreturn_fake_exit_edges() #6, !dbg !4046
  tail call void @connect_infinite_loops_to_exit() #6, !dbg !4047
  tail call void @create_preheaders(i32 1) #6, !dbg !4048
  tail call void @calculate_dominance_info(i32 2) #6, !dbg !4049
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !4050
  store %struct.pointer_map_t* %call, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !4051
  tail call fastcc void @tree_bb_level_predictions() #7, !dbg !4052
  tail call void @record_loop_exits() #6, !dbg !4053
  %call1 = tail call fastcc i32 @number_of_loops() #7, !dbg !4054
  %cmp = icmp ugt i32 %call1, 1, !dbg !4056
  br i1 %cmp, label %if.then, label %if.end, !dbg !4057

if.then:                                          ; preds = %entry
  tail call fastcc void @predict_loops() #7, !dbg !4058
  br label %if.end, !dbg !4058

if.end:                                           ; preds = %if.then, %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4059
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4059
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4059
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4059
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4059
  br label %for.cond, !dbg !4059

for.cond:                                         ; preds = %for.body, %if.end
  %3 = phi %struct.control_flow_graph* [ %1, %if.end ], [ %.pre2, %for.body ], !dbg !4061
  %.pn = phi %struct.basic_block_def* [ %2, %if.end ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4063
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4063
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4045, metadata !DIExpression()), !dbg !4064
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !4061
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4061
  %cmp4 = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !4061
  br i1 %cmp4, label %for.end, label %for.body, !dbg !4059

for.body:                                         ; preds = %for.cond
  tail call fastcc void @tree_estimate_probability_bb(%struct.basic_block_def* %bb.0) #7, !dbg !4065
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4061
  %cfg3.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4066
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3.phi.trans.insert, align 8, !dbg !4061
  br label %for.cond, !dbg !4061, !llvm.loop !4067

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.control_flow_graph* [ %3, %for.cond ], !dbg !4061
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %for.cond ], !dbg !4063
  %x_entry_block_ptr8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 0, !dbg !4069
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr8, align 8, !dbg !4069
  br label %for.cond10, !dbg !4069

for.cond10:                                       ; preds = %for.body15, %for.end
  %6 = phi %struct.basic_block_def* [ %bb.0.lcssa, %for.end ], [ %.pre5, %for.body15 ], !dbg !4071
  %.pn1 = phi %struct.basic_block_def* [ %5, %for.end ], [ %bb.1, %for.body15 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !4073
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !4073
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !4045, metadata !DIExpression()), !dbg !4064
  %cmp14 = icmp eq %struct.basic_block_def* %bb.1, %6, !dbg !4071
  br i1 %cmp14, label %for.end18, label %for.body15, !dbg !4069

for.body15:                                       ; preds = %for.cond10
  tail call fastcc void @combine_predictions_for_bb(%struct.basic_block_def* %bb.1) #7, !dbg !4074
  %.pre3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4071
  %cfg12.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre3, i64 0, i32 1, !dbg !4075
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12.phi.trans.insert, align 8, !dbg !4071
  %x_exit_block_ptr13.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre4, i64 0, i32 1, !dbg !4075
  %.pre5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr13.phi.trans.insert, align 8, !dbg !4071
  br label %for.cond10, !dbg !4071, !llvm.loop !4076

for.end18:                                        ; preds = %for.cond10
  %7 = load %struct.pointer_map_t*, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !4078
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %7) #6, !dbg !4079
  store %struct.pointer_map_t* null, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !4080
  tail call void @estimate_bb_frequencies() #7, !dbg !4081
  tail call void @free_dominance_info(i32 2) #6, !dbg !4082
  tail call void @remove_fake_exit_edges() #6, !dbg !4083
  ret void, !dbg !4084
}

declare dso_local void @add_noreturn_fake_exit_edges() local_unnamed_addr #2

declare dso_local void @connect_infinite_loops_to_exit() local_unnamed_addr #2

declare dso_local void @create_preheaders(i32) local_unnamed_addr #2

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @tree_bb_level_predictions() unnamed_addr #5 !dbg !4085 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp10 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !4088, metadata !DIExpression()), !dbg !4106
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !4107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4107
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4108
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4108
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4109
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4109
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4109
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4109
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !4109
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4109
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 0, !dbg !4109
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4109
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4109
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4109
  store i32 %7, i32* %6, align 8, !dbg !4109
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4109
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4109
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !4109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !4109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4109
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4111
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4111
  br label %for.cond, !dbg !4109

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %10, align 8, !dbg !4113
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !4113
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4089, metadata !DIExpression(DW_OP_deref)), !dbg !4106
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %13, %struct.edge_def** nonnull %e) #7, !dbg !4113
  %tobool = icmp eq i8 %call1, 0, !dbg !4109
  br i1 %tobool, label %for.end, label %for.body, !dbg !4109

for.body:                                         ; preds = %for.cond
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4114
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !4089, metadata !DIExpression()), !dbg !4106
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 7, !dbg !4116
  %15 = load i32, i32* %flags, align 8, !dbg !4116
  %and = and i32 %15, 26, !dbg !4117
  %tobool2 = icmp eq i32 %and, 0, !dbg !4117
  br i1 %tobool2, label %for.end, label %for.inc, !dbg !4118

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4090, metadata !DIExpression(DW_OP_deref)), !dbg !4106
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4113
  br label %for.cond, !dbg !4113, !llvm.loop !4119

for.end:                                          ; preds = %for.body, %for.cond
  %has_return_edges.0 = phi i1 [ false, %for.cond ], [ true, %for.body ]
  call fastcc void @apply_return_prediction() #7, !dbg !4121
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4122
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 1, !dbg !4122
  %17 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !4122
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 0, !dbg !4122
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4122
  %19 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4123
  %20 = bitcast %struct.gimple_stmt_iterator* %tmp10 to i8*, !dbg !4124
  br label %for.cond5, !dbg !4122

for.cond5:                                        ; preds = %for.end41, %for.end
  %21 = phi %struct.control_flow_graph* [ %17, %for.end ], [ %.pre1, %for.end41 ], !dbg !4125
  %.pn = phi %struct.basic_block_def* [ %18, %for.end ], [ %bb.0, %for.end41 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4126
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4126
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4087, metadata !DIExpression()), !dbg !4106
  %x_exit_block_ptr8 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 1, !dbg !4125
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr8, align 8, !dbg !4125
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %22, !dbg !4125
  br i1 %cmp, label %for.end44, label %for.body9, !dbg !4122

for.body9:                                        ; preds = %for.cond5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8, !dbg !4127
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8, !dbg !4128
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp10, %struct.basic_block_def* %bb.0) #7, !dbg !4128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %20, i64 24, i1 false), !dbg !4128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8, !dbg !4128
  br i1 %has_return_edges.0, label %for.body9.split.us, label %for.body9.for.body9.split_crit_edge, !dbg !4129

for.body9.for.body9.split_crit_edge:              ; preds = %for.body9
  br label %for.cond11, !dbg !4129

for.body9.split.us:                               ; preds = %for.body9
  br label %for.cond11.us, !dbg !4129

for.cond11.us:                                    ; preds = %for.inc40.us, %for.body9.split.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4123
  %call12.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4130
  %tobool13.us = icmp eq i8 %call12.us, 0, !dbg !4131
  br i1 %tobool13.us, label %for.body14.us, label %for.end41.us-lcssa.us, !dbg !4132

for.body14.us:                                    ; preds = %for.cond11.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4123
  %call15.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4133
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15.us, metadata !4101, metadata !DIExpression()), !dbg !4134
  %call16.us = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call15.us) #7, !dbg !4135
  %tobool17.us = icmp eq i8 %call16.us, 0, !dbg !4135
  br i1 %tobool17.us, label %if.else.us, label %if.then18.us, !dbg !4137

if.then18.us:                                     ; preds = %for.body14.us
  %call19.us = call i32 @gimple_call_flags(%union.gimple_statement_d* %call15.us) #6, !dbg !4138
  %and20.us = and i32 %call19.us, 8, !dbg !4141
  %tobool21.us = icmp eq i32 %and20.us, 0, !dbg !4141
  br i1 %tobool21.us, label %if.end24.us, label %if.then23.us, !dbg !4142

if.then23.us:                                     ; preds = %if.then18.us
  call fastcc void @predict_paths_leading_to(%struct.basic_block_def* %bb.0, i32 9, i32 0) #7, !dbg !4143
  br label %if.end24.us, !dbg !4143

if.end24.us:                                      ; preds = %if.then18.us, %if.then23.us
  %call25.us = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call15.us) #7, !dbg !4144
  call void @llvm.dbg.value(metadata %union.tree_node* %call25.us, metadata !4105, metadata !DIExpression()), !dbg !4134
  %tobool26.us = icmp eq %union.tree_node* %call25.us, null, !dbg !4145
  br i1 %tobool26.us, label %for.inc40.us, label %land.lhs.true27.us, !dbg !4147

land.lhs.true27.us:                               ; preds = %if.end24.us
  %attributes.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call25.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4148
  %23 = load %union.tree_node*, %union.tree_node** %attributes.us, align 8, !dbg !4148
  %call28.us = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %union.tree_node* %23) #6, !dbg !4149
  %tobool29.us = icmp eq %union.tree_node* %call28.us, null, !dbg !4149
  br i1 %tobool29.us, label %for.inc40.us, label %if.then30.us, !dbg !4150

if.then30.us:                                     ; preds = %land.lhs.true27.us
  call fastcc void @predict_paths_leading_to(%struct.basic_block_def* %bb.0, i32 10, i32 0) #7, !dbg !4151
  br label %for.inc40.us, !dbg !4151

if.else.us:                                       ; preds = %for.body14.us
  %call32.us = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call15.us) #7, !dbg !4152
  %cmp33.us = icmp eq i32 %call32.us, 33, !dbg !4154
  br i1 %cmp33.us, label %if.then35.us, label %for.inc40.us, !dbg !4155

if.then35.us:                                     ; preds = %if.else.us
  %call36.us = call fastcc i32 @gimple_predict_predictor(%union.gimple_statement_d* %call15.us) #7, !dbg !4156
  %call37.us = call fastcc i32 @gimple_predict_outcome(%union.gimple_statement_d* %call15.us) #7, !dbg !4158
  call fastcc void @predict_paths_leading_to(%struct.basic_block_def* %bb.0, i32 %call36.us, i32 %call37.us) #7, !dbg !4159
  br label %for.inc40.us, !dbg !4160

for.inc40.us:                                     ; preds = %if.then35.us, %if.else.us, %if.then30.us, %land.lhs.true27.us, %if.end24.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4123
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4161
  br label %for.cond11.us, !dbg !4162, !llvm.loop !4163

for.end41.us-lcssa.us:                            ; preds = %for.cond11.us
  br label %for.end41, !dbg !4165

for.cond11:                                       ; preds = %for.inc40, %for.body9.for.body9.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4123
  %call12 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4130
  %tobool13 = icmp eq i8 %call12, 0, !dbg !4131
  br i1 %tobool13, label %for.body14, label %for.end41.us-lcssa, !dbg !4132

for.body14:                                       ; preds = %for.cond11
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4123
  %call15 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4133
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15, metadata !4101, metadata !DIExpression()), !dbg !4134
  %call16 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call15) #7, !dbg !4135
  %tobool17 = icmp eq i8 %call16, 0, !dbg !4135
  br i1 %tobool17, label %if.else, label %if.then18, !dbg !4137

if.then18:                                        ; preds = %for.body14
  %call19 = call i32 @gimple_call_flags(%union.gimple_statement_d* %call15) #6, !dbg !4138
  %call25 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call15) #7, !dbg !4144
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !4105, metadata !DIExpression()), !dbg !4134
  %tobool26 = icmp eq %union.tree_node* %call25, null, !dbg !4145
  br i1 %tobool26, label %for.inc40, label %land.lhs.true27, !dbg !4147

land.lhs.true27:                                  ; preds = %if.then18
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4148
  %24 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !4148
  %call28 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %union.tree_node* %24) #6, !dbg !4149
  %tobool29 = icmp eq %union.tree_node* %call28, null, !dbg !4149
  br i1 %tobool29, label %for.inc40, label %if.then30, !dbg !4150

if.then30:                                        ; preds = %land.lhs.true27
  call fastcc void @predict_paths_leading_to(%struct.basic_block_def* %bb.0, i32 10, i32 0) #7, !dbg !4151
  br label %for.inc40, !dbg !4151

if.else:                                          ; preds = %for.body14
  %call32 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call15) #7, !dbg !4152
  %cmp33 = icmp eq i32 %call32, 33, !dbg !4154
  br i1 %cmp33, label %if.then35, label %for.inc40, !dbg !4155

if.then35:                                        ; preds = %if.else
  %call36 = call fastcc i32 @gimple_predict_predictor(%union.gimple_statement_d* %call15) #7, !dbg !4156
  %call37 = call fastcc i32 @gimple_predict_outcome(%union.gimple_statement_d* %call15) #7, !dbg !4158
  call fastcc void @predict_paths_leading_to(%struct.basic_block_def* %bb.0, i32 %call36, i32 %call37) #7, !dbg !4159
  br label %for.inc40, !dbg !4160

for.inc40:                                        ; preds = %land.lhs.true27, %if.then18, %if.then30, %if.then35, %if.else
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4091, metadata !DIExpression(DW_OP_deref)), !dbg !4123
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4161
  br label %for.cond11, !dbg !4162, !llvm.loop !4163

for.end41.us-lcssa:                               ; preds = %for.cond11
  br label %for.end41, !dbg !4165

for.end41:                                        ; preds = %for.end41.us-lcssa.us, %for.end41.us-lcssa
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8, !dbg !4165
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4125
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4166
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !4125
  br label %for.cond5, !dbg !4125, !llvm.loop !4167

for.end44:                                        ; preds = %for.cond5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4169
  ret void, !dbg !4169
}

declare dso_local void @record_loop_exits() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !4170 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4171
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4171
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4171
  %tobool = icmp eq %struct.loops* %1, null, !dbg !4171
  br i1 %tobool, label %return, label %if.end, !dbg !4173

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !4174
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !4174
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !4174
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !4174

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !4174
  br label %cond.end, !dbg !4174

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !4174
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !4174
  br label %return, !dbg !4175

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !4176
  ret i32 %retval.0, !dbg !4177
}

; Function Attrs: nounwind uwtable
define internal fastcc void @predict_loops() unnamed_addr #5 !dbg !4178 {
entry:
  %li = alloca %struct.loop_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  %exits = alloca %struct.VEC_edge_heap*, align 8
  %niter_desc = alloca %struct.tree_niter_desc, align 8
  %ex = alloca %struct.edge_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !4235
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4235
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !4236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4236
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !4180, metadata !DIExpression(DW_OP_deref)), !dbg !4237
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4186, metadata !DIExpression(DW_OP_deref)), !dbg !4237
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !4238
  %2 = bitcast %struct.VEC_edge_heap** %exits to i8*, !dbg !4239
  %3 = bitcast %struct.tree_niter_desc* %niter_desc to i8*, !dbg !4239
  %4 = bitcast %struct.edge_def** %ex to i8*, !dbg !4239
  %niter15 = getelementptr inbounds %struct.tree_niter_desc, %struct.tree_niter_desc* %niter_desc, i64 0, i32 2, !dbg !4240
  %5 = bitcast %struct.edge_def** %e to i8*, !dbg !4241
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4241
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4242
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4242
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4242
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4244
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4244
  br label %for.cond, !dbg !4238

for.cond:                                         ; preds = %for.end119, %entry
  %12 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4246
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !4186, metadata !DIExpression()), !dbg !4237
  %tobool = icmp eq %struct.loop* %12, null, !dbg !4238
  br i1 %tobool, label %for.end121, label %for.body, !dbg !4238

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4247
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #8, !dbg !4248
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4249
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !4186, metadata !DIExpression()), !dbg !4237
  %call = call %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop* nonnull %12) #6, !dbg !4250
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call, metadata !4195, metadata !DIExpression()), !dbg !4239
  store %struct.VEC_edge_heap* %call, %struct.VEC_edge_heap** %exits, align 8, !dbg !4251
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call, metadata !4195, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call, metadata !4195, metadata !DIExpression()), !dbg !4239
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %call, i64 0, i32 0, !dbg !4252
  %call2 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %base) #7, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %call2, metadata !4194, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32 0, metadata !4193, metadata !DIExpression()), !dbg !4239
  %cmp38 = icmp eq i32 %call2, 1, !dbg !4253
  br i1 %cmp38, label %for.body.split.us, label %for.body.for.body.split_crit_edge, !dbg !4256

for.body.for.body.split_crit_edge:                ; preds = %for.body
  br label %for.cond3, !dbg !4256

for.body.split.us:                                ; preds = %for.body
  br label %for.cond3.us, !dbg !4256

for.cond3.us:                                     ; preds = %cleanup.us, %for.body.split.us
  %j.0.us = phi i32 [ 0, %for.body.split.us ], [ %inc.us, %cleanup.us ], !dbg !4257
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !4193, metadata !DIExpression()), !dbg !4239
  %13 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %13, metadata !4195, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %13, metadata !4195, metadata !DIExpression()), !dbg !4239
  %base6.us = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %13, i64 0, i32 0, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.edge_def** %ex, metadata !4217, metadata !DIExpression(DW_OP_deref)), !dbg !4239
  %call10.us = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base6.us, i32 %j.0.us, %struct.edge_def** nonnull %ex) #7, !dbg !4258
  %tobool11.us = icmp eq i32 %call10.us, 0, !dbg !4259
  br i1 %tobool11.us, label %for.end.us-lcssa.us, label %for.body12.us, !dbg !4259

for.body12.us:                                    ; preds = %for.cond3.us
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4218, metadata !DIExpression()), !dbg !4240
  %14 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4260
  %value.us = getelementptr inbounds %struct.param_info, %struct.param_info* %14, i64 46, i32 1, !dbg !4260
  %15 = load i32, i32* %value.us, align 8, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %15, metadata !4223, metadata !DIExpression()), !dbg !4240
  %16 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4261
  call void @llvm.dbg.value(metadata %struct.loop* %16, metadata !4186, metadata !DIExpression()), !dbg !4237
  %17 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !4263
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !4217, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %niter_desc, metadata !4201, metadata !DIExpression(DW_OP_deref)), !dbg !4239
  %call13.us = call zeroext i8 @number_of_iterations_exit(%struct.loop* %16, %struct.edge_def* %17, %struct.tree_niter_desc* nonnull %niter_desc, i8 zeroext 0) #6, !dbg !4264
  %tobool14.us = icmp eq i8 %call13.us, 0, !dbg !4264
  %18 = load %union.tree_node*, %union.tree_node** %niter15, align 8, !dbg !4265
  %niter.0.us = select i1 %tobool14.us, %union.tree_node* null, %union.tree_node* %18, !dbg !4265
  call void @llvm.dbg.value(metadata %union.tree_node* %niter.0.us, metadata !4218, metadata !DIExpression()), !dbg !4240
  %tobool16.us = icmp eq %union.tree_node* %niter.0.us, null, !dbg !4266
  br i1 %tobool16.us, label %if.then19.us, label %lor.lhs.false.us, !dbg !4268

lor.lhs.false.us:                                 ; preds = %for.body12.us
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4268
  %bf.load.us = load i64, i64* %19, align 8, !dbg !4269
  %bf.cast4.us = and i64 %bf.load.us, 65535, !dbg !4270
  %cmp.us = icmp eq i64 %bf.cast4.us, 23, !dbg !4270
  br i1 %cmp.us, label %if.end21.us, label %if.then19.us, !dbg !4271

if.then19.us:                                     ; preds = %lor.lhs.false.us, %for.body12.us
  %20 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4272
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !4186, metadata !DIExpression()), !dbg !4237
  %21 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !4273
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !4217, metadata !DIExpression()), !dbg !4239
  %call20.us = call %union.tree_node* @loop_niter_by_eval(%struct.loop* %20, %struct.edge_def* %21) #6, !dbg !4274
  call void @llvm.dbg.value(metadata %union.tree_node* %call20.us, metadata !4218, metadata !DIExpression()), !dbg !4240
  br label %if.end21.us, !dbg !4275

if.end21.us:                                      ; preds = %if.then19.us, %lor.lhs.false.us
  %niter.1.us = phi %union.tree_node* [ %call20.us, %if.then19.us ], [ %niter.0.us, %lor.lhs.false.us ], !dbg !4240
  call void @llvm.dbg.value(metadata %union.tree_node* %niter.1.us, metadata !4218, metadata !DIExpression()), !dbg !4240
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %niter.1.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4276
  %bf.load23.us = load i64, i64* %22, align 8, !dbg !4276
  %bf.cast253.us = and i64 %bf.load23.us, 65535, !dbg !4277
  %cmp26.us = icmp eq i64 %bf.cast253.us, 23, !dbg !4277
  br i1 %cmp26.us, label %if.then27.us, label %if.else37.us, !dbg !4278

if.else37.us:                                     ; preds = %if.end21.us
  %23 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4279
  call void @llvm.dbg.value(metadata %struct.loop* %23, metadata !4186, metadata !DIExpression()), !dbg !4237
  %call41.us = call i64 @estimated_loop_iterations_int(%struct.loop* %23, i8 zeroext 0) #6, !dbg !4281
  call void @llvm.dbg.value(metadata i64 %call41.us, metadata !4222, metadata !DIExpression()), !dbg !4240
  %cmp42.us = icmp slt i64 %call41.us, 0, !dbg !4282
  br i1 %cmp42.us, label %cleanup.us, label %if.end45.us, !dbg !4284

if.end45.us:                                      ; preds = %if.else37.us
  %conv46.us = sext i32 %15 to i64, !dbg !4285
  %cmp47.us = icmp sgt i64 %call41.us, %conv46.us, !dbg !4287
  %spec.select.us = select i1 %cmp47.us, i64 %conv46.us, i64 %call41.us, !dbg !4288
  call void @llvm.dbg.value(metadata i64 %spec.select.us, metadata !4222, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i32 7, metadata !4225, metadata !DIExpression()), !dbg !4240
  br label %if.end54.us

if.then27.us:                                     ; preds = %if.end21.us
  %call28.us = call i32 @host_integerp(%union.tree_node* %niter.1.us, i32 1) #6, !dbg !4289
  %tobool29.us = icmp eq i32 %call28.us, 0, !dbg !4289
  br i1 %tobool29.us, label %if.else.us, label %land.lhs.true.us, !dbg !4292

land.lhs.true.us:                                 ; preds = %if.then27.us
  %sub.us = add nsw i32 %15, -1, !dbg !4293
  %conv.us = sext i32 %sub.us to i64, !dbg !4294
  %call30.us = call i32 @compare_tree_int(%union.tree_node* %niter.1.us, i64 %conv.us) #6, !dbg !4295
  %cmp31.us = icmp eq i32 %call30.us, -1, !dbg !4296
  br i1 %cmp31.us, label %if.then33.us, label %if.else.us, !dbg !4297

if.then33.us:                                     ; preds = %land.lhs.true.us
  %call34.us = call i64 @tree_low_cst(%union.tree_node* %niter.1.us, i32 1) #6, !dbg !4298
  %add.us = add nsw i64 %call34.us, 1, !dbg !4299
  call void @llvm.dbg.value(metadata i64 %add.us, metadata !4222, metadata !DIExpression()), !dbg !4240
  br label %if.end54.us, !dbg !4300

if.else.us:                                       ; preds = %land.lhs.true.us, %if.then27.us
  %conv35.us = sext i32 %15 to i64, !dbg !4301
  call void @llvm.dbg.value(metadata i64 %conv35.us, metadata !4222, metadata !DIExpression()), !dbg !4240
  br label %if.end54.us

if.end54.us:                                      ; preds = %if.else.us, %if.then33.us, %if.end45.us
  %predictor.0.us = phi i32 [ 7, %if.end45.us ], [ 5, %if.else.us ], [ 5, %if.then33.us ], !dbg !4302
  %nitercst.2.us = phi i64 [ %spec.select.us, %if.end45.us ], [ %conv35.us, %if.else.us ], [ %add.us, %if.then33.us ], !dbg !4302
  call void @llvm.dbg.value(metadata i64 %nitercst.2.us, metadata !4222, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i32 %predictor.0.us, metadata !4225, metadata !DIExpression()), !dbg !4240
  %div.us = sdiv i64 %nitercst.2.us, 2, !dbg !4303
  %add55.us = add nsw i64 %div.us, 10000, !dbg !4304
  %div56.us = sdiv i64 %add55.us, %nitercst.2.us, !dbg !4305
  %conv57.us = trunc i64 %div56.us to i32, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %conv57.us, metadata !4224, metadata !DIExpression()), !dbg !4240
  %24 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !4307
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !4217, metadata !DIExpression()), !dbg !4239
  call void @predict_edge(%struct.edge_def* %24, i32 %predictor.0.us, i32 %conv57.us) #6, !dbg !4308
  br label %cleanup.us, !dbg !4309

cleanup.us:                                       ; preds = %if.end54.us, %if.else37.us
  %inc.us = add i32 %j.0.us, 1, !dbg !4310
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !4193, metadata !DIExpression()), !dbg !4239
  br label %for.cond3.us, !dbg !4311, !llvm.loop !4312

for.end.us-lcssa.us:                              ; preds = %for.cond3.us
  br label %for.end, !dbg !4314

for.cond3:                                        ; preds = %cleanup, %for.body.for.body.split_crit_edge
  %j.0 = phi i32 [ 0, %for.body.for.body.split_crit_edge ], [ %inc, %cleanup ], !dbg !4257
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4193, metadata !DIExpression()), !dbg !4239
  %25 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %25, metadata !4195, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %25, metadata !4195, metadata !DIExpression()), !dbg !4239
  %base6 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %25, i64 0, i32 0, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.edge_def** %ex, metadata !4217, metadata !DIExpression(DW_OP_deref)), !dbg !4239
  %call10 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base6, i32 %j.0, %struct.edge_def** nonnull %ex) #7, !dbg !4258
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4259
  br i1 %tobool11, label %for.end.us-lcssa, label %for.body12, !dbg !4259

for.body12:                                       ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4218, metadata !DIExpression()), !dbg !4240
  %26 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4260
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %26, i64 46, i32 1, !dbg !4260
  %27 = load i32, i32* %value, align 8, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %27, metadata !4223, metadata !DIExpression()), !dbg !4240
  %28 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4261
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !4186, metadata !DIExpression()), !dbg !4237
  %29 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !4263
  call void @llvm.dbg.value(metadata %struct.edge_def* %29, metadata !4217, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %niter_desc, metadata !4201, metadata !DIExpression(DW_OP_deref)), !dbg !4239
  %call13 = call zeroext i8 @number_of_iterations_exit(%struct.loop* %28, %struct.edge_def* %29, %struct.tree_niter_desc* nonnull %niter_desc, i8 zeroext 0) #6, !dbg !4264
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4264
  %30 = load %union.tree_node*, %union.tree_node** %niter15, align 8, !dbg !4265
  %niter.0 = select i1 %tobool14, %union.tree_node* null, %union.tree_node* %30, !dbg !4265
  call void @llvm.dbg.value(metadata %union.tree_node* %niter.0, metadata !4218, metadata !DIExpression()), !dbg !4240
  %tobool16 = icmp eq %union.tree_node* %niter.0, null, !dbg !4266
  br i1 %tobool16, label %if.then19, label %lor.lhs.false, !dbg !4268

lor.lhs.false:                                    ; preds = %for.body12
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4268
  %bf.load = load i64, i64* %31, align 8, !dbg !4269
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !4270
  %cmp = icmp eq i64 %bf.cast4, 23, !dbg !4270
  br i1 %cmp, label %if.end21, label %if.then19, !dbg !4271

if.then19:                                        ; preds = %lor.lhs.false, %for.body12
  %32 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4272
  call void @llvm.dbg.value(metadata %struct.loop* %32, metadata !4186, metadata !DIExpression()), !dbg !4237
  %33 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !4273
  call void @llvm.dbg.value(metadata %struct.edge_def* %33, metadata !4217, metadata !DIExpression()), !dbg !4239
  %call20 = call %union.tree_node* @loop_niter_by_eval(%struct.loop* %32, %struct.edge_def* %33) #6, !dbg !4274
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !4218, metadata !DIExpression()), !dbg !4240
  br label %if.end21, !dbg !4275

if.end21:                                         ; preds = %lor.lhs.false, %if.then19
  %niter.1 = phi %union.tree_node* [ %call20, %if.then19 ], [ %niter.0, %lor.lhs.false ], !dbg !4240
  call void @llvm.dbg.value(metadata %union.tree_node* %niter.1, metadata !4218, metadata !DIExpression()), !dbg !4240
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %niter.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4276
  %bf.load23 = load i64, i64* %34, align 8, !dbg !4276
  %bf.cast253 = and i64 %bf.load23, 65535, !dbg !4277
  %cmp26 = icmp eq i64 %bf.cast253, 23, !dbg !4277
  br i1 %cmp26, label %if.then27, label %if.else37, !dbg !4278

if.then27:                                        ; preds = %if.end21
  %call28 = call i32 @host_integerp(%union.tree_node* %niter.1, i32 1) #6, !dbg !4289
  %tobool29 = icmp eq i32 %call28, 0, !dbg !4289
  br i1 %tobool29, label %if.else, label %land.lhs.true, !dbg !4292

land.lhs.true:                                    ; preds = %if.then27
  %sub = add nsw i32 %27, -1, !dbg !4293
  %conv = sext i32 %sub to i64, !dbg !4294
  %call30 = call i32 @compare_tree_int(%union.tree_node* %niter.1, i64 %conv) #6, !dbg !4295
  %cmp31 = icmp eq i32 %call30, -1, !dbg !4296
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !4297

if.then33:                                        ; preds = %land.lhs.true
  %call34 = call i64 @tree_low_cst(%union.tree_node* %niter.1, i32 1) #6, !dbg !4298
  %add = add nsw i64 %call34, 1, !dbg !4299
  call void @llvm.dbg.value(metadata i64 %add, metadata !4222, metadata !DIExpression()), !dbg !4240
  br label %if.end54, !dbg !4300

if.else:                                          ; preds = %if.then27, %land.lhs.true
  %conv35 = sext i32 %27 to i64, !dbg !4301
  call void @llvm.dbg.value(metadata i64 %conv35, metadata !4222, metadata !DIExpression()), !dbg !4240
  br label %if.end54

if.else37:                                        ; preds = %if.end21
  br label %cleanup, !dbg !4315

if.end54:                                         ; preds = %if.then33, %if.else
  %nitercst.2 = phi i64 [ %conv35, %if.else ], [ %add, %if.then33 ], !dbg !4302
  call void @llvm.dbg.value(metadata i64 %nitercst.2, metadata !4222, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i32 5, metadata !4225, metadata !DIExpression()), !dbg !4240
  %div = sdiv i64 %nitercst.2, 2, !dbg !4303
  %add55 = add nsw i64 %div, 10000, !dbg !4304
  %div56 = sdiv i64 %add55, %nitercst.2, !dbg !4305
  %conv57 = trunc i64 %div56 to i32, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %conv57, metadata !4224, metadata !DIExpression()), !dbg !4240
  %35 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !4307
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !4217, metadata !DIExpression()), !dbg !4239
  call void @predict_edge(%struct.edge_def* %35, i32 5, i32 %conv57) #6, !dbg !4308
  br label %cleanup, !dbg !4309

cleanup:                                          ; preds = %if.else37, %if.end54
  %inc = add i32 %j.0, 1, !dbg !4310
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4193, metadata !DIExpression()), !dbg !4239
  br label %for.cond3, !dbg !4311, !llvm.loop !4312

for.end.us-lcssa:                                 ; preds = %for.cond3
  br label %for.end, !dbg !4314

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %exits, metadata !4195, metadata !DIExpression(DW_OP_deref)), !dbg !4239
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %exits) #7, !dbg !4314
  %36 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4316
  call void @llvm.dbg.value(metadata %struct.loop* %36, metadata !4186, metadata !DIExpression()), !dbg !4237
  %call62 = call %struct.basic_block_def** @get_loop_body(%struct.loop* %36) #6, !dbg !4317
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call62, metadata !4191, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32 0, metadata !4193, metadata !DIExpression()), !dbg !4239
  br label %for.cond63, !dbg !4318

for.cond63:                                       ; preds = %cleanup112, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup112 ], [ 0, %for.end ], !dbg !4319
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4193, metadata !DIExpression()), !dbg !4239
  %37 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4320
  call void @llvm.dbg.value(metadata %struct.loop* %37, metadata !4186, metadata !DIExpression()), !dbg !4237
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %37, i64 0, i32 6, !dbg !4321
  %38 = load i32, i32* %num_nodes, align 4, !dbg !4321
  %39 = zext i32 %38 to i64, !dbg !4322
  %cmp64 = icmp ult i64 %indvars.iv, %39, !dbg !4322
  br i1 %cmp64, label %for.body66, label %for.end119, !dbg !4323

for.body66:                                       ; preds = %for.cond63
  call void @llvm.dbg.value(metadata i32 0, metadata !4226, metadata !DIExpression()), !dbg !4241
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4324
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4325
  %arrayidx67 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call62, i64 %indvars.iv, !dbg !4326
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx67, align 8, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %40, metadata !4187, metadata !DIExpression()), !dbg !4239
  %call68 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %40, i32 8) #6, !dbg !4327
  %tobool69 = icmp eq i8 %call68, 0, !dbg !4327
  br i1 %tobool69, label %if.end71, label %cleanup112, !dbg !4329

if.end71:                                         ; preds = %for.body66
  %41 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4330
  call void @llvm.dbg.value(metadata %struct.loop* %41, metadata !4186, metadata !DIExpression()), !dbg !4237
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %41, i64 0, i32 3, !dbg !4332
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4332
  %cmp72 = icmp eq %struct.basic_block_def* %40, %42, !dbg !4333
  br i1 %cmp72, label %if.then74, label %if.end80, !dbg !4334

if.then74:                                        ; preds = %if.end71
  call void @llvm.dbg.value(metadata %struct.loop* %41, metadata !4186, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %struct.loop* %41, metadata !4186, metadata !DIExpression()), !dbg !4237
  %header = getelementptr inbounds %struct.loop, %struct.loop* %41, i64 0, i32 2, !dbg !4335
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4335
  %call76 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %40, %struct.basic_block_def* %43) #6, !dbg !4337
  call void @llvm.dbg.value(metadata %struct.edge_def* %call76, metadata !4230, metadata !DIExpression()), !dbg !4241
  store %struct.edge_def* %call76, %struct.edge_def** %e, align 8, !dbg !4338
  call void @llvm.dbg.value(metadata %struct.edge_def* %call76, metadata !4230, metadata !DIExpression()), !dbg !4241
  %tobool77 = icmp eq %struct.edge_def* %call76, null, !dbg !4339
  br i1 %tobool77, label %if.end80, label %if.then78, !dbg !4341

if.then78:                                        ; preds = %if.then74
  call void @llvm.dbg.value(metadata i32 1, metadata !4226, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.value(metadata %struct.edge_def* %call76, metadata !4230, metadata !DIExpression()), !dbg !4241
  call void @predict_edge_def(%struct.edge_def* nonnull %call76, i32 11, i32 1) #7, !dbg !4342
  br label %if.end80, !dbg !4344

if.end80:                                         ; preds = %if.then74, %if.then78, %if.end71
  %header_found.1 = phi i1 [ false, %if.end71 ], [ true, %if.then78 ], [ false, %if.then74 ]
  br i1 %header_found.1, label %cleanup112, label %land.lhs.true82, !dbg !4345

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %40, i32 7) #6, !dbg !4346
  %tobool84 = icmp eq i8 %call83, 0, !dbg !4346
  br i1 %tobool84, label %land.lhs.true85, label %cleanup112, !dbg !4347

land.lhs.true85:                                  ; preds = %land.lhs.true82
  %call86 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %40, i32 5) #6, !dbg !4348
  %tobool87 = icmp eq i8 %call86, 0, !dbg !4348
  br i1 %tobool87, label %if.then88, label %cleanup112, !dbg !4349

if.then88:                                        ; preds = %land.lhs.true85
  %div91 = udiv i32 900, %call2, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %div91, metadata !4232, metadata !DIExpression()), !dbg !4351
  %44 = icmp sgt i32 %div91, 200, !dbg !4352
  %spec.select1 = select i1 %44, i32 %div91, i32 200, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4232, metadata !DIExpression()), !dbg !4351
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !4353
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i64 0, i32 1, !dbg !4353
  %call96 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4353
  %45 = extractvalue { i32, %struct.VEC_edge_gc** } %call96, 0, !dbg !4353
  store i32 %45, i32* %8, align 8, !dbg !4353
  %46 = extractvalue { i32, %struct.VEC_edge_gc** } %call96, 1, !dbg !4353
  store %struct.VEC_edge_gc** %46, %struct.VEC_edge_gc*** %9, align 8, !dbg !4353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !4353
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !4353
  br label %for.cond97, !dbg !4353

for.cond97:                                       ; preds = %for.inc109, %if.then88
  %47 = load i32, i32* %10, align 8, !dbg !4354
  %48 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !4354
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4230, metadata !DIExpression(DW_OP_deref)), !dbg !4241
  %call98 = call fastcc zeroext i8 @ei_cond(i32 %47, %struct.VEC_edge_gc** %48, %struct.edge_def** nonnull %e) #7, !dbg !4354
  %tobool99 = icmp eq i8 %call98, 0, !dbg !4353
  br i1 %tobool99, label %cleanup112.loopexit, label %for.body100, !dbg !4353

for.body100:                                      ; preds = %for.cond97
  %49 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4355
  call void @llvm.dbg.value(metadata %struct.edge_def* %49, metadata !4230, metadata !DIExpression()), !dbg !4241
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %49, i64 0, i32 1, !dbg !4357
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4357
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %50, i64 0, i32 9, !dbg !4358
  %51 = load i32, i32* %index, align 8, !dbg !4358
  %cmp101 = icmp slt i32 %51, 2, !dbg !4359
  br i1 %cmp101, label %if.then107, label %lor.lhs.false103, !dbg !4360

lor.lhs.false103:                                 ; preds = %for.body100
  %52 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4361
  call void @llvm.dbg.value(metadata %struct.loop* %52, metadata !4186, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata %struct.edge_def* %49, metadata !4230, metadata !DIExpression()), !dbg !4241
  %call105 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %52, %struct.basic_block_def* %50) #6, !dbg !4362
  %tobool106 = icmp eq i8 %call105, 0, !dbg !4362
  br i1 %tobool106, label %lor.lhs.false103.if.then107_crit_edge, label %for.inc109, !dbg !4363

lor.lhs.false103.if.then107_crit_edge:            ; preds = %lor.lhs.false103
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4364
  br label %if.then107, !dbg !4363

if.then107:                                       ; preds = %lor.lhs.false103.if.then107_crit_edge, %for.body100
  %53 = phi %struct.edge_def* [ %.pre, %lor.lhs.false103.if.then107_crit_edge ], [ %49, %for.body100 ], !dbg !4364
  call void @llvm.dbg.value(metadata %struct.edge_def* %53, metadata !4230, metadata !DIExpression()), !dbg !4241
  call void @predict_edge(%struct.edge_def* %53, i32 12, i32 %spec.select1) #6, !dbg !4365
  br label %for.inc109, !dbg !4365

for.inc109:                                       ; preds = %lor.lhs.false103, %if.then107
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4231, metadata !DIExpression(DW_OP_deref)), !dbg !4241
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4354
  br label %for.cond97, !dbg !4354, !llvm.loop !4366

cleanup112.loopexit:                              ; preds = %for.cond97
  br label %cleanup112, !dbg !4368

cleanup112:                                       ; preds = %cleanup112.loopexit, %land.lhs.true85, %land.lhs.true82, %for.body66, %if.end80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !4368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !4368
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4369
  br label %for.cond63, !dbg !4370, !llvm.loop !4371

for.end119:                                       ; preds = %for.cond63
  %54 = bitcast %struct.basic_block_def** %call62 to i8*, !dbg !4373
  call void @free(i8* %54) #6, !dbg !4374
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4375
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #8, !dbg !4375
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4375
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !4180, metadata !DIExpression(DW_OP_deref)), !dbg !4237
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4186, metadata !DIExpression(DW_OP_deref)), !dbg !4237
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !4246
  br label %for.cond, !dbg !4246, !llvm.loop !4376

for.end121:                                       ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4378
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4378
  ret void, !dbg !4378
}

; Function Attrs: nounwind uwtable
define internal fastcc void @tree_estimate_probability_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4379 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %e1 = alloca %struct.edge_def*, align 8
  %ei1 = alloca %struct.edge_iterator, align 8
  %tmp29 = alloca %struct.edge_iterator, align 8
  %bi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp83 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4381, metadata !DIExpression()), !dbg !4399
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !4400
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4400
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4401
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4401
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4402
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4402
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4402
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4402
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4402
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4402
  store i32 %4, i32* %3, align 8, !dbg !4402
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4402
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4402
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !4402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !4402
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4402
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4403
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4403
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 6, !dbg !4404
  %9 = bitcast %struct.edge_def** %e1 to i8*, !dbg !4405
  %10 = bitcast %struct.edge_iterator* %ei1 to i8*, !dbg !4405
  %11 = bitcast %struct.edge_iterator* %tmp29 to i8*, !dbg !4406
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4406
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp29, i64 0, i32 0, !dbg !4406
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp29, i64 0, i32 1, !dbg !4406
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei1, i64 0, i32 0, !dbg !4410
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei1, i64 0, i32 1, !dbg !4410
  %16 = bitcast %struct.gimple_stmt_iterator* %bi to i8*, !dbg !4412
  %17 = bitcast %struct.gimple_stmt_iterator* %tmp83 to i8*, !dbg !4413
  br label %for.cond, !dbg !4402

for.cond:                                         ; preds = %for.inc102, %entry
  %18 = load i32, i32* %7, align 8, !dbg !4414
  %19 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !4414
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4382, metadata !DIExpression(DW_OP_deref)), !dbg !4399
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %18, %struct.VEC_edge_gc** %19, %struct.edge_def** nonnull %e) #7, !dbg !4414
  %tobool = icmp eq i8 %call1, 0, !dbg !4402
  br i1 %tobool, label %for.end103, label %for.body, !dbg !4402

for.body:                                         ; preds = %for.cond
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4415
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !4382, metadata !DIExpression()), !dbg !4399
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 1, !dbg !4416
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4416
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4417
  %cmp = icmp eq %struct.basic_block_def* %21, %22, !dbg !4418
  br i1 %cmp, label %if.end60, label %land.lhs.true, !dbg !4419

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !4382, metadata !DIExpression()), !dbg !4399
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4420
  %cfg = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 1, !dbg !4420
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4420
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 1, !dbg !4420
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4420
  %cmp3 = icmp eq %struct.basic_block_def* %21, %25, !dbg !4421
  br i1 %cmp3, label %if.end60, label %land.lhs.true4, !dbg !4422

land.lhs.true4:                                   ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !4382, metadata !DIExpression()), !dbg !4399
  %call6 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %21) #7, !dbg !4423
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4423
  br i1 %tobool7, label %if.end60, label %land.lhs.true8, !dbg !4424

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %26 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4425
  call void @llvm.dbg.value(metadata %struct.edge_def* %26, metadata !4382, metadata !DIExpression()), !dbg !4399
  %dest9 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %26, i64 0, i32 1, !dbg !4426
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %dest9, align 8, !dbg !4426
  %call10 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %27) #7, !dbg !4427
  %dest11 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 1, !dbg !4428
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %dest11, align 8, !dbg !4428
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4429
  %cfg13 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, i32 1, !dbg !4429
  %30 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg13, align 8, !dbg !4429
  %x_exit_block_ptr14 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i64 0, i32 1, !dbg !4429
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr14, align 8, !dbg !4429
  %cmp15 = icmp eq %struct.basic_block_def* %28, %31, !dbg !4430
  br i1 %cmp15, label %land.lhs.true17, label %if.end60, !dbg !4431

land.lhs.true17:                                  ; preds = %land.lhs.true8
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4432
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !4382, metadata !DIExpression()), !dbg !4399
  %dest18 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 1, !dbg !4433
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %dest18, align 8, !dbg !4433
  %call19 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %33) #6, !dbg !4434
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !4384, metadata !DIExpression()), !dbg !4399
  %cmp20 = icmp eq %union.gimple_statement_d* %call19, null, !dbg !4435
  br i1 %cmp20, label %if.end60, label %land.lhs.true22, !dbg !4436

land.lhs.true22:                                  ; preds = %land.lhs.true17
  %call23 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call19) #7, !dbg !4437
  %cmp24 = icmp eq i32 %call23, 9, !dbg !4438
  br i1 %cmp24, label %if.then, label %if.end60, !dbg !4439

if.then:                                          ; preds = %land.lhs.true22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4440
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4441
  %call26 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !4442
  %tobool27 = icmp eq i8 %call26, 0, !dbg !4442
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !4443

if.then28:                                        ; preds = %if.then
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8, !dbg !4444
  %call30 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4444
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call30, 0, !dbg !4444
  store i32 %34, i32* %12, align 8, !dbg !4444
  %35 = extractvalue { i32, %struct.VEC_edge_gc** } %call30, 1, !dbg !4444
  store %struct.VEC_edge_gc** %35, %struct.VEC_edge_gc*** %13, align 8, !dbg !4444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !4444
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8, !dbg !4444
  br label %for.cond31, !dbg !4444

for.cond31:                                       ; preds = %for.inc, %if.then28
  %36 = load i32, i32* %14, align 8, !dbg !4445
  %37 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !4445
  call void @llvm.dbg.value(metadata %struct.edge_def** %e1, metadata !4385, metadata !DIExpression(DW_OP_deref)), !dbg !4405
  %call32 = call fastcc zeroext i8 @ei_cond(i32 %36, %struct.VEC_edge_gc** %37, %struct.edge_def** nonnull %e1) #7, !dbg !4445
  %tobool33 = icmp eq i8 %call32, 0, !dbg !4444
  br i1 %tobool33, label %if.end59.loopexit, label %for.body34, !dbg !4444

for.body34:                                       ; preds = %for.cond31
  %38 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !4446
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !4385, metadata !DIExpression()), !dbg !4405
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 0, !dbg !4448
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4448
  %call35 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %39, i32 26) #6, !dbg !4449
  %tobool36 = icmp eq i8 %call35, 0, !dbg !4449
  br i1 %tobool36, label %land.lhs.true37, label %for.inc, !dbg !4450

land.lhs.true37:                                  ; preds = %for.body34
  %40 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !4451
  call void @llvm.dbg.value(metadata %struct.edge_def* %40, metadata !4385, metadata !DIExpression()), !dbg !4405
  %src38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %40, i64 0, i32 0, !dbg !4452
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %src38, align 8, !dbg !4452
  %call39 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %41, i32 24) #6, !dbg !4453
  %tobool40 = icmp eq i8 %call39, 0, !dbg !4453
  br i1 %tobool40, label %land.lhs.true41, label %for.inc, !dbg !4454

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %42 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !4455
  call void @llvm.dbg.value(metadata %struct.edge_def* %42, metadata !4385, metadata !DIExpression()), !dbg !4405
  %src42 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %42, i64 0, i32 0, !dbg !4456
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %src42, align 8, !dbg !4456
  %call43 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %43, i32 25) #6, !dbg !4457
  %tobool44 = icmp eq i8 %call43, 0, !dbg !4457
  br i1 %tobool44, label %if.then45, label %for.inc, !dbg !4458

if.then45:                                        ; preds = %land.lhs.true41
  %44 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !4459
  call void @llvm.dbg.value(metadata %struct.edge_def* %44, metadata !4385, metadata !DIExpression()), !dbg !4405
  call void @predict_edge_def(%struct.edge_def* %44, i32 22, i32 0) #7, !dbg !4460
  br label %for.inc, !dbg !4460

for.inc:                                          ; preds = %land.lhs.true41, %land.lhs.true37, %for.body34, %if.then45
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei1, metadata !4391, metadata !DIExpression(DW_OP_deref)), !dbg !4405
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei1) #7, !dbg !4445
  br label %for.cond31, !dbg !4445, !llvm.loop !4461

if.else:                                          ; preds = %if.then
  %45 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4463
  call void @llvm.dbg.value(metadata %struct.edge_def* %45, metadata !4382, metadata !DIExpression()), !dbg !4399
  %src46 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %45, i64 0, i32 0, !dbg !4465
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %src46, align 8, !dbg !4465
  %call47 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %46, i32 26) #6, !dbg !4466
  %tobool48 = icmp eq i8 %call47, 0, !dbg !4466
  br i1 %tobool48, label %land.lhs.true49, label %if.end59, !dbg !4467

land.lhs.true49:                                  ; preds = %if.else
  %47 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4468
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !4382, metadata !DIExpression()), !dbg !4399
  %src50 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %47, i64 0, i32 0, !dbg !4469
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %src50, align 8, !dbg !4469
  %call51 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %48, i32 24) #6, !dbg !4470
  %tobool52 = icmp eq i8 %call51, 0, !dbg !4470
  br i1 %tobool52, label %land.lhs.true53, label %if.end59, !dbg !4471

land.lhs.true53:                                  ; preds = %land.lhs.true49
  %49 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4472
  call void @llvm.dbg.value(metadata %struct.edge_def* %49, metadata !4382, metadata !DIExpression()), !dbg !4399
  %src54 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %49, i64 0, i32 0, !dbg !4473
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %src54, align 8, !dbg !4473
  %call55 = call zeroext i8 @predicted_by_p(%struct.basic_block_def* %50, i32 25) #6, !dbg !4474
  %tobool56 = icmp eq i8 %call55, 0, !dbg !4474
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !4475

if.then57:                                        ; preds = %land.lhs.true53
  %51 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4476
  call void @llvm.dbg.value(metadata %struct.edge_def* %51, metadata !4382, metadata !DIExpression()), !dbg !4399
  call void @predict_edge_def(%struct.edge_def* %51, i32 22, i32 0) #7, !dbg !4477
  br label %if.end59, !dbg !4477

if.end59.loopexit:                                ; preds = %for.cond31
  br label %if.end59, !dbg !4478

if.end59:                                         ; preds = %if.end59.loopexit, %land.lhs.true53, %land.lhs.true49, %if.else, %if.then57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4478
  br label %if.end60, !dbg !4479

if.end60:                                         ; preds = %land.lhs.true17, %land.lhs.true4, %land.lhs.true, %for.body, %if.end59, %land.lhs.true22, %land.lhs.true8
  %52 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4480
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !4382, metadata !DIExpression()), !dbg !4399
  %dest61 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %52, i64 0, i32 1, !dbg !4481
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %dest61, align 8, !dbg !4481
  %54 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4482
  %cfg63 = getelementptr inbounds %struct.function, %struct.function* %54, i64 0, i32 1, !dbg !4482
  %55 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg63, align 8, !dbg !4482
  %x_exit_block_ptr64 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %55, i64 0, i32 1, !dbg !4482
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr64, align 8, !dbg !4482
  %cmp65 = icmp eq %struct.basic_block_def* %53, %56, !dbg !4483
  br i1 %cmp65, label %for.inc102, label %land.lhs.true67, !dbg !4484

land.lhs.true67:                                  ; preds = %if.end60
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !4382, metadata !DIExpression()), !dbg !4399
  %cmp69 = icmp eq %struct.basic_block_def* %53, %bb, !dbg !4485
  br i1 %cmp69, label %for.inc102, label %land.lhs.true71, !dbg !4486

land.lhs.true71:                                  ; preds = %land.lhs.true67
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !4382, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !4382, metadata !DIExpression()), !dbg !4399
  %src73 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %52, i64 0, i32 0, !dbg !4487
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %src73, align 8, !dbg !4487
  %call74 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %53, %struct.basic_block_def* %57) #6, !dbg !4488
  %tobool76 = icmp eq i8 %call74, 0, !dbg !4488
  br i1 %tobool76, label %for.inc102, label %land.lhs.true77, !dbg !4489

land.lhs.true77:                                  ; preds = %land.lhs.true71
  %58 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4490
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !4382, metadata !DIExpression()), !dbg !4399
  %src78 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %58, i64 0, i32 0, !dbg !4491
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %src78, align 8, !dbg !4491
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !4382, metadata !DIExpression()), !dbg !4399
  %dest79 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %58, i64 0, i32 1, !dbg !4492
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %dest79, align 8, !dbg !4492
  %call80 = call zeroext i8 @dominated_by_p(i32 2, %struct.basic_block_def* %59, %struct.basic_block_def* %60) #6, !dbg !4493
  %tobool81 = icmp eq i8 %call80, 0, !dbg !4493
  br i1 %tobool81, label %if.then82, label %for.inc102, !dbg !4494

if.then82:                                        ; preds = %land.lhs.true77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8, !dbg !4495
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8, !dbg !4496
  %61 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4497
  call void @llvm.dbg.value(metadata %struct.edge_def* %61, metadata !4382, metadata !DIExpression()), !dbg !4399
  %dest84 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %61, i64 0, i32 1, !dbg !4498
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %dest84, align 8, !dbg !4498
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp83, %struct.basic_block_def* %62) #7, !dbg !4496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %17, i64 24, i1 false), !dbg !4496
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8, !dbg !4496
  br label %for.cond85, !dbg !4499

for.cond85:                                       ; preds = %for.inc99, %if.then82
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !4392, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call86 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bi) #7, !dbg !4500
  %tobool87 = icmp eq i8 %call86, 0, !dbg !4501
  br i1 %tobool87, label %for.body88, label %for.end100, !dbg !4502

for.body88:                                       ; preds = %for.cond85
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !4392, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call89 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bi) #7, !dbg !4503
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call89, metadata !4395, metadata !DIExpression()), !dbg !4504
  %call90 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call89) #7, !dbg !4505
  %tobool92 = icmp eq i8 %call90, 0, !dbg !4505
  br i1 %tobool92, label %cleanup, label %land.lhs.true93, !dbg !4507

land.lhs.true93:                                  ; preds = %for.body88
  %call94 = call zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d* %call89) #6, !dbg !4508
  %tobool96 = icmp eq i8 %call94, 0, !dbg !4508
  br i1 %tobool96, label %cleanup, label %if.then97, !dbg !4509

if.then97:                                        ; preds = %land.lhs.true93
  %63 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4510
  call void @llvm.dbg.value(metadata %struct.edge_def* %63, metadata !4382, metadata !DIExpression()), !dbg !4399
  call void @predict_edge_def(%struct.edge_def* %63, i32 21, i32 0) #7, !dbg !4512
  br label %cleanup, !dbg !4513

cleanup:                                          ; preds = %land.lhs.true93, %for.body88, %if.then97
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then97 ], [ true, %land.lhs.true93 ], [ true, %for.body88 ]
  br i1 %cleanup.dest.slot.0, label %for.inc99, label %for.end100

for.inc99:                                        ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !4392, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bi) #7, !dbg !4514
  br label %for.cond85, !dbg !4515, !llvm.loop !4516

for.end100:                                       ; preds = %cleanup, %for.cond85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8, !dbg !4518
  br label %for.inc102, !dbg !4519

for.inc102:                                       ; preds = %land.lhs.true77, %land.lhs.true71, %land.lhs.true67, %if.end60, %for.end100
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4383, metadata !DIExpression(DW_OP_deref)), !dbg !4399
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4414
  br label %for.cond, !dbg !4414, !llvm.loop !4520

for.end103:                                       ; preds = %for.cond
  call fastcc void @tree_predict_by_opcode(%struct.basic_block_def* %bb) #7, !dbg !4522
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4523
  ret void, !dbg !4523
}

; Function Attrs: nounwind uwtable
define internal fastcc void @combine_predictions_for_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4524 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4526, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 5000, metadata !4527, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 28, metadata !4528, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 5000, metadata !4529, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 0, metadata !4531, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 0, metadata !4532, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 0, metadata !4534, metadata !DIExpression()), !dbg !4563
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !4564
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4564
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !4536, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !4537, metadata !DIExpression()), !dbg !4563
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4565
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4565
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4566
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4566
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4566
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4566
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4566
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4566
  store i32 %4, i32* %3, align 8, !dbg !4566
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4566
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4566
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !4566
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !4566
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4566
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4568
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4568
  br label %for.cond, !dbg !4566

for.cond:                                         ; preds = %for.inc, %entry
  %second.0 = phi %struct.edge_def* [ null, %entry ], [ %second.2, %for.inc ], !dbg !4570
  %first.0 = phi %struct.edge_def* [ null, %entry ], [ %first.2, %for.inc ], !dbg !4571
  %nedges.0 = phi i32 [ 0, %entry ], [ %nedges.1, %for.inc ], !dbg !4572
  call void @llvm.dbg.value(metadata i32 %nedges.0, metadata !4534, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %first.0, metadata !4536, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %second.0, metadata !4537, metadata !DIExpression()), !dbg !4563
  %9 = load i32, i32* %7, align 8, !dbg !4573
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !4573
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4535, metadata !DIExpression(DW_OP_deref)), !dbg !4563
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !4573
  %tobool = icmp eq i8 %call1, 0, !dbg !4566
  br i1 %tobool, label %for.end, label %for.body, !dbg !4566

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4574
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !4535, metadata !DIExpression()), !dbg !4563
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !4576
  %12 = load i32, i32* %flags, align 8, !dbg !4576
  %and = and i32 %12, 24, !dbg !4577
  %tobool2 = icmp eq i32 %and, 0, !dbg !4577
  br i1 %tobool2, label %if.then, label %for.inc, !dbg !4578

if.then:                                          ; preds = %for.body
  %inc = add nsw i32 %nedges.0, 1, !dbg !4579
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4534, metadata !DIExpression()), !dbg !4563
  %tobool3 = icmp eq %struct.edge_def* %first.0, null, !dbg !4581
  %tobool4 = icmp ne %struct.edge_def* %second.0, null, !dbg !4583
  %or.cond = or i1 %tobool3, %tobool4, !dbg !4584
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !4535, metadata !DIExpression()), !dbg !4563
  %second.1 = select i1 %or.cond, %struct.edge_def* %second.0, %struct.edge_def* %11, !dbg !4584
  call void @llvm.dbg.value(metadata %struct.edge_def* %second.1, metadata !4537, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !4535, metadata !DIExpression()), !dbg !4563
  %spec.select = select i1 %tobool3, %struct.edge_def* %11, %struct.edge_def* %first.0, !dbg !4585
  call void @llvm.dbg.value(metadata %struct.edge_def* %spec.select, metadata !4536, metadata !DIExpression()), !dbg !4563
  br label %for.inc, !dbg !4586

for.inc:                                          ; preds = %for.body, %if.then
  %second.2 = phi %struct.edge_def* [ %second.0, %for.body ], [ %second.1, %if.then ], !dbg !4570
  %first.2 = phi %struct.edge_def* [ %first.0, %for.body ], [ %spec.select, %if.then ], !dbg !4571
  %nedges.1 = phi i32 [ %nedges.0, %for.body ], [ %inc, %if.then ], !dbg !4563
  call void @llvm.dbg.value(metadata i32 %nedges.1, metadata !4534, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %first.2, metadata !4536, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %second.2, metadata !4537, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4538, metadata !DIExpression(DW_OP_deref)), !dbg !4563
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4573
  br label %for.cond, !dbg !4573, !llvm.loop !4587

for.end:                                          ; preds = %for.cond
  %second.0.lcssa = phi %struct.edge_def* [ %second.0, %for.cond ], !dbg !4570
  %first.0.lcssa = phi %struct.edge_def* [ %first.0, %for.cond ], !dbg !4571
  %nedges.0.lcssa = phi i32 [ %nedges.0, %for.cond ], !dbg !4572
  call void @llvm.dbg.value(metadata %struct.edge_def* %second.0.lcssa, metadata !4537, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %first.0.lcssa, metadata !4536, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %nedges.0.lcssa, metadata !4534, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %second.0.lcssa, metadata !4537, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %first.0.lcssa, metadata !4536, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %nedges.0.lcssa, metadata !4534, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %second.0.lcssa, metadata !4537, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_def* %first.0.lcssa, metadata !4536, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %nedges.0.lcssa, metadata !4534, metadata !DIExpression()), !dbg !4563
  %cmp = icmp eq i32 %nedges.0.lcssa, 2, !dbg !4589
  br i1 %cmp, label %if.end18, label %if.then10, !dbg !4591

if.then10:                                        ; preds = %for.end
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !4592
  %13 = load i64, i64* %count, align 8, !dbg !4592
  %tobool11 = icmp eq i64 %13, 0, !dbg !4595
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !4596

if.then12:                                        ; preds = %if.then10
  call fastcc void @set_even_probabilities(%struct.basic_block_def* %bb) #7, !dbg !4597
  br label %if.end13, !dbg !4597

if.end13:                                         ; preds = %if.then10, %if.then12
  call fastcc void @clear_bb_predictions(%struct.basic_block_def* %bb) #7, !dbg !4598
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4599
  %tobool14 = icmp eq %struct._IO_FILE* %14, null, !dbg !4599
  br i1 %tobool14, label %cleanup141, label %if.then15, !dbg !4601

if.then15:                                        ; preds = %if.end13
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4602
  %15 = load i32, i32* %index, align 8, !dbg !4602
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0), i32 %nedges.0.lcssa, i32 %15) #6, !dbg !4603
  br label %cleanup141, !dbg !4603

if.end18:                                         ; preds = %for.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4604
  %tobool19 = icmp eq %struct._IO_FILE* %16, null, !dbg !4604
  br i1 %tobool19, label %if.end23, label %if.then20, !dbg !4606

if.then20:                                        ; preds = %if.end18
  %index21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4607
  %17 = load i32, i32* %index21, align 8, !dbg !4607
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), i32 %17) #6, !dbg !4608
  br label %if.end23, !dbg !4608

if.end23:                                         ; preds = %if.end18, %if.then20
  %18 = load %struct.pointer_map_t*, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !4609
  %19 = bitcast %struct.basic_block_def* %bb to i8*, !dbg !4610
  %call24 = call i8** @pointer_map_contains(%struct.pointer_map_t* %18, i8* %19) #6, !dbg !4611
  call void @llvm.dbg.value(metadata i8** %call24, metadata !4539, metadata !DIExpression()), !dbg !4563
  %tobool25 = icmp eq i8** %call24, null, !dbg !4612
  br i1 %tobool25, label %if.end93, label %if.then26, !dbg !4613

if.then26:                                        ; preds = %if.end23
  %20 = bitcast i8** %call24 to %struct.edge_prediction**, !dbg !4614
  br label %for.cond27, !dbg !4615

for.cond27:                                       ; preds = %for.inc90, %if.then26
  %pred.0.in = phi %struct.edge_prediction** [ %20, %if.then26 ], [ %ep_next91, %for.inc90 ]
  %found.0 = phi i8 [ 0, %if.then26 ], [ 1, %for.inc90 ], !dbg !4563
  %combined_probability.0 = phi i32 [ 5000, %if.then26 ], [ %combined_probability.1, %for.inc90 ], !dbg !4563
  %best_predictor.0 = phi i32 [ 28, %if.then26 ], [ %best_predictor.2, %for.inc90 ], !dbg !4616
  %best_probability.0 = phi i32 [ 5000, %if.then26 ], [ %best_probability.2, %for.inc90 ], !dbg !4617
  %pred.0 = load %struct.edge_prediction*, %struct.edge_prediction** %pred.0.in, align 8, !dbg !4618
  call void @llvm.dbg.value(metadata i32 %best_probability.0, metadata !4527, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_predictor.0, metadata !4528, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %combined_probability.0, metadata !4529, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %found.0, metadata !4532, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %pred.0, metadata !4533, metadata !DIExpression()), !dbg !4563
  %tobool28 = icmp eq %struct.edge_prediction* %pred.0, null, !dbg !4619
  br i1 %tobool28, label %if.end93.loopexit, label %for.body29, !dbg !4619

for.body29:                                       ; preds = %for.cond27
  %ep_predictor = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.0, i64 0, i32 2, !dbg !4620
  %21 = load i32, i32* %ep_predictor, align 8, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %21, metadata !4540, metadata !DIExpression()), !dbg !4621
  %ep_probability = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.0, i64 0, i32 3, !dbg !4622
  %22 = load i32, i32* %ep_probability, align 4, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %22, metadata !4546, metadata !DIExpression()), !dbg !4621
  %ep_edge = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.0, i64 0, i32 1, !dbg !4623
  %23 = load %struct.edge_def*, %struct.edge_def** %ep_edge, align 8, !dbg !4623
  %cmp30 = icmp eq %struct.edge_def* %23, %first.0.lcssa, !dbg !4625
  %sub = sub nsw i32 10000, %22, !dbg !4626
  %spec.select1 = select i1 %cmp30, i32 %22, i32 %sub, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4546, metadata !DIExpression()), !dbg !4621
  call void @llvm.dbg.value(metadata i8 1, metadata !4532, metadata !DIExpression()), !dbg !4563
  %cmp33 = icmp ugt i32 %best_predictor.0, %21, !dbg !4628
  br i1 %cmp33, label %if.then34, label %if.end75, !dbg !4629

if.then34:                                        ; preds = %for.body29
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4550, metadata !DIExpression()), !dbg !4630
  %cmp50 = icmp slt i32 %spec.select1, 5000, !dbg !4631
  %cmp57 = icmp sgt i32 %spec.select1, 4999, !dbg !4633
  %cmp62 = icmp slt i32 %spec.select1, 5001, !dbg !4633
  br i1 %cmp57, label %if.then34.split.us, label %if.then34.if.then34.split_crit_edge, !dbg !4635

if.then34.if.then34.split_crit_edge:              ; preds = %if.then34
  br i1 %cmp62, label %if.then34.split.split.us, label %if.then34.split.if.then34.split.split_crit_edge, !dbg !4635

if.then34.split.us:                               ; preds = %if.then34
  br i1 %cmp62, label %if.then34.split.us.split.us, label %if.then34.split.us.if.then34.split.us.split_crit_edge, !dbg !4635

if.then34.split.us.if.then34.split.us.split_crit_edge: ; preds = %if.then34.split.us
  br label %for.cond35.us, !dbg !4635

if.then34.split.us.split.us:                      ; preds = %if.then34.split.us
  br label %for.cond35.us.us, !dbg !4635

for.cond35.us.us:                                 ; preds = %for.inc70.us.us, %if.then34.split.us.split.us
  %pred2.0.in.us.us = phi %struct.edge_prediction** [ %20, %if.then34.split.us.split.us ], [ %ep_next.us.us, %for.inc70.us.us ]
  %prob.0.us.us = phi i32 [ %spec.select1, %if.then34.split.us.split.us ], [ %prob.3.us.us, %for.inc70.us.us ], !dbg !4636
  %pred2.0.us.us = load %struct.edge_prediction*, %struct.edge_prediction** %pred2.0.in.us.us, align 8, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %prob.0.us.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %pred2.0.us.us, metadata !4547, metadata !DIExpression()), !dbg !4630
  %tobool36.us.us = icmp eq %struct.edge_prediction* %pred2.0.us.us, null, !dbg !4638
  br i1 %tobool36.us.us, label %for.end71.us-lcssa.us.us-lcssa.us, label %for.body37.us.us, !dbg !4638

for.body37.us.us:                                 ; preds = %for.cond35.us.us
  %cmp38.us.us = icmp eq %struct.edge_prediction* %pred2.0.us.us, %pred.0, !dbg !4639
  br i1 %cmp38.us.us, label %for.inc70.us.us, label %land.lhs.true39.us.us, !dbg !4640

land.lhs.true39.us.us:                            ; preds = %for.body37.us.us
  %ep_predictor40.us.us = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us.us, i64 0, i32 2, !dbg !4641
  %24 = load i32, i32* %ep_predictor40.us.us, align 8, !dbg !4641
  %cmp42.us.us = icmp eq i32 %24, %21, !dbg !4642
  br i1 %cmp42.us.us, label %if.then43.us.us, label %for.inc70.us.us, !dbg !4643

if.then43.us.us:                                  ; preds = %land.lhs.true39.us.us
  call void @llvm.dbg.value(metadata i32 %22, metadata !4551, metadata !DIExpression()), !dbg !4644
  %ep_edge45.us.us = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us.us, i64 0, i32 1, !dbg !4645
  %25 = load %struct.edge_def*, %struct.edge_def** %ep_edge45.us.us, align 8, !dbg !4645
  %cmp46.us.us = icmp eq %struct.edge_def* %25, %first.0.lcssa, !dbg !4647
  %spec.select2.us.us = select i1 %cmp46.us.us, i32 %22, i32 %sub, !dbg !4648
  call void @llvm.dbg.value(metadata i32 %spec.select2.us.us, metadata !4551, metadata !DIExpression()), !dbg !4644
  %cmp51.us.us = icmp slt i32 %spec.select2.us.us, 5000, !dbg !4649
  %cmp53.us.us = xor i1 %cmp50, %cmp51.us.us, !dbg !4650
  br i1 %cmp53.us.us, label %cleanup.us.us, label %if.end56.us.us, !dbg !4651

if.end56.us.us:                                   ; preds = %if.then43.us.us
  %cmp60.us.us = icmp sgt i32 %spec.select2.us.us, %spec.select1, !dbg !4652
  br i1 %cmp60.us.us, label %if.then67.us.us, label %lor.lhs.false.us.us, !dbg !4653

lor.lhs.false.us.us:                              ; preds = %if.end56.us.us
  %cmp65.us.us = icmp slt i32 %spec.select2.us.us, %spec.select1, !dbg !4654
  br i1 %cmp65.us.us, label %if.then67.us.us, label %cleanup.us.us, !dbg !4655

if.then67.us.us:                                  ; preds = %lor.lhs.false.us.us, %if.end56.us.us
  call void @llvm.dbg.value(metadata i32 %spec.select2.us.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  br label %cleanup.us.us, !dbg !4656

cleanup.us.us:                                    ; preds = %if.then67.us.us, %lor.lhs.false.us.us, %if.then43.us.us
  %cleanup.dest.slot.0.us.us = phi i1 [ false, %if.then43.us.us ], [ true, %if.then67.us.us ], [ true, %lor.lhs.false.us.us ]
  %prob.2.us.us = phi i32 [ %prob.0.us.us, %if.then43.us.us ], [ %spec.select2.us.us, %if.then67.us.us ], [ %prob.0.us.us, %lor.lhs.false.us.us ], !dbg !4630
  call void @llvm.dbg.value(metadata i32 %prob.2.us.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  br i1 %cleanup.dest.slot.0.us.us, label %for.inc70.us.us, label %for.end71.us-lcssa.us.us-lcssa.us

for.inc70.us.us:                                  ; preds = %cleanup.us.us, %land.lhs.true39.us.us, %for.body37.us.us
  %prob.3.us.us = phi i32 [ %prob.0.us.us, %land.lhs.true39.us.us ], [ %prob.0.us.us, %for.body37.us.us ], [ %prob.2.us.us, %cleanup.us.us ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %prob.3.us.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  %ep_next.us.us = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us.us, i64 0, i32 0, !dbg !4657
  br label %for.cond35.us.us, !dbg !4658, !llvm.loop !4659

for.end71.us-lcssa.us.us-lcssa.us:                ; preds = %cleanup.us.us, %for.cond35.us.us
  %pred2.0.us.us.lcssa = phi %struct.edge_prediction* [ %pred2.0.us.us, %cleanup.us.us ], [ %pred2.0.us.us, %for.cond35.us.us ], !dbg !4637
  %prob.4.ph.us.ph.us = phi i32 [ %prob.2.us.us, %cleanup.us.us ], [ %prob.0.us.us, %for.cond35.us.us ]
  br label %for.end71.us-lcssa.us, !dbg !4661

for.cond35.us:                                    ; preds = %for.inc70.us, %if.then34.split.us.if.then34.split.us.split_crit_edge
  %pred2.0.in.us = phi %struct.edge_prediction** [ %20, %if.then34.split.us.if.then34.split.us.split_crit_edge ], [ %ep_next.us, %for.inc70.us ]
  %prob.0.us = phi i32 [ %spec.select1, %if.then34.split.us.if.then34.split.us.split_crit_edge ], [ %prob.3.us, %for.inc70.us ], !dbg !4636
  %pred2.0.us = load %struct.edge_prediction*, %struct.edge_prediction** %pred2.0.in.us, align 8, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %prob.0.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %pred2.0.us, metadata !4547, metadata !DIExpression()), !dbg !4630
  %tobool36.us = icmp eq %struct.edge_prediction* %pred2.0.us, null, !dbg !4638
  br i1 %tobool36.us, label %for.end71.us-lcssa.us.us-lcssa, label %for.body37.us, !dbg !4638

for.body37.us:                                    ; preds = %for.cond35.us
  %cmp38.us = icmp eq %struct.edge_prediction* %pred2.0.us, %pred.0, !dbg !4639
  br i1 %cmp38.us, label %for.inc70.us, label %land.lhs.true39.us, !dbg !4640

land.lhs.true39.us:                               ; preds = %for.body37.us
  %ep_predictor40.us = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us, i64 0, i32 2, !dbg !4641
  %26 = load i32, i32* %ep_predictor40.us, align 8, !dbg !4641
  %cmp42.us = icmp eq i32 %26, %21, !dbg !4642
  br i1 %cmp42.us, label %if.then43.us, label %for.inc70.us, !dbg !4643

if.then43.us:                                     ; preds = %land.lhs.true39.us
  call void @llvm.dbg.value(metadata i32 %22, metadata !4551, metadata !DIExpression()), !dbg !4644
  %ep_edge45.us = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us, i64 0, i32 1, !dbg !4645
  %27 = load %struct.edge_def*, %struct.edge_def** %ep_edge45.us, align 8, !dbg !4645
  %cmp46.us = icmp eq %struct.edge_def* %27, %first.0.lcssa, !dbg !4647
  %spec.select2.us = select i1 %cmp46.us, i32 %22, i32 %sub, !dbg !4648
  call void @llvm.dbg.value(metadata i32 %spec.select2.us, metadata !4551, metadata !DIExpression()), !dbg !4644
  %cmp51.us = icmp slt i32 %spec.select2.us, 5000, !dbg !4649
  %cmp53.us = xor i1 %cmp50, %cmp51.us, !dbg !4650
  br i1 %cmp53.us, label %cleanup.us, label %if.end56.us, !dbg !4651

if.end56.us:                                      ; preds = %if.then43.us
  %cmp60.us = icmp sgt i32 %spec.select2.us, %spec.select1, !dbg !4652
  br i1 %cmp60.us, label %if.then67.us, label %lor.lhs.false.us, !dbg !4653

lor.lhs.false.us:                                 ; preds = %if.end56.us
  br label %cleanup.us, !dbg !4655

if.then67.us:                                     ; preds = %if.end56.us
  call void @llvm.dbg.value(metadata i32 %spec.select2.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  br label %cleanup.us, !dbg !4656

cleanup.us:                                       ; preds = %lor.lhs.false.us, %if.then67.us, %if.then43.us
  %cleanup.dest.slot.0.us = phi i1 [ false, %if.then43.us ], [ true, %if.then67.us ], [ true, %lor.lhs.false.us ]
  %prob.2.us = phi i32 [ %prob.0.us, %if.then43.us ], [ %spec.select2.us, %if.then67.us ], [ %prob.0.us, %lor.lhs.false.us ], !dbg !4630
  call void @llvm.dbg.value(metadata i32 %prob.2.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  br i1 %cleanup.dest.slot.0.us, label %for.inc70.us, label %for.end71.us-lcssa.us.us-lcssa

for.inc70.us:                                     ; preds = %cleanup.us, %land.lhs.true39.us, %for.body37.us
  %prob.3.us = phi i32 [ %prob.0.us, %land.lhs.true39.us ], [ %prob.0.us, %for.body37.us ], [ %prob.2.us, %cleanup.us ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %prob.3.us, metadata !4550, metadata !DIExpression()), !dbg !4630
  %ep_next.us = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us, i64 0, i32 0, !dbg !4657
  br label %for.cond35.us, !dbg !4658, !llvm.loop !4659

for.end71.us-lcssa.us.us-lcssa:                   ; preds = %for.cond35.us, %cleanup.us
  %pred2.0.us.lcssa = phi %struct.edge_prediction* [ %pred2.0.us, %for.cond35.us ], [ %pred2.0.us, %cleanup.us ], !dbg !4637
  %prob.4.ph.us.ph = phi i32 [ %prob.2.us, %cleanup.us ], [ %prob.0.us, %for.cond35.us ]
  br label %for.end71.us-lcssa.us, !dbg !4661

for.end71.us-lcssa.us:                            ; preds = %for.end71.us-lcssa.us.us-lcssa.us, %for.end71.us-lcssa.us.us-lcssa
  %pred2.0.lcssa.ph.us = phi %struct.edge_prediction* [ %pred2.0.us.lcssa, %for.end71.us-lcssa.us.us-lcssa ], [ %pred2.0.us.us.lcssa, %for.end71.us-lcssa.us.us-lcssa.us ]
  %prob.4.ph.us = phi i32 [ %prob.4.ph.us.ph, %for.end71.us-lcssa.us.us-lcssa ], [ %prob.4.ph.us.ph.us, %for.end71.us-lcssa.us.us-lcssa.us ]
  br label %for.end71, !dbg !4661

if.then34.split.if.then34.split.split_crit_edge:  ; preds = %if.then34.if.then34.split_crit_edge
  br label %for.cond35, !dbg !4635

if.then34.split.split.us:                         ; preds = %if.then34.if.then34.split_crit_edge
  br label %for.cond35.us12, !dbg !4635

for.cond35.us12:                                  ; preds = %for.inc70.us37, %if.then34.split.split.us
  %pred2.0.in.us13 = phi %struct.edge_prediction** [ %20, %if.then34.split.split.us ], [ %ep_next.us39, %for.inc70.us37 ]
  %prob.0.us14 = phi i32 [ %spec.select1, %if.then34.split.split.us ], [ %prob.3.us38, %for.inc70.us37 ], !dbg !4636
  %pred2.0.us15 = load %struct.edge_prediction*, %struct.edge_prediction** %pred2.0.in.us13, align 8, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %prob.0.us14, metadata !4550, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %pred2.0.us15, metadata !4547, metadata !DIExpression()), !dbg !4630
  %tobool36.us16 = icmp eq %struct.edge_prediction* %pred2.0.us15, null, !dbg !4638
  br i1 %tobool36.us16, label %for.end71.us-lcssa.us-lcssa.us, label %for.body37.us17, !dbg !4638

for.body37.us17:                                  ; preds = %for.cond35.us12
  %cmp38.us18 = icmp eq %struct.edge_prediction* %pred2.0.us15, %pred.0, !dbg !4639
  br i1 %cmp38.us18, label %for.inc70.us37, label %land.lhs.true39.us19, !dbg !4640

land.lhs.true39.us19:                             ; preds = %for.body37.us17
  %ep_predictor40.us20 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us15, i64 0, i32 2, !dbg !4641
  %28 = load i32, i32* %ep_predictor40.us20, align 8, !dbg !4641
  %cmp42.us21 = icmp eq i32 %28, %21, !dbg !4642
  br i1 %cmp42.us21, label %if.then43.us22, label %for.inc70.us37, !dbg !4643

if.then43.us22:                                   ; preds = %land.lhs.true39.us19
  call void @llvm.dbg.value(metadata i32 %22, metadata !4551, metadata !DIExpression()), !dbg !4644
  %ep_edge45.us23 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us15, i64 0, i32 1, !dbg !4645
  %29 = load %struct.edge_def*, %struct.edge_def** %ep_edge45.us23, align 8, !dbg !4645
  %cmp46.us24 = icmp eq %struct.edge_def* %29, %first.0.lcssa, !dbg !4647
  %spec.select2.us26 = select i1 %cmp46.us24, i32 %22, i32 %sub, !dbg !4648
  call void @llvm.dbg.value(metadata i32 %spec.select2.us26, metadata !4551, metadata !DIExpression()), !dbg !4644
  %cmp51.us27 = icmp slt i32 %spec.select2.us26, 5000, !dbg !4649
  %cmp53.us28 = xor i1 %cmp50, %cmp51.us27, !dbg !4650
  br i1 %cmp53.us28, label %cleanup.us34, label %if.end56.us29, !dbg !4651

if.end56.us29:                                    ; preds = %if.then43.us22
  %cmp65.us31 = icmp slt i32 %spec.select2.us26, %spec.select1, !dbg !4654
  br i1 %cmp65.us31, label %if.then67.us33, label %cleanup.us34, !dbg !4655

if.then67.us33:                                   ; preds = %if.end56.us29
  call void @llvm.dbg.value(metadata i32 %spec.select2.us26, metadata !4550, metadata !DIExpression()), !dbg !4630
  br label %cleanup.us34, !dbg !4656

cleanup.us34:                                     ; preds = %if.then67.us33, %if.end56.us29, %if.then43.us22
  %cleanup.dest.slot.0.us35 = phi i1 [ false, %if.then43.us22 ], [ true, %if.then67.us33 ], [ true, %if.end56.us29 ]
  %prob.2.us36 = phi i32 [ %prob.0.us14, %if.then43.us22 ], [ %spec.select2.us26, %if.then67.us33 ], [ %prob.0.us14, %if.end56.us29 ], !dbg !4630
  call void @llvm.dbg.value(metadata i32 %prob.2.us36, metadata !4550, metadata !DIExpression()), !dbg !4630
  br i1 %cleanup.dest.slot.0.us35, label %for.inc70.us37, label %for.end71.us-lcssa.us-lcssa.us

for.inc70.us37:                                   ; preds = %cleanup.us34, %land.lhs.true39.us19, %for.body37.us17
  %prob.3.us38 = phi i32 [ %prob.0.us14, %land.lhs.true39.us19 ], [ %prob.0.us14, %for.body37.us17 ], [ %prob.2.us36, %cleanup.us34 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %prob.3.us38, metadata !4550, metadata !DIExpression()), !dbg !4630
  %ep_next.us39 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0.us15, i64 0, i32 0, !dbg !4657
  br label %for.cond35.us12, !dbg !4658, !llvm.loop !4659

for.end71.us-lcssa.us-lcssa.us:                   ; preds = %cleanup.us34, %for.cond35.us12
  %pred2.0.us15.lcssa = phi %struct.edge_prediction* [ %pred2.0.us15, %cleanup.us34 ], [ %pred2.0.us15, %for.cond35.us12 ], !dbg !4637
  %prob.4.ph.ph.us = phi i32 [ %prob.2.us36, %cleanup.us34 ], [ %prob.0.us14, %for.cond35.us12 ]
  br label %for.end71.us-lcssa, !dbg !4661

for.cond35:                                       ; preds = %for.inc70, %if.then34.split.if.then34.split.split_crit_edge
  %pred2.0.in = phi %struct.edge_prediction** [ %20, %if.then34.split.if.then34.split.split_crit_edge ], [ %ep_next, %for.inc70 ]
  %pred2.0 = load %struct.edge_prediction*, %struct.edge_prediction** %pred2.0.in, align 8, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4550, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %pred2.0, metadata !4547, metadata !DIExpression()), !dbg !4630
  %tobool36 = icmp eq %struct.edge_prediction* %pred2.0, null, !dbg !4638
  br i1 %tobool36, label %for.end71.us-lcssa.us-lcssa, label %for.body37, !dbg !4638

for.body37:                                       ; preds = %for.cond35
  %cmp38 = icmp eq %struct.edge_prediction* %pred2.0, %pred.0, !dbg !4639
  br i1 %cmp38, label %for.inc70, label %land.lhs.true39, !dbg !4640

land.lhs.true39:                                  ; preds = %for.body37
  %ep_predictor40 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0, i64 0, i32 2, !dbg !4641
  %30 = load i32, i32* %ep_predictor40, align 8, !dbg !4641
  %cmp42 = icmp eq i32 %30, %21, !dbg !4642
  br i1 %cmp42, label %if.then43, label %for.inc70, !dbg !4643

if.then43:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.value(metadata i32 %22, metadata !4551, metadata !DIExpression()), !dbg !4644
  %ep_edge45 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0, i64 0, i32 1, !dbg !4645
  %31 = load %struct.edge_def*, %struct.edge_def** %ep_edge45, align 8, !dbg !4645
  %cmp46 = icmp eq %struct.edge_def* %31, %first.0.lcssa, !dbg !4647
  %spec.select2 = select i1 %cmp46, i32 %22, i32 %sub, !dbg !4648
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !4551, metadata !DIExpression()), !dbg !4644
  %cmp51 = icmp slt i32 %spec.select2, 5000, !dbg !4649
  %cmp53 = xor i1 %cmp50, %cmp51, !dbg !4650
  br i1 %cmp53, label %cleanup, label %if.end56, !dbg !4651

if.end56:                                         ; preds = %if.then43
  br label %cleanup, !dbg !4655

cleanup:                                          ; preds = %if.end56, %if.then43
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then43 ], [ true, %if.end56 ]
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4550, metadata !DIExpression()), !dbg !4630
  br i1 %cleanup.dest.slot.0, label %for.inc70, label %for.end71.us-lcssa.us-lcssa

for.inc70:                                        ; preds = %for.body37, %land.lhs.true39, %cleanup
  %ep_next = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred2.0, i64 0, i32 0, !dbg !4657
  br label %for.cond35, !dbg !4658, !llvm.loop !4659

for.end71.us-lcssa.us-lcssa:                      ; preds = %for.cond35, %cleanup
  %pred2.0.lcssa41 = phi %struct.edge_prediction* [ %pred2.0, %for.cond35 ], [ %pred2.0, %cleanup ], !dbg !4637
  br label %for.end71.us-lcssa, !dbg !4661

for.end71.us-lcssa:                               ; preds = %for.end71.us-lcssa.us-lcssa.us, %for.end71.us-lcssa.us-lcssa
  %pred2.0.lcssa.ph = phi %struct.edge_prediction* [ %pred2.0.lcssa41, %for.end71.us-lcssa.us-lcssa ], [ %pred2.0.us15.lcssa, %for.end71.us-lcssa.us-lcssa.us ]
  %prob.4.ph = phi i32 [ %spec.select1, %for.end71.us-lcssa.us-lcssa ], [ %prob.4.ph.ph.us, %for.end71.us-lcssa.us-lcssa.us ]
  br label %for.end71, !dbg !4661

for.end71:                                        ; preds = %for.end71.us-lcssa.us, %for.end71.us-lcssa
  %pred2.0.lcssa = phi %struct.edge_prediction* [ %pred2.0.lcssa.ph, %for.end71.us-lcssa ], [ %pred2.0.lcssa.ph.us, %for.end71.us-lcssa.us ], !dbg !4637
  %prob.4 = phi i32 [ %prob.4.ph, %for.end71.us-lcssa ], [ %prob.4.ph.us, %for.end71.us-lcssa.us ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %prob.4, metadata !4550, metadata !DIExpression()), !dbg !4630
  %tobool72 = icmp ne %struct.edge_prediction* %pred2.0.lcssa, null, !dbg !4661
  %spec.select5 = select i1 %tobool72, i32 %best_predictor.0, i32 %21, !dbg !4663
  %spec.select6 = select i1 %tobool72, i32 %best_probability.0, i32 %prob.4, !dbg !4663
  call void @llvm.dbg.value(metadata i32 %spec.select6, metadata !4527, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !4528, metadata !DIExpression()), !dbg !4563
  br label %if.end75, !dbg !4664

if.end75:                                         ; preds = %for.end71, %for.body29
  %best_predictor.2 = phi i32 [ %spec.select5, %for.end71 ], [ %best_predictor.0, %for.body29 ], !dbg !4616
  %best_probability.2 = phi i32 [ %spec.select6, %for.end71 ], [ %best_probability.0, %for.body29 ], !dbg !4617
  call void @llvm.dbg.value(metadata i32 %best_probability.2, metadata !4527, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_predictor.2, metadata !4528, metadata !DIExpression()), !dbg !4563
  %mul = mul nsw i32 %combined_probability.0, %spec.select1, !dbg !4665
  %sub76 = sub nsw i32 10000, %combined_probability.0, !dbg !4666
  %sub77 = sub nsw i32 10000, %spec.select1, !dbg !4667
  %mul78 = mul nsw i32 %sub76, %sub77, !dbg !4668
  %add = add nsw i32 %mul, %mul78, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %add, metadata !4530, metadata !DIExpression()), !dbg !4563
  %cmp79 = icmp eq i32 %add, 0, !dbg !4670
  br i1 %cmp79, label %for.inc90, label %if.else, !dbg !4672

if.else:                                          ; preds = %if.end75
  %conv82 = sitofp i32 %combined_probability.0 to double, !dbg !4673
  %conv83 = sitofp i32 %spec.select1 to double, !dbg !4674
  %mul84 = fmul double %conv82, %conv83, !dbg !4675
  %mul85 = fmul double %mul84, 1.000000e+04, !dbg !4676
  %conv86 = sitofp i32 %add to double, !dbg !4677
  %div = fdiv double %mul85, %conv86, !dbg !4678
  %add87 = fadd double %div, 5.000000e-01, !dbg !4679
  %conv88 = fptosi double %add87 to i32, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %conv88, metadata !4529, metadata !DIExpression()), !dbg !4563
  br label %for.inc90

for.inc90:                                        ; preds = %if.else, %if.end75
  %combined_probability.1 = phi i32 [ %conv88, %if.else ], [ 5000, %if.end75 ], !dbg !4681
  call void @llvm.dbg.value(metadata i32 %combined_probability.1, metadata !4529, metadata !DIExpression()), !dbg !4563
  %ep_next91 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.0, i64 0, i32 0, !dbg !4682
  br label %for.cond27, !dbg !4683, !llvm.loop !4684

if.end93.loopexit:                                ; preds = %for.cond27
  %found.0.lcssa = phi i8 [ %found.0, %for.cond27 ], !dbg !4563
  %combined_probability.0.lcssa = phi i32 [ %combined_probability.0, %for.cond27 ], !dbg !4563
  %best_predictor.0.lcssa = phi i32 [ %best_predictor.0, %for.cond27 ], !dbg !4616
  %best_probability.0.lcssa = phi i32 [ %best_probability.0, %for.cond27 ], !dbg !4617
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !4532, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %combined_probability.0.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_predictor.0.lcssa, metadata !4528, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_probability.0.lcssa, metadata !4527, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !4532, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %combined_probability.0.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_predictor.0.lcssa, metadata !4528, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_probability.0.lcssa, metadata !4527, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %found.0.lcssa, metadata !4532, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %combined_probability.0.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_predictor.0.lcssa, metadata !4528, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_probability.0.lcssa, metadata !4527, metadata !DIExpression()), !dbg !4563
  br label %if.end93, !dbg !4686

if.end93:                                         ; preds = %if.end93.loopexit, %if.end23
  %found.1 = phi i8 [ 0, %if.end23 ], [ %found.0.lcssa, %if.end93.loopexit ], !dbg !4688
  %combined_probability.2 = phi i32 [ 5000, %if.end23 ], [ %combined_probability.0.lcssa, %if.end93.loopexit ], !dbg !4689
  %best_predictor.3 = phi i32 [ 28, %if.end23 ], [ %best_predictor.0.lcssa, %if.end93.loopexit ], !dbg !4616
  %best_probability.3 = phi i32 [ 5000, %if.end23 ], [ %best_probability.0.lcssa, %if.end93.loopexit ], !dbg !4617
  call void @llvm.dbg.value(metadata i32 %best_probability.3, metadata !4527, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %best_predictor.3, metadata !4528, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %combined_probability.2, metadata !4529, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %found.1, metadata !4532, metadata !DIExpression()), !dbg !4563
  %idxprom = zext i32 %best_predictor.3 to i64, !dbg !4686
  %32 = lshr i64 7920, %idxprom, !dbg !4690
  %33 = trunc i64 %32 to i8, !dbg !4691
  %34 = and i8 %33, 1, !dbg !4691
  call void @llvm.dbg.value(metadata i8 %34, metadata !4531, metadata !DIExpression()), !dbg !4563
  %tobool99 = icmp eq i8 %found.1, 0, !dbg !4692
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4694
  br i1 %tobool99, label %if.then100, label %if.else101, !dbg !4695

if.then100:                                       ; preds = %if.end93
  call fastcc void @dump_prediction(%struct._IO_FILE* %35, i32 3, i32 %combined_probability.2, %struct.basic_block_def* %bb, i32 1) #7, !dbg !4696
  br label %if.end104, !dbg !4696

if.else101:                                       ; preds = %if.end93
  %36 = xor i8 %34, 1, !dbg !4697
  %37 = zext i8 %36 to i32, !dbg !4697
  call fastcc void @dump_prediction(%struct._IO_FILE* %35, i32 1, i32 %combined_probability.2, %struct.basic_block_def* %bb, i32 %37) #7, !dbg !4699
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4700
  %conv103 = zext i8 %34 to i32, !dbg !4701
  call fastcc void @dump_prediction(%struct._IO_FILE* %38, i32 2, i32 %best_probability.3, %struct.basic_block_def* %bb, i32 %conv103) #7, !dbg !4702
  br label %if.end104

if.end104:                                        ; preds = %if.else101, %if.then100
  %tobool105 = icmp eq i8 %34, 0, !dbg !4703
  %spec.select8 = select i1 %tobool105, i32 %combined_probability.2, i32 %best_probability.3, !dbg !4705
  call void @llvm.dbg.value(metadata i32 %spec.select8, metadata !4529, metadata !DIExpression()), !dbg !4563
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4706
  call fastcc void @dump_prediction(%struct._IO_FILE* %39, i32 0, i32 %spec.select8, %struct.basic_block_def* %bb, i32 1) #7, !dbg !4707
  br i1 %tobool25, label %if.end133, label %if.then109, !dbg !4708

if.then109:                                       ; preds = %if.end104
  %40 = bitcast i8** %call24 to %struct.edge_prediction**, !dbg !4709
  %41 = xor i8 %34, 1, !dbg !4710
  %42 = zext i8 %41 to i32, !dbg !4710
  br label %for.cond110, !dbg !4711

for.cond110:                                      ; preds = %cond.end, %if.then109
  %pred.1.in = phi %struct.edge_prediction** [ %40, %if.then109 ], [ %ep_next131, %cond.end ]
  %pred.1 = load %struct.edge_prediction*, %struct.edge_prediction** %pred.1.in, align 8, !dbg !4712
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %pred.1, metadata !4533, metadata !DIExpression()), !dbg !4563
  %tobool111 = icmp eq %struct.edge_prediction* %pred.1, null, !dbg !4713
  br i1 %tobool111, label %if.end133.loopexit, label %for.body112, !dbg !4713

for.body112:                                      ; preds = %for.cond110
  %ep_predictor114 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.1, i64 0, i32 2, !dbg !4714
  %43 = load i32, i32* %ep_predictor114, align 8, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %43, metadata !4556, metadata !DIExpression()), !dbg !4710
  %ep_probability116 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.1, i64 0, i32 3, !dbg !4715
  %44 = load i32, i32* %ep_probability116, align 4, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %44, metadata !4562, metadata !DIExpression()), !dbg !4710
  %ep_edge117 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.1, i64 0, i32 1, !dbg !4716
  %45 = load %struct.edge_def*, %struct.edge_def** %ep_edge117, align 8, !dbg !4716
  %46 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4718
  %tobool119 = icmp eq %struct.VEC_edge_gc* %46, null, !dbg !4718
  br i1 %tobool119, label %cond.end, label %cond.true, !dbg !4718

cond.true:                                        ; preds = %for.body112
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %46, i64 0, i32 0, !dbg !4718
  br label %cond.end, !dbg !4718

cond.end:                                         ; preds = %for.body112, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %for.body112 ], !dbg !4718
  %call121 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #7, !dbg !4718
  %cmp122 = icmp eq %struct.edge_def* %45, %call121, !dbg !4719
  %sub125 = sub nsw i32 10000, %44, !dbg !4720
  %spec.select9 = select i1 %cmp122, i32 %44, i32 %sub125, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %spec.select9, metadata !4562, metadata !DIExpression()), !dbg !4710
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4722
  %cmp128 = icmp eq i32 %best_predictor.3, %43, !dbg !4723
  %cmp12811 = zext i1 %cmp128 to i32, !dbg !4723
  %lor.ext = or i32 %42, %cmp12811, !dbg !4723
  call fastcc void @dump_prediction(%struct._IO_FILE* %47, i32 %43, i32 %spec.select9, %struct.basic_block_def* %bb, i32 %lor.ext) #7, !dbg !4724
  %ep_next131 = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.1, i64 0, i32 0, !dbg !4725
  br label %for.cond110, !dbg !4726, !llvm.loop !4727

if.end133.loopexit:                               ; preds = %for.cond110
  br label %if.end133, !dbg !4729

if.end133:                                        ; preds = %if.end133.loopexit, %if.end104
  call fastcc void @clear_bb_predictions(%struct.basic_block_def* %bb) #7, !dbg !4729
  %count134 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !4730
  %48 = load i64, i64* %count134, align 8, !dbg !4730
  %tobool135 = icmp eq i64 %48, 0, !dbg !4732
  br i1 %tobool135, label %if.then136, label %cleanup141, !dbg !4733

if.then136:                                       ; preds = %if.end133
  %probability137 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %first.0.lcssa, i64 0, i32 8, !dbg !4734
  store i32 %spec.select8, i32* %probability137, align 4, !dbg !4736
  %sub138 = sub nsw i32 10000, %spec.select8, !dbg !4737
  %probability139 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %second.0.lcssa, i64 0, i32 8, !dbg !4738
  store i32 %sub138, i32* %probability139, align 4, !dbg !4739
  br label %cleanup141, !dbg !4740

cleanup141:                                       ; preds = %if.end13, %if.end133, %if.then136, %if.then15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4741
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4741
  ret void, !dbg !4741
}

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @estimate_bb_frequencies() local_unnamed_addr #5 !dbg !2445 {
entry:
  %freq_max = alloca %struct.sreal, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp63 = alloca %struct.sreal, align 8
  %0 = bitcast %struct.sreal* %freq_max to i8*, !dbg !4742
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4742
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4743
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !4743
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4743
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 7, !dbg !4743
  %3 = load i32, i32* %x_profile_status, align 8, !dbg !4743
  %cmp = icmp eq i32 %3, 2, !dbg !4744
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !4745

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @counts_to_freqs() #7, !dbg !4746
  %tobool = icmp eq i32 %call, 0, !dbg !4746
  br i1 %tobool, label %if.then, label %if.end74, !dbg !4747

if.then:                                          ; preds = %lor.lhs.false, %entry
  %.b = load i1, i1* @estimate_bb_frequencies.real_values_initialized, align 4, !dbg !4748
  br i1 %.b, label %if.end, label %if.then2, !dbg !4750

if.then2:                                         ; preds = %if.then
  store i1 true, i1* @estimate_bb_frequencies.real_values_initialized, align 4, !dbg !4751
  %call3 = tail call %struct.sreal* @sreal_init(%struct.sreal* nonnull @real_zero, i64 0, i32 0) #6, !dbg !4753
  %call4 = tail call %struct.sreal* @sreal_init(%struct.sreal* nonnull @real_one, i64 1, i32 0) #6, !dbg !4754
  %call5 = tail call %struct.sreal* @sreal_init(%struct.sreal* nonnull @real_br_prob_base, i64 10000, i32 0) #6, !dbg !4755
  %call6 = tail call %struct.sreal* @sreal_init(%struct.sreal* nonnull @real_bb_freq_max, i64 10000, i32 0) #6, !dbg !4756
  %call7 = tail call %struct.sreal* @sreal_init(%struct.sreal* nonnull @real_one_half, i64 1, i32 -1) #6, !dbg !4757
  %call8 = tail call %struct.sreal* @sreal_div(%struct.sreal* nonnull @real_inv_br_prob_base, %struct.sreal* nonnull @real_one, %struct.sreal* nonnull @real_br_prob_base) #6, !dbg !4758
  %call9 = tail call %struct.sreal* @sreal_sub(%struct.sreal* nonnull @real_almost_one, %struct.sreal* nonnull @real_one, %struct.sreal* nonnull @real_inv_br_prob_base) #6, !dbg !4759
  br label %if.end, !dbg !4760

if.end:                                           ; preds = %if.then, %if.then2
  %call10 = tail call zeroext i8 @mark_dfs_back_edges() #6, !dbg !4761
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4762
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4762
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !4762
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !4762
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4762
  %call13 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %6) #7, !dbg !4763
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call13, i64 0, i32 8, !dbg !4764
  store i32 10000, i32* %probability, align 4, !dbg !4765
  tail call void @alloc_aux_for_blocks(i32 32) #6, !dbg !4766
  tail call void @alloc_aux_for_edges(i32 24) #6, !dbg !4767
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4768
  %cfg15 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !4768
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg15, align 8, !dbg !4768
  %x_entry_block_ptr16 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !4768
  %9 = bitcast %struct.edge_def** %e to i8*, !dbg !4769
  %10 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4769
  %11 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4770
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4770
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4770
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4772
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4772
  br label %for.cond, !dbg !4768

for.cond:                                         ; preds = %for.end, %if.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr16, %if.end ], [ %next_bb, %for.end ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4774
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2449, metadata !DIExpression()), !dbg !4775
  %cmp17 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !4776
  br i1 %cmp17, label %for.end31, label %for.body, !dbg !4768

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4777
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4778
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8, !dbg !4779
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !4779
  %call18 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4779
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call18, 0, !dbg !4779
  store i32 %16, i32* %12, align 8, !dbg !4779
  %17 = extractvalue { i32, %struct.VEC_edge_gc** } %call18, 1, !dbg !4779
  store %struct.VEC_edge_gc** %17, %struct.VEC_edge_gc*** %13, align 8, !dbg !4779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !4779
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8, !dbg !4779
  br label %for.cond19, !dbg !4779

for.cond19:                                       ; preds = %for.body22, %for.body
  %18 = load i32, i32* %14, align 8, !dbg !4780
  %19 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %15, align 8, !dbg !4780
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2451, metadata !DIExpression(DW_OP_deref)), !dbg !4769
  %call20 = call fastcc zeroext i8 @ei_cond(i32 %18, %struct.VEC_edge_gc** %19, %struct.edge_def** nonnull %e) #7, !dbg !4780
  %tobool21 = icmp eq i8 %call20, 0, !dbg !4779
  br i1 %tobool21, label %for.end, label %for.body22, !dbg !4779

for.body22:                                       ; preds = %for.cond19
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4781
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !2451, metadata !DIExpression()), !dbg !4769
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 3, !dbg !4781
  %21 = bitcast i8** %aux to %struct.edge_info_def**, !dbg !4781
  %22 = load %struct.edge_info_def*, %struct.edge_info_def** %21, align 8, !dbg !4781
  %back_edge_prob = getelementptr inbounds %struct.edge_info_def, %struct.edge_info_def* %22, i64 0, i32 0, !dbg !4783
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !2451, metadata !DIExpression()), !dbg !4769
  %probability23 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 8, !dbg !4784
  %23 = load i32, i32* %probability23, align 4, !dbg !4784
  %conv = sext i32 %23 to i64, !dbg !4785
  %call24 = call %struct.sreal* @sreal_init(%struct.sreal* %back_edge_prob, i64 %conv, i32 0) #6, !dbg !4786
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4787
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !2451, metadata !DIExpression()), !dbg !4769
  %aux25 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 3, !dbg !4787
  %25 = bitcast i8** %aux25 to %struct.edge_info_def**, !dbg !4787
  %26 = load %struct.edge_info_def*, %struct.edge_info_def** %25, align 8, !dbg !4787
  %back_edge_prob26 = getelementptr inbounds %struct.edge_info_def, %struct.edge_info_def* %26, i64 0, i32 0, !dbg !4788
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !2451, metadata !DIExpression()), !dbg !4769
  %call29 = call %struct.sreal* @sreal_mul(%struct.sreal* %back_edge_prob26, %struct.sreal* %back_edge_prob26, %struct.sreal* nonnull @real_inv_br_prob_base) #6, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2457, metadata !DIExpression(DW_OP_deref)), !dbg !4769
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4780
  br label %for.cond19, !dbg !4780, !llvm.loop !4790

for.end:                                          ; preds = %for.cond19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4792
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !4792
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !4776
  br label %for.cond, !dbg !4776, !llvm.loop !4793

for.end31:                                        ; preds = %for.cond
  call fastcc void @estimate_loops() #7, !dbg !4795
  %call32 = call i8* @memcpy(i8* nonnull %0, i8* bitcast (%struct.sreal* @real_zero to i8*), i64 16) #6, !dbg !4796
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4797
  %cfg34 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, i32 1, !dbg !4797
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg34, align 8, !dbg !4797
  %x_entry_block_ptr35 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i64 0, i32 0, !dbg !4797
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr35, align 8, !dbg !4797
  br label %for.cond37, !dbg !4797

for.cond37:                                       ; preds = %for.inc52, %for.end31
  %30 = phi %struct.control_flow_graph* [ %28, %for.end31 ], [ %.pre1, %for.inc52 ], !dbg !4799
  %.pn = phi %struct.basic_block_def* [ %29, %for.end31 ], [ %bb.1, %for.inc52 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4801
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !4801
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !2449, metadata !DIExpression()), !dbg !4775
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i64 0, i32 1, !dbg !4799
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4799
  %cmp40 = icmp eq %struct.basic_block_def* %bb.1, %31, !dbg !4799
  br i1 %cmp40, label %for.end54, label %for.body42, !dbg !4797

for.body42:                                       ; preds = %for.cond37
  %aux43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 2, !dbg !4802
  %32 = bitcast i8** %aux43 to %struct.block_info_def**, !dbg !4802
  %33 = load %struct.block_info_def*, %struct.block_info_def** %32, align 8, !dbg !4802
  %frequency = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %33, i64 0, i32 0, !dbg !4804
  call void @llvm.dbg.value(metadata %struct.sreal* %freq_max, metadata !2450, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  %call44 = call i32 @sreal_compare(%struct.sreal* nonnull %freq_max, %struct.sreal* %frequency) #6, !dbg !4805
  %cmp45 = icmp slt i32 %call44, 0, !dbg !4806
  br i1 %cmp45, label %if.then47, label %for.inc52, !dbg !4807

if.then47:                                        ; preds = %for.body42
  %34 = load i8*, i8** %aux43, align 8, !dbg !4808
  %call50 = call i8* @memcpy(i8* nonnull %0, i8* %34, i64 16) #6, !dbg !4809
  br label %for.inc52, !dbg !4809

for.inc52:                                        ; preds = %for.body42, %if.then47
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4799
  %cfg39.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4810
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg39.phi.trans.insert, align 8, !dbg !4799
  br label %for.cond37, !dbg !4799, !llvm.loop !4811

for.end54:                                        ; preds = %for.cond37
  call void @llvm.dbg.value(metadata %struct.sreal* %freq_max, metadata !2450, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  call void @llvm.dbg.value(metadata %struct.sreal* %freq_max, metadata !2450, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  %call55 = call %struct.sreal* @sreal_div(%struct.sreal* nonnull %freq_max, %struct.sreal* nonnull @real_bb_freq_max, %struct.sreal* nonnull %freq_max) #6, !dbg !4813
  %35 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4814
  %cfg57 = getelementptr inbounds %struct.function, %struct.function* %35, i64 0, i32 1, !dbg !4814
  %36 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg57, align 8, !dbg !4814
  %x_entry_block_ptr58 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %36, i64 0, i32 0, !dbg !4814
  %37 = bitcast %struct.sreal* %tmp63 to i8*, !dbg !4815
  br label %for.cond59, !dbg !4814

for.cond59:                                       ; preds = %for.body62, %for.end54
  %bb.2.in = phi %struct.basic_block_def** [ %x_entry_block_ptr58, %for.end54 ], [ %next_bb72, %for.body62 ]
  %bb.2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.2.in, align 8, !dbg !4816
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !2449, metadata !DIExpression()), !dbg !4775
  %cmp60 = icmp eq %struct.basic_block_def* %bb.2, null, !dbg !4817
  br i1 %cmp60, label %for.end73, label %for.body62, !dbg !4814

for.body62:                                       ; preds = %for.cond59
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8, !dbg !4818
  %aux64 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 2, !dbg !4819
  %38 = bitcast i8** %aux64 to %struct.block_info_def**, !dbg !4819
  %39 = load %struct.block_info_def*, %struct.block_info_def** %38, align 8, !dbg !4819
  %frequency65 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %39, i64 0, i32 0, !dbg !4820
  call void @llvm.dbg.value(metadata %struct.sreal* %freq_max, metadata !2450, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp63, metadata !2464, metadata !DIExpression(DW_OP_deref)), !dbg !4815
  %call66 = call %struct.sreal* @sreal_mul(%struct.sreal* nonnull %tmp63, %struct.sreal* %frequency65, %struct.sreal* nonnull %freq_max) #6, !dbg !4821
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp63, metadata !2464, metadata !DIExpression(DW_OP_deref)), !dbg !4815
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp63, metadata !2464, metadata !DIExpression(DW_OP_deref)), !dbg !4815
  %call67 = call %struct.sreal* @sreal_add(%struct.sreal* nonnull %tmp63, %struct.sreal* nonnull %tmp63, %struct.sreal* nonnull @real_one_half) #6, !dbg !4822
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp63, metadata !2464, metadata !DIExpression(DW_OP_deref)), !dbg !4815
  %call68 = call i64 @sreal_to_int(%struct.sreal* nonnull %tmp63) #6, !dbg !4823
  %conv69 = trunc i64 %call68 to i32, !dbg !4823
  %frequency70 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 11, !dbg !4824
  store i32 %conv69, i32* %frequency70, align 8, !dbg !4825
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8, !dbg !4826
  %next_bb72 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 6, !dbg !4817
  br label %for.cond59, !dbg !4817, !llvm.loop !4827

for.end73:                                        ; preds = %for.cond59
  call void @free_aux_for_blocks() #6, !dbg !4829
  call void @free_aux_for_edges() #6, !dbg !4830
  br label %if.end74, !dbg !4831

if.end74:                                         ; preds = %lor.lhs.false, %for.end73
  call void @compute_function_frequency() #7, !dbg !4832
  %40 = load i32, i32* @flag_reorder_functions, align 4, !dbg !4833
  %tobool75 = icmp eq i32 %40, 0, !dbg !4833
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !4835

if.then76:                                        ; preds = %if.end74
  call fastcc void @choose_function_section() #7, !dbg !4836
  br label %if.end77, !dbg !4836

if.end77:                                         ; preds = %if.end74, %if.then76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4837
  ret void, !dbg !4837
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @remove_fake_exit_edges() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @counts_to_freqs() local_unnamed_addr #5 !dbg !4838 {
entry:
  call void @llvm.dbg.value(metadata i64 0, metadata !4841, metadata !DIExpression()), !dbg !4843
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4844
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4844
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4844
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4844
  br label %for.cond, !dbg !4844

for.cond:                                         ; preds = %for.inc, %entry
  %true_count_max.0 = phi i64 [ 0, %entry ], [ %cond, %for.inc ], !dbg !4843
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4846
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4842, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i64 %true_count_max.0, metadata !4841, metadata !DIExpression()), !dbg !4843
  %cmp = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !4847
  br i1 %cmp, label %for.end, label %for.body, !dbg !4844

for.body:                                         ; preds = %for.cond
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 8, !dbg !4849
  %2 = load i64, i64* %count, align 8, !dbg !4849
  %cmp1 = icmp sgt i64 %2, %true_count_max.0, !dbg !4849
  br i1 %cmp1, label %cond.true, label %for.inc, !dbg !4849

cond.true:                                        ; preds = %for.body
  br label %for.inc, !dbg !4849

for.inc:                                          ; preds = %cond.true, %for.body
  %cond = phi i64 [ %2, %cond.true ], [ %true_count_max.0, %for.body ], !dbg !4849
  call void @llvm.dbg.value(metadata i64 %cond, metadata !4841, metadata !DIExpression()), !dbg !4843
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !4847
  br label %for.cond, !dbg !4847, !llvm.loop !4850

for.end:                                          ; preds = %for.cond
  %true_count_max.0.lcssa = phi i64 [ %true_count_max.0, %for.cond ], !dbg !4843
  call void @llvm.dbg.value(metadata i64 %true_count_max.0.lcssa, metadata !4841, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i64 %true_count_max.0.lcssa, metadata !4841, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i64 %true_count_max.0.lcssa, metadata !4841, metadata !DIExpression()), !dbg !4843
  %cmp3 = icmp sgt i64 %true_count_max.0.lcssa, 1, !dbg !4852
  %true_count_max.0. = select i1 %cmp3, i64 %true_count_max.0.lcssa, i64 1, !dbg !4852
  call void @llvm.dbg.value(metadata i64 %true_count_max.0., metadata !4840, metadata !DIExpression()), !dbg !4843
  %div = lshr i64 %true_count_max.0., 1, !dbg !4853
  br label %for.cond11, !dbg !4856

for.cond11:                                       ; preds = %for.body13, %for.end
  %bb.1.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %for.end ], [ %next_bb17, %for.body13 ]
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !4857
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !4842, metadata !DIExpression()), !dbg !4843
  %cmp12 = icmp eq %struct.basic_block_def* %bb.1, null, !dbg !4858
  br i1 %cmp12, label %for.end18, label %for.body13, !dbg !4856

for.body13:                                       ; preds = %for.cond11
  %count14 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 8, !dbg !4859
  %3 = load i64, i64* %count14, align 8, !dbg !4859
  %mul = mul nsw i64 %3, 10000, !dbg !4860
  %add = add nsw i64 %mul, %div, !dbg !4861
  %div15 = sdiv i64 %add, %true_count_max.0., !dbg !4862
  %conv = trunc i64 %div15 to i32, !dbg !4863
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 11, !dbg !4864
  store i32 %conv, i32* %frequency, align 8, !dbg !4865
  %next_bb17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 6, !dbg !4858
  br label %for.cond11, !dbg !4858, !llvm.loop !4866

for.end18:                                        ; preds = %for.cond11
  %conv19 = trunc i64 %true_count_max.0.lcssa to i32, !dbg !4868
  ret i32 %conv19, !dbg !4869
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @expensive_function_p(i32 %threshold) local_unnamed_addr #5 !dbg !4870 {
entry:
  call void @llvm.dbg.value(metadata i32 %threshold, metadata !4872, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata i32 0, metadata !4873, metadata !DIExpression()), !dbg !4880
  %cmp = icmp slt i32 %threshold, 10001, !dbg !4881
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4881

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 2047, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4881
  br label %cond.end, !dbg !4881

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4882
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4882
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4882
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !4882
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4882
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 11, !dbg !4884
  %3 = load i32, i32* %frequency, align 8, !dbg !4884
  %cmp1 = icmp eq i32 %3, 0, !dbg !4885
  br i1 %cmp1, label %cleanup30, label %if.end, !dbg !4886

if.end:                                           ; preds = %cond.end
  %mul = mul nsw i32 %3, %threshold, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4875, metadata !DIExpression()), !dbg !4880
  br label %for.cond, !dbg !4888

for.cond:                                         ; preds = %for.inc27, %if.end
  %4 = phi %struct.control_flow_graph* [ %1, %if.end ], [ %.pre2, %for.inc27 ], !dbg !4889
  %.pn = phi %struct.basic_block_def* [ %2, %if.end ], [ %bb.0, %for.inc27 ]
  %sum.0 = phi i32 [ 0, %if.end ], [ %sum.3, %for.inc27 ], !dbg !4880
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4890
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %sum.0, metadata !4873, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4874, metadata !DIExpression()), !dbg !4880
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !4889
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4889
  %cmp11 = icmp eq %struct.basic_block_def* %bb.0, %5, !dbg !4889
  br i1 %cmp11, label %cleanup30.loopexit, label %for.body, !dbg !4888

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !4891
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4891
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4891
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 0, !dbg !4891
  %frequency18 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 11, !dbg !4893
  br label %for.cond12, !dbg !4897

for.cond12:                                       ; preds = %for.inc, %for.body
  %7 = phi %struct.rtl_bb_info* [ %6, %for.body ], [ %.pre3, %for.inc ], !dbg !4898
  %sum.1 = phi i32 [ %sum.0, %for.body ], [ %sum.2, %for.inc ], !dbg !4880
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx26, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !4899
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4876, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i32 %sum.1, metadata !4873, metadata !DIExpression()), !dbg !4880
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !4898
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4898
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4898
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !4898
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4898
  %cmp15 = icmp eq %struct.rtx_def* %insn.0, %10, !dbg !4901
  br i1 %cmp15, label %cleanup, label %for.body16, !dbg !4902

for.body16:                                       ; preds = %for.cond12
  %call = tail call i32 @active_insn_p(%struct.rtx_def* %insn.0) #6, !dbg !4903
  %tobool = icmp eq i32 %call, 0, !dbg !4903
  br i1 %tobool, label %for.inc, label %if.then17, !dbg !4904

if.then17:                                        ; preds = %for.body16
  %11 = load i32, i32* %frequency18, align 8, !dbg !4893
  %add = add i32 %sum.1, %11, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %add, metadata !4873, metadata !DIExpression()), !dbg !4880
  %cmp19 = icmp ugt i32 %add, %mul, !dbg !4906
  br i1 %cmp19, label %cleanup, label %for.inc, !dbg !4908

for.inc:                                          ; preds = %for.body16, %if.then17
  %sum.2 = phi i32 [ %sum.1, %for.body16 ], [ %add, %if.then17 ], !dbg !4880
  call void @llvm.dbg.value(metadata i32 %sum.2, metadata !4873, metadata !DIExpression()), !dbg !4880
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4909
  %rt_rtx26 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !4909
  %.pre3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4898
  br label %for.cond12, !dbg !4910, !llvm.loop !4911

cleanup:                                          ; preds = %for.cond12, %if.then17
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then17 ], [ true, %for.cond12 ]
  %sum.3 = phi i32 [ %add, %if.then17 ], [ %sum.1, %for.cond12 ], !dbg !4880
  call void @llvm.dbg.value(metadata i32 %sum.3, metadata !4873, metadata !DIExpression()), !dbg !4880
  br i1 %cleanup.dest.slot.0, label %for.inc27, label %cleanup30.loopexit

for.inc27:                                        ; preds = %cleanup
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4889
  %cfg10.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4913
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10.phi.trans.insert, align 8, !dbg !4889
  br label %for.cond, !dbg !4889, !llvm.loop !4914

cleanup30.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.2.ph = phi i8 [ 0, %for.cond ], [ 1, %cleanup ]
  br label %cleanup30, !dbg !4916

cleanup30:                                        ; preds = %cleanup30.loopexit, %cond.end
  %retval.2 = phi i8 [ 1, %cond.end ], [ %retval.2.ph, %cleanup30.loopexit ], !dbg !4880
  ret i8 %retval.2, !dbg !4916
}

declare dso_local i32 @active_insn_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.sreal* @sreal_init(%struct.sreal*, i64, i32) local_unnamed_addr #2

declare dso_local %struct.sreal* @sreal_div(%struct.sreal*, %struct.sreal*, %struct.sreal*) local_unnamed_addr #2

declare dso_local %struct.sreal* @sreal_sub(%struct.sreal*, %struct.sreal*, %struct.sreal*) local_unnamed_addr #2

declare dso_local zeroext i8 @mark_dfs_back_edges() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4917 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4921, metadata !DIExpression()), !dbg !4922
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !4923
  %tobool = icmp eq i8 %call, 0, !dbg !4923
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4923

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4923
  br label %cond.end, !dbg !4923

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4924
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4924
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4924
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !4924

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4924
  br label %cond.end5, !dbg !4924

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !4924
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !4924
  ret %struct.edge_def* %call7, !dbg !4925
}

declare dso_local void @alloc_aux_for_blocks(i32) local_unnamed_addr #2

declare dso_local void @alloc_aux_for_edges(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !4926 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !4930, metadata !DIExpression()), !dbg !4932
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !4933
  store i32 0, i32* %index, align 8, !dbg !4934
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !4935
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !4936
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !4937
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !4937
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !4937
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !4938 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !4944, metadata !DIExpression()), !dbg !4945
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !4946
  %tobool = icmp eq i8 %call, 0, !dbg !4946
  br i1 %tobool, label %if.then, label %if.else, !dbg !4948

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !4949
  br label %return, !dbg !4951

if.else:                                          ; preds = %entry
  br label %return, !dbg !4952

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !4954
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !4954
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !4954
  ret i8 %retval.0, !dbg !4955
}

declare dso_local %struct.sreal* @sreal_mul(%struct.sreal*, %struct.sreal*, %struct.sreal*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !4956 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !4961, metadata !DIExpression()), !dbg !4962
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !4963
  %0 = load i32, i32* %index, align 8, !dbg !4963
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !4963
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4963
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !4963
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4963
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4963

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !4963
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !4963
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !4963
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4963
  br label %cond.end, !dbg !4963

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4963
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4963
  %cmp = icmp ult i32 %0, %call2, !dbg !4963
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4963

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4963
  br label %cond.end5, !dbg !4963

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !4964
  %inc = add i32 %5, 1, !dbg !4964
  store i32 %inc, i32* %index, align 8, !dbg !4964
  ret void, !dbg !4965
}

; Function Attrs: nounwind uwtable
define internal fastcc void @estimate_loops() unnamed_addr #5 !dbg !4966 {
entry:
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4970
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4968, metadata !DIExpression()), !dbg !4971
  %call1 = tail call fastcc i32 @number_of_loops() #7, !dbg !4972
  %cmp = icmp ugt i32 %call1, 1, !dbg !4974
  br i1 %cmp, label %if.then, label %if.end, !dbg !4975

if.then:                                          ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4976
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4976
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4976
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 3, !dbg !4977
  %2 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !4977
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 8, !dbg !4978
  %3 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !4978
  tail call fastcc void @estimate_loops_at_level(%struct.loop* %3) #7, !dbg !4979
  br label %if.end, !dbg !4979

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4980
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4980
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4980
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !4980
  br label %for.cond, !dbg !4980

for.cond:                                         ; preds = %for.body, %if.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.end ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4982
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4969, metadata !DIExpression()), !dbg !4971
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !4980
  br i1 %tobool, label %for.end, label %for.body, !dbg !4980

for.body:                                         ; preds = %for.cond
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !4983
  %6 = load i32, i32* %index, align 8, !dbg !4983
  %call3 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %6) #6, !dbg !4986
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !4987
  br label %for.cond, !dbg !4987, !llvm.loop !4988

for.end:                                          ; preds = %for.cond
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4990
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !4990
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !4990
  %x_entry_block_ptr6 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !4990
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr6, align 8, !dbg !4990
  tail call fastcc void @propagate_freq(%struct.basic_block_def* %9, %struct.bitmap_head_def* %call) #7, !dbg !4991
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !4992
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4968, metadata !DIExpression()), !dbg !4971
  ret void, !dbg !4993
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i32 @sreal_compare(%struct.sreal*, %struct.sreal*) local_unnamed_addr #2

declare dso_local %struct.sreal* @sreal_add(%struct.sreal*, %struct.sreal*, %struct.sreal*) local_unnamed_addr #2

declare dso_local i64 @sreal_to_int(%struct.sreal*) local_unnamed_addr #2

declare dso_local void @free_aux_for_blocks() local_unnamed_addr #2

declare dso_local void @free_aux_for_edges() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @compute_function_frequency() local_unnamed_addr #5 !dbg !4994 {
entry:
  %0 = load %struct.gcov_ctr_summary*, %struct.gcov_ctr_summary** @profile_info, align 8, !dbg !4997
  %tobool = icmp ne %struct.gcov_ctr_summary* %0, null, !dbg !4997
  %1 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !4999
  %tobool1 = icmp ne i32 %1, 0, !dbg !4999
  %or.cond = and i1 %tobool, %tobool1, !dbg !5000
  br i1 %or.cond, label %if.end13, label %if.then, !dbg !5000

if.then:                                          ; preds = %entry
  %2 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !5001
  %attributes = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %2, i64 0, i32 6, !dbg !5001
  %3 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !5001
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %union.tree_node* %3) #6, !dbg !5004
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !5005
  br i1 %cmp, label %if.else, label %if.then2, !dbg !5006

if.then2:                                         ; preds = %if.then
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5007
  %function_frequency = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 20, !dbg !5008
  %bf.load = load i32, i32* %function_frequency, align 8, !dbg !5009
  %bf.clear = and i32 %bf.load, -196609, !dbg !5009
  store i32 %bf.clear, i32* %function_frequency, align 8, !dbg !5009
  br label %cleanup.cont, !dbg !5007

if.else:                                          ; preds = %if.then
  %5 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_common**), align 8, !dbg !5010
  %attributes4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %5, i64 0, i32 6, !dbg !5010
  %6 = load %union.tree_node*, %union.tree_node** %attributes4, align 8, !dbg !5010
  %call5 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %union.tree_node* %6) #6, !dbg !5012
  %cmp6 = icmp eq %union.tree_node* %call5, null, !dbg !5013
  br i1 %cmp6, label %cleanup.cont, label %if.then7, !dbg !5014

if.then7:                                         ; preds = %if.else
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5015
  %function_frequency9 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 20, !dbg !5016
  %bf.load10 = load i32, i32* %function_frequency9, align 8, !dbg !5017
  %bf.clear11 = and i32 %bf.load10, -196609, !dbg !5017
  %bf.set = or i32 %bf.clear11, 131072, !dbg !5017
  store i32 %bf.set, i32* %function_frequency9, align 8, !dbg !5017
  br label %cleanup.cont, !dbg !5015

if.end13:                                         ; preds = %entry
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5018
  %function_frequency15 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 20, !dbg !5019
  %bf.load16 = load i32, i32* %function_frequency15, align 8, !dbg !5020
  %bf.clear17 = and i32 %bf.load16, -196609, !dbg !5020
  store i32 %bf.clear17, i32* %function_frequency15, align 8, !dbg !5020
  %cfg = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !5021
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5021
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 0, !dbg !5021
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5021
  br label %for.cond, !dbg !5021

for.cond:                                         ; preds = %for.inc, %if.end13
  %11 = phi %struct.control_flow_graph* [ %9, %if.end13 ], [ %.pre1, %for.inc ], !dbg !5023
  %.pn = phi %struct.basic_block_def* [ %10, %if.end13 ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !5025
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5025
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4996, metadata !DIExpression()), !dbg !5026
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 1, !dbg !5023
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5023
  %cmp21 = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !5023
  br i1 %cmp21, label %cleanup.cont.loopexit, label %for.body, !dbg !5021

for.body:                                         ; preds = %for.cond
  %call22 = tail call zeroext i8 @maybe_hot_bb_p(%struct.basic_block_def* %bb.0) #7, !dbg !5027
  %tobool23 = icmp eq i8 %call22, 0, !dbg !5027
  br i1 %tobool23, label %if.end30, label %if.then24, !dbg !5030

if.then24:                                        ; preds = %for.body
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5031
  %function_frequency26 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 20, !dbg !5033
  %bf.load27 = load i32, i32* %function_frequency26, align 8, !dbg !5034
  %bf.clear28 = and i32 %bf.load27, -196609, !dbg !5034
  %bf.set29 = or i32 %bf.clear28, 131072, !dbg !5034
  store i32 %bf.set29, i32* %function_frequency26, align 8, !dbg !5034
  br label %cleanup.cont, !dbg !5035

if.end30:                                         ; preds = %for.body
  %call31 = tail call zeroext i8 @probably_never_executed_bb_p(%struct.basic_block_def* %bb.0) #7, !dbg !5036
  %tobool32 = icmp eq i8 %call31, 0, !dbg !5036
  br i1 %tobool32, label %if.then33, label %if.end30.for.inc_crit_edge, !dbg !5038

if.end30.for.inc_crit_edge:                       ; preds = %if.end30
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5023
  br label %for.inc, !dbg !5038

if.then33:                                        ; preds = %if.end30
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5039
  %function_frequency35 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 20, !dbg !5040
  %bf.load36 = load i32, i32* %function_frequency35, align 8, !dbg !5041
  %bf.clear37 = and i32 %bf.load36, -196609, !dbg !5041
  %bf.set38 = or i32 %bf.clear37, 65536, !dbg !5041
  store i32 %bf.set38, i32* %function_frequency35, align 8, !dbg !5041
  br label %for.inc, !dbg !5039

for.inc:                                          ; preds = %if.end30.for.inc_crit_edge, %if.then33
  %.pre = phi %struct.function* [ %.pre.pre, %if.end30.for.inc_crit_edge ], [ %14, %if.then33 ], !dbg !5023
  %cfg20.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5042
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20.phi.trans.insert, align 8, !dbg !5023
  br label %for.cond, !dbg !5023, !llvm.loop !5043

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5045

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.else, %if.then24, %if.then7, %if.then2
  ret void, !dbg !5045
}

; Function Attrs: nounwind uwtable
define internal fastcc void @choose_function_section() unnamed_addr #5 !dbg !5046 {
entry:
  %0 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_with_vis**), align 8, !dbg !5047
  %section_name = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %0, i64 0, i32 2, !dbg !5047
  %1 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !5047
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !5047
  %2 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !5049
  %tobool1 = icmp ne i8 %2, 0, !dbg !5050
  %or.cond = and i1 %tobool, %tobool1, !dbg !5051
  br i1 %or.cond, label %lor.lhs.false2, label %if.end26, !dbg !5051

lor.lhs.false2:                                   ; preds = %entry
  %comdat_group = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %0, i64 0, i32 3, !dbg !5052
  %3 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !5052
  %cmp = icmp ne %union.tree_node* %3, null, !dbg !5052
  %4 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !5053
  %tobool4 = icmp ne i32 %4, 0, !dbg !5053
  %or.cond1 = or i1 %cmp, %tobool4, !dbg !5055
  br i1 %or.cond1, label %if.end26, label %if.end6, !dbg !5055

if.end6:                                          ; preds = %lor.lhs.false2
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5056
  %function_frequency = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 20, !dbg !5058
  %bf.load = load i32, i32* %function_frequency, align 8, !dbg !5058
  %bf.clear = and i32 %bf.load, 196608, !dbg !5058
  %cmp7 = icmp eq i32 %bf.clear, 131072, !dbg !5059
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !5060

if.then8:                                         ; preds = %if.end6
  %call = tail call i64 @strlen(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !5061
  %conv = trunc i64 %call to i32, !dbg !5061
  %call9 = tail call %union.tree_node* @build_string(i32 %conv, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !5062
  %6 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_with_vis**), align 8, !dbg !5063
  %section_name11 = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %6, i64 0, i32 2, !dbg !5063
  store %union.tree_node* %call9, %union.tree_node** %section_name11, align 8, !dbg !5064
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5065
  %function_frequency14.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 20, !dbg !5067
  %bf.load15.pre = load i32, i32* %function_frequency14.phi.trans.insert, align 8, !dbg !5068
  br label %if.end12, !dbg !5063

if.end12:                                         ; preds = %if.then8, %if.end6
  %bf.load15 = phi i32 [ %bf.load15.pre, %if.then8 ], [ %bf.load, %if.end6 ], !dbg !5068
  %bf.clear17 = and i32 %bf.load15, 196608, !dbg !5068
  %cmp18 = icmp eq i32 %bf.clear17, 0, !dbg !5069
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !5070

if.then20:                                        ; preds = %if.end12
  %call21 = tail call i64 @strlen(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !5071
  %conv22 = trunc i64 %call21 to i32, !dbg !5071
  %call23 = tail call %union.tree_node* @build_string(i32 %conv22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !5072
  %7 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_with_vis**), align 8, !dbg !5073
  %section_name25 = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %7, i64 0, i32 2, !dbg !5073
  store %union.tree_node* %call23, %union.tree_node** %section_name25, align 8, !dbg !5074
  br label %if.end26, !dbg !5073

if.end26:                                         ; preds = %lor.lhs.false2, %entry, %if.then20, %if.end12
  ret void, !dbg !5075
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_predict_expr(i32 %predictor, i32 %taken) local_unnamed_addr #5 !dbg !5076 {
entry:
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !5080, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i32 %taken, metadata !5081, metadata !DIExpression()), !dbg !5083
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5084
  %conv = zext i32 %predictor to i64, !dbg !5084
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #6, !dbg !5084
  %call1 = tail call %union.tree_node* @build1_stat(i32 185, %union.tree_node* %0, %union.tree_node* %call) #6, !dbg !5084
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5082, metadata !DIExpression()), !dbg !5083
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5085
  %bf.load = load i64, i64* %1, align 8, !dbg !5085
  %2 = shl i32 %taken, 18, !dbg !5085
  %3 = and i32 %2, 262144, !dbg !5085
  %bf.shl = zext i32 %3 to i64, !dbg !5085
  %bf.clear = and i64 %bf.load, -262145, !dbg !5085
  %bf.set = or i64 %bf.clear, %bf.shl, !dbg !5085
  store i64 %bf.set, i64* %1, align 8, !dbg !5085
  ret %union.tree_node* %call1, !dbg !5086
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @predictor_name(i32 %predictor) local_unnamed_addr #5 !dbg !5087 {
entry:
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !5091, metadata !DIExpression()), !dbg !5092
  %idxprom = zext i32 %predictor to i64, !dbg !5093
  %name = getelementptr inbounds [29 x %struct.predictor_info], [29 x %struct.predictor_info]* @predictor_info, i64 0, i64 %idxprom, i32 0, !dbg !5094
  %0 = load i8*, i8** %name, align 16, !dbg !5094
  ret i8* %0, !dbg !5095
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_estimate_probability() #5 !dbg !5096 {
entry:
  %0 = load i32, i32* @flag_guess_branch_prob, align 4, !dbg !5097
  %conv = trunc i32 %0 to i8, !dbg !5097
  ret i8 %conv, !dbg !5098
}

; Function Attrs: nounwind uwtable
define internal i32 @tree_estimate_probability_driver() #5 !dbg !5099 {
entry:
  tail call void @loop_optimizer_init(i32 0) #6, !dbg !5102
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5103
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !5103
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5105

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !5106
  %and = and i32 %1, 8, !dbg !5107
  %tobool1 = icmp eq i32 %and, 0, !dbg !5107
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5108

if.then:                                          ; preds = %land.lhs.true
  tail call void @flow_loops_dump(%struct._IO_FILE* nonnull %0, void (%struct.loop*, %struct._IO_FILE*, i32)* null, i32 0) #6, !dbg !5109
  br label %if.end, !dbg !5109

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call = tail call zeroext i8 @mark_irreducible_loops() #6, !dbg !5110
  %call2 = tail call fastcc i32 @number_of_loops() #7, !dbg !5111
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5101, metadata !DIExpression()), !dbg !5112
  %cmp = icmp ugt i32 %call2, 1, !dbg !5113
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !5115

if.then3:                                         ; preds = %if.end
  tail call void @scev_initialize() #6, !dbg !5116
  br label %if.end4, !dbg !5116

if.end4:                                          ; preds = %if.then3, %if.end
  tail call void @tree_estimate_probability() #7, !dbg !5117
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !5118

if.then6:                                         ; preds = %if.end4
  tail call void @scev_finalize() #6, !dbg !5119
  br label %if.end7, !dbg !5119

if.end7:                                          ; preds = %if.then6, %if.end4
  tail call void @loop_optimizer_finalize() #6, !dbg !5121
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5122
  %tobool8 = icmp eq %struct._IO_FILE* %2, null, !dbg !5122
  br i1 %tobool8, label %if.end13, label %land.lhs.true9, !dbg !5124

land.lhs.true9:                                   ; preds = %if.end7
  %3 = load i32, i32* @dump_flags, align 4, !dbg !5125
  %and10 = and i32 %3, 8, !dbg !5126
  %tobool11 = icmp eq i32 %and10, 0, !dbg !5126
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5127

if.then12:                                        ; preds = %land.lhs.true9
  tail call void @gimple_dump_cfg(%struct._IO_FILE* nonnull %2, i32 %3) #6, !dbg !5128
  br label %if.end13, !dbg !5128

if.end13:                                         ; preds = %land.lhs.true9, %if.end7, %if.then12
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5129
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5129
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5129
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 7, !dbg !5129
  %6 = load i32, i32* %x_profile_status, align 8, !dbg !5129
  %cmp14 = icmp eq i32 %6, 0, !dbg !5131
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !5132

if.then15:                                        ; preds = %if.end13
  store i32 1, i32* %x_profile_status, align 8, !dbg !5133
  br label %if.end19, !dbg !5134

if.end19:                                         ; preds = %if.then15, %if.end13
  ret i32 0, !dbg !5135
}

; Function Attrs: nounwind uwtable
define internal i32 @strip_predict_hints() #5 !dbg !5136 {
entry:
  %bi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5153
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !5153
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5153
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !5153
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5153
  %3 = bitcast %struct.gimple_stmt_iterator* %bi to i8*, !dbg !5154
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5155
  br label %for.cond, !dbg !5153

for.cond:                                         ; preds = %for.end, %entry
  %5 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.end ], !dbg !5156
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.end ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !5157
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5157
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5138, metadata !DIExpression()), !dbg !5158
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !5156
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5156
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %6, !dbg !5156
  br i1 %cmp, label %for.end29, label %for.body, !dbg !5153

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5160
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !5160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5160
  br label %for.cond3, !dbg !5161

for.cond3:                                        ; preds = %cleanup, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !5141, metadata !DIExpression(DW_OP_deref)), !dbg !5154
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bi) #7, !dbg !5162
  %tobool = icmp eq i8 %call, 0, !dbg !5163
  br i1 %tobool, label %for.body4, label %for.end, !dbg !5164

for.body4:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !5141, metadata !DIExpression(DW_OP_deref)), !dbg !5154
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bi) #7, !dbg !5165
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !5145, metadata !DIExpression()), !dbg !5166
  %call6 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call5) #7, !dbg !5167
  %cmp7 = icmp eq i32 %call6, 33, !dbg !5168
  br i1 %cmp7, label %if.then, label %if.else, !dbg !5169

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !5141, metadata !DIExpression(DW_OP_deref)), !dbg !5154
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %bi, i8 zeroext 1) #6, !dbg !5170
  br label %cleanup, !dbg !5172, !llvm.loop !5173

if.else:                                          ; preds = %for.body4
  %call8 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call5) #7, !dbg !5175
  %cmp9 = icmp eq i32 %call8, 8, !dbg !5176
  br i1 %cmp9, label %if.then10, label %if.end27, !dbg !5177

if.then10:                                        ; preds = %if.else
  %call11 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call5) #7, !dbg !5178
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5149, metadata !DIExpression()), !dbg !5179
  %tobool12 = icmp eq %union.tree_node* %call11, null, !dbg !5180
  br i1 %tobool12, label %if.end27, label %land.lhs.true, !dbg !5182

land.lhs.true:                                    ; preds = %if.then10
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 5, !dbg !5183
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !5183
  %bf.clear = and i32 %bf.load, 6144, !dbg !5183
  %cmp13 = icmp eq i32 %bf.clear, 6144, !dbg !5184
  br i1 %cmp13, label %land.lhs.true14, label %if.end27, !dbg !5185

land.lhs.true14:                                  ; preds = %land.lhs.true
  %bf.clear17 = and i32 %bf.load, 2047, !dbg !5186
  %cmp18 = icmp eq i32 %bf.clear17, 446, !dbg !5187
  br i1 %cmp18, label %land.lhs.true19, label %if.end27, !dbg !5188

land.lhs.true19:                                  ; preds = %land.lhs.true14
  %call20 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call5) #7, !dbg !5189
  %cmp21 = icmp eq i32 %call20, 2, !dbg !5190
  br i1 %cmp21, label %if.then22, label %if.end27, !dbg !5191

if.then22:                                        ; preds = %land.lhs.true19
  %call23 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call5) #7, !dbg !5192
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !5140, metadata !DIExpression()), !dbg !5158
  %call24 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call5, i32 0) #7, !dbg !5194
  %call25 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call23, %union.tree_node* %call24) #6, !dbg !5194
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !5139, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !5141, metadata !DIExpression(DW_OP_deref)), !dbg !5154
  call void @gsi_replace(%struct.gimple_stmt_iterator* nonnull %bi, %union.gimple_statement_d* %call25, i8 zeroext 1) #6, !dbg !5195
  br label %if.end27, !dbg !5196

if.end27:                                         ; preds = %if.then10, %if.else, %if.then22, %land.lhs.true19, %land.lhs.true14, %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bi, metadata !5141, metadata !DIExpression(DW_OP_deref)), !dbg !5154
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bi) #7, !dbg !5197
  br label %cleanup, !dbg !5198

cleanup:                                          ; preds = %if.end27, %if.then
  br label %for.cond3

for.end:                                          ; preds = %for.cond3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5199
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5156
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5200
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !5156
  br label %for.cond, !dbg !5156, !llvm.loop !5201

for.end29:                                        ; preds = %for.cond
  ret i32 0, !dbg !5203
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !5204 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !5210, metadata !DIExpression()), !dbg !5211
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !5212
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5212

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !5212
  %0 = load i32, i32* %num, align 8, !dbg !5212
  br label %cond.end, !dbg !5212

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5212
  ret i32 %cond, !dbg !5212
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5213 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !5217, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5218, metadata !DIExpression()), !dbg !5219
  br label %land.end, !dbg !5220

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5220
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5220
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !5220
  ret %struct.loop* %0, !dbg !5220
}

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_predict_insn_p(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5221 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5223, metadata !DIExpression()), !dbg !5224
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5225
  %bf.load = load i32, i32* %0, align 8, !dbg !5225
  %bf.clear = and i32 %bf.load, 65535, !dbg !5225
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !5225
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !5226

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %insn) #6, !dbg !5227
  %tobool = icmp eq i32 %call, 0, !dbg !5227
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5228

land.rhs:                                         ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !5229
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !5229
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5229
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 1, !dbg !5229
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5229
  %tobool1 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !5229
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5229

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !5229
  br label %cond.end, !dbg !5229

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5229
  %call7 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5229
  %cmp8 = icmp ugt i32 %call7, 1, !dbg !5230
  %phitmp = zext i1 %cmp8 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %cond.end, %entry
  %3 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %cond.end ]
  ret i8 %3, !dbg !5231
}

declare dso_local %struct.rtx_def* @get_condition(%struct.rtx_def*, %struct.rtx_def**, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @set_even_probabilities(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !5232 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp3 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5234, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i32 0, metadata !5235, metadata !DIExpression()), !dbg !5238
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !5239
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5239
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5240
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5240
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5241
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5241
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5241
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5241
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5241
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !5241
  store i32 %4, i32* %3, align 8, !dbg !5241
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5241
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !5241
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !5241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !5241
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5241
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5243
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5243
  br label %for.cond, !dbg !5241

for.cond:                                         ; preds = %for.body, %entry
  %nedges.0 = phi i32 [ 0, %entry ], [ %spec.select, %for.body ], !dbg !5245
  call void @llvm.dbg.value(metadata i32 %nedges.0, metadata !5235, metadata !DIExpression()), !dbg !5238
  %9 = load i32, i32* %7, align 8, !dbg !5246
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !5246
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5236, metadata !DIExpression(DW_OP_deref)), !dbg !5238
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !5246
  %tobool = icmp eq i8 %call1, 0, !dbg !5241
  br i1 %tobool, label %for.end, label %for.body, !dbg !5241

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5247
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !5236, metadata !DIExpression()), !dbg !5238
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !5249
  %12 = load i32, i32* %flags, align 8, !dbg !5249
  %and = and i32 %12, 24, !dbg !5250
  %tobool2 = icmp eq i32 %and, 0, !dbg !5250
  %inc = zext i1 %tobool2 to i32, !dbg !5251
  %spec.select = add nuw nsw i32 %nedges.0, %inc, !dbg !5251
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5235, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5237, metadata !DIExpression(DW_OP_deref)), !dbg !5238
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5246
  br label %for.cond, !dbg !5246, !llvm.loop !5252

for.end:                                          ; preds = %for.cond
  %nedges.0.lcssa = phi i32 [ %nedges.0, %for.cond ], !dbg !5245
  call void @llvm.dbg.value(metadata i32 %nedges.0.lcssa, metadata !5235, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i32 %nedges.0.lcssa, metadata !5235, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i32 %nedges.0.lcssa, metadata !5235, metadata !DIExpression()), !dbg !5238
  %13 = bitcast %struct.edge_iterator* %tmp3 to i8*, !dbg !5254
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8, !dbg !5254
  %call5 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5254
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp3, i64 0, i32 0, !dbg !5254
  %15 = extractvalue { i32, %struct.VEC_edge_gc** } %call5, 0, !dbg !5254
  store i32 %15, i32* %14, align 8, !dbg !5254
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp3, i64 0, i32 1, !dbg !5254
  %17 = extractvalue { i32, %struct.VEC_edge_gc** } %call5, 1, !dbg !5254
  store %struct.VEC_edge_gc** %17, %struct.VEC_edge_gc*** %16, align 8, !dbg !5254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %13, i64 16, i1 false), !dbg !5254
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8, !dbg !5254
  %div = lshr i32 %nedges.0.lcssa, 1, !dbg !5256
  %add = add nuw nsw i32 %div, 10000, !dbg !5256
  br label %for.cond6, !dbg !5254

for.cond6:                                        ; preds = %for.inc17, %for.end
  %18 = load i32, i32* %7, align 8, !dbg !5259
  %19 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !5259
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5236, metadata !DIExpression(DW_OP_deref)), !dbg !5238
  %call7 = call fastcc zeroext i8 @ei_cond(i32 %18, %struct.VEC_edge_gc** %19, %struct.edge_def** nonnull %e) #7, !dbg !5259
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5254
  br i1 %tobool8, label %for.end18, label %for.body9, !dbg !5254

for.body9:                                        ; preds = %for.cond6
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5260
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !5236, metadata !DIExpression()), !dbg !5238
  %flags10 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 7, !dbg !5261
  %21 = load i32, i32* %flags10, align 8, !dbg !5261
  %and11 = and i32 %21, 24, !dbg !5262
  %tobool12 = icmp eq i32 %and11, 0, !dbg !5262
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !5263

if.then13:                                        ; preds = %for.body9
  %div14 = udiv i32 %add, %nedges.0.lcssa, !dbg !5264
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !5236, metadata !DIExpression()), !dbg !5238
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 8, !dbg !5265
  store i32 %div14, i32* %probability, align 4, !dbg !5266
  br label %for.inc17, !dbg !5267

if.else:                                          ; preds = %for.body9
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !5236, metadata !DIExpression()), !dbg !5238
  %probability15 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 8, !dbg !5268
  store i32 0, i32* %probability15, align 4, !dbg !5269
  br label %for.inc17

for.inc17:                                        ; preds = %if.then13, %if.else
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5237, metadata !DIExpression(DW_OP_deref)), !dbg !5238
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5259
  br label %for.cond6, !dbg !5259, !llvm.loop !5270

for.end18:                                        ; preds = %for.cond6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5272
  ret void, !dbg !5272
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_prediction(%struct._IO_FILE* %file, i32 %predictor, i32 %probability, %struct.basic_block_def* %bb, i32 %used) unnamed_addr #5 !dbg !5273 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5277, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %predictor, metadata !5278, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %probability, metadata !5279, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5280, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 %used, metadata !5281, metadata !DIExpression()), !dbg !5284
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !5285
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5285
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5286
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5286
  %tobool = icmp eq %struct._IO_FILE* %file, null, !dbg !5287
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5289

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5290
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5290
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5290
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5290
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5290
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !5290
  store i32 %4, i32* %3, align 8, !dbg !5290
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5290
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !5290
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !5290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !5290
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5290
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5292
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5292
  br label %for.cond, !dbg !5290

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %7, align 8, !dbg !5294
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !5294
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5284
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !5294
  %tobool2 = icmp eq i8 %call1, 0, !dbg !5290
  br i1 %tobool2, label %for.end, label %for.body, !dbg !5290

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5295
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !5282, metadata !DIExpression()), !dbg !5284
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !5297
  %12 = load i32, i32* %flags, align 8, !dbg !5297
  %and = and i32 %12, 1, !dbg !5298
  %tobool3 = icmp eq i32 %and, 0, !dbg !5298
  br i1 %tobool3, label %for.end, label %for.inc, !dbg !5299

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5283, metadata !DIExpression(DW_OP_deref)), !dbg !5284
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5294
  br label %for.cond, !dbg !5294, !llvm.loop !5300

for.end:                                          ; preds = %for.body, %for.cond
  %idxprom = zext i32 %predictor to i64, !dbg !5302
  %name = getelementptr inbounds [29 x %struct.predictor_info], [29 x %struct.predictor_info]* @predictor_info, i64 0, i64 %idxprom, i32 0, !dbg !5303
  %13 = load i8*, i8** %name, align 16, !dbg !5303
  %tobool6 = icmp eq i32 %used, 0, !dbg !5304
  %cond = select i1 %tobool6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.36, i64 0, i64 0), !dbg !5304
  %conv = sitofp i32 %probability to double, !dbg !5305
  %mul = fmul double %conv, 1.000000e+02, !dbg !5306
  %div = fdiv double %mul, 1.000000e+04, !dbg !5307
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0), i8* %13, i8* %cond, double %div) #6, !dbg !5308
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !5309
  %14 = load i64, i64* %count, align 8, !dbg !5309
  %tobool8 = icmp eq i64 %14, 0, !dbg !5311
  br i1 %tobool8, label %if.end26, label %if.then9, !dbg !5312

if.then9:                                         ; preds = %for.end
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !5313
  %15 = load i64, i64* %count, align 8, !dbg !5315
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i64 %15) #6, !dbg !5316
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5317
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !5282, metadata !DIExpression()), !dbg !5284
  %tobool13 = icmp eq %struct.edge_def* %16, null, !dbg !5317
  br i1 %tobool13, label %if.end26, label %if.then14, !dbg !5319

if.then14:                                        ; preds = %if.then9
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !5320
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5322
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !5282, metadata !DIExpression()), !dbg !5284
  %count16 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 9, !dbg !5323
  %18 = load i64, i64* %count16, align 8, !dbg !5323
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i64 %18) #6, !dbg !5324
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5325
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !5282, metadata !DIExpression()), !dbg !5284
  %count18 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 9, !dbg !5326
  %20 = load i64, i64* %count18, align 8, !dbg !5326
  %conv19 = sitofp i64 %20 to double, !dbg !5325
  %mul20 = fmul double %conv19, 1.000000e+02, !dbg !5327
  %21 = load i64, i64* %count, align 8, !dbg !5328
  %conv22 = sitofp i64 %21 to double, !dbg !5329
  %div23 = fdiv double %mul20, %conv22, !dbg !5330
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), double %div23) #6, !dbg !5331
  br label %if.end26, !dbg !5332

if.end26:                                         ; preds = %if.then9, %for.end, %if.then14
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !5333
  br label %cleanup, !dbg !5334

cleanup:                                          ; preds = %entry, %if.end26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5334
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5334
  ret void, !dbg !5334
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5335 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5337, metadata !DIExpression()), !dbg !5338
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5339
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5339
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5339
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5339

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5339
  br label %cond.end, !dbg !5339

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5339
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5339
  %cmp = icmp eq i32 %call, 1, !dbg !5340
  %conv2 = zext i1 %cmp to i8, !dbg !5339
  ret i8 %conv2, !dbg !5341
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5342 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5346, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5347, metadata !DIExpression()), !dbg !5348
  br label %land.end, !dbg !5349

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5349
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5349
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5349
  ret %struct.edge_def* %0, !dbg !5349
}

; Function Attrs: nounwind uwtable
define internal fastcc void @apply_return_prediction() unnamed_addr #5 !dbg !5350 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %direction = alloca i32, align 4
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !5352, metadata !DIExpression()), !dbg !5361
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !5362
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5362
  %1 = bitcast i32* %direction to i8*, !dbg !5363
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5363
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5364
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5364
  %3 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5365
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5365
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5365
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5365
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5365
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !5365
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5365
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 0, !dbg !5365
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5365
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5365
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !5365
  store i32 %8, i32* %7, align 8, !dbg !5365
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5365
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !5365
  store %struct.VEC_edge_gc** %10, %struct.VEC_edge_gc*** %9, align 8, !dbg !5365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !5365
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !5365
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5367
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5367
  br label %for.cond, !dbg !5365

for.cond:                                         ; preds = %for.inc, %entry
  %return_stmt.0 = phi %union.gimple_statement_d* [ null, %entry ], [ %call2, %for.inc ], !dbg !5361
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %return_stmt.0, metadata !5352, metadata !DIExpression()), !dbg !5361
  %13 = load i32, i32* %11, align 8, !dbg !5369
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !5369
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5354, metadata !DIExpression(DW_OP_deref)), !dbg !5361
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #7, !dbg !5369
  %tobool = icmp eq i8 %call1, 0, !dbg !5365
  br i1 %tobool, label %for.end, label %for.body, !dbg !5365

for.body:                                         ; preds = %for.cond
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5370
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !5354, metadata !DIExpression()), !dbg !5361
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 0, !dbg !5372
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5372
  %call2 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %16) #6, !dbg !5373
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !5352, metadata !DIExpression()), !dbg !5361
  %tobool3 = icmp eq %union.gimple_statement_d* %call2, null, !dbg !5374
  br i1 %tobool3, label %for.inc, label %land.lhs.true, !dbg !5376

land.lhs.true:                                    ; preds = %for.body
  %call4 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call2) #7, !dbg !5377
  %cmp = icmp eq i32 %call4, 9, !dbg !5378
  br i1 %cmp, label %for.end, label %for.inc, !dbg !5379

for.inc:                                          ; preds = %for.body, %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5360, metadata !DIExpression(DW_OP_deref)), !dbg !5361
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5369
  br label %for.cond, !dbg !5369, !llvm.loop !5380

for.end:                                          ; preds = %for.cond, %land.lhs.true
  %return_stmt.1 = phi %union.gimple_statement_d* [ %return_stmt.0, %for.cond ], [ %call2, %land.lhs.true ], !dbg !5361
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %return_stmt.1, metadata !5352, metadata !DIExpression()), !dbg !5361
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5382
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !5354, metadata !DIExpression()), !dbg !5361
  %tobool5 = icmp eq %struct.edge_def* %17, null, !dbg !5382
  br i1 %tobool5, label %cleanup, label %if.end7, !dbg !5384

if.end7:                                          ; preds = %for.end
  %call8 = call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %return_stmt.1) #7, !dbg !5385
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5353, metadata !DIExpression()), !dbg !5361
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !5386
  br i1 %tobool9, label %cleanup, label %if.end11, !dbg !5388

if.end11:                                         ; preds = %if.end7
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5389
  %bf.load = load i64, i64* %18, align 8, !dbg !5389
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5391
  %cmp12 = icmp eq i64 %bf.cast1, 141, !dbg !5391
  br i1 %cmp12, label %lor.lhs.false, label %cleanup, !dbg !5392

lor.lhs.false:                                    ; preds = %if.end11
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5393
  %19 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5393
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %19, align 8, !dbg !5393
  %tobool13 = icmp eq %union.gimple_statement_d* %20, null, !dbg !5393
  br i1 %tobool13, label %cleanup, label %lor.lhs.false14, !dbg !5394

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %call17 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %20) #7, !dbg !5395
  %cmp18 = icmp eq i32 %call17, 16, !dbg !5396
  br i1 %cmp18, label %if.end20, label %cleanup, !dbg !5397

if.end20:                                         ; preds = %lor.lhs.false14
  %21 = load %union.gimple_statement_d*, %union.gimple_statement_d** %19, align 8, !dbg !5398
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %21, metadata !5355, metadata !DIExpression()), !dbg !5361
  %call23 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %21) #7, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %call23, metadata !5356, metadata !DIExpression()), !dbg !5361
  %call24 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %21, i32 0) #7, !dbg !5400
  %call25 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call24) #7, !dbg !5400
  call void @llvm.dbg.value(metadata i32* %direction, metadata !5359, metadata !DIExpression(DW_OP_deref)), !dbg !5361
  %call26 = call fastcc i32 @return_prediction(%union.tree_node* %call25, i32* nonnull %direction) #7, !dbg !5401
  call void @llvm.dbg.value(metadata i32 %call26, metadata !5358, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 1, metadata !5357, metadata !DIExpression()), !dbg !5361
  br label %for.cond27, !dbg !5402

for.cond27:                                       ; preds = %for.inc36, %if.end20
  %i.0 = phi i32 [ 1, %if.end20 ], [ %inc, %for.inc36 ], !dbg !5404
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5357, metadata !DIExpression()), !dbg !5361
  %cmp28 = icmp slt i32 %i.0, %call23, !dbg !5405
  br i1 %cmp28, label %for.body29, label %for.end37, !dbg !5407

for.body29:                                       ; preds = %for.cond27
  %call30 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %21, i32 %i.0) #7, !dbg !5408
  %call31 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call30) #7, !dbg !5408
  call void @llvm.dbg.value(metadata i32* %direction, metadata !5359, metadata !DIExpression(DW_OP_deref)), !dbg !5361
  %call32 = call fastcc i32 @return_prediction(%union.tree_node* %call31, i32* nonnull %direction) #7, !dbg !5410
  %cmp33 = icmp eq i32 %call26, %call32, !dbg !5411
  br i1 %cmp33, label %for.inc36, label %for.end37, !dbg !5412

for.inc36:                                        ; preds = %for.body29
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5357, metadata !DIExpression()), !dbg !5361
  br label %for.cond27, !dbg !5414, !llvm.loop !5415

for.end37:                                        ; preds = %for.body29, %for.cond27
  %i.0.lcssa = phi i32 [ %i.0, %for.body29 ], [ %i.0, %for.cond27 ], !dbg !5404
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5357, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5357, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5357, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5357, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5357, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5357, metadata !DIExpression()), !dbg !5361
  %cmp38 = icmp eq i32 %i.0.lcssa, %call23, !dbg !5417
  br i1 %cmp38, label %cleanup, label %for.cond40.preheader, !dbg !5419

for.cond40.preheader:                             ; preds = %for.end37
  %22 = sext i32 %call23 to i64, !dbg !5420
  br label %for.cond40, !dbg !5420

for.cond40:                                       ; preds = %for.cond40.preheader, %for.inc51
  %indvars.iv = phi i64 [ 0, %for.cond40.preheader ], [ %indvars.iv.next, %for.inc51 ], !dbg !5422
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5357, metadata !DIExpression()), !dbg !5361
  %cmp41 = icmp slt i64 %indvars.iv, %22, !dbg !5423
  br i1 %cmp41, label %for.body42, label %cleanup.loopexit, !dbg !5420

for.body42:                                       ; preds = %for.cond40
  %23 = trunc i64 %indvars.iv to i32, !dbg !5425
  %call43 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %21, i32 %23) #7, !dbg !5425
  %call44 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call43) #7, !dbg !5425
  call void @llvm.dbg.value(metadata i32* %direction, metadata !5359, metadata !DIExpression(DW_OP_deref)), !dbg !5361
  %call45 = call fastcc i32 @return_prediction(%union.tree_node* %call44, i32* nonnull %direction) #7, !dbg !5427
  call void @llvm.dbg.value(metadata i32 %call45, metadata !5358, metadata !DIExpression()), !dbg !5361
  %cmp46 = icmp eq i32 %call45, 3, !dbg !5428
  br i1 %cmp46, label %for.inc51, label %if.then47, !dbg !5430

if.then47:                                        ; preds = %for.body42
  %call48 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %21, i64 %indvars.iv) #7, !dbg !5431
  %src49 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call48, i64 0, i32 0, !dbg !5432
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %src49, align 8, !dbg !5432
  %25 = load i32, i32* %direction, align 4, !dbg !5433
  call void @llvm.dbg.value(metadata i32 %25, metadata !5359, metadata !DIExpression()), !dbg !5361
  call fastcc void @predict_paths_leading_to(%struct.basic_block_def* %24, i32 %call45, i32 %25) #7, !dbg !5434
  br label %for.inc51, !dbg !5434

for.inc51:                                        ; preds = %for.body42, %if.then47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5435
  call void @llvm.dbg.value(metadata i32 undef, metadata !5357, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5361
  br label %for.cond40, !dbg !5436, !llvm.loop !5437

cleanup.loopexit:                                 ; preds = %for.cond40
  br label %cleanup, !dbg !5439

cleanup:                                          ; preds = %cleanup.loopexit, %for.end37, %lor.lhs.false14, %lor.lhs.false, %if.end11, %if.end7, %for.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5439
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5439
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5439
  ret void, !dbg !5439
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5440 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5444, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5445, metadata !DIExpression()), !dbg !5448
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5449
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5446, metadata !DIExpression()), !dbg !5447
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5450
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5451
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5452
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5453
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5454
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5455
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5456
  ret void, !dbg !5457
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5458 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5462, metadata !DIExpression()), !dbg !5463
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5464
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5464
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5465
  %conv1 = zext i1 %cmp to i8, !dbg !5466
  ret i8 %conv1, !dbg !5467
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5468 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5472, metadata !DIExpression()), !dbg !5473
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5474
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5474
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5475
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5475
  ret %union.gimple_statement_d* %1, !dbg !5476
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5477 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5482, metadata !DIExpression()), !dbg !5483
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5484
  %cmp = icmp eq i32 %call, 8, !dbg !5485
  %conv1 = zext i1 %cmp to i8, !dbg !5484
  ret i8 %conv1, !dbg !5486
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @predict_paths_leading_to(%struct.basic_block_def* %bb, i32 %pred, i32 %taken) unnamed_addr #5 !dbg !5487 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5491, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 %pred, metadata !5492, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 %taken, metadata !5493, metadata !DIExpression()), !dbg !5494
  tail call fastcc void @predict_paths_for_bb(%struct.basic_block_def* %bb, %struct.basic_block_def* %bb, i32 %pred, i32 %taken) #7, !dbg !5495
  ret void, !dbg !5496
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5497 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5501, metadata !DIExpression()), !dbg !5503
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5504
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5502, metadata !DIExpression()), !dbg !5503
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5505
  %bf.load = load i64, i64* %0, align 8, !dbg !5505
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5507
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !5507
  br i1 %cmp, label %if.then, label %cleanup, !dbg !5508

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5509
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5509
  br label %cleanup, !dbg !5510

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !5503
  ret %union.tree_node* %retval.0, !dbg !5511
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5512 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5516, metadata !DIExpression()), !dbg !5517
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !5518
  %bf.load = load i32, i32* %0, align 8, !dbg !5518
  %bf.clear = and i32 %bf.load, 255, !dbg !5518
  ret i32 %bf.clear, !dbg !5519
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_predict_predictor(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5520 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5524, metadata !DIExpression()), !dbg !5525
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5526
  %bf.load = load i32, i32* %0, align 8, !dbg !5526
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5526
  %and = and i32 %bf.lshr, 32767, !dbg !5527
  ret i32 %and, !dbg !5528
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_predict_outcome(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5529 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5533, metadata !DIExpression()), !dbg !5534
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5535
  %bf.load = load i32, i32* %0, align 8, !dbg !5535
  %bf.load.lobit = lshr i32 %bf.load, 31, !dbg !5536
  ret i32 %bf.load.lobit, !dbg !5537
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5538 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5543, metadata !DIExpression()), !dbg !5544
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5545
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5545
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5546
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5546
  %2 = load i64, i64* %1, align 8, !dbg !5546
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5547
  store i64 %2, i64* %3, align 8, !dbg !5547
  ret void, !dbg !5548
}

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5549 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5551, metadata !DIExpression()), !dbg !5552
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5553
  ret %union.tree_node* %call, !dbg !5554
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5555 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5559, metadata !DIExpression()), !dbg !5560
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5561
  %0 = load i32, i32* %nargs, align 4, !dbg !5561
  ret i32 %0, !dbg !5562
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @return_prediction(%union.tree_node* %val, i32* %prediction) unnamed_addr #5 !dbg !5563 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !5568, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i32* %prediction, metadata !5569, metadata !DIExpression()), !dbg !5570
  %tobool = icmp eq %union.tree_node* %val, null, !dbg !5571
  br i1 %tobool, label %return, label %if.end, !dbg !5573

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5574
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !5574
  %1 = load i64*, i64** %0, align 8, !dbg !5574
  %bf.load = load i64, i64* %1, align 8, !dbg !5574
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5574
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !5574
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !5574

lor.lhs.false:                                    ; preds = %if.end
  %cmp7 = icmp eq i64 %bf.cast1, 12, !dbg !5574
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !5576

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  %call = tail call i32 @integer_zerop(%union.tree_node* nonnull %val) #6, !dbg !5577
  %tobool9 = icmp eq i32 %call, 0, !dbg !5577
  br i1 %tobool9, label %return, label %if.then10, !dbg !5580

if.then10:                                        ; preds = %if.then8
  store i32 0, i32* %prediction, align 4, !dbg !5581
  br label %return, !dbg !5583

if.else:                                          ; preds = %lor.lhs.false
  %cmp18 = icmp eq i64 %bf.cast1, 6, !dbg !5584
  br i1 %cmp18, label %if.then35, label %lor.lhs.false19, !dbg !5584

lor.lhs.false19:                                  ; preds = %if.else
  %cmp26 = icmp eq i64 %bf.cast1, 7, !dbg !5584
  br i1 %cmp26, label %if.then35, label %lor.lhs.false27, !dbg !5584

lor.lhs.false27:                                  ; preds = %lor.lhs.false19
  %cmp34 = icmp eq i64 %bf.cast1, 8, !dbg !5584
  br i1 %cmp34, label %if.then35, label %return, !dbg !5586

if.then35:                                        ; preds = %lor.lhs.false27, %lor.lhs.false19, %if.else
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5587
  %bf.load37 = load i64, i64* %2, align 8, !dbg !5587
  %bf.cast396 = and i64 %bf.load37, 65535, !dbg !5590
  %cmp40 = icmp eq i64 %bf.cast396, 23, !dbg !5590
  br i1 %cmp40, label %land.lhs.true, label %if.end44, !dbg !5591

land.lhs.true:                                    ; preds = %if.then35
  %call41 = tail call i32 @tree_int_cst_sgn(%union.tree_node* nonnull %val) #6, !dbg !5592
  %cmp42 = icmp slt i32 %call41, 0, !dbg !5593
  br i1 %cmp42, label %if.then43, label %land.lhs.true.if.end44_crit_edge, !dbg !5594

land.lhs.true.if.end44_crit_edge:                 ; preds = %land.lhs.true
  %bf.load46.pre = load i64, i64* %2, align 8, !dbg !5595
  br label %if.end44, !dbg !5594

if.then43:                                        ; preds = %land.lhs.true
  store i32 0, i32* %prediction, align 4, !dbg !5597
  br label %return, !dbg !5599

if.end44:                                         ; preds = %land.lhs.true.if.end44_crit_edge, %if.then35
  %bf.load46 = phi i64 [ %bf.load46.pre, %land.lhs.true.if.end44_crit_edge ], [ %bf.load37, %if.then35 ], !dbg !5595
  %bf.cast487 = and i64 %bf.load46, 131072, !dbg !5595
  %tobool49 = icmp eq i64 %bf.cast487, 0, !dbg !5595
  br i1 %tobool49, label %return, label %land.lhs.true50, !dbg !5600

land.lhs.true50:                                  ; preds = %if.end44
  %call51 = tail call i32 @integer_zerop(%union.tree_node* nonnull %val) #6, !dbg !5601
  %tobool52 = icmp eq i32 %call51, 0, !dbg !5601
  br i1 %tobool52, label %land.lhs.true53, label %return, !dbg !5602

land.lhs.true53:                                  ; preds = %land.lhs.true50
  %call54 = tail call i32 @integer_onep(%union.tree_node* nonnull %val) #6, !dbg !5603
  %tobool55 = icmp eq i32 %call54, 0, !dbg !5603
  br i1 %tobool55, label %if.then56, label %return, !dbg !5604

if.then56:                                        ; preds = %land.lhs.true53
  store i32 1, i32* %prediction, align 4, !dbg !5605
  br label %return, !dbg !5607

return:                                           ; preds = %if.then8, %land.lhs.true53, %land.lhs.true50, %if.end44, %entry, %lor.lhs.false27, %if.then56, %if.then43, %if.then10
  %retval.0 = phi i32 [ 26, %if.then10 ], [ 25, %if.then43 ], [ 24, %if.then56 ], [ 3, %entry ], [ 3, %lor.lhs.false27 ], [ 3, %land.lhs.true53 ], [ 3, %land.lhs.true50 ], [ 3, %if.end44 ], [ 3, %if.then8 ], !dbg !5570
  ret i32 %retval.0, !dbg !5608
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5609 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5617, metadata !DIExpression()), !dbg !5618
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5619
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5619
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5620
  ret %union.tree_node* %1, !dbg !5621
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5622 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5626, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i32 %i, metadata !5627, metadata !DIExpression()), !dbg !5628
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !5629
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5630
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5631
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !5632 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5636, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.value(metadata i64 %i, metadata !5637, metadata !DIExpression()), !dbg !5638
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !5639
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !5639
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5639
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5639
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5639

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !5639
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !5639
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !5639
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !5639
  br label %cond.end, !dbg !5639

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5639
  %conv = trunc i64 %i to i32, !dbg !5639
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !5639
  ret %struct.edge_def* %call3, !dbg !5640
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5641 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5645, metadata !DIExpression()), !dbg !5647
  call void @llvm.dbg.value(metadata i32 %i, metadata !5646, metadata !DIExpression()), !dbg !5647
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !5648
  %tobool = icmp eq i8 %call, 0, !dbg !5648
  br i1 %tobool, label %return, label %if.then, !dbg !5650

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !5651
  %idxprom = zext i32 %i to i64, !dbg !5651
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !5651
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5651
  br label %return, !dbg !5653

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !5654
  ret %union.tree_node* %retval.0, !dbg !5655
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5656 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5658, metadata !DIExpression()), !dbg !5659
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5660
  %cmp = icmp eq i32 %call, 0, !dbg !5661
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5662

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5663
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5664
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5665
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5666 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5670, metadata !DIExpression()), !dbg !5672
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !5673
  %idxprom = zext i32 %call to i64, !dbg !5674
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !5674
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5674
  call void @llvm.dbg.value(metadata i64 %0, metadata !5671, metadata !DIExpression()), !dbg !5672
  %cmp = icmp eq i64 %0, 0, !dbg !5675
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5675

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5675
  br label %cond.end, !dbg !5675

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !5676
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !5677
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !5678
  ret %union.tree_node** %2, !dbg !5679
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5680 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5684, metadata !DIExpression()), !dbg !5685
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5686
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !5687
  ret i32 %call1, !dbg !5688
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !5689 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5693, metadata !DIExpression()), !dbg !5694
  %idxprom = zext i32 %code to i64, !dbg !5695
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !5695
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5695
  ret i32 %0, !dbg !5696
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_sgn(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_onep(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5697 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5702, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.value(metadata i32 %index, metadata !5703, metadata !DIExpression()), !dbg !5704
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5705
  %0 = load i32, i32* %capacity, align 8, !dbg !5705
  %cmp = icmp ult i32 %0, %index, !dbg !5705
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5705

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5705
  br label %cond.end, !dbg !5705

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !5706
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !5706
  ret %struct.phi_arg_d* %arrayidx, !dbg !5707
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5708 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5712, metadata !DIExpression()), !dbg !5713
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5714
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5714
  ret %struct.basic_block_def* %0, !dbg !5715
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5716 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5720, metadata !DIExpression()), !dbg !5721
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5722
  %0 = load i32, i32* %flags, align 8, !dbg !5722
  %and = and i32 %0, 512, !dbg !5723
  %tobool = icmp eq i32 %and, 0, !dbg !5723
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5724

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5725
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5725
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5726
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5727

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5728
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5728
  br label %cond.end, !dbg !5727

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5727
  ret %struct.gimple_seq_d* %cond, !dbg !5729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5730 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5737, metadata !DIExpression()), !dbg !5738
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5739
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5739

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5740
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5740
  br label %cond.end, !dbg !5739

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5739
  ret %struct.gimple_seq_node_d* %cond, !dbg !5741
}

; Function Attrs: nounwind uwtable
define internal fastcc void @predict_paths_for_bb(%struct.basic_block_def* %cur, %struct.basic_block_def* %bb, i32 %pred, i32 %taken) unnamed_addr #5 !dbg !5742 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cur, metadata !5746, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5747, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata i32 %pred, metadata !5748, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata i32 %taken, metadata !5749, metadata !DIExpression()), !dbg !5753
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !5754
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5754
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5755
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5755
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5756
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5756
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cur, i64 0, i32 0, !dbg !5756
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5756
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5756
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !5756
  store i32 %4, i32* %3, align 8, !dbg !5756
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5756
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !5756
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !5756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !5756
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5756
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5758
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5758
  %cmp5 = icmp eq %struct.basic_block_def* %bb, %cur, !dbg !5760
  br i1 %cmp5, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !5756

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !5756

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !5756

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %9 = load i32, i32* %7, align 8, !dbg !5763
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !5763
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5750, metadata !DIExpression(DW_OP_deref)), !dbg !5753
  %call1.us = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !5763
  %tobool.us = icmp eq i8 %call1.us, 0, !dbg !5756
  br i1 %tobool.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !5756

for.body.us:                                      ; preds = %for.cond.us
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5764
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !5750, metadata !DIExpression()), !dbg !5753
  %src.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 0, !dbg !5765
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src.us, align 8, !dbg !5765
  %index.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !5766
  %13 = load i32, i32* %index.us, align 8, !dbg !5766
  %cmp.us = icmp sgt i32 %13, 1, !dbg !5767
  br i1 %cmp.us, label %land.lhs.true.us, label %for.inc.us, !dbg !5768

land.lhs.true.us:                                 ; preds = %for.body.us
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !5750, metadata !DIExpression()), !dbg !5753
  %call3.us = call zeroext i8 @dominated_by_p(i32 2, %struct.basic_block_def* %12, %struct.basic_block_def* %cur) #6, !dbg !5769
  %tobool4.us = icmp eq i8 %call3.us, 0, !dbg !5769
  br i1 %tobool4.us, label %if.then.us, label %for.inc.us, !dbg !5770

if.then.us:                                       ; preds = %land.lhs.true.us
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5771
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !5750, metadata !DIExpression()), !dbg !5753
  call void @predict_edge_def(%struct.edge_def* %14, i32 %pred, i32 %taken) #7, !dbg !5772
  br label %for.inc.us, !dbg !5773

for.inc.us:                                       ; preds = %if.then.us, %land.lhs.true.us, %for.body.us
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5751, metadata !DIExpression(DW_OP_deref)), !dbg !5753
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5763
  br label %for.cond.us, !dbg !5763, !llvm.loop !5774

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !5776

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %15 = load i32, i32* %7, align 8, !dbg !5763
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !5763
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5750, metadata !DIExpression(DW_OP_deref)), !dbg !5753
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !5763
  %tobool = icmp eq i8 %call1, 0, !dbg !5756
  br i1 %tobool, label %for.end.us-lcssa, label %for.body, !dbg !5756

for.body:                                         ; preds = %for.cond
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5764
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !5750, metadata !DIExpression()), !dbg !5753
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 0, !dbg !5765
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5765
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 9, !dbg !5766
  %19 = load i32, i32* %index, align 8, !dbg !5766
  %cmp = icmp sgt i32 %19, 1, !dbg !5767
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !5768

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !5750, metadata !DIExpression()), !dbg !5753
  %call3 = call zeroext i8 @dominated_by_p(i32 2, %struct.basic_block_def* %18, %struct.basic_block_def* %bb) #6, !dbg !5769
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5769
  br i1 %tobool4, label %if.then, label %for.inc, !dbg !5770

if.then:                                          ; preds = %land.lhs.true
  %call6 = call zeroext i8 @dominated_by_p(i32 2, %struct.basic_block_def* %cur, %struct.basic_block_def* %bb) #6, !dbg !5778
  %tobool7 = icmp eq i8 %call6, 0, !dbg !5778
  br i1 %tobool7, label %cond.true, label %cond.end, !dbg !5778

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 1776, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5778
  br label %cond.end, !dbg !5778

cond.end:                                         ; preds = %if.then, %cond.true
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5771
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !5750, metadata !DIExpression()), !dbg !5753
  call void @predict_edge_def(%struct.edge_def* %20, i32 %pred, i32 %taken) #7, !dbg !5772
  br label %for.inc, !dbg !5773

for.inc:                                          ; preds = %land.lhs.true, %for.body, %cond.end
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5751, metadata !DIExpression(DW_OP_deref)), !dbg !5753
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5763
  br label %for.cond, !dbg !5763, !llvm.loop !5774

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !5776

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %call8 = call %struct.basic_block_def* @first_dom_son(i32 2, %struct.basic_block_def* %cur) #6, !dbg !5776
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call8, metadata !5752, metadata !DIExpression()), !dbg !5753
  br label %for.cond9, !dbg !5779

for.cond9:                                        ; preds = %for.body11, %for.end
  %son.0 = phi %struct.basic_block_def* [ %call8, %for.end ], [ %call13, %for.body11 ], !dbg !5780
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %son.0, metadata !5752, metadata !DIExpression()), !dbg !5753
  %tobool10 = icmp eq %struct.basic_block_def* %son.0, null, !dbg !5781
  br i1 %tobool10, label %for.end14, label %for.body11, !dbg !5781

for.body11:                                       ; preds = %for.cond9
  call fastcc void @predict_paths_for_bb(%struct.basic_block_def* nonnull %son.0, %struct.basic_block_def* %bb, i32 %pred, i32 %taken) #7, !dbg !5782
  %call13 = call %struct.basic_block_def* @next_dom_son(i32 2, %struct.basic_block_def* nonnull %son.0) #6, !dbg !5784
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call13, metadata !5752, metadata !DIExpression()), !dbg !5753
  br label %for.cond9, !dbg !5785, !llvm.loop !5786

for.end14:                                        ; preds = %for.cond9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5788
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5788
  ret void, !dbg !5788
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @first_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @next_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5789 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5791, metadata !DIExpression()), !dbg !5792
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5793
  ret %union.tree_node* %call, !dbg !5794
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !5795 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !5801, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !5802, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5807
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !5808
  store i32 0, i32* %idx, align 8, !dbg !5809
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5810
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !5810
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !5810
  %tobool = icmp eq %struct.loops* %1, null, !dbg !5810
  br i1 %tobool, label %if.then, label %if.end, !dbg !5812

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !5813
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !5815
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !5816
  br label %cleanup, !dbg !5817

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !5818
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !5818
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !5819
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !5820
  call void @llvm.dbg.value(metadata i32 1, metadata !5806, metadata !DIExpression()), !dbg !5807
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5821
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !5821
  %3 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !5821
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %3, i64 0, i32 3, !dbg !5821
  %4 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !5821
  br label %while.cond79, !dbg !5824

while.cond79:                                     ; preds = %if.end, %if.end111
  %5 = phi %struct.loop* [ %4, %if.end ], [ %25, %if.end111 ]
  %6 = phi %struct.loop* [ %4, %if.end ], [ %26, %if.end111 ]
  %7 = phi %struct.loop* [ %4, %if.end ], [ %27, %if.end111 ]
  %8 = phi %struct.loop* [ %4, %if.end ], [ %28, %if.end111 ]
  %9 = phi %struct.loop* [ %4, %if.end ], [ %29, %if.end111 ]
  %10 = phi %struct.loop* [ %4, %if.end ], [ %30, %if.end111 ]
  %11 = phi %struct.loop* [ %4, %if.end ], [ %31, %if.end111 ]
  %12 = phi %struct.loop* [ %4, %if.end ], [ %32, %if.end111 ], !dbg !5826
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !5804, metadata !DIExpression()), !dbg !5807
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !5829
  %13 = load i32, i32* %num81, align 8, !dbg !5829
  %cmp82 = icmp slt i32 %13, 1, !dbg !5830
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !5831

if.then83:                                        ; preds = %while.cond79
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !5832
  %tobool85 = icmp eq %struct.VEC_int_heap* %14, null, !dbg !5832
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !5832

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !5832
  br label %cond.end90, !dbg !5832

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !5832
  call void @llvm.dbg.value(metadata %struct.loop* %11, metadata !5804, metadata !DIExpression()), !dbg !5807
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %11, i64 0, i32 0, !dbg !5832
  %15 = load i32, i32* %num92, align 8, !dbg !5832
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %15) #7, !dbg !5832
  br label %if.end94, !dbg !5832

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !5804, metadata !DIExpression()), !dbg !5807
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 8, !dbg !5833
  %16 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !5833
  %cmp96 = icmp eq %struct.loop* %16, null, !dbg !5835
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !5836

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !5837

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !5804, metadata !DIExpression()), !dbg !5807
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 8, !dbg !5839
  %17 = load %struct.loop*, %struct.loop** %inner98, align 8, !dbg !5839
  br label %if.end111, !dbg !5840

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %18 = phi %struct.loop* [ %5, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %19 = phi %struct.loop* [ %6, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %20 = phi %struct.loop* [ %7, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %21 = phi %struct.loop* [ %8, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !5841
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !5804, metadata !DIExpression()), !dbg !5807
  %cmp101 = icmp eq %struct.loop* %21, null, !dbg !5842
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !5843

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !5804, metadata !DIExpression()), !dbg !5807
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 9, !dbg !5844
  %22 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !5844
  %cmp103 = icmp eq %struct.loop* %22, null, !dbg !5845
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %23 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !5846
  call void @llvm.dbg.value(metadata %struct.loop* %19, metadata !5804, metadata !DIExpression()), !dbg !5807
  br i1 %23, label %while.body104, label %while.end106, !dbg !5837

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %19) #7, !dbg !5847
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !5804, metadata !DIExpression()), !dbg !5807
  br label %while.cond100, !dbg !5837, !llvm.loop !5848

while.end106:                                     ; preds = %land.end
  %.lcssa4 = phi %struct.loop* [ %18, %land.end ]
  %.lcssa = phi %struct.loop* [ %19, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !5850
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !5852

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa4, metadata !5804, metadata !DIExpression()), !dbg !5807
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa4, i64 0, i32 9, !dbg !5853
  %24 = load %struct.loop*, %struct.loop** %next110, align 8, !dbg !5853
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %25 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %26 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %27 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %28 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %29 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %30 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %31 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %32 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  br label %while.cond79, !dbg !5824, !llvm.loop !5854

if.end114.loopexit:                               ; preds = %while.end106
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !5856
  br label %cleanup, !dbg !5857

cleanup:                                          ; preds = %if.end114.loopexit, %if.then
  ret void, !dbg !5857
}

declare dso_local %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) unnamed_addr #0 !dbg !5858 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5862, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5863, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.value(metadata %struct.edge_def** %ptr, metadata !5864, metadata !DIExpression()), !dbg !5865
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5866
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5866

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5866
  %0 = load i32, i32* %num, align 8, !dbg !5866
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5866
  br i1 %cmp, label %if.then, label %if.else, !dbg !5868

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5869
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5869
  %1 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5869
  br label %return, !dbg !5869

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5871

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ null, %if.else ], [ %1, %if.then ], !dbg !5873
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5873
  store %struct.edge_def* %storemerge, %struct.edge_def** %ptr, align 8, !dbg !5873
  ret i32 %retval.0, !dbg !5868
}

declare dso_local zeroext i8 @number_of_iterations_exit(%struct.loop*, %struct.edge_def*, %struct.tree_niter_desc*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @loop_niter_by_eval(%struct.loop*, %struct.edge_def*) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @estimated_loop_iterations_int(%struct.loop*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) unnamed_addr #0 !dbg !5874 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !5879, metadata !DIExpression()), !dbg !5880
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !5881
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !5881
  br i1 %tobool, label %if.end, label %if.then, !dbg !5883

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_heap* %0 to i8*, !dbg !5883
  tail call void @free(i8* nonnull %1) #6, !dbg !5881
  br label %if.end, !dbg !5881

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %vec_, align 8, !dbg !5883
  ret void, !dbg !5883
}

declare dso_local %struct.basic_block_def** @get_loop_body(%struct.loop*) local_unnamed_addr #2

declare dso_local zeroext i8 @predicted_by_p(%struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !5884 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !5888, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !5889, metadata !DIExpression()), !dbg !5891
  %0 = bitcast i32* %anum to i8*, !dbg !5892
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5892
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !5891
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !5891
  br label %while.cond, !dbg !5893

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !5894
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !5894
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5894

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !5894
  br label %cond.end, !dbg !5894

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !5894
  %2 = load i32, i32* %idx, align 8, !dbg !5894
  call void @llvm.dbg.value(metadata i32* %anum, metadata !5890, metadata !DIExpression(DW_OP_deref)), !dbg !5891
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !5894
  %tobool2 = icmp eq i32 %call, 0, !dbg !5893
  br i1 %tobool2, label %while.end, label %while.body, !dbg !5893

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !5895
  %inc = add i32 %3, 1, !dbg !5895
  store i32 %inc, i32* %idx, align 8, !dbg !5895
  %4 = load i32, i32* %anum, align 4, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %4, metadata !5890, metadata !DIExpression()), !dbg !5891
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !5898
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !5899
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !5900
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !5902, !llvm.loop !5903

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !5905
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !5906
  br label %cleanup, !dbg !5907

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !5907

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5907
  ret void, !dbg !5907
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5908 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5912, metadata !DIExpression()), !dbg !5913
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !5914
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !5914
  ret %struct.VEC_int_heap* %0, !dbg !5914
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !5915 {
entry:
  unreachable, !dbg !5922
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !5923 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !5929, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !5930, metadata !DIExpression()), !dbg !5932
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !5933
  %0 = load i32, i32* %num1, align 4, !dbg !5933
  %inc = add i32 %0, 1, !dbg !5933
  store i32 %inc, i32* %num1, align 4, !dbg !5933
  %idxprom = zext i32 %0 to i64, !dbg !5933
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5933
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !5931, metadata !DIExpression()), !dbg !5932
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !5933
  ret i32* %arrayidx, !dbg !5933
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !5934 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !5940, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5941, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !5942, metadata !DIExpression()), !dbg !5943
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !5944
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5944

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !5944
  %0 = load i32, i32* %num, align 4, !dbg !5944
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5944
  br i1 %cmp, label %if.then, label %if.else, !dbg !5946

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5947
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5947
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5947
  br label %return, !dbg !5947

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5949

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !5951
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5951
  store i32 %storemerge, i32* %ptr, align 4, !dbg !5951
  ret i32 %retval.0, !dbg !5946
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !5952 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !5956, metadata !DIExpression()), !dbg !5957
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5958
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !5958
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !5958
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !5958
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !5958
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !5958
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5958

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !5958
  br label %cond.end, !dbg !5958

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5958
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !5958
  ret %struct.loop* %call, !dbg !5959
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !5960 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !5965, metadata !DIExpression()), !dbg !5966
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !5967
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !5967
  br i1 %tobool, label %if.end, label %if.then, !dbg !5969

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !5969
  tail call void @free(i8* nonnull %1) #6, !dbg !5967
  br label %if.end, !dbg !5967

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !5969
  ret void, !dbg !5969
}

declare dso_local zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @tree_predict_by_opcode(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !5970 {
entry:
  %then_edge = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5972, metadata !DIExpression()), !dbg !5982
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #6, !dbg !5983
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5973, metadata !DIExpression()), !dbg !5982
  %0 = bitcast %struct.edge_def** %then_edge to i8*, !dbg !5984
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5984
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5985
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5985
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !5986
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5988

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !5989
  %cmp2 = icmp eq i32 %call1, 1, !dbg !5990
  br i1 %cmp2, label %if.end, label %cleanup, !dbg !5991

if.end:                                           ; preds = %lor.lhs.false
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5992
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5992
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5992
  %call3 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !5992
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5992
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 0, !dbg !5992
  store i32 %4, i32* %3, align 8, !dbg !5992
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5992
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 1, !dbg !5992
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !5992
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !5992
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5992
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5994
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5994
  br label %for.cond, !dbg !5992

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %7, align 8, !dbg !5996
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !5996
  call void @llvm.dbg.value(metadata %struct.edge_def** %then_edge, metadata !5974, metadata !DIExpression(DW_OP_deref)), !dbg !5982
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %then_edge) #7, !dbg !5996
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5992
  br i1 %tobool5, label %for.end, label %for.body, !dbg !5992

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !5997
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !5974, metadata !DIExpression()), !dbg !5982
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !5999
  %12 = load i32, i32* %flags, align 8, !dbg !5999
  %and = and i32 %12, 1024, !dbg !6000
  %tobool6 = icmp eq i32 %and, 0, !dbg !6000
  br i1 %tobool6, label %for.inc, label %for.end, !dbg !6001

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5981, metadata !DIExpression(DW_OP_deref)), !dbg !5982
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5996
  br label %for.cond, !dbg !5996, !llvm.loop !6002

for.end:                                          ; preds = %for.body, %for.cond
  %call9 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !6004
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5975, metadata !DIExpression()), !dbg !5982
  %call10 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !6005
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5976, metadata !DIExpression()), !dbg !5982
  %call11 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !6006
  call void @llvm.dbg.value(metadata i32 %call11, metadata !5979, metadata !DIExpression()), !dbg !5982
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6007
  %13 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !6007
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !5977, metadata !DIExpression()), !dbg !5982
  %call13 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6008
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call13, metadata !5980, metadata !DIExpression()), !dbg !5982
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !6009
  %call14 = call fastcc %union.tree_node* @expr_expected_value_1(%union.tree_node* %14, %union.tree_node* %call9, i32 %call11, %union.tree_node* %call10, %struct.bitmap_head_def* %call13) #7, !dbg !6010
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5978, metadata !DIExpression()), !dbg !5982
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call13) #6, !dbg !6011
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5980, metadata !DIExpression()), !dbg !5982
  %tobool15 = icmp eq %union.tree_node* %call14, null, !dbg !6012
  br i1 %tobool15, label %if.end21, label %if.then16, !dbg !6014

if.then16:                                        ; preds = %for.end
  %call17 = call i32 @integer_zerop(%union.tree_node* nonnull %call14) #6, !dbg !6015
  %tobool18 = icmp eq i32 %call17, 0, !dbg !6015
  %15 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6018
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !5974, metadata !DIExpression()), !dbg !5982
  br i1 %tobool18, label %if.else, label %if.then19, !dbg !6019

if.then19:                                        ; preds = %if.then16
  call void @predict_edge_def(%struct.edge_def* %15, i32 6, i32 0) #7, !dbg !6020
  br label %cleanup, !dbg !6020

if.else:                                          ; preds = %if.then16
  call void @predict_edge_def(%struct.edge_def* %15, i32 6, i32 1) #7, !dbg !6021
  br label %cleanup

if.end21:                                         ; preds = %for.end
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6022
  %bf.load = load i64, i64* %16, align 8, !dbg !6022
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6022
  %cmp22 = icmp eq i64 %bf.cast1, 10, !dbg !6022
  br i1 %cmp22, label %if.then29, label %lor.lhs.false23, !dbg !6022

lor.lhs.false23:                                  ; preds = %if.end21
  %cmp28 = icmp eq i64 %bf.cast1, 12, !dbg !6022
  br i1 %cmp28, label %if.then29, label %if.else37, !dbg !6024

if.then29:                                        ; preds = %lor.lhs.false23, %if.end21
  switch i32 %call11, label %cleanup [
    i32 101, label %if.then31
    i32 102, label %if.then34
  ], !dbg !6025

if.then31:                                        ; preds = %if.then29
  %17 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6027
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %17, i32 14, i32 0) #7, !dbg !6029
  br label %cleanup, !dbg !6029

if.then34:                                        ; preds = %if.then29
  %18 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6030
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %18, i32 14, i32 1) #7, !dbg !6032
  br label %cleanup, !dbg !6032

if.else37:                                        ; preds = %lor.lhs.false23
  switch i32 %call11, label %cleanup [
    i32 101, label %sw.bb
    i32 109, label %sw.bb
    i32 102, label %sw.bb73
    i32 110, label %sw.bb73
    i32 104, label %sw.bb110
    i32 103, label %sw.bb111
    i32 98, label %sw.bb112
    i32 97, label %sw.bb112
    i32 100, label %sw.bb132
    i32 99, label %sw.bb132
  ], !dbg !6033

sw.bb:                                            ; preds = %if.else37, %if.else37
  %cmp42 = icmp eq i64 %bf.cast1, 9, !dbg !6034
  br i1 %cmp42, label %cleanup, label %lor.lhs.false43, !dbg !6034

lor.lhs.false43:                                  ; preds = %sw.bb
  %cmp48 = icmp eq i64 %bf.cast1, 13, !dbg !6034
  br i1 %cmp48, label %land.lhs.true, label %lor.lhs.false49, !dbg !6034

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %cmp54 = icmp eq i64 %bf.cast1, 14, !dbg !6034
  br i1 %cmp54, label %land.lhs.true, label %if.else63, !dbg !6034

land.lhs.true:                                    ; preds = %lor.lhs.false49, %lor.lhs.false43
  %type56 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6034
  %19 = bitcast %union.tree_node** %type56 to i64**, !dbg !6034
  %20 = load i64*, i64** %19, align 8, !dbg !6034
  %bf.load58 = load i64, i64* %20, align 8, !dbg !6034
  %bf.cast6010 = and i64 %bf.load58, 65535, !dbg !6034
  %cmp61 = icmp eq i64 %bf.cast6010, 9, !dbg !6034
  br i1 %cmp61, label %cleanup, label %if.else63, !dbg !6037

if.else63:                                        ; preds = %land.lhs.true, %lor.lhs.false49
  %call64 = call i32 @integer_zerop(%union.tree_node* %call9) #6, !dbg !6038
  %tobool65 = icmp eq i32 %call64, 0, !dbg !6038
  br i1 %tobool65, label %lor.lhs.false66, label %cleanup, !dbg !6040

lor.lhs.false66:                                  ; preds = %if.else63
  %call67 = call i32 @integer_zerop(%union.tree_node* %call10) #6, !dbg !6041
  %tobool68 = icmp eq i32 %call67, 0, !dbg !6041
  br i1 %tobool68, label %if.else70, label %cleanup, !dbg !6042

if.else70:                                        ; preds = %lor.lhs.false66
  %21 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6043
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %21, i32 19, i32 0) #7, !dbg !6044
  br label %cleanup

sw.bb73:                                          ; preds = %if.else37, %if.else37
  %cmp78 = icmp eq i64 %bf.cast1, 9, !dbg !6045
  br i1 %cmp78, label %cleanup, label %lor.lhs.false79, !dbg !6045

lor.lhs.false79:                                  ; preds = %sw.bb73
  %cmp84 = icmp eq i64 %bf.cast1, 13, !dbg !6045
  br i1 %cmp84, label %land.lhs.true91, label %lor.lhs.false85, !dbg !6045

lor.lhs.false85:                                  ; preds = %lor.lhs.false79
  %cmp90 = icmp eq i64 %bf.cast1, 14, !dbg !6045
  br i1 %cmp90, label %land.lhs.true91, label %if.else100, !dbg !6045

land.lhs.true91:                                  ; preds = %lor.lhs.false85, %lor.lhs.false79
  %type93 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6045
  %22 = bitcast %union.tree_node** %type93 to i64**, !dbg !6045
  %23 = load i64*, i64** %22, align 8, !dbg !6045
  %bf.load95 = load i64, i64* %23, align 8, !dbg !6045
  %bf.cast976 = and i64 %bf.load95, 65535, !dbg !6045
  %cmp98 = icmp eq i64 %bf.cast976, 9, !dbg !6045
  br i1 %cmp98, label %cleanup, label %if.else100, !dbg !6047

if.else100:                                       ; preds = %land.lhs.true91, %lor.lhs.false85
  %call101 = call i32 @integer_zerop(%union.tree_node* %call9) #6, !dbg !6048
  %tobool102 = icmp eq i32 %call101, 0, !dbg !6048
  br i1 %tobool102, label %lor.lhs.false103, label %cleanup, !dbg !6050

lor.lhs.false103:                                 ; preds = %if.else100
  %call104 = call i32 @integer_zerop(%union.tree_node* %call10) #6, !dbg !6051
  %tobool105 = icmp eq i32 %call104, 0, !dbg !6051
  br i1 %tobool105, label %if.else107, label %cleanup, !dbg !6052

if.else107:                                       ; preds = %lor.lhs.false103
  %24 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6053
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %24, i32 19, i32 1) #7, !dbg !6054
  br label %cleanup

sw.bb110:                                         ; preds = %if.else37
  %25 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6055
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %25, i32 20, i32 1) #7, !dbg !6056
  br label %cleanup, !dbg !6057

sw.bb111:                                         ; preds = %if.else37
  %26 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6058
  call void @llvm.dbg.value(metadata %struct.edge_def* %26, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %26, i32 20, i32 0) #7, !dbg !6059
  br label %cleanup, !dbg !6060

sw.bb112:                                         ; preds = %if.else37, %if.else37
  %call113 = call i32 @integer_zerop(%union.tree_node* %call10) #6, !dbg !6061
  %tobool114 = icmp eq i32 %call113, 0, !dbg !6061
  br i1 %tobool114, label %lor.lhs.false115, label %if.then130, !dbg !6063

lor.lhs.false115:                                 ; preds = %sw.bb112
  %call116 = call i32 @integer_onep(%union.tree_node* %call10) #6, !dbg !6064
  %tobool117 = icmp eq i32 %call116, 0, !dbg !6064
  br i1 %tobool117, label %lor.lhs.false118, label %if.then130, !dbg !6065

lor.lhs.false118:                                 ; preds = %lor.lhs.false115
  %call119 = call i32 @integer_all_onesp(%union.tree_node* %call10) #6, !dbg !6066
  %tobool120 = icmp eq i32 %call119, 0, !dbg !6066
  br i1 %tobool120, label %lor.lhs.false121, label %if.then130, !dbg !6067

lor.lhs.false121:                                 ; preds = %lor.lhs.false118
  %call122 = call i32 @real_zerop(%union.tree_node* %call10) #6, !dbg !6068
  %tobool123 = icmp eq i32 %call122, 0, !dbg !6068
  br i1 %tobool123, label %lor.lhs.false124, label %if.then130, !dbg !6069

lor.lhs.false124:                                 ; preds = %lor.lhs.false121
  %call125 = call i32 @real_onep(%union.tree_node* %call10) #6, !dbg !6070
  %tobool126 = icmp eq i32 %call125, 0, !dbg !6070
  br i1 %tobool126, label %lor.lhs.false127, label %if.then130, !dbg !6071

lor.lhs.false127:                                 ; preds = %lor.lhs.false124
  %call128 = call i32 @real_minus_onep(%union.tree_node* %call10) #6, !dbg !6072
  %tobool129 = icmp eq i32 %call128, 0, !dbg !6072
  br i1 %tobool129, label %cleanup, label %if.then130, !dbg !6073

if.then130:                                       ; preds = %lor.lhs.false127, %lor.lhs.false124, %lor.lhs.false121, %lor.lhs.false118, %lor.lhs.false115, %sw.bb112
  %27 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6074
  call void @llvm.dbg.value(metadata %struct.edge_def* %27, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %27, i32 18, i32 0) #7, !dbg !6075
  br label %cleanup, !dbg !6075

sw.bb132:                                         ; preds = %if.else37, %if.else37
  %call133 = call i32 @integer_zerop(%union.tree_node* %call10) #6, !dbg !6076
  %tobool134 = icmp eq i32 %call133, 0, !dbg !6076
  br i1 %tobool134, label %lor.lhs.false135, label %if.then150, !dbg !6078

lor.lhs.false135:                                 ; preds = %sw.bb132
  %call136 = call i32 @integer_onep(%union.tree_node* %call10) #6, !dbg !6079
  %tobool137 = icmp eq i32 %call136, 0, !dbg !6079
  br i1 %tobool137, label %lor.lhs.false138, label %if.then150, !dbg !6080

lor.lhs.false138:                                 ; preds = %lor.lhs.false135
  %call139 = call i32 @integer_all_onesp(%union.tree_node* %call10) #6, !dbg !6081
  %tobool140 = icmp eq i32 %call139, 0, !dbg !6081
  br i1 %tobool140, label %lor.lhs.false141, label %if.then150, !dbg !6082

lor.lhs.false141:                                 ; preds = %lor.lhs.false138
  %call142 = call i32 @real_zerop(%union.tree_node* %call10) #6, !dbg !6083
  %tobool143 = icmp eq i32 %call142, 0, !dbg !6083
  br i1 %tobool143, label %lor.lhs.false144, label %if.then150, !dbg !6084

lor.lhs.false144:                                 ; preds = %lor.lhs.false141
  %call145 = call i32 @real_onep(%union.tree_node* %call10) #6, !dbg !6085
  %tobool146 = icmp eq i32 %call145, 0, !dbg !6085
  br i1 %tobool146, label %lor.lhs.false147, label %if.then150, !dbg !6086

lor.lhs.false147:                                 ; preds = %lor.lhs.false144
  %call148 = call i32 @real_minus_onep(%union.tree_node* %call10) #6, !dbg !6087
  %tobool149 = icmp eq i32 %call148, 0, !dbg !6087
  br i1 %tobool149, label %cleanup, label %if.then150, !dbg !6088

if.then150:                                       ; preds = %lor.lhs.false147, %lor.lhs.false144, %lor.lhs.false141, %lor.lhs.false138, %lor.lhs.false135, %sw.bb132
  %28 = load %struct.edge_def*, %struct.edge_def** %then_edge, align 8, !dbg !6089
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !5974, metadata !DIExpression()), !dbg !5982
  call void @predict_edge_def(%struct.edge_def* %28, i32 18, i32 1) #7, !dbg !6090
  br label %cleanup, !dbg !6090

cleanup:                                          ; preds = %lor.lhs.false66, %if.else63, %lor.lhs.false103, %if.else100, %lor.lhs.false127, %lor.lhs.false147, %lor.lhs.false, %entry, %if.then34, %if.then29, %if.then31, %if.else37, %if.then150, %if.then130, %land.lhs.true91, %sw.bb73, %if.else107, %land.lhs.true, %sw.bb, %if.else70, %sw.bb111, %sw.bb110, %if.then19, %if.else
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6091
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6091
  ret void, !dbg !6091
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6092 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6094, metadata !DIExpression()), !dbg !6095
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6096
  ret %union.tree_node* %call, !dbg !6097
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6098 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6100, metadata !DIExpression()), !dbg !6101
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6102
  ret %union.tree_node* %call, !dbg !6103
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6104 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6108, metadata !DIExpression()), !dbg !6109
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !6110
  %bf.load = load i32, i32* %0, align 8, !dbg !6110
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6110
  ret i32 %bf.lshr, !dbg !6111
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @expr_expected_value_1(%union.tree_node* %type, %union.tree_node* %op0, i32 %code, %union.tree_node* %op1, %struct.bitmap_head_def* %visited) unnamed_addr #5 !dbg !6112 {
entry:
  br label %tailrecurse, !dbg !6146

tailrecurse:                                      ; preds = %if.end47, %entry
  %type.tr = phi %union.tree_node* [ %type, %entry ], [ %6, %if.end47 ]
  %op0.tr = phi %union.tree_node* [ %op0, %entry ], [ %call50, %if.end47 ]
  %code.tr = phi i32 [ %code, %entry ], [ %call51, %if.end47 ]
  %op1.tr = phi %union.tree_node* [ %op1, %entry ], [ %call52, %if.end47 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr, metadata !6116, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.tr, metadata !6117, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata i32 %code.tr, metadata !6118, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.tr, metadata !6119, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %visited, metadata !6120, metadata !DIExpression()), !dbg !6149
  %call = tail call fastcc i32 @get_gimple_rhs_class(i32 %code.tr) #7, !dbg !6150
  %cmp = icmp eq i32 %call, 3, !dbg !6151
  br i1 %cmp, label %if.then, label %if.end92, !dbg !6152

if.then:                                          ; preds = %tailrecurse
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6153
  %bf.load = load i64, i64* %0, align 8, !dbg !6153
  %bf.cast3 = and i64 %bf.load, 131072, !dbg !6153
  %tobool = icmp eq i64 %bf.cast3, 0, !dbg !6153
  br i1 %tobool, label %if.end, label %cleanup134.loopexit5, !dbg !6155

if.end:                                           ; preds = %if.then
  %cmp2 = icmp eq i32 %code.tr, 141, !dbg !6156
  br i1 %cmp2, label %if.end4, label %cleanup134.loopexit5, !dbg !6158

if.end4:                                          ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6159
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6159
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !6159
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !6121, metadata !DIExpression()), !dbg !6149
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6160
  %3 = bitcast %union.tree_node** %version to i32*, !dbg !6160
  %4 = load i32, i32* %3, align 8, !dbg !6160
  %call6 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %visited, i32 %4) #6, !dbg !6162
  %tobool7 = icmp eq i32 %call6, 0, !dbg !6162
  br i1 %tobool7, label %if.end9, label %cleanup134.loopexit5, !dbg !6163

if.end9:                                          ; preds = %if.end4
  %5 = load i32, i32* %3, align 8, !dbg !6164
  %call12 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %visited, i32 %5) #6, !dbg !6165
  %call13 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %2) #7, !dbg !6166
  %cmp14 = icmp eq i32 %call13, 16, !dbg !6167
  br i1 %cmp14, label %if.then15, label %if.end40, !dbg !6168

if.then15:                                        ; preds = %if.end9
  %.lcssa = phi %union.gimple_statement_d* [ %2, %if.end9 ], !dbg !6159
  %call16 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %.lcssa) #7, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %call16, metadata !6127, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6128, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i32 0, metadata !6122, metadata !DIExpression()), !dbg !6170
  br label %for.cond, !dbg !6171

for.cond:                                         ; preds = %for.inc, %if.then15
  %i.0 = phi i32 [ 0, %if.then15 ], [ %inc, %for.inc ], !dbg !6172
  %val.0 = phi %union.tree_node* [ null, %if.then15 ], [ %val.2, %for.inc ], !dbg !6173
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !6128, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6122, metadata !DIExpression()), !dbg !6170
  %cmp17 = icmp slt i32 %i.0, %call16, !dbg !6174
  br i1 %cmp17, label %for.body, label %cleanup134.loopexit, !dbg !6175

for.body:                                         ; preds = %for.cond
  %call18 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %.lcssa, i32 %i.0) #7, !dbg !6176
  %call19 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call18) #7, !dbg !6176
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !6130, metadata !DIExpression()), !dbg !6177
  %call20 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %.lcssa) #7, !dbg !6178
  %call21 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call20) #7, !dbg !6178
  %cmp22 = icmp eq %union.tree_node* %call19, %call21, !dbg !6180
  br i1 %cmp22, label %cleanup, label %if.end24, !dbg !6181

if.end24:                                         ; preds = %for.body
  %call25 = tail call fastcc %union.tree_node* @expr_expected_value(%union.tree_node* %call19, %struct.bitmap_head_def* %visited) #7, !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !6129, metadata !DIExpression()), !dbg !6170
  %tobool26 = icmp eq %union.tree_node* %call25, null, !dbg !6183
  br i1 %tobool26, label %cleanup, label %if.end28, !dbg !6185

if.end28:                                         ; preds = %if.end24
  %tobool29 = icmp eq %union.tree_node* %val.0, null, !dbg !6186
  br i1 %tobool29, label %if.end35, label %if.else, !dbg !6188

if.else:                                          ; preds = %if.end28
  %call31 = tail call i32 @operand_equal_p(%union.tree_node* nonnull %val.0, %union.tree_node* nonnull %call25, i32 0) #6, !dbg !6189
  %tobool32 = icmp eq i32 %call31, 0, !dbg !6189
  br i1 %tobool32, label %cleanup, label %if.end35, !dbg !6191

if.end35:                                         ; preds = %if.else, %if.end28
  %val.1 = phi %union.tree_node* [ %call25, %if.end28 ], [ %val.0, %if.else ], !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !6128, metadata !DIExpression()), !dbg !6170
  br label %cleanup, !dbg !6192

cleanup:                                          ; preds = %if.else, %if.end24, %for.body, %if.end35
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end35 ], [ 4, %for.body ], [ 1, %if.end24 ], [ 1, %if.else ]
  %val.2 = phi %union.tree_node* [ %val.1, %if.end35 ], [ %val.0, %for.body ], [ %val.0, %if.end24 ], [ %val.0, %if.else ], !dbg !6173
  call void @llvm.dbg.value(metadata %union.tree_node* %val.2, metadata !6128, metadata !DIExpression()), !dbg !6170
  switch i32 %cleanup.dest.slot.0, label %cleanup134.loopexit [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6193
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6122, metadata !DIExpression()), !dbg !6170
  br label %for.cond, !dbg !6194, !llvm.loop !6195

if.end40:                                         ; preds = %if.end9
  %call41 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %2) #7, !dbg !6197
  %tobool42 = icmp eq i8 %call41, 0, !dbg !6197
  br i1 %tobool42, label %if.end54, label %if.then43, !dbg !6198

if.then43:                                        ; preds = %if.end40
  %call44 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %2) #7, !dbg !6199
  %cmp45 = icmp eq %union.tree_node* %call44, %op0.tr, !dbg !6201
  br i1 %cmp45, label %if.end47, label %cleanup134.loopexit5, !dbg !6202

if.end47:                                         ; preds = %if.then43
  %call48 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %2) #7, !dbg !6203
  %type49 = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6203
  %6 = load %union.tree_node*, %union.tree_node** %type49, align 8, !dbg !6203
  %call50 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !6204
  %call51 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %2) #7, !dbg !6205
  %call52 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %2) #7, !dbg !6206
  br label %tailrecurse, !dbg !6146

if.end54:                                         ; preds = %if.end40
  %.lcssa33 = phi %union.gimple_statement_d* [ %2, %if.end40 ], !dbg !6159
  %call55 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %.lcssa33) #7, !dbg !6207
  %tobool56 = icmp eq i8 %call55, 0, !dbg !6207
  br i1 %tobool56, label %if.end91, label %if.then57, !dbg !6208

if.then57:                                        ; preds = %if.end54
  %call58 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %.lcssa33) #7, !dbg !6209
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !6134, metadata !DIExpression()), !dbg !6210
  %tobool59 = icmp eq %union.tree_node* %call58, null, !dbg !6211
  br i1 %tobool59, label %cleanup88, label %if.end61, !dbg !6213

if.end61:                                         ; preds = %if.then57
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call58, i64 0, i32 0, i32 5, !dbg !6214
  %bf.load62 = load i32, i32* %built_in_class, align 8, !dbg !6214
  %bf.clear64 = and i32 %bf.load62, 6144, !dbg !6214
  %cmp65 = icmp eq i32 %bf.clear64, 6144, !dbg !6215
  br i1 %cmp65, label %land.lhs.true, label %cleanup88, !dbg !6216

land.lhs.true:                                    ; preds = %if.end61
  %bf.clear68 = and i32 %bf.load62, 2047, !dbg !6217
  %cmp69 = icmp eq i32 %bf.clear68, 446, !dbg !6218
  br i1 %cmp69, label %if.then70, label %cleanup88, !dbg !6219

if.then70:                                        ; preds = %land.lhs.true
  %call72 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %.lcssa33) #7, !dbg !6220
  %cmp73 = icmp eq i32 %call72, 2, !dbg !6222
  br i1 %cmp73, label %if.end75, label %cleanup88, !dbg !6223

if.end75:                                         ; preds = %if.then70
  %call76 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %.lcssa33, i32 0) #7, !dbg !6224
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !6137, metadata !DIExpression()), !dbg !6225
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6226
  %bf.load78 = load i64, i64* %7, align 8, !dbg !6226
  %bf.cast814 = and i64 %bf.load78, 131072, !dbg !6226
  %tobool82 = icmp eq i64 %bf.cast814, 0, !dbg !6226
  br i1 %tobool82, label %if.end84, label %cleanup88, !dbg !6228

if.end84:                                         ; preds = %if.end75
  %call85 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %.lcssa33, i32 1) #7, !dbg !6229
  br label %cleanup88, !dbg !6230

cleanup88:                                        ; preds = %if.end75, %if.then70, %if.then57, %if.end61, %land.lhs.true, %if.end84
  %cleanup.dest.slot.2 = phi i1 [ false, %if.then57 ], [ false, %if.end75 ], [ false, %if.then70 ], [ false, %if.end84 ], [ true, %land.lhs.true ], [ true, %if.end61 ]
  %retval.4 = phi %union.tree_node* [ null, %if.then57 ], [ %call76, %if.end75 ], [ null, %if.then70 ], [ %call85, %if.end84 ], [ undef, %land.lhs.true ], [ undef, %if.end61 ]
  br i1 %cleanup.dest.slot.2, label %if.end91, label %cleanup134

if.end91:                                         ; preds = %if.end54, %cleanup88
  br label %cleanup134, !dbg !6231

if.end92:                                         ; preds = %tailrecurse
  %type.tr.lcssa = phi %union.tree_node* [ %type.tr, %tailrecurse ]
  %op0.tr.lcssa = phi %union.tree_node* [ %op0.tr, %tailrecurse ]
  %code.tr.lcssa = phi i32 [ %code.tr, %tailrecurse ]
  %op1.tr.lcssa = phi %union.tree_node* [ %op1.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa, metadata !6116, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.tr.lcssa, metadata !6117, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata i32 %code.tr.lcssa, metadata !6118, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.tr.lcssa, metadata !6119, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa, metadata !6116, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.tr.lcssa, metadata !6117, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata i32 %code.tr.lcssa, metadata !6118, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.tr.lcssa, metadata !6119, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa, metadata !6116, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.tr.lcssa, metadata !6117, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata i32 %code.tr.lcssa, metadata !6118, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.tr.lcssa, metadata !6119, metadata !DIExpression()), !dbg !6149
  %call93 = tail call fastcc i32 @get_gimple_rhs_class(i32 %code.tr.lcssa) #7, !dbg !6232
  %cmp94 = icmp eq i32 %call93, 1, !dbg !6233
  br i1 %cmp94, label %if.then95, label %if.end114, !dbg !6234

if.then95:                                        ; preds = %if.end92
  %call96 = tail call fastcc %union.tree_node* @expr_expected_value(%union.tree_node* %op0.tr.lcssa, %struct.bitmap_head_def* %visited) #7, !dbg !6235
  call void @llvm.dbg.value(metadata %union.tree_node* %call96, metadata !6117, metadata !DIExpression()), !dbg !6149
  %tobool97 = icmp eq %union.tree_node* %call96, null, !dbg !6236
  br i1 %tobool97, label %cleanup134, label %if.end99, !dbg !6238

if.end99:                                         ; preds = %if.then95
  %call100 = tail call fastcc %union.tree_node* @expr_expected_value(%union.tree_node* %op1.tr.lcssa, %struct.bitmap_head_def* %visited) #7, !dbg !6239
  call void @llvm.dbg.value(metadata %union.tree_node* %call100, metadata !6119, metadata !DIExpression()), !dbg !6149
  %tobool101 = icmp eq %union.tree_node* %call100, null, !dbg !6240
  br i1 %tobool101, label %cleanup134, label %if.end103, !dbg !6242

if.end103:                                        ; preds = %if.end99
  %call104 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %code.tr.lcssa, %union.tree_node* %type.tr.lcssa, %union.tree_node* nonnull %call96, %union.tree_node* nonnull %call100) #6, !dbg !6243
  call void @llvm.dbg.value(metadata %union.tree_node* %call104, metadata !6140, metadata !DIExpression()), !dbg !6244
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6245
  %bf.load106 = load i64, i64* %8, align 8, !dbg !6245
  %bf.cast1092 = and i64 %bf.load106, 131072, !dbg !6245
  %tobool110 = icmp eq i64 %bf.cast1092, 0, !dbg !6245
  %call104. = select i1 %tobool110, %union.tree_node* null, %union.tree_node* %call104, !dbg !6244
  br label %cleanup134, !dbg !6244

if.end114:                                        ; preds = %if.end92
  %call115 = tail call fastcc i32 @get_gimple_rhs_class(i32 %code.tr.lcssa) #7, !dbg !6247
  %cmp116 = icmp eq i32 %call115, 2, !dbg !6248
  br i1 %cmp116, label %if.then117, label %cleanup134, !dbg !6249

if.then117:                                       ; preds = %if.end114
  %call119 = tail call fastcc %union.tree_node* @expr_expected_value(%union.tree_node* %op0.tr.lcssa, %struct.bitmap_head_def* %visited) #7, !dbg !6250
  call void @llvm.dbg.value(metadata %union.tree_node* %call119, metadata !6117, metadata !DIExpression()), !dbg !6149
  %tobool120 = icmp eq %union.tree_node* %call119, null, !dbg !6251
  br i1 %tobool120, label %cleanup134, label %if.end122, !dbg !6253

if.end122:                                        ; preds = %if.then117
  %call123 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %code.tr.lcssa, %union.tree_node* %type.tr.lcssa, %union.tree_node* nonnull %call119) #6, !dbg !6254
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !6143, metadata !DIExpression()), !dbg !6255
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6256
  %bf.load125 = load i64, i64* %9, align 8, !dbg !6256
  %bf.cast1281 = and i64 %bf.load125, 131072, !dbg !6256
  %tobool129 = icmp eq i64 %bf.cast1281, 0, !dbg !6256
  %call123. = select i1 %tobool129, %union.tree_node* null, %union.tree_node* %call123, !dbg !6255
  br label %cleanup134, !dbg !6255

cleanup134.loopexit:                              ; preds = %for.cond, %cleanup
  %retval.7.ph = phi %union.tree_node* [ %val.0, %for.cond ], [ null, %cleanup ]
  br label %cleanup134, !dbg !6258

cleanup134.loopexit5:                             ; preds = %if.then, %if.end, %if.end4, %if.then43
  %retval.7.ph6 = phi %union.tree_node* [ null, %if.then43 ], [ null, %if.end4 ], [ null, %if.end ], [ %op0.tr, %if.then ]
  br label %cleanup134, !dbg !6258

cleanup134:                                       ; preds = %cleanup134.loopexit5, %cleanup134.loopexit, %if.end99, %if.then95, %if.then117, %if.end114, %if.end122, %if.end103, %cleanup88, %if.end91
  %retval.7 = phi %union.tree_node* [ %retval.4, %cleanup88 ], [ null, %if.end91 ], [ null, %if.then95 ], [ null, %if.end99 ], [ %call104., %if.end103 ], [ null, %if.then117 ], [ %call123., %if.end122 ], [ null, %if.end114 ], [ %retval.7.ph, %cleanup134.loopexit ], [ %retval.7.ph6, %cleanup134.loopexit5 ]
  ret %union.tree_node* %retval.7, !dbg !6258
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i32 @integer_all_onesp(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @real_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @real_onep(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @real_minus_onep(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !6259 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6263, metadata !DIExpression()), !dbg !6264
  %idxprom = sext i32 %code to i64, !dbg !6265
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !6265
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6265
  %conv = zext i8 %0 to i32, !dbg !6266
  ret i32 %conv, !dbg !6267
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !6268 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6273, metadata !DIExpression()), !dbg !6274
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !6275
  ret %union.tree_node* %0, !dbg !6276
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6277 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6279, metadata !DIExpression()), !dbg !6280
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6281
  ret %union.tree_node** %result, !dbg !6282
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @expr_expected_value(%union.tree_node* %expr, %struct.bitmap_head_def* %visited) unnamed_addr #5 !dbg !6283 {
entry:
  %code = alloca i32, align 4
  %op0 = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6287, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %visited, metadata !6288, metadata !DIExpression()), !dbg !6292
  %0 = bitcast i32* %code to i8*, !dbg !6293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6293
  %1 = bitcast %union.tree_node** %op0 to i8*, !dbg !6294
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6294
  %2 = bitcast %union.tree_node** %op1 to i8*, !dbg !6294
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6294
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6295
  %bf.load = load i64, i64* %3, align 8, !dbg !6295
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !6295
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6295
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6297

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %code, metadata !6289, metadata !DIExpression(DW_OP_deref)), !dbg !6292
  call void @llvm.dbg.value(metadata %union.tree_node** %op0, metadata !6290, metadata !DIExpression(DW_OP_deref)), !dbg !6292
  call void @llvm.dbg.value(metadata %union.tree_node** %op1, metadata !6291, metadata !DIExpression(DW_OP_deref)), !dbg !6292
  call void @extract_ops_from_tree(%union.tree_node* %expr, i32* nonnull %code, %union.tree_node** nonnull %op0, %union.tree_node** nonnull %op1) #6, !dbg !6298
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6299
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6299
  %5 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !6300
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6290, metadata !DIExpression()), !dbg !6292
  %6 = load i32, i32* %code, align 4, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %6, metadata !6289, metadata !DIExpression()), !dbg !6292
  %7 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !6302
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6291, metadata !DIExpression()), !dbg !6292
  %call = call fastcc %union.tree_node* @expr_expected_value_1(%union.tree_node* %4, %union.tree_node* %5, i32 %6, %union.tree_node* %7, %struct.bitmap_head_def* %visited) #7, !dbg !6303
  br label %cleanup, !dbg !6304

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call, %if.end ], [ %expr, %entry ], !dbg !6292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6305
  ret %union.tree_node* %retval.0, !dbg !6305
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6306 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6308, metadata !DIExpression()), !dbg !6309
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6310
  %cmp = icmp eq i32 %call, 6, !dbg !6311
  %conv1 = zext i1 %cmp to i8, !dbg !6310
  ret i8 %conv1, !dbg !6312
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6313 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6315, metadata !DIExpression()), !dbg !6316
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6317
  ret %union.tree_node* %call, !dbg !6318
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6319 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6321, metadata !DIExpression()), !dbg !6322
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6323
  ret %union.tree_node* %call, !dbg !6324
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6325 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6327, metadata !DIExpression()), !dbg !6329
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !6330
  call void @llvm.dbg.value(metadata i32 %call, metadata !6328, metadata !DIExpression()), !dbg !6329
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !6331
  %cmp = icmp eq i32 %call1, 3, !dbg !6333
  br i1 %cmp, label %if.then, label %if.end, !dbg !6334

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !6335
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6335
  %bf.load = load i64, i64* %0, align 8, !dbg !6335
  %1 = trunc i64 %bf.load to i32, !dbg !6335
  %bf.cast = and i32 %1, 65535, !dbg !6335
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6328, metadata !DIExpression()), !dbg !6329
  br label %if.end, !dbg !6336

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !6329
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !6328, metadata !DIExpression()), !dbg !6329
  ret i32 %code.0, !dbg !6337
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6338 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6340, metadata !DIExpression()), !dbg !6341
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6342
  %cmp = icmp ugt i32 %call, 2, !dbg !6344
  br i1 %cmp, label %if.then, label %return, !dbg !6345

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !6346
  br label %return, !dbg !6347

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !6348
  ret %union.tree_node* %retval.0, !dbg !6349
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6350 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6352, metadata !DIExpression()), !dbg !6354
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6355
  call void @llvm.dbg.value(metadata i32 %call, metadata !6353, metadata !DIExpression()), !dbg !6354
  %sub = add i32 %call, -3, !dbg !6356
  ret i32 %sub, !dbg !6357
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6358 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6360, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %index, metadata !6361, metadata !DIExpression()), !dbg !6362
  %add = add i32 %index, 3, !dbg !6363
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !6364
  ret %union.tree_node* %call, !dbg !6365
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @extract_ops_from_tree(%union.tree_node*, i32*, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6366 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6368, metadata !DIExpression()), !dbg !6370
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6371
  call void @llvm.dbg.value(metadata i32 %call, metadata !6369, metadata !DIExpression()), !dbg !6370
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !6372

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6374
  %bf.load = load i32, i32* %0, align 8, !dbg !6374
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6374
  br label %cleanup, !dbg !6375

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6376
  br label %cleanup, !dbg !6378

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !6370
  ret i32 %retval.0, !dbg !6379
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6380 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6382, metadata !DIExpression()), !dbg !6383
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !6384
  %0 = load i32, i32* %num_ops, align 4, !dbg !6384
  ret i32 %0, !dbg !6385
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_bb_predictions(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !6386 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6388, metadata !DIExpression()), !dbg !6392
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @bb_predictions, align 8, !dbg !6393
  %1 = bitcast %struct.basic_block_def* %bb to i8*, !dbg !6394
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !6395
  call void @llvm.dbg.value(metadata i8** %call, metadata !6389, metadata !DIExpression()), !dbg !6392
  %tobool = icmp eq i8** %call, null, !dbg !6396
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !6398

if.end:                                           ; preds = %entry
  %2 = bitcast i8** %call to %struct.edge_prediction**, !dbg !6399
  %3 = load %struct.edge_prediction*, %struct.edge_prediction** %2, align 8, !dbg !6399
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %3, metadata !6390, metadata !DIExpression()), !dbg !6392
  br label %for.cond, !dbg !6401

for.cond:                                         ; preds = %for.body, %if.end
  %.in = phi %struct.edge_prediction* [ %3, %if.end ], [ %5, %for.body ]
  %pred.0 = phi %struct.edge_prediction* [ %3, %if.end ], [ %5, %for.body ], !dbg !6402
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %pred.0, metadata !6390, metadata !DIExpression()), !dbg !6392
  %tobool1 = icmp eq %struct.edge_prediction* %pred.0, null, !dbg !6403
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6403

for.body:                                         ; preds = %for.cond
  %4 = bitcast %struct.edge_prediction* %.in to i8*, !dbg !6402
  %ep_next = getelementptr inbounds %struct.edge_prediction, %struct.edge_prediction* %pred.0, i64 0, i32 0, !dbg !6404
  %5 = load %struct.edge_prediction*, %struct.edge_prediction** %ep_next, align 8, !dbg !6404
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %5, metadata !6391, metadata !DIExpression()), !dbg !6392
  tail call void @free(i8* %4) #6, !dbg !6407
  call void @llvm.dbg.value(metadata %struct.edge_prediction* %5, metadata !6390, metadata !DIExpression()), !dbg !6392
  br label %for.cond, !dbg !6408, !llvm.loop !6409

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %call, align 8, !dbg !6411
  br label %cleanup.cont, !dbg !6412

cleanup.cont:                                     ; preds = %entry, %for.end
  ret void, !dbg !6412
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6413 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6418
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6418
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6418

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6418
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6418
  br label %cond.end, !dbg !6418

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6418
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6418
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !6419
  %conv3 = zext i1 %cmp to i8, !dbg !6420
  ret i8 %conv3, !dbg !6421
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6422 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6427
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6427
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6427

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !6427
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6427
  br label %cond.end, !dbg !6427

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6427
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !6427
  ret %struct.edge_def* %call2, !dbg !6428
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6429 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6434
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6434

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6434
  br label %cond.end, !dbg !6434

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6435
  ret %struct.VEC_edge_gc* %0, !dbg !6436
}

; Function Attrs: nounwind uwtable
define internal fastcc void @estimate_loops_at_level(%struct.loop* %first_loop) unnamed_addr #5 !dbg !6437 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %first_loop, metadata !6441, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata %struct.loop* %first_loop, metadata !6442, metadata !DIExpression()), !dbg !6450
  br label %for.cond, !dbg !6451

for.cond:                                         ; preds = %for.end, %entry
  %loop.0 = phi %struct.loop* [ %first_loop, %entry ], [ %9, %for.end ], !dbg !6452
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !6442, metadata !DIExpression()), !dbg !6450
  %tobool = icmp eq %struct.loop* %loop.0, null, !dbg !6453
  br i1 %tobool, label %for.end7, label %for.body, !dbg !6453

for.body:                                         ; preds = %for.cond
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6454
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !6449, metadata !DIExpression()), !dbg !6455
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop.0, i64 0, i32 8, !dbg !6456
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !6456
  tail call fastcc void @estimate_loops_at_level(%struct.loop* %0) #7, !dbg !6457
  %call1 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* nonnull %loop.0) #6, !dbg !6458
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !6443, metadata !DIExpression()), !dbg !6455
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 3, !dbg !6459
  %1 = bitcast i8** %aux to %struct.edge_info_def**, !dbg !6459
  %2 = load %struct.edge_info_def*, %struct.edge_info_def** %1, align 8, !dbg !6459
  %back_edge = getelementptr inbounds %struct.edge_info_def, %struct.edge_info_def* %2, i64 0, i32 1, !dbg !6460
  %bf.load = load i8, i8* %back_edge, align 8, !dbg !6461
  %bf.set = or i8 %bf.load, 1, !dbg !6461
  store i8 %bf.set, i8* %back_edge, align 8, !dbg !6461
  %call2 = tail call %struct.basic_block_def** @get_loop_body(%struct.loop* nonnull %loop.0) #6, !dbg !6462
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call2, metadata !6447, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i32 0, metadata !6448, metadata !DIExpression()), !dbg !6455
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop.0, i64 0, i32 6, !dbg !6463
  br label %for.cond3, !dbg !6466

for.cond3:                                        ; preds = %for.body4, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ 0, %for.body ], !dbg !6467
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6448, metadata !DIExpression()), !dbg !6455
  %3 = load i32, i32* %num_nodes, align 4, !dbg !6468
  %4 = zext i32 %3 to i64, !dbg !6469
  %cmp = icmp ult i64 %indvars.iv, %4, !dbg !6469
  br i1 %cmp, label %for.body4, label %for.end, !dbg !6470

for.body4:                                        ; preds = %for.cond3
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call2, i64 %indvars.iv, !dbg !6471
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6471
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 9, !dbg !6472
  %6 = load i32, i32* %index, align 8, !dbg !6472
  %call5 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %6) #6, !dbg !6473
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6474
  br label %for.cond3, !dbg !6475, !llvm.loop !6476

for.end:                                          ; preds = %for.cond3
  %7 = bitcast %struct.basic_block_def** %call2 to i8*, !dbg !6478
  tail call void @free(i8* %7) #6, !dbg !6479
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop.0, i64 0, i32 2, !dbg !6480
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !6480
  tail call fastcc void @propagate_freq(%struct.basic_block_def* %8, %struct.bitmap_head_def* %call) #7, !dbg !6481
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !6482
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !6449, metadata !DIExpression()), !dbg !6455
  %next = getelementptr inbounds %struct.loop, %struct.loop* %loop.0, i64 0, i32 9, !dbg !6483
  %9 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !6483
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !6442, metadata !DIExpression()), !dbg !6450
  br label %for.cond, !dbg !6484, !llvm.loop !6485

for.end7:                                         ; preds = %for.cond
  ret void, !dbg !6487
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_freq(%struct.basic_block_def* %head, %struct.bitmap_head_def* %tovisit) unnamed_addr #5 !dbg !6488 {
entry:
  %i = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %ei35 = alloca %struct.edge_iterator, align 8
  %cyclic_probability = alloca %struct.sreal, align 8
  %frequency36 = alloca %struct.sreal, align 8
  %tmp44 = alloca %struct.edge_iterator, align 8
  %tmp65 = alloca %struct.sreal, align 8
  %tmp103 = alloca %struct.sreal, align 8
  %tmp114 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %head, metadata !6492, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tovisit, metadata !6493, metadata !DIExpression()), !dbg !6533
  %0 = bitcast i32* %i to i8*, !dbg !6534
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6534
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !6535
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6535
  %2 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6536
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !6536
  call void @llvm.dbg.value(metadata i32* %i, metadata !6496, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6499, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %tovisit, i32 0, i32* nonnull %i) #7, !dbg !6537
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6538
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6539
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6539
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6539
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6540
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6540
  br label %for.cond, !dbg !6537

for.cond:                                         ; preds = %for.end, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6496, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6499, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6541
  %tobool = icmp eq i8 %call, 0, !dbg !6537
  br i1 %tobool, label %for.end29, label %for.body, !dbg !6537

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !6542
  call void @llvm.dbg.value(metadata i32 0, metadata !6511, metadata !DIExpression()), !dbg !6538
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6543
  %cfg = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !6543
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6543
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !6543
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6543
  %tobool1 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !6543
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6543

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !6543
  br label %cond.end, !dbg !6543

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !6543
  %12 = load i32, i32* %i, align 4, !dbg !6543
  call void @llvm.dbg.value(metadata i32 %12, metadata !6496, metadata !DIExpression()), !dbg !6533
  %call5 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %12) #7, !dbg !6543
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call5, metadata !6494, metadata !DIExpression()), !dbg !6533
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6544
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 0, !dbg !6544
  %call6 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6544
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 0, !dbg !6544
  store i32 %13, i32* %5, align 8, !dbg !6544
  %14 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 1, !dbg !6544
  store %struct.VEC_edge_gc** %14, %struct.VEC_edge_gc*** %6, align 8, !dbg !6544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !6544
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6544
  %index24 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 9, !dbg !6545
  br label %for.cond7, !dbg !6544

for.cond7:                                        ; preds = %for.inc, %cond.end
  %count.0 = phi i32 [ 0, %cond.end ], [ %count.1, %for.inc ], !dbg !6548
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !6511, metadata !DIExpression()), !dbg !6538
  %15 = load i32, i32* %7, align 8, !dbg !6549
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !6549
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6497, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  %call8 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !6549
  %tobool9 = icmp eq i8 %call8, 0, !dbg !6544
  br i1 %tobool9, label %for.end, label %for.body10, !dbg !6544

for.body10:                                       ; preds = %for.cond7
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6550
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !6497, metadata !DIExpression()), !dbg !6533
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 0, !dbg !6551
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6551
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 9, !dbg !6552
  %19 = load i32, i32* %index, align 8, !dbg !6552
  %call11 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %tovisit, i32 %19) #6, !dbg !6553
  %conv12 = and i32 %call11, 255, !dbg !6554
  %tobool13 = icmp eq i32 %conv12, 0, !dbg !6554
  br i1 %tobool13, label %if.else, label %land.lhs.true, !dbg !6555

land.lhs.true:                                    ; preds = %for.body10
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6556
  call void @llvm.dbg.value(metadata %struct.edge_def* %20, metadata !6497, metadata !DIExpression()), !dbg !6533
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i64 0, i32 7, !dbg !6557
  %21 = load i32, i32* %flags, align 8, !dbg !6557
  %and = and i32 %21, 32, !dbg !6558
  %tobool14 = icmp eq i32 %and, 0, !dbg !6558
  br i1 %tobool14, label %if.then, label %if.else, !dbg !6559

if.then:                                          ; preds = %land.lhs.true
  %inc = add nsw i32 %count.0, 1, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6511, metadata !DIExpression()), !dbg !6538
  br label %for.inc, !dbg !6561

if.else:                                          ; preds = %land.lhs.true, %for.body10
  %tobool16 = icmp ne i32 %conv12, 0, !dbg !6562
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6563
  %tobool18 = icmp ne %struct._IO_FILE* %22, null, !dbg !6563
  %or.cond = and i1 %tobool16, %tobool18, !dbg !6564
  br i1 %or.cond, label %land.lhs.true19, label %for.inc, !dbg !6564

land.lhs.true19:                                  ; preds = %if.else
  %23 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6565
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !6497, metadata !DIExpression()), !dbg !6533
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 3, !dbg !6565
  %24 = bitcast i8** %aux to %struct.edge_info_def**, !dbg !6565
  %25 = load %struct.edge_info_def*, %struct.edge_info_def** %24, align 8, !dbg !6565
  %back_edge = getelementptr inbounds %struct.edge_info_def, %struct.edge_info_def* %25, i64 0, i32 1, !dbg !6566
  %bf.load = load i8, i8* %back_edge, align 8, !dbg !6566
  %bf.clear = and i8 %bf.load, 1, !dbg !6566
  %tobool20 = icmp eq i8 %bf.clear, 0, !dbg !6565
  br i1 %tobool20, label %if.then21, label %for.inc, !dbg !6567

if.then21:                                        ; preds = %land.lhs.true19
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !6497, metadata !DIExpression()), !dbg !6533
  %src22 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 0, !dbg !6568
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %src22, align 8, !dbg !6568
  %index23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 9, !dbg !6569
  %27 = load i32, i32* %index23, align 8, !dbg !6569
  %28 = load i32, i32* %index24, align 8, !dbg !6570
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.47, i64 0, i64 0), i32 %27, i32 %28) #6, !dbg !6571
  br label %for.inc, !dbg !6571

for.inc:                                          ; preds = %land.lhs.true19, %if.then, %if.then21, %if.else
  %count.1 = phi i32 [ %inc, %if.then ], [ %count.0, %if.then21 ], [ %count.0, %land.lhs.true19 ], [ %count.0, %if.else ], !dbg !6538
  call void @llvm.dbg.value(metadata i32 %count.1, metadata !6511, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6507, metadata !DIExpression(DW_OP_deref)), !dbg !6538
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6549
  br label %for.cond7, !dbg !6549, !llvm.loop !6572

for.end:                                          ; preds = %for.cond7
  %count.0.lcssa = phi i32 [ %count.0, %for.cond7 ], !dbg !6548
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !6511, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !6511, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !6511, metadata !DIExpression()), !dbg !6538
  %aux27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 2, !dbg !6574
  %29 = bitcast i8** %aux27 to %struct.block_info_def**, !dbg !6574
  %30 = load %struct.block_info_def*, %struct.block_info_def** %29, align 8, !dbg !6574
  %npredecessors = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %30, i64 0, i32 2, !dbg !6575
  store i32 %count.0.lcssa, i32* %npredecessors, align 8, !dbg !6576
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !6577
  call void @llvm.dbg.value(metadata i32* %i, metadata !6496, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6499, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6541
  br label %for.cond, !dbg !6541, !llvm.loop !6578

for.end29:                                        ; preds = %for.cond
  %aux30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %head, i64 0, i32 2, !dbg !6580
  %31 = load i8*, i8** %aux30, align 8, !dbg !6580
  %call31 = call i8* @memcpy(i8* %31, i8* bitcast (%struct.sreal* @real_one to i8*), i64 16) #6, !dbg !6581
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %head, metadata !6495, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %head, metadata !6494, metadata !DIExpression()), !dbg !6533
  %32 = bitcast %struct.edge_iterator* %ei35 to i8*, !dbg !6582
  %33 = bitcast %struct.sreal* %cyclic_probability to i8*, !dbg !6582
  %34 = bitcast %struct.sreal* %frequency36 to i8*, !dbg !6582
  %35 = bitcast %struct.edge_iterator* %tmp44 to i8*, !dbg !6583
  %36 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp44, i64 0, i32 0, !dbg !6583
  %37 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp44, i64 0, i32 1, !dbg !6583
  %38 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei35, i64 0, i32 0, !dbg !6584
  %39 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei35, i64 0, i32 1, !dbg !6584
  %40 = bitcast %struct.sreal* %tmp65 to i8*, !dbg !6585
  %41 = bitcast %struct.sreal* %tmp103 to i8*, !dbg !6586
  %42 = bitcast %struct.edge_iterator* %tmp114 to i8*, !dbg !6587
  %43 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp114, i64 0, i32 0, !dbg !6587
  %44 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp114, i64 0, i32 1, !dbg !6587
  br label %for.cond32, !dbg !6589

for.cond32:                                       ; preds = %for.end148, %for.end29
  %last.0 = phi %struct.basic_block_def* [ %head, %for.end29 ], [ %last.1.lcssa, %for.end148 ], !dbg !6590
  %bb.0 = phi %struct.basic_block_def* [ %head, %for.end29 ], [ %nextbb.0.lcssa, %for.end148 ], !dbg !6591
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6494, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.0, metadata !6495, metadata !DIExpression()), !dbg !6533
  %tobool33 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !6592
  br i1 %tobool33, label %for.end150, label %for.body34, !dbg !6592

for.body34:                                       ; preds = %for.cond32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8, !dbg !6593
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #8, !dbg !6594
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8, !dbg !6594
  %call37 = call i8* @memcpy(i8* nonnull %33, i8* bitcast (%struct.sreal* @real_zero to i8*), i64 16) #6, !dbg !6595
  %call38 = call i8* @memcpy(i8* nonnull %34, i8* bitcast (%struct.sreal* @real_zero to i8*), i64 16) #6, !dbg !6596
  %aux39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !6597
  %45 = bitcast i8** %aux39 to %struct.block_info_def**, !dbg !6597
  %46 = load %struct.block_info_def*, %struct.block_info_def** %45, align 8, !dbg !6597
  %next = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %46, i64 0, i32 1, !dbg !6598
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %next, align 8, !dbg !6598
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %47, metadata !6498, metadata !DIExpression()), !dbg !6533
  store %struct.basic_block_def* null, %struct.basic_block_def** %next, align 8, !dbg !6599
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %head, !dbg !6600
  br i1 %cmp, label %if.end97, label %if.then43, !dbg !6601

if.then43:                                        ; preds = %for.body34
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8, !dbg !6602
  %preds45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 0, !dbg !6602
  %call46 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %preds45) #7, !dbg !6602
  %48 = extractvalue { i32, %struct.VEC_edge_gc** } %call46, 0, !dbg !6602
  store i32 %48, i32* %36, align 8, !dbg !6602
  %49 = extractvalue { i32, %struct.VEC_edge_gc** } %call46, 1, !dbg !6602
  store %struct.VEC_edge_gc** %49, %struct.VEC_edge_gc*** %37, align 8, !dbg !6602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %35, i64 16, i1 false), !dbg !6602
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8, !dbg !6602
  br label %for.cond47, !dbg !6602

for.cond47:                                       ; preds = %for.inc76, %if.then43
  %50 = load i32, i32* %38, align 8, !dbg !6603
  %51 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !6603
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6497, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  %call48 = call fastcc zeroext i8 @ei_cond(i32 %50, %struct.VEC_edge_gc** %51, %struct.edge_def** nonnull %e) #7, !dbg !6603
  %tobool49 = icmp eq i8 %call48, 0, !dbg !6602
  br i1 %tobool49, label %for.end77, label %for.body50, !dbg !6602

for.body50:                                       ; preds = %for.cond47
  %52 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6604
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !6497, metadata !DIExpression()), !dbg !6533
  %aux51 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %52, i64 0, i32 3, !dbg !6604
  %53 = bitcast i8** %aux51 to %struct.edge_info_def**, !dbg !6604
  %54 = load %struct.edge_info_def*, %struct.edge_info_def** %53, align 8, !dbg !6604
  %back_edge52 = getelementptr inbounds %struct.edge_info_def, %struct.edge_info_def* %54, i64 0, i32 1, !dbg !6605
  %bf.load53 = load i8, i8* %back_edge52, align 8, !dbg !6605
  %bf.clear54 = and i8 %bf.load53, 1, !dbg !6605
  %tobool56 = icmp eq i8 %bf.clear54, 0, !dbg !6604
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !6497, metadata !DIExpression()), !dbg !6533
  br i1 %tobool56, label %if.else60, label %if.then57, !dbg !6606

if.then57:                                        ; preds = %for.body50
  %back_edge_prob = getelementptr inbounds %struct.edge_info_def, %struct.edge_info_def* %54, i64 0, i32 0, !dbg !6607
  call void @llvm.dbg.value(metadata %struct.sreal* %cyclic_probability, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  call void @llvm.dbg.value(metadata %struct.sreal* %cyclic_probability, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  %call59 = call %struct.sreal* @sreal_add(%struct.sreal* nonnull %cyclic_probability, %struct.sreal* nonnull %cyclic_probability, %struct.sreal* %back_edge_prob) #6, !dbg !6609
  br label %for.inc76, !dbg !6610

if.else60:                                        ; preds = %for.body50
  %flags61 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %52, i64 0, i32 7, !dbg !6611
  %55 = load i32, i32* %flags61, align 8, !dbg !6611
  %and62 = and i32 %55, 32, !dbg !6612
  %tobool63 = icmp eq i32 %and62, 0, !dbg !6612
  br i1 %tobool63, label %if.then64, label %for.inc76, !dbg !6613

if.then64:                                        ; preds = %if.else60
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8, !dbg !6614
  call void @llvm.dbg.value(metadata %struct.edge_def* %52, metadata !6497, metadata !DIExpression()), !dbg !6533
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %52, i64 0, i32 8, !dbg !6615
  %56 = load i32, i32* %probability, align 4, !dbg !6615
  %conv66 = sext i32 %56 to i64, !dbg !6616
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp65, metadata !6522, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  %call67 = call %struct.sreal* @sreal_init(%struct.sreal* nonnull %tmp65, i64 %conv66, i32 0) #6, !dbg !6617
  %57 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6618
  call void @llvm.dbg.value(metadata %struct.edge_def* %57, metadata !6497, metadata !DIExpression()), !dbg !6533
  %src68 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %57, i64 0, i32 0, !dbg !6618
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %src68, align 8, !dbg !6618
  %aux69 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %58, i64 0, i32 2, !dbg !6618
  %59 = bitcast i8** %aux69 to %struct.block_info_def**, !dbg !6618
  %60 = load %struct.block_info_def*, %struct.block_info_def** %59, align 8, !dbg !6618
  %frequency70 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %60, i64 0, i32 0, !dbg !6619
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp65, metadata !6522, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp65, metadata !6522, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  %call71 = call %struct.sreal* @sreal_mul(%struct.sreal* nonnull %tmp65, %struct.sreal* nonnull %tmp65, %struct.sreal* %frequency70) #6, !dbg !6620
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp65, metadata !6522, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp65, metadata !6522, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  %call72 = call %struct.sreal* @sreal_mul(%struct.sreal* nonnull %tmp65, %struct.sreal* nonnull %tmp65, %struct.sreal* nonnull @real_inv_br_prob_base) #6, !dbg !6621
  call void @llvm.dbg.value(metadata %struct.sreal* %frequency36, metadata !6521, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  call void @llvm.dbg.value(metadata %struct.sreal* %frequency36, metadata !6521, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp65, metadata !6522, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  %call73 = call %struct.sreal* @sreal_add(%struct.sreal* nonnull %frequency36, %struct.sreal* nonnull %frequency36, %struct.sreal* nonnull %tmp65) #6, !dbg !6622
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8, !dbg !6623
  br label %for.inc76, !dbg !6624

for.inc76:                                        ; preds = %if.else60, %if.then57, %if.then64
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei35, metadata !6516, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei35) #7, !dbg !6603
  br label %for.cond47, !dbg !6603, !llvm.loop !6625

for.end77:                                        ; preds = %for.cond47
  call void @llvm.dbg.value(metadata %struct.sreal* %cyclic_probability, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  %call78 = call i32 @sreal_compare(%struct.sreal* nonnull %cyclic_probability, %struct.sreal* nonnull @real_zero) #6, !dbg !6627
  %cmp79 = icmp eq i32 %call78, 0, !dbg !6629
  br i1 %cmp79, label %if.then81, label %if.else85, !dbg !6630

if.then81:                                        ; preds = %for.end77
  %61 = load i8*, i8** %aux39, align 8, !dbg !6631
  %call84 = call i8* @memcpy(i8* %61, i8* nonnull %34, i64 16) #6, !dbg !6633
  br label %if.end97, !dbg !6634

if.else85:                                        ; preds = %for.end77
  call void @llvm.dbg.value(metadata %struct.sreal* %cyclic_probability, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  %call86 = call i32 @sreal_compare(%struct.sreal* nonnull %cyclic_probability, %struct.sreal* nonnull @real_almost_one) #6, !dbg !6635
  %cmp87 = icmp sgt i32 %call86, 0, !dbg !6638
  br i1 %cmp87, label %if.then89, label %if.end91, !dbg !6639

if.then89:                                        ; preds = %if.else85
  %call90 = call i8* @memcpy(i8* nonnull %33, i8* bitcast (%struct.sreal* @real_almost_one to i8*), i64 16) #6, !dbg !6640
  br label %if.end91, !dbg !6642

if.end91:                                         ; preds = %if.then89, %if.else85
  call void @llvm.dbg.value(metadata %struct.sreal* %cyclic_probability, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  call void @llvm.dbg.value(metadata %struct.sreal* %cyclic_probability, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  %call92 = call %struct.sreal* @sreal_sub(%struct.sreal* nonnull %cyclic_probability, %struct.sreal* nonnull @real_one, %struct.sreal* nonnull %cyclic_probability) #6, !dbg !6643
  %62 = load %struct.block_info_def*, %struct.block_info_def** %45, align 8, !dbg !6644
  %frequency94 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %62, i64 0, i32 0, !dbg !6645
  call void @llvm.dbg.value(metadata %struct.sreal* %cyclic_probability, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  call void @llvm.dbg.value(metadata %struct.sreal* %frequency36, metadata !6521, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  %call95 = call %struct.sreal* @sreal_div(%struct.sreal* %frequency94, %struct.sreal* nonnull %frequency36, %struct.sreal* nonnull %cyclic_probability) #6, !dbg !6646
  br label %if.end97

if.end97:                                         ; preds = %for.body34, %if.then81, %if.end91
  %index98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !6647
  %63 = load i32, i32* %index98, align 8, !dbg !6647
  %call99 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %tovisit, i32 %63) #6, !dbg !6648
  %call100 = call %struct.edge_def* @find_edge(%struct.basic_block_def* nonnull %bb.0, %struct.basic_block_def* %head) #6, !dbg !6649
  call void @llvm.dbg.value(metadata %struct.edge_def* %call100, metadata !6497, metadata !DIExpression()), !dbg !6533
  store %struct.edge_def* %call100, %struct.edge_def** %e, align 8, !dbg !6650
  call void @llvm.dbg.value(metadata %struct.edge_def* %call100, metadata !6497, metadata !DIExpression()), !dbg !6533
  %tobool101 = icmp eq %struct.edge_def* %call100, null, !dbg !6651
  br i1 %tobool101, label %if.end113, label %if.then102, !dbg !6652

if.then102:                                       ; preds = %if.end97
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #8, !dbg !6653
  call void @llvm.dbg.value(metadata %struct.edge_def* %call100, metadata !6497, metadata !DIExpression()), !dbg !6533
  %probability104 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call100, i64 0, i32 8, !dbg !6654
  %64 = load i32, i32* %probability104, align 4, !dbg !6654
  %conv105 = sext i32 %64 to i64, !dbg !6655
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp103, metadata !6530, metadata !DIExpression(DW_OP_deref)), !dbg !6586
  %call106 = call %struct.sreal* @sreal_init(%struct.sreal* nonnull %tmp103, i64 %conv105, i32 0) #6, !dbg !6656
  %65 = load %struct.block_info_def*, %struct.block_info_def** %45, align 8, !dbg !6657
  %frequency108 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %65, i64 0, i32 0, !dbg !6658
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp103, metadata !6530, metadata !DIExpression(DW_OP_deref)), !dbg !6586
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp103, metadata !6530, metadata !DIExpression(DW_OP_deref)), !dbg !6586
  %call109 = call %struct.sreal* @sreal_mul(%struct.sreal* nonnull %tmp103, %struct.sreal* nonnull %tmp103, %struct.sreal* %frequency108) #6, !dbg !6659
  %66 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6660
  call void @llvm.dbg.value(metadata %struct.edge_def* %66, metadata !6497, metadata !DIExpression()), !dbg !6533
  %aux110 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %66, i64 0, i32 3, !dbg !6660
  %67 = bitcast i8** %aux110 to %struct.edge_info_def**, !dbg !6660
  %68 = load %struct.edge_info_def*, %struct.edge_info_def** %67, align 8, !dbg !6660
  %back_edge_prob111 = getelementptr inbounds %struct.edge_info_def, %struct.edge_info_def* %68, i64 0, i32 0, !dbg !6661
  call void @llvm.dbg.value(metadata %struct.sreal* %tmp103, metadata !6530, metadata !DIExpression(DW_OP_deref)), !dbg !6586
  %call112 = call %struct.sreal* @sreal_mul(%struct.sreal* %back_edge_prob111, %struct.sreal* nonnull %tmp103, %struct.sreal* nonnull @real_inv_br_prob_base) #6, !dbg !6662
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #8, !dbg !6663
  br label %if.end113, !dbg !6664

if.end113:                                        ; preds = %if.end97, %if.then102
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8, !dbg !6665
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 1, !dbg !6665
  %call115 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6665
  %69 = extractvalue { i32, %struct.VEC_edge_gc** } %call115, 0, !dbg !6665
  store i32 %69, i32* %43, align 8, !dbg !6665
  %70 = extractvalue { i32, %struct.VEC_edge_gc** } %call115, 1, !dbg !6665
  store %struct.VEC_edge_gc** %70, %struct.VEC_edge_gc*** %44, align 8, !dbg !6665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %42, i64 16, i1 false), !dbg !6665
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8, !dbg !6665
  br label %for.cond116, !dbg !6665

for.cond116:                                      ; preds = %for.inc147, %if.end113
  %last.1 = phi %struct.basic_block_def* [ %last.0, %if.end113 ], [ %last.3, %for.inc147 ], !dbg !6590
  %nextbb.0 = phi %struct.basic_block_def* [ %47, %if.end113 ], [ %nextbb.3, %for.inc147 ], !dbg !6666
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %nextbb.0, metadata !6498, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.1, metadata !6495, metadata !DIExpression()), !dbg !6533
  %71 = load i32, i32* %38, align 8, !dbg !6667
  %72 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !6667
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6497, metadata !DIExpression(DW_OP_deref)), !dbg !6533
  %call117 = call fastcc zeroext i8 @ei_cond(i32 %71, %struct.VEC_edge_gc** %72, %struct.edge_def** nonnull %e) #7, !dbg !6667
  %tobool118 = icmp eq i8 %call117, 0, !dbg !6665
  br i1 %tobool118, label %for.end148, label %for.body119, !dbg !6665

for.body119:                                      ; preds = %for.cond116
  %73 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6669
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !6497, metadata !DIExpression()), !dbg !6533
  %flags120 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %73, i64 0, i32 7, !dbg !6671
  %74 = load i32, i32* %flags120, align 8, !dbg !6671
  %and121 = and i32 %74, 32, !dbg !6672
  %tobool122 = icmp eq i32 %and121, 0, !dbg !6672
  br i1 %tobool122, label %land.lhs.true123, label %for.inc147, !dbg !6673

land.lhs.true123:                                 ; preds = %for.body119
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !6497, metadata !DIExpression()), !dbg !6533
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %73, i64 0, i32 1, !dbg !6674
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6674
  %aux124 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %75, i64 0, i32 2, !dbg !6674
  %76 = bitcast i8** %aux124 to %struct.block_info_def**, !dbg !6674
  %77 = load %struct.block_info_def*, %struct.block_info_def** %76, align 8, !dbg !6674
  %npredecessors125 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %77, i64 0, i32 2, !dbg !6675
  %78 = load i32, i32* %npredecessors125, align 8, !dbg !6675
  %tobool126 = icmp eq i32 %78, 0, !dbg !6674
  br i1 %tobool126, label %for.inc147, label %if.then127, !dbg !6676

if.then127:                                       ; preds = %land.lhs.true123
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !6497, metadata !DIExpression()), !dbg !6533
  %dec = add nsw i32 %78, -1, !dbg !6677
  store i32 %dec, i32* %npredecessors125, align 8, !dbg !6677
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !6497, metadata !DIExpression()), !dbg !6533
  %79 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6679
  %aux132 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %79, i64 0, i32 2, !dbg !6679
  %80 = bitcast i8** %aux132 to %struct.block_info_def**, !dbg !6679
  %81 = load %struct.block_info_def*, %struct.block_info_def** %80, align 8, !dbg !6679
  %npredecessors133 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %81, i64 0, i32 2, !dbg !6681
  %82 = load i32, i32* %npredecessors133, align 8, !dbg !6681
  %tobool134 = icmp eq i32 %82, 0, !dbg !6679
  br i1 %tobool134, label %if.then135, label %for.inc147, !dbg !6682

if.then135:                                       ; preds = %if.then127
  %tobool136 = icmp eq %struct.basic_block_def* %nextbb.0, null, !dbg !6683
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !6497, metadata !DIExpression()), !dbg !6533
  br i1 %tobool136, label %if.end143, label %if.else139, !dbg !6686

if.else139:                                       ; preds = %if.then135
  %aux141 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %last.1, i64 0, i32 2, !dbg !6687
  %83 = bitcast i8** %aux141 to %struct.block_info_def**, !dbg !6687
  %84 = load %struct.block_info_def*, %struct.block_info_def** %83, align 8, !dbg !6687
  %next142 = getelementptr inbounds %struct.block_info_def, %struct.block_info_def* %84, i64 0, i32 1, !dbg !6688
  store %struct.basic_block_def* %79, %struct.basic_block_def** %next142, align 8, !dbg !6689
  %.pre = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6690
  br label %if.end143

if.end143:                                        ; preds = %if.then135, %if.else139
  %85 = phi %struct.basic_block_def* [ %.pre, %if.else139 ], [ %79, %if.then135 ], !dbg !6690
  %nextbb.1 = phi %struct.basic_block_def* [ %nextbb.0, %if.else139 ], [ %79, %if.then135 ], !dbg !6582
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %nextbb.1, metadata !6498, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.edge_def* %73, metadata !6497, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %85, metadata !6495, metadata !DIExpression()), !dbg !6533
  br label %for.inc147, !dbg !6691

for.inc147:                                       ; preds = %if.then127, %land.lhs.true123, %for.body119, %if.end143
  %last.3 = phi %struct.basic_block_def* [ %last.1, %for.body119 ], [ %last.1, %land.lhs.true123 ], [ %last.1, %if.then127 ], [ %85, %if.end143 ], !dbg !6590
  %nextbb.3 = phi %struct.basic_block_def* [ %nextbb.0, %for.body119 ], [ %nextbb.0, %land.lhs.true123 ], [ %nextbb.0, %if.then127 ], [ %nextbb.1, %if.end143 ], !dbg !6666
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %nextbb.3, metadata !6498, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.3, metadata !6495, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei35, metadata !6516, metadata !DIExpression(DW_OP_deref)), !dbg !6582
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei35) #7, !dbg !6667
  br label %for.cond116, !dbg !6667, !llvm.loop !6692

for.end148:                                       ; preds = %for.cond116
  %last.1.lcssa = phi %struct.basic_block_def* [ %last.1, %for.cond116 ], !dbg !6590
  %nextbb.0.lcssa = phi %struct.basic_block_def* [ %nextbb.0, %for.cond116 ], !dbg !6666
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.1.lcssa, metadata !6495, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %nextbb.0.lcssa, metadata !6498, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.1.lcssa, metadata !6495, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %nextbb.0.lcssa, metadata !6498, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.1.lcssa, metadata !6495, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %nextbb.0.lcssa, metadata !6498, metadata !DIExpression()), !dbg !6533
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8, !dbg !6694
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #8, !dbg !6694
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8, !dbg !6694
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %nextbb.0.lcssa, metadata !6494, metadata !DIExpression()), !dbg !6533
  br label %for.cond32, !dbg !6695, !llvm.loop !6696

for.end150:                                       ; preds = %for.cond32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !6698
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6698
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6698
  ret void, !dbg !6698
}

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !6699 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6708, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !6709, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i32 0, metadata !6710, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6711, metadata !DIExpression()), !dbg !6712
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !6713
  %1 = load i64, i64* %0, align 8, !dbg !6713
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6714
  store i64 %1, i64* %2, align 8, !dbg !6714
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !6715
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !6716
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6717
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !6720
  br label %while.body, !dbg !6720

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !6721
  br i1 %tobool, label %if.then, label %if.end, !dbg !6722

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !6723
  br label %while.end, !dbg !6725

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !6726

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !6720, !llvm.loop !6727

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !6729

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !6729
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !6731
  %7 = load i32, i32* %indx9, align 8, !dbg !6731
  %cmp11 = icmp eq i32 %7, 0, !dbg !6732
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !6733

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !6734
  %8 = load i32, i32* %indx14, align 8, !dbg !6734
  %mul = shl i32 %8, 7, !dbg !6735
  call void @llvm.dbg.value(metadata i32 %mul, metadata !6710, metadata !DIExpression()), !dbg !6712
  br label %if.end15, !dbg !6736

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !6710, metadata !DIExpression()), !dbg !6712
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6737
  store i32 0, i32* %word_no, align 8, !dbg !6738
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !6739
  %9 = load i64, i64* %arrayidx, align 8, !dbg !6739
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6740
  store i64 %9, i64* %bits21, align 8, !dbg !6741
  %tobool23 = icmp eq i64 %9, 0, !dbg !6742
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !6742
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !6743
  call void @llvm.dbg.value(metadata i32 %add, metadata !6710, metadata !DIExpression()), !dbg !6712
  store i32 %add, i32* %bit_no, align 4, !dbg !6744
  ret void, !dbg !6745
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6746 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6750, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6751, metadata !DIExpression()), !dbg !6755
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6756
  %0 = load i64, i64* %bits, align 8, !dbg !6756
  %tobool = icmp eq i64 %0, 0, !dbg !6757
  br i1 %tobool, label %if.end, label %next_bit, !dbg !6758

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !6759
  br label %next_bit, !dbg !6762

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !6752), !dbg !6763
  br label %while.cond, !dbg !6762

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !6764
  %and = and i64 %2, 1, !dbg !6765
  %tobool2 = icmp eq i64 %and, 0, !dbg !6766
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !6762

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !6767
  store i64 %shr, i64* %bits, align 8, !dbg !6767
  %3 = load i32, i32* %bit_no, align 4, !dbg !6769
  %add = add i32 %3, 1, !dbg !6769
  store i32 %add, i32* %bit_no, align 4, !dbg !6769
  %.pre = load i64, i64* %bits, align 8, !dbg !6764
  br label %while.cond, !dbg !6762, !llvm.loop !6770

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !6772
  %sub = add i32 %4, 63, !dbg !6773
  %div = and i32 %sub, -64, !dbg !6774
  store i32 %div, i32* %bit_no, align 4, !dbg !6775
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6776
  %5 = load i32, i32* %word_no, align 8, !dbg !6777
  %inc = add i32 %5, 1, !dbg !6777
  store i32 %inc, i32* %word_no, align 8, !dbg !6777
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6778
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6778
  br label %while.body6, !dbg !6779

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !6780

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !6781
  %cmp = icmp eq i32 %8, 2, !dbg !6782
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !6778
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !6780

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !6759
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !6759
  %10 = load i64, i64* %arrayidx, align 8, !dbg !6759
  store i64 %10, i64* %bits, align 8, !dbg !6783
  %tobool14 = icmp eq i64 %10, 0, !dbg !6784
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !6786

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !6787
  %add17 = add i32 %11, 64, !dbg !6787
  store i32 %add17, i32* %bit_no, align 4, !dbg !6787
  %12 = load i32, i32* %word_no, align 8, !dbg !6788
  %inc19 = add i32 %12, 1, !dbg !6788
  store i32 %inc19, i32* %word_no, align 8, !dbg !6788
  br label %while.cond7, !dbg !6780, !llvm.loop !6789

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !6778
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !6791
  %14 = load i64, i64* %13, align 8, !dbg !6791
  store i64 %14, i64* %6, align 8, !dbg !6792
  %tobool24 = icmp eq i64 %14, 0, !dbg !6793
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !6795

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !6795
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !6796
  %16 = load i32, i32* %indx, align 8, !dbg !6796
  %mul28 = shl i32 %16, 7, !dbg !6797
  store i32 %mul28, i32* %bit_no, align 4, !dbg !6798
  store i32 0, i32* %word_no, align 8, !dbg !6799
  br label %while.body6, !dbg !6779, !llvm.loop !6800

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !6802

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !6802

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !6755
  ret i8 %retval.0, !dbg !6802
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6803 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6809, metadata !DIExpression()), !dbg !6811
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6810, metadata !DIExpression()), !dbg !6811
  br label %land.end, !dbg !6812

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6812
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6812
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !6812
  ret %struct.basic_block_def* %0, !dbg !6812
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6813 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6817, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6818, metadata !DIExpression()), !dbg !6819
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6820
  %0 = load i64, i64* %bits, align 8, !dbg !6821
  %shr = lshr i64 %0, 1, !dbg !6821
  store i64 %shr, i64* %bits, align 8, !dbg !6821
  %1 = load i32, i32* %bit_no, align 4, !dbg !6822
  %add = add i32 %1, 1, !dbg !6822
  store i32 %add, i32* %bit_no, align 4, !dbg !6822
  ret void, !dbg !6823
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local void @loop_optimizer_init(i32) local_unnamed_addr #2

declare dso_local void @flow_loops_dump(%struct._IO_FILE*, void (%struct.loop*, %struct._IO_FILE*, i32)*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @mark_irreducible_loops() local_unnamed_addr #2

declare dso_local void @scev_initialize() local_unnamed_addr #2

declare dso_local void @scev_finalize() local_unnamed_addr #2

declare dso_local void @loop_optimizer_finalize() local_unnamed_addr #2

declare dso_local void @gimple_dump_cfg(%struct._IO_FILE*, i32) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6824 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6826, metadata !DIExpression()), !dbg !6827
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6828
  ret %union.tree_node* %call, !dbg !6829
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_replace(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2526, !2527, !2528}
!llvm.ident = !{!2529}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "bb_predictions", scope: !2, file: !3, line: 376, type: !1884, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !909, globals: !2442, nameTableKind: None)
!3 = !DIFile(filename: "predict.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !147, !152, !161, !165, !170, !189, !196, !203, !397, !404, !580, !603, !635, !778, !812, !816, !838, !865, !903}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !153, line: 31, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!154 = !{!155, !156, !157, !158, !159, !160}
!155 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !153, line: 91, baseType: !7, size: 32, elements: !162)
!162 = !{!163, !164}
!163 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!164 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !398, line: 104, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403}
!400 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 74, baseType: !7, size: 32, elements: !406)
!405 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!406 = !{!407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579}
!407 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!579 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !581, line: 309, baseType: !7, size: 32, elements: !582)
!581 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!582 = !{!583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602}
!583 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!584 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!585 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!586 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!587 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!588 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!589 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!590 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!591 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!592 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!593 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!594 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!595 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!596 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!597 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!598 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!599 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!600 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!601 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!602 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!603 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "br_predictor", file: !604, line: 24, baseType: !7, size: 32, elements: !605)
!604 = !DIFile(filename: "./predict.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634}
!606 = !DIEnumerator(name: "PRED_COMBINED", value: 0, isUnsigned: true)
!607 = !DIEnumerator(name: "PRED_DS_THEORY", value: 1, isUnsigned: true)
!608 = !DIEnumerator(name: "PRED_FIRST_MATCH", value: 2, isUnsigned: true)
!609 = !DIEnumerator(name: "PRED_NO_PREDICTION", value: 3, isUnsigned: true)
!610 = !DIEnumerator(name: "PRED_UNCONDITIONAL", value: 4, isUnsigned: true)
!611 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS", value: 5, isUnsigned: true)
!612 = !DIEnumerator(name: "PRED_BUILTIN_EXPECT", value: 6, isUnsigned: true)
!613 = !DIEnumerator(name: "PRED_LOOP_ITERATIONS_GUESSED", value: 7, isUnsigned: true)
!614 = !DIEnumerator(name: "PRED_CONTINUE", value: 8, isUnsigned: true)
!615 = !DIEnumerator(name: "PRED_NORETURN", value: 9, isUnsigned: true)
!616 = !DIEnumerator(name: "PRED_COLD_FUNCTION", value: 10, isUnsigned: true)
!617 = !DIEnumerator(name: "PRED_LOOP_BRANCH", value: 11, isUnsigned: true)
!618 = !DIEnumerator(name: "PRED_LOOP_EXIT", value: 12, isUnsigned: true)
!619 = !DIEnumerator(name: "PRED_POINTER", value: 13, isUnsigned: true)
!620 = !DIEnumerator(name: "PRED_TREE_POINTER", value: 14, isUnsigned: true)
!621 = !DIEnumerator(name: "PRED_OPCODE_POSITIVE", value: 15, isUnsigned: true)
!622 = !DIEnumerator(name: "PRED_OPCODE_NONEQUAL", value: 16, isUnsigned: true)
!623 = !DIEnumerator(name: "PRED_FPOPCODE", value: 17, isUnsigned: true)
!624 = !DIEnumerator(name: "PRED_TREE_OPCODE_POSITIVE", value: 18, isUnsigned: true)
!625 = !DIEnumerator(name: "PRED_TREE_OPCODE_NONEQUAL", value: 19, isUnsigned: true)
!626 = !DIEnumerator(name: "PRED_TREE_FPOPCODE", value: 20, isUnsigned: true)
!627 = !DIEnumerator(name: "PRED_CALL", value: 21, isUnsigned: true)
!628 = !DIEnumerator(name: "PRED_TREE_EARLY_RETURN", value: 22, isUnsigned: true)
!629 = !DIEnumerator(name: "PRED_GOTO", value: 23, isUnsigned: true)
!630 = !DIEnumerator(name: "PRED_CONST_RETURN", value: 24, isUnsigned: true)
!631 = !DIEnumerator(name: "PRED_NEGATIVE_RETURN", value: 25, isUnsigned: true)
!632 = !DIEnumerator(name: "PRED_NULL_RETURN", value: 26, isUnsigned: true)
!633 = !DIEnumerator(name: "PRED_MUDFLAP", value: 27, isUnsigned: true)
!634 = !DIEnumerator(name: "END_PREDICTORS", value: 28, isUnsigned: true)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !636, line: 45, baseType: !7, size: 32, elements: !637)
!636 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!637 = !{!638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777}
!638 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!639 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!640 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!641 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!642 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!643 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!644 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!645 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!646 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!647 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!648 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!649 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!650 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!651 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!652 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!653 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!654 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!655 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!656 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!657 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!658 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!659 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!660 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!661 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!662 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!663 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!664 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!665 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!666 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!667 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!668 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!669 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!670 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!671 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!672 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!673 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!674 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!675 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!676 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!677 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!678 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!679 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!680 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!681 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!682 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!683 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!684 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!685 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!686 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!687 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!688 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!689 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!690 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!691 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!692 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!693 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!694 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!695 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!696 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!697 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!698 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!699 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!700 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!701 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!702 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!703 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!704 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!705 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!706 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!707 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!708 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!709 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!710 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!711 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!712 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!713 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!714 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!715 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!716 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!717 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!718 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!719 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!720 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!721 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!722 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!723 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!724 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!725 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!726 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!727 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!728 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!729 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!730 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!731 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!732 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!733 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!734 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!735 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!736 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!737 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!738 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!739 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!740 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!741 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!742 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!743 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!744 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!745 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!746 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!747 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!748 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!749 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!750 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!751 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!752 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!753 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!754 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!755 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!756 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!757 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!758 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!759 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!760 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!761 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!762 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!763 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!764 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!765 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!766 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!767 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!768 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!769 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!770 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!771 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!772 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!773 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!774 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!775 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!776 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!777 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!778 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !636, line: 836, baseType: !7, size: 32, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!780 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!781 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!782 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!783 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!784 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!785 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!786 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!787 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!788 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!789 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!790 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!791 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!792 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!793 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!794 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!795 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!796 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!797 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!798 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!799 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!800 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!801 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!802 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!803 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!804 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!805 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!806 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!807 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!808 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!809 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!810 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!811 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "prediction", file: !604, line: 32, baseType: !7, size: 32, elements: !813)
!813 = !{!814, !815}
!814 = !DIEnumerator(name: "NOT_TAKEN", value: 0, isUnsigned: true)
!815 = !DIEnumerator(name: "TAKEN", value: 1, isUnsigned: true)
!816 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !817, line: 36, baseType: !7, size: 32, elements: !818)
!817 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!818 = !{!819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837}
!819 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!820 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!821 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!822 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!823 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!824 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!825 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!826 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!827 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!828 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!829 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!830 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!831 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!832 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!833 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!834 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!835 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!836 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!837 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!838 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !839, line: 727, baseType: !7, size: 32, elements: !840)
!839 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864}
!841 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!842 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!843 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!844 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!845 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!846 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!847 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!848 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!849 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!850 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!851 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!852 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!853 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!854 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!855 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!856 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!857 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!858 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!859 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!860 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!861 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!862 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!863 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!864 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!865 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !839, line: 51, baseType: !7, size: 32, elements: !866)
!866 = !{!867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902}
!867 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!868 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!869 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!870 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!871 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!872 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!873 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!874 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!875 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!876 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!877 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!878 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!879 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!880 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!881 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!882 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!883 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!884 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!885 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!886 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!887 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!888 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!889 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!890 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!891 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!892 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!893 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!894 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!895 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!896 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!897 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!898 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!899 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!900 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!901 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!902 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !839, line: 80, baseType: !7, size: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!906 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!907 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!908 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!909 = !{!910, !911, !912, !913, !916, !917, !635, !778, !5, !919, !2407, !2408, !2420, !816, !603, !2427, !203, !1649, !2428, !984, !1683, !914, !2430, !979, !925, !1881, !1108, !903}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!912 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !915)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_prediction", file: !921, line: 307, size: 192, elements: !922)
!921 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!922 = !{!923, !924, !2405, !2406}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "ep_next", scope: !920, file: !921, line: 308, baseType: !919, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ep_edge", scope: !920, file: !921, line: 309, baseType: !925, size: 64, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !926, line: 108, baseType: !927)
!926 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !929)
!929 = !{!930, !2392, !2393, !2398, !2399, !2400, !2401, !2402, !2403, !2404}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !928, file: !142, line: 124, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !933)
!933 = !{!934, !949, !950, !951, !2361, !2365, !2366, !2367, !2385, !2387, !2388, !2389, !2390, !2391}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !932, file: !142, line: 219, baseType: !935, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !938)
!938 = !{!939}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !937, file: !142, line: 151, baseType: !940, size: 128)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !941)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !942)
!942 = !{!943, !944, !945}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !941, file: !142, line: 150, baseType: !7, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !941, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !941, file: !142, line: 150, baseType: !946, size: 64, offset: 64)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 64, elements: !947)
!947 = !{!948}
!948 = !DISubrange(count: 1)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !932, file: !142, line: 220, baseType: !935, size: 64, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !932, file: !142, line: 223, baseType: !916, size: 64, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !932, file: !142, line: 226, baseType: !952, size: 64, offset: 192)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !153, line: 100, size: 1216, elements: !954)
!954 = !{!955, !956, !957, !958, !959, !964, !965, !966, !980, !981, !982, !983, !2338, !2339, !2340, !2341, !2342, !2343, !2351, !2359, !2360}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !953, file: !153, line: 102, baseType: !912, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !953, file: !153, line: 105, baseType: !7, size: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !953, file: !153, line: 108, baseType: !931, size: 64, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !953, file: !153, line: 111, baseType: !931, size: 64, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !953, file: !153, line: 114, baseType: !960, size: 64, offset: 192)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !153, line: 41, size: 64, elements: !961)
!961 = !{!962, !963}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !960, file: !153, line: 42, baseType: !152, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !960, file: !153, line: 43, baseType: !7, size: 32, offset: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !953, file: !153, line: 117, baseType: !7, size: 32, offset: 256)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !953, file: !153, line: 120, baseType: !7, size: 32, offset: 288)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !953, file: !153, line: 123, baseType: !967, size: 64, offset: 320)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !153, line: 87, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !153, line: 87, size: 128, elements: !970)
!970 = !{!971}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !969, file: !153, line: 87, baseType: !972, size: 128)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !153, line: 85, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !153, line: 85, size: 128, elements: !974)
!974 = !{!975, !976, !977}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !973, file: !153, line: 85, baseType: !7, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !973, file: !153, line: 85, baseType: !7, size: 32, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !973, file: !153, line: 85, baseType: !978, size: 64, offset: 64)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 64, elements: !947)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !153, line: 84, baseType: !952)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !953, file: !153, line: 126, baseType: !952, size: 64, offset: 384)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !953, file: !153, line: 129, baseType: !952, size: 64, offset: 448)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !953, file: !153, line: 132, baseType: !916, size: 64, offset: 512)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !953, file: !153, line: 139, baseType: !984, size: 64, offset: 576)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !926, line: 56, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !987)
!987 = !{!988, !1021, !1027, !1040, !1059, !1070, !1075, !1082, !1088, !1101, !1113, !1151, !1358, !1386, !1402, !1403, !1408, !1417, !1423, !1428, !1432, !1436, !1989, !2036, !2042, !2048, !2055, !2068, !2082, !2099, !2111, !2133, !2148, !2320}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !986, file: !171, line: 3372, baseType: !989, size: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !990)
!990 = !{!991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !989, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !989, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !989, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !989, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !989, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !989, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !989, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !989, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !989, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !989, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !989, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !989, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !989, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !989, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !989, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !989, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !989, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !989, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !989, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !989, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !989, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !989, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !989, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !989, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !989, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !989, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !989, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !989, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !989, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !989, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !986, file: !171, line: 3373, baseType: !1022, size: 192)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !1023)
!1023 = !{!1024, !1025, !1026}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1022, file: !171, line: 403, baseType: !989, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1022, file: !171, line: 404, baseType: !984, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1022, file: !171, line: 405, baseType: !984, size: 64, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !986, file: !171, line: 3374, baseType: !1028, size: 320)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !1029)
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1028, file: !171, line: 1385, baseType: !1022, size: 192)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1028, file: !171, line: 1386, baseType: !1032, size: 128, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1033, line: 58, baseType: !1034)
!1033 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1033, line: 54, size: 128, elements: !1035)
!1035 = !{!1036, !1038}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1034, file: !1033, line: 56, baseType: !1037, size: 64)
!1037 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1034, file: !1033, line: 57, baseType: !1039, size: 64, offset: 64)
!1039 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !986, file: !171, line: 3375, baseType: !1041, size: 256)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1041, file: !171, line: 1398, baseType: !1022, size: 192)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1041, file: !171, line: 1399, baseType: !1045, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1047, line: 52, size: 256, elements: !1048)
!1047 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1048 = !{!1049, !1050, !1051, !1052, !1053, !1054, !1055}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1046, file: !1047, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1046, file: !1047, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1046, file: !1047, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1046, file: !1047, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1046, file: !1047, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1046, file: !1047, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1046, file: !1047, line: 62, baseType: !1056, size: 192, offset: 64)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1037, size: 192, elements: !1057)
!1057 = !{!1058}
!1058 = !DISubrange(count: 3)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !986, file: !171, line: 3376, baseType: !1060, size: 256)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !1061)
!1061 = !{!1062, !1063}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1060, file: !171, line: 1409, baseType: !1022, size: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1060, file: !171, line: 1410, baseType: !1064, size: 64, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1066, line: 27, size: 192, elements: !1067)
!1066 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1065, file: !1066, line: 29, baseType: !1032, size: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1065, file: !1066, line: 30, baseType: !5, size: 32, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !986, file: !171, line: 3377, baseType: !1071, size: 256)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !1072)
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1071, file: !171, line: 1438, baseType: !1022, size: 192)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1071, file: !171, line: 1439, baseType: !984, size: 64, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !986, file: !171, line: 3378, baseType: !1076, size: 256)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !1077)
!1077 = !{!1078, !1079, !1080}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1076, file: !171, line: 1419, baseType: !1022, size: 192)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1076, file: !171, line: 1420, baseType: !912, size: 32, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1076, file: !171, line: 1421, baseType: !1081, size: 8, offset: 224)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 8, elements: !947)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !986, file: !171, line: 3379, baseType: !1083, size: 320)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !1084)
!1084 = !{!1085, !1086, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1083, file: !171, line: 1429, baseType: !1022, size: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1083, file: !171, line: 1430, baseType: !984, size: 64, offset: 192)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1083, file: !171, line: 1431, baseType: !984, size: 64, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !986, file: !171, line: 3380, baseType: !1089, size: 320)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1089, file: !171, line: 1461, baseType: !1022, size: 192)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1089, file: !171, line: 1462, baseType: !1093, size: 128, offset: 192)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1094, line: 31, size: 128, elements: !1095)
!1094 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1095 = !{!1096, !1099, !1100}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1093, file: !1094, line: 32, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1093, file: !1094, line: 33, baseType: !7, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1093, file: !1094, line: 34, baseType: !7, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !986, file: !171, line: 3381, baseType: !1102, size: 384)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !1103)
!1103 = !{!1104, !1105, !1110, !1111, !1112}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1102, file: !171, line: 2508, baseType: !1022, size: 192)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1102, file: !171, line: 2509, baseType: !1106, size: 32, offset: 192)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1107, line: 58, baseType: !1108)
!1107 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1109, line: 44, baseType: !7)
!1109 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1102, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1102, file: !171, line: 2511, baseType: !984, size: 64, offset: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1102, file: !171, line: 2512, baseType: !984, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !986, file: !171, line: 3382, baseType: !1114, size: 896)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1114, file: !171, line: 2653, baseType: !1102, size: 384)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1114, file: !171, line: 2654, baseType: !984, size: 64, offset: 384)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1114, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1114, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1114, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1114, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1114, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1114, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1114, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1114, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1114, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1114, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1114, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1114, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1114, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1114, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1114, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1114, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1114, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1114, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1114, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1114, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1114, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1114, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1114, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1114, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1114, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1114, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1114, file: !171, line: 2705, baseType: !984, size: 64, offset: 576)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1114, file: !171, line: 2706, baseType: !984, size: 64, offset: 640)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1114, file: !171, line: 2707, baseType: !984, size: 64, offset: 704)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1114, file: !171, line: 2708, baseType: !984, size: 64, offset: 768)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1114, file: !171, line: 2711, baseType: !1149, size: 64, offset: 832)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !986, file: !171, line: 3383, baseType: !1152, size: 960)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1152, file: !171, line: 2757, baseType: !1114, size: 896)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1152, file: !171, line: 2758, baseType: !1156, size: 64, offset: 896)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !926, line: 50, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !636, line: 240, size: 384, elements: !1159)
!1159 = !{!1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1158, file: !636, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1158, file: !636, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1158, file: !636, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1158, file: !636, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !1158, file: !636, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !1158, file: !636, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !1158, file: !636, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1158, file: !636, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1158, file: !636, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !1158, file: !636, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1158, file: !636, line: 321, baseType: !1171, size: 320, offset: 64)
!1171 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !636, line: 315, size: 320, elements: !1172)
!1172 = !{!1173, !1291, !1293, !1356, !1357}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1171, file: !636, line: 316, baseType: !1174, size: 64)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1175, size: 64, elements: !947)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !636, line: 183, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !636, line: 166, size: 64, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182, !1190, !1191, !1203, !1206, !1266, !1267, !1268, !1281, !1288}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1176, file: !636, line: 168, baseType: !912, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1176, file: !636, line: 169, baseType: !7, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1176, file: !636, line: 170, baseType: !917, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1176, file: !636, line: 171, baseType: !1156, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1176, file: !636, line: 172, baseType: !1183, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !926, line: 53, baseType: !1184)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !636, line: 359, size: 128, elements: !1186)
!1186 = !{!1187, !1188}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1185, file: !636, line: 360, baseType: !912, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1185, file: !636, line: 361, baseType: !1189, size: 64, offset: 64)
!1189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1156, size: 64, elements: !947)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1176, file: !636, line: 173, baseType: !5, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1176, file: !636, line: 174, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !636, line: 133, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !636, line: 115, size: 32, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1193, file: !636, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1193, file: !636, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1193, file: !636, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1193, file: !636, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1193, file: !636, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1193, file: !636, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1193, file: !636, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1193, file: !636, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1176, file: !636, line: 175, baseType: !1204, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !636, line: 175, flags: DIFlagFwdDecl)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1176, file: !636, line: 176, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1209, line: 75, size: 256, elements: !1210)
!1209 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1210 = !{!1211, !1225, !1226, !1227}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1208, file: !1209, line: 76, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1209, line: 68, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1209, line: 63, size: 320, elements: !1215)
!1215 = !{!1216, !1218, !1219, !1220}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1214, file: !1209, line: 64, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1214, file: !1209, line: 65, baseType: !1217, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1214, file: !1209, line: 66, baseType: !7, size: 32, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1214, file: !1209, line: 67, baseType: !1221, size: 128, offset: 192)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 128, elements: !1223)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1209, line: 29, baseType: !1037)
!1223 = !{!1224}
!1224 = !DISubrange(count: 2)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1208, file: !1209, line: 77, baseType: !1212, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1208, file: !1209, line: 78, baseType: !7, size: 32, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1208, file: !1209, line: 79, baseType: !1228, size: 64, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1209, line: 49, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1209, line: 45, size: 832, elements: !1231)
!1231 = !{!1232, !1233, !1234}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1230, file: !1209, line: 46, baseType: !1217, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1230, file: !1209, line: 47, baseType: !1207, size: 64, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1230, file: !1209, line: 48, baseType: !1235, size: 704, offset: 128)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1236, line: 164, size: 704, elements: !1237)
!1236 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1237 = !{!1238, !1239, !1249, !1250, !1251, !1252, !1253, !1254, !1258, !1262, !1263, !1264, !1265}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1235, file: !1236, line: 166, baseType: !1039, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1235, file: !1236, line: 167, baseType: !1240, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1236, line: 157, size: 192, elements: !1242)
!1242 = !{!1243, !1244, !1245}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1241, file: !1236, line: 159, baseType: !914, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1241, file: !1236, line: 160, baseType: !1240, size: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1241, file: !1236, line: 161, baseType: !1246, size: 32, offset: 128)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 32, elements: !1247)
!1247 = !{!1248}
!1248 = !DISubrange(count: 4)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1235, file: !1236, line: 168, baseType: !914, size: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1235, file: !1236, line: 169, baseType: !914, size: 64, offset: 192)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1235, file: !1236, line: 170, baseType: !914, size: 64, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1235, file: !1236, line: 171, baseType: !1039, size: 64, offset: 320)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1235, file: !1236, line: 172, baseType: !912, size: 32, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1235, file: !1236, line: 176, baseType: !1255, size: 64, offset: 448)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!1240, !916, !1039}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1235, file: !1236, line: 177, baseType: !1259, size: 64, offset: 512)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{null, !916, !1240}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1235, file: !1236, line: 178, baseType: !916, size: 64, offset: 576)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1235, file: !1236, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1235, file: !1236, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1235, file: !1236, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1176, file: !636, line: 177, baseType: !984, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1176, file: !636, line: 178, baseType: !931, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1176, file: !636, line: 179, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !636, line: 150, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !636, line: 142, size: 320, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1279, !1280}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1271, file: !636, line: 144, baseType: !984, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1271, file: !636, line: 145, baseType: !1156, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1271, file: !636, line: 146, baseType: !1156, size: 64, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1271, file: !636, line: 147, baseType: !1277, size: 32, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1278, line: 31, baseType: !912)
!1278 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1271, file: !636, line: 148, baseType: !7, size: 32, offset: 224)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1271, file: !636, line: 149, baseType: !911, size: 8, offset: 256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1176, file: !636, line: 180, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !636, line: 162, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !636, line: 159, size: 128, elements: !1285)
!1285 = !{!1286, !1287}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1284, file: !636, line: 160, baseType: !984, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1284, file: !636, line: 161, baseType: !1039, size: 64, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1176, file: !636, line: 181, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !636, line: 181, flags: DIFlagFwdDecl)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1171, file: !636, line: 317, baseType: !1292, size: 64)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 64, elements: !947)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1171, file: !636, line: 318, baseType: !1294, size: 320)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !636, line: 188, size: 320, elements: !1295)
!1295 = !{!1296, !1298, !1355}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1294, file: !636, line: 190, baseType: !1297, size: 192)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1175, size: 192, elements: !1057)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1294, file: !636, line: 193, baseType: !1299, size: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !636, line: 206, size: 320, elements: !1301)
!1301 = !{!1302, !1340, !1341, !1342, !1354}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1300, file: !636, line: 208, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !926, line: 62, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1306, line: 538, size: 256, elements: !1307)
!1306 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1307 = !{!1308, !1312, !1318, !1331}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1305, file: !1306, line: 539, baseType: !1309, size: 32)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1306, line: 482, size: 32, elements: !1310)
!1310 = !{!1311}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1309, file: !1306, line: 484, baseType: !7, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1305, file: !1306, line: 540, baseType: !1313, size: 192)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1306, line: 488, size: 192, elements: !1314)
!1314 = !{!1315, !1316, !1317}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1313, file: !1306, line: 489, baseType: !1309, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1313, file: !1306, line: 492, baseType: !917, size: 64, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1313, file: !1306, line: 496, baseType: !984, size: 64, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1305, file: !1306, line: 541, baseType: !1319, size: 256)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1306, line: 504, size: 256, elements: !1320)
!1320 = !{!1321, !1322, !1329, !1330}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1319, file: !1306, line: 505, baseType: !1309, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1319, file: !1306, line: 509, baseType: !1323, size: 64, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1306, line: 501, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{null, !1327}
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1319, file: !1306, line: 510, baseType: !1327, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1319, file: !1306, line: 513, baseType: !1303, size: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1305, file: !1306, line: 542, baseType: !1332, size: 128)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1306, line: 530, size: 128, elements: !1333)
!1333 = !{!1334, !1335}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1332, file: !1306, line: 531, baseType: !1309, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1332, file: !1306, line: 534, baseType: !1336, size: 64, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1306, line: 525, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!911, !984, !917, !1037, !1037}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1300, file: !636, line: 211, baseType: !7, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1300, file: !636, line: 214, baseType: !1039, size: 64, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1300, file: !636, line: 224, baseType: !1343, size: 64, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !636, line: 202, baseType: !1345)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !636, line: 202, size: 128, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1345, file: !636, line: 202, baseType: !1348, size: 128)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !636, line: 200, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !636, line: 200, size: 128, elements: !1350)
!1350 = !{!1351, !1352, !1353}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1349, file: !636, line: 200, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1349, file: !636, line: 200, baseType: !7, size: 32, offset: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1349, file: !636, line: 200, baseType: !1189, size: 64, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1300, file: !636, line: 234, baseType: !1343, size: 64, offset: 256)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1294, file: !636, line: 197, baseType: !1039, size: 64, offset: 256)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1171, file: !636, line: 319, baseType: !1046, size: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1171, file: !636, line: 320, baseType: !1065, size: 192)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !986, file: !171, line: 3384, baseType: !1359, size: 1472)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !1360)
!1360 = !{!1361, !1382, !1383, !1384, !1385}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1359, file: !171, line: 3115, baseType: !1362, size: 1216)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1362, file: !171, line: 2985, baseType: !1152, size: 960)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1362, file: !171, line: 2986, baseType: !984, size: 64, offset: 960)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1362, file: !171, line: 2987, baseType: !984, size: 64, offset: 1024)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1362, file: !171, line: 2988, baseType: !984, size: 64, offset: 1088)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1362, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1362, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1362, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1362, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1362, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1362, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1362, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1362, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1362, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1362, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1362, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1362, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1362, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1362, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1359, file: !171, line: 3117, baseType: !984, size: 64, offset: 1216)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1359, file: !171, line: 3119, baseType: !984, size: 64, offset: 1280)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1359, file: !171, line: 3121, baseType: !984, size: 64, offset: 1344)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1359, file: !171, line: 3123, baseType: !984, size: 64, offset: 1408)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !986, file: !171, line: 3385, baseType: !1387, size: 1088)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !1388)
!1388 = !{!1389, !1390, !1391}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1387, file: !171, line: 2875, baseType: !1152, size: 960)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1387, file: !171, line: 2876, baseType: !1156, size: 64, offset: 960)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1387, file: !171, line: 2877, baseType: !1392, size: 64, offset: 1024)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !921, line: 172, size: 128, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398, !1399, !1400, !1401}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1393, file: !921, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1393, file: !921, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1393, file: !921, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1393, file: !921, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1393, file: !921, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1393, file: !921, line: 195, baseType: !7, size: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1393, file: !921, line: 199, baseType: !984, size: 64, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !986, file: !171, line: 3386, baseType: !1362, size: 1216)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !986, file: !171, line: 3387, baseType: !1404, size: 1280)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !1405)
!1405 = !{!1406, !1407}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1404, file: !171, line: 3094, baseType: !1362, size: 1216)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1404, file: !171, line: 3095, baseType: !1392, size: 64, offset: 1216)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !986, file: !171, line: 3388, baseType: !1409, size: 1216)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1409, file: !171, line: 2825, baseType: !1114, size: 896)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1409, file: !171, line: 2827, baseType: !984, size: 64, offset: 896)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1409, file: !171, line: 2828, baseType: !984, size: 64, offset: 960)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1409, file: !171, line: 2829, baseType: !984, size: 64, offset: 1024)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1409, file: !171, line: 2830, baseType: !984, size: 64, offset: 1088)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1409, file: !171, line: 2831, baseType: !984, size: 64, offset: 1152)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !986, file: !171, line: 3389, baseType: !1418, size: 1024)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !1419)
!1419 = !{!1420, !1421, !1422}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1418, file: !171, line: 2851, baseType: !1152, size: 960)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1418, file: !171, line: 2852, baseType: !912, size: 32, offset: 960)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1418, file: !171, line: 2853, baseType: !912, size: 32, offset: 992)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !986, file: !171, line: 3390, baseType: !1424, size: 1024)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1424, file: !171, line: 2858, baseType: !1152, size: 960)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1424, file: !171, line: 2859, baseType: !1392, size: 64, offset: 960)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !986, file: !171, line: 3391, baseType: !1429, size: 960)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !1430)
!1430 = !{!1431}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1429, file: !171, line: 2863, baseType: !1152, size: 960)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !986, file: !171, line: 3392, baseType: !1433, size: 1472)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !1434)
!1434 = !{!1435}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1433, file: !171, line: 3305, baseType: !1359, size: 1472)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !986, file: !171, line: 3393, baseType: !1437, size: 1792)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !1438)
!1438 = !{!1439, !1440, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1437, file: !171, line: 3249, baseType: !1359, size: 1472)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1437, file: !171, line: 3251, baseType: !1441, size: 64, offset: 1472)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1443, line: 463, size: 1152, elements: !1444)
!1443 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1444 = !{!1445, !1607, !1638, !1850, !1904, !1912, !1913, !1914, !1915, !1916, !1917, !1941, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1442, file: !1443, line: 464, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1448)
!1448 = !{!1449, !1498, !1511, !1525, !1575, !1588}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1447, file: !135, line: 197, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458, !1459, !1486, !1495, !1496, !1497}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1452, file: !135, line: 119, baseType: !1451, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1452, file: !135, line: 122, baseType: !1451, size: 64, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1452, file: !135, line: 123, baseType: !1451, size: 64, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1452, file: !135, line: 126, baseType: !912, size: 32, offset: 192)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1452, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1452, file: !135, line: 165, baseType: !1460, size: 192, offset: 256)
!1460 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1461)
!1461 = !{!1462, !1475, !1481}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1460, file: !135, line: 137, baseType: !1463, size: 128)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1464)
!1464 = !{!1465, !1474}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1463, file: !135, line: 135, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472, !1473}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1467, file: !135, line: 96, baseType: !1466, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1467, file: !135, line: 97, baseType: !1466, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1467, file: !135, line: 101, baseType: !984, size: 64, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1467, file: !135, line: 106, baseType: !984, size: 64, offset: 192)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1467, file: !135, line: 111, baseType: !984, size: 64, offset: 256)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1463, file: !135, line: 136, baseType: !1466, size: 64, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1460, file: !135, line: 151, baseType: !1476, size: 192)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1477)
!1477 = !{!1478, !1479, !1480}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1476, file: !135, line: 141, baseType: !984, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1476, file: !135, line: 145, baseType: !984, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1476, file: !135, line: 150, baseType: !912, size: 32, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1460, file: !135, line: 164, baseType: !1482, size: 128)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1482, file: !135, line: 161, baseType: !984, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1482, file: !135, line: 163, baseType: !1106, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1452, file: !135, line: 168, baseType: !1487, size: 64, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1488, file: !135, line: 70, baseType: !1487, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1488, file: !135, line: 73, baseType: !1451, size: 64, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1488, file: !135, line: 78, baseType: !984, size: 64, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1488, file: !135, line: 85, baseType: !1156, size: 64, offset: 192)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1488, file: !135, line: 88, baseType: !912, size: 32, offset: 256)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1452, file: !135, line: 173, baseType: !1156, size: 64, offset: 512)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1452, file: !135, line: 173, baseType: !1156, size: 64, offset: 576)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1452, file: !135, line: 177, baseType: !911, size: 8, offset: 640)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1447, file: !135, line: 200, baseType: !1499, size: 64, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1502)
!1502 = !{!1503}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1501, file: !135, line: 185, baseType: !1504, size: 128)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1506)
!1506 = !{!1507, !1508, !1509}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1505, file: !135, line: 184, baseType: !7, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1505, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1505, file: !135, line: 184, baseType: !1510, size: 64, offset: 64)
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1450, size: 64, elements: !947)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1447, file: !135, line: 203, baseType: !1512, size: 64, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1515)
!1515 = !{!1516}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1514, file: !135, line: 189, baseType: !1517, size: 128)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1519)
!1519 = !{!1520, !1521, !1522}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1518, file: !135, line: 188, baseType: !7, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1518, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1518, file: !135, line: 188, baseType: !1523, size: 64, offset: 64)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 64, elements: !947)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1487)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1447, file: !135, line: 207, baseType: !1526, size: 64, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1527, line: 144, baseType: !1528)
!1527 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1527, line: 100, size: 896, elements: !1530)
!1530 = !{!1531, !1537, !1542, !1547, !1549, !1552, !1553, !1554, !1555, !1556, !1561, !1563, !1564, !1569, !1574}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1529, file: !1527, line: 102, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1527, line: 52, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!1536, !1327}
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1527, line: 47, baseType: !7)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1529, file: !1527, line: 105, baseType: !1538, size: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1527, line: 59, baseType: !1539)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!912, !1327, !1327}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1529, file: !1527, line: 108, baseType: !1543, size: 64, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1527, line: 63, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{null, !916}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1529, file: !1527, line: 111, baseType: !1548, size: 64, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1529, file: !1527, line: 114, baseType: !1550, size: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1551, line: 46, baseType: !1037)
!1551 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1529, file: !1527, line: 117, baseType: !1550, size: 64, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1529, file: !1527, line: 120, baseType: !1550, size: 64, offset: 384)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1529, file: !1527, line: 124, baseType: !7, size: 32, offset: 448)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1529, file: !1527, line: 128, baseType: !7, size: 32, offset: 480)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1529, file: !1527, line: 131, baseType: !1557, size: 64, offset: 512)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1527, line: 75, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!916, !1550, !1550}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1529, file: !1527, line: 132, baseType: !1562, size: 64, offset: 576)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1527, line: 78, baseType: !1544)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1529, file: !1527, line: 135, baseType: !916, size: 64, offset: 640)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1529, file: !1527, line: 136, baseType: !1565, size: 64, offset: 704)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1527, line: 82, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!916, !916, !1550, !1550}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1529, file: !1527, line: 137, baseType: !1570, size: 64, offset: 768)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1527, line: 83, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{null, !916, !916}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1529, file: !1527, line: 141, baseType: !7, size: 32, offset: 832)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1447, file: !135, line: 211, baseType: !1576, size: 64, offset: 256)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1579)
!1579 = !{!1580}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1578, file: !171, line: 183, baseType: !1581, size: 128)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1583)
!1583 = !{!1584, !1585, !1586}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1582, file: !171, line: 182, baseType: !7, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1582, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1582, file: !171, line: 182, baseType: !1587, size: 64, offset: 64)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 64, elements: !947)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1447, file: !135, line: 220, baseType: !1589, size: 64, offset: 320)
!1589 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1590)
!1590 = !{!1591, !1592}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1589, file: !135, line: 218, baseType: !1576, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1589, file: !135, line: 219, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1595, line: 29, baseType: !1596)
!1595 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1595, line: 29, size: 96, elements: !1597)
!1597 = !{!1598}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1596, file: !1595, line: 29, baseType: !1599, size: 96)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1595, line: 27, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1595, line: 27, size: 96, elements: !1601)
!1601 = !{!1602, !1603, !1604}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1600, file: !1595, line: 27, baseType: !7, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1600, file: !1595, line: 27, baseType: !7, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1600, file: !1595, line: 27, baseType: !1605, size: 8, offset: 64)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 8, elements: !947)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1595, line: 26, baseType: !911)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1442, file: !1443, line: 467, baseType: !1608, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1610)
!1610 = !{!1611, !1613, !1614, !1627, !1628, !1629, !1630, !1631, !1632, !1634, !1636, !1637}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1609, file: !142, line: 377, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !926, line: 111, baseType: !931)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1609, file: !142, line: 378, baseType: !1612, size: 64, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1609, file: !142, line: 381, baseType: !1615, size: 64, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1618)
!1618 = !{!1619}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1617, file: !142, line: 282, baseType: !1620, size: 128)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1622)
!1622 = !{!1623, !1624, !1625}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1621, file: !142, line: 281, baseType: !7, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1621, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1621, file: !142, line: 281, baseType: !1626, size: 64, offset: 64)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1612, size: 64, elements: !947)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1609, file: !142, line: 384, baseType: !912, size: 32, offset: 192)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1609, file: !142, line: 387, baseType: !912, size: 32, offset: 224)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1609, file: !142, line: 390, baseType: !912, size: 32, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1609, file: !142, line: 394, baseType: !1615, size: 64, offset: 320)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1609, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1609, file: !142, line: 399, baseType: !1633, size: 64, offset: 416)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !1223)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1609, file: !142, line: 402, baseType: !1635, size: 64, offset: 480)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1223)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1609, file: !142, line: 406, baseType: !912, size: 32, offset: 544)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1609, file: !142, line: 409, baseType: !912, size: 32, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1442, file: !1443, line: 470, baseType: !1639, size: 64, offset: 128)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !839, line: 143, size: 192, elements: !1641)
!1641 = !{!1642, !1848, !1849}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1640, file: !839, line: 145, baseType: !1643, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !926, line: 69, baseType: !1644)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !839, line: 136, size: 192, elements: !1646)
!1646 = !{!1647, !1846, !1847}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1645, file: !839, line: 137, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !926, line: 58, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !839, line: 737, size: 768, elements: !1651)
!1651 = !{!1652, !1669, !1702, !1708, !1713, !1719, !1726, !1732, !1738, !1743, !1757, !1762, !1768, !1773, !1783, !1788, !1804, !1811, !1818, !1824, !1829, !1835, !1841}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1650, file: !839, line: 738, baseType: !1653, size: 256)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !839, line: 271, size: 256, elements: !1654)
!1654 = !{!1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1653, file: !839, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1653, file: !839, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1653, file: !839, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1653, file: !839, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1653, file: !839, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1653, file: !839, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1653, file: !839, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1653, file: !839, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1653, file: !839, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1653, file: !839, line: 312, baseType: !7, size: 32, offset: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1653, file: !839, line: 316, baseType: !1106, size: 32, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1653, file: !839, line: 319, baseType: !7, size: 32, offset: 96)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1653, file: !839, line: 323, baseType: !931, size: 64, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1653, file: !839, line: 327, baseType: !984, size: 64, offset: 192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1650, file: !839, line: 739, baseType: !1670, size: 448)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !839, line: 350, size: 448, elements: !1671)
!1671 = !{!1672, !1701}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1670, file: !839, line: 353, baseType: !1673, size: 384)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !839, line: 333, size: 384, elements: !1674)
!1674 = !{!1675, !1676, !1684}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1673, file: !839, line: 336, baseType: !1653, size: 256)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1673, file: !839, line: 343, baseType: !1677, size: 64, offset: 256)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1679, line: 37, size: 128, elements: !1680)
!1679 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1678, file: !1679, line: 39, baseType: !1677, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1678, file: !1679, line: 40, baseType: !1683, size: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1673, file: !839, line: 344, baseType: !1685, size: 64, offset: 320)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1679, line: 45, size: 320, elements: !1687)
!1687 = !{!1688, !1689}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1686, file: !1679, line: 47, baseType: !1685, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1686, file: !1679, line: 48, baseType: !1690, size: 256, offset: 64)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1691)
!1691 = !{!1692, !1694, !1695, !1700}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1690, file: !171, line: 1884, baseType: !1693, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1690, file: !171, line: 1885, baseType: !1693, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1690, file: !171, line: 1891, baseType: !1696, size: 64, offset: 128)
!1696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1690, file: !171, line: 1891, size: 64, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1696, file: !171, line: 1891, baseType: !1648, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1696, file: !171, line: 1891, baseType: !984, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1690, file: !171, line: 1892, baseType: !1683, size: 64, offset: 192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1670, file: !839, line: 359, baseType: !1587, size: 64, offset: 384)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1650, file: !839, line: 740, baseType: !1703, size: 512)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !839, line: 365, size: 512, elements: !1704)
!1704 = !{!1705, !1706, !1707}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1703, file: !839, line: 368, baseType: !1673, size: 384)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1703, file: !839, line: 373, baseType: !984, size: 64, offset: 384)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1703, file: !839, line: 374, baseType: !984, size: 64, offset: 448)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1650, file: !839, line: 741, baseType: !1709, size: 576)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !839, line: 380, size: 576, elements: !1710)
!1710 = !{!1711, !1712}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1709, file: !839, line: 383, baseType: !1703, size: 512)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1709, file: !839, line: 389, baseType: !1587, size: 64, offset: 512)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1650, file: !839, line: 742, baseType: !1714, size: 320)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !839, line: 395, size: 320, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1714, file: !839, line: 397, baseType: !1653, size: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1714, file: !839, line: 400, baseType: !1718, size: 64, offset: 256)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !926, line: 66, baseType: !1639)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1650, file: !839, line: 743, baseType: !1720, size: 448)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !839, line: 406, size: 448, elements: !1721)
!1721 = !{!1722, !1723, !1724, !1725}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1720, file: !839, line: 408, baseType: !1653, size: 256)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1720, file: !839, line: 412, baseType: !984, size: 64, offset: 256)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1720, file: !839, line: 420, baseType: !984, size: 64, offset: 320)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1720, file: !839, line: 423, baseType: !1718, size: 64, offset: 384)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1650, file: !839, line: 744, baseType: !1727, size: 384)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !839, line: 429, size: 384, elements: !1728)
!1728 = !{!1729, !1730, !1731}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1727, file: !839, line: 431, baseType: !1653, size: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1727, file: !839, line: 434, baseType: !984, size: 64, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1727, file: !839, line: 437, baseType: !1718, size: 64, offset: 320)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1650, file: !839, line: 745, baseType: !1733, size: 384)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !839, line: 443, size: 384, elements: !1734)
!1734 = !{!1735, !1736, !1737}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1733, file: !839, line: 445, baseType: !1653, size: 256)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1733, file: !839, line: 449, baseType: !984, size: 64, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1733, file: !839, line: 453, baseType: !1718, size: 64, offset: 320)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1650, file: !839, line: 746, baseType: !1739, size: 320)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !839, line: 459, size: 320, elements: !1740)
!1740 = !{!1741, !1742}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1739, file: !839, line: 461, baseType: !1653, size: 256)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1739, file: !839, line: 464, baseType: !984, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1650, file: !839, line: 747, baseType: !1744, size: 768)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !839, line: 469, size: 768, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1744, file: !839, line: 471, baseType: !1653, size: 256)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1744, file: !839, line: 474, baseType: !7, size: 32, offset: 256)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1744, file: !839, line: 475, baseType: !7, size: 32, offset: 288)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1744, file: !839, line: 478, baseType: !984, size: 64, offset: 320)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1744, file: !839, line: 481, baseType: !1751, size: 384, offset: 384)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 384, elements: !947)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !171, line: 1917, size: 384, elements: !1753)
!1753 = !{!1754, !1755, !1756}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1752, file: !171, line: 1920, baseType: !1690, size: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1752, file: !171, line: 1921, baseType: !984, size: 64, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1752, file: !171, line: 1922, baseType: !1106, size: 32, offset: 320)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1650, file: !839, line: 748, baseType: !1758, size: 320)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !839, line: 487, size: 320, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1758, file: !839, line: 490, baseType: !1653, size: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1758, file: !839, line: 494, baseType: !912, size: 32, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1650, file: !839, line: 749, baseType: !1763, size: 384)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !839, line: 500, size: 384, elements: !1764)
!1764 = !{!1765, !1766, !1767}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1763, file: !839, line: 502, baseType: !1653, size: 256)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1763, file: !839, line: 506, baseType: !1718, size: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1763, file: !839, line: 510, baseType: !1718, size: 64, offset: 320)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1650, file: !839, line: 750, baseType: !1769, size: 320)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !839, line: 529, size: 320, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1769, file: !839, line: 531, baseType: !1653, size: 256)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1769, file: !839, line: 540, baseType: !1718, size: 64, offset: 256)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1650, file: !839, line: 751, baseType: !1774, size: 704)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !839, line: 546, size: 704, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781, !1782}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1774, file: !839, line: 549, baseType: !1703, size: 512)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1774, file: !839, line: 553, baseType: !917, size: 64, offset: 512)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1774, file: !839, line: 557, baseType: !911, size: 8, offset: 576)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1774, file: !839, line: 558, baseType: !911, size: 8, offset: 584)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1774, file: !839, line: 559, baseType: !911, size: 8, offset: 592)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1774, file: !839, line: 560, baseType: !911, size: 8, offset: 600)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1774, file: !839, line: 566, baseType: !1587, size: 64, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1650, file: !839, line: 752, baseType: !1784, size: 384)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !839, line: 571, size: 384, elements: !1785)
!1785 = !{!1786, !1787}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1784, file: !839, line: 573, baseType: !1714, size: 320)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1784, file: !839, line: 577, baseType: !984, size: 64, offset: 320)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1650, file: !839, line: 753, baseType: !1789, size: 576)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !839, line: 600, size: 576, elements: !1790)
!1790 = !{!1791, !1792, !1793, !1794, !1803}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1789, file: !839, line: 602, baseType: !1714, size: 320)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1789, file: !839, line: 605, baseType: !984, size: 64, offset: 320)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1789, file: !839, line: 609, baseType: !1550, size: 64, offset: 384)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1789, file: !839, line: 612, baseType: !1795, size: 64, offset: 448)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !839, line: 581, size: 320, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1802}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1796, file: !839, line: 583, baseType: !203, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1796, file: !839, line: 586, baseType: !984, size: 64, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1796, file: !839, line: 589, baseType: !984, size: 64, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1796, file: !839, line: 592, baseType: !984, size: 64, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1796, file: !839, line: 595, baseType: !984, size: 64, offset: 256)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1789, file: !839, line: 616, baseType: !1718, size: 64, offset: 512)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1650, file: !839, line: 754, baseType: !1805, size: 512)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !839, line: 622, size: 512, elements: !1806)
!1806 = !{!1807, !1808, !1809, !1810}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1805, file: !839, line: 624, baseType: !1714, size: 320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1805, file: !839, line: 628, baseType: !984, size: 64, offset: 320)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1805, file: !839, line: 632, baseType: !984, size: 64, offset: 384)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1805, file: !839, line: 636, baseType: !984, size: 64, offset: 448)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1650, file: !839, line: 755, baseType: !1812, size: 704)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !839, line: 642, size: 704, elements: !1813)
!1813 = !{!1814, !1815, !1816, !1817}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1812, file: !839, line: 644, baseType: !1805, size: 512)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1812, file: !839, line: 648, baseType: !984, size: 64, offset: 512)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1812, file: !839, line: 652, baseType: !984, size: 64, offset: 576)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1812, file: !839, line: 653, baseType: !984, size: 64, offset: 640)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1650, file: !839, line: 756, baseType: !1819, size: 448)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !839, line: 663, size: 448, elements: !1820)
!1820 = !{!1821, !1822, !1823}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1819, file: !839, line: 665, baseType: !1714, size: 320)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1819, file: !839, line: 668, baseType: !984, size: 64, offset: 320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1819, file: !839, line: 673, baseType: !984, size: 64, offset: 384)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1650, file: !839, line: 757, baseType: !1825, size: 384)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !839, line: 694, size: 384, elements: !1826)
!1826 = !{!1827, !1828}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1825, file: !839, line: 696, baseType: !1714, size: 320)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1825, file: !839, line: 699, baseType: !984, size: 64, offset: 320)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1650, file: !839, line: 758, baseType: !1830, size: 384)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !839, line: 681, size: 384, elements: !1831)
!1831 = !{!1832, !1833, !1834}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1830, file: !839, line: 683, baseType: !1653, size: 256)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1830, file: !839, line: 686, baseType: !984, size: 64, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1830, file: !839, line: 689, baseType: !984, size: 64, offset: 320)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1650, file: !839, line: 759, baseType: !1836, size: 384)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !839, line: 707, size: 384, elements: !1837)
!1837 = !{!1838, !1839, !1840}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1836, file: !839, line: 709, baseType: !1653, size: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1836, file: !839, line: 712, baseType: !984, size: 64, offset: 256)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1836, file: !839, line: 712, baseType: !984, size: 64, offset: 320)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1650, file: !839, line: 760, baseType: !1842, size: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !839, line: 718, size: 320, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1842, file: !839, line: 720, baseType: !1653, size: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1842, file: !839, line: 723, baseType: !984, size: 64, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1645, file: !839, line: 138, baseType: !1644, size: 64, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1645, file: !839, line: 139, baseType: !1644, size: 64, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1640, file: !839, line: 146, baseType: !1643, size: 64, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1640, file: !839, line: 152, baseType: !1718, size: 64, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1442, file: !1443, line: 473, baseType: !1851, size: 64, offset: 192)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !921, line: 39, size: 1152, elements: !1853)
!1853 = !{!1854, !1855, !1868, !1869, !1870, !1882, !1883, !1886, !1887, !1888, !1889, !1890}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1852, file: !921, line: 41, baseType: !1526, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1852, file: !921, line: 48, baseType: !1856, size: 64, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !839, line: 35, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !839, line: 35, size: 128, elements: !1859)
!1859 = !{!1860}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1858, file: !839, line: 35, baseType: !1861, size: 128)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !839, line: 33, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !839, line: 33, size: 128, elements: !1863)
!1863 = !{!1864, !1865, !1866}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1862, file: !839, line: 33, baseType: !7, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1862, file: !839, line: 33, baseType: !7, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1862, file: !839, line: 33, baseType: !1867, size: 64, offset: 64)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 64, elements: !947)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1852, file: !921, line: 51, baseType: !1576, size: 64, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1852, file: !921, line: 54, baseType: !984, size: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1852, file: !921, line: 57, baseType: !1871, size: 128, offset: 256)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1872, line: 31, size: 128, elements: !1873)
!1872 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1873 = !{!1874, !1875, !1876, !1877, !1878, !1879, !1880}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1871, file: !1872, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1871, file: !1872, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1871, file: !1872, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1871, file: !1872, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1871, file: !1872, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1871, file: !1872, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1871, file: !1872, line: 56, baseType: !1881, size: 64, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !926, line: 47, baseType: !1207)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1852, file: !921, line: 60, baseType: !1871, size: 128, offset: 384)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1852, file: !921, line: 64, baseType: !1884, size: 64, offset: 512)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !135, line: 27, flags: DIFlagFwdDecl)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1852, file: !921, line: 67, baseType: !984, size: 64, offset: 576)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1852, file: !921, line: 73, baseType: !1526, size: 64, offset: 640)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1852, file: !921, line: 77, baseType: !1881, size: 64, offset: 704)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1852, file: !921, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1852, file: !921, line: 82, baseType: !1891, size: 320, offset: 832)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1679, line: 62, size: 320, elements: !1892)
!1892 = !{!1893, !1899, !1900, !1901, !1902, !1903}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1891, file: !1679, line: 63, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1679, line: 56, size: 128, elements: !1896)
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1895, file: !1679, line: 57, baseType: !1894, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1895, file: !1679, line: 58, baseType: !1081, size: 8, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1891, file: !1679, line: 64, baseType: !7, size: 32, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1891, file: !1679, line: 66, baseType: !7, size: 32, offset: 96)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1891, file: !1679, line: 68, baseType: !911, size: 8, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1891, file: !1679, line: 70, baseType: !1677, size: 64, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1891, file: !1679, line: 71, baseType: !1685, size: 64, offset: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1442, file: !1443, line: 476, baseType: !1905, size: 64, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !153, line: 187, size: 256, elements: !1907)
!1907 = !{!1908, !1909, !1910, !1911}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1906, file: !153, line: 189, baseType: !912, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1906, file: !153, line: 192, baseType: !967, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1906, file: !153, line: 197, baseType: !1526, size: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1906, file: !153, line: 200, baseType: !952, size: 64, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1442, file: !1443, line: 479, baseType: !1526, size: 64, offset: 320)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1442, file: !1443, line: 484, baseType: !984, size: 64, offset: 384)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1442, file: !1443, line: 488, baseType: !984, size: 64, offset: 448)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1442, file: !1443, line: 493, baseType: !984, size: 64, offset: 512)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1442, file: !1443, line: 496, baseType: !984, size: 64, offset: 576)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1442, file: !1443, line: 501, baseType: !1918, size: 64, offset: 640)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1920)
!1920 = !{!1921, !1924, !1925, !1926, !1927, !1929, !1930, !1935, !1936, !1937, !1938, !1939, !1940}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1919, file: !166, line: 2356, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1919, file: !166, line: 2357, baseType: !917, size: 64, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1919, file: !166, line: 2358, baseType: !912, size: 32, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1919, file: !166, line: 2359, baseType: !912, size: 32, offset: 160)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1919, file: !166, line: 2360, baseType: !1928, size: 128, offset: 192)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 128, elements: !1247)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1919, file: !166, line: 2364, baseType: !912, size: 32, offset: 320)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1919, file: !166, line: 2367, baseType: !1931, size: 128, offset: 384)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1931, file: !166, line: 2351, baseType: !1156, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1931, file: !166, line: 2352, baseType: !1039, size: 64, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1919, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1919, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1919, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1919, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1919, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1919, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1442, file: !1443, line: 504, baseType: !1942, size: 64, offset: 704)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1443, line: 504, flags: DIFlagFwdDecl)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1442, file: !1443, line: 507, baseType: !1526, size: 64, offset: 768)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1442, file: !1443, line: 510, baseType: !912, size: 32, offset: 832)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1442, file: !1443, line: 513, baseType: !912, size: 32, offset: 864)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1442, file: !1443, line: 516, baseType: !1106, size: 32, offset: 896)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1442, file: !1443, line: 519, baseType: !1106, size: 32, offset: 928)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1442, file: !1443, line: 522, baseType: !7, size: 32, offset: 960)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1442, file: !1443, line: 523, baseType: !7, size: 32, offset: 992)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1442, file: !1443, line: 528, baseType: !917, size: 64, offset: 1024)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1442, file: !1443, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1442, file: !1443, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1442, file: !1443, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1442, file: !1443, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1442, file: !1443, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1442, file: !1443, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1442, file: !1443, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1442, file: !1443, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1442, file: !1443, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1442, file: !1443, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1442, file: !1443, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1442, file: !1443, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1442, file: !1443, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1442, file: !1443, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1442, file: !1443, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1442, file: !1443, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1437, file: !171, line: 3254, baseType: !984, size: 64, offset: 1536)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1437, file: !171, line: 3257, baseType: !984, size: 64, offset: 1600)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1437, file: !171, line: 3258, baseType: !984, size: 64, offset: 1664)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1437, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1437, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1437, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1437, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1437, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1437, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1437, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1437, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1437, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1437, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1437, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1437, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1437, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1437, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1437, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1437, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1437, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1437, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !986, file: !171, line: 3394, baseType: !1990, size: 1344)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1991)
!1991 = !{!1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1990, file: !171, line: 2280, baseType: !1022, size: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1990, file: !171, line: 2281, baseType: !984, size: 64, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1990, file: !171, line: 2282, baseType: !984, size: 64, offset: 256)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1990, file: !171, line: 2283, baseType: !984, size: 64, offset: 320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1990, file: !171, line: 2284, baseType: !984, size: 64, offset: 384)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1990, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1990, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1990, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1990, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1990, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1990, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1990, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1990, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1990, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1990, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1990, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1990, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1990, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1990, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1990, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1990, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1990, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1990, file: !171, line: 2306, baseType: !1277, size: 32, offset: 544)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1990, file: !171, line: 2307, baseType: !984, size: 64, offset: 576)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1990, file: !171, line: 2308, baseType: !984, size: 64, offset: 640)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1990, file: !171, line: 2314, baseType: !2018, size: 64, offset: 704)
!2018 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !2019)
!2019 = !{!2020, !2021, !2022}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2018, file: !171, line: 2310, baseType: !912, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2018, file: !171, line: 2311, baseType: !917, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2018, file: !171, line: 2312, baseType: !2023, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1990, file: !171, line: 2315, baseType: !984, size: 64, offset: 768)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1990, file: !171, line: 2316, baseType: !984, size: 64, offset: 832)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1990, file: !171, line: 2317, baseType: !984, size: 64, offset: 896)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1990, file: !171, line: 2318, baseType: !984, size: 64, offset: 960)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1990, file: !171, line: 2319, baseType: !984, size: 64, offset: 1024)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1990, file: !171, line: 2320, baseType: !984, size: 64, offset: 1088)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1990, file: !171, line: 2321, baseType: !984, size: 64, offset: 1152)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1990, file: !171, line: 2322, baseType: !984, size: 64, offset: 1216)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1990, file: !171, line: 2324, baseType: !2034, size: 64, offset: 1280)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !986, file: !171, line: 3395, baseType: !2037, size: 320)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !2038)
!2038 = !{!2039, !2040, !2041}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2037, file: !171, line: 1470, baseType: !1022, size: 192)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2037, file: !171, line: 1471, baseType: !984, size: 64, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2037, file: !171, line: 1472, baseType: !984, size: 64, offset: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !986, file: !171, line: 3396, baseType: !2043, size: 320)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !2044)
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2043, file: !171, line: 1483, baseType: !1022, size: 192)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2043, file: !171, line: 1484, baseType: !912, size: 32, offset: 192)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2043, file: !171, line: 1485, baseType: !1587, size: 64, offset: 256)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !986, file: !171, line: 3397, baseType: !2049, size: 384)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !2050)
!2050 = !{!2051, !2052, !2053, !2054}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2049, file: !171, line: 1830, baseType: !1022, size: 192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2049, file: !171, line: 1831, baseType: !1106, size: 32, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2049, file: !171, line: 1832, baseType: !984, size: 64, offset: 256)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2049, file: !171, line: 1835, baseType: !1587, size: 64, offset: 320)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !986, file: !171, line: 3398, baseType: !2056, size: 704)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062, !2067}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2056, file: !171, line: 1899, baseType: !1022, size: 192)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2056, file: !171, line: 1902, baseType: !984, size: 64, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2056, file: !171, line: 1905, baseType: !1648, size: 64, offset: 256)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2056, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2056, file: !171, line: 1911, baseType: !2063, size: 64, offset: 384)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !921, line: 117, size: 128, elements: !2065)
!2065 = !{!2066}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !2064, file: !921, line: 120, baseType: !1871, size: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2056, file: !171, line: 1914, baseType: !1690, size: 256, offset: 448)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !986, file: !171, line: 3399, baseType: !2069, size: 704)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2069, file: !171, line: 2009, baseType: !1022, size: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2069, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2069, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2069, file: !171, line: 2014, baseType: !1106, size: 32, offset: 224)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2069, file: !171, line: 2016, baseType: !984, size: 64, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2069, file: !171, line: 2017, baseType: !1576, size: 64, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2069, file: !171, line: 2019, baseType: !984, size: 64, offset: 384)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2069, file: !171, line: 2020, baseType: !984, size: 64, offset: 448)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2069, file: !171, line: 2021, baseType: !984, size: 64, offset: 512)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2069, file: !171, line: 2022, baseType: !984, size: 64, offset: 576)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2069, file: !171, line: 2023, baseType: !984, size: 64, offset: 640)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !986, file: !171, line: 3400, baseType: !2083, size: 832)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !2084)
!2084 = !{!2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2083, file: !171, line: 2431, baseType: !1022, size: 192)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2083, file: !171, line: 2433, baseType: !984, size: 64, offset: 192)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2083, file: !171, line: 2434, baseType: !984, size: 64, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2083, file: !171, line: 2435, baseType: !984, size: 64, offset: 320)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2083, file: !171, line: 2436, baseType: !984, size: 64, offset: 384)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2083, file: !171, line: 2437, baseType: !1576, size: 64, offset: 448)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2083, file: !171, line: 2438, baseType: !984, size: 64, offset: 512)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2083, file: !171, line: 2440, baseType: !984, size: 64, offset: 576)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2083, file: !171, line: 2441, baseType: !984, size: 64, offset: 640)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2083, file: !171, line: 2443, baseType: !2095, size: 128, offset: 704)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !2096)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !2097)
!2097 = !{!2098}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2096, file: !171, line: 182, baseType: !1581, size: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !986, file: !171, line: 3401, baseType: !2100, size: 320)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !2101)
!2101 = !{!2102, !2103, !2110}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2100, file: !171, line: 3329, baseType: !1022, size: 192)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2100, file: !171, line: 3330, baseType: !2104, size: 64, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !2106)
!2106 = !{!2107, !2108, !2109}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2105, file: !171, line: 3322, baseType: !2104, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2105, file: !171, line: 3323, baseType: !2104, size: 64, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2105, file: !171, line: 3324, baseType: !984, size: 64, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2100, file: !171, line: 3331, baseType: !2104, size: 64, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !986, file: !171, line: 3402, baseType: !2112, size: 256)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !2113)
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2112, file: !171, line: 1541, baseType: !1022, size: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2112, file: !171, line: 1542, baseType: !2116, size: 64, offset: 192)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !2119)
!2119 = !{!2120}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2118, file: !171, line: 1538, baseType: !2121, size: 192)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !2123)
!2123 = !{!2124, !2125, !2126}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2122, file: !171, line: 1537, baseType: !7, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2122, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2122, file: !171, line: 1537, baseType: !2127, size: 128, offset: 64)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2128, size: 128, elements: !947)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !2130)
!2130 = !{!2131, !2132}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2129, file: !171, line: 1533, baseType: !984, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2129, file: !171, line: 1534, baseType: !984, size: 64, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !986, file: !171, line: 3403, baseType: !2134, size: 512)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2145, !2146, !2147}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2134, file: !171, line: 1939, baseType: !1022, size: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2134, file: !171, line: 1940, baseType: !1106, size: 32, offset: 192)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2134, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2134, file: !171, line: 1946, baseType: !2140, size: 32, offset: 256)
!2140 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !2141)
!2141 = !{!2142, !2143, !2144}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2140, file: !171, line: 1943, baseType: !189, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2140, file: !171, line: 1944, baseType: !196, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2140, file: !171, line: 1945, baseType: !203, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2134, file: !171, line: 1950, baseType: !1718, size: 64, offset: 320)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2134, file: !171, line: 1951, baseType: !1718, size: 64, offset: 384)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2134, file: !171, line: 1953, baseType: !1587, size: 64, offset: 448)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !986, file: !171, line: 3404, baseType: !2149, size: 1664)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !2150)
!2150 = !{!2151, !2152}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2149, file: !171, line: 3338, baseType: !1022, size: 192)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2149, file: !171, line: 3341, baseType: !2153, size: 1472, offset: 192)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2154, line: 410, size: 1472, elements: !2155)
!2154 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2155 = !{!2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2153, file: !2154, line: 412, baseType: !912, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2153, file: !2154, line: 413, baseType: !912, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2153, file: !2154, line: 414, baseType: !912, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2153, file: !2154, line: 415, baseType: !912, size: 32, offset: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2153, file: !2154, line: 416, baseType: !912, size: 32, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2153, file: !2154, line: 417, baseType: !912, size: 32, offset: 160)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2153, file: !2154, line: 418, baseType: !911, size: 8, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2153, file: !2154, line: 419, baseType: !911, size: 8, offset: 200)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2153, file: !2154, line: 420, baseType: !2165, size: 8, offset: 208)
!2165 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2153, file: !2154, line: 421, baseType: !2165, size: 8, offset: 216)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2153, file: !2154, line: 422, baseType: !2165, size: 8, offset: 224)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2153, file: !2154, line: 423, baseType: !2165, size: 8, offset: 232)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2153, file: !2154, line: 424, baseType: !2165, size: 8, offset: 240)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2153, file: !2154, line: 425, baseType: !2165, size: 8, offset: 248)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2153, file: !2154, line: 426, baseType: !2165, size: 8, offset: 256)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2153, file: !2154, line: 427, baseType: !2165, size: 8, offset: 264)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2153, file: !2154, line: 428, baseType: !2165, size: 8, offset: 272)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2153, file: !2154, line: 429, baseType: !2165, size: 8, offset: 280)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2153, file: !2154, line: 430, baseType: !2165, size: 8, offset: 288)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2153, file: !2154, line: 431, baseType: !2165, size: 8, offset: 296)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2153, file: !2154, line: 432, baseType: !2165, size: 8, offset: 304)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2153, file: !2154, line: 433, baseType: !2165, size: 8, offset: 312)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2153, file: !2154, line: 434, baseType: !2165, size: 8, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2153, file: !2154, line: 435, baseType: !2165, size: 8, offset: 328)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2153, file: !2154, line: 436, baseType: !2165, size: 8, offset: 336)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2153, file: !2154, line: 437, baseType: !2165, size: 8, offset: 344)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2153, file: !2154, line: 438, baseType: !2165, size: 8, offset: 352)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2153, file: !2154, line: 439, baseType: !2165, size: 8, offset: 360)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2153, file: !2154, line: 440, baseType: !2165, size: 8, offset: 368)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2153, file: !2154, line: 441, baseType: !2165, size: 8, offset: 376)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2153, file: !2154, line: 442, baseType: !2165, size: 8, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2153, file: !2154, line: 443, baseType: !2165, size: 8, offset: 392)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2153, file: !2154, line: 444, baseType: !2165, size: 8, offset: 400)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2153, file: !2154, line: 445, baseType: !2165, size: 8, offset: 408)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2153, file: !2154, line: 446, baseType: !2165, size: 8, offset: 416)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2153, file: !2154, line: 447, baseType: !2165, size: 8, offset: 424)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2153, file: !2154, line: 448, baseType: !2165, size: 8, offset: 432)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2153, file: !2154, line: 449, baseType: !2165, size: 8, offset: 440)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2153, file: !2154, line: 450, baseType: !2165, size: 8, offset: 448)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2153, file: !2154, line: 451, baseType: !2165, size: 8, offset: 456)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2153, file: !2154, line: 452, baseType: !2165, size: 8, offset: 464)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2153, file: !2154, line: 453, baseType: !2165, size: 8, offset: 472)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2153, file: !2154, line: 454, baseType: !2165, size: 8, offset: 480)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2153, file: !2154, line: 455, baseType: !2165, size: 8, offset: 488)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2153, file: !2154, line: 456, baseType: !2165, size: 8, offset: 496)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2153, file: !2154, line: 457, baseType: !2165, size: 8, offset: 504)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2153, file: !2154, line: 458, baseType: !2165, size: 8, offset: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2153, file: !2154, line: 459, baseType: !2165, size: 8, offset: 520)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2153, file: !2154, line: 460, baseType: !2165, size: 8, offset: 528)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2153, file: !2154, line: 461, baseType: !2165, size: 8, offset: 536)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2153, file: !2154, line: 462, baseType: !2165, size: 8, offset: 544)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2153, file: !2154, line: 463, baseType: !2165, size: 8, offset: 552)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2153, file: !2154, line: 464, baseType: !2165, size: 8, offset: 560)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2153, file: !2154, line: 465, baseType: !2165, size: 8, offset: 568)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2153, file: !2154, line: 466, baseType: !2165, size: 8, offset: 576)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2153, file: !2154, line: 467, baseType: !2165, size: 8, offset: 584)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2153, file: !2154, line: 468, baseType: !2165, size: 8, offset: 592)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2153, file: !2154, line: 469, baseType: !2165, size: 8, offset: 600)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2153, file: !2154, line: 470, baseType: !2165, size: 8, offset: 608)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2153, file: !2154, line: 471, baseType: !2165, size: 8, offset: 616)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2153, file: !2154, line: 472, baseType: !2165, size: 8, offset: 624)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2153, file: !2154, line: 473, baseType: !2165, size: 8, offset: 632)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2153, file: !2154, line: 474, baseType: !2165, size: 8, offset: 640)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2153, file: !2154, line: 475, baseType: !2165, size: 8, offset: 648)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2153, file: !2154, line: 476, baseType: !2165, size: 8, offset: 656)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2153, file: !2154, line: 477, baseType: !2165, size: 8, offset: 664)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2153, file: !2154, line: 478, baseType: !2165, size: 8, offset: 672)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2153, file: !2154, line: 479, baseType: !2165, size: 8, offset: 680)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2153, file: !2154, line: 480, baseType: !2165, size: 8, offset: 688)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2153, file: !2154, line: 481, baseType: !2165, size: 8, offset: 696)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2153, file: !2154, line: 482, baseType: !2165, size: 8, offset: 704)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2153, file: !2154, line: 483, baseType: !2165, size: 8, offset: 712)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2153, file: !2154, line: 484, baseType: !2165, size: 8, offset: 720)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2153, file: !2154, line: 485, baseType: !2165, size: 8, offset: 728)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2153, file: !2154, line: 486, baseType: !2165, size: 8, offset: 736)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2153, file: !2154, line: 487, baseType: !2165, size: 8, offset: 744)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2153, file: !2154, line: 488, baseType: !2165, size: 8, offset: 752)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2153, file: !2154, line: 489, baseType: !2165, size: 8, offset: 760)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2153, file: !2154, line: 490, baseType: !2165, size: 8, offset: 768)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2153, file: !2154, line: 491, baseType: !2165, size: 8, offset: 776)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2153, file: !2154, line: 492, baseType: !2165, size: 8, offset: 784)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2153, file: !2154, line: 493, baseType: !2165, size: 8, offset: 792)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2153, file: !2154, line: 494, baseType: !2165, size: 8, offset: 800)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2153, file: !2154, line: 495, baseType: !2165, size: 8, offset: 808)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2153, file: !2154, line: 496, baseType: !2165, size: 8, offset: 816)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2153, file: !2154, line: 497, baseType: !2165, size: 8, offset: 824)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2153, file: !2154, line: 498, baseType: !2165, size: 8, offset: 832)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2153, file: !2154, line: 499, baseType: !2165, size: 8, offset: 840)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2153, file: !2154, line: 500, baseType: !2165, size: 8, offset: 848)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2153, file: !2154, line: 501, baseType: !2165, size: 8, offset: 856)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2153, file: !2154, line: 502, baseType: !2165, size: 8, offset: 864)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2153, file: !2154, line: 503, baseType: !2165, size: 8, offset: 872)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2153, file: !2154, line: 504, baseType: !2165, size: 8, offset: 880)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2153, file: !2154, line: 505, baseType: !2165, size: 8, offset: 888)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2153, file: !2154, line: 506, baseType: !2165, size: 8, offset: 896)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2153, file: !2154, line: 507, baseType: !2165, size: 8, offset: 904)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2153, file: !2154, line: 508, baseType: !2165, size: 8, offset: 912)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2153, file: !2154, line: 509, baseType: !2165, size: 8, offset: 920)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2153, file: !2154, line: 510, baseType: !2165, size: 8, offset: 928)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2153, file: !2154, line: 511, baseType: !2165, size: 8, offset: 936)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2153, file: !2154, line: 512, baseType: !2165, size: 8, offset: 944)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2153, file: !2154, line: 513, baseType: !2165, size: 8, offset: 952)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2153, file: !2154, line: 514, baseType: !2165, size: 8, offset: 960)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2153, file: !2154, line: 515, baseType: !2165, size: 8, offset: 968)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2153, file: !2154, line: 516, baseType: !2165, size: 8, offset: 976)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2153, file: !2154, line: 517, baseType: !2165, size: 8, offset: 984)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2153, file: !2154, line: 518, baseType: !2165, size: 8, offset: 992)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2153, file: !2154, line: 519, baseType: !2165, size: 8, offset: 1000)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2153, file: !2154, line: 520, baseType: !2165, size: 8, offset: 1008)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2153, file: !2154, line: 521, baseType: !2165, size: 8, offset: 1016)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2153, file: !2154, line: 522, baseType: !2165, size: 8, offset: 1024)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2153, file: !2154, line: 523, baseType: !2165, size: 8, offset: 1032)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2153, file: !2154, line: 524, baseType: !2165, size: 8, offset: 1040)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2153, file: !2154, line: 525, baseType: !2165, size: 8, offset: 1048)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2153, file: !2154, line: 526, baseType: !2165, size: 8, offset: 1056)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2153, file: !2154, line: 527, baseType: !2165, size: 8, offset: 1064)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2153, file: !2154, line: 528, baseType: !2165, size: 8, offset: 1072)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2153, file: !2154, line: 529, baseType: !2165, size: 8, offset: 1080)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2153, file: !2154, line: 530, baseType: !2165, size: 8, offset: 1088)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2153, file: !2154, line: 531, baseType: !2165, size: 8, offset: 1096)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2153, file: !2154, line: 532, baseType: !2165, size: 8, offset: 1104)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2153, file: !2154, line: 533, baseType: !2165, size: 8, offset: 1112)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2153, file: !2154, line: 534, baseType: !2165, size: 8, offset: 1120)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2153, file: !2154, line: 535, baseType: !2165, size: 8, offset: 1128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2153, file: !2154, line: 536, baseType: !2165, size: 8, offset: 1136)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2153, file: !2154, line: 537, baseType: !2165, size: 8, offset: 1144)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2153, file: !2154, line: 538, baseType: !2165, size: 8, offset: 1152)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2153, file: !2154, line: 539, baseType: !2165, size: 8, offset: 1160)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2153, file: !2154, line: 540, baseType: !2165, size: 8, offset: 1168)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2153, file: !2154, line: 541, baseType: !2165, size: 8, offset: 1176)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2153, file: !2154, line: 542, baseType: !2165, size: 8, offset: 1184)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2153, file: !2154, line: 543, baseType: !2165, size: 8, offset: 1192)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2153, file: !2154, line: 544, baseType: !2165, size: 8, offset: 1200)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2153, file: !2154, line: 545, baseType: !2165, size: 8, offset: 1208)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2153, file: !2154, line: 546, baseType: !2165, size: 8, offset: 1216)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2153, file: !2154, line: 547, baseType: !2165, size: 8, offset: 1224)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2153, file: !2154, line: 548, baseType: !2165, size: 8, offset: 1232)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2153, file: !2154, line: 549, baseType: !2165, size: 8, offset: 1240)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2153, file: !2154, line: 550, baseType: !2165, size: 8, offset: 1248)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2153, file: !2154, line: 551, baseType: !2165, size: 8, offset: 1256)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2153, file: !2154, line: 552, baseType: !2165, size: 8, offset: 1264)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2153, file: !2154, line: 553, baseType: !2165, size: 8, offset: 1272)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2153, file: !2154, line: 554, baseType: !2165, size: 8, offset: 1280)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2153, file: !2154, line: 555, baseType: !2165, size: 8, offset: 1288)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2153, file: !2154, line: 556, baseType: !2165, size: 8, offset: 1296)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2153, file: !2154, line: 557, baseType: !2165, size: 8, offset: 1304)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2153, file: !2154, line: 558, baseType: !2165, size: 8, offset: 1312)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2153, file: !2154, line: 559, baseType: !2165, size: 8, offset: 1320)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2153, file: !2154, line: 560, baseType: !2165, size: 8, offset: 1328)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2153, file: !2154, line: 561, baseType: !2165, size: 8, offset: 1336)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2153, file: !2154, line: 562, baseType: !2165, size: 8, offset: 1344)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2153, file: !2154, line: 563, baseType: !2165, size: 8, offset: 1352)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2153, file: !2154, line: 564, baseType: !2165, size: 8, offset: 1360)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2153, file: !2154, line: 565, baseType: !2165, size: 8, offset: 1368)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2153, file: !2154, line: 566, baseType: !2165, size: 8, offset: 1376)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2153, file: !2154, line: 567, baseType: !2165, size: 8, offset: 1384)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2153, file: !2154, line: 568, baseType: !2165, size: 8, offset: 1392)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2153, file: !2154, line: 569, baseType: !2165, size: 8, offset: 1400)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2153, file: !2154, line: 570, baseType: !2165, size: 8, offset: 1408)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2153, file: !2154, line: 571, baseType: !2165, size: 8, offset: 1416)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2153, file: !2154, line: 572, baseType: !2165, size: 8, offset: 1424)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2153, file: !2154, line: 573, baseType: !2165, size: 8, offset: 1432)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2153, file: !2154, line: 574, baseType: !2165, size: 8, offset: 1440)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !986, file: !171, line: 3405, baseType: !2321, size: 384)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !2322)
!2322 = !{!2323, !2324}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2321, file: !171, line: 3353, baseType: !1022, size: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2321, file: !171, line: 3356, baseType: !2325, size: 192, offset: 192)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2154, line: 578, size: 192, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2325, file: !2154, line: 580, baseType: !912, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2325, file: !2154, line: 581, baseType: !912, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2325, file: !2154, line: 582, baseType: !912, size: 32, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2325, file: !2154, line: 583, baseType: !912, size: 32, offset: 96)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2325, file: !2154, line: 584, baseType: !911, size: 8, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2325, file: !2154, line: 585, baseType: !911, size: 8, offset: 136)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2325, file: !2154, line: 586, baseType: !911, size: 8, offset: 144)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2325, file: !2154, line: 587, baseType: !911, size: 8, offset: 152)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2325, file: !2154, line: 588, baseType: !911, size: 8, offset: 160)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2325, file: !2154, line: 589, baseType: !911, size: 8, offset: 168)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2325, file: !2154, line: 590, baseType: !911, size: 8, offset: 176)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !953, file: !153, line: 143, baseType: !1032, size: 128, offset: 640)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !953, file: !153, line: 146, baseType: !1032, size: 128, offset: 768)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !953, file: !153, line: 148, baseType: !911, size: 8, offset: 896)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !953, file: !153, line: 149, baseType: !911, size: 8, offset: 904)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !953, file: !153, line: 153, baseType: !161, size: 32, offset: 928)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !953, file: !153, line: 156, baseType: !2344, size: 64, offset: 960)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !153, line: 48, size: 320, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2345, file: !153, line: 50, baseType: !1648, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2345, file: !153, line: 59, baseType: !1032, size: 128, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !2345, file: !153, line: 64, baseType: !911, size: 8, offset: 192)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2345, file: !153, line: 67, baseType: !2344, size: 64, offset: 256)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !953, file: !153, line: 159, baseType: !2352, size: 64, offset: 1024)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !153, line: 72, size: 256, elements: !2354)
!2354 = !{!2355, !2356, !2357, !2358}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2353, file: !153, line: 74, baseType: !927, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2353, file: !153, line: 77, baseType: !2352, size: 64, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2353, file: !153, line: 78, baseType: !2352, size: 64, offset: 128)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !2353, file: !153, line: 81, baseType: !2352, size: 64, offset: 192)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !953, file: !153, line: 162, baseType: !911, size: 8, offset: 1088)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !953, file: !153, line: 166, baseType: !984, size: 64, offset: 1152)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !932, file: !142, line: 229, baseType: !2362, size: 128, offset: 256)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2363, size: 128, elements: !1223)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !932, file: !142, line: 232, baseType: !931, size: 64, offset: 384)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !932, file: !142, line: 233, baseType: !931, size: 64, offset: 448)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !932, file: !142, line: 238, baseType: !2368, size: 64, offset: 512)
!2368 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !2369)
!2369 = !{!2370, !2376}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2368, file: !142, line: 236, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2372, file: !142, line: 275, baseType: !1718, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2372, file: !142, line: 278, baseType: !1718, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2368, file: !142, line: 237, baseType: !2377, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2383, !2384}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2378, file: !142, line: 261, baseType: !1156, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2378, file: !142, line: 262, baseType: !1156, size: 64, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2378, file: !142, line: 266, baseType: !1156, size: 64, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2378, file: !142, line: 267, baseType: !1156, size: 64, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2378, file: !142, line: 270, baseType: !912, size: 32, offset: 256)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !932, file: !142, line: 241, baseType: !2386, size: 64, offset: 576)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !1039)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !932, file: !142, line: 244, baseType: !912, size: 32, offset: 640)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !932, file: !142, line: 247, baseType: !912, size: 32, offset: 672)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !932, file: !142, line: 250, baseType: !912, size: 32, offset: 704)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !932, file: !142, line: 253, baseType: !912, size: 32, offset: 736)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !932, file: !142, line: 256, baseType: !912, size: 32, offset: 768)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !928, file: !142, line: 125, baseType: !931, size: 64, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !928, file: !142, line: 131, baseType: !2394, size: 64, offset: 128)
!2394 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !2395)
!2395 = !{!2396, !2397}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2394, file: !142, line: 129, baseType: !1718, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2394, file: !142, line: 130, baseType: !1156, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !928, file: !142, line: 134, baseType: !916, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !928, file: !142, line: 137, baseType: !984, size: 64, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !928, file: !142, line: 138, baseType: !1106, size: 32, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !928, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !928, file: !142, line: 144, baseType: !912, size: 32, offset: 384)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !928, file: !142, line: 145, baseType: !912, size: 32, offset: 416)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !928, file: !142, line: 146, baseType: !2386, size: 64, offset: 448)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ep_predictor", scope: !920, file: !921, line: 310, baseType: !603, size: 32, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "ep_probability", scope: !920, file: !921, line: 311, baseType: !912, size: 32, offset: 160)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_info", file: !3, line: 1819, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_info_def", file: !3, line: 1811, size: 192, elements: !2411)
!2411 = !{!2412, !2419}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "back_edge_prob", scope: !2410, file: !3, line: 1816, baseType: !2413, size: 128)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "sreal", file: !2414, line: 53, baseType: !2415)
!2414 = !DIFile(filename: "./sreal.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sreal", file: !2414, line: 44, size: 128, elements: !2416)
!2416 = !{!2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2415, file: !2414, line: 50, baseType: !1037, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2415, file: !2414, line: 52, baseType: !912, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "back_edge", scope: !2410, file: !3, line: 1818, baseType: !7, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_info", file: !3, line: 1808, baseType: !2421)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_info_def", file: !3, line: 1798, size: 256, elements: !2423)
!2423 = !{!2424, !2425, !2426}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2422, file: !3, line: 1801, baseType: !2413, size: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2422, file: !3, line: 1804, baseType: !1612, size: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "npredecessors", scope: !2422, file: !3, line: 1807, baseType: !912, size: 32, offset: 192)
!2427 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1595, line: 32, baseType: !2432)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1595, line: 32, size: 96, elements: !2433)
!2433 = !{!2434}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2432, file: !1595, line: 32, baseType: !2435, size: 96)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1595, line: 31, baseType: !2436)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1595, line: 31, size: 96, elements: !2437)
!2437 = !{!2438, !2439, !2440}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2436, file: !1595, line: 31, baseType: !7, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2436, file: !1595, line: 31, baseType: !7, size: 32, offset: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2436, file: !1595, line: 31, baseType: !2441, size: 32, offset: 64)
!2441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 32, elements: !947)
!2442 = !{!2443, !2468, !2496, !2498, !2500, !2502, !2504, !2506, !2508, !2510, !0, !2512}
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(name: "real_values_initialized", scope: !2445, file: !3, line: 2084, type: !912, isLocal: true, isDefinition: true)
!2445 = distinct !DISubprogram(name: "estimate_bb_frequencies", scope: !3, file: !3, line: 2077, type: !2446, scopeLine: 2078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2448)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{null}
!2448 = !{!2449, !2450, !2451, !2457, !2464}
!2449 = !DILocalVariable(name: "bb", scope: !2445, file: !3, line: 2079, type: !1612)
!2450 = !DILocalVariable(name: "freq_max", scope: !2445, file: !3, line: 2080, type: !2413)
!2451 = !DILocalVariable(name: "e", scope: !2452, file: !3, line: 2107, type: !925)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 2106, column: 2)
!2453 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 2105, column: 7)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 2105, column: 7)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 2083, column: 5)
!2456 = distinct !DILexicalBlock(scope: !2445, file: !3, line: 2082, column: 7)
!2457 = !DILocalVariable(name: "ei", scope: !2452, file: !3, line: 2108, type: !2458)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !142, line: 682, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 679, size: 128, elements: !2460)
!2460 = !{!2461, !2462}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2459, file: !142, line: 680, baseType: !7, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2459, file: !142, line: 681, baseType: !2463, size: 64, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!2464 = !DILocalVariable(name: "tmp", scope: !2465, file: !3, line: 2131, type: !2413)
!2465 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 2130, column: 2)
!2466 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 2129, column: 7)
!2467 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 2129, column: 7)
!2468 = !DIGlobalVariableExpression(var: !2469, expr: !DIExpression())
!2469 = distinct !DIGlobalVariable(name: "pass_profile", scope: !2, file: !3, line: 2225, type: !2470, isLocal: false, isDefinition: true)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !398, line: 156, size: 640, elements: !2471)
!2471 = !{!2472}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2470, file: !398, line: 158, baseType: !2473, size: 640)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !398, line: 114, size: 640, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2481, !2485, !2487, !2488, !2489, !2491, !2492, !2493, !2494, !2495}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2473, file: !398, line: 117, baseType: !397, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2473, file: !398, line: 121, baseType: !917, size: 64, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2473, file: !398, line: 125, baseType: !2478, size: 64, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!911}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2473, file: !398, line: 130, baseType: !2482, size: 64, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!7}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2473, file: !398, line: 133, baseType: !2486, size: 64, offset: 256)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2473, file: !398, line: 136, baseType: !2486, size: 64, offset: 320)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2473, file: !398, line: 139, baseType: !912, size: 32, offset: 384)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2473, file: !398, line: 143, baseType: !2490, size: 32, offset: 416)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !405, line: 80, baseType: !404)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2473, file: !398, line: 146, baseType: !7, size: 32, offset: 448)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2473, file: !398, line: 147, baseType: !7, size: 32, offset: 480)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2473, file: !398, line: 148, baseType: !7, size: 32, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2473, file: !398, line: 151, baseType: !7, size: 32, offset: 544)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2473, file: !398, line: 152, baseType: !7, size: 32, offset: 576)
!2496 = !DIGlobalVariableExpression(var: !2497, expr: !DIExpression())
!2497 = distinct !DIGlobalVariable(name: "pass_strip_predict_hints", scope: !2, file: !3, line: 2244, type: !2470, isLocal: false, isDefinition: true)
!2498 = !DIGlobalVariableExpression(var: !2499, expr: !DIExpression())
!2499 = distinct !DIGlobalVariable(name: "real_zero", scope: !2, file: !3, line: 66, type: !2413, isLocal: true, isDefinition: true)
!2500 = !DIGlobalVariableExpression(var: !2501, expr: !DIExpression())
!2501 = distinct !DIGlobalVariable(name: "real_one", scope: !2, file: !3, line: 66, type: !2413, isLocal: true, isDefinition: true)
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "real_almost_one", scope: !2, file: !3, line: 66, type: !2413, isLocal: true, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "real_br_prob_base", scope: !2, file: !3, line: 66, type: !2413, isLocal: true, isDefinition: true)
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(name: "real_inv_br_prob_base", scope: !2, file: !3, line: 67, type: !2413, isLocal: true, isDefinition: true)
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "real_one_half", scope: !2, file: !3, line: 67, type: !2413, isLocal: true, isDefinition: true)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "real_bb_freq_max", scope: !2, file: !3, line: 67, type: !2413, isLocal: true, isDefinition: true)
!2512 = !DIGlobalVariableExpression(var: !2513, expr: !DIExpression())
!2513 = distinct !DIGlobalVariable(name: "predictor_info", scope: !2, file: !3, line: 103, type: !2514, isLocal: true, isDefinition: true)
!2514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2515, size: 3712, elements: !2523)
!2515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "predictor_info", file: !3, line: 86, size: 128, elements: !2517)
!2517 = !{!2518, !2520, !2522}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2516, file: !3, line: 88, baseType: !2519, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "hitrate", scope: !2516, file: !3, line: 89, baseType: !2521, size: 32, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2516, file: !3, line: 91, baseType: !2521, size: 32, offset: 96)
!2523 = !{!2524}
!2524 = !DISubrange(count: 29)
!2525 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2526 = !{i32 2, !"Dwarf Version", i32 4}
!2527 = !{i32 2, !"Debug Info Version", i32 3}
!2528 = !{i32 1, !"wchar_size", i32 4}
!2529 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2530 = distinct !DISubprogram(name: "vprintf", scope: !2531, file: !2531, line: 39, type: !2532, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2542)
!2531 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!912, !2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !917)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2537)
!2537 = !{!2538, !2539, !2540, !2541}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2536, file: !3, baseType: !7, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2536, file: !3, baseType: !7, size: 32, offset: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2536, file: !3, baseType: !916, size: 64, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2536, file: !3, baseType: !916, size: 64, offset: 128)
!2542 = !{!2543, !2544}
!2543 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2530, file: !2531, line: 39, type: !2534)
!2544 = !DILocalVariable(name: "__arg", arg: 2, scope: !2530, file: !2531, line: 39, type: !2535)
!2545 = !DILocation(line: 0, scope: !2530)
!2546 = !DILocation(line: 41, column: 20, scope: !2530)
!2547 = !DILocation(line: 41, column: 10, scope: !2530)
!2548 = !DILocation(line: 41, column: 3, scope: !2530)
!2549 = distinct !DISubprogram(name: "getchar", scope: !2531, file: !2531, line: 47, type: !2550, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!912}
!2552 = !{}
!2553 = !DILocation(line: 49, column: 16, scope: !2549)
!2554 = !DILocation(line: 49, column: 10, scope: !2549)
!2555 = !DILocation(line: 49, column: 3, scope: !2549)
!2556 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2531, file: !2531, line: 56, type: !2557, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2610)
!2557 = !DISubroutineType(types: !2558)
!2558 = !{!912, !2559}
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2561, line: 7, baseType: !2562)
!2561 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2563, line: 49, size: 1728, elements: !2564)
!2563 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2564 = !{!2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2580, !2582, !2583, !2584, !2587, !2589, !2590, !2591, !2594, !2596, !2599, !2602, !2603, !2604, !2605, !2606}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2562, file: !2563, line: 51, baseType: !912, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2562, file: !2563, line: 54, baseType: !914, size: 64, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2562, file: !2563, line: 55, baseType: !914, size: 64, offset: 128)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2562, file: !2563, line: 56, baseType: !914, size: 64, offset: 192)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2562, file: !2563, line: 57, baseType: !914, size: 64, offset: 256)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2562, file: !2563, line: 58, baseType: !914, size: 64, offset: 320)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2562, file: !2563, line: 59, baseType: !914, size: 64, offset: 384)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2562, file: !2563, line: 60, baseType: !914, size: 64, offset: 448)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2562, file: !2563, line: 61, baseType: !914, size: 64, offset: 512)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2562, file: !2563, line: 64, baseType: !914, size: 64, offset: 576)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2562, file: !2563, line: 65, baseType: !914, size: 64, offset: 640)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2562, file: !2563, line: 66, baseType: !914, size: 64, offset: 704)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2562, file: !2563, line: 68, baseType: !2578, size: 64, offset: 768)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2563, line: 36, flags: DIFlagFwdDecl)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2562, file: !2563, line: 70, baseType: !2581, size: 64, offset: 832)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2562, file: !2563, line: 72, baseType: !912, size: 32, offset: 896)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2562, file: !2563, line: 73, baseType: !912, size: 32, offset: 928)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2562, file: !2563, line: 74, baseType: !2585, size: 64, offset: 960)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2586, line: 152, baseType: !1039)
!2586 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2562, file: !2563, line: 77, baseType: !2588, size: 16, offset: 1024)
!2588 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2562, file: !2563, line: 78, baseType: !2165, size: 8, offset: 1040)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2562, file: !2563, line: 79, baseType: !1081, size: 8, offset: 1048)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2562, file: !2563, line: 81, baseType: !2592, size: 64, offset: 1088)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2563, line: 43, baseType: null)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2562, file: !2563, line: 89, baseType: !2595, size: 64, offset: 1152)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2586, line: 153, baseType: !1039)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2562, file: !2563, line: 91, baseType: !2597, size: 64, offset: 1216)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2563, line: 37, flags: DIFlagFwdDecl)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2562, file: !2563, line: 92, baseType: !2600, size: 64, offset: 1280)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2563, line: 38, flags: DIFlagFwdDecl)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2562, file: !2563, line: 93, baseType: !2581, size: 64, offset: 1344)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2562, file: !2563, line: 94, baseType: !916, size: 64, offset: 1408)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2562, file: !2563, line: 95, baseType: !1550, size: 64, offset: 1472)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2562, file: !2563, line: 96, baseType: !912, size: 32, offset: 1536)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2562, file: !2563, line: 98, baseType: !2607, size: 160, offset: 1568)
!2607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 160, elements: !2608)
!2608 = !{!2609}
!2609 = !DISubrange(count: 20)
!2610 = !{!2611}
!2611 = !DILocalVariable(name: "__fp", arg: 1, scope: !2556, file: !2531, line: 56, type: !2559)
!2612 = !DILocation(line: 0, scope: !2556)
!2613 = !DILocation(line: 58, column: 10, scope: !2556)
!2614 = !DILocation(line: 58, column: 3, scope: !2556)
!2615 = distinct !DISubprogram(name: "getc_unlocked", scope: !2531, file: !2531, line: 66, type: !2557, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2616)
!2616 = !{!2617}
!2617 = !DILocalVariable(name: "__fp", arg: 1, scope: !2615, file: !2531, line: 66, type: !2559)
!2618 = !DILocation(line: 0, scope: !2615)
!2619 = !DILocation(line: 68, column: 10, scope: !2615)
!2620 = !DILocation(line: 68, column: 3, scope: !2615)
!2621 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2531, file: !2531, line: 73, type: !2550, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!2622 = !DILocation(line: 75, column: 10, scope: !2621)
!2623 = !DILocation(line: 75, column: 3, scope: !2621)
!2624 = distinct !DISubprogram(name: "putchar", scope: !2531, file: !2531, line: 82, type: !2625, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2627)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{!912, !912}
!2627 = !{!2628}
!2628 = !DILocalVariable(name: "__c", arg: 1, scope: !2624, file: !2531, line: 82, type: !912)
!2629 = !DILocation(line: 0, scope: !2624)
!2630 = !DILocation(line: 84, column: 21, scope: !2624)
!2631 = !DILocation(line: 84, column: 10, scope: !2624)
!2632 = !DILocation(line: 84, column: 3, scope: !2624)
!2633 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2531, file: !2531, line: 91, type: !2634, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2636)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!912, !912, !2559}
!2636 = !{!2637, !2638}
!2637 = !DILocalVariable(name: "__c", arg: 1, scope: !2633, file: !2531, line: 91, type: !912)
!2638 = !DILocalVariable(name: "__stream", arg: 2, scope: !2633, file: !2531, line: 91, type: !2559)
!2639 = !DILocation(line: 0, scope: !2633)
!2640 = !DILocation(line: 93, column: 10, scope: !2633)
!2641 = !DILocation(line: 93, column: 3, scope: !2633)
!2642 = distinct !DISubprogram(name: "putc_unlocked", scope: !2531, file: !2531, line: 101, type: !2634, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2643)
!2643 = !{!2644, !2645}
!2644 = !DILocalVariable(name: "__c", arg: 1, scope: !2642, file: !2531, line: 101, type: !912)
!2645 = !DILocalVariable(name: "__stream", arg: 2, scope: !2642, file: !2531, line: 101, type: !2559)
!2646 = !DILocation(line: 0, scope: !2642)
!2647 = !DILocation(line: 103, column: 10, scope: !2642)
!2648 = !DILocation(line: 103, column: 3, scope: !2642)
!2649 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2531, file: !2531, line: 108, type: !2625, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2650)
!2650 = !{!2651}
!2651 = !DILocalVariable(name: "__c", arg: 1, scope: !2649, file: !2531, line: 108, type: !912)
!2652 = !DILocation(line: 0, scope: !2649)
!2653 = !DILocation(line: 110, column: 10, scope: !2649)
!2654 = !DILocation(line: 110, column: 3, scope: !2649)
!2655 = distinct !DISubprogram(name: "getline", scope: !2531, file: !2531, line: 118, type: !2656, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2660)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!2658, !913, !2659, !2559}
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2586, line: 193, baseType: !1039)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!2660 = !{!2661, !2662, !2663}
!2661 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2655, file: !2531, line: 118, type: !913)
!2662 = !DILocalVariable(name: "__n", arg: 2, scope: !2655, file: !2531, line: 118, type: !2659)
!2663 = !DILocalVariable(name: "__stream", arg: 3, scope: !2655, file: !2531, line: 118, type: !2559)
!2664 = !DILocation(line: 0, scope: !2655)
!2665 = !DILocation(line: 120, column: 10, scope: !2655)
!2666 = !DILocation(line: 120, column: 3, scope: !2655)
!2667 = distinct !DISubprogram(name: "feof_unlocked", scope: !2531, file: !2531, line: 128, type: !2557, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2668)
!2668 = !{!2669}
!2669 = !DILocalVariable(name: "__stream", arg: 1, scope: !2667, file: !2531, line: 128, type: !2559)
!2670 = !DILocation(line: 0, scope: !2667)
!2671 = !DILocation(line: 130, column: 10, scope: !2667)
!2672 = !DILocation(line: 130, column: 3, scope: !2667)
!2673 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2531, file: !2531, line: 135, type: !2557, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2674)
!2674 = !{!2675}
!2675 = !DILocalVariable(name: "__stream", arg: 1, scope: !2673, file: !2531, line: 135, type: !2559)
!2676 = !DILocation(line: 0, scope: !2673)
!2677 = !DILocation(line: 137, column: 10, scope: !2673)
!2678 = !DILocation(line: 137, column: 3, scope: !2673)
!2679 = distinct !DISubprogram(name: "tolower", scope: !2680, file: !2680, line: 207, type: !2625, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2681)
!2680 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2681 = !{!2682}
!2682 = !DILocalVariable(name: "__c", arg: 1, scope: !2679, file: !2680, line: 207, type: !912)
!2683 = !DILocation(line: 0, scope: !2679)
!2684 = !DILocation(line: 209, column: 22, scope: !2679)
!2685 = !DILocation(line: 209, column: 39, scope: !2679)
!2686 = !DILocation(line: 209, column: 38, scope: !2679)
!2687 = !DILocation(line: 209, column: 37, scope: !2679)
!2688 = !DILocation(line: 209, column: 10, scope: !2679)
!2689 = !DILocation(line: 209, column: 3, scope: !2679)
!2690 = distinct !DISubprogram(name: "toupper", scope: !2680, file: !2680, line: 213, type: !2625, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2691)
!2691 = !{!2692}
!2692 = !DILocalVariable(name: "__c", arg: 1, scope: !2690, file: !2680, line: 213, type: !912)
!2693 = !DILocation(line: 0, scope: !2690)
!2694 = !DILocation(line: 215, column: 22, scope: !2690)
!2695 = !DILocation(line: 215, column: 39, scope: !2690)
!2696 = !DILocation(line: 215, column: 38, scope: !2690)
!2697 = !DILocation(line: 215, column: 37, scope: !2690)
!2698 = !DILocation(line: 215, column: 10, scope: !2690)
!2699 = !DILocation(line: 215, column: 3, scope: !2690)
!2700 = distinct !DISubprogram(name: "atoi", scope: !2701, file: !2701, line: 361, type: !2702, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2704)
!2701 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2702 = !DISubroutineType(types: !2703)
!2703 = !{!912, !917}
!2704 = !{!2705}
!2705 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2700, file: !2701, line: 361, type: !917)
!2706 = !DILocation(line: 0, scope: !2700)
!2707 = !DILocation(line: 363, column: 16, scope: !2700)
!2708 = !DILocation(line: 363, column: 10, scope: !2700)
!2709 = !DILocation(line: 363, column: 3, scope: !2700)
!2710 = distinct !DISubprogram(name: "atol", scope: !2701, file: !2701, line: 366, type: !2711, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2713)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!1039, !917}
!2713 = !{!2714}
!2714 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2710, file: !2701, line: 366, type: !917)
!2715 = !DILocation(line: 0, scope: !2710)
!2716 = !DILocation(line: 368, column: 10, scope: !2710)
!2717 = !DILocation(line: 368, column: 3, scope: !2710)
!2718 = distinct !DISubprogram(name: "atoll", scope: !2701, file: !2701, line: 373, type: !2719, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2722)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!2721, !917}
!2721 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2722 = !{!2723}
!2723 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2718, file: !2701, line: 373, type: !917)
!2724 = !DILocation(line: 0, scope: !2718)
!2725 = !DILocation(line: 375, column: 10, scope: !2718)
!2726 = !DILocation(line: 375, column: 3, scope: !2718)
!2727 = distinct !DISubprogram(name: "bsearch", scope: !2728, file: !2728, line: 20, type: !2729, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2732)
!2728 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!916, !1327, !1327, !1550, !1550, !2731}
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2701, line: 808, baseType: !1539)
!2732 = !{!2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2733 = !DILocalVariable(name: "__key", arg: 1, scope: !2727, file: !2728, line: 20, type: !1327)
!2734 = !DILocalVariable(name: "__base", arg: 2, scope: !2727, file: !2728, line: 20, type: !1327)
!2735 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2727, file: !2728, line: 20, type: !1550)
!2736 = !DILocalVariable(name: "__size", arg: 4, scope: !2727, file: !2728, line: 20, type: !1550)
!2737 = !DILocalVariable(name: "__compar", arg: 5, scope: !2727, file: !2728, line: 21, type: !2731)
!2738 = !DILocalVariable(name: "__l", scope: !2727, file: !2728, line: 23, type: !1550)
!2739 = !DILocalVariable(name: "__u", scope: !2727, file: !2728, line: 23, type: !1550)
!2740 = !DILocalVariable(name: "__idx", scope: !2727, file: !2728, line: 23, type: !1550)
!2741 = !DILocalVariable(name: "__p", scope: !2727, file: !2728, line: 24, type: !1327)
!2742 = !DILocalVariable(name: "__comparison", scope: !2727, file: !2728, line: 25, type: !912)
!2743 = !DILocation(line: 0, scope: !2727)
!2744 = !DILocation(line: 29, column: 3, scope: !2727)
!2745 = !DILocation(line: 27, column: 7, scope: !2727)
!2746 = !DILocation(line: 29, column: 14, scope: !2727)
!2747 = !DILocation(line: 31, column: 20, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2727, file: !2728, line: 30, column: 5)
!2749 = !DILocation(line: 31, column: 27, scope: !2748)
!2750 = !DILocation(line: 32, column: 56, scope: !2748)
!2751 = !DILocation(line: 32, column: 47, scope: !2748)
!2752 = !DILocation(line: 33, column: 22, scope: !2748)
!2753 = !DILocation(line: 34, column: 24, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2748, file: !2728, line: 34, column: 11)
!2755 = !DILocation(line: 34, column: 11, scope: !2748)
!2756 = !DILocation(line: 36, column: 29, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2754, file: !2728, line: 36, column: 16)
!2758 = !DILocation(line: 36, column: 16, scope: !2754)
!2759 = !DILocation(line: 37, column: 14, scope: !2757)
!2760 = distinct !{!2760, !2744, !2761}
!2761 = !DILocation(line: 40, column: 5, scope: !2727)
!2762 = !DILocation(line: 43, column: 1, scope: !2727)
!2763 = distinct !DISubprogram(name: "atof", scope: !2764, file: !2764, line: 25, type: !2765, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2767)
!2764 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!2427, !917}
!2767 = !{!2768}
!2768 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2763, file: !2764, line: 25, type: !917)
!2769 = !DILocation(line: 0, scope: !2763)
!2770 = !DILocation(line: 27, column: 10, scope: !2763)
!2771 = !DILocation(line: 27, column: 3, scope: !2763)
!2772 = distinct !DISubprogram(name: "strtoimax", scope: !2773, file: !2773, line: 324, type: !2774, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2780)
!2773 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!2776, !2534, !2779, !912}
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2777, line: 101, baseType: !2778)
!2777 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2586, line: 72, baseType: !1039)
!2779 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !913)
!2780 = !{!2781, !2782, !2783}
!2781 = !DILocalVariable(name: "nptr", arg: 1, scope: !2772, file: !2773, line: 324, type: !2534)
!2782 = !DILocalVariable(name: "endptr", arg: 2, scope: !2772, file: !2773, line: 324, type: !2779)
!2783 = !DILocalVariable(name: "base", arg: 3, scope: !2772, file: !2773, line: 324, type: !912)
!2784 = !DILocation(line: 0, scope: !2772)
!2785 = !DILocation(line: 327, column: 10, scope: !2772)
!2786 = !DILocation(line: 327, column: 3, scope: !2772)
!2787 = distinct !DISubprogram(name: "strtoumax", scope: !2773, file: !2773, line: 336, type: !2788, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2792)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{!2790, !2534, !2779, !912}
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2777, line: 102, baseType: !2791)
!2791 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2586, line: 73, baseType: !1037)
!2792 = !{!2793, !2794, !2795}
!2793 = !DILocalVariable(name: "nptr", arg: 1, scope: !2787, file: !2773, line: 336, type: !2534)
!2794 = !DILocalVariable(name: "endptr", arg: 2, scope: !2787, file: !2773, line: 336, type: !2779)
!2795 = !DILocalVariable(name: "base", arg: 3, scope: !2787, file: !2773, line: 336, type: !912)
!2796 = !DILocation(line: 0, scope: !2787)
!2797 = !DILocation(line: 339, column: 10, scope: !2787)
!2798 = !DILocation(line: 339, column: 3, scope: !2787)
!2799 = distinct !DISubprogram(name: "wcstoimax", scope: !2773, file: !2773, line: 348, type: !2800, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2809)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!2776, !2802, !2806, !912}
!2802 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2803)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2805)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2773, line: 34, baseType: !912)
!2806 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2807)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2809 = !{!2810, !2811, !2812}
!2810 = !DILocalVariable(name: "nptr", arg: 1, scope: !2799, file: !2773, line: 348, type: !2802)
!2811 = !DILocalVariable(name: "endptr", arg: 2, scope: !2799, file: !2773, line: 348, type: !2806)
!2812 = !DILocalVariable(name: "base", arg: 3, scope: !2799, file: !2773, line: 348, type: !912)
!2813 = !DILocation(line: 0, scope: !2799)
!2814 = !DILocation(line: 351, column: 10, scope: !2799)
!2815 = !DILocation(line: 351, column: 3, scope: !2799)
!2816 = distinct !DISubprogram(name: "wcstoumax", scope: !2773, file: !2773, line: 362, type: !2817, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2819)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!2790, !2802, !2806, !912}
!2819 = !{!2820, !2821, !2822}
!2820 = !DILocalVariable(name: "nptr", arg: 1, scope: !2816, file: !2773, line: 362, type: !2802)
!2821 = !DILocalVariable(name: "endptr", arg: 2, scope: !2816, file: !2773, line: 362, type: !2806)
!2822 = !DILocalVariable(name: "base", arg: 3, scope: !2816, file: !2773, line: 362, type: !912)
!2823 = !DILocation(line: 0, scope: !2816)
!2824 = !DILocation(line: 365, column: 10, scope: !2816)
!2825 = !DILocation(line: 365, column: 3, scope: !2816)
!2826 = distinct !DISubprogram(name: "stat", scope: !2827, file: !2827, line: 453, type: !2828, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2865)
!2827 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2828 = !DISubroutineType(types: !2829)
!2829 = !{!912, !917, !2830}
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2832, line: 46, size: 1152, elements: !2833)
!2832 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2833 = !{!2834, !2836, !2838, !2840, !2842, !2844, !2846, !2847, !2848, !2849, !2851, !2853, !2861, !2862, !2863}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2831, file: !2832, line: 48, baseType: !2835, size: 64)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2586, line: 145, baseType: !1037)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2831, file: !2832, line: 53, baseType: !2837, size: 64, offset: 64)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2586, line: 148, baseType: !1037)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2831, file: !2832, line: 61, baseType: !2839, size: 64, offset: 128)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2586, line: 151, baseType: !1037)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2831, file: !2832, line: 62, baseType: !2841, size: 32, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2586, line: 150, baseType: !7)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2831, file: !2832, line: 64, baseType: !2843, size: 32, offset: 224)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2586, line: 146, baseType: !7)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2831, file: !2832, line: 65, baseType: !2845, size: 32, offset: 256)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2586, line: 147, baseType: !7)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2831, file: !2832, line: 67, baseType: !912, size: 32, offset: 288)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2831, file: !2832, line: 69, baseType: !2835, size: 64, offset: 320)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2831, file: !2832, line: 74, baseType: !2585, size: 64, offset: 384)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2831, file: !2832, line: 78, baseType: !2850, size: 64, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2586, line: 174, baseType: !1039)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2831, file: !2832, line: 80, baseType: !2852, size: 64, offset: 512)
!2852 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2586, line: 179, baseType: !1039)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2831, file: !2832, line: 91, baseType: !2854, size: 128, offset: 576)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2855, line: 10, size: 128, elements: !2856)
!2855 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2856 = !{!2857, !2859}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2854, file: !2855, line: 12, baseType: !2858, size: 64)
!2858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2586, line: 160, baseType: !1039)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2854, file: !2855, line: 16, baseType: !2860, size: 64, offset: 64)
!2860 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2586, line: 196, baseType: !1039)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2831, file: !2832, line: 92, baseType: !2854, size: 128, offset: 704)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2831, file: !2832, line: 93, baseType: !2854, size: 128, offset: 832)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2831, file: !2832, line: 106, baseType: !2864, size: 192, offset: 960)
!2864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2860, size: 192, elements: !1057)
!2865 = !{!2866, !2867}
!2866 = !DILocalVariable(name: "__path", arg: 1, scope: !2826, file: !2827, line: 453, type: !917)
!2867 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2826, file: !2827, line: 453, type: !2830)
!2868 = !DILocation(line: 0, scope: !2826)
!2869 = !DILocation(line: 455, column: 10, scope: !2826)
!2870 = !DILocation(line: 455, column: 3, scope: !2826)
!2871 = distinct !DISubprogram(name: "lstat", scope: !2827, file: !2827, line: 460, type: !2828, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2872)
!2872 = !{!2873, !2874}
!2873 = !DILocalVariable(name: "__path", arg: 1, scope: !2871, file: !2827, line: 460, type: !917)
!2874 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2871, file: !2827, line: 460, type: !2830)
!2875 = !DILocation(line: 0, scope: !2871)
!2876 = !DILocation(line: 462, column: 10, scope: !2871)
!2877 = !DILocation(line: 462, column: 3, scope: !2871)
!2878 = distinct !DISubprogram(name: "fstat", scope: !2827, file: !2827, line: 467, type: !2879, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2881)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!912, !912, !2830}
!2881 = !{!2882, !2883}
!2882 = !DILocalVariable(name: "__fd", arg: 1, scope: !2878, file: !2827, line: 467, type: !912)
!2883 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2878, file: !2827, line: 467, type: !2830)
!2884 = !DILocation(line: 0, scope: !2878)
!2885 = !DILocation(line: 469, column: 10, scope: !2878)
!2886 = !DILocation(line: 469, column: 3, scope: !2878)
!2887 = distinct !DISubprogram(name: "fstatat", scope: !2827, file: !2827, line: 474, type: !2888, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2890)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!912, !912, !917, !2830, !912}
!2890 = !{!2891, !2892, !2893, !2894}
!2891 = !DILocalVariable(name: "__fd", arg: 1, scope: !2887, file: !2827, line: 474, type: !912)
!2892 = !DILocalVariable(name: "__filename", arg: 2, scope: !2887, file: !2827, line: 474, type: !917)
!2893 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2887, file: !2827, line: 474, type: !2830)
!2894 = !DILocalVariable(name: "__flag", arg: 4, scope: !2887, file: !2827, line: 474, type: !912)
!2895 = !DILocation(line: 0, scope: !2887)
!2896 = !DILocation(line: 477, column: 10, scope: !2887)
!2897 = !DILocation(line: 477, column: 3, scope: !2887)
!2898 = distinct !DISubprogram(name: "mknod", scope: !2827, file: !2827, line: 483, type: !2899, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2901)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!912, !917, !2841, !2835}
!2901 = !{!2902, !2903, !2904}
!2902 = !DILocalVariable(name: "__path", arg: 1, scope: !2898, file: !2827, line: 483, type: !917)
!2903 = !DILocalVariable(name: "__mode", arg: 2, scope: !2898, file: !2827, line: 483, type: !2841)
!2904 = !DILocalVariable(name: "__dev", arg: 3, scope: !2898, file: !2827, line: 483, type: !2835)
!2905 = !DILocation(line: 0, scope: !2898)
!2906 = !DILocation(line: 485, column: 10, scope: !2898)
!2907 = !DILocation(line: 485, column: 3, scope: !2898)
!2908 = distinct !DISubprogram(name: "mknodat", scope: !2827, file: !2827, line: 491, type: !2909, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2911)
!2909 = !DISubroutineType(types: !2910)
!2910 = !{!912, !912, !917, !2841, !2835}
!2911 = !{!2912, !2913, !2914, !2915}
!2912 = !DILocalVariable(name: "__fd", arg: 1, scope: !2908, file: !2827, line: 491, type: !912)
!2913 = !DILocalVariable(name: "__path", arg: 2, scope: !2908, file: !2827, line: 491, type: !917)
!2914 = !DILocalVariable(name: "__mode", arg: 3, scope: !2908, file: !2827, line: 491, type: !2841)
!2915 = !DILocalVariable(name: "__dev", arg: 4, scope: !2908, file: !2827, line: 491, type: !2835)
!2916 = !DILocation(line: 0, scope: !2908)
!2917 = !DILocation(line: 494, column: 10, scope: !2908)
!2918 = !DILocation(line: 494, column: 3, scope: !2908)
!2919 = distinct !DISubprogram(name: "stat64", scope: !2827, file: !2827, line: 502, type: !2920, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2942)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!912, !917, !2922}
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2832, line: 119, size: 1152, elements: !2924)
!2924 = !{!2925, !2926, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2938, !2939, !2940, !2941}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2923, file: !2832, line: 121, baseType: !2835, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2923, file: !2832, line: 123, baseType: !2927, size: 64, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2586, line: 149, baseType: !1037)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2923, file: !2832, line: 124, baseType: !2839, size: 64, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2923, file: !2832, line: 125, baseType: !2841, size: 32, offset: 192)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2923, file: !2832, line: 132, baseType: !2843, size: 32, offset: 224)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2923, file: !2832, line: 133, baseType: !2845, size: 32, offset: 256)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2923, file: !2832, line: 135, baseType: !912, size: 32, offset: 288)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2923, file: !2832, line: 136, baseType: !2835, size: 64, offset: 320)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2923, file: !2832, line: 137, baseType: !2585, size: 64, offset: 384)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2923, file: !2832, line: 143, baseType: !2850, size: 64, offset: 448)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2923, file: !2832, line: 144, baseType: !2937, size: 64, offset: 512)
!2937 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2586, line: 180, baseType: !1039)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2923, file: !2832, line: 152, baseType: !2854, size: 128, offset: 576)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2923, file: !2832, line: 153, baseType: !2854, size: 128, offset: 704)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2923, file: !2832, line: 154, baseType: !2854, size: 128, offset: 832)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2923, file: !2832, line: 164, baseType: !2864, size: 192, offset: 960)
!2942 = !{!2943, !2944}
!2943 = !DILocalVariable(name: "__path", arg: 1, scope: !2919, file: !2827, line: 502, type: !917)
!2944 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2919, file: !2827, line: 502, type: !2922)
!2945 = !DILocation(line: 0, scope: !2919)
!2946 = !DILocation(line: 504, column: 10, scope: !2919)
!2947 = !DILocation(line: 504, column: 3, scope: !2919)
!2948 = distinct !DISubprogram(name: "lstat64", scope: !2827, file: !2827, line: 509, type: !2920, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2949)
!2949 = !{!2950, !2951}
!2950 = !DILocalVariable(name: "__path", arg: 1, scope: !2948, file: !2827, line: 509, type: !917)
!2951 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2948, file: !2827, line: 509, type: !2922)
!2952 = !DILocation(line: 0, scope: !2948)
!2953 = !DILocation(line: 511, column: 10, scope: !2948)
!2954 = !DILocation(line: 511, column: 3, scope: !2948)
!2955 = distinct !DISubprogram(name: "fstat64", scope: !2827, file: !2827, line: 516, type: !2956, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2958)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!912, !912, !2922}
!2958 = !{!2959, !2960}
!2959 = !DILocalVariable(name: "__fd", arg: 1, scope: !2955, file: !2827, line: 516, type: !912)
!2960 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2955, file: !2827, line: 516, type: !2922)
!2961 = !DILocation(line: 0, scope: !2955)
!2962 = !DILocation(line: 518, column: 10, scope: !2955)
!2963 = !DILocation(line: 518, column: 3, scope: !2955)
!2964 = distinct !DISubprogram(name: "fstatat64", scope: !2827, file: !2827, line: 523, type: !2965, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2967)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!912, !912, !917, !2922, !912}
!2967 = !{!2968, !2969, !2970, !2971}
!2968 = !DILocalVariable(name: "__fd", arg: 1, scope: !2964, file: !2827, line: 523, type: !912)
!2969 = !DILocalVariable(name: "__filename", arg: 2, scope: !2964, file: !2827, line: 523, type: !917)
!2970 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2964, file: !2827, line: 523, type: !2922)
!2971 = !DILocalVariable(name: "__flag", arg: 4, scope: !2964, file: !2827, line: 523, type: !912)
!2972 = !DILocation(line: 0, scope: !2964)
!2973 = !DILocation(line: 526, column: 10, scope: !2964)
!2974 = !DILocation(line: 526, column: 3, scope: !2964)
!2975 = distinct !DISubprogram(name: "maybe_hot_bb_p", scope: !3, file: !3, line: 148, type: !2976, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2981)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!911, !2978}
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !926, line: 112, baseType: !2979)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!2981 = !{!2982}
!2982 = !DILocalVariable(name: "bb", arg: 1, scope: !2975, file: !3, line: 148, type: !2978)
!2983 = !DILocation(line: 0, scope: !2975)
!2984 = !DILocation(line: 150, column: 7, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 150, column: 7)
!2986 = !DILocation(line: 150, column: 22, scope: !2985)
!2987 = !DILocation(line: 150, column: 7, scope: !2975)
!2988 = !DILocation(line: 151, column: 35, scope: !2985)
!2989 = !DILocation(line: 151, column: 12, scope: !2985)
!2990 = !DILocation(line: 151, column: 5, scope: !2985)
!2991 = !DILocation(line: 152, column: 37, scope: !2975)
!2992 = !DILocation(line: 152, column: 10, scope: !2975)
!2993 = !DILocation(line: 152, column: 3, scope: !2975)
!2994 = !DILocation(line: 153, column: 1, scope: !2975)
!2995 = distinct !DISubprogram(name: "maybe_hot_count_p", scope: !3, file: !3, line: 133, type: !2996, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2998)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!911, !2386}
!2998 = !{!2999}
!2999 = !DILocalVariable(name: "count", arg: 1, scope: !2995, file: !3, line: 133, type: !2386)
!3000 = !DILocation(line: 0, scope: !2995)
!3001 = !DILocation(line: 135, column: 7, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 135, column: 7)
!3003 = !DILocation(line: 135, column: 22, scope: !3002)
!3004 = !DILocation(line: 135, column: 7, scope: !2995)
!3005 = !DILocation(line: 138, column: 7, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 138, column: 7)
!3007 = !DILocation(line: 138, column: 21, scope: !3006)
!3008 = !DILocation(line: 138, column: 26, scope: !3006)
!3009 = !DILocation(line: 138, column: 7, scope: !2995)
!3010 = !DILocation(line: 141, column: 20, scope: !2995)
!3011 = !DILocation(line: 141, column: 30, scope: !2995)
!3012 = !DILocation(line: 141, column: 28, scope: !2995)
!3013 = !DILocation(line: 141, column: 4, scope: !2995)
!3014 = !DILocation(line: 140, column: 10, scope: !2995)
!3015 = !DILocation(line: 140, column: 3, scope: !2995)
!3016 = !DILocation(line: 142, column: 1, scope: !2995)
!3017 = distinct !DISubprogram(name: "maybe_hot_frequency_p", scope: !3, file: !3, line: 114, type: !3018, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3020)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!911, !912}
!3020 = !{!3021}
!3021 = !DILocalVariable(name: "freq", arg: 1, scope: !3017, file: !3, line: 114, type: !912)
!3022 = !DILocation(line: 0, scope: !3017)
!3023 = !DILocation(line: 116, column: 8, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 116, column: 7)
!3025 = !DILocation(line: 116, column: 25, scope: !3024)
!3026 = !DILocation(line: 116, column: 21, scope: !3024)
!3027 = !DILocation(line: 123, column: 7, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 123, column: 7)
!3029 = !DILocation(line: 118, column: 11, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 118, column: 11)
!3031 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 117, column: 5)
!3032 = !DILocation(line: 118, column: 17, scope: !3030)
!3033 = !DILocation(line: 118, column: 36, scope: !3030)
!3034 = !DILocation(line: 118, column: 11, scope: !3031)
!3035 = !DILocation(line: 120, column: 36, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 120, column: 11)
!3037 = !DILocation(line: 120, column: 11, scope: !3031)
!3038 = !DILocation(line: 123, column: 22, scope: !3028)
!3039 = !DILocation(line: 123, column: 7, scope: !3017)
!3040 = !DILocation(line: 125, column: 28, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 125, column: 7)
!3042 = !DILocation(line: 125, column: 26, scope: !3041)
!3043 = !DILocation(line: 125, column: 12, scope: !3041)
!3044 = !DILocation(line: 128, column: 1, scope: !3017)
!3045 = distinct !DISubprogram(name: "cgraph_maybe_hot_edge_p", scope: !3, file: !3, line: 158, type: !3046, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3251)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!911, !3048}
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !581, line: 314, size: 768, elements: !3050)
!3050 = !{!3051, !3052, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3244, !3245, !3246, !3247, !3248, !3249, !3250}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3049, file: !581, line: 316, baseType: !2386, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3049, file: !581, line: 317, baseType: !3053, size: 64, offset: 64)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !581, line: 181, size: 2496, elements: !3055)
!3055 = !{!3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3150, !3172, !3182, !3186, !3212, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3054, file: !581, line: 182, baseType: !984, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !3054, file: !581, line: 183, baseType: !3048, size: 64, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !3054, file: !581, line: 184, baseType: !3048, size: 64, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3054, file: !581, line: 185, baseType: !3053, size: 64, offset: 192)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !3054, file: !581, line: 186, baseType: !3053, size: 64, offset: 256)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !3054, file: !581, line: 188, baseType: !3053, size: 64, offset: 320)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !3054, file: !581, line: 190, baseType: !3053, size: 64, offset: 384)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !3054, file: !581, line: 192, baseType: !3053, size: 64, offset: 448)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !3054, file: !581, line: 194, baseType: !3053, size: 64, offset: 512)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !3054, file: !581, line: 196, baseType: !3053, size: 64, offset: 576)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !3054, file: !581, line: 197, baseType: !3053, size: 64, offset: 640)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !3054, file: !581, line: 198, baseType: !3053, size: 64, offset: 704)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !3054, file: !581, line: 199, baseType: !3053, size: 64, offset: 768)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !3054, file: !581, line: 202, baseType: !3053, size: 64, offset: 832)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !3054, file: !581, line: 204, baseType: !3053, size: 64, offset: 896)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !3054, file: !581, line: 207, baseType: !1526, size: 64, offset: 960)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3054, file: !581, line: 209, baseType: !916, size: 64, offset: 1024)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !3054, file: !581, line: 214, baseType: !3074, size: 64, offset: 1088)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1443, line: 177, baseType: !3076)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1443, line: 177, size: 128, elements: !3077)
!3077 = !{!3078}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3076, file: !1443, line: 177, baseType: !3079, size: 128)
!3079 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1443, line: 176, baseType: !3080)
!3080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1443, line: 176, size: 128, elements: !3081)
!3081 = !{!3082, !3083, !3084}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3080, file: !1443, line: 176, baseType: !7, size: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3080, file: !1443, line: 176, baseType: !7, size: 32, offset: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3080, file: !1443, line: 176, baseType: !3085, size: 64, offset: 64)
!3085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3086, size: 64, elements: !947)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1443, line: 174, baseType: !3087)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !398, line: 173, size: 1152, elements: !3089)
!3089 = !{!3090, !3091, !3093, !3116, !3117, !3121, !3126, !3127, !3131}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !3088, file: !398, line: 175, baseType: !2473, size: 640)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !3088, file: !398, line: 179, baseType: !3092, size: 64, offset: 640)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !3088, file: !398, line: 182, baseType: !3094, size: 64, offset: 704)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{null, !3097}
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !581, line: 276, size: 192, elements: !3099)
!3099 = !{!3100, !3101, !3115}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !3098, file: !581, line: 278, baseType: !1526, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3098, file: !581, line: 279, baseType: !3102, size: 64, offset: 64)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !581, line: 272, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !581, line: 272, size: 128, elements: !3105)
!3105 = !{!3106}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3104, file: !581, line: 272, baseType: !3107, size: 128)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !581, line: 270, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !581, line: 270, size: 128, elements: !3109)
!3109 = !{!3110, !3111, !3112}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3108, file: !581, line: 270, baseType: !7, size: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3108, file: !581, line: 270, baseType: !7, size: 32, offset: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3108, file: !581, line: 270, baseType: !3113, size: 64, offset: 64)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3114, size: 64, elements: !947)
!3114 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !581, line: 268, baseType: !3053)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3098, file: !581, line: 280, baseType: !916, size: 64, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !3088, file: !398, line: 187, baseType: !3092, size: 64, offset: 768)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !3088, file: !398, line: 188, baseType: !3118, size: 64, offset: 832)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{null, !3053}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !3088, file: !398, line: 191, baseType: !3122, size: 64, offset: 896)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DISubroutineType(types: !3124)
!3124 = !{null, !3053, !3125}
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !3088, file: !398, line: 195, baseType: !7, size: 32, offset: 960)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !3088, file: !398, line: 196, baseType: !3128, size: 64, offset: 1024)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!7, !3053}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !3088, file: !398, line: 197, baseType: !3132, size: 64, offset: 1088)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{null, !3135}
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !581, line: 358, size: 320, elements: !3137)
!3137 = !{!3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3136, file: !581, line: 359, baseType: !984, size: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3136, file: !581, line: 361, baseType: !3135, size: 64, offset: 64)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !3136, file: !581, line: 363, baseType: !3135, size: 64, offset: 128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !3136, file: !581, line: 366, baseType: !3135, size: 64, offset: 192)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !3136, file: !581, line: 368, baseType: !912, size: 32, offset: 256)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !3136, file: !581, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !3136, file: !581, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !3136, file: !581, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !3136, file: !581, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3136, file: !581, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !3136, file: !581, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3136, file: !581, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3054, file: !581, line: 216, baseType: !3151, size: 320, offset: 1152)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !581, line: 88, size: 320, elements: !3152)
!3152 = !{!3153, !3156, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !3151, file: !581, line: 90, baseType: !3154, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !581, line: 51, flags: DIFlagFwdDecl)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !3151, file: !581, line: 92, baseType: !3157, size: 192, offset: 64)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !581, line: 57, size: 192, elements: !3158)
!3158 = !{!3159, !3160, !3161, !3162, !3163}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !3157, file: !581, line: 60, baseType: !1039, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !3157, file: !581, line: 63, baseType: !912, size: 32, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !3157, file: !581, line: 65, baseType: !912, size: 32, offset: 96)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !3157, file: !581, line: 67, baseType: !912, size: 32, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !3157, file: !581, line: 69, baseType: !912, size: 32, offset: 160)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3151, file: !581, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !3151, file: !581, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !3151, file: !581, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !3151, file: !581, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !3151, file: !581, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !3151, file: !581, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !3151, file: !581, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !3151, file: !581, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !3054, file: !581, line: 217, baseType: !3173, size: 320, offset: 1472)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !581, line: 126, size: 320, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !3173, file: !581, line: 128, baseType: !1039, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !3173, file: !581, line: 130, baseType: !1039, size: 64, offset: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !3173, file: !581, line: 134, baseType: !3053, size: 64, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3173, file: !581, line: 137, baseType: !912, size: 32, offset: 192)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3173, file: !581, line: 138, baseType: !912, size: 32, offset: 224)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !3173, file: !581, line: 141, baseType: !912, size: 32, offset: 256)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !3173, file: !581, line: 144, baseType: !911, size: 8, offset: 288)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !3054, file: !581, line: 218, baseType: !3183, size: 32, offset: 1792)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !581, line: 150, size: 32, elements: !3184)
!3184 = !{!3185}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !3183, file: !581, line: 151, baseType: !7, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !3054, file: !581, line: 219, baseType: !3187, size: 192, offset: 1856)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !581, line: 171, size: 192, elements: !3188)
!3188 = !{!3189, !3210, !3211}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !3187, file: !581, line: 173, baseType: !3190, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !581, line: 169, baseType: !3192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !581, line: 169, size: 128, elements: !3193)
!3193 = !{!3194}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3192, file: !581, line: 169, baseType: !3195, size: 128)
!3195 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !581, line: 168, baseType: !3196)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !581, line: 168, size: 128, elements: !3197)
!3197 = !{!3198, !3199, !3200}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3196, file: !581, line: 168, baseType: !7, size: 32)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3196, file: !581, line: 168, baseType: !7, size: 32, offset: 32)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3196, file: !581, line: 168, baseType: !3201, size: 64, offset: 64)
!3201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3202, size: 64, elements: !947)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !581, line: 167, baseType: !3203)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !581, line: 156, size: 192, elements: !3205)
!3205 = !{!3206, !3207, !3208, !3209}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !3204, file: !581, line: 159, baseType: !984, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !3204, file: !581, line: 161, baseType: !984, size: 64, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !3204, file: !581, line: 163, baseType: !911, size: 8, offset: 128)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !3204, file: !581, line: 165, baseType: !911, size: 8, offset: 136)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !3187, file: !581, line: 174, baseType: !1881, size: 64, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !3187, file: !581, line: 175, baseType: !1881, size: 64, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !3054, file: !581, line: 220, baseType: !3213, size: 256, offset: 2048)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !581, line: 74, size: 256, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218, !3219, !3220}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !3213, file: !581, line: 76, baseType: !1039, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !3213, file: !581, line: 77, baseType: !1039, size: 64, offset: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3213, file: !581, line: 78, baseType: !984, size: 64, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !3213, file: !581, line: 79, baseType: !911, size: 8, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !3213, file: !581, line: 80, baseType: !911, size: 8, offset: 200)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !3213, file: !581, line: 82, baseType: !911, size: 8, offset: 208)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3054, file: !581, line: 223, baseType: !2386, size: 64, offset: 2304)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3054, file: !581, line: 225, baseType: !912, size: 32, offset: 2368)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !3054, file: !581, line: 227, baseType: !912, size: 32, offset: 2400)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3054, file: !581, line: 231, baseType: !912, size: 32, offset: 2432)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !3054, file: !581, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !3054, file: !581, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !3054, file: !581, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !3054, file: !581, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !3054, file: !581, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !3054, file: !581, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !3054, file: !581, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3054, file: !581, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !3054, file: !581, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !3054, file: !581, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !3049, file: !581, line: 318, baseType: !3053, size: 64, offset: 128)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !3049, file: !581, line: 319, baseType: !3048, size: 64, offset: 192)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !3049, file: !581, line: 320, baseType: !3048, size: 64, offset: 256)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !3049, file: !581, line: 321, baseType: !3048, size: 64, offset: 320)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !3049, file: !581, line: 322, baseType: !3048, size: 64, offset: 384)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !3049, file: !581, line: 323, baseType: !1648, size: 64, offset: 448)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3049, file: !581, line: 324, baseType: !916, size: 64, offset: 512)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !3049, file: !581, line: 327, baseType: !3243, size: 32, offset: 576)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !581, line: 312, baseType: !580)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !3049, file: !581, line: 330, baseType: !7, size: 32, offset: 608)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !3049, file: !581, line: 334, baseType: !912, size: 32, offset: 640)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3049, file: !581, line: 336, baseType: !912, size: 32, offset: 672)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !3049, file: !581, line: 338, baseType: !2588, size: 16, offset: 704)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !3049, file: !581, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !3049, file: !581, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !3049, file: !581, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!3251 = !{!3252}
!3252 = !DILocalVariable(name: "edge", arg: 1, scope: !3045, file: !3, line: 158, type: !3048)
!3253 = !DILocation(line: 0, scope: !3045)
!3254 = !DILocation(line: 160, column: 7, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 160, column: 7)
!3256 = !DILocation(line: 160, column: 23, scope: !3255)
!3257 = !DILocation(line: 160, column: 20, scope: !3255)
!3258 = !DILocation(line: 161, column: 17, scope: !3255)
!3259 = !DILocation(line: 162, column: 21, scope: !3255)
!3260 = !DILocation(line: 162, column: 31, scope: !3255)
!3261 = !DILocation(line: 162, column: 29, scope: !3255)
!3262 = !DILocation(line: 162, column: 4, scope: !3255)
!3263 = !DILocation(line: 160, column: 7, scope: !3045)
!3264 = !DILocation(line: 164, column: 33, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 164, column: 7)
!3266 = !DILocation(line: 164, column: 7, scope: !3265)
!3267 = !DILocation(line: 165, column: 7, scope: !3265)
!3268 = !DILocation(line: 165, column: 36, scope: !3265)
!3269 = !DILocation(line: 165, column: 10, scope: !3265)
!3270 = !DILocation(line: 164, column: 7, scope: !3045)
!3271 = !DILocation(line: 167, column: 32, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 167, column: 7)
!3273 = !DILocation(line: 167, column: 7, scope: !3272)
!3274 = !DILocation(line: 167, column: 7, scope: !3045)
!3275 = !DILocation(line: 169, column: 7, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 169, column: 7)
!3277 = !DILocation(line: 170, column: 7, scope: !3276)
!3278 = !DILocation(line: 170, column: 16, scope: !3276)
!3279 = !DILocation(line: 171, column: 17, scope: !3276)
!3280 = !DILocation(line: 171, column: 15, scope: !3276)
!3281 = !DILocation(line: 170, column: 26, scope: !3276)
!3282 = !DILocation(line: 169, column: 7, scope: !3045)
!3283 = !DILocation(line: 173, column: 3, scope: !3045)
!3284 = !DILocation(line: 174, column: 1, scope: !3045)
!3285 = distinct !DISubprogram(name: "maybe_hot_edge_p", scope: !3, file: !3, line: 180, type: !3286, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3288)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!911, !925}
!3288 = !{!3289}
!3289 = !DILocalVariable(name: "e", arg: 1, scope: !3285, file: !3, line: 180, type: !925)
!3290 = !DILocation(line: 0, scope: !3285)
!3291 = !DILocation(line: 182, column: 7, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 182, column: 7)
!3293 = !DILocation(line: 182, column: 22, scope: !3292)
!3294 = !DILocation(line: 182, column: 7, scope: !3285)
!3295 = !DILocation(line: 183, column: 34, scope: !3292)
!3296 = !DILocation(line: 183, column: 12, scope: !3292)
!3297 = !DILocation(line: 183, column: 5, scope: !3292)
!3298 = !DILocation(line: 184, column: 33, scope: !3285)
!3299 = !DILocation(line: 184, column: 10, scope: !3285)
!3300 = !DILocation(line: 184, column: 3, scope: !3285)
!3301 = !DILocation(line: 185, column: 1, scope: !3285)
!3302 = distinct !DISubprogram(name: "probably_never_executed_bb_p", scope: !3, file: !3, line: 189, type: !2976, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3303)
!3303 = !{!3304}
!3304 = !DILocalVariable(name: "bb", arg: 1, scope: !3302, file: !3, line: 189, type: !2978)
!3305 = !DILocation(line: 0, scope: !3302)
!3306 = !DILocation(line: 191, column: 7, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 191, column: 7)
!3308 = !DILocation(line: 191, column: 23, scope: !3307)
!3309 = !DILocation(line: 191, column: 20, scope: !3307)
!3310 = !DILocation(line: 192, column: 18, scope: !3307)
!3311 = !DILocation(line: 192, column: 40, scope: !3307)
!3312 = !DILocation(line: 192, column: 45, scope: !3307)
!3313 = !DILocation(line: 192, column: 26, scope: !3307)
!3314 = !DILocation(line: 192, column: 24, scope: !3307)
!3315 = !DILocation(line: 192, column: 52, scope: !3307)
!3316 = !DILocation(line: 192, column: 50, scope: !3307)
!3317 = !DILocation(line: 192, column: 72, scope: !3307)
!3318 = !DILocation(line: 192, column: 12, scope: !3307)
!3319 = !DILocation(line: 192, column: 5, scope: !3307)
!3320 = !DILocation(line: 193, column: 22, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 193, column: 7)
!3322 = !DILocation(line: 194, column: 10, scope: !3321)
!3323 = !DILocation(line: 194, column: 16, scope: !3321)
!3324 = !DILocation(line: 194, column: 35, scope: !3321)
!3325 = !DILocation(line: 193, column: 7, scope: !3302)
!3326 = !DILocation(line: 196, column: 3, scope: !3302)
!3327 = !DILocation(line: 197, column: 1, scope: !3302)
!3328 = distinct !DISubprogram(name: "optimize_function_for_size_p", scope: !3, file: !3, line: 202, type: !3329, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3331)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!911, !1441}
!3331 = !{!3332}
!3332 = !DILocalVariable(name: "fun", arg: 1, scope: !3328, file: !3, line: 202, type: !1441)
!3333 = !DILocation(line: 0, scope: !3328)
!3334 = !DILocation(line: 204, column: 11, scope: !3328)
!3335 = !DILocation(line: 205, column: 4, scope: !3328)
!3336 = !DILocation(line: 205, column: 8, scope: !3328)
!3337 = !DILocation(line: 205, column: 12, scope: !3328)
!3338 = !DILocation(line: 205, column: 21, scope: !3328)
!3339 = !DILocation(line: 206, column: 9, scope: !3328)
!3340 = !DILocation(line: 204, column: 3, scope: !3328)
!3341 = distinct !DISubprogram(name: "optimize_function_for_speed_p", scope: !3, file: !3, line: 212, type: !3329, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3342)
!3342 = !{!3343}
!3343 = !DILocalVariable(name: "fun", arg: 1, scope: !3341, file: !3, line: 212, type: !1441)
!3344 = !DILocation(line: 0, scope: !3341)
!3345 = !DILocation(line: 214, column: 11, scope: !3341)
!3346 = !DILocation(line: 214, column: 10, scope: !3341)
!3347 = !DILocation(line: 214, column: 3, scope: !3341)
!3348 = distinct !DISubprogram(name: "optimize_bb_for_size_p", scope: !3, file: !3, line: 220, type: !2976, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3349)
!3349 = !{!3350}
!3350 = !DILocalVariable(name: "bb", arg: 1, scope: !3348, file: !3, line: 220, type: !2978)
!3351 = !DILocation(line: 0, scope: !3348)
!3352 = !DILocation(line: 222, column: 40, scope: !3348)
!3353 = !DILocation(line: 222, column: 10, scope: !3348)
!3354 = !DILocation(line: 222, column: 46, scope: !3348)
!3355 = !DILocation(line: 222, column: 50, scope: !3348)
!3356 = !DILocation(line: 222, column: 49, scope: !3348)
!3357 = !DILocation(line: 222, column: 3, scope: !3348)
!3358 = distinct !DISubprogram(name: "optimize_bb_for_speed_p", scope: !3, file: !3, line: 228, type: !2976, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3359)
!3359 = !{!3360}
!3360 = !DILocalVariable(name: "bb", arg: 1, scope: !3358, file: !3, line: 228, type: !2978)
!3361 = !DILocation(line: 0, scope: !3358)
!3362 = !DILocation(line: 230, column: 11, scope: !3358)
!3363 = !DILocation(line: 230, column: 10, scope: !3358)
!3364 = !DILocation(line: 230, column: 3, scope: !3358)
!3365 = distinct !DISubprogram(name: "optimize_edge_for_size_p", scope: !3, file: !3, line: 236, type: !3286, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3366)
!3366 = !{!3367}
!3367 = !DILocalVariable(name: "e", arg: 1, scope: !3365, file: !3, line: 236, type: !925)
!3368 = !DILocation(line: 0, scope: !3365)
!3369 = !DILocation(line: 238, column: 40, scope: !3365)
!3370 = !DILocation(line: 238, column: 10, scope: !3365)
!3371 = !DILocation(line: 238, column: 46, scope: !3365)
!3372 = !DILocation(line: 238, column: 50, scope: !3365)
!3373 = !DILocation(line: 238, column: 49, scope: !3365)
!3374 = !DILocation(line: 238, column: 3, scope: !3365)
!3375 = distinct !DISubprogram(name: "optimize_edge_for_speed_p", scope: !3, file: !3, line: 244, type: !3286, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3376)
!3376 = !{!3377}
!3377 = !DILocalVariable(name: "e", arg: 1, scope: !3375, file: !3, line: 244, type: !925)
!3378 = !DILocation(line: 0, scope: !3375)
!3379 = !DILocation(line: 246, column: 11, scope: !3375)
!3380 = !DILocation(line: 246, column: 10, scope: !3375)
!3381 = !DILocation(line: 246, column: 3, scope: !3375)
!3382 = distinct !DISubprogram(name: "optimize_insn_for_size_p", scope: !3, file: !3, line: 252, type: !2479, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!3383 = !DILocation(line: 254, column: 40, scope: !3382)
!3384 = !DILocation(line: 254, column: 10, scope: !3382)
!3385 = !DILocation(line: 254, column: 46, scope: !3382)
!3386 = !DILocation(line: 254, column: 56, scope: !3382)
!3387 = !DILocation(line: 254, column: 49, scope: !3382)
!3388 = !DILocation(line: 254, column: 3, scope: !3382)
!3389 = distinct !DISubprogram(name: "optimize_insn_for_speed_p", scope: !3, file: !3, line: 260, type: !2479, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!3390 = !DILocation(line: 262, column: 11, scope: !3389)
!3391 = !DILocation(line: 262, column: 10, scope: !3389)
!3392 = !DILocation(line: 262, column: 3, scope: !3389)
!3393 = distinct !DISubprogram(name: "optimize_loop_for_size_p", scope: !3, file: !3, line: 268, type: !3394, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3396)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!911, !952}
!3396 = !{!3397}
!3397 = !DILocalVariable(name: "loop", arg: 1, scope: !3393, file: !3, line: 268, type: !952)
!3398 = !DILocation(line: 0, scope: !3393)
!3399 = !DILocation(line: 270, column: 40, scope: !3393)
!3400 = !DILocation(line: 270, column: 10, scope: !3393)
!3401 = !DILocation(line: 270, column: 3, scope: !3393)
!3402 = distinct !DISubprogram(name: "optimize_loop_for_speed_p", scope: !3, file: !3, line: 276, type: !3394, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3403)
!3403 = !{!3404}
!3404 = !DILocalVariable(name: "loop", arg: 1, scope: !3402, file: !3, line: 276, type: !952)
!3405 = !DILocation(line: 0, scope: !3402)
!3406 = !DILocation(line: 278, column: 41, scope: !3402)
!3407 = !DILocation(line: 278, column: 10, scope: !3402)
!3408 = !DILocation(line: 278, column: 3, scope: !3402)
!3409 = distinct !DISubprogram(name: "optimize_loop_nest_for_speed_p", scope: !3, file: !3, line: 284, type: !3394, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3410)
!3410 = !{!3411, !3412}
!3411 = !DILocalVariable(name: "loop", arg: 1, scope: !3409, file: !3, line: 284, type: !952)
!3412 = !DILocalVariable(name: "l", scope: !3409, file: !3, line: 286, type: !952)
!3413 = !DILocation(line: 0, scope: !3409)
!3414 = !DILocation(line: 287, column: 7, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 287, column: 7)
!3416 = !DILocation(line: 287, column: 7, scope: !3409)
!3417 = !DILocation(line: 289, column: 13, scope: !3409)
!3418 = !DILocation(line: 290, column: 3, scope: !3409)
!3419 = !DILocation(line: 290, column: 10, scope: !3409)
!3420 = !DILocation(line: 290, column: 17, scope: !3409)
!3421 = !DILocation(line: 290, column: 12, scope: !3409)
!3422 = !DILocation(line: 292, column: 11, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 292, column: 11)
!3424 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 291, column: 5)
!3425 = !DILocation(line: 292, column: 11, scope: !3424)
!3426 = !DILocation(line: 294, column: 14, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 294, column: 11)
!3428 = !DILocation(line: 294, column: 11, scope: !3427)
!3429 = !DILocation(line: 294, column: 11, scope: !3424)
!3430 = !DILocation(line: 295, column: 9, scope: !3427)
!3431 = !DILocation(line: 296, column: 19, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 296, column: 16)
!3433 = !DILocation(line: 296, column: 16, scope: !3432)
!3434 = !DILocation(line: 296, column: 16, scope: !3427)
!3435 = !DILocation(line: 300, column: 4, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 299, column: 9)
!3437 = !DILocation(line: 297, column: 9, scope: !3432)
!3438 = !DILocation(line: 300, column: 13, scope: !3436)
!3439 = !DILocation(line: 300, column: 21, scope: !3436)
!3440 = !DILocation(line: 300, column: 28, scope: !3436)
!3441 = !DILocation(line: 300, column: 24, scope: !3436)
!3442 = !DILocation(line: 301, column: 10, scope: !3436)
!3443 = distinct !{!3443, !3435, !3444}
!3444 = !DILocation(line: 301, column: 23, scope: !3436)
!3445 = !DILocation(line: 302, column: 8, scope: !3436)
!3446 = !DILocation(line: 303, column: 13, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 302, column: 8)
!3448 = !DILocation(line: 303, column: 6, scope: !3447)
!3449 = !DILocation(line: 0, scope: !3427)
!3450 = distinct !{!3450, !3418, !3451}
!3451 = !DILocation(line: 305, column: 5, scope: !3409)
!3452 = !DILocation(line: 307, column: 1, scope: !3409)
!3453 = distinct !DISubprogram(name: "loop_outer", scope: !153, file: !153, line: 434, type: !3454, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3458)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!952, !3456}
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!3458 = !{!3459, !3460}
!3459 = !DILocalVariable(name: "loop", arg: 1, scope: !3453, file: !153, line: 434, type: !3456)
!3460 = !DILocalVariable(name: "n", scope: !3453, file: !153, line: 436, type: !7)
!3461 = !DILocation(line: 0, scope: !3453)
!3462 = !DILocation(line: 436, column: 16, scope: !3453)
!3463 = !DILocation(line: 438, column: 9, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3453, file: !153, line: 438, column: 7)
!3465 = !DILocation(line: 438, column: 7, scope: !3453)
!3466 = !DILocation(line: 441, column: 10, scope: !3453)
!3467 = !DILocation(line: 441, column: 3, scope: !3453)
!3468 = !DILocation(line: 442, column: 1, scope: !3453)
!3469 = distinct !DISubprogram(name: "optimize_loop_nest_for_size_p", scope: !3, file: !3, line: 312, type: !3394, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3470)
!3470 = !{!3471}
!3471 = !DILocalVariable(name: "loop", arg: 1, scope: !3469, file: !3, line: 312, type: !952)
!3472 = !DILocation(line: 0, scope: !3469)
!3473 = !DILocation(line: 314, column: 11, scope: !3469)
!3474 = !DILocation(line: 314, column: 10, scope: !3469)
!3475 = !DILocation(line: 314, column: 3, scope: !3469)
!3476 = distinct !DISubprogram(name: "predictable_edge_p", scope: !3, file: !3, line: 321, type: !3286, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3477)
!3477 = !{!3478}
!3478 = !DILocalVariable(name: "e", arg: 1, scope: !3476, file: !3, line: 321, type: !925)
!3479 = !DILocation(line: 0, scope: !3476)
!3480 = !DILocation(line: 323, column: 7, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 323, column: 7)
!3482 = !DILocation(line: 323, column: 22, scope: !3481)
!3483 = !DILocation(line: 323, column: 7, scope: !3476)
!3484 = !DILocation(line: 325, column: 11, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 325, column: 7)
!3486 = !DILocation(line: 326, column: 11, scope: !3485)
!3487 = !DILocation(line: 326, column: 77, scope: !3485)
!3488 = !DILocation(line: 326, column: 8, scope: !3485)
!3489 = !DILocation(line: 327, column: 7, scope: !3485)
!3490 = !DILocation(line: 327, column: 28, scope: !3485)
!3491 = !DILocation(line: 328, column: 11, scope: !3485)
!3492 = !DILocation(line: 325, column: 7, scope: !3476)
!3493 = !DILocation(line: 331, column: 1, scope: !3476)
!3494 = distinct !DISubprogram(name: "rtl_profile_for_bb", scope: !3, file: !3, line: 337, type: !3495, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3497)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{null, !1612}
!3497 = !{!3498}
!3498 = !DILocalVariable(name: "bb", arg: 1, scope: !3494, file: !3, line: 337, type: !1612)
!3499 = !DILocation(line: 0, scope: !3494)
!3500 = !DILocation(line: 339, column: 28, scope: !3494)
!3501 = !DILocation(line: 339, column: 26, scope: !3494)
!3502 = !DILocation(line: 340, column: 1, scope: !3494)
!3503 = distinct !DISubprogram(name: "rtl_profile_for_edge", scope: !3, file: !3, line: 345, type: !3504, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{null, !925}
!3506 = !{!3507}
!3507 = !DILocalVariable(name: "e", arg: 1, scope: !3503, file: !3, line: 345, type: !925)
!3508 = !DILocation(line: 0, scope: !3503)
!3509 = !DILocation(line: 347, column: 28, scope: !3503)
!3510 = !DILocation(line: 347, column: 26, scope: !3503)
!3511 = !DILocation(line: 348, column: 1, scope: !3503)
!3512 = distinct !DISubprogram(name: "default_rtl_profile", scope: !3, file: !3, line: 352, type: !2446, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!3513 = !DILocation(line: 354, column: 26, scope: !3512)
!3514 = !DILocation(line: 355, column: 1, scope: !3512)
!3515 = distinct !DISubprogram(name: "rtl_predicted_by_p", scope: !3, file: !3, line: 361, type: !3516, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3518)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!911, !2978, !603}
!3518 = !{!3519, !3520, !3521}
!3519 = !DILocalVariable(name: "bb", arg: 1, scope: !3515, file: !3, line: 361, type: !2978)
!3520 = !DILocalVariable(name: "predictor", arg: 2, scope: !3515, file: !3, line: 361, type: !603)
!3521 = !DILocalVariable(name: "note", scope: !3515, file: !3, line: 363, type: !1156)
!3522 = !DILocation(line: 0, scope: !3515)
!3523 = !DILocation(line: 364, column: 8, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 364, column: 7)
!3525 = !DILocation(line: 364, column: 7, scope: !3515)
!3526 = !DILocation(line: 366, column: 15, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 366, column: 3)
!3528 = !DILocation(line: 0, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 367, column: 9)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 366, column: 3)
!3531 = !DILocation(line: 366, column: 8, scope: !3527)
!3532 = !DILocation(line: 0, scope: !3527)
!3533 = !DILocation(line: 366, column: 3, scope: !3527)
!3534 = !DILocation(line: 367, column: 9, scope: !3529)
!3535 = !DILocation(line: 367, column: 30, scope: !3529)
!3536 = !DILocation(line: 368, column: 2, scope: !3529)
!3537 = !DILocation(line: 368, column: 5, scope: !3529)
!3538 = !DILocation(line: 368, column: 39, scope: !3529)
!3539 = !DILocation(line: 367, column: 9, scope: !3530)
!3540 = !DILocation(line: 366, column: 53, scope: !3530)
!3541 = !DILocation(line: 366, column: 3, scope: !3530)
!3542 = distinct !{!3542, !3533, !3543}
!3543 = !DILocation(line: 369, column: 14, scope: !3527)
!3544 = !DILocation(line: 371, column: 1, scope: !3515)
!3545 = distinct !DISubprogram(name: "gimple_predicted_by_p", scope: !3, file: !3, line: 382, type: !3516, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3546)
!3546 = !{!3547, !3548, !3549, !3550}
!3547 = !DILocalVariable(name: "bb", arg: 1, scope: !3545, file: !3, line: 382, type: !2978)
!3548 = !DILocalVariable(name: "predictor", arg: 2, scope: !3545, file: !3, line: 382, type: !603)
!3549 = !DILocalVariable(name: "i", scope: !3545, file: !3, line: 384, type: !919)
!3550 = !DILocalVariable(name: "preds", scope: !3545, file: !3, line: 385, type: !1548)
!3551 = !DILocation(line: 0, scope: !3545)
!3552 = !DILocation(line: 385, column: 40, scope: !3545)
!3553 = !DILocation(line: 385, column: 56, scope: !3545)
!3554 = !DILocation(line: 385, column: 18, scope: !3545)
!3555 = !DILocation(line: 387, column: 8, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3545, file: !3, line: 387, column: 7)
!3557 = !DILocation(line: 387, column: 7, scope: !3545)
!3558 = !DILocation(line: 390, column: 39, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3545, file: !3, line: 390, column: 3)
!3560 = !DILocation(line: 390, column: 8, scope: !3559)
!3561 = !DILocation(line: 0, scope: !3559)
!3562 = !DILocation(line: 390, column: 3, scope: !3559)
!3563 = !DILocation(line: 391, column: 12, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !3, line: 391, column: 9)
!3565 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 390, column: 3)
!3566 = !DILocation(line: 391, column: 25, scope: !3564)
!3567 = !DILocation(line: 391, column: 9, scope: !3565)
!3568 = !DILocation(line: 390, column: 57, scope: !3565)
!3569 = !DILocation(line: 390, column: 3, scope: !3565)
!3570 = distinct !{!3570, !3562, !3571}
!3571 = !DILocation(line: 392, column: 14, scope: !3559)
!3572 = !DILocation(line: 394, column: 1, scope: !3545)
!3573 = distinct !DISubprogram(name: "edge_probability_reliable_p", scope: !3, file: !3, line: 422, type: !3574, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3579)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!911, !3576}
!3576 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_edge", file: !926, line: 109, baseType: !3577)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!3579 = !{!3580}
!3580 = !DILocalVariable(name: "e", arg: 1, scope: !3573, file: !3, line: 422, type: !3576)
!3581 = !DILocation(line: 0, scope: !3573)
!3582 = !DILocation(line: 424, column: 37, scope: !3573)
!3583 = !DILocation(line: 424, column: 10, scope: !3573)
!3584 = !DILocation(line: 424, column: 3, scope: !3573)
!3585 = distinct !DISubprogram(name: "probability_reliable_p", scope: !3, file: !3, line: 413, type: !3018, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3586)
!3586 = !{!3587}
!3587 = !DILocalVariable(name: "prob", arg: 1, scope: !3585, file: !3, line: 413, type: !912)
!3588 = !DILocation(line: 0, scope: !3585)
!3589 = !DILocation(line: 415, column: 11, scope: !3585)
!3590 = !DILocation(line: 415, column: 26, scope: !3585)
!3591 = !DILocation(line: 416, column: 4, scope: !3585)
!3592 = !DILocation(line: 416, column: 23, scope: !3585)
!3593 = !DILocation(line: 417, column: 8, scope: !3585)
!3594 = !DILocation(line: 417, column: 32, scope: !3585)
!3595 = !DILocation(line: 415, column: 3, scope: !3585)
!3596 = distinct !DISubprogram(name: "br_prob_note_reliable_p", scope: !3, file: !3, line: 429, type: !3597, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3602)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!911, !3599}
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !926, line: 51, baseType: !3600)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!3602 = !{!3603}
!3603 = !DILocalVariable(name: "note", arg: 1, scope: !3596, file: !3, line: 429, type: !3599)
!3604 = !DILocation(line: 0, scope: !3596)
!3605 = !DILocation(line: 431, column: 3, scope: !3596)
!3606 = !DILocation(line: 432, column: 34, scope: !3596)
!3607 = !DILocation(line: 432, column: 10, scope: !3596)
!3608 = !DILocation(line: 432, column: 3, scope: !3596)
!3609 = distinct !DISubprogram(name: "predict_insn_def", scope: !3, file: !3, line: 451, type: !3610, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3612)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{null, !1156, !603, !812}
!3612 = !{!3613, !3614, !3615, !3616}
!3613 = !DILocalVariable(name: "insn", arg: 1, scope: !3609, file: !3, line: 451, type: !1156)
!3614 = !DILocalVariable(name: "predictor", arg: 2, scope: !3609, file: !3, line: 451, type: !603)
!3615 = !DILocalVariable(name: "taken", arg: 3, scope: !3609, file: !3, line: 452, type: !812)
!3616 = !DILocalVariable(name: "probability", scope: !3609, file: !3, line: 454, type: !912)
!3617 = !DILocation(line: 0, scope: !3609)
!3618 = !DILocation(line: 454, column: 22, scope: !3609)
!3619 = !DILocation(line: 454, column: 54, scope: !3609)
!3620 = !DILocation(line: 456, column: 14, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 456, column: 8)
!3622 = !DILocation(line: 457, column: 37, scope: !3621)
!3623 = !DILocation(line: 456, column: 8, scope: !3609)
!3624 = !DILocation(line: 459, column: 4, scope: !3609)
!3625 = !DILocation(line: 460, column: 1, scope: !3609)
!3626 = distinct !DISubprogram(name: "predict_insn", scope: !3, file: !3, line: 436, type: !3627, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3629)
!3627 = !DISubroutineType(types: !3628)
!3628 = !{null, !1156, !603, !912}
!3629 = !{!3630, !3631, !3632}
!3630 = !DILocalVariable(name: "insn", arg: 1, scope: !3626, file: !3, line: 436, type: !1156)
!3631 = !DILocalVariable(name: "predictor", arg: 2, scope: !3626, file: !3, line: 436, type: !603)
!3632 = !DILocalVariable(name: "probability", arg: 3, scope: !3626, file: !3, line: 436, type: !912)
!3633 = !DILocation(line: 0, scope: !3626)
!3634 = !DILocation(line: 438, column: 3, scope: !3626)
!3635 = !DILocation(line: 439, column: 8, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 439, column: 7)
!3637 = !DILocation(line: 439, column: 7, scope: !3626)
!3638 = !DILocation(line: 443, column: 3, scope: !3626)
!3639 = !DILocation(line: 442, column: 3, scope: !3626)
!3640 = !DILocation(line: 446, column: 1, scope: !3626)
!3641 = distinct !DISubprogram(name: "rtl_predict_edge", scope: !3, file: !3, line: 465, type: !3642, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3644)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{null, !925, !603, !912}
!3644 = !{!3645, !3646, !3647, !3648}
!3645 = !DILocalVariable(name: "e", arg: 1, scope: !3641, file: !3, line: 465, type: !925)
!3646 = !DILocalVariable(name: "predictor", arg: 2, scope: !3641, file: !3, line: 465, type: !603)
!3647 = !DILocalVariable(name: "probability", arg: 3, scope: !3641, file: !3, line: 465, type: !912)
!3648 = !DILocalVariable(name: "last_insn", scope: !3641, file: !3, line: 467, type: !1156)
!3649 = !DILocation(line: 0, scope: !3641)
!3650 = !DILocation(line: 468, column: 15, scope: !3641)
!3651 = !DILocation(line: 472, column: 8, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 472, column: 7)
!3653 = !DILocation(line: 472, column: 7, scope: !3641)
!3654 = !DILocation(line: 476, column: 10, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 476, column: 7)
!3656 = !DILocation(line: 476, column: 16, scope: !3655)
!3657 = !DILocation(line: 477, column: 36, scope: !3655)
!3658 = !DILocation(line: 476, column: 7, scope: !3641)
!3659 = !DILocation(line: 479, column: 3, scope: !3641)
!3660 = !DILocation(line: 480, column: 1, scope: !3641)
!3661 = distinct !DISubprogram(name: "gimple_predict_edge", scope: !3, file: !3, line: 484, type: !3642, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3662)
!3662 = !{!3663, !3664, !3665, !3666, !3669}
!3663 = !DILocalVariable(name: "e", arg: 1, scope: !3661, file: !3, line: 484, type: !925)
!3664 = !DILocalVariable(name: "predictor", arg: 2, scope: !3661, file: !3, line: 484, type: !603)
!3665 = !DILocalVariable(name: "probability", arg: 3, scope: !3661, file: !3, line: 484, type: !912)
!3666 = !DILocalVariable(name: "i", scope: !3667, file: !3, line: 490, type: !919)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 489, column: 5)
!3668 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 487, column: 7)
!3669 = !DILocalVariable(name: "preds", scope: !3667, file: !3, line: 491, type: !1548)
!3670 = !DILocation(line: 0, scope: !3661)
!3671 = !DILocation(line: 486, column: 3, scope: !3661)
!3672 = !DILocation(line: 487, column: 18, scope: !3668)
!3673 = !DILocation(line: 0, scope: !3668)
!3674 = !DILocation(line: 487, column: 11, scope: !3668)
!3675 = !DILocation(line: 487, column: 15, scope: !3668)
!3676 = !DILocation(line: 487, column: 34, scope: !3668)
!3677 = !DILocation(line: 487, column: 37, scope: !3668)
!3678 = !DILocation(line: 487, column: 64, scope: !3668)
!3679 = !DILocation(line: 488, column: 10, scope: !3668)
!3680 = !DILocation(line: 488, column: 7, scope: !3668)
!3681 = !DILocation(line: 488, column: 36, scope: !3668)
!3682 = !DILocation(line: 490, column: 35, scope: !3667)
!3683 = !DILocation(line: 0, scope: !3667)
!3684 = !DILocation(line: 491, column: 42, scope: !3667)
!3685 = !DILocation(line: 491, column: 61, scope: !3667)
!3686 = !DILocation(line: 491, column: 22, scope: !3667)
!3687 = !DILocation(line: 493, column: 47, scope: !3667)
!3688 = !DILocation(line: 493, column: 18, scope: !3667)
!3689 = !DILocation(line: 494, column: 14, scope: !3667)
!3690 = !DILocation(line: 495, column: 10, scope: !3667)
!3691 = !DILocation(line: 495, column: 25, scope: !3667)
!3692 = !DILocation(line: 496, column: 10, scope: !3667)
!3693 = !DILocation(line: 496, column: 23, scope: !3667)
!3694 = !DILocation(line: 497, column: 10, scope: !3667)
!3695 = !DILocation(line: 497, column: 18, scope: !3667)
!3696 = !DILocation(line: 498, column: 5, scope: !3667)
!3697 = !DILocation(line: 499, column: 1, scope: !3661)
!3698 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !142, file: !142, line: 150, type: !3699, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3703)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!7, !3701}
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!3703 = !{!3704}
!3704 = !DILocalVariable(name: "vec_", arg: 1, scope: !3698, file: !142, line: 150, type: !3701)
!3705 = !DILocation(line: 0, scope: !3698)
!3706 = !DILocation(line: 150, column: 1, scope: !3698)
!3707 = distinct !DISubprogram(name: "remove_predictions_associated_with_edge", scope: !3, file: !3, line: 504, type: !3504, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3708)
!3708 = !{!3709, !3710, !3711, !3714}
!3709 = !DILocalVariable(name: "e", arg: 1, scope: !3707, file: !3, line: 504, type: !925)
!3710 = !DILocalVariable(name: "preds", scope: !3707, file: !3, line: 506, type: !1548)
!3711 = !DILocalVariable(name: "prediction", scope: !3712, file: !3, line: 515, type: !2407)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 514, column: 5)
!3713 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 513, column: 7)
!3714 = !DILocalVariable(name: "next", scope: !3712, file: !3, line: 516, type: !919)
!3715 = !DILocation(line: 0, scope: !3707)
!3716 = !DILocation(line: 508, column: 8, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 508, column: 7)
!3718 = !DILocation(line: 508, column: 7, scope: !3707)
!3719 = !DILocation(line: 511, column: 52, scope: !3707)
!3720 = !DILocation(line: 511, column: 11, scope: !3707)
!3721 = !DILocation(line: 513, column: 7, scope: !3713)
!3722 = !DILocation(line: 513, column: 7, scope: !3707)
!3723 = !DILocation(line: 515, column: 45, scope: !3712)
!3724 = !DILocation(line: 0, scope: !3712)
!3725 = !DILocation(line: 518, column: 7, scope: !3712)
!3726 = !DILocation(line: 515, column: 32, scope: !3712)
!3727 = !DILocation(line: 518, column: 14, scope: !3712)
!3728 = !DILocation(line: 520, column: 23, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 520, column: 8)
!3730 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 519, column: 2)
!3731 = !DILocation(line: 520, column: 31, scope: !3729)
!3732 = !DILocation(line: 0, scope: !3729)
!3733 = !DILocation(line: 520, column: 8, scope: !3730)
!3734 = !DILocation(line: 522, column: 30, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 521, column: 6)
!3736 = !DILocation(line: 523, column: 8, scope: !3735)
!3737 = !DILocation(line: 524, column: 20, scope: !3735)
!3738 = !DILocation(line: 525, column: 6, scope: !3735)
!3739 = distinct !{!3739, !3725, !3740}
!3740 = !DILocation(line: 528, column: 2, scope: !3712)
!3741 = !DILocation(line: 530, column: 1, scope: !3707)
!3742 = distinct !DISubprogram(name: "predict_edge_def", scope: !3, file: !3, line: 565, type: !3743, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3745)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{null, !925, !603, !812}
!3745 = !{!3746, !3747, !3748, !3749}
!3746 = !DILocalVariable(name: "e", arg: 1, scope: !3742, file: !3, line: 565, type: !925)
!3747 = !DILocalVariable(name: "predictor", arg: 2, scope: !3742, file: !3, line: 565, type: !603)
!3748 = !DILocalVariable(name: "taken", arg: 3, scope: !3742, file: !3, line: 566, type: !812)
!3749 = !DILocalVariable(name: "probability", scope: !3742, file: !3, line: 568, type: !912)
!3750 = !DILocation(line: 0, scope: !3742)
!3751 = !DILocation(line: 568, column: 22, scope: !3742)
!3752 = !DILocation(line: 568, column: 54, scope: !3742)
!3753 = !DILocation(line: 570, column: 14, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 570, column: 8)
!3755 = !DILocation(line: 571, column: 37, scope: !3754)
!3756 = !DILocation(line: 570, column: 8, scope: !3742)
!3757 = !DILocation(line: 573, column: 4, scope: !3742)
!3758 = !DILocation(line: 574, column: 1, scope: !3742)
!3759 = distinct !DISubprogram(name: "invert_br_probabilities", scope: !3, file: !3, line: 580, type: !3760, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3762)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{null, !1156}
!3762 = !{!3763, !3764}
!3763 = !DILocalVariable(name: "insn", arg: 1, scope: !3759, file: !3, line: 580, type: !1156)
!3764 = !DILocalVariable(name: "note", scope: !3759, file: !3, line: 582, type: !1156)
!3765 = !DILocation(line: 0, scope: !3759)
!3766 = !DILocation(line: 584, column: 15, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 584, column: 3)
!3768 = !DILocation(line: 584, column: 8, scope: !3767)
!3769 = !DILocation(line: 0, scope: !3767)
!3770 = !DILocation(line: 584, column: 3, scope: !3767)
!3771 = !DILocation(line: 585, column: 9, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 585, column: 9)
!3773 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 584, column: 3)
!3774 = !DILocation(line: 585, column: 30, scope: !3772)
!3775 = !DILocation(line: 585, column: 9, scope: !3773)
!3776 = !DILocation(line: 586, column: 24, scope: !3772)
!3777 = !DILocation(line: 586, column: 22, scope: !3772)
!3778 = !DILocation(line: 586, column: 7, scope: !3772)
!3779 = !DILocation(line: 587, column: 35, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 587, column: 14)
!3781 = !DILocation(line: 587, column: 14, scope: !3772)
!3782 = !DILocation(line: 589, column: 4, scope: !3780)
!3783 = !DILocation(line: 588, column: 7, scope: !3780)
!3784 = !DILocation(line: 589, column: 2, scope: !3780)
!3785 = !DILocation(line: 584, column: 46, scope: !3773)
!3786 = !DILocation(line: 584, column: 3, scope: !3773)
!3787 = distinct !{!3787, !3770, !3788}
!3788 = !DILocation(line: 589, column: 4, scope: !3767)
!3789 = !DILocation(line: 590, column: 1, scope: !3759)
!3790 = distinct !DISubprogram(name: "guess_outgoing_edge_probabilities", scope: !3, file: !3, line: 1143, type: !3495, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3791)
!3791 = !{!3792}
!3792 = !DILocalVariable(name: "bb", arg: 1, scope: !3790, file: !3, line: 1143, type: !1612)
!3793 = !DILocation(line: 0, scope: !3790)
!3794 = !DILocation(line: 1145, column: 3, scope: !3790)
!3795 = !DILocation(line: 1146, column: 33, scope: !3790)
!3796 = !DILocation(line: 1146, column: 3, scope: !3790)
!3797 = !DILocation(line: 1147, column: 1, scope: !3790)
!3798 = distinct !DISubprogram(name: "bb_estimate_probability_locally", scope: !3, file: !3, line: 1045, type: !3495, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3799)
!3799 = !{!3800, !3801, !3802}
!3800 = !DILocalVariable(name: "bb", arg: 1, scope: !3798, file: !3, line: 1045, type: !1612)
!3801 = !DILocalVariable(name: "last_insn", scope: !3798, file: !3, line: 1047, type: !1156)
!3802 = !DILocalVariable(name: "cond", scope: !3798, file: !3, line: 1048, type: !1156)
!3803 = !DILocation(line: 0, scope: !3798)
!3804 = !DILocation(line: 1047, column: 19, scope: !3798)
!3805 = !DILocation(line: 1050, column: 9, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1050, column: 7)
!3807 = !DILocation(line: 1050, column: 7, scope: !3798)
!3808 = !DILocation(line: 1052, column: 10, scope: !3798)
!3809 = !DILocation(line: 1053, column: 9, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1053, column: 7)
!3811 = !DILocation(line: 1053, column: 7, scope: !3798)
!3812 = !DILocation(line: 1059, column: 7, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1059, column: 7)
!3814 = !DILocation(line: 1060, column: 7, scope: !3813)
!3815 = !DILocation(line: 1060, column: 12, scope: !3813)
!3816 = !DILocation(line: 1060, column: 35, scope: !3813)
!3817 = !DILocation(line: 1060, column: 38, scope: !3813)
!3818 = !DILocation(line: 1061, column: 4, scope: !3813)
!3819 = !DILocation(line: 1061, column: 8, scope: !3813)
!3820 = !DILocation(line: 1061, column: 31, scope: !3813)
!3821 = !DILocation(line: 1061, column: 34, scope: !3813)
!3822 = !DILocation(line: 1059, column: 7, scope: !3798)
!3823 = !DILocation(line: 1063, column: 27, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 1063, column: 11)
!3825 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 1062, column: 5)
!3826 = !DILocation(line: 1063, column: 11, scope: !3825)
!3827 = !DILocation(line: 1064, column: 2, scope: !3824)
!3828 = !DILocation(line: 1065, column: 32, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 1065, column: 16)
!3830 = !DILocation(line: 1065, column: 16, scope: !3824)
!3831 = !DILocation(line: 1066, column: 2, scope: !3829)
!3832 = !DILocation(line: 1074, column: 5, scope: !3813)
!3833 = !DILocation(line: 1079, column: 14, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 1075, column: 7)
!3835 = !DILocation(line: 1079, column: 11, scope: !3834)
!3836 = !DILocation(line: 1079, column: 6, scope: !3834)
!3837 = !DILocation(line: 1078, column: 2, scope: !3834)
!3838 = !DILocation(line: 1080, column: 2, scope: !3834)
!3839 = !DILocation(line: 1087, column: 6, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 1087, column: 6)
!3841 = !DILocation(line: 1087, column: 6, scope: !3834)
!3842 = !DILocation(line: 1091, column: 11, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 1091, column: 11)
!3844 = !DILocation(line: 1091, column: 29, scope: !3843)
!3845 = !DILocation(line: 1091, column: 26, scope: !3843)
!3846 = !DILocation(line: 1092, column: 4, scope: !3843)
!3847 = !DILocation(line: 1092, column: 22, scope: !3843)
!3848 = !DILocation(line: 1091, column: 11, scope: !3840)
!3849 = !DILocation(line: 1095, column: 4, scope: !3843)
!3850 = !DILocation(line: 1103, column: 6, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 1103, column: 6)
!3852 = !DILocation(line: 1103, column: 6, scope: !3834)
!3853 = !DILocation(line: 1107, column: 11, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 1107, column: 11)
!3855 = !DILocation(line: 1107, column: 29, scope: !3854)
!3856 = !DILocation(line: 1107, column: 26, scope: !3854)
!3857 = !DILocation(line: 1108, column: 4, scope: !3854)
!3858 = !DILocation(line: 1108, column: 22, scope: !3854)
!3859 = !DILocation(line: 1107, column: 11, scope: !3851)
!3860 = !DILocation(line: 1111, column: 4, scope: !3854)
!3861 = !DILocation(line: 1115, column: 2, scope: !3834)
!3862 = !DILocation(line: 1116, column: 2, scope: !3834)
!3863 = !DILocation(line: 1119, column: 2, scope: !3834)
!3864 = !DILocation(line: 1120, column: 2, scope: !3834)
!3865 = !DILocation(line: 1124, column: 6, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 1124, column: 6)
!3867 = !DILocation(line: 1124, column: 24, scope: !3866)
!3868 = !DILocation(line: 1124, column: 21, scope: !3866)
!3869 = !DILocation(line: 1124, column: 35, scope: !3866)
!3870 = !DILocation(line: 1124, column: 56, scope: !3866)
!3871 = !DILocation(line: 1124, column: 53, scope: !3866)
!3872 = !DILocation(line: 1125, column: 6, scope: !3866)
!3873 = !DILocation(line: 1125, column: 27, scope: !3866)
!3874 = !DILocation(line: 1125, column: 24, scope: !3866)
!3875 = !DILocation(line: 1124, column: 6, scope: !3834)
!3876 = !DILocation(line: 1126, column: 4, scope: !3866)
!3877 = !DILocation(line: 1131, column: 6, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 1131, column: 6)
!3879 = !DILocation(line: 1131, column: 24, scope: !3878)
!3880 = !DILocation(line: 1131, column: 21, scope: !3878)
!3881 = !DILocation(line: 1131, column: 35, scope: !3878)
!3882 = !DILocation(line: 1131, column: 56, scope: !3878)
!3883 = !DILocation(line: 1131, column: 53, scope: !3878)
!3884 = !DILocation(line: 1132, column: 6, scope: !3878)
!3885 = !DILocation(line: 1132, column: 27, scope: !3878)
!3886 = !DILocation(line: 1132, column: 24, scope: !3878)
!3887 = !DILocation(line: 1131, column: 6, scope: !3834)
!3888 = !DILocation(line: 1133, column: 4, scope: !3878)
!3889 = !DILocation(line: 1139, column: 1, scope: !3798)
!3890 = distinct !DISubprogram(name: "combine_predictions_for_insn", scope: !3, file: !3, line: 650, type: !3891, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3893)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !1156, !1612}
!3893 = !{!3894, !3895, !3896, !3897, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3911, !3912, !3916, !3917}
!3894 = !DILocalVariable(name: "insn", arg: 1, scope: !3890, file: !3, line: 650, type: !1156)
!3895 = !DILocalVariable(name: "bb", arg: 2, scope: !3890, file: !3, line: 650, type: !1612)
!3896 = !DILocalVariable(name: "prob_note", scope: !3890, file: !3, line: 652, type: !1156)
!3897 = !DILocalVariable(name: "pnote", scope: !3890, file: !3, line: 653, type: !3898)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!3899 = !DILocalVariable(name: "note", scope: !3890, file: !3, line: 654, type: !1156)
!3900 = !DILocalVariable(name: "best_probability", scope: !3890, file: !3, line: 655, type: !912)
!3901 = !DILocalVariable(name: "best_predictor", scope: !3890, file: !3, line: 656, type: !603)
!3902 = !DILocalVariable(name: "combined_probability", scope: !3890, file: !3, line: 657, type: !912)
!3903 = !DILocalVariable(name: "d", scope: !3890, file: !3, line: 658, type: !912)
!3904 = !DILocalVariable(name: "first_match", scope: !3890, file: !3, line: 659, type: !911)
!3905 = !DILocalVariable(name: "found", scope: !3890, file: !3, line: 660, type: !911)
!3906 = !DILocalVariable(name: "predictor", scope: !3907, file: !3, line: 679, type: !603)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 678, column: 7)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 677, column: 9)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 676, column: 3)
!3910 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 676, column: 3)
!3911 = !DILocalVariable(name: "probability", scope: !3907, file: !3, line: 681, type: !912)
!3912 = !DILocalVariable(name: "predictor", scope: !3913, file: !3, line: 726, type: !603)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 725, column: 2)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !3, line: 724, column: 11)
!3915 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 723, column: 5)
!3916 = !DILocalVariable(name: "probability", scope: !3913, file: !3, line: 728, type: !912)
!3917 = !DILocalVariable(name: "prob", scope: !3918, file: !3, line: 753, type: !912)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 752, column: 5)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 751, column: 12)
!3920 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 738, column: 7)
!3921 = !DILocation(line: 0, scope: !3890)
!3922 = !DILocation(line: 662, column: 8, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 662, column: 7)
!3924 = !DILocation(line: 662, column: 7, scope: !3890)
!3925 = !DILocation(line: 664, column: 7, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 663, column: 5)
!3927 = !DILocation(line: 665, column: 7, scope: !3926)
!3928 = !DILocation(line: 668, column: 15, scope: !3890)
!3929 = !DILocation(line: 669, column: 12, scope: !3890)
!3930 = !DILocation(line: 670, column: 7, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 670, column: 7)
!3932 = !DILocation(line: 670, column: 7, scope: !3890)
!3933 = !DILocation(line: 671, column: 60, scope: !3931)
!3934 = !DILocation(line: 672, column: 11, scope: !3931)
!3935 = !DILocation(line: 671, column: 5, scope: !3931)
!3936 = !DILocation(line: 676, column: 8, scope: !3910)
!3937 = !DILocation(line: 0, scope: !3910)
!3938 = !DILocation(line: 676, column: 3, scope: !3910)
!3939 = !DILocation(line: 677, column: 9, scope: !3908)
!3940 = !DILocation(line: 677, column: 30, scope: !3908)
!3941 = !DILocation(line: 677, column: 9, scope: !3909)
!3942 = !DILocation(line: 680, column: 12, scope: !3907)
!3943 = !DILocation(line: 679, column: 33, scope: !3907)
!3944 = !DILocation(line: 0, scope: !3907)
!3945 = !DILocation(line: 681, column: 20, scope: !3907)
!3946 = !DILocation(line: 684, column: 21, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 684, column: 6)
!3948 = !DILocation(line: 684, column: 6, scope: !3907)
!3949 = !DILocation(line: 687, column: 28, scope: !3907)
!3950 = !DILocation(line: 688, column: 27, scope: !3907)
!3951 = !DILocation(line: 689, column: 27, scope: !3907)
!3952 = !DILocation(line: 689, column: 7, scope: !3907)
!3953 = !DILocation(line: 688, column: 7, scope: !3907)
!3954 = !DILocation(line: 692, column: 8, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 692, column: 6)
!3956 = !DILocation(line: 692, column: 6, scope: !3907)
!3957 = !DILocation(line: 696, column: 29, scope: !3955)
!3958 = !DILocation(line: 696, column: 62, scope: !3955)
!3959 = !DILocation(line: 696, column: 60, scope: !3955)
!3960 = !DILocation(line: 697, column: 7, scope: !3955)
!3961 = !DILocation(line: 697, column: 28, scope: !3955)
!3962 = !DILocation(line: 697, column: 26, scope: !3955)
!3963 = !DILocation(line: 697, column: 30, scope: !3955)
!3964 = !DILocation(line: 696, column: 27, scope: !3955)
!3965 = !DILocation(line: 676, column: 46, scope: !3909)
!3966 = !DILocation(line: 676, column: 3, scope: !3909)
!3967 = distinct !{!3967, !3938, !3968}
!3968 = !DILocation(line: 698, column: 7, scope: !3910)
!3969 = !DILocation(line: 704, column: 7, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 704, column: 7)
!3971 = !DILocation(line: 704, column: 45, scope: !3970)
!3972 = !DILocation(line: 704, column: 7, scope: !3890)
!3973 = !DILocation(line: 707, column: 8, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 707, column: 7)
!3975 = !DILocation(line: 0, scope: !3974)
!3976 = !DILocation(line: 707, column: 7, scope: !3890)
!3977 = !DILocation(line: 708, column: 5, scope: !3974)
!3978 = !DILocation(line: 0, scope: !3913)
!3979 = !DILocation(line: 713, column: 14, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 711, column: 5)
!3981 = !DILocation(line: 712, column: 7, scope: !3980)
!3982 = !DILocation(line: 714, column: 24, scope: !3980)
!3983 = !DILocation(line: 715, column: 14, scope: !3980)
!3984 = !DILocation(line: 714, column: 7, scope: !3980)
!3985 = !DILocation(line: 718, column: 7, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 718, column: 7)
!3987 = !DILocation(line: 718, column: 7, scope: !3890)
!3988 = !DILocation(line: 720, column: 20, scope: !3890)
!3989 = !DILocation(line: 720, column: 3, scope: !3890)
!3990 = !DILocation(line: 722, column: 3, scope: !3890)
!3991 = !DILocation(line: 669, column: 9, scope: !3890)
!3992 = !DILocation(line: 722, column: 10, scope: !3890)
!3993 = !DILocation(line: 724, column: 11, scope: !3914)
!3994 = !DILocation(line: 724, column: 34, scope: !3914)
!3995 = !DILocation(line: 724, column: 11, scope: !3915)
!3996 = !DILocation(line: 0, scope: !3914)
!3997 = !DILocation(line: 727, column: 7, scope: !3913)
!3998 = !DILocation(line: 726, column: 35, scope: !3913)
!3999 = !DILocation(line: 728, column: 22, scope: !3913)
!4000 = !DILocation(line: 730, column: 21, scope: !3913)
!4001 = !DILocation(line: 731, column: 38, scope: !3913)
!4002 = !DILocation(line: 731, column: 20, scope: !3913)
!4003 = !DILocation(line: 730, column: 4, scope: !3913)
!4004 = !DILocation(line: 732, column: 13, scope: !3913)
!4005 = !DILocation(line: 732, column: 11, scope: !3913)
!4006 = !DILocation(line: 733, column: 2, scope: !3913)
!4007 = !DILocation(line: 735, column: 11, scope: !3914)
!4008 = distinct !{!4008, !3990, !4009}
!4009 = !DILocation(line: 736, column: 5, scope: !3890)
!4010 = !DILocation(line: 738, column: 8, scope: !3920)
!4011 = !DILocation(line: 738, column: 7, scope: !3890)
!4012 = !DILocation(line: 740, column: 40, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 739, column: 5)
!4014 = !DILocation(line: 740, column: 7, scope: !4013)
!4015 = !DILocation(line: 744, column: 12, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 744, column: 11)
!4017 = !DILocation(line: 744, column: 11, scope: !4013)
!4018 = !DILocation(line: 746, column: 4, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 745, column: 2)
!4020 = !DILocation(line: 746, column: 22, scope: !4019)
!4021 = !DILocation(line: 746, column: 34, scope: !4019)
!4022 = !DILocation(line: 748, column: 25, scope: !4019)
!4023 = !DILocation(line: 747, column: 4, scope: !4019)
!4024 = !DILocation(line: 747, column: 24, scope: !4019)
!4025 = !DILocation(line: 748, column: 6, scope: !4019)
!4026 = !DILocation(line: 749, column: 2, scope: !4019)
!4027 = !DILocation(line: 751, column: 13, scope: !3919)
!4028 = !DILocation(line: 751, column: 12, scope: !3920)
!4029 = !DILocation(line: 753, column: 18, scope: !3918)
!4030 = !DILocation(line: 0, scope: !3918)
!4031 = !DILocation(line: 755, column: 7, scope: !3918)
!4032 = !DILocation(line: 755, column: 25, scope: !3918)
!4033 = !DILocation(line: 755, column: 37, scope: !3918)
!4034 = !DILocation(line: 756, column: 58, scope: !3918)
!4035 = !DILocation(line: 756, column: 7, scope: !3918)
!4036 = !DILocation(line: 756, column: 27, scope: !3918)
!4037 = !DILocation(line: 756, column: 39, scope: !3918)
!4038 = !DILocation(line: 757, column: 5, scope: !3918)
!4039 = !DILocation(line: 759, column: 5, scope: !3919)
!4040 = !DILocation(line: 759, column: 28, scope: !3919)
!4041 = !DILocation(line: 759, column: 40, scope: !3919)
!4042 = !DILocation(line: 760, column: 1, scope: !3890)
!4043 = distinct !DISubprogram(name: "tree_estimate_probability", scope: !3, file: !3, line: 1692, type: !2446, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4044)
!4044 = !{!4045}
!4045 = !DILocalVariable(name: "bb", scope: !4043, file: !3, line: 1694, type: !1612)
!4046 = !DILocation(line: 1696, column: 3, scope: !4043)
!4047 = !DILocation(line: 1697, column: 3, scope: !4043)
!4048 = !DILocation(line: 1700, column: 3, scope: !4043)
!4049 = !DILocation(line: 1701, column: 3, scope: !4043)
!4050 = !DILocation(line: 1703, column: 20, scope: !4043)
!4051 = !DILocation(line: 1703, column: 18, scope: !4043)
!4052 = !DILocation(line: 1704, column: 3, scope: !4043)
!4053 = !DILocation(line: 1705, column: 3, scope: !4043)
!4054 = !DILocation(line: 1707, column: 7, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1707, column: 7)
!4056 = !DILocation(line: 1707, column: 26, scope: !4055)
!4057 = !DILocation(line: 1707, column: 7, scope: !4043)
!4058 = !DILocation(line: 1708, column: 5, scope: !4055)
!4059 = !DILocation(line: 1710, column: 3, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1710, column: 3)
!4061 = !DILocation(line: 1710, column: 3, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 1710, column: 3)
!4063 = !DILocation(line: 0, scope: !4060)
!4064 = !DILocation(line: 0, scope: !4043)
!4065 = !DILocation(line: 1711, column: 5, scope: !4062)
!4066 = !DILocation(line: 0, scope: !4062)
!4067 = distinct !{!4067, !4059, !4068}
!4068 = !DILocation(line: 1711, column: 37, scope: !4060)
!4069 = !DILocation(line: 1713, column: 3, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1713, column: 3)
!4071 = !DILocation(line: 1713, column: 3, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4070, file: !3, line: 1713, column: 3)
!4073 = !DILocation(line: 0, scope: !4070)
!4074 = !DILocation(line: 1714, column: 5, scope: !4072)
!4075 = !DILocation(line: 0, scope: !4072)
!4076 = distinct !{!4076, !4069, !4077}
!4077 = !DILocation(line: 1714, column: 35, scope: !4070)
!4078 = !DILocation(line: 1719, column: 24, scope: !4043)
!4079 = !DILocation(line: 1719, column: 3, scope: !4043)
!4080 = !DILocation(line: 1720, column: 18, scope: !4043)
!4081 = !DILocation(line: 1722, column: 3, scope: !4043)
!4082 = !DILocation(line: 1723, column: 3, scope: !4043)
!4083 = !DILocation(line: 1724, column: 3, scope: !4043)
!4084 = !DILocation(line: 1725, column: 1, scope: !4043)
!4085 = distinct !DISubprogram(name: "tree_bb_level_predictions", scope: !3, file: !3, line: 1543, type: !2446, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4086)
!4086 = !{!4087, !4088, !4089, !4090, !4091, !4101, !4105}
!4087 = !DILocalVariable(name: "bb", scope: !4085, file: !3, line: 1545, type: !1612)
!4088 = !DILocalVariable(name: "has_return_edges", scope: !4085, file: !3, line: 1546, type: !911)
!4089 = !DILocalVariable(name: "e", scope: !4085, file: !3, line: 1547, type: !925)
!4090 = !DILocalVariable(name: "ei", scope: !4085, file: !3, line: 1548, type: !2458)
!4091 = !DILocalVariable(name: "gsi", scope: !4092, file: !3, line: 1561, type: !4095)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1560, column: 5)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 1559, column: 3)
!4094 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 1559, column: 3)
!4095 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !839, line: 265, baseType: !4096)
!4096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !839, line: 254, size: 192, elements: !4097)
!4097 = !{!4098, !4099, !4100}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4096, file: !839, line: 257, baseType: !1643, size: 64)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4096, file: !839, line: 263, baseType: !1718, size: 64, offset: 64)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4096, file: !839, line: 264, baseType: !1612, size: 64, offset: 128)
!4101 = !DILocalVariable(name: "stmt", scope: !4102, file: !3, line: 1565, type: !1648)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 1564, column: 2)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 1563, column: 7)
!4104 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 1563, column: 7)
!4105 = !DILocalVariable(name: "decl", scope: !4102, file: !3, line: 1566, type: !984)
!4106 = !DILocation(line: 0, scope: !4085)
!4107 = !DILocation(line: 1547, column: 3, scope: !4085)
!4108 = !DILocation(line: 1548, column: 3, scope: !4085)
!4109 = !DILocation(line: 1550, column: 3, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 1550, column: 3)
!4111 = !DILocation(line: 0, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 1550, column: 3)
!4113 = !DILocation(line: 1550, column: 3, scope: !4112)
!4114 = !DILocation(line: 1551, column: 11, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 1551, column: 9)
!4116 = !DILocation(line: 1551, column: 14, scope: !4115)
!4117 = !DILocation(line: 1551, column: 20, scope: !4115)
!4118 = !DILocation(line: 1551, column: 9, scope: !4112)
!4119 = distinct !{!4119, !4109, !4120}
!4120 = !DILocation(line: 1555, column: 7, scope: !4110)
!4121 = !DILocation(line: 1557, column: 3, scope: !4085)
!4122 = !DILocation(line: 1559, column: 3, scope: !4094)
!4123 = !DILocation(line: 0, scope: !4092)
!4124 = !DILocation(line: 0, scope: !4104)
!4125 = !DILocation(line: 1559, column: 3, scope: !4093)
!4126 = !DILocation(line: 0, scope: !4094)
!4127 = !DILocation(line: 1561, column: 7, scope: !4092)
!4128 = !DILocation(line: 1563, column: 18, scope: !4104)
!4129 = !DILocation(line: 1563, column: 12, scope: !4104)
!4130 = !DILocation(line: 1563, column: 38, scope: !4103)
!4131 = !DILocation(line: 1563, column: 37, scope: !4103)
!4132 = !DILocation(line: 1563, column: 7, scope: !4104)
!4133 = !DILocation(line: 1565, column: 18, scope: !4102)
!4134 = !DILocation(line: 0, scope: !4102)
!4135 = !DILocation(line: 1568, column: 8, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 1568, column: 8)
!4137 = !DILocation(line: 1568, column: 8, scope: !4102)
!4138 = !DILocation(line: 1570, column: 13, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 1570, column: 12)
!4140 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 1569, column: 6)
!4141 = !DILocation(line: 1570, column: 38, scope: !4139)
!4142 = !DILocation(line: 1571, column: 12, scope: !4139)
!4143 = !DILocation(line: 1572, column: 3, scope: !4139)
!4144 = !DILocation(line: 1574, column: 15, scope: !4140)
!4145 = !DILocation(line: 1575, column: 12, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 1575, column: 12)
!4147 = !DILocation(line: 1576, column: 5, scope: !4146)
!4148 = !DILocation(line: 1577, column: 12, scope: !4146)
!4149 = !DILocation(line: 1576, column: 8, scope: !4146)
!4150 = !DILocation(line: 1575, column: 12, scope: !4140)
!4151 = !DILocation(line: 1578, column: 3, scope: !4146)
!4152 = !DILocation(line: 1581, column: 13, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 1581, column: 13)
!4154 = !DILocation(line: 1581, column: 32, scope: !4153)
!4155 = !DILocation(line: 1581, column: 13, scope: !4136)
!4156 = !DILocation(line: 1583, column: 38, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1582, column: 6)
!4158 = !DILocation(line: 1584, column: 6, scope: !4157)
!4159 = !DILocation(line: 1583, column: 8, scope: !4157)
!4160 = !DILocation(line: 1587, column: 6, scope: !4157)
!4161 = !DILocation(line: 1563, column: 55, scope: !4103)
!4162 = !DILocation(line: 1563, column: 7, scope: !4103)
!4163 = distinct !{!4163, !4132, !4164}
!4164 = !DILocation(line: 1588, column: 2, scope: !4104)
!4165 = !DILocation(line: 1589, column: 5, scope: !4093)
!4166 = !DILocation(line: 0, scope: !4093)
!4167 = distinct !{!4167, !4122, !4168}
!4168 = !DILocation(line: 1589, column: 5, scope: !4094)
!4169 = !DILocation(line: 1590, column: 1, scope: !4085)
!4170 = distinct !DISubprogram(name: "number_of_loops", scope: !153, file: !153, line: 459, type: !2483, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!4171 = !DILocation(line: 461, column: 8, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4170, file: !153, line: 461, column: 7)
!4173 = !DILocation(line: 461, column: 7, scope: !4170)
!4174 = !DILocation(line: 464, column: 10, scope: !4170)
!4175 = !DILocation(line: 464, column: 3, scope: !4170)
!4176 = !DILocation(line: 0, scope: !4170)
!4177 = !DILocation(line: 465, column: 1, scope: !4170)
!4178 = distinct !DISubprogram(name: "predict_loops", scope: !3, file: !3, line: 913, type: !2446, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4179)
!4179 = !{!4180, !4186, !4187, !4191, !4193, !4194, !4195, !4201, !4217, !4218, !4222, !4223, !4224, !4225, !4226, !4230, !4231, !4232}
!4180 = !DILocalVariable(name: "li", scope: !4178, file: !3, line: 915, type: !4181)
!4181 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !153, line: 515, baseType: !4182)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !153, line: 508, size: 128, elements: !4183)
!4183 = !{!4184, !4185}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !4182, file: !153, line: 511, baseType: !2430, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4182, file: !153, line: 514, baseType: !7, size: 32, offset: 64)
!4186 = !DILocalVariable(name: "loop", scope: !4178, file: !3, line: 916, type: !952)
!4187 = !DILocalVariable(name: "bb", scope: !4188, file: !3, line: 922, type: !1612)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 921, column: 5)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 920, column: 3)
!4190 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 920, column: 3)
!4191 = !DILocalVariable(name: "bbs", scope: !4188, file: !3, line: 922, type: !4192)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!4193 = !DILocalVariable(name: "j", scope: !4188, file: !3, line: 923, type: !7)
!4194 = !DILocalVariable(name: "n_exits", scope: !4188, file: !3, line: 923, type: !7)
!4195 = !DILocalVariable(name: "exits", scope: !4188, file: !3, line: 924, type: !4196)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !142, line: 152, baseType: !4198)
!4198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !142, line: 152, size: 128, elements: !4199)
!4199 = !{!4200}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4198, file: !142, line: 152, baseType: !940, size: 128)
!4201 = !DILocalVariable(name: "niter_desc", scope: !4188, file: !3, line: 925, type: !4202)
!4202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_niter_desc", file: !921, line: 657, size: 640, elements: !4203)
!4203 = !{!4204, !4205, !4206, !4207, !4208, !4215, !4216}
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "assumptions", scope: !4202, file: !921, line: 659, baseType: !984, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_zero", scope: !4202, file: !921, line: 663, baseType: !984, size: 64, offset: 64)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "niter", scope: !4202, file: !921, line: 667, baseType: !984, size: 64, offset: 128)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4202, file: !921, line: 671, baseType: !1032, size: 128, offset: 192)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !4202, file: !921, line: 679, baseType: !4209, size: 192, offset: 320)
!4209 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !921, line: 651, baseType: !4210)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !921, line: 644, size: 192, elements: !4211)
!4211 = !{!4212, !4213, !4214}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4210, file: !921, line: 647, baseType: !984, size: 64)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !4210, file: !921, line: 647, baseType: !984, size: 64, offset: 64)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !4210, file: !921, line: 650, baseType: !911, size: 8, offset: 128)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !4202, file: !921, line: 680, baseType: !984, size: 64, offset: 512)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "cmp", scope: !4202, file: !921, line: 681, baseType: !203, size: 32, offset: 576)
!4217 = !DILocalVariable(name: "ex", scope: !4188, file: !3, line: 926, type: !925)
!4218 = !DILocalVariable(name: "niter", scope: !4219, file: !3, line: 933, type: !984)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 932, column: 2)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 931, column: 7)
!4221 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 931, column: 7)
!4222 = !DILocalVariable(name: "nitercst", scope: !4219, file: !3, line: 934, type: !1039)
!4223 = !DILocalVariable(name: "max", scope: !4219, file: !3, line: 935, type: !912)
!4224 = !DILocalVariable(name: "probability", scope: !4219, file: !3, line: 936, type: !912)
!4225 = !DILocalVariable(name: "predictor", scope: !4219, file: !3, line: 937, type: !603)
!4226 = !DILocalVariable(name: "header_found", scope: !4227, file: !3, line: 978, type: !912)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 977, column: 2)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 976, column: 7)
!4229 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 976, column: 7)
!4230 = !DILocalVariable(name: "e", scope: !4227, file: !3, line: 979, type: !925)
!4231 = !DILocalVariable(name: "ei", scope: !4227, file: !3, line: 980, type: !2458)
!4232 = !DILocalVariable(name: "probability", scope: !4233, file: !3, line: 1025, type: !912)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 1010, column: 6)
!4234 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 1005, column: 8)
!4235 = !DILocation(line: 915, column: 3, scope: !4178)
!4236 = !DILocation(line: 916, column: 3, scope: !4178)
!4237 = !DILocation(line: 0, scope: !4178)
!4238 = !DILocation(line: 920, column: 3, scope: !4190)
!4239 = !DILocation(line: 0, scope: !4188)
!4240 = !DILocation(line: 0, scope: !4219)
!4241 = !DILocation(line: 0, scope: !4227)
!4242 = !DILocation(line: 0, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 1030, column: 8)
!4244 = !DILocation(line: 0, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1030, column: 8)
!4246 = !DILocation(line: 920, column: 3, scope: !4189)
!4247 = !DILocation(line: 924, column: 7, scope: !4188)
!4248 = !DILocation(line: 925, column: 7, scope: !4188)
!4249 = !DILocation(line: 926, column: 7, scope: !4188)
!4250 = !DILocation(line: 928, column: 15, scope: !4188)
!4251 = !DILocation(line: 928, column: 13, scope: !4188)
!4252 = !DILocation(line: 929, column: 17, scope: !4188)
!4253 = !DILocation(line: 0, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 956, column: 13)
!4255 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 944, column: 8)
!4256 = !DILocation(line: 931, column: 12, scope: !4221)
!4257 = !DILocation(line: 0, scope: !4221)
!4258 = !DILocation(line: 931, column: 19, scope: !4220)
!4259 = !DILocation(line: 931, column: 7, scope: !4221)
!4260 = !DILocation(line: 935, column: 14, scope: !4219)
!4261 = !DILocation(line: 939, column: 35, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 939, column: 8)
!4263 = !DILocation(line: 939, column: 41, scope: !4262)
!4264 = !DILocation(line: 939, column: 8, scope: !4262)
!4265 = !DILocation(line: 939, column: 8, scope: !4219)
!4266 = !DILocation(line: 941, column: 9, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 941, column: 8)
!4268 = !DILocation(line: 941, column: 15, scope: !4267)
!4269 = !DILocation(line: 941, column: 18, scope: !4267)
!4270 = !DILocation(line: 941, column: 47, scope: !4267)
!4271 = !DILocation(line: 941, column: 8, scope: !4219)
!4272 = !DILocation(line: 942, column: 34, scope: !4267)
!4273 = !DILocation(line: 942, column: 40, scope: !4267)
!4274 = !DILocation(line: 942, column: 14, scope: !4267)
!4275 = !DILocation(line: 942, column: 6, scope: !4267)
!4276 = !DILocation(line: 944, column: 8, scope: !4255)
!4277 = !DILocation(line: 944, column: 26, scope: !4255)
!4278 = !DILocation(line: 944, column: 8, scope: !4219)
!4279 = !DILocation(line: 958, column: 50, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 957, column: 6)
!4281 = !DILocation(line: 958, column: 19, scope: !4280)
!4282 = !DILocation(line: 959, column: 21, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 959, column: 12)
!4284 = !DILocation(line: 959, column: 12, scope: !4280)
!4285 = !DILocation(line: 961, column: 23, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 961, column: 12)
!4287 = !DILocation(line: 961, column: 21, scope: !4286)
!4288 = !DILocation(line: 961, column: 12, scope: !4280)
!4289 = !DILocation(line: 946, column: 12, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !3, line: 946, column: 12)
!4291 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 945, column: 6)
!4292 = !DILocation(line: 947, column: 5, scope: !4290)
!4293 = !DILocation(line: 947, column: 36, scope: !4290)
!4294 = !DILocation(line: 947, column: 33, scope: !4290)
!4295 = !DILocation(line: 947, column: 8, scope: !4290)
!4296 = !DILocation(line: 947, column: 40, scope: !4290)
!4297 = !DILocation(line: 946, column: 12, scope: !4291)
!4298 = !DILocation(line: 948, column: 14, scope: !4290)
!4299 = !DILocation(line: 948, column: 38, scope: !4290)
!4300 = !DILocation(line: 948, column: 3, scope: !4290)
!4301 = !DILocation(line: 950, column: 14, scope: !4290)
!4302 = !DILocation(line: 0, scope: !4255)
!4303 = !DILocation(line: 969, column: 48, scope: !4219)
!4304 = !DILocation(line: 969, column: 37, scope: !4219)
!4305 = !DILocation(line: 969, column: 53, scope: !4219)
!4306 = !DILocation(line: 969, column: 18, scope: !4219)
!4307 = !DILocation(line: 970, column: 18, scope: !4219)
!4308 = !DILocation(line: 970, column: 4, scope: !4219)
!4309 = !DILocation(line: 971, column: 2, scope: !4220)
!4310 = !DILocation(line: 931, column: 54, scope: !4220)
!4311 = !DILocation(line: 931, column: 7, scope: !4220)
!4312 = distinct !{!4312, !4259, !4313}
!4313 = !DILocation(line: 971, column: 2, scope: !4221)
!4314 = !DILocation(line: 972, column: 7, scope: !4188)
!4315 = !DILocation(line: 956, column: 13, scope: !4255)
!4316 = !DILocation(line: 974, column: 28, scope: !4188)
!4317 = !DILocation(line: 974, column: 13, scope: !4188)
!4318 = !DILocation(line: 976, column: 12, scope: !4229)
!4319 = !DILocation(line: 0, scope: !4229)
!4320 = !DILocation(line: 976, column: 23, scope: !4228)
!4321 = !DILocation(line: 976, column: 29, scope: !4228)
!4322 = !DILocation(line: 976, column: 21, scope: !4228)
!4323 = !DILocation(line: 976, column: 7, scope: !4229)
!4324 = !DILocation(line: 979, column: 4, scope: !4227)
!4325 = !DILocation(line: 980, column: 4, scope: !4227)
!4326 = !DILocation(line: 982, column: 9, scope: !4227)
!4327 = !DILocation(line: 988, column: 8, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 988, column: 8)
!4329 = !DILocation(line: 988, column: 8, scope: !4227)
!4330 = !DILocation(line: 993, column: 14, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 993, column: 8)
!4332 = !DILocation(line: 993, column: 20, scope: !4331)
!4333 = !DILocation(line: 993, column: 11, scope: !4331)
!4334 = !DILocation(line: 993, column: 8, scope: !4227)
!4335 = !DILocation(line: 995, column: 42, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 994, column: 6)
!4337 = !DILocation(line: 995, column: 12, scope: !4336)
!4338 = !DILocation(line: 995, column: 10, scope: !4336)
!4339 = !DILocation(line: 996, column: 12, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 996, column: 12)
!4341 = !DILocation(line: 996, column: 12, scope: !4336)
!4342 = !DILocation(line: 999, column: 5, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 997, column: 3)
!4344 = !DILocation(line: 1000, column: 3, scope: !4343)
!4345 = !DILocation(line: 1008, column: 8, scope: !4234)
!4346 = !DILocation(line: 1008, column: 12, scope: !4234)
!4347 = !DILocation(line: 1009, column: 8, scope: !4234)
!4348 = !DILocation(line: 1009, column: 12, scope: !4234)
!4349 = !DILocation(line: 1005, column: 8, scope: !4227)
!4350 = !DILocation(line: 1027, column: 6, scope: !4233)
!4351 = !DILocation(line: 0, scope: !4233)
!4352 = !DILocation(line: 1028, column: 12, scope: !4233)
!4353 = !DILocation(line: 1030, column: 8, scope: !4243)
!4354 = !DILocation(line: 1030, column: 8, scope: !4245)
!4355 = !DILocation(line: 1031, column: 7, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 1031, column: 7)
!4357 = !DILocation(line: 1031, column: 10, scope: !4356)
!4358 = !DILocation(line: 1031, column: 16, scope: !4356)
!4359 = !DILocation(line: 1031, column: 22, scope: !4356)
!4360 = !DILocation(line: 1032, column: 7, scope: !4356)
!4361 = !DILocation(line: 1032, column: 34, scope: !4356)
!4362 = !DILocation(line: 1032, column: 11, scope: !4356)
!4363 = !DILocation(line: 1031, column: 7, scope: !4245)
!4364 = !DILocation(line: 1033, column: 19, scope: !4356)
!4365 = !DILocation(line: 1033, column: 5, scope: !4356)
!4366 = distinct !{!4366, !4353, !4367}
!4367 = !DILocation(line: 1033, column: 49, scope: !4243)
!4368 = !DILocation(line: 1035, column: 2, scope: !4228)
!4369 = !DILocation(line: 976, column: 41, scope: !4228)
!4370 = !DILocation(line: 976, column: 7, scope: !4228)
!4371 = distinct !{!4371, !4323, !4372}
!4372 = !DILocation(line: 1035, column: 2, scope: !4229)
!4373 = !DILocation(line: 1038, column: 13, scope: !4188)
!4374 = !DILocation(line: 1038, column: 7, scope: !4188)
!4375 = !DILocation(line: 1039, column: 5, scope: !4189)
!4376 = distinct !{!4376, !4238, !4377}
!4377 = !DILocation(line: 1039, column: 5, scope: !4190)
!4378 = !DILocation(line: 1040, column: 1, scope: !4178)
!4379 = distinct !DISubprogram(name: "tree_estimate_probability_bb", scope: !3, file: !3, line: 1609, type: !3495, scopeLine: 1610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4380)
!4380 = !{!4381, !4382, !4383, !4384, !4385, !4391, !4392, !4395}
!4381 = !DILocalVariable(name: "bb", arg: 1, scope: !4379, file: !3, line: 1609, type: !1612)
!4382 = !DILocalVariable(name: "e", scope: !4379, file: !3, line: 1611, type: !925)
!4383 = !DILocalVariable(name: "ei", scope: !4379, file: !3, line: 1612, type: !2458)
!4384 = !DILocalVariable(name: "last", scope: !4379, file: !3, line: 1613, type: !1648)
!4385 = !DILocalVariable(name: "e1", scope: !4386, file: !3, line: 1639, type: !925)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 1638, column: 2)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 1632, column: 11)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 1616, column: 5)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 1615, column: 3)
!4390 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1615, column: 3)
!4391 = !DILocalVariable(name: "ei1", scope: !4386, file: !3, line: 1640, type: !2458)
!4392 = !DILocalVariable(name: "bi", scope: !4393, file: !3, line: 1663, type: !4095)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 1662, column: 2)
!4394 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 1659, column: 11)
!4395 = !DILocalVariable(name: "stmt", scope: !4396, file: !3, line: 1672, type: !1648)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 1671, column: 6)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 1669, column: 4)
!4398 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 1669, column: 4)
!4399 = !DILocation(line: 0, scope: !4379)
!4400 = !DILocation(line: 1611, column: 3, scope: !4379)
!4401 = !DILocation(line: 1612, column: 3, scope: !4379)
!4402 = !DILocation(line: 1615, column: 3, scope: !4390)
!4403 = !DILocation(line: 0, scope: !4389)
!4404 = !DILocation(line: 0, scope: !4387)
!4405 = !DILocation(line: 0, scope: !4386)
!4406 = !DILocation(line: 0, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1644, column: 8)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1643, column: 6)
!4409 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 1642, column: 8)
!4410 = !DILocation(line: 0, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 1644, column: 8)
!4412 = !DILocation(line: 0, scope: !4393)
!4413 = !DILocation(line: 0, scope: !4398)
!4414 = !DILocation(line: 1615, column: 3, scope: !4389)
!4415 = !DILocation(line: 1632, column: 11, scope: !4387)
!4416 = !DILocation(line: 1632, column: 14, scope: !4387)
!4417 = !DILocation(line: 1632, column: 26, scope: !4387)
!4418 = !DILocation(line: 1632, column: 19, scope: !4387)
!4419 = !DILocation(line: 1633, column: 4, scope: !4387)
!4420 = !DILocation(line: 1633, column: 18, scope: !4387)
!4421 = !DILocation(line: 1633, column: 15, scope: !4387)
!4422 = !DILocation(line: 1634, column: 4, scope: !4387)
!4423 = !DILocation(line: 1634, column: 7, scope: !4387)
!4424 = !DILocation(line: 1635, column: 4, scope: !4387)
!4425 = !DILocation(line: 1635, column: 25, scope: !4387)
!4426 = !DILocation(line: 1635, column: 28, scope: !4387)
!4427 = !DILocation(line: 1635, column: 7, scope: !4387)
!4428 = !DILocation(line: 1635, column: 35, scope: !4387)
!4429 = !DILocation(line: 1635, column: 43, scope: !4387)
!4430 = !DILocation(line: 1635, column: 40, scope: !4387)
!4431 = !DILocation(line: 1636, column: 4, scope: !4387)
!4432 = !DILocation(line: 1636, column: 26, scope: !4387)
!4433 = !DILocation(line: 1636, column: 29, scope: !4387)
!4434 = !DILocation(line: 1636, column: 15, scope: !4387)
!4435 = !DILocation(line: 1636, column: 36, scope: !4387)
!4436 = !DILocation(line: 1637, column: 4, scope: !4387)
!4437 = !DILocation(line: 1637, column: 7, scope: !4387)
!4438 = !DILocation(line: 1637, column: 26, scope: !4387)
!4439 = !DILocation(line: 1632, column: 11, scope: !4388)
!4440 = !DILocation(line: 1639, column: 4, scope: !4386)
!4441 = !DILocation(line: 1640, column: 4, scope: !4386)
!4442 = !DILocation(line: 1642, column: 8, scope: !4409)
!4443 = !DILocation(line: 1642, column: 8, scope: !4386)
!4444 = !DILocation(line: 1644, column: 8, scope: !4407)
!4445 = !DILocation(line: 1644, column: 8, scope: !4411)
!4446 = !DILocation(line: 1645, column: 24, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1645, column: 7)
!4448 = !DILocation(line: 1645, column: 28, scope: !4447)
!4449 = !DILocation(line: 1645, column: 8, scope: !4447)
!4450 = !DILocation(line: 1646, column: 7, scope: !4447)
!4451 = !DILocation(line: 1646, column: 27, scope: !4447)
!4452 = !DILocation(line: 1646, column: 31, scope: !4447)
!4453 = !DILocation(line: 1646, column: 11, scope: !4447)
!4454 = !DILocation(line: 1647, column: 7, scope: !4447)
!4455 = !DILocation(line: 1647, column: 27, scope: !4447)
!4456 = !DILocation(line: 1647, column: 31, scope: !4447)
!4457 = !DILocation(line: 1647, column: 11, scope: !4447)
!4458 = !DILocation(line: 1645, column: 7, scope: !4411)
!4459 = !DILocation(line: 1648, column: 23, scope: !4447)
!4460 = !DILocation(line: 1648, column: 5, scope: !4447)
!4461 = distinct !{!4461, !4444, !4462}
!4462 = !DILocation(line: 1648, column: 60, scope: !4407)
!4463 = !DILocation(line: 1651, column: 27, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1651, column: 10)
!4465 = !DILocation(line: 1651, column: 30, scope: !4464)
!4466 = !DILocation(line: 1651, column: 11, scope: !4464)
!4467 = !DILocation(line: 1652, column: 3, scope: !4464)
!4468 = !DILocation(line: 1652, column: 23, scope: !4464)
!4469 = !DILocation(line: 1652, column: 26, scope: !4464)
!4470 = !DILocation(line: 1652, column: 7, scope: !4464)
!4471 = !DILocation(line: 1653, column: 3, scope: !4464)
!4472 = !DILocation(line: 1653, column: 23, scope: !4464)
!4473 = !DILocation(line: 1653, column: 26, scope: !4464)
!4474 = !DILocation(line: 1653, column: 7, scope: !4464)
!4475 = !DILocation(line: 1651, column: 10, scope: !4409)
!4476 = !DILocation(line: 1654, column: 26, scope: !4464)
!4477 = !DILocation(line: 1654, column: 8, scope: !4464)
!4478 = !DILocation(line: 1655, column: 2, scope: !4387)
!4479 = !DILocation(line: 1655, column: 2, scope: !4386)
!4480 = !DILocation(line: 1659, column: 11, scope: !4394)
!4481 = !DILocation(line: 1659, column: 14, scope: !4394)
!4482 = !DILocation(line: 1659, column: 22, scope: !4394)
!4483 = !DILocation(line: 1659, column: 19, scope: !4394)
!4484 = !DILocation(line: 1659, column: 37, scope: !4394)
!4485 = !DILocation(line: 1659, column: 48, scope: !4394)
!4486 = !DILocation(line: 1660, column: 4, scope: !4394)
!4487 = !DILocation(line: 1660, column: 51, scope: !4394)
!4488 = !DILocation(line: 1660, column: 7, scope: !4394)
!4489 = !DILocation(line: 1661, column: 4, scope: !4394)
!4490 = !DILocation(line: 1661, column: 45, scope: !4394)
!4491 = !DILocation(line: 1661, column: 48, scope: !4394)
!4492 = !DILocation(line: 1661, column: 56, scope: !4394)
!4493 = !DILocation(line: 1661, column: 8, scope: !4394)
!4494 = !DILocation(line: 1659, column: 11, scope: !4388)
!4495 = !DILocation(line: 1663, column: 4, scope: !4393)
!4496 = !DILocation(line: 1669, column: 14, scope: !4398)
!4497 = !DILocation(line: 1669, column: 28, scope: !4398)
!4498 = !DILocation(line: 1669, column: 31, scope: !4398)
!4499 = !DILocation(line: 1669, column: 9, scope: !4398)
!4500 = !DILocation(line: 1669, column: 39, scope: !4397)
!4501 = !DILocation(line: 1669, column: 38, scope: !4397)
!4502 = !DILocation(line: 1669, column: 4, scope: !4398)
!4503 = !DILocation(line: 1672, column: 22, scope: !4396)
!4504 = !DILocation(line: 0, scope: !4396)
!4505 = !DILocation(line: 1673, column: 12, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1673, column: 12)
!4507 = !DILocation(line: 1676, column: 5, scope: !4506)
!4508 = !DILocation(line: 1676, column: 8, scope: !4506)
!4509 = !DILocation(line: 1673, column: 12, scope: !4396)
!4510 = !DILocation(line: 1678, column: 23, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1677, column: 3)
!4512 = !DILocation(line: 1678, column: 5, scope: !4511)
!4513 = !DILocation(line: 1679, column: 5, scope: !4511)
!4514 = !DILocation(line: 1670, column: 9, scope: !4397)
!4515 = !DILocation(line: 1669, column: 4, scope: !4397)
!4516 = distinct !{!4516, !4502, !4517}
!4517 = !DILocation(line: 1681, column: 6, scope: !4398)
!4518 = !DILocation(line: 1682, column: 2, scope: !4394)
!4519 = !DILocation(line: 1682, column: 2, scope: !4393)
!4520 = distinct !{!4520, !4402, !4521}
!4521 = !DILocation(line: 1683, column: 5, scope: !4390)
!4522 = !DILocation(line: 1684, column: 3, scope: !4379)
!4523 = !DILocation(line: 1685, column: 1, scope: !4379)
!4524 = distinct !DISubprogram(name: "combine_predictions_for_bb", scope: !3, file: !3, line: 766, type: !3495, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4525)
!4525 = !{!4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4546, !4547, !4550, !4551, !4556, !4562}
!4526 = !DILocalVariable(name: "bb", arg: 1, scope: !4524, file: !3, line: 766, type: !1612)
!4527 = !DILocalVariable(name: "best_probability", scope: !4524, file: !3, line: 768, type: !912)
!4528 = !DILocalVariable(name: "best_predictor", scope: !4524, file: !3, line: 769, type: !603)
!4529 = !DILocalVariable(name: "combined_probability", scope: !4524, file: !3, line: 770, type: !912)
!4530 = !DILocalVariable(name: "d", scope: !4524, file: !3, line: 771, type: !912)
!4531 = !DILocalVariable(name: "first_match", scope: !4524, file: !3, line: 772, type: !911)
!4532 = !DILocalVariable(name: "found", scope: !4524, file: !3, line: 773, type: !911)
!4533 = !DILocalVariable(name: "pred", scope: !4524, file: !3, line: 774, type: !919)
!4534 = !DILocalVariable(name: "nedges", scope: !4524, file: !3, line: 775, type: !912)
!4535 = !DILocalVariable(name: "e", scope: !4524, file: !3, line: 776, type: !925)
!4536 = !DILocalVariable(name: "first", scope: !4524, file: !3, line: 776, type: !925)
!4537 = !DILocalVariable(name: "second", scope: !4524, file: !3, line: 776, type: !925)
!4538 = !DILocalVariable(name: "ei", scope: !4524, file: !3, line: 777, type: !2458)
!4539 = !DILocalVariable(name: "preds", scope: !4524, file: !3, line: 778, type: !1548)
!4540 = !DILocalVariable(name: "predictor", scope: !4541, file: !3, line: 817, type: !603)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 816, column: 2)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 815, column: 7)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 815, column: 7)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 812, column: 5)
!4545 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 811, column: 7)
!4546 = !DILocalVariable(name: "probability", scope: !4541, file: !3, line: 818, type: !912)
!4547 = !DILocalVariable(name: "pred2", scope: !4548, file: !3, line: 828, type: !919)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 827, column: 6)
!4549 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 826, column: 8)
!4550 = !DILocalVariable(name: "prob", scope: !4548, file: !3, line: 829, type: !912)
!4551 = !DILocalVariable(name: "probability2", scope: !4552, file: !3, line: 834, type: !912)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 833, column: 11)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 832, column: 13)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 831, column: 15)
!4555 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 831, column: 15)
!4556 = !DILocalVariable(name: "predictor", scope: !4557, file: !3, line: 892, type: !603)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 891, column: 2)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 890, column: 7)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 890, column: 7)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 889, column: 5)
!4561 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 888, column: 7)
!4562 = !DILocalVariable(name: "probability", scope: !4557, file: !3, line: 893, type: !912)
!4563 = !DILocation(line: 0, scope: !4524)
!4564 = !DILocation(line: 776, column: 3, scope: !4524)
!4565 = !DILocation(line: 777, column: 3, scope: !4524)
!4566 = !DILocation(line: 780, column: 3, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 780, column: 3)
!4568 = !DILocation(line: 0, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 780, column: 3)
!4570 = !DILocation(line: 776, column: 25, scope: !4524)
!4571 = !DILocation(line: 776, column: 11, scope: !4524)
!4572 = !DILocation(line: 775, column: 7, scope: !4524)
!4573 = !DILocation(line: 780, column: 3, scope: !4569)
!4574 = !DILocation(line: 781, column: 11, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 781, column: 9)
!4576 = !DILocation(line: 781, column: 14, scope: !4575)
!4577 = !DILocation(line: 781, column: 20, scope: !4575)
!4578 = !DILocation(line: 781, column: 9, scope: !4569)
!4579 = !DILocation(line: 783, column: 9, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 782, column: 7)
!4581 = !DILocation(line: 784, column: 6, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 784, column: 6)
!4583 = !DILocation(line: 784, column: 16, scope: !4582)
!4584 = !DILocation(line: 784, column: 12, scope: !4582)
!4585 = !DILocation(line: 786, column: 6, scope: !4580)
!4586 = !DILocation(line: 788, column: 7, scope: !4580)
!4587 = distinct !{!4587, !4566, !4588}
!4588 = !DILocation(line: 788, column: 7, scope: !4567)
!4589 = !DILocation(line: 796, column: 14, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 796, column: 7)
!4591 = !DILocation(line: 796, column: 7, scope: !4524)
!4592 = !DILocation(line: 798, column: 16, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 798, column: 11)
!4594 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 797, column: 5)
!4595 = !DILocation(line: 798, column: 12, scope: !4593)
!4596 = !DILocation(line: 798, column: 11, scope: !4594)
!4597 = !DILocation(line: 799, column: 2, scope: !4593)
!4598 = !DILocation(line: 800, column: 7, scope: !4594)
!4599 = !DILocation(line: 801, column: 11, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 801, column: 11)
!4601 = !DILocation(line: 801, column: 11, scope: !4594)
!4602 = !DILocation(line: 803, column: 16, scope: !4600)
!4603 = !DILocation(line: 802, column: 2, scope: !4600)
!4604 = !DILocation(line: 807, column: 7, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 807, column: 7)
!4606 = !DILocation(line: 807, column: 7, scope: !4524)
!4607 = !DILocation(line: 808, column: 56, scope: !4605)
!4608 = !DILocation(line: 808, column: 5, scope: !4605)
!4609 = !DILocation(line: 810, column: 33, scope: !4524)
!4610 = !DILocation(line: 810, column: 49, scope: !4524)
!4611 = !DILocation(line: 810, column: 11, scope: !4524)
!4612 = !DILocation(line: 811, column: 7, scope: !4545)
!4613 = !DILocation(line: 811, column: 7, scope: !4524)
!4614 = !DILocation(line: 815, column: 46, scope: !4543)
!4615 = !DILocation(line: 815, column: 12, scope: !4543)
!4616 = !DILocation(line: 769, column: 21, scope: !4524)
!4617 = !DILocation(line: 768, column: 7, scope: !4524)
!4618 = !DILocation(line: 0, scope: !4543)
!4619 = !DILocation(line: 815, column: 7, scope: !4543)
!4620 = !DILocation(line: 817, column: 40, scope: !4541)
!4621 = !DILocation(line: 0, scope: !4541)
!4622 = !DILocation(line: 818, column: 28, scope: !4541)
!4623 = !DILocation(line: 820, column: 14, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 820, column: 8)
!4625 = !DILocation(line: 820, column: 22, scope: !4624)
!4626 = !DILocation(line: 821, column: 37, scope: !4624)
!4627 = !DILocation(line: 820, column: 8, scope: !4541)
!4628 = !DILocation(line: 826, column: 23, scope: !4549)
!4629 = !DILocation(line: 826, column: 8, scope: !4541)
!4630 = !DILocation(line: 0, scope: !4548)
!4631 = !DILocation(line: 0, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 839, column: 10)
!4633 = !DILocation(line: 0, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 844, column: 10)
!4635 = !DILocation(line: 831, column: 20, scope: !4555)
!4636 = !DILocation(line: 829, column: 12, scope: !4548)
!4637 = !DILocation(line: 0, scope: !4555)
!4638 = !DILocation(line: 831, column: 15, scope: !4555)
!4639 = !DILocation(line: 832, column: 19, scope: !4553)
!4640 = !DILocation(line: 832, column: 27, scope: !4553)
!4641 = !DILocation(line: 832, column: 37, scope: !4553)
!4642 = !DILocation(line: 832, column: 50, scope: !4553)
!4643 = !DILocation(line: 832, column: 13, scope: !4554)
!4644 = !DILocation(line: 0, scope: !4552)
!4645 = !DILocation(line: 836, column: 17, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 836, column: 10)
!4647 = !DILocation(line: 836, column: 25, scope: !4646)
!4648 = !DILocation(line: 836, column: 10, scope: !4552)
!4649 = !DILocation(line: 840, column: 24, scope: !4632)
!4650 = !DILocation(line: 839, column: 47, scope: !4632)
!4651 = !DILocation(line: 839, column: 10, scope: !4552)
!4652 = !DILocation(line: 844, column: 64, scope: !4634)
!4653 = !DILocation(line: 844, column: 47, scope: !4634)
!4654 = !DILocation(line: 845, column: 67, scope: !4634)
!4655 = !DILocation(line: 845, column: 50, scope: !4634)
!4656 = !DILocation(line: 846, column: 8, scope: !4634)
!4657 = !DILocation(line: 831, column: 85, scope: !4554)
!4658 = !DILocation(line: 831, column: 15, scope: !4554)
!4659 = distinct !{!4659, !4638, !4660}
!4660 = !DILocation(line: 847, column: 4, scope: !4555)
!4661 = !DILocation(line: 848, column: 13, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 848, column: 12)
!4663 = !DILocation(line: 848, column: 12, scope: !4548)
!4664 = !DILocation(line: 850, column: 6, scope: !4548)
!4665 = !DILocation(line: 852, column: 30, scope: !4541)
!4666 = !DILocation(line: 853, column: 29, scope: !4541)
!4667 = !DILocation(line: 854, column: 29, scope: !4541)
!4668 = !DILocation(line: 854, column: 9, scope: !4541)
!4669 = !DILocation(line: 853, column: 9, scope: !4541)
!4670 = !DILocation(line: 857, column: 10, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 857, column: 8)
!4672 = !DILocation(line: 857, column: 8, scope: !4541)
!4673 = !DILocation(line: 861, column: 31, scope: !4671)
!4674 = !DILocation(line: 862, column: 11, scope: !4671)
!4675 = !DILocation(line: 862, column: 9, scope: !4671)
!4676 = !DILocation(line: 863, column: 13, scope: !4671)
!4677 = !DILocation(line: 863, column: 34, scope: !4671)
!4678 = !DILocation(line: 863, column: 32, scope: !4671)
!4679 = !DILocation(line: 863, column: 36, scope: !4671)
!4680 = !DILocation(line: 861, column: 29, scope: !4671)
!4681 = !DILocation(line: 0, scope: !4671)
!4682 = !DILocation(line: 815, column: 73, scope: !4542)
!4683 = !DILocation(line: 815, column: 7, scope: !4542)
!4684 = distinct !{!4684, !4619, !4685}
!4685 = !DILocation(line: 864, column: 2, scope: !4543)
!4686 = !DILocation(line: 871, column: 7, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 871, column: 7)
!4688 = !DILocation(line: 773, column: 8, scope: !4524)
!4689 = !DILocation(line: 770, column: 7, scope: !4524)
!4690 = !DILocation(line: 871, column: 45, scope: !4687)
!4691 = !DILocation(line: 871, column: 7, scope: !4524)
!4692 = !DILocation(line: 874, column: 8, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 874, column: 7)
!4694 = !DILocation(line: 0, scope: !4693)
!4695 = !DILocation(line: 874, column: 7, scope: !4524)
!4696 = !DILocation(line: 875, column: 5, scope: !4693)
!4697 = !DILocation(line: 879, column: 10, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 877, column: 5)
!4699 = !DILocation(line: 878, column: 7, scope: !4698)
!4700 = !DILocation(line: 880, column: 24, scope: !4698)
!4701 = !DILocation(line: 881, column: 10, scope: !4698)
!4702 = !DILocation(line: 880, column: 7, scope: !4698)
!4703 = !DILocation(line: 884, column: 7, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 884, column: 7)
!4705 = !DILocation(line: 884, column: 7, scope: !4524)
!4706 = !DILocation(line: 886, column: 20, scope: !4524)
!4707 = !DILocation(line: 886, column: 3, scope: !4524)
!4708 = !DILocation(line: 888, column: 7, scope: !4524)
!4709 = !DILocation(line: 890, column: 46, scope: !4559)
!4710 = !DILocation(line: 0, scope: !4557)
!4711 = !DILocation(line: 890, column: 12, scope: !4559)
!4712 = !DILocation(line: 0, scope: !4559)
!4713 = !DILocation(line: 890, column: 7, scope: !4559)
!4714 = !DILocation(line: 892, column: 40, scope: !4557)
!4715 = !DILocation(line: 893, column: 28, scope: !4557)
!4716 = !DILocation(line: 895, column: 14, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 895, column: 8)
!4718 = !DILocation(line: 895, column: 25, scope: !4717)
!4719 = !DILocation(line: 895, column: 22, scope: !4717)
!4720 = !DILocation(line: 896, column: 37, scope: !4717)
!4721 = !DILocation(line: 895, column: 8, scope: !4557)
!4722 = !DILocation(line: 897, column: 21, scope: !4557)
!4723 = !DILocation(line: 898, column: 20, scope: !4557)
!4724 = !DILocation(line: 897, column: 4, scope: !4557)
!4725 = !DILocation(line: 890, column: 73, scope: !4558)
!4726 = !DILocation(line: 890, column: 7, scope: !4558)
!4727 = distinct !{!4727, !4713, !4728}
!4728 = !DILocation(line: 899, column: 2, scope: !4559)
!4729 = !DILocation(line: 901, column: 3, scope: !4524)
!4730 = !DILocation(line: 903, column: 12, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 903, column: 7)
!4732 = !DILocation(line: 903, column: 8, scope: !4731)
!4733 = !DILocation(line: 903, column: 7, scope: !4524)
!4734 = !DILocation(line: 905, column: 14, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 904, column: 5)
!4736 = !DILocation(line: 905, column: 26, scope: !4735)
!4737 = !DILocation(line: 906, column: 46, scope: !4735)
!4738 = !DILocation(line: 906, column: 15, scope: !4735)
!4739 = !DILocation(line: 906, column: 27, scope: !4735)
!4740 = !DILocation(line: 907, column: 5, scope: !4735)
!4741 = !DILocation(line: 908, column: 1, scope: !4524)
!4742 = !DILocation(line: 2080, column: 3, scope: !2445)
!4743 = !DILocation(line: 2082, column: 7, scope: !2456)
!4744 = !DILocation(line: 2082, column: 22, scope: !2456)
!4745 = !DILocation(line: 2082, column: 38, scope: !2456)
!4746 = !DILocation(line: 2082, column: 42, scope: !2456)
!4747 = !DILocation(line: 2082, column: 7, scope: !2445)
!4748 = !DILocation(line: 2086, column: 12, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 2086, column: 11)
!4750 = !DILocation(line: 2086, column: 11, scope: !2455)
!4751 = !DILocation(line: 2088, column: 28, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 2087, column: 9)
!4753 = !DILocation(line: 2089, column: 4, scope: !4752)
!4754 = !DILocation(line: 2090, column: 4, scope: !4752)
!4755 = !DILocation(line: 2091, column: 4, scope: !4752)
!4756 = !DILocation(line: 2092, column: 4, scope: !4752)
!4757 = !DILocation(line: 2093, column: 4, scope: !4752)
!4758 = !DILocation(line: 2094, column: 4, scope: !4752)
!4759 = !DILocation(line: 2095, column: 4, scope: !4752)
!4760 = !DILocation(line: 2096, column: 2, scope: !4752)
!4761 = !DILocation(line: 2098, column: 7, scope: !2455)
!4762 = !DILocation(line: 2100, column: 25, scope: !2455)
!4763 = !DILocation(line: 2100, column: 7, scope: !2455)
!4764 = !DILocation(line: 2100, column: 43, scope: !2455)
!4765 = !DILocation(line: 2100, column: 55, scope: !2455)
!4766 = !DILocation(line: 2103, column: 7, scope: !2455)
!4767 = !DILocation(line: 2104, column: 7, scope: !2455)
!4768 = !DILocation(line: 2105, column: 7, scope: !2454)
!4769 = !DILocation(line: 0, scope: !2452)
!4770 = !DILocation(line: 0, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !2452, file: !3, line: 2110, column: 4)
!4772 = !DILocation(line: 0, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 2110, column: 4)
!4774 = !DILocation(line: 0, scope: !2454)
!4775 = !DILocation(line: 0, scope: !2445)
!4776 = !DILocation(line: 2105, column: 7, scope: !2453)
!4777 = !DILocation(line: 2107, column: 4, scope: !2452)
!4778 = !DILocation(line: 2108, column: 4, scope: !2452)
!4779 = !DILocation(line: 2110, column: 4, scope: !4771)
!4780 = !DILocation(line: 2110, column: 4, scope: !4773)
!4781 = !DILocation(line: 2112, column: 21, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 2111, column: 6)
!4783 = !DILocation(line: 2112, column: 36, scope: !4782)
!4784 = !DILocation(line: 2112, column: 55, scope: !4782)
!4785 = !DILocation(line: 2112, column: 52, scope: !4782)
!4786 = !DILocation(line: 2112, column: 8, scope: !4782)
!4787 = !DILocation(line: 2113, column: 20, scope: !4782)
!4788 = !DILocation(line: 2113, column: 35, scope: !4782)
!4789 = !DILocation(line: 2113, column: 8, scope: !4782)
!4790 = distinct !{!4790, !4779, !4791}
!4791 = !DILocation(line: 2116, column: 6, scope: !4771)
!4792 = !DILocation(line: 2117, column: 2, scope: !2453)
!4793 = distinct !{!4793, !4768, !4794}
!4794 = !DILocation(line: 2117, column: 2, scope: !2454)
!4795 = !DILocation(line: 2121, column: 7, scope: !2455)
!4796 = !DILocation(line: 2123, column: 7, scope: !2455)
!4797 = !DILocation(line: 2124, column: 7, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 2124, column: 7)
!4799 = !DILocation(line: 2124, column: 7, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 2124, column: 7)
!4801 = !DILocation(line: 0, scope: !4798)
!4802 = !DILocation(line: 2125, column: 33, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 2125, column: 6)
!4804 = !DILocation(line: 2125, column: 50, scope: !4803)
!4805 = !DILocation(line: 2125, column: 6, scope: !4803)
!4806 = !DILocation(line: 2125, column: 61, scope: !4803)
!4807 = !DILocation(line: 2125, column: 6, scope: !4800)
!4808 = !DILocation(line: 2126, column: 24, scope: !4803)
!4809 = !DILocation(line: 2126, column: 4, scope: !4803)
!4810 = !DILocation(line: 0, scope: !4800)
!4811 = distinct !{!4811, !4797, !4812}
!4812 = !DILocation(line: 2126, column: 69, scope: !4798)
!4813 = !DILocation(line: 2128, column: 7, scope: !2455)
!4814 = !DILocation(line: 2129, column: 7, scope: !2467)
!4815 = !DILocation(line: 0, scope: !2465)
!4816 = !DILocation(line: 0, scope: !2467)
!4817 = !DILocation(line: 2129, column: 7, scope: !2466)
!4818 = !DILocation(line: 2131, column: 4, scope: !2465)
!4819 = !DILocation(line: 2133, column: 22, scope: !2465)
!4820 = !DILocation(line: 2133, column: 39, scope: !2465)
!4821 = !DILocation(line: 2133, column: 4, scope: !2465)
!4822 = !DILocation(line: 2134, column: 4, scope: !2465)
!4823 = !DILocation(line: 2135, column: 20, scope: !2465)
!4824 = !DILocation(line: 2135, column: 8, scope: !2465)
!4825 = !DILocation(line: 2135, column: 18, scope: !2465)
!4826 = !DILocation(line: 2136, column: 2, scope: !2466)
!4827 = distinct !{!4827, !4814, !4828}
!4828 = !DILocation(line: 2136, column: 2, scope: !2467)
!4829 = !DILocation(line: 2138, column: 7, scope: !2455)
!4830 = !DILocation(line: 2139, column: 7, scope: !2455)
!4831 = !DILocation(line: 2140, column: 5, scope: !2455)
!4832 = !DILocation(line: 2141, column: 3, scope: !2445)
!4833 = !DILocation(line: 2142, column: 7, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !2445, file: !3, line: 2142, column: 7)
!4835 = !DILocation(line: 2142, column: 7, scope: !2445)
!4836 = !DILocation(line: 2143, column: 5, scope: !4834)
!4837 = !DILocation(line: 2144, column: 1, scope: !2445)
!4838 = distinct !DISubprogram(name: "counts_to_freqs", scope: !3, file: !3, line: 2018, type: !2550, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4839)
!4839 = !{!4840, !4841, !4842}
!4840 = !DILocalVariable(name: "count_max", scope: !4838, file: !3, line: 2020, type: !2386)
!4841 = !DILocalVariable(name: "true_count_max", scope: !4838, file: !3, line: 2020, type: !2386)
!4842 = !DILocalVariable(name: "bb", scope: !4838, file: !3, line: 2021, type: !1612)
!4843 = !DILocation(line: 0, scope: !4838)
!4844 = !DILocation(line: 2023, column: 3, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 2023, column: 3)
!4846 = !DILocation(line: 0, scope: !4845)
!4847 = !DILocation(line: 2023, column: 3, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2023, column: 3)
!4849 = !DILocation(line: 2024, column: 22, scope: !4848)
!4850 = distinct !{!4850, !4844, !4851}
!4851 = !DILocation(line: 2024, column: 22, scope: !4845)
!4852 = !DILocation(line: 2026, column: 15, scope: !4838)
!4853 = !DILocation(line: 0, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 2027, column: 3)
!4855 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 2027, column: 3)
!4856 = !DILocation(line: 2027, column: 3, scope: !4855)
!4857 = !DILocation(line: 0, scope: !4855)
!4858 = !DILocation(line: 2027, column: 3, scope: !4854)
!4859 = !DILocation(line: 2028, column: 26, scope: !4854)
!4860 = !DILocation(line: 2028, column: 32, scope: !4854)
!4861 = !DILocation(line: 2028, column: 46, scope: !4854)
!4862 = !DILocation(line: 2028, column: 63, scope: !4854)
!4863 = !DILocation(line: 2028, column: 21, scope: !4854)
!4864 = !DILocation(line: 2028, column: 9, scope: !4854)
!4865 = !DILocation(line: 2028, column: 19, scope: !4854)
!4866 = distinct !{!4866, !4856, !4867}
!4867 = !DILocation(line: 2028, column: 65, scope: !4855)
!4868 = !DILocation(line: 2030, column: 10, scope: !4838)
!4869 = !DILocation(line: 2030, column: 3, scope: !4838)
!4870 = distinct !DISubprogram(name: "expensive_function_p", scope: !3, file: !3, line: 2039, type: !3018, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4871)
!4871 = !{!4872, !4873, !4874, !4875, !4876}
!4872 = !DILocalVariable(name: "threshold", arg: 1, scope: !4870, file: !3, line: 2039, type: !912)
!4873 = !DILocalVariable(name: "sum", scope: !4870, file: !3, line: 2041, type: !7)
!4874 = !DILocalVariable(name: "bb", scope: !4870, file: !3, line: 2042, type: !1612)
!4875 = !DILocalVariable(name: "limit", scope: !4870, file: !3, line: 2043, type: !7)
!4876 = !DILocalVariable(name: "insn", scope: !4877, file: !3, line: 2059, type: !1156)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 2058, column: 5)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2057, column: 3)
!4879 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 2057, column: 3)
!4880 = !DILocation(line: 0, scope: !4870)
!4881 = !DILocation(line: 2047, column: 3, scope: !4870)
!4882 = !DILocation(line: 2052, column: 7, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 2052, column: 7)
!4884 = !DILocation(line: 2052, column: 24, scope: !4883)
!4885 = !DILocation(line: 2052, column: 34, scope: !4883)
!4886 = !DILocation(line: 2052, column: 7, scope: !4870)
!4887 = !DILocation(line: 2056, column: 38, scope: !4870)
!4888 = !DILocation(line: 2057, column: 3, scope: !4879)
!4889 = !DILocation(line: 2057, column: 3, scope: !4878)
!4890 = !DILocation(line: 0, scope: !4879)
!4891 = !DILocation(line: 2061, column: 19, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 2061, column: 7)
!4893 = !DILocation(line: 2065, column: 17, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2064, column: 4)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2063, column: 6)
!4896 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2061, column: 7)
!4897 = !DILocation(line: 2061, column: 12, scope: !4892)
!4898 = !DILocation(line: 2061, column: 41, scope: !4896)
!4899 = !DILocation(line: 0, scope: !4892)
!4900 = !DILocation(line: 0, scope: !4877)
!4901 = !DILocation(line: 2061, column: 38, scope: !4896)
!4902 = !DILocation(line: 2061, column: 7, scope: !4892)
!4903 = !DILocation(line: 2063, column: 6, scope: !4895)
!4904 = !DILocation(line: 2063, column: 6, scope: !4896)
!4905 = !DILocation(line: 2065, column: 10, scope: !4894)
!4906 = !DILocation(line: 2066, column: 14, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2066, column: 10)
!4908 = !DILocation(line: 2066, column: 10, scope: !4894)
!4909 = !DILocation(line: 2062, column: 12, scope: !4896)
!4910 = !DILocation(line: 2061, column: 7, scope: !4896)
!4911 = distinct !{!4911, !4902, !4912}
!4912 = !DILocation(line: 2068, column: 2, scope: !4892)
!4913 = !DILocation(line: 0, scope: !4878)
!4914 = distinct !{!4914, !4888, !4915}
!4915 = !DILocation(line: 2069, column: 5, scope: !4879)
!4916 = !DILocation(line: 2072, column: 1, scope: !4870)
!4917 = distinct !DISubprogram(name: "single_succ_edge", scope: !142, file: !142, line: 643, type: !4918, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4920)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!925, !2978}
!4920 = !{!4921}
!4921 = !DILocalVariable(name: "bb", arg: 1, scope: !4917, file: !142, line: 643, type: !2978)
!4922 = !DILocation(line: 0, scope: !4917)
!4923 = !DILocation(line: 645, column: 3, scope: !4917)
!4924 = !DILocation(line: 646, column: 10, scope: !4917)
!4925 = !DILocation(line: 646, column: 3, scope: !4917)
!4926 = distinct !DISubprogram(name: "ei_start_1", scope: !142, file: !142, line: 696, type: !4927, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4929)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{!2458, !2463}
!4929 = !{!4930, !4931}
!4930 = !DILocalVariable(name: "ev", arg: 1, scope: !4926, file: !142, line: 696, type: !2463)
!4931 = !DILocalVariable(name: "i", scope: !4926, file: !142, line: 698, type: !2458)
!4932 = !DILocation(line: 0, scope: !4926)
!4933 = !DILocation(line: 700, column: 5, scope: !4926)
!4934 = !DILocation(line: 700, column: 11, scope: !4926)
!4935 = !DILocation(line: 701, column: 5, scope: !4926)
!4936 = !DILocation(line: 701, column: 15, scope: !4926)
!4937 = !DILocation(line: 703, column: 3, scope: !4926)
!4938 = distinct !DISubprogram(name: "ei_cond", scope: !142, file: !142, line: 771, type: !4939, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4942)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{!911, !2458, !4941}
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!4942 = !{!4943, !4944}
!4943 = !DILocalVariable(name: "ei", arg: 1, scope: !4938, file: !142, line: 771, type: !2458)
!4944 = !DILocalVariable(name: "p", arg: 2, scope: !4938, file: !142, line: 771, type: !4941)
!4945 = !DILocation(line: 0, scope: !4938)
!4946 = !DILocation(line: 773, column: 8, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4938, file: !142, line: 773, column: 7)
!4948 = !DILocation(line: 773, column: 7, scope: !4938)
!4949 = !DILocation(line: 775, column: 12, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !142, line: 774, column: 5)
!4951 = !DILocation(line: 776, column: 7, scope: !4950)
!4952 = !DILocation(line: 781, column: 7, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4947, file: !142, line: 779, column: 5)
!4954 = !DILocation(line: 0, scope: !4947)
!4955 = !DILocation(line: 783, column: 1, scope: !4938)
!4956 = distinct !DISubprogram(name: "ei_next", scope: !142, file: !142, line: 736, type: !4957, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4960)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{null, !4959}
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!4960 = !{!4961}
!4961 = !DILocalVariable(name: "i", arg: 1, scope: !4956, file: !142, line: 736, type: !4959)
!4962 = !DILocation(line: 0, scope: !4956)
!4963 = !DILocation(line: 738, column: 3, scope: !4956)
!4964 = !DILocation(line: 739, column: 11, scope: !4956)
!4965 = !DILocation(line: 740, column: 1, scope: !4956)
!4966 = distinct !DISubprogram(name: "estimate_loops", scope: !3, file: !3, line: 1996, type: !2446, scopeLine: 1997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4967)
!4967 = !{!4968, !4969}
!4968 = !DILocalVariable(name: "tovisit", scope: !4966, file: !3, line: 1998, type: !1881)
!4969 = !DILocalVariable(name: "bb", scope: !4966, file: !3, line: 1999, type: !1612)
!4970 = !DILocation(line: 1998, column: 20, scope: !4966)
!4971 = !DILocation(line: 0, scope: !4966)
!4972 = !DILocation(line: 2002, column: 7, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 2002, column: 7)
!4974 = !DILocation(line: 2002, column: 26, scope: !4973)
!4975 = !DILocation(line: 2002, column: 7, scope: !4966)
!4976 = !DILocation(line: 2003, column: 30, scope: !4973)
!4977 = !DILocation(line: 2003, column: 45, scope: !4973)
!4978 = !DILocation(line: 2003, column: 56, scope: !4973)
!4979 = !DILocation(line: 2003, column: 5, scope: !4973)
!4980 = !DILocation(line: 2006, column: 3, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 2006, column: 3)
!4982 = !DILocation(line: 0, scope: !4981)
!4983 = !DILocation(line: 2008, column: 36, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 2007, column: 5)
!4985 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 2006, column: 3)
!4986 = !DILocation(line: 2008, column: 7, scope: !4984)
!4987 = !DILocation(line: 2006, column: 3, scope: !4985)
!4988 = distinct !{!4988, !4980, !4989}
!4989 = !DILocation(line: 2009, column: 5, scope: !4981)
!4990 = !DILocation(line: 2010, column: 19, scope: !4966)
!4991 = !DILocation(line: 2010, column: 3, scope: !4966)
!4992 = !DILocation(line: 2011, column: 3, scope: !4966)
!4993 = !DILocation(line: 2012, column: 1, scope: !4966)
!4994 = distinct !DISubprogram(name: "compute_function_frequency", scope: !3, file: !3, line: 2148, type: !2446, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4995)
!4995 = !{!4996}
!4996 = !DILocalVariable(name: "bb", scope: !4994, file: !3, line: 2150, type: !1612)
!4997 = !DILocation(line: 2152, column: 8, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 2152, column: 7)
!4999 = !DILocation(line: 2152, column: 25, scope: !4998)
!5000 = !DILocation(line: 2152, column: 21, scope: !4998)
!5001 = !DILocation(line: 2154, column: 37, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 2154, column: 11)
!5003 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 2153, column: 5)
!5004 = !DILocation(line: 2154, column: 11, scope: !5002)
!5005 = !DILocation(line: 2155, column: 4, scope: !5002)
!5006 = !DILocation(line: 2154, column: 11, scope: !5003)
!5007 = !DILocation(line: 2156, column: 9, scope: !5002)
!5008 = !DILocation(line: 2156, column: 15, scope: !5002)
!5009 = !DILocation(line: 2156, column: 34, scope: !5002)
!5010 = !DILocation(line: 2157, column: 41, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 2157, column: 16)
!5012 = !DILocation(line: 2157, column: 16, scope: !5011)
!5013 = !DILocation(line: 2158, column: 9, scope: !5011)
!5014 = !DILocation(line: 2157, column: 16, scope: !5002)
!5015 = !DILocation(line: 2159, column: 9, scope: !5011)
!5016 = !DILocation(line: 2159, column: 15, scope: !5011)
!5017 = !DILocation(line: 2159, column: 34, scope: !5011)
!5018 = !DILocation(line: 2162, column: 3, scope: !4994)
!5019 = !DILocation(line: 2162, column: 9, scope: !4994)
!5020 = !DILocation(line: 2162, column: 28, scope: !4994)
!5021 = !DILocation(line: 2163, column: 3, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 2163, column: 3)
!5023 = !DILocation(line: 2163, column: 3, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 2163, column: 3)
!5025 = !DILocation(line: 0, scope: !5022)
!5026 = !DILocation(line: 0, scope: !4994)
!5027 = !DILocation(line: 2165, column: 11, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 2165, column: 11)
!5029 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 2164, column: 5)
!5030 = !DILocation(line: 2165, column: 11, scope: !5029)
!5031 = !DILocation(line: 2167, column: 4, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 2166, column: 2)
!5033 = !DILocation(line: 2167, column: 10, scope: !5032)
!5034 = !DILocation(line: 2167, column: 29, scope: !5032)
!5035 = !DILocation(line: 2168, column: 4, scope: !5032)
!5036 = !DILocation(line: 2170, column: 12, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 2170, column: 11)
!5038 = !DILocation(line: 2170, column: 11, scope: !5029)
!5039 = !DILocation(line: 2171, column: 2, scope: !5037)
!5040 = !DILocation(line: 2171, column: 8, scope: !5037)
!5041 = !DILocation(line: 2171, column: 27, scope: !5037)
!5042 = !DILocation(line: 0, scope: !5024)
!5043 = distinct !{!5043, !5021, !5044}
!5044 = !DILocation(line: 2172, column: 5, scope: !5022)
!5045 = !DILocation(line: 2173, column: 1, scope: !4994)
!5046 = distinct !DISubprogram(name: "choose_function_section", scope: !3, file: !3, line: 2177, type: !2446, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!5047 = !DILocation(line: 2179, column: 7, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 2179, column: 7)
!5049 = !DILocation(line: 2180, column: 19, scope: !5048)
!5050 = !DILocation(line: 2180, column: 11, scope: !5048)
!5051 = !DILocation(line: 2180, column: 7, scope: !5048)
!5052 = !DILocation(line: 2185, column: 10, scope: !5048)
!5053 = !DILocation(line: 2191, column: 7, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 2191, column: 7)
!5055 = !DILocation(line: 2179, column: 7, scope: !5046)
!5056 = !DILocation(line: 2194, column: 7, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 2194, column: 7)
!5058 = !DILocation(line: 2194, column: 13, scope: !5057)
!5059 = !DILocation(line: 2194, column: 32, scope: !5057)
!5060 = !DILocation(line: 2194, column: 7, scope: !5046)
!5061 = !DILocation(line: 2196, column: 21, scope: !5057)
!5062 = !DILocation(line: 2196, column: 7, scope: !5057)
!5063 = !DILocation(line: 2195, column: 5, scope: !5057)
!5064 = !DILocation(line: 2195, column: 47, scope: !5057)
!5065 = !DILocation(line: 2197, column: 7, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 2197, column: 7)
!5067 = !DILocation(line: 0, scope: !5066)
!5068 = !DILocation(line: 2197, column: 13, scope: !5066)
!5069 = !DILocation(line: 2197, column: 32, scope: !5066)
!5070 = !DILocation(line: 2197, column: 7, scope: !5046)
!5071 = !DILocation(line: 2199, column: 21, scope: !5066)
!5072 = !DILocation(line: 2199, column: 7, scope: !5066)
!5073 = !DILocation(line: 2198, column: 5, scope: !5066)
!5074 = !DILocation(line: 2198, column: 47, scope: !5066)
!5075 = !DILocation(line: 2201, column: 1, scope: !5046)
!5076 = distinct !DISubprogram(name: "build_predict_expr", scope: !3, file: !3, line: 2211, type: !5077, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5079)
!5077 = !DISubroutineType(types: !5078)
!5078 = !{!984, !603, !812}
!5079 = !{!5080, !5081, !5082}
!5080 = !DILocalVariable(name: "predictor", arg: 1, scope: !5076, file: !3, line: 2211, type: !603)
!5081 = !DILocalVariable(name: "taken", arg: 2, scope: !5076, file: !3, line: 2211, type: !812)
!5082 = !DILocalVariable(name: "t", scope: !5076, file: !3, line: 2213, type: !984)
!5083 = !DILocation(line: 0, scope: !5076)
!5084 = !DILocation(line: 2213, column: 12, scope: !5076)
!5085 = !DILocation(line: 2215, column: 3, scope: !5076)
!5086 = !DILocation(line: 2216, column: 3, scope: !5076)
!5087 = distinct !DISubprogram(name: "predictor_name", scope: !3, file: !3, line: 2220, type: !5088, scopeLine: 2221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5090)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!917, !603}
!5090 = !{!5091}
!5091 = !DILocalVariable(name: "predictor", arg: 1, scope: !5087, file: !3, line: 2220, type: !603)
!5092 = !DILocation(line: 0, scope: !5087)
!5093 = !DILocation(line: 2222, column: 10, scope: !5087)
!5094 = !DILocation(line: 2222, column: 36, scope: !5087)
!5095 = !DILocation(line: 2222, column: 3, scope: !5087)
!5096 = distinct !DISubprogram(name: "gate_estimate_probability", scope: !3, file: !3, line: 2204, type: !2479, scopeLine: 2205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!5097 = !DILocation(line: 2206, column: 10, scope: !5096)
!5098 = !DILocation(line: 2206, column: 3, scope: !5096)
!5099 = distinct !DISubprogram(name: "tree_estimate_probability_driver", scope: !3, file: !3, line: 1731, type: !2483, scopeLine: 1732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5100)
!5100 = !{!5101}
!5101 = !DILocalVariable(name: "nb_loops", scope: !5099, file: !3, line: 1733, type: !7)
!5102 = !DILocation(line: 1735, column: 3, scope: !5099)
!5103 = !DILocation(line: 1736, column: 7, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1736, column: 7)
!5105 = !DILocation(line: 1736, column: 17, scope: !5104)
!5106 = !DILocation(line: 1736, column: 21, scope: !5104)
!5107 = !DILocation(line: 1736, column: 32, scope: !5104)
!5108 = !DILocation(line: 1736, column: 7, scope: !5099)
!5109 = !DILocation(line: 1737, column: 5, scope: !5104)
!5110 = !DILocation(line: 1739, column: 3, scope: !5099)
!5111 = !DILocation(line: 1741, column: 14, scope: !5099)
!5112 = !DILocation(line: 0, scope: !5099)
!5113 = !DILocation(line: 1742, column: 16, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1742, column: 7)
!5115 = !DILocation(line: 1742, column: 7, scope: !5099)
!5116 = !DILocation(line: 1743, column: 5, scope: !5114)
!5117 = !DILocation(line: 1745, column: 3, scope: !5099)
!5118 = !DILocation(line: 1747, column: 7, scope: !5099)
!5119 = !DILocation(line: 1748, column: 5, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1747, column: 7)
!5121 = !DILocation(line: 1750, column: 3, scope: !5099)
!5122 = !DILocation(line: 1751, column: 7, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1751, column: 7)
!5124 = !DILocation(line: 1751, column: 17, scope: !5123)
!5125 = !DILocation(line: 1751, column: 21, scope: !5123)
!5126 = !DILocation(line: 1751, column: 32, scope: !5123)
!5127 = !DILocation(line: 1751, column: 7, scope: !5099)
!5128 = !DILocation(line: 1752, column: 5, scope: !5123)
!5129 = !DILocation(line: 1753, column: 7, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1753, column: 7)
!5131 = !DILocation(line: 1753, column: 22, scope: !5130)
!5132 = !DILocation(line: 1753, column: 7, scope: !5099)
!5133 = !DILocation(line: 1754, column: 20, scope: !5130)
!5134 = !DILocation(line: 1754, column: 5, scope: !5130)
!5135 = !DILocation(line: 1755, column: 3, scope: !5099)
!5136 = distinct !DISubprogram(name: "strip_predict_hints", scope: !3, file: !3, line: 1291, type: !2483, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5137)
!5137 = !{!5138, !5139, !5140, !5141, !5145, !5149}
!5138 = !DILocalVariable(name: "bb", scope: !5136, file: !3, line: 1293, type: !1612)
!5139 = !DILocalVariable(name: "ass_stmt", scope: !5136, file: !3, line: 1294, type: !1648)
!5140 = !DILocalVariable(name: "var", scope: !5136, file: !3, line: 1295, type: !984)
!5141 = !DILocalVariable(name: "bi", scope: !5142, file: !3, line: 1299, type: !4095)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 1298, column: 5)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 1297, column: 3)
!5144 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1297, column: 3)
!5145 = !DILocalVariable(name: "stmt", scope: !5146, file: !3, line: 1302, type: !1648)
!5146 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 1301, column: 2)
!5147 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 1300, column: 7)
!5148 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1300, column: 7)
!5149 = !DILocalVariable(name: "fndecl", scope: !5150, file: !3, line: 1311, type: !984)
!5150 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 1310, column: 6)
!5151 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1309, column: 13)
!5152 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 1304, column: 8)
!5153 = !DILocation(line: 1297, column: 3, scope: !5144)
!5154 = !DILocation(line: 0, scope: !5142)
!5155 = !DILocation(line: 0, scope: !5148)
!5156 = !DILocation(line: 1297, column: 3, scope: !5143)
!5157 = !DILocation(line: 0, scope: !5144)
!5158 = !DILocation(line: 0, scope: !5136)
!5159 = !DILocation(line: 1299, column: 7, scope: !5142)
!5160 = !DILocation(line: 1300, column: 17, scope: !5148)
!5161 = !DILocation(line: 1300, column: 12, scope: !5148)
!5162 = !DILocation(line: 1300, column: 37, scope: !5147)
!5163 = !DILocation(line: 1300, column: 36, scope: !5147)
!5164 = !DILocation(line: 1300, column: 7, scope: !5148)
!5165 = !DILocation(line: 1302, column: 18, scope: !5146)
!5166 = !DILocation(line: 0, scope: !5146)
!5167 = !DILocation(line: 1304, column: 8, scope: !5152)
!5168 = !DILocation(line: 1304, column: 27, scope: !5152)
!5169 = !DILocation(line: 1304, column: 8, scope: !5146)
!5170 = !DILocation(line: 1306, column: 8, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1305, column: 6)
!5172 = !DILocation(line: 1307, column: 8, scope: !5171)
!5173 = distinct !{!5173, !5164, !5174}
!5174 = !DILocation(line: 1325, column: 2, scope: !5148)
!5175 = !DILocation(line: 1309, column: 13, scope: !5151)
!5176 = !DILocation(line: 1309, column: 32, scope: !5151)
!5177 = !DILocation(line: 1309, column: 13, scope: !5152)
!5178 = !DILocation(line: 1311, column: 22, scope: !5150)
!5179 = !DILocation(line: 0, scope: !5150)
!5180 = !DILocation(line: 1313, column: 12, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 1313, column: 12)
!5182 = !DILocation(line: 1314, column: 5, scope: !5181)
!5183 = !DILocation(line: 1314, column: 8, scope: !5181)
!5184 = !DILocation(line: 1314, column: 37, scope: !5181)
!5185 = !DILocation(line: 1315, column: 5, scope: !5181)
!5186 = !DILocation(line: 1315, column: 8, scope: !5181)
!5187 = !DILocation(line: 1315, column: 36, scope: !5181)
!5188 = !DILocation(line: 1316, column: 5, scope: !5181)
!5189 = !DILocation(line: 1316, column: 8, scope: !5181)
!5190 = !DILocation(line: 1316, column: 36, scope: !5181)
!5191 = !DILocation(line: 1313, column: 12, scope: !5150)
!5192 = !DILocation(line: 1318, column: 11, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 1317, column: 3)
!5194 = !DILocation(line: 1319, column: 16, scope: !5193)
!5195 = !DILocation(line: 1321, column: 5, scope: !5193)
!5196 = !DILocation(line: 1322, column: 3, scope: !5193)
!5197 = !DILocation(line: 1324, column: 4, scope: !5146)
!5198 = !DILocation(line: 1325, column: 2, scope: !5147)
!5199 = !DILocation(line: 1326, column: 5, scope: !5143)
!5200 = !DILocation(line: 0, scope: !5143)
!5201 = distinct !{!5201, !5153, !5202}
!5202 = !DILocation(line: 1326, column: 5, scope: !5144)
!5203 = !DILocation(line: 1327, column: 3, scope: !5136)
!5204 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !153, file: !153, line: 85, type: !5205, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5209)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{!7, !5207}
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!5209 = !{!5210}
!5210 = !DILocalVariable(name: "vec_", arg: 1, scope: !5204, file: !153, line: 85, type: !5207)
!5211 = !DILocation(line: 0, scope: !5204)
!5212 = !DILocation(line: 85, column: 1, scope: !5204)
!5213 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !153, file: !153, line: 85, type: !5214, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5216)
!5214 = !DISubroutineType(types: !5215)
!5215 = !{!979, !5207, !7}
!5216 = !{!5217, !5218}
!5217 = !DILocalVariable(name: "vec_", arg: 1, scope: !5213, file: !153, line: 85, type: !5207)
!5218 = !DILocalVariable(name: "ix_", arg: 2, scope: !5213, file: !153, line: 85, type: !7)
!5219 = !DILocation(line: 0, scope: !5213)
!5220 = !DILocation(line: 85, column: 1, scope: !5213)
!5221 = distinct !DISubprogram(name: "can_predict_insn_p", scope: !3, file: !3, line: 555, type: !3597, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5222)
!5222 = !{!5223}
!5223 = !DILocalVariable(name: "insn", arg: 1, scope: !5221, file: !3, line: 555, type: !3599)
!5224 = !DILocation(line: 0, scope: !5221)
!5225 = !DILocation(line: 557, column: 11, scope: !5221)
!5226 = !DILocation(line: 558, column: 4, scope: !5221)
!5227 = !DILocation(line: 558, column: 7, scope: !5221)
!5228 = !DILocation(line: 559, column: 4, scope: !5221)
!5229 = !DILocation(line: 559, column: 7, scope: !5221)
!5230 = !DILocation(line: 559, column: 49, scope: !5221)
!5231 = !DILocation(line: 557, column: 3, scope: !5221)
!5232 = distinct !DISubprogram(name: "set_even_probabilities", scope: !3, file: !3, line: 630, type: !3495, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5233)
!5233 = !{!5234, !5235, !5236, !5237}
!5234 = !DILocalVariable(name: "bb", arg: 1, scope: !5232, file: !3, line: 630, type: !1612)
!5235 = !DILocalVariable(name: "nedges", scope: !5232, file: !3, line: 632, type: !912)
!5236 = !DILocalVariable(name: "e", scope: !5232, file: !3, line: 633, type: !925)
!5237 = !DILocalVariable(name: "ei", scope: !5232, file: !3, line: 634, type: !2458)
!5238 = !DILocation(line: 0, scope: !5232)
!5239 = !DILocation(line: 633, column: 3, scope: !5232)
!5240 = !DILocation(line: 634, column: 3, scope: !5232)
!5241 = !DILocation(line: 636, column: 3, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 636, column: 3)
!5243 = !DILocation(line: 0, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 636, column: 3)
!5245 = !DILocation(line: 632, column: 7, scope: !5232)
!5246 = !DILocation(line: 636, column: 3, scope: !5244)
!5247 = !DILocation(line: 637, column: 11, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 637, column: 9)
!5249 = !DILocation(line: 637, column: 14, scope: !5248)
!5250 = !DILocation(line: 637, column: 20, scope: !5248)
!5251 = !DILocation(line: 637, column: 9, scope: !5244)
!5252 = distinct !{!5252, !5241, !5253}
!5253 = !DILocation(line: 638, column: 14, scope: !5242)
!5254 = !DILocation(line: 639, column: 3, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 639, column: 3)
!5256 = !DILocation(line: 0, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 640, column: 9)
!5258 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 639, column: 3)
!5259 = !DILocation(line: 639, column: 3, scope: !5258)
!5260 = !DILocation(line: 640, column: 11, scope: !5257)
!5261 = !DILocation(line: 640, column: 14, scope: !5257)
!5262 = !DILocation(line: 640, column: 20, scope: !5257)
!5263 = !DILocation(line: 640, column: 9, scope: !5258)
!5264 = !DILocation(line: 641, column: 56, scope: !5257)
!5265 = !DILocation(line: 641, column: 10, scope: !5257)
!5266 = !DILocation(line: 641, column: 22, scope: !5257)
!5267 = !DILocation(line: 641, column: 7, scope: !5257)
!5268 = !DILocation(line: 643, column: 10, scope: !5257)
!5269 = !DILocation(line: 643, column: 22, scope: !5257)
!5270 = distinct !{!5270, !5254, !5271}
!5271 = !DILocation(line: 643, column: 24, scope: !5255)
!5272 = !DILocation(line: 644, column: 1, scope: !5232)
!5273 = distinct !DISubprogram(name: "dump_prediction", scope: !3, file: !3, line: 595, type: !5274, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5276)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{null, !2559, !603, !912, !1612, !912}
!5276 = !{!5277, !5278, !5279, !5280, !5281, !5282, !5283}
!5277 = !DILocalVariable(name: "file", arg: 1, scope: !5273, file: !3, line: 595, type: !2559)
!5278 = !DILocalVariable(name: "predictor", arg: 2, scope: !5273, file: !3, line: 595, type: !603)
!5279 = !DILocalVariable(name: "probability", arg: 3, scope: !5273, file: !3, line: 595, type: !912)
!5280 = !DILocalVariable(name: "bb", arg: 4, scope: !5273, file: !3, line: 596, type: !1612)
!5281 = !DILocalVariable(name: "used", arg: 5, scope: !5273, file: !3, line: 596, type: !912)
!5282 = !DILocalVariable(name: "e", scope: !5273, file: !3, line: 598, type: !925)
!5283 = !DILocalVariable(name: "ei", scope: !5273, file: !3, line: 599, type: !2458)
!5284 = !DILocation(line: 0, scope: !5273)
!5285 = !DILocation(line: 598, column: 3, scope: !5273)
!5286 = !DILocation(line: 599, column: 3, scope: !5273)
!5287 = !DILocation(line: 601, column: 8, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 601, column: 7)
!5289 = !DILocation(line: 601, column: 7, scope: !5273)
!5290 = !DILocation(line: 604, column: 3, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 604, column: 3)
!5292 = !DILocation(line: 0, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 604, column: 3)
!5294 = !DILocation(line: 604, column: 3, scope: !5293)
!5295 = !DILocation(line: 605, column: 12, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 605, column: 9)
!5297 = !DILocation(line: 605, column: 15, scope: !5296)
!5298 = !DILocation(line: 605, column: 21, scope: !5296)
!5299 = !DILocation(line: 605, column: 9, scope: !5293)
!5300 = distinct !{!5300, !5290, !5301}
!5301 = !DILocation(line: 606, column: 7, scope: !5291)
!5302 = !DILocation(line: 609, column: 5, scope: !5273)
!5303 = !DILocation(line: 609, column: 31, scope: !5273)
!5304 = !DILocation(line: 610, column: 5, scope: !5273)
!5305 = !DILocation(line: 610, column: 31, scope: !5273)
!5306 = !DILocation(line: 610, column: 43, scope: !5273)
!5307 = !DILocation(line: 610, column: 51, scope: !5273)
!5308 = !DILocation(line: 608, column: 3, scope: !5273)
!5309 = !DILocation(line: 612, column: 11, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 612, column: 7)
!5311 = !DILocation(line: 612, column: 7, scope: !5310)
!5312 = !DILocation(line: 612, column: 7, scope: !5273)
!5313 = !DILocation(line: 614, column: 7, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 613, column: 5)
!5315 = !DILocation(line: 615, column: 53, scope: !5314)
!5316 = !DILocation(line: 615, column: 7, scope: !5314)
!5317 = !DILocation(line: 616, column: 11, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 616, column: 11)
!5319 = !DILocation(line: 616, column: 11, scope: !5314)
!5320 = !DILocation(line: 618, column: 4, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 617, column: 2)
!5322 = !DILocation(line: 619, column: 46, scope: !5321)
!5323 = !DILocation(line: 619, column: 49, scope: !5321)
!5324 = !DILocation(line: 619, column: 4, scope: !5321)
!5325 = !DILocation(line: 620, column: 32, scope: !5321)
!5326 = !DILocation(line: 620, column: 35, scope: !5321)
!5327 = !DILocation(line: 620, column: 41, scope: !5321)
!5328 = !DILocation(line: 620, column: 55, scope: !5321)
!5329 = !DILocation(line: 620, column: 51, scope: !5321)
!5330 = !DILocation(line: 620, column: 49, scope: !5321)
!5331 = !DILocation(line: 620, column: 4, scope: !5321)
!5332 = !DILocation(line: 621, column: 2, scope: !5321)
!5333 = !DILocation(line: 624, column: 3, scope: !5273)
!5334 = !DILocation(line: 625, column: 1, scope: !5273)
!5335 = distinct !DISubprogram(name: "single_succ_p", scope: !142, file: !142, line: 626, type: !2976, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5336)
!5336 = !{!5337}
!5337 = !DILocalVariable(name: "bb", arg: 1, scope: !5335, file: !142, line: 626, type: !2978)
!5338 = !DILocation(line: 0, scope: !5335)
!5339 = !DILocation(line: 628, column: 10, scope: !5335)
!5340 = !DILocation(line: 628, column: 33, scope: !5335)
!5341 = !DILocation(line: 628, column: 3, scope: !5335)
!5342 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !142, file: !142, line: 150, type: !5343, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5345)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{!925, !3701, !7}
!5345 = !{!5346, !5347}
!5346 = !DILocalVariable(name: "vec_", arg: 1, scope: !5342, file: !142, line: 150, type: !3701)
!5347 = !DILocalVariable(name: "ix_", arg: 2, scope: !5342, file: !142, line: 150, type: !7)
!5348 = !DILocation(line: 0, scope: !5342)
!5349 = !DILocation(line: 150, column: 1, scope: !5342)
!5350 = distinct !DISubprogram(name: "apply_return_prediction", scope: !3, file: !3, line: 1491, type: !2446, scopeLine: 1492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5351)
!5351 = !{!5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360}
!5352 = !DILocalVariable(name: "return_stmt", scope: !5350, file: !3, line: 1493, type: !1648)
!5353 = !DILocalVariable(name: "return_val", scope: !5350, file: !3, line: 1494, type: !984)
!5354 = !DILocalVariable(name: "e", scope: !5350, file: !3, line: 1495, type: !925)
!5355 = !DILocalVariable(name: "phi", scope: !5350, file: !3, line: 1496, type: !1648)
!5356 = !DILocalVariable(name: "phi_num_args", scope: !5350, file: !3, line: 1497, type: !912)
!5357 = !DILocalVariable(name: "i", scope: !5350, file: !3, line: 1497, type: !912)
!5358 = !DILocalVariable(name: "pred", scope: !5350, file: !3, line: 1498, type: !603)
!5359 = !DILocalVariable(name: "direction", scope: !5350, file: !3, line: 1499, type: !812)
!5360 = !DILocalVariable(name: "ei", scope: !5350, file: !3, line: 1500, type: !2458)
!5361 = !DILocation(line: 0, scope: !5350)
!5362 = !DILocation(line: 1495, column: 3, scope: !5350)
!5363 = !DILocation(line: 1499, column: 3, scope: !5350)
!5364 = !DILocation(line: 1500, column: 3, scope: !5350)
!5365 = !DILocation(line: 1502, column: 3, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1502, column: 3)
!5367 = !DILocation(line: 0, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1502, column: 3)
!5369 = !DILocation(line: 1502, column: 3, scope: !5368)
!5370 = !DILocation(line: 1504, column: 32, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1503, column: 5)
!5372 = !DILocation(line: 1504, column: 35, scope: !5371)
!5373 = !DILocation(line: 1504, column: 21, scope: !5371)
!5374 = !DILocation(line: 1505, column: 11, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1505, column: 11)
!5376 = !DILocation(line: 1506, column: 4, scope: !5375)
!5377 = !DILocation(line: 1506, column: 7, scope: !5375)
!5378 = !DILocation(line: 1506, column: 33, scope: !5375)
!5379 = !DILocation(line: 1505, column: 11, scope: !5371)
!5380 = distinct !{!5380, !5365, !5381}
!5381 = !DILocation(line: 1508, column: 5, scope: !5366)
!5382 = !DILocation(line: 1509, column: 8, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1509, column: 7)
!5384 = !DILocation(line: 1509, column: 7, scope: !5350)
!5385 = !DILocation(line: 1511, column: 16, scope: !5350)
!5386 = !DILocation(line: 1512, column: 8, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1512, column: 7)
!5388 = !DILocation(line: 1512, column: 7, scope: !5350)
!5389 = !DILocation(line: 1514, column: 7, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1514, column: 7)
!5391 = !DILocation(line: 1514, column: 30, scope: !5390)
!5392 = !DILocation(line: 1515, column: 7, scope: !5390)
!5393 = !DILocation(line: 1515, column: 11, scope: !5390)
!5394 = !DILocation(line: 1516, column: 7, scope: !5390)
!5395 = !DILocation(line: 1516, column: 10, scope: !5390)
!5396 = !DILocation(line: 1516, column: 55, scope: !5390)
!5397 = !DILocation(line: 1514, column: 7, scope: !5350)
!5398 = !DILocation(line: 1518, column: 9, scope: !5350)
!5399 = !DILocation(line: 1519, column: 18, scope: !5350)
!5400 = !DILocation(line: 1520, column: 29, scope: !5350)
!5401 = !DILocation(line: 1520, column: 10, scope: !5350)
!5402 = !DILocation(line: 1525, column: 8, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1525, column: 3)
!5404 = !DILocation(line: 0, scope: !5403)
!5405 = !DILocation(line: 1525, column: 17, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 1525, column: 3)
!5407 = !DILocation(line: 1525, column: 3, scope: !5403)
!5408 = !DILocation(line: 1526, column: 36, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 1526, column: 9)
!5410 = !DILocation(line: 1526, column: 17, scope: !5409)
!5411 = !DILocation(line: 1526, column: 14, scope: !5409)
!5412 = !DILocation(line: 1526, column: 9, scope: !5406)
!5413 = !DILocation(line: 1525, column: 34, scope: !5406)
!5414 = !DILocation(line: 1525, column: 3, scope: !5406)
!5415 = distinct !{!5415, !5407, !5416}
!5416 = !DILocation(line: 1527, column: 7, scope: !5403)
!5417 = !DILocation(line: 1528, column: 9, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1528, column: 7)
!5419 = !DILocation(line: 1528, column: 7, scope: !5350)
!5420 = !DILocation(line: 1529, column: 5, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 1529, column: 5)
!5422 = !DILocation(line: 0, scope: !5421)
!5423 = !DILocation(line: 1529, column: 19, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 1529, column: 5)
!5425 = !DILocation(line: 1531, column: 28, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 1530, column: 7)
!5427 = !DILocation(line: 1531, column: 9, scope: !5426)
!5428 = !DILocation(line: 1532, column: 11, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 1532, column: 6)
!5430 = !DILocation(line: 1532, column: 6, scope: !5426)
!5431 = !DILocation(line: 1533, column: 30, scope: !5429)
!5432 = !DILocation(line: 1533, column: 60, scope: !5429)
!5433 = !DILocation(line: 1534, column: 9, scope: !5429)
!5434 = !DILocation(line: 1533, column: 4, scope: !5429)
!5435 = !DILocation(line: 1529, column: 36, scope: !5424)
!5436 = !DILocation(line: 1529, column: 5, scope: !5424)
!5437 = distinct !{!5437, !5420, !5438}
!5438 = !DILocation(line: 1535, column: 7, scope: !5421)
!5439 = !DILocation(line: 1536, column: 1, scope: !5350)
!5440 = distinct !DISubprogram(name: "gsi_start_bb", scope: !839, file: !839, line: 4418, type: !5441, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5443)
!5441 = !DISubroutineType(types: !5442)
!5442 = !{!4095, !1612}
!5443 = !{!5444, !5445, !5446}
!5444 = !DILocalVariable(name: "bb", arg: 1, scope: !5440, file: !839, line: 4418, type: !1612)
!5445 = !DILocalVariable(name: "i", scope: !5440, file: !839, line: 4420, type: !4095)
!5446 = !DILocalVariable(name: "seq", scope: !5440, file: !839, line: 4421, type: !1718)
!5447 = !DILocation(line: 0, scope: !5440)
!5448 = !DILocation(line: 4420, column: 24, scope: !5440)
!5449 = !DILocation(line: 4423, column: 9, scope: !5440)
!5450 = !DILocation(line: 4424, column: 11, scope: !5440)
!5451 = !DILocation(line: 4424, column: 5, scope: !5440)
!5452 = !DILocation(line: 4424, column: 9, scope: !5440)
!5453 = !DILocation(line: 4425, column: 5, scope: !5440)
!5454 = !DILocation(line: 4425, column: 9, scope: !5440)
!5455 = !DILocation(line: 4426, column: 5, scope: !5440)
!5456 = !DILocation(line: 4426, column: 8, scope: !5440)
!5457 = !DILocation(line: 4429, column: 1, scope: !5440)
!5458 = distinct !DISubprogram(name: "gsi_end_p", scope: !839, file: !839, line: 4467, type: !5459, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5461)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!911, !4095}
!5461 = !{!5462}
!5462 = !DILocalVariable(name: "i", arg: 1, scope: !5458, file: !839, line: 4467, type: !4095)
!5463 = !DILocation(line: 4467, column: 33, scope: !5458)
!5464 = !DILocation(line: 4469, column: 12, scope: !5458)
!5465 = !DILocation(line: 4469, column: 16, scope: !5458)
!5466 = !DILocation(line: 4469, column: 10, scope: !5458)
!5467 = !DILocation(line: 4469, column: 3, scope: !5458)
!5468 = distinct !DISubprogram(name: "gsi_stmt", scope: !839, file: !839, line: 4501, type: !5469, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5471)
!5469 = !DISubroutineType(types: !5470)
!5470 = !{!1648, !4095}
!5471 = !{!5472}
!5472 = !DILocalVariable(name: "i", arg: 1, scope: !5468, file: !839, line: 4501, type: !4095)
!5473 = !DILocation(line: 4501, column: 32, scope: !5468)
!5474 = !DILocation(line: 4503, column: 12, scope: !5468)
!5475 = !DILocation(line: 4503, column: 17, scope: !5468)
!5476 = !DILocation(line: 4503, column: 3, scope: !5468)
!5477 = distinct !DISubprogram(name: "is_gimple_call", scope: !839, file: !839, line: 1870, type: !5478, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5481)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{!911, !5480}
!5480 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !926, line: 60, baseType: !2428)
!5481 = !{!5482}
!5482 = !DILocalVariable(name: "gs", arg: 1, scope: !5477, file: !839, line: 1870, type: !5480)
!5483 = !DILocation(line: 0, scope: !5477)
!5484 = !DILocation(line: 1872, column: 10, scope: !5477)
!5485 = !DILocation(line: 1872, column: 27, scope: !5477)
!5486 = !DILocation(line: 1872, column: 3, scope: !5477)
!5487 = distinct !DISubprogram(name: "predict_paths_leading_to", scope: !3, file: !3, line: 1789, type: !5488, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5490)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{null, !1612, !603, !812}
!5490 = !{!5491, !5492, !5493}
!5491 = !DILocalVariable(name: "bb", arg: 1, scope: !5487, file: !3, line: 1789, type: !1612)
!5492 = !DILocalVariable(name: "pred", arg: 2, scope: !5487, file: !3, line: 1789, type: !603)
!5493 = !DILocalVariable(name: "taken", arg: 3, scope: !5487, file: !3, line: 1790, type: !812)
!5494 = !DILocation(line: 0, scope: !5487)
!5495 = !DILocation(line: 1792, column: 3, scope: !5487)
!5496 = !DILocation(line: 1793, column: 1, scope: !5487)
!5497 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !839, file: !839, line: 1954, type: !5498, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5500)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!984, !5480}
!5500 = !{!5501, !5502}
!5501 = !DILocalVariable(name: "gs", arg: 1, scope: !5497, file: !839, line: 1954, type: !5480)
!5502 = !DILocalVariable(name: "addr", scope: !5497, file: !839, line: 1956, type: !984)
!5503 = !DILocation(line: 0, scope: !5497)
!5504 = !DILocation(line: 1956, column: 15, scope: !5497)
!5505 = !DILocation(line: 1957, column: 7, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5497, file: !839, line: 1957, column: 7)
!5507 = !DILocation(line: 1957, column: 24, scope: !5506)
!5508 = !DILocation(line: 1957, column: 7, scope: !5497)
!5509 = !DILocation(line: 1958, column: 12, scope: !5506)
!5510 = !DILocation(line: 1958, column: 5, scope: !5506)
!5511 = !DILocation(line: 1960, column: 1, scope: !5497)
!5512 = distinct !DISubprogram(name: "gimple_code", scope: !839, file: !839, line: 1052, type: !5513, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5515)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!865, !5480}
!5515 = !{!5516}
!5516 = !DILocalVariable(name: "g", arg: 1, scope: !5512, file: !839, line: 1052, type: !5480)
!5517 = !DILocation(line: 0, scope: !5512)
!5518 = !DILocation(line: 1054, column: 20, scope: !5512)
!5519 = !DILocation(line: 1054, column: 3, scope: !5512)
!5520 = distinct !DISubprogram(name: "gimple_predict_predictor", scope: !839, file: !839, line: 4321, type: !5521, scopeLine: 4322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5523)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{!603, !1648}
!5523 = !{!5524}
!5524 = !DILocalVariable(name: "gs", arg: 1, scope: !5520, file: !839, line: 4321, type: !1648)
!5525 = !DILocation(line: 0, scope: !5520)
!5526 = !DILocation(line: 4324, column: 42, scope: !5520)
!5527 = !DILocation(line: 4324, column: 50, scope: !5520)
!5528 = !DILocation(line: 4324, column: 3, scope: !5520)
!5529 = distinct !DISubprogram(name: "gimple_predict_outcome", scope: !839, file: !839, line: 4342, type: !5530, scopeLine: 4343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5532)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{!812, !1648}
!5532 = !{!5533}
!5533 = !DILocalVariable(name: "gs", arg: 1, scope: !5529, file: !839, line: 4342, type: !1648)
!5534 = !DILocation(line: 0, scope: !5529)
!5535 = !DILocation(line: 4345, column: 22, scope: !5529)
!5536 = !DILocation(line: 4345, column: 10, scope: !5529)
!5537 = !DILocation(line: 4345, column: 3, scope: !5529)
!5538 = distinct !DISubprogram(name: "gsi_next", scope: !839, file: !839, line: 4485, type: !5539, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5542)
!5539 = !DISubroutineType(types: !5540)
!5540 = !{null, !5541}
!5541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!5542 = !{!5543}
!5543 = !DILocalVariable(name: "i", arg: 1, scope: !5538, file: !839, line: 4485, type: !5541)
!5544 = !DILocation(line: 0, scope: !5538)
!5545 = !DILocation(line: 4487, column: 15, scope: !5538)
!5546 = !DILocation(line: 4487, column: 20, scope: !5538)
!5547 = !DILocation(line: 4487, column: 10, scope: !5538)
!5548 = !DILocation(line: 4488, column: 1, scope: !5538)
!5549 = distinct !DISubprogram(name: "gimple_return_retval", scope: !839, file: !839, line: 4253, type: !5498, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5550)
!5550 = !{!5551}
!5551 = !DILocalVariable(name: "gs", arg: 1, scope: !5549, file: !839, line: 4253, type: !5480)
!5552 = !DILocation(line: 0, scope: !5549)
!5553 = !DILocation(line: 4256, column: 10, scope: !5549)
!5554 = !DILocation(line: 4256, column: 3, scope: !5549)
!5555 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !839, file: !839, line: 3061, type: !5556, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5558)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{!7, !5480}
!5558 = !{!5559}
!5559 = !DILocalVariable(name: "gs", arg: 1, scope: !5555, file: !839, line: 3061, type: !5480)
!5560 = !DILocation(line: 0, scope: !5555)
!5561 = !DILocation(line: 3064, column: 25, scope: !5555)
!5562 = !DILocation(line: 3064, column: 3, scope: !5555)
!5563 = distinct !DISubprogram(name: "return_prediction", scope: !3, file: !3, line: 1450, type: !5564, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5567)
!5564 = !DISubroutineType(types: !5565)
!5565 = !{!603, !984, !5566}
!5566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!5567 = !{!5568, !5569}
!5568 = !DILocalVariable(name: "val", arg: 1, scope: !5563, file: !3, line: 1450, type: !984)
!5569 = !DILocalVariable(name: "prediction", arg: 2, scope: !5563, file: !3, line: 1450, type: !5566)
!5570 = !DILocation(line: 0, scope: !5563)
!5571 = !DILocation(line: 1453, column: 8, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 1453, column: 7)
!5573 = !DILocation(line: 1453, column: 7, scope: !5563)
!5574 = !DILocation(line: 1456, column: 7, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 1456, column: 7)
!5576 = !DILocation(line: 1456, column: 7, scope: !5563)
!5577 = !DILocation(line: 1459, column: 11, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1459, column: 11)
!5579 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1457, column: 5)
!5580 = !DILocation(line: 1459, column: 11, scope: !5579)
!5581 = !DILocation(line: 1461, column: 16, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 1460, column: 2)
!5583 = !DILocation(line: 1462, column: 4, scope: !5582)
!5584 = !DILocation(line: 1465, column: 12, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1465, column: 12)
!5586 = !DILocation(line: 1465, column: 12, scope: !5575)
!5587 = !DILocation(line: 1469, column: 11, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 1469, column: 11)
!5589 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 1466, column: 5)
!5590 = !DILocation(line: 1469, column: 27, scope: !5588)
!5591 = !DILocation(line: 1470, column: 4, scope: !5588)
!5592 = !DILocation(line: 1470, column: 7, scope: !5588)
!5593 = !DILocation(line: 1470, column: 30, scope: !5588)
!5594 = !DILocation(line: 1469, column: 11, scope: !5589)
!5595 = !DILocation(line: 1478, column: 11, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 1478, column: 11)
!5597 = !DILocation(line: 1472, column: 16, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 1471, column: 2)
!5599 = !DILocation(line: 1473, column: 4, scope: !5598)
!5600 = !DILocation(line: 1479, column: 4, scope: !5596)
!5601 = !DILocation(line: 1479, column: 9, scope: !5596)
!5602 = !DILocation(line: 1479, column: 29, scope: !5596)
!5603 = !DILocation(line: 1479, column: 33, scope: !5596)
!5604 = !DILocation(line: 1478, column: 11, scope: !5589)
!5605 = !DILocation(line: 1481, column: 16, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 1480, column: 2)
!5607 = !DILocation(line: 1482, column: 4, scope: !5606)
!5608 = !DILocation(line: 1486, column: 1, scope: !5563)
!5609 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !5610, file: !5610, line: 427, type: !5611, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5616)
!5610 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5611 = !DISubroutineType(types: !5612)
!5612 = !{!984, !5613}
!5613 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !1679, line: 30, baseType: !5614)
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 64)
!5615 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !171, line: 1893, baseType: !1690)
!5616 = !{!5617}
!5617 = !DILocalVariable(name: "use", arg: 1, scope: !5609, file: !5610, line: 427, type: !5613)
!5618 = !DILocation(line: 0, scope: !5609)
!5619 = !DILocation(line: 429, column: 17, scope: !5609)
!5620 = !DILocation(line: 429, column: 10, scope: !5609)
!5621 = !DILocation(line: 429, column: 3, scope: !5609)
!5622 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !5610, file: !5610, line: 442, type: !5623, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5625)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{!5613, !1648, !912}
!5625 = !{!5626, !5627}
!5626 = !DILocalVariable(name: "gs", arg: 1, scope: !5622, file: !5610, line: 442, type: !1648)
!5627 = !DILocalVariable(name: "i", arg: 2, scope: !5622, file: !5610, line: 442, type: !912)
!5628 = !DILocation(line: 0, scope: !5622)
!5629 = !DILocation(line: 444, column: 11, scope: !5622)
!5630 = !DILocation(line: 444, column: 35, scope: !5622)
!5631 = !DILocation(line: 444, column: 3, scope: !5622)
!5632 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !5610, file: !5610, line: 467, type: !5633, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5635)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!925, !1648, !1550}
!5635 = !{!5636, !5637}
!5636 = !DILocalVariable(name: "gs", arg: 1, scope: !5632, file: !5610, line: 467, type: !1648)
!5637 = !DILocalVariable(name: "i", arg: 2, scope: !5632, file: !5610, line: 467, type: !1550)
!5638 = !DILocation(line: 0, scope: !5632)
!5639 = !DILocation(line: 469, column: 10, scope: !5632)
!5640 = !DILocation(line: 469, column: 3, scope: !5632)
!5641 = distinct !DISubprogram(name: "gimple_op", scope: !839, file: !839, line: 1631, type: !5642, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5644)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{!984, !5480, !7}
!5644 = !{!5645, !5646}
!5645 = !DILocalVariable(name: "gs", arg: 1, scope: !5641, file: !839, line: 1631, type: !5480)
!5646 = !DILocalVariable(name: "i", arg: 2, scope: !5641, file: !839, line: 1631, type: !7)
!5647 = !DILocation(line: 0, scope: !5641)
!5648 = !DILocation(line: 1633, column: 7, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5641, file: !839, line: 1633, column: 7)
!5650 = !DILocation(line: 1633, column: 7, scope: !5641)
!5651 = !DILocation(line: 1638, column: 14, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5649, file: !839, line: 1634, column: 5)
!5653 = !DILocation(line: 1638, column: 7, scope: !5652)
!5654 = !DILocation(line: 0, scope: !5649)
!5655 = !DILocation(line: 1642, column: 1, scope: !5641)
!5656 = distinct !DISubprogram(name: "gimple_has_ops", scope: !839, file: !839, line: 1274, type: !5478, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5657)
!5657 = !{!5658}
!5658 = !DILocalVariable(name: "g", arg: 1, scope: !5656, file: !839, line: 1274, type: !5480)
!5659 = !DILocation(line: 0, scope: !5656)
!5660 = !DILocation(line: 1276, column: 10, scope: !5656)
!5661 = !DILocation(line: 1276, column: 26, scope: !5656)
!5662 = !DILocation(line: 1276, column: 41, scope: !5656)
!5663 = !DILocation(line: 1276, column: 44, scope: !5656)
!5664 = !DILocation(line: 1276, column: 60, scope: !5656)
!5665 = !DILocation(line: 1276, column: 3, scope: !5656)
!5666 = distinct !DISubprogram(name: "gimple_ops", scope: !839, file: !839, line: 1614, type: !5667, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5669)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{!1683, !1648}
!5669 = !{!5670, !5671}
!5670 = !DILocalVariable(name: "gs", arg: 1, scope: !5666, file: !839, line: 1614, type: !1648)
!5671 = !DILocalVariable(name: "off", scope: !5666, file: !839, line: 1616, type: !1550)
!5672 = !DILocation(line: 0, scope: !5666)
!5673 = !DILocation(line: 1621, column: 28, scope: !5666)
!5674 = !DILocation(line: 1621, column: 9, scope: !5666)
!5675 = !DILocation(line: 1622, column: 3, scope: !5666)
!5676 = !DILocation(line: 1624, column: 20, scope: !5666)
!5677 = !DILocation(line: 1624, column: 32, scope: !5666)
!5678 = !DILocation(line: 1624, column: 10, scope: !5666)
!5679 = !DILocation(line: 1624, column: 3, scope: !5666)
!5680 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !839, file: !839, line: 1073, type: !5681, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5683)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{!838, !1648}
!5683 = !{!5684}
!5684 = !DILocalVariable(name: "gs", arg: 1, scope: !5680, file: !839, line: 1073, type: !1648)
!5685 = !DILocation(line: 0, scope: !5680)
!5686 = !DILocation(line: 1075, column: 24, scope: !5680)
!5687 = !DILocation(line: 1075, column: 10, scope: !5680)
!5688 = !DILocation(line: 1075, column: 3, scope: !5680)
!5689 = distinct !DISubprogram(name: "gss_for_code", scope: !839, file: !839, line: 1061, type: !5690, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5692)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!838, !865}
!5692 = !{!5693}
!5693 = !DILocalVariable(name: "code", arg: 1, scope: !5689, file: !839, line: 1061, type: !865)
!5694 = !DILocation(line: 0, scope: !5689)
!5695 = !DILocation(line: 1066, column: 10, scope: !5689)
!5696 = !DILocation(line: 1066, column: 3, scope: !5689)
!5697 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !839, file: !839, line: 3100, type: !5698, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5701)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!5700, !1648, !7}
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!5701 = !{!5702, !5703}
!5702 = !DILocalVariable(name: "gs", arg: 1, scope: !5697, file: !839, line: 3100, type: !1648)
!5703 = !DILocalVariable(name: "index", arg: 2, scope: !5697, file: !839, line: 3100, type: !7)
!5704 = !DILocation(line: 0, scope: !5697)
!5705 = !DILocation(line: 3103, column: 3, scope: !5697)
!5706 = !DILocation(line: 3104, column: 12, scope: !5697)
!5707 = !DILocation(line: 3104, column: 3, scope: !5697)
!5708 = distinct !DISubprogram(name: "gimple_bb", scope: !839, file: !839, line: 1112, type: !5709, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5711)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{!931, !5480}
!5711 = !{!5712}
!5712 = !DILocalVariable(name: "g", arg: 1, scope: !5708, file: !839, line: 1112, type: !5480)
!5713 = !DILocation(line: 0, scope: !5708)
!5714 = !DILocation(line: 1114, column: 20, scope: !5708)
!5715 = !DILocation(line: 1114, column: 3, scope: !5708)
!5716 = distinct !DISubprogram(name: "bb_seq", scope: !839, file: !839, line: 237, type: !5717, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5719)
!5717 = !DISubroutineType(types: !5718)
!5718 = !{!1718, !2978}
!5719 = !{!5720}
!5720 = !DILocalVariable(name: "bb", arg: 1, scope: !5716, file: !839, line: 237, type: !2978)
!5721 = !DILocation(line: 0, scope: !5716)
!5722 = !DILocation(line: 239, column: 17, scope: !5716)
!5723 = !DILocation(line: 239, column: 23, scope: !5716)
!5724 = !DILocation(line: 239, column: 33, scope: !5716)
!5725 = !DILocation(line: 239, column: 43, scope: !5716)
!5726 = !DILocation(line: 239, column: 36, scope: !5716)
!5727 = !DILocation(line: 239, column: 10, scope: !5716)
!5728 = !DILocation(line: 239, column: 68, scope: !5716)
!5729 = !DILocation(line: 239, column: 3, scope: !5716)
!5730 = distinct !DISubprogram(name: "gimple_seq_first", scope: !839, file: !839, line: 159, type: !5731, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5736)
!5731 = !DISubroutineType(types: !5732)
!5732 = !{!1643, !5733}
!5733 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !926, line: 67, baseType: !5734)
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!5736 = !{!5737}
!5737 = !DILocalVariable(name: "s", arg: 1, scope: !5730, file: !839, line: 159, type: !5733)
!5738 = !DILocation(line: 0, scope: !5730)
!5739 = !DILocation(line: 161, column: 10, scope: !5730)
!5740 = !DILocation(line: 161, column: 17, scope: !5730)
!5741 = !DILocation(line: 161, column: 3, scope: !5730)
!5742 = distinct !DISubprogram(name: "predict_paths_for_bb", scope: !3, file: !3, line: 1762, type: !5743, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5745)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{null, !1612, !1612, !603, !812}
!5745 = !{!5746, !5747, !5748, !5749, !5750, !5751, !5752}
!5746 = !DILocalVariable(name: "cur", arg: 1, scope: !5742, file: !3, line: 1762, type: !1612)
!5747 = !DILocalVariable(name: "bb", arg: 2, scope: !5742, file: !3, line: 1762, type: !1612)
!5748 = !DILocalVariable(name: "pred", arg: 3, scope: !5742, file: !3, line: 1763, type: !603)
!5749 = !DILocalVariable(name: "taken", arg: 4, scope: !5742, file: !3, line: 1764, type: !812)
!5750 = !DILocalVariable(name: "e", scope: !5742, file: !3, line: 1766, type: !925)
!5751 = !DILocalVariable(name: "ei", scope: !5742, file: !3, line: 1767, type: !2458)
!5752 = !DILocalVariable(name: "son", scope: !5742, file: !3, line: 1768, type: !1612)
!5753 = !DILocation(line: 0, scope: !5742)
!5754 = !DILocation(line: 1766, column: 3, scope: !5742)
!5755 = !DILocation(line: 1767, column: 3, scope: !5742)
!5756 = !DILocation(line: 1772, column: 3, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 1772, column: 3)
!5758 = !DILocation(line: 0, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1772, column: 3)
!5760 = !DILocation(line: 0, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1775, column: 5)
!5762 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 1773, column: 9)
!5763 = !DILocation(line: 1772, column: 3, scope: !5759)
!5764 = !DILocation(line: 1773, column: 9, scope: !5762)
!5765 = !DILocation(line: 1773, column: 12, scope: !5762)
!5766 = !DILocation(line: 1773, column: 17, scope: !5762)
!5767 = !DILocation(line: 1773, column: 23, scope: !5762)
!5768 = !DILocation(line: 1774, column: 2, scope: !5762)
!5769 = !DILocation(line: 1774, column: 6, scope: !5762)
!5770 = !DILocation(line: 1773, column: 9, scope: !5759)
!5771 = !DILocation(line: 1777, column: 25, scope: !5761)
!5772 = !DILocation(line: 1777, column: 7, scope: !5761)
!5773 = !DILocation(line: 1778, column: 5, scope: !5761)
!5774 = distinct !{!5774, !5756, !5775}
!5775 = !DILocation(line: 1778, column: 5, scope: !5757)
!5776 = !DILocation(line: 1779, column: 14, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 1779, column: 3)
!5778 = !DILocation(line: 1776, column: 7, scope: !5761)
!5779 = !DILocation(line: 1779, column: 8, scope: !5777)
!5780 = !DILocation(line: 0, scope: !5777)
!5781 = !DILocation(line: 1779, column: 3, scope: !5777)
!5782 = !DILocation(line: 1782, column: 5, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1779, column: 3)
!5784 = !DILocation(line: 1781, column: 14, scope: !5783)
!5785 = !DILocation(line: 1779, column: 3, scope: !5783)
!5786 = distinct !{!5786, !5781, !5787}
!5787 = !DILocation(line: 1782, column: 47, scope: !5777)
!5788 = !DILocation(line: 1783, column: 1, scope: !5742)
!5789 = distinct !DISubprogram(name: "gimple_call_fn", scope: !839, file: !839, line: 1911, type: !5498, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5790)
!5790 = !{!5791}
!5791 = !DILocalVariable(name: "gs", arg: 1, scope: !5789, file: !839, line: 1911, type: !5480)
!5792 = !DILocation(line: 0, scope: !5789)
!5793 = !DILocation(line: 1914, column: 10, scope: !5789)
!5794 = !DILocation(line: 1914, column: 3, scope: !5789)
!5795 = distinct !DISubprogram(name: "fel_init", scope: !153, file: !153, line: 535, type: !5796, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5800)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{null, !5798, !5799, !7}
!5798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!5800 = !{!5801, !5802, !5803, !5804, !5805, !5806}
!5801 = !DILocalVariable(name: "li", arg: 1, scope: !5795, file: !153, line: 535, type: !5798)
!5802 = !DILocalVariable(name: "loop", arg: 2, scope: !5795, file: !153, line: 535, type: !5799)
!5803 = !DILocalVariable(name: "flags", arg: 3, scope: !5795, file: !153, line: 535, type: !7)
!5804 = !DILocalVariable(name: "aloop", scope: !5795, file: !153, line: 537, type: !952)
!5805 = !DILocalVariable(name: "i", scope: !5795, file: !153, line: 538, type: !7)
!5806 = !DILocalVariable(name: "mn", scope: !5795, file: !153, line: 539, type: !912)
!5807 = !DILocation(line: 0, scope: !5795)
!5808 = !DILocation(line: 541, column: 7, scope: !5795)
!5809 = !DILocation(line: 541, column: 11, scope: !5795)
!5810 = !DILocation(line: 542, column: 8, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5795, file: !153, line: 542, column: 7)
!5812 = !DILocation(line: 542, column: 7, scope: !5795)
!5813 = !DILocation(line: 544, column: 11, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5811, file: !153, line: 543, column: 5)
!5815 = !DILocation(line: 544, column: 20, scope: !5814)
!5816 = !DILocation(line: 545, column: 13, scope: !5814)
!5817 = !DILocation(line: 546, column: 7, scope: !5814)
!5818 = !DILocation(line: 549, column: 18, scope: !5795)
!5819 = !DILocation(line: 549, column: 7, scope: !5795)
!5820 = !DILocation(line: 549, column: 16, scope: !5795)
!5821 = !DILocation(line: 0, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5823, file: !153, line: 560, column: 12)
!5823 = distinct !DILexicalBlock(scope: !5795, file: !153, line: 552, column: 7)
!5824 = !DILocation(line: 590, column: 7, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5822, file: !153, line: 587, column: 5)
!5826 = !DILocation(line: 592, column: 8, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !153, line: 592, column: 8)
!5828 = distinct !DILexicalBlock(scope: !5825, file: !153, line: 591, column: 2)
!5829 = !DILocation(line: 592, column: 15, scope: !5827)
!5830 = !DILocation(line: 592, column: 19, scope: !5827)
!5831 = !DILocation(line: 592, column: 8, scope: !5828)
!5832 = !DILocation(line: 593, column: 6, scope: !5827)
!5833 = !DILocation(line: 595, column: 15, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5828, file: !153, line: 595, column: 8)
!5835 = !DILocation(line: 595, column: 21, scope: !5834)
!5836 = !DILocation(line: 595, column: 8, scope: !5828)
!5837 = !DILocation(line: 599, column: 8, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5834, file: !153, line: 598, column: 6)
!5839 = !DILocation(line: 596, column: 21, scope: !5834)
!5840 = !DILocation(line: 596, column: 6, scope: !5834)
!5841 = !DILocation(line: 599, column: 15, scope: !5838)
!5842 = !DILocation(line: 599, column: 21, scope: !5838)
!5843 = !DILocation(line: 599, column: 29, scope: !5838)
!5844 = !DILocation(line: 599, column: 39, scope: !5838)
!5845 = !DILocation(line: 599, column: 44, scope: !5838)
!5846 = !DILocation(line: 0, scope: !5838)
!5847 = !DILocation(line: 600, column: 11, scope: !5838)
!5848 = distinct !{!5848, !5837, !5849}
!5849 = !DILocation(line: 600, column: 28, scope: !5838)
!5850 = !DILocation(line: 601, column: 18, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5838, file: !153, line: 601, column: 12)
!5852 = !DILocation(line: 601, column: 12, scope: !5838)
!5853 = !DILocation(line: 603, column: 23, scope: !5838)
!5854 = distinct !{!5854, !5824, !5855}
!5855 = !DILocation(line: 605, column: 2, scope: !5825)
!5856 = !DILocation(line: 608, column: 3, scope: !5795)
!5857 = !DILocation(line: 609, column: 1, scope: !5795)
!5858 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !142, file: !142, line: 150, type: !5859, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5861)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{!912, !3701, !7, !4941}
!5861 = !{!5862, !5863, !5864}
!5862 = !DILocalVariable(name: "vec_", arg: 1, scope: !5858, file: !142, line: 150, type: !3701)
!5863 = !DILocalVariable(name: "ix_", arg: 2, scope: !5858, file: !142, line: 150, type: !7)
!5864 = !DILocalVariable(name: "ptr", arg: 3, scope: !5858, file: !142, line: 150, type: !4941)
!5865 = !DILocation(line: 0, scope: !5858)
!5866 = !DILocation(line: 150, column: 1, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5858, file: !142, line: 150, column: 1)
!5868 = !DILocation(line: 150, column: 1, scope: !5858)
!5869 = !DILocation(line: 150, column: 1, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5867, file: !142, line: 150, column: 1)
!5871 = !DILocation(line: 150, column: 1, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5867, file: !142, line: 150, column: 1)
!5873 = !DILocation(line: 0, scope: !5867)
!5874 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !142, file: !142, line: 152, type: !5875, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5878)
!5875 = !DISubroutineType(types: !5876)
!5876 = !{null, !5877}
!5877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4196, size: 64)
!5878 = !{!5879}
!5879 = !DILocalVariable(name: "vec_", arg: 1, scope: !5874, file: !142, line: 152, type: !5877)
!5880 = !DILocation(line: 0, scope: !5874)
!5881 = !DILocation(line: 152, column: 1, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5874, file: !142, line: 152, column: 1)
!5883 = !DILocation(line: 152, column: 1, scope: !5874)
!5884 = distinct !DISubprogram(name: "fel_next", scope: !153, file: !153, line: 518, type: !5885, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5887)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{null, !5798, !5799}
!5887 = !{!5888, !5889, !5890}
!5888 = !DILocalVariable(name: "li", arg: 1, scope: !5884, file: !153, line: 518, type: !5798)
!5889 = !DILocalVariable(name: "loop", arg: 2, scope: !5884, file: !153, line: 518, type: !5799)
!5890 = !DILocalVariable(name: "anum", scope: !5884, file: !153, line: 520, type: !912)
!5891 = !DILocation(line: 0, scope: !5884)
!5892 = !DILocation(line: 520, column: 3, scope: !5884)
!5893 = !DILocation(line: 522, column: 3, scope: !5884)
!5894 = !DILocation(line: 522, column: 10, scope: !5884)
!5895 = !DILocation(line: 524, column: 14, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5884, file: !153, line: 523, column: 5)
!5897 = !DILocation(line: 525, column: 25, scope: !5896)
!5898 = !DILocation(line: 525, column: 15, scope: !5896)
!5899 = !DILocation(line: 525, column: 13, scope: !5896)
!5900 = !DILocation(line: 526, column: 11, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5896, file: !153, line: 526, column: 11)
!5902 = !DILocation(line: 526, column: 11, scope: !5896)
!5903 = distinct !{!5903, !5893, !5904}
!5904 = !DILocation(line: 528, column: 5, scope: !5884)
!5905 = !DILocation(line: 530, column: 3, scope: !5884)
!5906 = !DILocation(line: 531, column: 9, scope: !5884)
!5907 = !DILocation(line: 532, column: 1, scope: !5884)
!5908 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1595, file: !1595, line: 32, type: !5909, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5911)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!2430, !912}
!5911 = !{!5912}
!5912 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5908, file: !1595, line: 32, type: !912)
!5913 = !DILocation(line: 0, scope: !5908)
!5914 = !DILocation(line: 32, column: 1, scope: !5908)
!5915 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !153, file: !153, line: 85, type: !5916, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5918)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!912, !5207, !7, !5799}
!5918 = !{!5919, !5920, !5921}
!5919 = !DILocalVariable(name: "vec_", arg: 1, scope: !5915, file: !153, line: 85, type: !5207)
!5920 = !DILocalVariable(name: "ix_", arg: 2, scope: !5915, file: !153, line: 85, type: !7)
!5921 = !DILocalVariable(name: "ptr", arg: 3, scope: !5915, file: !153, line: 85, type: !5799)
!5922 = !DILocation(line: 0, scope: !5915)
!5923 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1595, file: !1595, line: 31, type: !5924, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5928)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{!5926, !5927, !912}
!5926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!5927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!5928 = !{!5929, !5930, !5931}
!5929 = !DILocalVariable(name: "vec_", arg: 1, scope: !5923, file: !1595, line: 31, type: !5927)
!5930 = !DILocalVariable(name: "obj_", arg: 2, scope: !5923, file: !1595, line: 31, type: !912)
!5931 = !DILocalVariable(name: "slot_", scope: !5923, file: !1595, line: 31, type: !5926)
!5932 = !DILocation(line: 0, scope: !5923)
!5933 = !DILocation(line: 31, column: 1, scope: !5923)
!5934 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1595, file: !1595, line: 31, type: !5935, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5939)
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!912, !5937, !7, !5926}
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2435)
!5939 = !{!5940, !5941, !5942}
!5940 = !DILocalVariable(name: "vec_", arg: 1, scope: !5934, file: !1595, line: 31, type: !5937)
!5941 = !DILocalVariable(name: "ix_", arg: 2, scope: !5934, file: !1595, line: 31, type: !7)
!5942 = !DILocalVariable(name: "ptr", arg: 3, scope: !5934, file: !1595, line: 31, type: !5926)
!5943 = !DILocation(line: 0, scope: !5934)
!5944 = !DILocation(line: 31, column: 1, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5934, file: !1595, line: 31, column: 1)
!5946 = !DILocation(line: 31, column: 1, scope: !5934)
!5947 = !DILocation(line: 31, column: 1, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5945, file: !1595, line: 31, column: 1)
!5949 = !DILocation(line: 31, column: 1, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !1595, line: 31, column: 1)
!5951 = !DILocation(line: 0, scope: !5945)
!5952 = distinct !DISubprogram(name: "get_loop", scope: !153, file: !153, line: 417, type: !5953, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5955)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{!952, !7}
!5955 = !{!5956}
!5956 = !DILocalVariable(name: "num", arg: 1, scope: !5952, file: !153, line: 417, type: !7)
!5957 = !DILocation(line: 0, scope: !5952)
!5958 = !DILocation(line: 419, column: 10, scope: !5952)
!5959 = !DILocation(line: 419, column: 3, scope: !5952)
!5960 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1595, file: !1595, line: 32, type: !5961, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5964)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{null, !5963}
!5963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!5964 = !{!5965}
!5965 = !DILocalVariable(name: "vec_", arg: 1, scope: !5960, file: !1595, line: 32, type: !5963)
!5966 = !DILocation(line: 0, scope: !5960)
!5967 = !DILocation(line: 32, column: 1, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5960, file: !1595, line: 32, column: 1)
!5969 = !DILocation(line: 32, column: 1, scope: !5960)
!5970 = distinct !DISubprogram(name: "tree_predict_by_opcode", scope: !3, file: !3, line: 1332, type: !3495, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5971)
!5971 = !{!5972, !5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981}
!5972 = !DILocalVariable(name: "bb", arg: 1, scope: !5970, file: !3, line: 1332, type: !1612)
!5973 = !DILocalVariable(name: "stmt", scope: !5970, file: !3, line: 1334, type: !1648)
!5974 = !DILocalVariable(name: "then_edge", scope: !5970, file: !3, line: 1335, type: !925)
!5975 = !DILocalVariable(name: "op0", scope: !5970, file: !3, line: 1336, type: !984)
!5976 = !DILocalVariable(name: "op1", scope: !5970, file: !3, line: 1336, type: !984)
!5977 = !DILocalVariable(name: "type", scope: !5970, file: !3, line: 1337, type: !984)
!5978 = !DILocalVariable(name: "val", scope: !5970, file: !3, line: 1338, type: !984)
!5979 = !DILocalVariable(name: "cmp", scope: !5970, file: !3, line: 1339, type: !203)
!5980 = !DILocalVariable(name: "visited", scope: !5970, file: !3, line: 1340, type: !1881)
!5981 = !DILocalVariable(name: "ei", scope: !5970, file: !3, line: 1341, type: !2458)
!5982 = !DILocation(line: 0, scope: !5970)
!5983 = !DILocation(line: 1334, column: 17, scope: !5970)
!5984 = !DILocation(line: 1335, column: 3, scope: !5970)
!5985 = !DILocation(line: 1341, column: 3, scope: !5970)
!5986 = !DILocation(line: 1343, column: 8, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1343, column: 7)
!5988 = !DILocation(line: 1343, column: 13, scope: !5987)
!5989 = !DILocation(line: 1343, column: 16, scope: !5987)
!5990 = !DILocation(line: 1343, column: 35, scope: !5987)
!5991 = !DILocation(line: 1343, column: 7, scope: !5970)
!5992 = !DILocation(line: 1345, column: 3, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1345, column: 3)
!5994 = !DILocation(line: 0, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 1345, column: 3)
!5996 = !DILocation(line: 1345, column: 3, scope: !5995)
!5997 = !DILocation(line: 1346, column: 9, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 1346, column: 9)
!5999 = !DILocation(line: 1346, column: 20, scope: !5998)
!6000 = !DILocation(line: 1346, column: 26, scope: !5998)
!6001 = !DILocation(line: 1346, column: 9, scope: !5995)
!6002 = distinct !{!6002, !5992, !6003}
!6003 = !DILocation(line: 1347, column: 7, scope: !5993)
!6004 = !DILocation(line: 1348, column: 9, scope: !5970)
!6005 = !DILocation(line: 1349, column: 9, scope: !5970)
!6006 = !DILocation(line: 1350, column: 9, scope: !5970)
!6007 = !DILocation(line: 1351, column: 10, scope: !5970)
!6008 = !DILocation(line: 1352, column: 13, scope: !5970)
!6009 = !DILocation(line: 1353, column: 32, scope: !5970)
!6010 = !DILocation(line: 1353, column: 9, scope: !5970)
!6011 = !DILocation(line: 1354, column: 3, scope: !5970)
!6012 = !DILocation(line: 1355, column: 7, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1355, column: 7)
!6014 = !DILocation(line: 1355, column: 7, scope: !5970)
!6015 = !DILocation(line: 1357, column: 11, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 1357, column: 11)
!6017 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 1356, column: 5)
!6018 = !DILocation(line: 0, scope: !6016)
!6019 = !DILocation(line: 1357, column: 11, scope: !6017)
!6020 = !DILocation(line: 1358, column: 2, scope: !6016)
!6021 = !DILocation(line: 1360, column: 2, scope: !6016)
!6022 = !DILocation(line: 1366, column: 7, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1366, column: 7)
!6024 = !DILocation(line: 1366, column: 7, scope: !5970)
!6025 = !DILocation(line: 1368, column: 11, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 1367, column: 5)
!6027 = !DILocation(line: 1369, column: 20, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1368, column: 11)
!6029 = !DILocation(line: 1369, column: 2, scope: !6028)
!6030 = !DILocation(line: 1371, column: 20, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 1370, column: 16)
!6032 = !DILocation(line: 1371, column: 2, scope: !6031)
!6033 = !DILocation(line: 1379, column: 5, scope: !6023)
!6034 = !DILocation(line: 1386, column: 6, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1386, column: 6)
!6036 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 1380, column: 7)
!6037 = !DILocation(line: 1386, column: 6, scope: !6036)
!6038 = !DILocation(line: 1390, column: 11, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 1390, column: 11)
!6040 = !DILocation(line: 1390, column: 31, scope: !6039)
!6041 = !DILocation(line: 1390, column: 34, scope: !6039)
!6042 = !DILocation(line: 1390, column: 11, scope: !6035)
!6043 = !DILocation(line: 1393, column: 22, scope: !6039)
!6044 = !DILocation(line: 1393, column: 4, scope: !6039)
!6045 = !DILocation(line: 1401, column: 6, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1401, column: 6)
!6047 = !DILocation(line: 1401, column: 6, scope: !6036)
!6048 = !DILocation(line: 1405, column: 11, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 1405, column: 11)
!6050 = !DILocation(line: 1406, column: 4, scope: !6049)
!6051 = !DILocation(line: 1406, column: 7, scope: !6049)
!6052 = !DILocation(line: 1405, column: 11, scope: !6046)
!6053 = !DILocation(line: 1409, column: 22, scope: !6049)
!6054 = !DILocation(line: 1409, column: 4, scope: !6049)
!6055 = !DILocation(line: 1413, column: 20, scope: !6036)
!6056 = !DILocation(line: 1413, column: 2, scope: !6036)
!6057 = !DILocation(line: 1414, column: 2, scope: !6036)
!6058 = !DILocation(line: 1417, column: 20, scope: !6036)
!6059 = !DILocation(line: 1417, column: 2, scope: !6036)
!6060 = !DILocation(line: 1418, column: 2, scope: !6036)
!6061 = !DILocation(line: 1422, column: 6, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1422, column: 6)
!6063 = !DILocation(line: 1423, column: 6, scope: !6062)
!6064 = !DILocation(line: 1423, column: 9, scope: !6062)
!6065 = !DILocation(line: 1424, column: 6, scope: !6062)
!6066 = !DILocation(line: 1424, column: 9, scope: !6062)
!6067 = !DILocation(line: 1425, column: 6, scope: !6062)
!6068 = !DILocation(line: 1425, column: 9, scope: !6062)
!6069 = !DILocation(line: 1426, column: 6, scope: !6062)
!6070 = !DILocation(line: 1426, column: 9, scope: !6062)
!6071 = !DILocation(line: 1427, column: 6, scope: !6062)
!6072 = !DILocation(line: 1427, column: 9, scope: !6062)
!6073 = !DILocation(line: 1422, column: 6, scope: !6036)
!6074 = !DILocation(line: 1428, column: 22, scope: !6062)
!6075 = !DILocation(line: 1428, column: 4, scope: !6062)
!6076 = !DILocation(line: 1433, column: 6, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1433, column: 6)
!6078 = !DILocation(line: 1434, column: 6, scope: !6077)
!6079 = !DILocation(line: 1434, column: 9, scope: !6077)
!6080 = !DILocation(line: 1435, column: 6, scope: !6077)
!6081 = !DILocation(line: 1435, column: 9, scope: !6077)
!6082 = !DILocation(line: 1436, column: 6, scope: !6077)
!6083 = !DILocation(line: 1436, column: 9, scope: !6077)
!6084 = !DILocation(line: 1437, column: 6, scope: !6077)
!6085 = !DILocation(line: 1437, column: 9, scope: !6077)
!6086 = !DILocation(line: 1438, column: 6, scope: !6077)
!6087 = !DILocation(line: 1438, column: 9, scope: !6077)
!6088 = !DILocation(line: 1433, column: 6, scope: !6036)
!6089 = !DILocation(line: 1439, column: 22, scope: !6077)
!6090 = !DILocation(line: 1439, column: 4, scope: !6077)
!6091 = !DILocation(line: 1445, column: 1, scope: !5970)
!6092 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !839, file: !839, line: 2241, type: !5498, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6093)
!6093 = !{!6094}
!6094 = !DILocalVariable(name: "gs", arg: 1, scope: !6092, file: !839, line: 2241, type: !5480)
!6095 = !DILocation(line: 0, scope: !6092)
!6096 = !DILocation(line: 2244, column: 10, scope: !6092)
!6097 = !DILocation(line: 2244, column: 3, scope: !6092)
!6098 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !839, file: !839, line: 2271, type: !5498, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6099)
!6099 = !{!6100}
!6100 = !DILocalVariable(name: "gs", arg: 1, scope: !6098, file: !839, line: 2271, type: !5480)
!6101 = !DILocation(line: 0, scope: !6098)
!6102 = !DILocation(line: 2274, column: 10, scope: !6098)
!6103 = !DILocation(line: 2274, column: 3, scope: !6098)
!6104 = distinct !DISubprogram(name: "gimple_cond_code", scope: !839, file: !839, line: 2221, type: !6105, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6107)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!203, !5480}
!6107 = !{!6108}
!6108 = !DILocalVariable(name: "gs", arg: 1, scope: !6104, file: !839, line: 2221, type: !5480)
!6109 = !DILocation(line: 0, scope: !6104)
!6110 = !DILocation(line: 2224, column: 38, scope: !6104)
!6111 = !DILocation(line: 2224, column: 3, scope: !6104)
!6112 = distinct !DISubprogram(name: "expr_expected_value_1", scope: !3, file: !3, line: 1154, type: !6113, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6115)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{!984, !984, !984, !203, !984, !1881}
!6115 = !{!6116, !6117, !6118, !6119, !6120, !6121, !6122, !6127, !6128, !6129, !6130, !6134, !6137, !6140, !6143}
!6116 = !DILocalVariable(name: "type", arg: 1, scope: !6112, file: !3, line: 1154, type: !984)
!6117 = !DILocalVariable(name: "op0", arg: 2, scope: !6112, file: !3, line: 1154, type: !984)
!6118 = !DILocalVariable(name: "code", arg: 3, scope: !6112, file: !3, line: 1154, type: !203)
!6119 = !DILocalVariable(name: "op1", arg: 4, scope: !6112, file: !3, line: 1154, type: !984)
!6120 = !DILocalVariable(name: "visited", arg: 5, scope: !6112, file: !3, line: 1154, type: !1881)
!6121 = !DILocalVariable(name: "def", scope: !6112, file: !3, line: 1156, type: !1648)
!6122 = !DILocalVariable(name: "i", scope: !6123, file: !3, line: 1177, type: !912)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 1174, column: 2)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1173, column: 11)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 1159, column: 5)
!6126 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1158, column: 7)
!6127 = !DILocalVariable(name: "n", scope: !6123, file: !3, line: 1177, type: !912)
!6128 = !DILocalVariable(name: "val", scope: !6123, file: !3, line: 1178, type: !984)
!6129 = !DILocalVariable(name: "new_val", scope: !6123, file: !3, line: 1178, type: !984)
!6130 = !DILocalVariable(name: "arg", scope: !6131, file: !3, line: 1182, type: !984)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1181, column: 6)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 1180, column: 4)
!6133 = distinct !DILexicalBlock(scope: !6123, file: !3, line: 1180, column: 4)
!6134 = !DILocalVariable(name: "decl", scope: !6135, file: !3, line: 1217, type: !984)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 1216, column: 2)
!6136 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1215, column: 11)
!6137 = !DILocalVariable(name: "val", scope: !6138, file: !3, line: 1223, type: !984)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 1222, column: 6)
!6139 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 1220, column: 8)
!6140 = !DILocalVariable(name: "res", scope: !6141, file: !3, line: 1239, type: !984)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 1238, column: 5)
!6142 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1237, column: 7)
!6143 = !DILocalVariable(name: "res", scope: !6144, file: !3, line: 1253, type: !984)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 1252, column: 5)
!6145 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1251, column: 7)
!6146 = !DILocation(line: 1208, column: 11, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 1204, column: 2)
!6148 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1203, column: 11)
!6149 = !DILocation(line: 0, scope: !6112)
!6150 = !DILocation(line: 1158, column: 7, scope: !6126)
!6151 = !DILocation(line: 1158, column: 35, scope: !6126)
!6152 = !DILocation(line: 1158, column: 7, scope: !6112)
!6153 = !DILocation(line: 1160, column: 11, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1160, column: 11)
!6155 = !DILocation(line: 1160, column: 11, scope: !6125)
!6156 = !DILocation(line: 1163, column: 16, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1163, column: 11)
!6158 = !DILocation(line: 1163, column: 11, scope: !6125)
!6159 = !DILocation(line: 1166, column: 13, scope: !6125)
!6160 = !DILocation(line: 1169, column: 34, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1169, column: 11)
!6162 = !DILocation(line: 1169, column: 11, scope: !6161)
!6163 = !DILocation(line: 1169, column: 11, scope: !6125)
!6164 = !DILocation(line: 1171, column: 32, scope: !6125)
!6165 = !DILocation(line: 1171, column: 7, scope: !6125)
!6166 = !DILocation(line: 1173, column: 11, scope: !6124)
!6167 = !DILocation(line: 1173, column: 29, scope: !6124)
!6168 = !DILocation(line: 1173, column: 11, scope: !6125)
!6169 = !DILocation(line: 1177, column: 15, scope: !6123)
!6170 = !DILocation(line: 0, scope: !6123)
!6171 = !DILocation(line: 1180, column: 9, scope: !6133)
!6172 = !DILocation(line: 0, scope: !6133)
!6173 = !DILocation(line: 1178, column: 9, scope: !6123)
!6174 = !DILocation(line: 1180, column: 18, scope: !6132)
!6175 = !DILocation(line: 1180, column: 4, scope: !6133)
!6176 = !DILocation(line: 1182, column: 19, scope: !6131)
!6177 = !DILocation(line: 0, scope: !6131)
!6178 = !DILocation(line: 1190, column: 19, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1190, column: 12)
!6180 = !DILocation(line: 1190, column: 16, scope: !6179)
!6181 = !DILocation(line: 1190, column: 12, scope: !6131)
!6182 = !DILocation(line: 1193, column: 18, scope: !6131)
!6183 = !DILocation(line: 1194, column: 13, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1194, column: 12)
!6185 = !DILocation(line: 1194, column: 12, scope: !6131)
!6186 = !DILocation(line: 1196, column: 13, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1196, column: 12)
!6188 = !DILocation(line: 1196, column: 12, scope: !6131)
!6189 = !DILocation(line: 1198, column: 18, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1198, column: 17)
!6191 = !DILocation(line: 1198, column: 17, scope: !6187)
!6192 = !DILocation(line: 1200, column: 6, scope: !6132)
!6193 = !DILocation(line: 1180, column: 24, scope: !6132)
!6194 = !DILocation(line: 1180, column: 4, scope: !6132)
!6195 = distinct !{!6195, !6175, !6196}
!6196 = !DILocation(line: 1200, column: 6, scope: !6133)
!6197 = !DILocation(line: 1203, column: 11, scope: !6148)
!6198 = !DILocation(line: 1203, column: 11, scope: !6125)
!6199 = !DILocation(line: 1205, column: 8, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 1205, column: 8)
!6201 = !DILocation(line: 1205, column: 32, scope: !6200)
!6202 = !DILocation(line: 1205, column: 8, scope: !6147)
!6203 = !DILocation(line: 1208, column: 34, scope: !6147)
!6204 = !DILocation(line: 1209, column: 6, scope: !6147)
!6205 = !DILocation(line: 1210, column: 6, scope: !6147)
!6206 = !DILocation(line: 1211, column: 6, scope: !6147)
!6207 = !DILocation(line: 1215, column: 11, scope: !6136)
!6208 = !DILocation(line: 1215, column: 11, scope: !6125)
!6209 = !DILocation(line: 1217, column: 16, scope: !6135)
!6210 = !DILocation(line: 0, scope: !6135)
!6211 = !DILocation(line: 1218, column: 9, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 1218, column: 8)
!6213 = !DILocation(line: 1218, column: 8, scope: !6135)
!6214 = !DILocation(line: 1220, column: 8, scope: !6139)
!6215 = !DILocation(line: 1220, column: 35, scope: !6139)
!6216 = !DILocation(line: 1221, column: 8, scope: !6139)
!6217 = !DILocation(line: 1221, column: 11, scope: !6139)
!6218 = !DILocation(line: 1221, column: 37, scope: !6139)
!6219 = !DILocation(line: 1220, column: 8, scope: !6135)
!6220 = !DILocation(line: 1225, column: 12, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1225, column: 12)
!6222 = !DILocation(line: 1225, column: 39, scope: !6221)
!6223 = !DILocation(line: 1225, column: 12, scope: !6138)
!6224 = !DILocation(line: 1227, column: 14, scope: !6138)
!6225 = !DILocation(line: 0, scope: !6138)
!6226 = !DILocation(line: 1228, column: 12, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1228, column: 12)
!6228 = !DILocation(line: 1228, column: 12, scope: !6138)
!6229 = !DILocation(line: 1230, column: 15, scope: !6138)
!6230 = !DILocation(line: 1230, column: 8, scope: !6138)
!6231 = !DILocation(line: 1234, column: 7, scope: !6125)
!6232 = !DILocation(line: 1237, column: 7, scope: !6142)
!6233 = !DILocation(line: 1237, column: 35, scope: !6142)
!6234 = !DILocation(line: 1237, column: 7, scope: !6112)
!6235 = !DILocation(line: 1240, column: 13, scope: !6141)
!6236 = !DILocation(line: 1241, column: 12, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 1241, column: 11)
!6238 = !DILocation(line: 1241, column: 11, scope: !6141)
!6239 = !DILocation(line: 1243, column: 13, scope: !6141)
!6240 = !DILocation(line: 1244, column: 12, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 1244, column: 11)
!6242 = !DILocation(line: 1244, column: 11, scope: !6141)
!6243 = !DILocation(line: 1246, column: 13, scope: !6141)
!6244 = !DILocation(line: 0, scope: !6141)
!6245 = !DILocation(line: 1247, column: 11, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 1247, column: 11)
!6247 = !DILocation(line: 1251, column: 7, scope: !6145)
!6248 = !DILocation(line: 1251, column: 35, scope: !6145)
!6249 = !DILocation(line: 1251, column: 7, scope: !6112)
!6250 = !DILocation(line: 1254, column: 13, scope: !6144)
!6251 = !DILocation(line: 1255, column: 12, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1255, column: 11)
!6253 = !DILocation(line: 1255, column: 11, scope: !6144)
!6254 = !DILocation(line: 1257, column: 13, scope: !6144)
!6255 = !DILocation(line: 0, scope: !6144)
!6256 = !DILocation(line: 1258, column: 11, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1258, column: 11)
!6258 = !DILocation(line: 1263, column: 1, scope: !6112)
!6259 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !839, file: !839, line: 1686, type: !6260, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6262)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!903, !203}
!6262 = !{!6263}
!6263 = !DILocalVariable(name: "code", arg: 1, scope: !6259, file: !839, line: 1686, type: !203)
!6264 = !DILocation(line: 0, scope: !6259)
!6265 = !DILocation(line: 1688, column: 34, scope: !6259)
!6266 = !DILocation(line: 1688, column: 10, scope: !6259)
!6267 = !DILocation(line: 1688, column: 3, scope: !6259)
!6268 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !5610, file: !5610, line: 434, type: !6269, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6272)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!984, !6271}
!6271 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !1679, line: 27, baseType: !1683)
!6272 = !{!6273}
!6273 = !DILocalVariable(name: "def", arg: 1, scope: !6268, file: !5610, line: 434, type: !6271)
!6274 = !DILocation(line: 0, scope: !6268)
!6275 = !DILocation(line: 436, column: 10, scope: !6268)
!6276 = !DILocation(line: 436, column: 3, scope: !6268)
!6277 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !839, file: !839, line: 3080, type: !5667, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6278)
!6278 = !{!6279}
!6279 = !DILocalVariable(name: "gs", arg: 1, scope: !6277, file: !839, line: 3080, type: !1648)
!6280 = !DILocation(line: 0, scope: !6277)
!6281 = !DILocation(line: 3083, column: 26, scope: !6277)
!6282 = !DILocation(line: 3083, column: 3, scope: !6277)
!6283 = distinct !DISubprogram(name: "expr_expected_value", scope: !3, file: !3, line: 1274, type: !6284, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6286)
!6284 = !DISubroutineType(types: !6285)
!6285 = !{!984, !984, !1881}
!6286 = !{!6287, !6288, !6289, !6290, !6291}
!6287 = !DILocalVariable(name: "expr", arg: 1, scope: !6283, file: !3, line: 1274, type: !984)
!6288 = !DILocalVariable(name: "visited", arg: 2, scope: !6283, file: !3, line: 1274, type: !1881)
!6289 = !DILocalVariable(name: "code", scope: !6283, file: !3, line: 1276, type: !203)
!6290 = !DILocalVariable(name: "op0", scope: !6283, file: !3, line: 1277, type: !984)
!6291 = !DILocalVariable(name: "op1", scope: !6283, file: !3, line: 1277, type: !984)
!6292 = !DILocation(line: 0, scope: !6283)
!6293 = !DILocation(line: 1276, column: 3, scope: !6283)
!6294 = !DILocation(line: 1277, column: 3, scope: !6283)
!6295 = !DILocation(line: 1279, column: 7, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1279, column: 7)
!6297 = !DILocation(line: 1279, column: 7, scope: !6283)
!6298 = !DILocation(line: 1282, column: 3, scope: !6283)
!6299 = !DILocation(line: 1283, column: 33, scope: !6283)
!6300 = !DILocation(line: 1284, column: 5, scope: !6283)
!6301 = !DILocation(line: 1284, column: 10, scope: !6283)
!6302 = !DILocation(line: 1284, column: 16, scope: !6283)
!6303 = !DILocation(line: 1283, column: 10, scope: !6283)
!6304 = !DILocation(line: 1283, column: 3, scope: !6283)
!6305 = !DILocation(line: 1285, column: 1, scope: !6283)
!6306 = distinct !DISubprogram(name: "is_gimple_assign", scope: !839, file: !839, line: 1677, type: !5478, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6307)
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "gs", arg: 1, scope: !6306, file: !839, line: 1677, type: !5480)
!6309 = !DILocation(line: 0, scope: !6306)
!6310 = !DILocation(line: 1679, column: 10, scope: !6306)
!6311 = !DILocation(line: 1679, column: 27, scope: !6306)
!6312 = !DILocation(line: 1679, column: 3, scope: !6306)
!6313 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !839, file: !839, line: 1694, type: !5498, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6314)
!6314 = !{!6315}
!6315 = !DILocalVariable(name: "gs", arg: 1, scope: !6313, file: !839, line: 1694, type: !5480)
!6316 = !DILocation(line: 0, scope: !6313)
!6317 = !DILocation(line: 1697, column: 10, scope: !6313)
!6318 = !DILocation(line: 1697, column: 3, scope: !6313)
!6319 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !839, file: !839, line: 1727, type: !5498, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6320)
!6320 = !{!6321}
!6321 = !DILocalVariable(name: "gs", arg: 1, scope: !6319, file: !839, line: 1727, type: !5480)
!6322 = !DILocation(line: 0, scope: !6319)
!6323 = !DILocation(line: 1730, column: 10, scope: !6319)
!6324 = !DILocation(line: 1730, column: 3, scope: !6319)
!6325 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !839, file: !839, line: 1815, type: !6105, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6326)
!6326 = !{!6327, !6328}
!6327 = !DILocalVariable(name: "gs", arg: 1, scope: !6325, file: !839, line: 1815, type: !5480)
!6328 = !DILocalVariable(name: "code", scope: !6325, file: !839, line: 1817, type: !203)
!6329 = !DILocation(line: 0, scope: !6325)
!6330 = !DILocation(line: 1820, column: 10, scope: !6325)
!6331 = !DILocation(line: 1821, column: 7, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6325, file: !839, line: 1821, column: 7)
!6333 = !DILocation(line: 1821, column: 35, scope: !6332)
!6334 = !DILocation(line: 1821, column: 7, scope: !6325)
!6335 = !DILocation(line: 1822, column: 12, scope: !6332)
!6336 = !DILocation(line: 1822, column: 5, scope: !6332)
!6337 = !DILocation(line: 1824, column: 3, scope: !6325)
!6338 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !839, file: !839, line: 1759, type: !5498, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6339)
!6339 = !{!6340}
!6340 = !DILocalVariable(name: "gs", arg: 1, scope: !6338, file: !839, line: 1759, type: !5480)
!6341 = !DILocation(line: 0, scope: !6338)
!6342 = !DILocation(line: 1763, column: 7, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6338, file: !839, line: 1763, column: 7)
!6344 = !DILocation(line: 1763, column: 27, scope: !6343)
!6345 = !DILocation(line: 1763, column: 7, scope: !6338)
!6346 = !DILocation(line: 1764, column: 12, scope: !6343)
!6347 = !DILocation(line: 1764, column: 5, scope: !6343)
!6348 = !DILocation(line: 0, scope: !6343)
!6349 = !DILocation(line: 1767, column: 1, scope: !6338)
!6350 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !839, file: !839, line: 2013, type: !5556, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6351)
!6351 = !{!6352, !6353}
!6352 = !DILocalVariable(name: "gs", arg: 1, scope: !6350, file: !839, line: 2013, type: !5480)
!6353 = !DILocalVariable(name: "num_ops", scope: !6350, file: !839, line: 2015, type: !7)
!6354 = !DILocation(line: 0, scope: !6350)
!6355 = !DILocation(line: 2017, column: 13, scope: !6350)
!6356 = !DILocation(line: 2018, column: 18, scope: !6350)
!6357 = !DILocation(line: 2018, column: 3, scope: !6350)
!6358 = distinct !DISubprogram(name: "gimple_call_arg", scope: !839, file: !839, line: 2025, type: !5642, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6359)
!6359 = !{!6360, !6361}
!6360 = !DILocalVariable(name: "gs", arg: 1, scope: !6358, file: !839, line: 2025, type: !5480)
!6361 = !DILocalVariable(name: "index", arg: 2, scope: !6358, file: !839, line: 2025, type: !7)
!6362 = !DILocation(line: 0, scope: !6358)
!6363 = !DILocation(line: 2028, column: 31, scope: !6358)
!6364 = !DILocation(line: 2028, column: 10, scope: !6358)
!6365 = !DILocation(line: 2028, column: 3, scope: !6358)
!6366 = distinct !DISubprogram(name: "gimple_expr_code", scope: !839, file: !839, line: 1438, type: !6105, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6367)
!6367 = !{!6368, !6369}
!6368 = !DILocalVariable(name: "stmt", arg: 1, scope: !6366, file: !839, line: 1438, type: !5480)
!6369 = !DILocalVariable(name: "code", scope: !6366, file: !839, line: 1440, type: !865)
!6370 = !DILocation(line: 0, scope: !6366)
!6371 = !DILocation(line: 1440, column: 27, scope: !6366)
!6372 = !DILocation(line: 1441, column: 29, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6366, file: !839, line: 1441, column: 7)
!6374 = !DILocation(line: 1442, column: 42, scope: !6373)
!6375 = !DILocation(line: 1442, column: 5, scope: !6373)
!6376 = !DILocation(line: 1446, column: 5, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6373, file: !839, line: 1443, column: 12)
!6378 = !DILocation(line: 1448, column: 5, scope: !6366)
!6379 = !DILocation(line: 1450, column: 1, scope: !6366)
!6380 = distinct !DISubprogram(name: "gimple_num_ops", scope: !839, file: !839, line: 1596, type: !5556, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6381)
!6381 = !{!6382}
!6382 = !DILocalVariable(name: "gs", arg: 1, scope: !6380, file: !839, line: 1596, type: !5480)
!6383 = !DILocation(line: 0, scope: !6380)
!6384 = !DILocation(line: 1598, column: 21, scope: !6380)
!6385 = !DILocation(line: 1598, column: 3, scope: !6380)
!6386 = distinct !DISubprogram(name: "clear_bb_predictions", scope: !3, file: !3, line: 535, type: !3495, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6387)
!6387 = !{!6388, !6389, !6390, !6391}
!6388 = !DILocalVariable(name: "bb", arg: 1, scope: !6386, file: !3, line: 535, type: !1612)
!6389 = !DILocalVariable(name: "preds", scope: !6386, file: !3, line: 537, type: !1548)
!6390 = !DILocalVariable(name: "pred", scope: !6386, file: !3, line: 538, type: !919)
!6391 = !DILocalVariable(name: "next", scope: !6386, file: !3, line: 538, type: !919)
!6392 = !DILocation(line: 0, scope: !6386)
!6393 = !DILocation(line: 537, column: 40, scope: !6386)
!6394 = !DILocation(line: 537, column: 56, scope: !6386)
!6395 = !DILocation(line: 537, column: 18, scope: !6386)
!6396 = !DILocation(line: 540, column: 8, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 540, column: 7)
!6398 = !DILocation(line: 540, column: 7, scope: !6386)
!6399 = !DILocation(line: 543, column: 42, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 543, column: 3)
!6401 = !DILocation(line: 543, column: 8, scope: !6400)
!6402 = !DILocation(line: 0, scope: !6400)
!6403 = !DILocation(line: 543, column: 3, scope: !6400)
!6404 = !DILocation(line: 545, column: 20, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 544, column: 5)
!6406 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 543, column: 3)
!6407 = !DILocation(line: 546, column: 7, scope: !6405)
!6408 = !DILocation(line: 543, column: 3, scope: !6406)
!6409 = distinct !{!6409, !6403, !6410}
!6410 = !DILocation(line: 547, column: 5, scope: !6400)
!6411 = !DILocation(line: 548, column: 10, scope: !6386)
!6412 = !DILocation(line: 549, column: 1, scope: !6386)
!6413 = distinct !DISubprogram(name: "ei_end_p", scope: !142, file: !142, line: 721, type: !6414, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6416)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{!911, !2458}
!6416 = !{!6417}
!6417 = !DILocalVariable(name: "i", arg: 1, scope: !6413, file: !142, line: 721, type: !2458)
!6418 = !DILocation(line: 723, column: 22, scope: !6413)
!6419 = !DILocation(line: 723, column: 19, scope: !6413)
!6420 = !DILocation(line: 723, column: 10, scope: !6413)
!6421 = !DILocation(line: 723, column: 3, scope: !6413)
!6422 = distinct !DISubprogram(name: "ei_edge", scope: !142, file: !142, line: 752, type: !6423, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6425)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{!925, !2458}
!6425 = !{!6426}
!6426 = !DILocalVariable(name: "i", arg: 1, scope: !6422, file: !142, line: 752, type: !2458)
!6427 = !DILocation(line: 754, column: 10, scope: !6422)
!6428 = !DILocation(line: 754, column: 3, scope: !6422)
!6429 = distinct !DISubprogram(name: "ei_container", scope: !142, file: !142, line: 685, type: !6430, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6432)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!935, !2458}
!6432 = !{!6433}
!6433 = !DILocalVariable(name: "i", arg: 1, scope: !6429, file: !142, line: 685, type: !2458)
!6434 = !DILocation(line: 687, column: 3, scope: !6429)
!6435 = !DILocation(line: 688, column: 10, scope: !6429)
!6436 = !DILocation(line: 688, column: 3, scope: !6429)
!6437 = distinct !DISubprogram(name: "estimate_loops_at_level", scope: !3, file: !3, line: 1967, type: !6438, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6440)
!6438 = !DISubroutineType(types: !6439)
!6439 = !{null, !952}
!6440 = !{!6441, !6442, !6443, !6447, !6448, !6449}
!6441 = !DILocalVariable(name: "first_loop", arg: 1, scope: !6437, file: !3, line: 1967, type: !952)
!6442 = !DILocalVariable(name: "loop", scope: !6437, file: !3, line: 1969, type: !952)
!6443 = !DILocalVariable(name: "e", scope: !6444, file: !3, line: 1973, type: !925)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1972, column: 5)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 1971, column: 3)
!6446 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 1971, column: 3)
!6447 = !DILocalVariable(name: "bbs", scope: !6444, file: !3, line: 1974, type: !4192)
!6448 = !DILocalVariable(name: "i", scope: !6444, file: !3, line: 1975, type: !7)
!6449 = !DILocalVariable(name: "tovisit", scope: !6444, file: !3, line: 1976, type: !1881)
!6450 = !DILocation(line: 0, scope: !6437)
!6451 = !DILocation(line: 1971, column: 8, scope: !6446)
!6452 = !DILocation(line: 0, scope: !6446)
!6453 = !DILocation(line: 1971, column: 3, scope: !6446)
!6454 = !DILocation(line: 1976, column: 24, scope: !6444)
!6455 = !DILocation(line: 0, scope: !6444)
!6456 = !DILocation(line: 1978, column: 38, scope: !6444)
!6457 = !DILocation(line: 1978, column: 7, scope: !6444)
!6458 = !DILocation(line: 1981, column: 11, scope: !6444)
!6459 = !DILocation(line: 1982, column: 7, scope: !6444)
!6460 = !DILocation(line: 1982, column: 22, scope: !6444)
!6461 = !DILocation(line: 1982, column: 32, scope: !6444)
!6462 = !DILocation(line: 1984, column: 13, scope: !6444)
!6463 = !DILocation(line: 0, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1985, column: 7)
!6465 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 1985, column: 7)
!6466 = !DILocation(line: 1985, column: 12, scope: !6465)
!6467 = !DILocation(line: 0, scope: !6465)
!6468 = !DILocation(line: 1985, column: 29, scope: !6464)
!6469 = !DILocation(line: 1985, column: 21, scope: !6464)
!6470 = !DILocation(line: 1985, column: 7, scope: !6465)
!6471 = !DILocation(line: 1986, column: 27, scope: !6464)
!6472 = !DILocation(line: 1986, column: 35, scope: !6464)
!6473 = !DILocation(line: 1986, column: 2, scope: !6464)
!6474 = !DILocation(line: 1985, column: 41, scope: !6464)
!6475 = !DILocation(line: 1985, column: 7, scope: !6464)
!6476 = distinct !{!6476, !6470, !6477}
!6477 = !DILocation(line: 1986, column: 40, scope: !6465)
!6478 = !DILocation(line: 1987, column: 13, scope: !6444)
!6479 = !DILocation(line: 1987, column: 7, scope: !6444)
!6480 = !DILocation(line: 1988, column: 29, scope: !6444)
!6481 = !DILocation(line: 1988, column: 7, scope: !6444)
!6482 = !DILocation(line: 1989, column: 7, scope: !6444)
!6483 = !DILocation(line: 1971, column: 46, scope: !6445)
!6484 = !DILocation(line: 1971, column: 3, scope: !6445)
!6485 = distinct !{!6485, !6453, !6486}
!6486 = !DILocation(line: 1990, column: 5, scope: !6446)
!6487 = !DILocation(line: 1991, column: 1, scope: !6437)
!6488 = distinct !DISubprogram(name: "propagate_freq", scope: !3, file: !3, line: 1829, type: !6489, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6491)
!6489 = !DISubroutineType(types: !6490)
!6490 = !{null, !1612, !1881}
!6491 = !{!6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499, !6507, !6511, !6512, !6516, !6520, !6521, !6522, !6530}
!6492 = !DILocalVariable(name: "head", arg: 1, scope: !6488, file: !3, line: 1829, type: !1612)
!6493 = !DILocalVariable(name: "tovisit", arg: 2, scope: !6488, file: !3, line: 1829, type: !1881)
!6494 = !DILocalVariable(name: "bb", scope: !6488, file: !3, line: 1831, type: !1612)
!6495 = !DILocalVariable(name: "last", scope: !6488, file: !3, line: 1832, type: !1612)
!6496 = !DILocalVariable(name: "i", scope: !6488, file: !3, line: 1833, type: !7)
!6497 = !DILocalVariable(name: "e", scope: !6488, file: !3, line: 1834, type: !925)
!6498 = !DILocalVariable(name: "nextbb", scope: !6488, file: !3, line: 1835, type: !1612)
!6499 = !DILocalVariable(name: "bi", scope: !6488, file: !3, line: 1836, type: !6500)
!6500 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !1209, line: 218, baseType: !6501)
!6501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1209, line: 203, size: 256, elements: !6502)
!6502 = !{!6503, !6504, !6505, !6506}
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !6501, file: !1209, line: 206, baseType: !1212, size: 64)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !6501, file: !1209, line: 209, baseType: !1212, size: 64, offset: 64)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !6501, file: !1209, line: 212, baseType: !7, size: 32, offset: 128)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !6501, file: !1209, line: 217, baseType: !1222, size: 64, offset: 192)
!6507 = !DILocalVariable(name: "ei", scope: !6508, file: !3, line: 1842, type: !2458)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1841, column: 5)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 1840, column: 3)
!6510 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 1840, column: 3)
!6511 = !DILocalVariable(name: "count", scope: !6508, file: !3, line: 1843, type: !912)
!6512 = !DILocalVariable(name: "visit", scope: !6513, file: !3, line: 1852, type: !911)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 1851, column: 2)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1850, column: 7)
!6515 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1850, column: 7)
!6516 = !DILocalVariable(name: "ei", scope: !6517, file: !3, line: 1868, type: !2458)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 1867, column: 5)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 1866, column: 3)
!6519 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 1866, column: 3)
!6520 = !DILocalVariable(name: "cyclic_probability", scope: !6517, file: !3, line: 1869, type: !2413)
!6521 = !DILocalVariable(name: "frequency", scope: !6517, file: !3, line: 1869, type: !2413)
!6522 = !DILocalVariable(name: "tmp", scope: !6523, file: !3, line: 1894, type: !2413)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 1893, column: 8)
!6524 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1892, column: 15)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 1887, column: 10)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1886, column: 4)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1886, column: 4)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 1879, column: 2)
!6529 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 1878, column: 11)
!6530 = !DILocalVariable(name: "tmp", scope: !6531, file: !3, line: 1933, type: !2413)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 1932, column: 2)
!6532 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 1931, column: 11)
!6533 = !DILocation(line: 0, scope: !6488)
!6534 = !DILocation(line: 1833, column: 3, scope: !6488)
!6535 = !DILocation(line: 1834, column: 3, scope: !6488)
!6536 = !DILocation(line: 1836, column: 3, scope: !6488)
!6537 = !DILocation(line: 1840, column: 3, scope: !6510)
!6538 = !DILocation(line: 0, scope: !6508)
!6539 = !DILocation(line: 0, scope: !6515)
!6540 = !DILocation(line: 0, scope: !6514)
!6541 = !DILocation(line: 1840, column: 3, scope: !6509)
!6542 = !DILocation(line: 1842, column: 7, scope: !6508)
!6543 = !DILocation(line: 1848, column: 12, scope: !6508)
!6544 = !DILocation(line: 1850, column: 7, scope: !6515)
!6545 = !DILocation(line: 0, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1856, column: 13)
!6547 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 1854, column: 8)
!6548 = !DILocation(line: 1843, column: 11, scope: !6508)
!6549 = !DILocation(line: 1850, column: 7, scope: !6514)
!6550 = !DILocation(line: 1852, column: 40, scope: !6513)
!6551 = !DILocation(line: 1852, column: 43, scope: !6513)
!6552 = !DILocation(line: 1852, column: 48, scope: !6513)
!6553 = !DILocation(line: 1852, column: 17, scope: !6513)
!6554 = !DILocation(line: 1854, column: 8, scope: !6547)
!6555 = !DILocation(line: 1854, column: 14, scope: !6547)
!6556 = !DILocation(line: 1854, column: 19, scope: !6547)
!6557 = !DILocation(line: 1854, column: 22, scope: !6547)
!6558 = !DILocation(line: 1854, column: 28, scope: !6547)
!6559 = !DILocation(line: 1854, column: 8, scope: !6513)
!6560 = !DILocation(line: 1855, column: 11, scope: !6547)
!6561 = !DILocation(line: 1855, column: 6, scope: !6547)
!6562 = !DILocation(line: 1856, column: 13, scope: !6546)
!6563 = !DILocation(line: 1856, column: 22, scope: !6546)
!6564 = !DILocation(line: 1856, column: 19, scope: !6546)
!6565 = !DILocation(line: 1856, column: 36, scope: !6546)
!6566 = !DILocation(line: 1856, column: 51, scope: !6546)
!6567 = !DILocation(line: 1856, column: 13, scope: !6547)
!6568 = !DILocation(line: 1859, column: 11, scope: !6546)
!6569 = !DILocation(line: 1859, column: 16, scope: !6546)
!6570 = !DILocation(line: 1859, column: 27, scope: !6546)
!6571 = !DILocation(line: 1857, column: 6, scope: !6546)
!6572 = distinct !{!6572, !6544, !6573}
!6573 = !DILocation(line: 1860, column: 2, scope: !6515)
!6574 = !DILocation(line: 1861, column: 7, scope: !6508)
!6575 = !DILocation(line: 1861, column: 24, scope: !6508)
!6576 = !DILocation(line: 1861, column: 38, scope: !6508)
!6577 = !DILocation(line: 1862, column: 5, scope: !6509)
!6578 = distinct !{!6578, !6537, !6579}
!6579 = !DILocation(line: 1862, column: 5, scope: !6510)
!6580 = !DILocation(line: 1864, column: 12, scope: !6488)
!6581 = !DILocation(line: 1864, column: 3, scope: !6488)
!6582 = !DILocation(line: 0, scope: !6517)
!6583 = !DILocation(line: 0, scope: !6527)
!6584 = !DILocation(line: 0, scope: !6526)
!6585 = !DILocation(line: 0, scope: !6523)
!6586 = !DILocation(line: 0, scope: !6531)
!6587 = !DILocation(line: 0, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 1946, column: 7)
!6589 = !DILocation(line: 1866, column: 8, scope: !6519)
!6590 = !DILocation(line: 1865, column: 8, scope: !6488)
!6591 = !DILocation(line: 0, scope: !6519)
!6592 = !DILocation(line: 1866, column: 3, scope: !6519)
!6593 = !DILocation(line: 1868, column: 7, scope: !6517)
!6594 = !DILocation(line: 1869, column: 7, scope: !6517)
!6595 = !DILocation(line: 1871, column: 7, scope: !6517)
!6596 = !DILocation(line: 1872, column: 7, scope: !6517)
!6597 = !DILocation(line: 1874, column: 16, scope: !6517)
!6598 = !DILocation(line: 1874, column: 33, scope: !6517)
!6599 = !DILocation(line: 1875, column: 29, scope: !6517)
!6600 = !DILocation(line: 1878, column: 14, scope: !6529)
!6601 = !DILocation(line: 1878, column: 11, scope: !6517)
!6602 = !DILocation(line: 1886, column: 4, scope: !6527)
!6603 = !DILocation(line: 1886, column: 4, scope: !6526)
!6604 = !DILocation(line: 1887, column: 10, scope: !6525)
!6605 = !DILocation(line: 1887, column: 25, scope: !6525)
!6606 = !DILocation(line: 1887, column: 10, scope: !6526)
!6607 = !DILocation(line: 1890, column: 23, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1888, column: 8)
!6609 = !DILocation(line: 1889, column: 3, scope: !6608)
!6610 = !DILocation(line: 1891, column: 8, scope: !6608)
!6611 = !DILocation(line: 1892, column: 20, scope: !6524)
!6612 = !DILocation(line: 1892, column: 26, scope: !6524)
!6613 = !DILocation(line: 1892, column: 15, scope: !6525)
!6614 = !DILocation(line: 1894, column: 3, scope: !6523)
!6615 = !DILocation(line: 1900, column: 24, scope: !6523)
!6616 = !DILocation(line: 1900, column: 21, scope: !6523)
!6617 = !DILocation(line: 1900, column: 3, scope: !6523)
!6618 = !DILocation(line: 1901, column: 27, scope: !6523)
!6619 = !DILocation(line: 1901, column: 48, scope: !6523)
!6620 = !DILocation(line: 1901, column: 3, scope: !6523)
!6621 = !DILocation(line: 1902, column: 3, scope: !6523)
!6622 = !DILocation(line: 1903, column: 3, scope: !6523)
!6623 = !DILocation(line: 1904, column: 8, scope: !6524)
!6624 = !DILocation(line: 1904, column: 8, scope: !6523)
!6625 = distinct !{!6625, !6602, !6626}
!6626 = !DILocation(line: 1904, column: 8, scope: !6527)
!6627 = !DILocation(line: 1906, column: 8, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1906, column: 8)
!6629 = !DILocation(line: 1906, column: 56, scope: !6628)
!6630 = !DILocation(line: 1906, column: 8, scope: !6528)
!6631 = !DILocation(line: 1908, column: 17, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 1907, column: 6)
!6633 = !DILocation(line: 1908, column: 8, scope: !6632)
!6634 = !DILocation(line: 1910, column: 6, scope: !6632)
!6635 = !DILocation(line: 1913, column: 12, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1913, column: 12)
!6637 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 1912, column: 6)
!6638 = !DILocation(line: 1913, column: 66, scope: !6636)
!6639 = !DILocation(line: 1913, column: 12, scope: !6637)
!6640 = !DILocation(line: 1915, column: 5, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1914, column: 3)
!6642 = !DILocation(line: 1917, column: 3, scope: !6641)
!6643 = !DILocation(line: 1922, column: 8, scope: !6637)
!6644 = !DILocation(line: 1923, column: 20, scope: !6637)
!6645 = !DILocation(line: 1923, column: 37, scope: !6637)
!6646 = !DILocation(line: 1923, column: 8, scope: !6637)
!6647 = !DILocation(line: 1928, column: 38, scope: !6517)
!6648 = !DILocation(line: 1928, column: 7, scope: !6517)
!6649 = !DILocation(line: 1930, column: 11, scope: !6517)
!6650 = !DILocation(line: 1930, column: 9, scope: !6517)
!6651 = !DILocation(line: 1931, column: 11, scope: !6532)
!6652 = !DILocation(line: 1931, column: 11, scope: !6517)
!6653 = !DILocation(line: 1933, column: 4, scope: !6531)
!6654 = !DILocation(line: 1939, column: 25, scope: !6531)
!6655 = !DILocation(line: 1939, column: 22, scope: !6531)
!6656 = !DILocation(line: 1939, column: 4, scope: !6531)
!6657 = !DILocation(line: 1940, column: 28, scope: !6531)
!6658 = !DILocation(line: 1940, column: 45, scope: !6531)
!6659 = !DILocation(line: 1940, column: 4, scope: !6531)
!6660 = !DILocation(line: 1941, column: 16, scope: !6531)
!6661 = !DILocation(line: 1941, column: 31, scope: !6531)
!6662 = !DILocation(line: 1941, column: 4, scope: !6531)
!6663 = !DILocation(line: 1943, column: 2, scope: !6532)
!6664 = !DILocation(line: 1943, column: 2, scope: !6531)
!6665 = !DILocation(line: 1946, column: 7, scope: !6588)
!6666 = !DILocation(line: 1874, column: 14, scope: !6517)
!6667 = !DILocation(line: 1946, column: 7, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1946, column: 7)
!6669 = !DILocation(line: 1947, column: 8, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1947, column: 6)
!6671 = !DILocation(line: 1947, column: 11, scope: !6670)
!6672 = !DILocation(line: 1947, column: 17, scope: !6670)
!6673 = !DILocation(line: 1948, column: 6, scope: !6670)
!6674 = !DILocation(line: 1948, column: 9, scope: !6670)
!6675 = !DILocation(line: 1948, column: 31, scope: !6670)
!6676 = !DILocation(line: 1947, column: 6, scope: !6668)
!6677 = !DILocation(line: 1950, column: 41, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1949, column: 4)
!6679 = !DILocation(line: 1951, column: 11, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1951, column: 10)
!6681 = !DILocation(line: 1951, column: 33, scope: !6680)
!6682 = !DILocation(line: 1951, column: 10, scope: !6678)
!6683 = !DILocation(line: 1953, column: 8, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 1953, column: 7)
!6685 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 1952, column: 8)
!6686 = !DILocation(line: 1953, column: 7, scope: !6685)
!6687 = !DILocation(line: 1956, column: 5, scope: !6684)
!6688 = !DILocation(line: 1956, column: 24, scope: !6684)
!6689 = !DILocation(line: 1956, column: 29, scope: !6684)
!6690 = !DILocation(line: 1958, column: 13, scope: !6685)
!6691 = !DILocation(line: 1959, column: 8, scope: !6685)
!6692 = distinct !{!6692, !6665, !6693}
!6693 = !DILocation(line: 1960, column: 4, scope: !6588)
!6694 = !DILocation(line: 1961, column: 5, scope: !6518)
!6695 = !DILocation(line: 1866, column: 3, scope: !6518)
!6696 = distinct !{!6696, !6592, !6697}
!6697 = !DILocation(line: 1961, column: 5, scope: !6519)
!6698 = !DILocation(line: 1962, column: 1, scope: !6488)
!6699 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !1209, file: !1209, line: 224, type: !6700, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6707)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{null, !6702, !6703, !7, !6706}
!6702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6500, size: 64)
!6703 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !926, line: 48, baseType: !6704)
!6704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6705, size: 64)
!6705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6707 = !{!6708, !6709, !6710, !6711}
!6708 = !DILocalVariable(name: "bi", arg: 1, scope: !6699, file: !1209, line: 224, type: !6702)
!6709 = !DILocalVariable(name: "map", arg: 2, scope: !6699, file: !1209, line: 224, type: !6703)
!6710 = !DILocalVariable(name: "start_bit", arg: 3, scope: !6699, file: !1209, line: 225, type: !7)
!6711 = !DILocalVariable(name: "bit_no", arg: 4, scope: !6699, file: !1209, line: 225, type: !6706)
!6712 = !DILocation(line: 0, scope: !6699)
!6713 = !DILocation(line: 227, column: 19, scope: !6699)
!6714 = !DILocation(line: 227, column: 12, scope: !6699)
!6715 = !DILocation(line: 228, column: 7, scope: !6699)
!6716 = !DILocation(line: 228, column: 12, scope: !6699)
!6717 = !DILocation(line: 0, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !1209, line: 233, column: 11)
!6719 = distinct !DILexicalBlock(scope: !6699, file: !1209, line: 232, column: 5)
!6720 = !DILocation(line: 231, column: 3, scope: !6699)
!6721 = !DILocation(line: 233, column: 12, scope: !6718)
!6722 = !DILocation(line: 233, column: 11, scope: !6719)
!6723 = !DILocation(line: 235, column: 13, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6718, file: !1209, line: 234, column: 2)
!6725 = !DILocation(line: 236, column: 4, scope: !6724)
!6726 = !DILocation(line: 239, column: 11, scope: !6719)
!6727 = distinct !{!6727, !6720, !6728}
!6728 = !DILocation(line: 242, column: 5, scope: !6699)
!6729 = !DILocation(line: 245, column: 11, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6699, file: !1209, line: 245, column: 7)
!6731 = !DILocation(line: 245, column: 17, scope: !6730)
!6732 = !DILocation(line: 245, column: 22, scope: !6730)
!6733 = !DILocation(line: 245, column: 7, scope: !6699)
!6734 = !DILocation(line: 246, column: 27, scope: !6730)
!6735 = !DILocation(line: 246, column: 32, scope: !6730)
!6736 = !DILocation(line: 246, column: 5, scope: !6730)
!6737 = !DILocation(line: 249, column: 7, scope: !6699)
!6738 = !DILocation(line: 249, column: 15, scope: !6699)
!6739 = !DILocation(line: 250, column: 14, scope: !6699)
!6740 = !DILocation(line: 251, column: 7, scope: !6699)
!6741 = !DILocation(line: 251, column: 12, scope: !6699)
!6742 = !DILocation(line: 257, column: 16, scope: !6699)
!6743 = !DILocation(line: 257, column: 13, scope: !6699)
!6744 = !DILocation(line: 259, column: 11, scope: !6699)
!6745 = !DILocation(line: 260, column: 1, scope: !6699)
!6746 = distinct !DISubprogram(name: "bmp_iter_set", scope: !1209, file: !1209, line: 393, type: !6747, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6749)
!6747 = !DISubroutineType(types: !6748)
!6748 = !{!911, !6702, !6706}
!6749 = !{!6750, !6751, !6752}
!6750 = !DILocalVariable(name: "bi", arg: 1, scope: !6746, file: !1209, line: 393, type: !6702)
!6751 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6746, file: !1209, line: 393, type: !6706)
!6752 = !DILabel(scope: !6753, name: "next_bit", file: !1209, line: 398)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !1209, line: 397, column: 5)
!6754 = distinct !DILexicalBlock(scope: !6746, file: !1209, line: 396, column: 7)
!6755 = !DILocation(line: 0, scope: !6746)
!6756 = !DILocation(line: 396, column: 11, scope: !6754)
!6757 = !DILocation(line: 396, column: 7, scope: !6754)
!6758 = !DILocation(line: 396, column: 7, scope: !6746)
!6759 = !DILocation(line: 419, column: 15, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !1209, line: 418, column: 2)
!6761 = distinct !DILexicalBlock(scope: !6746, file: !1209, line: 415, column: 5)
!6762 = !DILocation(line: 399, column: 7, scope: !6753)
!6763 = !DILocation(line: 398, column: 5, scope: !6753)
!6764 = !DILocation(line: 399, column: 20, scope: !6753)
!6765 = !DILocation(line: 399, column: 25, scope: !6753)
!6766 = !DILocation(line: 399, column: 14, scope: !6753)
!6767 = !DILocation(line: 401, column: 13, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6753, file: !1209, line: 400, column: 2)
!6769 = !DILocation(line: 402, column: 12, scope: !6768)
!6770 = distinct !{!6770, !6762, !6771}
!6771 = !DILocation(line: 403, column: 2, scope: !6753)
!6772 = !DILocation(line: 410, column: 15, scope: !6746)
!6773 = !DILocation(line: 410, column: 42, scope: !6746)
!6774 = !DILocation(line: 411, column: 26, scope: !6746)
!6775 = !DILocation(line: 410, column: 11, scope: !6746)
!6776 = !DILocation(line: 412, column: 7, scope: !6746)
!6777 = !DILocation(line: 412, column: 14, scope: !6746)
!6778 = !DILocation(line: 0, scope: !6761)
!6779 = !DILocation(line: 414, column: 3, scope: !6746)
!6780 = !DILocation(line: 417, column: 7, scope: !6761)
!6781 = !DILocation(line: 417, column: 18, scope: !6761)
!6782 = !DILocation(line: 417, column: 26, scope: !6761)
!6783 = !DILocation(line: 419, column: 13, scope: !6760)
!6784 = !DILocation(line: 420, column: 8, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6760, file: !1209, line: 420, column: 8)
!6786 = !DILocation(line: 420, column: 8, scope: !6760)
!6787 = !DILocation(line: 422, column: 12, scope: !6760)
!6788 = !DILocation(line: 423, column: 15, scope: !6760)
!6789 = distinct !{!6789, !6780, !6790}
!6790 = !DILocation(line: 424, column: 2, scope: !6761)
!6791 = !DILocation(line: 427, column: 28, scope: !6761)
!6792 = !DILocation(line: 427, column: 16, scope: !6761)
!6793 = !DILocation(line: 428, column: 12, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6761, file: !1209, line: 428, column: 11)
!6795 = !DILocation(line: 428, column: 11, scope: !6761)
!6796 = !DILocation(line: 430, column: 27, scope: !6761)
!6797 = !DILocation(line: 430, column: 32, scope: !6761)
!6798 = !DILocation(line: 430, column: 15, scope: !6761)
!6799 = !DILocation(line: 431, column: 19, scope: !6761)
!6800 = distinct !{!6800, !6779, !6801}
!6801 = !DILocation(line: 432, column: 5, scope: !6746)
!6802 = !DILocation(line: 433, column: 1, scope: !6746)
!6803 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !142, file: !142, line: 281, type: !6804, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6808)
!6804 = !DISubroutineType(types: !6805)
!6805 = !{!1612, !6806, !7}
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6807, size: 64)
!6807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!6808 = !{!6809, !6810}
!6809 = !DILocalVariable(name: "vec_", arg: 1, scope: !6803, file: !142, line: 281, type: !6806)
!6810 = !DILocalVariable(name: "ix_", arg: 2, scope: !6803, file: !142, line: 281, type: !7)
!6811 = !DILocation(line: 0, scope: !6803)
!6812 = !DILocation(line: 281, column: 1, scope: !6803)
!6813 = distinct !DISubprogram(name: "bmp_iter_next", scope: !1209, file: !1209, line: 382, type: !6814, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6816)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{null, !6702, !6706}
!6816 = !{!6817, !6818}
!6817 = !DILocalVariable(name: "bi", arg: 1, scope: !6813, file: !1209, line: 382, type: !6702)
!6818 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6813, file: !1209, line: 382, type: !6706)
!6819 = !DILocation(line: 0, scope: !6813)
!6820 = !DILocation(line: 384, column: 7, scope: !6813)
!6821 = !DILocation(line: 384, column: 12, scope: !6813)
!6822 = !DILocation(line: 385, column: 11, scope: !6813)
!6823 = !DILocation(line: 386, column: 1, scope: !6813)
!6824 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !839, file: !839, line: 1878, type: !5498, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6825)
!6825 = !{!6826}
!6826 = !DILocalVariable(name: "gs", arg: 1, scope: !6824, file: !839, line: 1878, type: !5480)
!6827 = !DILocation(line: 0, scope: !6824)
!6828 = !DILocation(line: 1881, column: 10, scope: !6824)
!6829 = !DILocation(line: 1881, column: 3, scope: !6824)
