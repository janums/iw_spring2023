; ModuleID = 'haifa-sched.bc'
source_filename = "haifa-sched.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ready_list = type { %struct.rtx_def**, i32, i32, i32, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.common_sched_info_def = type { void (i32, i32, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, i32 (%struct.basic_block_def*)*, i32 (%struct.rtx_def*)*, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_haifa_insn_data_def_heap = type { %struct.VEC_haifa_insn_data_def_base }
%struct.VEC_haifa_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_insn_data] }
%struct._haifa_insn_data = type { i32, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.basic_block_def*, %struct.rtx_def*, %struct.reg_pressure_data*, i32*, %struct.reg_use_data*, %struct.reg_set_data*, i32 }
%struct.reg_pressure_data = type { i32 }
%struct.reg_use_data = type { i32, %struct.rtx_def*, %struct.reg_use_data*, %struct.reg_use_data* }
%struct.reg_set_data = type { i32, %struct.rtx_def*, %struct.reg_set_data* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.choice_entry = type { i32, i32, i32, i8* }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.sched_deps_info_def = type { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (i32)*, void (i32)*, void (i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, i8 }
%struct.sched_scan_info_def = type { void ()*, void (%struct.basic_block_def*)*, void ()*, void (%struct.rtx_def*)* }
%struct._dep_link = type { %struct._dep_node*, %struct._dep_link*, %struct._dep_link** }
%struct._dep_node = type { %struct._dep_link, %struct._dep, %struct._dep_link }
%struct.VEC_haifa_deps_insn_data_def_heap = type { %struct.VEC_haifa_deps_insn_data_def_base }
%struct.VEC_haifa_deps_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_deps_insn_data] }
%struct._haifa_deps_insn_data = type { i32, i32, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, i8 }
%struct._deps_list = type { %struct._dep_link*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.VEC_rtx_heap = type { %struct.VEC_rtx_base }
%struct._sd_iterator = type { i32, %struct.rtx_def*, %struct._dep_link**, i8 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@sched_verbose = dso_local local_unnamed_addr global i32 0, align 4, !dbg !0
@sched_dump = dso_local local_unnamed_addr global %struct._IO_FILE* null, align 8, !dbg !1960
@.str = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@sched_verbose_param = internal unnamed_addr global i32 0, align 4, !dbg !2199
@.str.1 = private unnamed_addr constant [35 x i8] c"fix_sched_param: unknown param: %s\00", align 1
@spec_info = dso_local local_unnamed_addr global %struct.spec_info_def* null, align 8, !dbg !2013
@adding_bb_to_current_region_p = dso_local local_unnamed_addr global i8 1, align 1, !dbg !2025
@ready_try = dso_local local_unnamed_addr global i8* null, align 8, !dbg !2027
@ready = dso_local global %struct.ready_list zeroinitializer, align 8, !dbg !2029
@haifa_common_sched_info = dso_local local_unnamed_addr constant %struct.common_sched_info_def { void (i32, i32, i32)* null, void (%struct.basic_block_def*, %struct.basic_block_def*)* null, i32 (%struct.basic_block_def*)* null, i32 (%struct.rtx_def*)* @haifa_luid_for_non_insn, i32 0 }, align 8, !dbg !2038
@sched_luids = dso_local global %struct.VEC_int_heap* null, align 8, !dbg !2060
@sched_max_luid = dso_local local_unnamed_addr global i32 1, align 4, !dbg !2062
@h_i_d = dso_local global %struct.VEC_haifa_insn_data_def_heap* null, align 8, !dbg !2064
@region_ref_regs = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2185
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.2 = private unnamed_addr constant [14 x i8] c"haifa-sched.c\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@sched_pressure_p = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !2177
@note_list = common dso_local local_unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2071
@dfa_lookahead = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2195
@cached_first_cycle_multipass_dfa_lookahead = internal unnamed_addr global i32 0, align 4, !dbg !2236
@max_lookahead_tries = internal unnamed_addr global i32 0, align 4, !dbg !2197
@issue_rate = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2066
@cycle_issued_insns = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2193
@choice_stack = internal unnamed_addr global %struct.choice_entry* null, align 8, !dbg !2191
@dfa_state_size = common dso_local local_unnamed_addr global i64 0, align 8, !dbg !2095
@current_sched_info = common dso_local local_unnamed_addr global %struct.haifa_sched_info* null, align 8, !dbg !2130
@haifa_recovery_bb_recently_added_p = internal unnamed_addr global i1 false, align 1, !dbg !2290
@curr_state = common dso_local local_unnamed_addr global i8* null, align 8, !dbg !2093
@last_scheduled_insn = internal unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2187
@q_ptr = internal unnamed_addr global i32 0, align 4, !dbg !2238
@q_size = internal unnamed_addr global i32 0, align 4, !dbg !2240
@max_insn_queue_index = external dso_local local_unnamed_addr constant i32, align 4
@insn_queue = internal unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2091
@clock_var = internal unnamed_addr global i32 0, align 4, !dbg !2097
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.4 = private unnamed_addr constant [35 x i8] c";;\09\09Ready list on entry: %d insns\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c";;\09\09 before reload => truncated to %d insns\0A\00", align 1
@last_clock_var = internal unnamed_addr global i32 0, align 4, !dbg !2189
@.str.6 = private unnamed_addr constant [39 x i8] c";;\09\09Ready list after queue_to_ready:  \00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c";;\09\09Ready list after ready_sort:  \00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c";;\09Ready list (t = %3d):  \00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c";;\09\09Second chance\0A\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c";;\09Ready list (final):  \00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c";;   total time = %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c";;   new head = %d\0A;;   new tail = %d\0A\0A\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@flag_sched_pressure = external dso_local local_unnamed_addr global i32, align 4
@common_sched_info = common dso_local local_unnamed_addr global %struct.common_sched_info_def* null, align 8, !dbg !2068
@spec_info_var = internal global %struct.spec_info_def zeroinitializer, align 8, !dbg !2073
@cached_issue_rate = internal unnamed_addr global i32 0, align 4, !dbg !2245
@sched_regno_cover_class = common dso_local local_unnamed_addr global i32* null, align 8, !dbg !2179
@ira_class_translate = external dso_local local_unnamed_addr global [27 x i32], align 16
@regclass_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@curr_reg_live = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2181
@saved_reg_live = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2183
@sched_deps_info = external dso_local local_unnamed_addr global %struct.sched_deps_info_def*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@sched_init_only_bb = common dso_local local_unnamed_addr global void (%struct.basic_block_def*, %struct.basic_block_def*)* null, align 8, !dbg !2118
@sched_split_block = common dso_local local_unnamed_addr global %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* null, align 8, !dbg !2120
@sched_create_empty_bb = common dso_local local_unnamed_addr global %struct.basic_block_def* (%struct.basic_block_def*)* null, align 8, !dbg !2125
@haifa_recovery_bb_ever_added_p = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !2077
@nr_be_in_control = internal unnamed_addr global i32 0, align 4, !dbg !2085
@nr_be_in_data = internal unnamed_addr global i32 0, align 4, !dbg !2081
@nr_begin_control = internal unnamed_addr global i32 0, align 4, !dbg !2083
@nr_begin_data = internal unnamed_addr global i32 0, align 4, !dbg !2079
@before_recovery = internal unnamed_addr global %struct.basic_block_def* null, align 8, !dbg !2087
@after_recovery = common dso_local local_unnamed_addr global %struct.basic_block_def* null, align 8, !dbg !2089
@.str.13 = private unnamed_addr constant [8 x i8] c";; %s:\0A\00", align 1
@.str.14 = private unnamed_addr constant [48 x i8] c";; Procedure %cr-begin-data-spec motions == %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [48 x i8] c";; Procedure %cr-be-in-data-spec motions == %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [51 x i8] c";; Procedure %cr-begin-control-spec motions == %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [51 x i8] c";; Procedure %cr-be-in-control-spec motions == %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c";;\09\09dependencies resolved: insn %s\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"; data-spec;\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"; control-spec;\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"; in-control-spec;\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@sched_ready_n_insns = internal unnamed_addr global i32 -1, align 4, !dbg !2286
@.str.23 = private unnamed_addr constant [36 x i8] c";;\09\09Generated recovery block rec%d\0A\00", align 1
@flag_reorder_blocks_and_partition = external dso_local local_unnamed_addr global i32, align 4
@bb_header = internal unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2288
@sched_scan_info = common dso_local local_unnamed_addr global %struct.sched_scan_info_def* null, align 8, !dbg !2099
@__const.sched_init_luids.ssi = private unnamed_addr constant %struct.sched_scan_info_def { void ()* null, void (%struct.basic_block_def*)* null, void ()* @luids_extend_insn, void (%struct.rtx_def*)* @luids_init_insn }, align 8
@__const.haifa_init_h_i_d.ssi = private unnamed_addr constant %struct.sched_scan_info_def { void ()* null, void (%struct.basic_block_def*)* null, void ()* @extend_h_i_d, void (%struct.rtx_def*)* @init_h_i_d }, align 8
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@setup_insn_reg_pressure_info.death = internal unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2201
@ira_reg_class_cover_size = external dso_local local_unnamed_addr global i32, align 4
@ira_reg_class_cover = external dso_local local_unnamed_addr global [27 x i32], align 16
@ira_reg_class_nregs = external dso_local local_unnamed_addr global [27 x [87 x i32]], align 16
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@curr_reg_pressure = internal unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2220
@ira_available_class_regs = external dso_local local_unnamed_addr global [27 x i32], align 16
@ira_class_hard_regs = external dso_local local_unnamed_addr global [27 x [53 x i16]], align 16
@reg_raw_mode = external dso_local local_unnamed_addr global [53 x i32], align 16
@ira_memory_move_cost = external dso_local local_unnamed_addr global [87 x [27 x [2 x i16]]], align 16
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@flag_sched_group_heuristic = external dso_local local_unnamed_addr global i32, align 4
@flag_sched_critical_path_heuristic = external dso_local local_unnamed_addr global i32, align 4
@flag_sched_spec_insn_heuristic = external dso_local local_unnamed_addr global i32, align 4
@flag_sched_rank_heuristic = external dso_local local_unnamed_addr global i32, align 4
@flag_sched_last_insn_heuristic = external dso_local local_unnamed_addr global i32, align 4
@flag_sched_dep_count_heuristic = external dso_local local_unnamed_addr global i32, align 4
@current_nr_blocks = external dso_local local_unnamed_addr global i32, align 4
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@ira_no_alloc_regs = external dso_local local_unnamed_addr global i64, align 8
@setup_insn_max_reg_pressure.max_reg_pressure = internal unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2222
@saved_reg_pressure = internal unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2234
@.str.24 = private unnamed_addr constant [25 x i8] c";;\09\09Ready-->Q: insn %s: \00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"queued for %d cycles.\0A\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c";;\09Advanced a state.\0A\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c";;\09\09Q-->Ready: insn %s: \00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"requeued because ready full\0A\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"moving to ready without stalls\0A\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"moving to ready with %d stalls\0A\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"  %s:%d\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"(cost=%d\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c":delay=%d\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c";;\09%3i--> %-40s:\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"nothing\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"%s%+d(%d)\00", align 1
@reg_class_names = external dso_local local_unnamed_addr global [0 x i8*], align 8
@.str.38 = private unnamed_addr constant [30 x i8] c";;\09\09resetting: debug insn %d\0A\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@flag_sched_stalled_insns = external dso_local local_unnamed_addr global i32, align 4
@.str.39 = private unnamed_addr constant [4 x i8] c";;\09\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"  %s:%d(%d)\00", align 1
@.str.41 = private unnamed_addr constant [26 x i8] c";; look at index %d + %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"transition cost = %d\0A\00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c";;\09\09Early Q-->Ready: insn %s\0A\00", align 1
@flag_sched_stalled_insns_dep = external dso_local local_unnamed_addr global i32, align 4
@.str.44 = private unnamed_addr constant [41 x i8] c";;\09\09Chosen insn (but can't issue) : %s \0A\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c";;\09\09Chosen insn : %s\0A\00", align 1
@sd_iterator_start.null_link = internal global %struct._dep_link* null, align 8, !dbg !2247
@.str.46 = private unnamed_addr constant [26 x i8] c";;\09\09tick updated: insn %s\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c" into ready\0A\00", align 1
@.str.48 = private unnamed_addr constant [26 x i8] c" into queue with cost=%d\0A\00", align 1
@.str.49 = private unnamed_addr constant [36 x i8] c" removed from ready or queue lists\0A\00", align 1
@.str.50 = private unnamed_addr constant [31 x i8] c";;\09\09Generated check insn : %s\0A\00", align 1
@.str.51 = private unnamed_addr constant [36 x i8] c";;\09\09Generated twin insn : %d/rec%d\0A\00", align 1
@h_d_i_d = external dso_local local_unnamed_addr global %struct.VEC_haifa_deps_insn_data_def_heap*, align 8
@.str.52 = private unnamed_addr constant [31 x i8] c";;\09\09Removed simple check : %s\0A\00", align 1
@.str.53 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.54 = private unnamed_addr constant [49 x i8] c";;\09\09Fixed fallthru to EXIT : %d->>%d->%d->>EXIT\0A\00", align 1
@.str.55 = private unnamed_addr constant [61 x i8] c";;   ======================================================\0A\00", align 1
@.str.56 = private unnamed_addr constant [61 x i8] c";;   =====================ADVANCING TO=====================\0A\00", align 1
@.str.57 = private unnamed_addr constant [51 x i8] c";;   -- basic block %d from %d to %d -- %s reload\0A\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"before\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2295 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2308, metadata !DIExpression()), !dbg !2310
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2309, metadata !DIExpression()), !dbg !2310
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2311
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2312
  ret i32 %call, !dbg !2313
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2314 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2316
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2317
  ret i32 %call, !dbg !2318
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2319 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2323, metadata !DIExpression()), !dbg !2324
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2325
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2325
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2325
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2325
  %cmp = icmp uge i8* %0, %1, !dbg !2325
  %conv1 = zext i1 %cmp to i64, !dbg !2325
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2325
  %tobool = icmp eq i64 %expval, 0, !dbg !2325
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2325

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2325
  br label %cond.end, !dbg !2325

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2325
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2325
  %2 = load i8, i8* %0, align 1, !dbg !2325
  %conv3 = zext i8 %2 to i32, !dbg !2325
  br label %cond.end, !dbg !2325

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2325
  ret i32 %cond, !dbg !2326
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2327 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2329, metadata !DIExpression()), !dbg !2330
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2331
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2331
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2331
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2331
  %cmp = icmp uge i8* %0, %1, !dbg !2331
  %conv1 = zext i1 %cmp to i64, !dbg !2331
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2331
  %tobool = icmp eq i64 %expval, 0, !dbg !2331
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2331

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2331
  br label %cond.end, !dbg !2331

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2331
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2331
  %2 = load i8, i8* %0, align 1, !dbg !2331
  %conv3 = zext i8 %2 to i32, !dbg !2331
  br label %cond.end, !dbg !2331

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2331
  ret i32 %cond, !dbg !2332
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2333 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2334
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2334
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2334
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2334
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2334
  %cmp = icmp uge i8* %1, %2, !dbg !2334
  %conv1 = zext i1 %cmp to i64, !dbg !2334
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2334
  %tobool = icmp eq i64 %expval, 0, !dbg !2334
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2334

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2334
  br label %cond.end, !dbg !2334

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2334
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2334
  %3 = load i8, i8* %1, align 1, !dbg !2334
  %conv3 = zext i8 %3 to i32, !dbg !2334
  br label %cond.end, !dbg !2334

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2334
  ret i32 %cond, !dbg !2335
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2336 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2340, metadata !DIExpression()), !dbg !2341
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2342
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2343
  ret i32 %call, !dbg !2344
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2345 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2349, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2350, metadata !DIExpression()), !dbg !2351
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2352
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2352
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2352
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2352
  %cmp = icmp uge i8* %0, %1, !dbg !2352
  %conv1 = zext i1 %cmp to i64, !dbg !2352
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2352
  %tobool = icmp eq i64 %expval, 0, !dbg !2352
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2352

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2352
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2352
  br label %cond.end, !dbg !2352

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2352
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2352
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2352
  store i8 %conv2, i8* %0, align 1, !dbg !2352
  %conv6 = and i32 %__c, 255, !dbg !2352
  br label %cond.end, !dbg !2352

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2352
  ret i32 %cond, !dbg !2353
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2354 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2356, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2357, metadata !DIExpression()), !dbg !2358
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2359
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2359
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2359
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2359
  %cmp = icmp uge i8* %0, %1, !dbg !2359
  %conv1 = zext i1 %cmp to i64, !dbg !2359
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2359
  %tobool = icmp eq i64 %expval, 0, !dbg !2359
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2359

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2359
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2359
  br label %cond.end, !dbg !2359

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2359
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2359
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2359
  store i8 %conv2, i8* %0, align 1, !dbg !2359
  %conv6 = and i32 %__c, 255, !dbg !2359
  br label %cond.end, !dbg !2359

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2359
  ret i32 %cond, !dbg !2360
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2361 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2363, metadata !DIExpression()), !dbg !2364
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2365
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2365
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2365
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2365
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2365
  %cmp = icmp uge i8* %1, %2, !dbg !2365
  %conv1 = zext i1 %cmp to i64, !dbg !2365
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2365
  %tobool = icmp eq i64 %expval, 0, !dbg !2365
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2365

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2365
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2365
  br label %cond.end, !dbg !2365

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2365
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2365
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2365
  store i8 %conv4, i8* %1, align 1, !dbg !2365
  %conv6 = and i32 %__c, 255, !dbg !2365
  br label %cond.end, !dbg !2365

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2365
  ret i32 %cond, !dbg !2366
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2367 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2373, metadata !DIExpression()), !dbg !2376
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2374, metadata !DIExpression()), !dbg !2376
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2375, metadata !DIExpression()), !dbg !2376
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2377
  ret i64 %call, !dbg !2378
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2379 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2381, metadata !DIExpression()), !dbg !2382
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2383
  %0 = load i32, i32* %_flags, align 8, !dbg !2383
  %and = lshr i32 %0, 4, !dbg !2383
  %and.lobit = and i32 %and, 1, !dbg !2383
  ret i32 %and.lobit, !dbg !2384
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2385 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2387, metadata !DIExpression()), !dbg !2388
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2389
  %0 = load i32, i32* %_flags, align 8, !dbg !2389
  %and = lshr i32 %0, 5, !dbg !2389
  %and.lobit = and i32 %and, 1, !dbg !2389
  ret i32 %and.lobit, !dbg !2390
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2391 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2394, metadata !DIExpression()), !dbg !2395
  %__c.off = add i32 %__c, 128, !dbg !2396
  %0 = icmp ult i32 %__c.off, 384, !dbg !2396
  br i1 %0, label %cond.true, label %cond.end, !dbg !2396

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2397
  %1 = load i32*, i32** %call, align 8, !dbg !2398
  %idxprom = sext i32 %__c to i64, !dbg !2399
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2399
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2399
  br label %cond.end, !dbg !2400

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2400
  ret i32 %cond, !dbg !2401
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2402 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2404, metadata !DIExpression()), !dbg !2405
  %__c.off = add i32 %__c, 128, !dbg !2406
  %0 = icmp ult i32 %__c.off, 384, !dbg !2406
  br i1 %0, label %cond.true, label %cond.end, !dbg !2406

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2407
  %1 = load i32*, i32** %call, align 8, !dbg !2408
  %idxprom = sext i32 %__c to i64, !dbg !2409
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2409
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2409
  br label %cond.end, !dbg !2410

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2410
  ret i32 %cond, !dbg !2411
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2412 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2417, metadata !DIExpression()), !dbg !2418
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2419
  %conv = trunc i64 %call to i32, !dbg !2420
  ret i32 %conv, !dbg !2421
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2422 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2426, metadata !DIExpression()), !dbg !2427
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2428
  ret i64 %call, !dbg !2429
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2430 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2435, metadata !DIExpression()), !dbg !2436
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2437
  ret i64 %call, !dbg !2438
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2439 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2445, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2446, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2447, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2448, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2449, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64 0, metadata !2450, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2451, metadata !DIExpression()), !dbg !2455
  br label %while.cond, !dbg !2456

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2457
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2451, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2450, metadata !DIExpression()), !dbg !2455
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2458
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2456

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2459
  %div = lshr i64 %add, 1, !dbg !2461
  call void @llvm.dbg.value(metadata i64 %div, metadata !2452, metadata !DIExpression()), !dbg !2455
  %mul = mul i64 %div, %__size, !dbg !2462
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2463
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2453, metadata !DIExpression()), !dbg !2455
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2464
  call void @llvm.dbg.value(metadata i32 %call, metadata !2454, metadata !DIExpression()), !dbg !2455
  %cmp1 = icmp slt i32 %call, 0, !dbg !2465
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2467

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2468
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2470

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2471
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2450, metadata !DIExpression()), !dbg !2455
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2455
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2451, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2450, metadata !DIExpression()), !dbg !2455
  br label %while.cond, !dbg !2456, !llvm.loop !2472

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2455
  ret i8* %retval.0, !dbg !2474
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2475 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2481, metadata !DIExpression()), !dbg !2482
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2483
  ret double %call, !dbg !2484
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2485 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2494, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2495, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.value(metadata i32 %base, metadata !2496, metadata !DIExpression()), !dbg !2497
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2498
  ret i64 %call, !dbg !2499
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2500 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2506, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2507, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.value(metadata i32 %base, metadata !2508, metadata !DIExpression()), !dbg !2509
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2510
  ret i64 %call, !dbg !2511
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2512 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2523, metadata !DIExpression()), !dbg !2526
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2524, metadata !DIExpression()), !dbg !2526
  call void @llvm.dbg.value(metadata i32 %base, metadata !2525, metadata !DIExpression()), !dbg !2526
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2527
  ret i64 %call, !dbg !2528
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2529 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2533, metadata !DIExpression()), !dbg !2536
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2534, metadata !DIExpression()), !dbg !2536
  call void @llvm.dbg.value(metadata i32 %base, metadata !2535, metadata !DIExpression()), !dbg !2536
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2537
  ret i64 %call, !dbg !2538
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2539 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2579, metadata !DIExpression()), !dbg !2581
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2580, metadata !DIExpression()), !dbg !2581
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2582
  ret i32 %call, !dbg !2583
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2584 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2586, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2587, metadata !DIExpression()), !dbg !2588
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2589
  ret i32 %call, !dbg !2590
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2591 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2595, metadata !DIExpression()), !dbg !2597
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2596, metadata !DIExpression()), !dbg !2597
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2598
  ret i32 %call, !dbg !2599
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2600 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2604, metadata !DIExpression()), !dbg !2608
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2605, metadata !DIExpression()), !dbg !2608
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2606, metadata !DIExpression()), !dbg !2608
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2607, metadata !DIExpression()), !dbg !2608
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2609
  ret i32 %call, !dbg !2610
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2611 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2615, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2616, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2617, metadata !DIExpression()), !dbg !2618
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2617, metadata !DIExpression(DW_OP_deref)), !dbg !2618
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2619
  ret i32 %call, !dbg !2620
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2621 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2625, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2626, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2627, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2628, metadata !DIExpression()), !dbg !2629
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2628, metadata !DIExpression(DW_OP_deref)), !dbg !2629
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2630
  ret i32 %call, !dbg !2631
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2632 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2656, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2657, metadata !DIExpression()), !dbg !2658
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2659
  ret i32 %call, !dbg !2660
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2661 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2663, metadata !DIExpression()), !dbg !2665
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2664, metadata !DIExpression()), !dbg !2665
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2666
  ret i32 %call, !dbg !2667
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2668 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2672, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2673, metadata !DIExpression()), !dbg !2674
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2675
  ret i32 %call, !dbg !2676
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2677 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2681, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2682, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2683, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2684, metadata !DIExpression()), !dbg !2685
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2686
  ret i32 %call, !dbg !2687
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @fix_sched_param(i8* %param, i8* %val) local_unnamed_addr #5 !dbg !2688 {
entry:
  call void @llvm.dbg.value(metadata i8* %param, metadata !2692, metadata !DIExpression()), !dbg !2694
  call void @llvm.dbg.value(metadata i8* %val, metadata !2693, metadata !DIExpression()), !dbg !2694
  %call = tail call i32 @strcmp(i8* %param, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2695
  %tobool = icmp eq i32 %call, 0, !dbg !2695
  br i1 %tobool, label %if.then, label %if.else, !dbg !2697

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @atoi(i8* %val) #7, !dbg !2698
  store i32 %call1, i32* @sched_verbose_param, align 4, !dbg !2699
  br label %if.end, !dbg !2700

if.else:                                          ; preds = %entry
  %call2 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* %param) #6, !dbg !2701
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2702
}

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @haifa_luid_for_non_insn(%struct.rtx_def* %x) #5 !dbg !2703 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2705, metadata !DIExpression()), !dbg !2706
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2707
  %bf.load = load i32, i32* %0, align 8, !dbg !2707
  %bf.clear = and i32 %bf.load, 65535, !dbg !2707
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !2707
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !2707

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 12, !dbg !2707
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !2707

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3984, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2707
  br label %cond.end, !dbg !2707

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  ret i32 0, !dbg !2708
}

; Function Attrs: nounwind uwtable
define dso_local i32 @haifa_classify_insn(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !2709 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2713, metadata !DIExpression()), !dbg !2714
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2715
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !2715
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !2715
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2715
  %call = tail call fastcc i32 @haifa_classify_rtx(%struct.rtx_def* %1) #7, !dbg !2716
  ret i32 %call, !dbg !2717
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @haifa_classify_rtx(%struct.rtx_def* %x) unnamed_addr #5 !dbg !2718 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !2720, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.value(metadata i32 0, metadata !2721, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.value(metadata i32 0, metadata !2722, metadata !DIExpression()), !dbg !2728
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !2729
  %bf.load = load i32, i32* %0, align 8, !dbg !2729
  %bf.clear = and i32 %bf.load, 65535, !dbg !2729
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !2730
  br i1 %cmp, label %if.then, label %if.else, !dbg !2731

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2732
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !2732
  %1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2732
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 0, !dbg !2732
  %2 = load i32, i32* %num_elem, align 8, !dbg !2732
  call void @llvm.dbg.value(metadata i32 %2, metadata !2727, metadata !DIExpression()), !dbg !2733
  call void @llvm.dbg.value(metadata i32 %2, metadata !2724, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2733
  %3 = sext i32 %2 to i64, !dbg !2734
  br label %for.cond, !dbg !2734

for.cond:                                         ; preds = %for.inc, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %if.then ], !dbg !2728
  %insn_class.0 = phi i32 [ %insn_class.0.call, %for.inc ], [ 0, %if.then ], !dbg !2728
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !2736
  call void @llvm.dbg.value(metadata i32 undef, metadata !2724, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2733
  call void @llvm.dbg.value(metadata i32 %insn_class.0, metadata !2722, metadata !DIExpression()), !dbg !2728
  %cmp1 = icmp sgt i64 %indvars.iv, 0, !dbg !2737
  br i1 %cmp1, label %for.body, label %if.end66.loopexit, !dbg !2739

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2740
  %arrayidx6 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 %indvars.iv.next, !dbg !2740
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8, !dbg !2740
  %call = tail call fastcc i32 @haifa_classify_rtx(%struct.rtx_def* %5) #7, !dbg !2742
  call void @llvm.dbg.value(metadata i32 %call, metadata !2721, metadata !DIExpression()), !dbg !2728
  %cmp7 = icmp sgt i32 %insn_class.0, %call, !dbg !2743
  %insn_class.0.call = select i1 %cmp7, i32 %insn_class.0, i32 %call, !dbg !2743
  call void @llvm.dbg.value(metadata i32 %insn_class.0.call, metadata !2722, metadata !DIExpression()), !dbg !2728
  %6 = and i32 %insn_class.0.call, -2, !dbg !2744
  %switch = icmp eq i32 %6, 4, !dbg !2744
  br i1 %switch, label %if.end66.loopexit, label %for.inc, !dbg !2744

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !2724, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2733
  br label %for.cond, !dbg !2746, !llvm.loop !2747

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !2723, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !2728
  %trunc = trunc i32 %bf.load to i16, !dbg !2749
  switch i16 %trunc, label %sw.default [
    i16 25, label %sw.bb
    i16 23, label %sw.bb17
    i16 14, label %sw.bb41
    i16 29, label %if.end66
  ], !dbg !2749

sw.bb:                                            ; preds = %if.else
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2751
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !2751
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2751
  %call16 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %7, i32 1) #7, !dbg !2753
  call void @llvm.dbg.value(metadata i32 %call16, metadata !2721, metadata !DIExpression()), !dbg !2728
  br label %if.end66, !dbg !2754

sw.bb17:                                          ; preds = %if.else
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2755
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !2755
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !2755
  %call22 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %8, i32 1) #7, !dbg !2756
  call void @llvm.dbg.value(metadata i32 %call22, metadata !2721, metadata !DIExpression()), !dbg !2728
  %cmp23 = icmp eq i32 %call22, 5, !dbg !2757
  br i1 %cmp23, label %if.end66, label %if.end25, !dbg !2759

if.end25:                                         ; preds = %sw.bb17
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2760
  %rt_rtx29 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !2760
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !2760
  %call30 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %10, i32 0) #7, !dbg !2760
  %cmp31 = icmp sgt i32 %call22, %call30, !dbg !2760
  br i1 %cmp31, label %if.end66, label %cond.false33, !dbg !2760

cond.false33:                                     ; preds = %if.end25
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !2760
  %call38 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %11, i32 0) #7, !dbg !2760
  br label %if.end66, !dbg !2760

sw.bb41:                                          ; preds = %if.else
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2761
  %rt_rtx45 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !2761
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !2761
  %call46 = tail call fastcc i32 @haifa_classify_rtx(%struct.rtx_def* %13) #7, !dbg !2762
  call void @llvm.dbg.value(metadata i32 %call46, metadata !2721, metadata !DIExpression()), !dbg !2728
  %cmp47 = icmp eq i32 %call46, 5, !dbg !2763
  br i1 %cmp47, label %if.end66, label %if.end49, !dbg !2765

if.end49:                                         ; preds = %sw.bb41
  %arrayidx52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2766
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !2766
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !2766
  %call54 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %14, i32 0) #7, !dbg !2766
  %cmp55 = icmp sgt i32 %call46, %call54, !dbg !2766
  br i1 %cmp55, label %if.end66, label %cond.false57, !dbg !2766

cond.false57:                                     ; preds = %if.end49
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !2766
  %call62 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %15, i32 0) #7, !dbg !2766
  br label %if.end66, !dbg !2766

sw.default:                                       ; preds = %if.else
  br label %if.end66, !dbg !2767

if.end66.loopexit:                                ; preds = %for.cond, %for.body
  %insn_class.2.ph = phi i32 [ %insn_class.0.call, %for.body ], [ %insn_class.0, %for.cond ]
  br label %if.end66, !dbg !2768

if.end66:                                         ; preds = %if.end66.loopexit, %sw.bb, %sw.default, %sw.bb17, %if.end25, %cond.false33, %sw.bb41, %if.end49, %cond.false57, %if.else
  %insn_class.2 = phi i32 [ 0, %sw.default ], [ %call16, %sw.bb ], [ 5, %sw.bb17 ], [ %call38, %cond.false33 ], [ %call22, %if.end25 ], [ 5, %sw.bb41 ], [ %call62, %cond.false57 ], [ %call46, %if.end49 ], [ 5, %if.else ], [ %insn_class.2.ph, %if.end66.loopexit ], !dbg !2769
  call void @llvm.dbg.value(metadata i32 %insn_class.2, metadata !2722, metadata !DIExpression()), !dbg !2728
  ret i32 %insn_class.2, !dbg !2768
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_init_region_reg_pressure_info() local_unnamed_addr #5 !dbg !2770 {
entry:
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @region_ref_regs, align 8, !dbg !2771
  tail call void @bitmap_clear(%struct.bitmap_head_def* %0) #6, !dbg !2772
  ret void, !dbg !2773
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @insn_cost(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !2774 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2776, metadata !DIExpression()), !dbg !2778
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !2779
  %tobool = icmp eq i8 %call, 0, !dbg !2779
  br i1 %tobool, label %if.end7, label %if.then, !dbg !2781

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %insn) #7, !dbg !2782
  %cmp = icmp slt i32 %call1, 0, !dbg !2785
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2786

if.end:                                           ; preds = %if.then
  %call3 = tail call i32 @insn_default_latency(%struct.rtx_def* %insn) #6, !dbg !2787
  call void @llvm.dbg.value(metadata i32 %call3, metadata !2777, metadata !DIExpression()), !dbg !2778
  %0 = icmp sgt i32 %call3, 0, !dbg !2788
  %spec.select = select i1 %0, i32 %call3, i32 0, !dbg !2788
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2777, metadata !DIExpression()), !dbg !2778
  br label %cleanup, !dbg !2789

if.end7:                                          ; preds = %entry
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2790
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !2790
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2790
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2790
  %2 = load i32, i32* %rt_int, align 8, !dbg !2790
  %call9 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %2) #7, !dbg !2790
  %cost10 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call9, i64 0, i32 5, !dbg !2790
  %3 = load i16, i16* %cost10, align 4, !dbg !2790
  %conv = sext i16 %3 to i32, !dbg !2790
  call void @llvm.dbg.value(metadata i32 %conv, metadata !2777, metadata !DIExpression()), !dbg !2778
  %cmp11 = icmp slt i16 %3, 0, !dbg !2791
  br i1 %cmp11, label %if.then13, label %cleanup, !dbg !2793

if.then13:                                        ; preds = %if.end7
  %call14 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %insn) #7, !dbg !2794
  %cmp15 = icmp slt i32 %call14, 0, !dbg !2797
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2798

if.then17:                                        ; preds = %if.then13
  %4 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2799
  %base20 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %4, i64 0, i32 0, !dbg !2799
  %5 = load i32, i32* %rt_int, align 8, !dbg !2799
  %call28 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base20, i32 %5) #7, !dbg !2799
  %cost29 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call28, i64 0, i32 5, !dbg !2799
  store i16 0, i16* %cost29, align 4, !dbg !2801
  br label %cleanup, !dbg !2802

if.else:                                          ; preds = %if.then13
  %call30 = tail call i32 @insn_default_latency(%struct.rtx_def* %insn) #6, !dbg !2803
  call void @llvm.dbg.value(metadata i32 %call30, metadata !2777, metadata !DIExpression()), !dbg !2778
  %6 = icmp sgt i32 %call30, 0, !dbg !2805
  %spec.select1 = select i1 %6, i32 %call30, i32 0, !dbg !2805
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !2777, metadata !DIExpression()), !dbg !2778
  %conv35 = trunc i32 %spec.select1 to i16, !dbg !2806
  %7 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2807
  %base38 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %7, i64 0, i32 0, !dbg !2807
  %8 = load i32, i32* %rt_int, align 8, !dbg !2807
  %call46 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base38, i32 %8) #7, !dbg !2807
  %cost47 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call46, i64 0, i32 5, !dbg !2807
  store i16 %conv35, i16* %cost47, align 4, !dbg !2808
  br label %cleanup, !dbg !2809

cleanup:                                          ; preds = %if.end7, %if.else, %if.then, %if.then17, %if.end
  %retval.0 = phi i32 [ %spec.select, %if.end ], [ 0, %if.then17 ], [ 0, %if.then ], [ %spec.select1, %if.else ], [ %conv, %if.end7 ], !dbg !2778
  ret i32 %retval.0, !dbg !2810
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sel_sched_p() unnamed_addr #0 !dbg !2811 {
entry:
  %0 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !2814
  %sched_pass_id = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %0, i64 0, i32 4, !dbg !2815
  %1 = load i32, i32* %sched_pass_id, align 8, !dbg !2815
  %cmp = icmp eq i32 %1, 4, !dbg !2816
  %conv1 = zext i1 %cmp to i8, !dbg !2814
  ret i8 %conv1, !dbg !2817
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !2818 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2821, metadata !DIExpression()), !dbg !2822
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !2823
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !2823
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !2823
  %1 = load i32, i32* %rt_int, align 8, !dbg !2823
  %cmp = icmp slt i32 %1, 0, !dbg !2825
  br i1 %cmp, label %if.then, label %if.end, !dbg !2826

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !2827
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !2827
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2827
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !2828
  store i32 %call, i32* %rt_int, align 8, !dbg !2829
  br label %if.end, !dbg !2830

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !2831
  ret i32 %4, !dbg !2832
}

declare dso_local i32 @insn_default_latency(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2833 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !2839, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2840, metadata !DIExpression()), !dbg !2841
  br label %land.end, !dbg !2842

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2842
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2842
  ret %struct._haifa_insn_data* %arrayidx, !dbg !2842
}

; Function Attrs: nounwind uwtable
define dso_local i32 @dep_cost_1(%struct._dep* %link, i32 %dw) local_unnamed_addr #5 !dbg !2843 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %link, metadata !2850, metadata !DIExpression()), !dbg !2862
  call void @llvm.dbg.value(metadata i32 %dw, metadata !2851, metadata !DIExpression()), !dbg !2862
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %link, i64 0, i32 0, !dbg !2863
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !2863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !2852, metadata !DIExpression()), !dbg !2862
  %con = getelementptr inbounds %struct._dep, %struct._dep* %link, i64 0, i32 1, !dbg !2864
  %1 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !2864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !2853, metadata !DIExpression()), !dbg !2862
  %call = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %1) #7, !dbg !2865
  %cmp = icmp slt i32 %call, 0, !dbg !2866
  br i1 %cmp, label %if.then, label %if.else, !dbg !2867

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !2854, metadata !DIExpression()), !dbg !2862
  %call1 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %0) #7, !dbg !2868
  br label %if.end39, !dbg !2870

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct._dep, %struct._dep* %link, i64 0, i32 2, !dbg !2871
  %2 = load i32, i32* %type, align 8, !dbg !2871
  call void @llvm.dbg.value(metadata i32 %2, metadata !2855, metadata !DIExpression()), !dbg !2872
  %call2 = tail call i32 @insn_cost(%struct.rtx_def* %0) #7, !dbg !2873
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2854, metadata !DIExpression()), !dbg !2862
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !2874
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !2874
  %rt_int = bitcast %union.rtunion_def* %3 to i32*, !dbg !2874
  %4 = load i32, i32* %rt_int, align 8, !dbg !2874
  %cmp3 = icmp sgt i32 %4, -1, !dbg !2876
  br i1 %cmp3, label %if.then4, label %if.end21, !dbg !2877

if.then4:                                         ; preds = %if.else
  switch i32 %2, label %if.else14 [
    i32 12, label %if.end21
    i32 11, label %if.then9
  ], !dbg !2878

if.then9:                                         ; preds = %if.then4
  %call10 = tail call i32 @insn_default_latency(%struct.rtx_def* %0) #6, !dbg !2880
  %call11 = tail call i32 @insn_default_latency(%struct.rtx_def* %1) #6, !dbg !2884
  %sub = sub nsw i32 %call10, %call11, !dbg !2885
  call void @llvm.dbg.value(metadata i32 %sub, metadata !2854, metadata !DIExpression()), !dbg !2862
  %5 = icmp sgt i32 %sub, 1, !dbg !2886
  %spec.select = select i1 %5, i32 %sub, i32 1, !dbg !2886
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2854, metadata !DIExpression()), !dbg !2862
  br label %if.end21, !dbg !2887

if.else14:                                        ; preds = %if.then4
  %call15 = tail call i32 @bypass_p(%struct.rtx_def* %0) #6, !dbg !2888
  %tobool = icmp eq i32 %call15, 0, !dbg !2888
  br i1 %tobool, label %if.end21, label %if.then16, !dbg !2890

if.then16:                                        ; preds = %if.else14
  %call17 = tail call i32 @insn_latency(%struct.rtx_def* %0, %struct.rtx_def* %1) #6, !dbg !2891
  call void @llvm.dbg.value(metadata i32 %call17, metadata !2854, metadata !DIExpression()), !dbg !2862
  br label %if.end21, !dbg !2892

if.end21:                                         ; preds = %if.else14, %if.then4, %if.then16, %if.then9, %if.else
  %cost.4 = phi i32 [ %call2, %if.else ], [ 0, %if.then4 ], [ %spec.select, %if.then9 ], [ %call17, %if.then16 ], [ %call2, %if.else14 ], !dbg !2872
  call void @llvm.dbg.value(metadata i32 %cost.4, metadata !2854, metadata !DIExpression()), !dbg !2862
  %6 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 21), align 8, !dbg !2893
  %tobool22 = icmp eq i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)* %6, null, !dbg !2894
  br i1 %tobool22, label %if.else25, label %if.then23, !dbg !2895

if.then23:                                        ; preds = %if.end21
  %call24 = tail call i32 %6(%struct.rtx_def* %1, i32 %2, %struct.rtx_def* %0, i32 %cost.4, i32 %dw) #6, !dbg !2896
  call void @llvm.dbg.value(metadata i32 %call24, metadata !2854, metadata !DIExpression()), !dbg !2862
  br label %if.end35, !dbg !2897

if.else25:                                        ; preds = %if.end21
  %7 = load i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 0), align 8, !dbg !2898
  %cmp26 = icmp eq i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* %7, null, !dbg !2899
  br i1 %cmp26, label %if.end35, label %if.then27, !dbg !2900

if.then27:                                        ; preds = %if.else25
  %call28 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* null, %struct.rtx_def* null) #6, !dbg !2901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !2858, metadata !DIExpression()), !dbg !2902
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2903
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !2903
  store %struct.rtx_def* %call28, %struct.rtx_def** %rt_rtx, align 8, !dbg !2904
  %9 = load i32, i32* %type, align 8, !dbg !2905
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call28, i64 0, i32 0, !dbg !2905
  %bf.load = load i32, i32* %10, align 8, !dbg !2905
  %bf.value = shl i32 %9, 16, !dbg !2905
  %bf.shl = and i32 %bf.value, 16711680, !dbg !2905
  %bf.clear = and i32 %bf.load, -16711681, !dbg !2905
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !2905
  store i32 %bf.set, i32* %10, align 8, !dbg !2905
  %11 = load i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 0), align 8, !dbg !2906
  %call33 = tail call i32 %11(%struct.rtx_def* %1, %struct.rtx_def* %call28, %struct.rtx_def* %0, i32 %cost.4) #6, !dbg !2907
  call void @llvm.dbg.value(metadata i32 %call33, metadata !2854, metadata !DIExpression()), !dbg !2862
  tail call void @free_INSN_LIST_node(%struct.rtx_def* %call28) #6, !dbg !2908
  br label %if.end35, !dbg !2909

if.end35:                                         ; preds = %if.else25, %if.then27, %if.then23
  %cost.6 = phi i32 [ %call24, %if.then23 ], [ %call33, %if.then27 ], [ %cost.4, %if.else25 ], !dbg !2910
  call void @llvm.dbg.value(metadata i32 %cost.6, metadata !2854, metadata !DIExpression()), !dbg !2862
  %12 = icmp sgt i32 %cost.6, 0, !dbg !2911
  %spec.select1 = select i1 %12, i32 %cost.6, i32 0, !dbg !2911
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !2854, metadata !DIExpression()), !dbg !2862
  br label %if.end39

if.end39:                                         ; preds = %if.end35, %if.then
  %cost.8 = phi i32 [ 0, %if.then ], [ %spec.select1, %if.end35 ], !dbg !2912
  call void @llvm.dbg.value(metadata i32 %cost.8, metadata !2854, metadata !DIExpression()), !dbg !2862
  ret i32 %cost.8, !dbg !2913
}

declare dso_local i32 @bypass_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @insn_latency(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @free_INSN_LIST_node(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @dep_cost(%struct._dep* %link) local_unnamed_addr #5 !dbg !2914 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %link, metadata !2918, metadata !DIExpression()), !dbg !2919
  %call = tail call i32 @dep_cost_1(%struct._dep* %link, i32 0) #7, !dbg !2920
  ret i32 %call, !dbg !2921
}

; Function Attrs: nounwind uwtable
define dso_local void @increase_insn_priority(%struct.rtx_def* %insn, i32 %amount) local_unnamed_addr #5 !dbg !2922 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2924, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.value(metadata i32 %amount, metadata !2925, metadata !DIExpression()), !dbg !2926
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !2927
  %tobool = icmp eq i8 %call, 0, !dbg !2927
  br i1 %tobool, label %if.then, label %if.else, !dbg !2929

if.then:                                          ; preds = %entry
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2930
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !2930
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2930
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2930
  %1 = load i32, i32* %rt_int, align 8, !dbg !2930
  %call2 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !2930
  %priority_status = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call2, i64 0, i32 7, !dbg !2930
  %2 = load i8, i8* %priority_status, align 1, !dbg !2930
  %cmp = icmp sgt i8 %2, 0, !dbg !2930
  br i1 %cmp, label %if.then4, label %if.end16, !dbg !2933

if.then4:                                         ; preds = %if.then
  %3 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2934
  %base7 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %3, i64 0, i32 0, !dbg !2934
  %4 = load i32, i32* %rt_int, align 8, !dbg !2934
  %call15 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base7, i32 %4) #7, !dbg !2934
  %priority = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call15, i64 0, i32 1, !dbg !2934
  %5 = load i32, i32* %priority, align 4, !dbg !2935
  %add = add nsw i32 %5, %amount, !dbg !2935
  store i32 %add, i32* %priority, align 4, !dbg !2935
  br label %if.end16, !dbg !2934

if.else:                                          ; preds = %entry
  tail call void @sel_add_to_insn_priority(%struct.rtx_def* %insn, i32 %amount) #6, !dbg !2936
  br label %if.end16

if.end16:                                         ; preds = %if.then, %if.then4, %if.else
  ret void, !dbg !2938
}

declare dso_local void @sel_add_to_insn_priority(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def** @ready_lastpos(%struct.ready_list* %ready) local_unnamed_addr #5 !dbg !2939 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* %ready, metadata !2943, metadata !DIExpression()), !dbg !2944
  %n_ready = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 3, !dbg !2945
  %0 = load i32, i32* %n_ready, align 8, !dbg !2945
  %cmp = icmp sgt i32 %0, 0, !dbg !2945
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2945

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1379, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2945
  %.pre = load i32, i32* %n_ready, align 8, !dbg !2946
  br label %cond.end, !dbg !2945

cond.end:                                         ; preds = %entry, %cond.true
  %1 = phi i32 [ %0, %entry ], [ %.pre, %cond.true ], !dbg !2946
  %vec = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 0, !dbg !2947
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %vec, align 8, !dbg !2947
  %first = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 2, !dbg !2948
  %3 = load i32, i32* %first, align 4, !dbg !2948
  %idx.ext = sext i32 %3 to i64, !dbg !2949
  %add.ptr = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idx.ext, !dbg !2949
  %idx.ext2 = sext i32 %1 to i64, !dbg !2950
  %idx.neg = sub nsw i64 0, %idx.ext2, !dbg !2950
  %add.ptr3 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %add.ptr, i64 %idx.neg, !dbg !2950
  %add.ptr4 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %add.ptr3, i64 1, !dbg !2951
  ret %struct.rtx_def** %add.ptr4, !dbg !2952
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @ready_element(%struct.ready_list* %ready, i32 %index) local_unnamed_addr #5 !dbg !2953 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* %ready, metadata !2957, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata i32 %index, metadata !2958, metadata !DIExpression()), !dbg !2959
  %n_ready = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 3, !dbg !2960
  %0 = load i32, i32* %n_ready, align 8, !dbg !2960
  %tobool = icmp eq i32 %0, 0, !dbg !2960
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !2960

land.lhs.true:                                    ; preds = %entry
  %cmp = icmp sgt i32 %0, %index, !dbg !2960
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2960

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1456, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2960
  br label %cond.end, !dbg !2960

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %vec = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 0, !dbg !2961
  %1 = load %struct.rtx_def**, %struct.rtx_def*** %vec, align 8, !dbg !2961
  %first = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 2, !dbg !2962
  %2 = load i32, i32* %first, align 4, !dbg !2962
  %sub = sub nsw i32 %2, %index, !dbg !2963
  %idxprom = sext i32 %sub to i64, !dbg !2964
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom, !dbg !2964
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !2964
  ret %struct.rtx_def* %3, !dbg !2965
}

; Function Attrs: nounwind uwtable
define dso_local void @ready_sort(%struct.ready_list* %ready) local_unnamed_addr #5 !dbg !2966 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* %ready, metadata !2970, metadata !DIExpression()), !dbg !2973
  %call = tail call %struct.rtx_def** @ready_lastpos(%struct.ready_list* %ready) #7, !dbg !2974
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call, metadata !2972, metadata !DIExpression()), !dbg !2973
  %0 = load i8, i8* @sched_pressure_p, align 1, !dbg !2975
  %tobool = icmp eq i8 %0, 0, !dbg !2975
  br i1 %tobool, label %entry.do.body_crit_edge, label %for.cond.preheader, !dbg !2977

entry.do.body_crit_edge:                          ; preds = %entry
  %n_ready1.phi.trans.insert = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 3, !dbg !2978
  %.pre = load i32, i32* %n_ready1.phi.trans.insert, align 8, !dbg !2981
  br label %do.body, !dbg !2977

for.cond.preheader:                               ; preds = %entry
  %n_ready = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 3, !dbg !2982
  br label %for.cond, !dbg !2986

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !2987
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2971, metadata !DIExpression()), !dbg !2973
  %1 = load i32, i32* %n_ready, align 8, !dbg !2988
  %2 = sext i32 %1 to i64, !dbg !2989
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !2989
  br i1 %cmp, label %for.body, label %do.body.loopexit, !dbg !2986

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %call, i64 %indvars.iv, !dbg !2990
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !2990
  tail call fastcc void @setup_insn_reg_pressure_info(%struct.rtx_def* %3) #7, !dbg !2991
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2992
  call void @llvm.dbg.value(metadata i32 undef, metadata !2971, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2973
  br label %for.cond, !dbg !2993, !llvm.loop !2994

do.body.loopexit:                                 ; preds = %for.cond
  %.lcssa = phi i32 [ %1, %for.cond ], !dbg !2988
  br label %do.body, !dbg !2981

do.body:                                          ; preds = %entry.do.body_crit_edge, %do.body.loopexit
  %4 = phi i32 [ %.pre, %entry.do.body_crit_edge ], [ %.lcssa, %do.body.loopexit ], !dbg !2981
  %cmp2 = icmp eq i32 %4, 2, !dbg !2981
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !2996

if.then3:                                         ; preds = %do.body
  tail call fastcc void @swap_sort(%struct.rtx_def** %call, i32 2) #7, !dbg !2981
  br label %do.end, !dbg !2981

if.else:                                          ; preds = %do.body
  %cmp6 = icmp sgt i32 %4, 2, !dbg !2997
  br i1 %cmp6, label %if.then7, label %do.end, !dbg !2981

if.then7:                                         ; preds = %if.else
  %5 = bitcast %struct.rtx_def** %call to i8*, !dbg !2997
  %conv = sext i32 %4 to i64, !dbg !2997
  tail call void @spec_qsort(i8* %5, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @rank_for_schedule) #6, !dbg !2997
  br label %do.end, !dbg !2997

do.end:                                           ; preds = %if.else, %if.then7, %if.then3
  ret void, !dbg !2999
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_insn_reg_pressure_info(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !2203 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2205, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i32 0, metadata !2211, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i32 0, metadata !2206, metadata !DIExpression()), !dbg !3000
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3001
  %1 = sext i32 %0 to i64, !dbg !3004
  br label %for.cond, !dbg !3004

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ 0, %entry ], !dbg !3005
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !2206, metadata !DIExpression()), !dbg !3000
  %cmp = icmp slt i64 %indvars.iv1, %1, !dbg !3006
  br i1 %cmp, label %for.body, label %for.end, !dbg !3007

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv1, !dbg !3008
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3008
  %idxprom1 = zext i32 %2 to i64, !dbg !3009
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_reg_pressure_info.death, i64 0, i64 %idxprom1, !dbg !3009
  store i32 0, i32* %arrayidx2, align 4, !dbg !3010
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3011
  call void @llvm.dbg.value(metadata i32 undef, metadata !2206, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3000
  br label %for.cond, !dbg !3012, !llvm.loop !3013

for.end:                                          ; preds = %for.cond
  %3 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3015
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %3, i64 0, i32 0, !dbg !3015
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3015
  %rt_int = bitcast %union.rtunion_def* %arrayidx3 to i32*, !dbg !3015
  %4 = load i32, i32* %rt_int, align 8, !dbg !3015
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %4) #7, !dbg !3015
  %reg_use_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 15, !dbg !3015
  br label %for.cond4, !dbg !3017

for.cond4:                                        ; preds = %for.inc27, %for.end
  %use.0.in = phi %struct.reg_use_data** [ %reg_use_list, %for.end ], [ %next_insn_use, %for.inc27 ]
  %use.0 = load %struct.reg_use_data*, %struct.reg_use_data** %use.0.in, align 8, !dbg !3018
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %use.0, metadata !2216, metadata !DIExpression()), !dbg !3000
  %cmp5 = icmp eq %struct.reg_use_data* %use.0, null, !dbg !3019
  br i1 %cmp5, label %for.end28, label %for.body6, !dbg !3021

for.body6:                                        ; preds = %for.cond4
  %call7 = tail call fastcc zeroext i8 @dying_use_p(%struct.reg_use_data* nonnull %use.0) #7, !dbg !3022
  %tobool8 = icmp eq i8 %call7, 0, !dbg !3022
  br i1 %tobool8, label %for.inc27, label %if.then, !dbg !3024

if.then:                                          ; preds = %for.body6
  %5 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !3025
  %regno = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.0, i64 0, i32 0, !dbg !3027
  %6 = load i32, i32* %regno, align 8, !dbg !3027
  %idxprom9 = sext i32 %6 to i64, !dbg !3025
  %arrayidx10 = getelementptr inbounds i32, i32* %5, i64 %idxprom9, !dbg !3025
  %7 = load i32, i32* %arrayidx10, align 4, !dbg !3025
  call void @llvm.dbg.value(metadata i32 %7, metadata !2213, metadata !DIExpression()), !dbg !3000
  %cmp12 = icmp slt i32 %6, 53, !dbg !3028
  %idxprom14 = zext i32 %7 to i64, !dbg !3030
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !3031

if.then13:                                        ; preds = %if.then
  %arrayidx15 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_reg_pressure_info.death, i64 0, i64 %idxprom14, !dbg !3032
  %8 = load i32, i32* %arrayidx15, align 4, !dbg !3033
  %inc16 = add nsw i32 %8, 1, !dbg !3033
  store i32 %inc16, i32* %arrayidx15, align 4, !dbg !3033
  br label %for.inc27, !dbg !3032

if.else:                                          ; preds = %if.then
  %9 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !3034
  %arrayidx21 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %9, i64 %idxprom9, !dbg !3034
  %10 = bitcast %struct.rtx_def** %arrayidx21 to i32**, !dbg !3034
  %11 = load i32*, i32** %10, align 8, !dbg !3034
  %bf.load = load i32, i32* %11, align 8, !dbg !3034
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3034
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3034
  %idxprom22 = zext i32 %bf.clear to i64, !dbg !3035
  %arrayidx23 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom14, i64 %idxprom22, !dbg !3035
  %12 = load i32, i32* %arrayidx23, align 4, !dbg !3035
  %arrayidx25 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_reg_pressure_info.death, i64 0, i64 %idxprom14, !dbg !3036
  %13 = load i32, i32* %arrayidx25, align 4, !dbg !3037
  %add = add nsw i32 %13, %12, !dbg !3037
  store i32 %add, i32* %arrayidx25, align 4, !dbg !3037
  br label %for.inc27

for.inc27:                                        ; preds = %for.body6, %if.else, %if.then13
  %next_insn_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.0, i64 0, i32 3, !dbg !3038
  br label %for.cond4, !dbg !3039, !llvm.loop !3040

for.end28:                                        ; preds = %for.cond4
  %14 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3042
  %base31 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %14, i64 0, i32 0, !dbg !3042
  %15 = load i32, i32* %rt_int, align 8, !dbg !3042
  %call39 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base31, i32 %15) #7, !dbg !3042
  %reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call39, i64 0, i32 13, !dbg !3042
  %16 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** %reg_pressure, align 8, !dbg !3042
  call void @llvm.dbg.value(metadata %struct.reg_pressure_data* %16, metadata !2214, metadata !DIExpression()), !dbg !3000
  %17 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3043
  %base42 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %17, i64 0, i32 0, !dbg !3043
  %18 = load i32, i32* %rt_int, align 8, !dbg !3043
  %call50 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base42, i32 %18) #7, !dbg !3043
  %max_reg_pressure51 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call50, i64 0, i32 14, !dbg !3043
  %19 = load i32*, i32** %max_reg_pressure51, align 8, !dbg !3043
  call void @llvm.dbg.value(metadata i32* %19, metadata !2215, metadata !DIExpression()), !dbg !3000
  %cmp52 = icmp ne %struct.reg_pressure_data* %16, null, !dbg !3044
  %cmp53 = icmp ne i32* %19, null, !dbg !3044
  %or.cond = and i1 %cmp52, %cmp53, !dbg !3044
  br i1 %or.cond, label %cond.end56, label %cond.true54, !dbg !3044

cond.true54:                                      ; preds = %for.end28
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3044
  br label %cond.end56, !dbg !3044

cond.end56:                                       ; preds = %for.end28, %cond.true54
  call void @llvm.dbg.value(metadata i32 0, metadata !2206, metadata !DIExpression()), !dbg !3000
  br label %for.cond58, !dbg !3045

for.cond58:                                       ; preds = %cond.end116, %cond.end56
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end116 ], [ 0, %cond.end56 ], !dbg !3000
  %excess_cost_change.0 = phi i32 [ %add134, %cond.end116 ], [ 0, %cond.end56 ], !dbg !3000
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2206, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i32 %excess_cost_change.0, metadata !2211, metadata !DIExpression()), !dbg !3000
  %20 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3047
  %21 = sext i32 %20 to i64, !dbg !3049
  %cmp59 = icmp slt i64 %indvars.iv, %21, !dbg !3049
  br i1 %cmp59, label %for.body60, label %for.end137, !dbg !3050

for.body60:                                       ; preds = %for.cond58
  %arrayidx62 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !3051
  %22 = load i32, i32* %arrayidx62, align 4, !dbg !3051
  call void @llvm.dbg.value(metadata i32 %22, metadata !2213, metadata !DIExpression()), !dbg !3000
  %idxprom63 = zext i32 %22 to i64, !dbg !3053
  %arrayidx64 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom63, !dbg !3053
  %23 = load i32, i32* %arrayidx64, align 4, !dbg !3053
  %cmp65 = icmp sgt i32 %23, -1, !dbg !3053
  br i1 %cmp65, label %cond.end68, label %cond.true66, !dbg !3053

cond.true66:                                      ; preds = %for.body60
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3053
  br label %cond.end68, !dbg !3053

cond.end68:                                       ; preds = %for.body60, %cond.true66
  %24 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %16, i64 %indvars.iv, i32 0, !dbg !3054
  %bf.load72 = load i32, i32* %24, align 4, !dbg !3054
  %bf.lshr73 = lshr i32 %bf.load72, 8, !dbg !3054
  %bf.clear74 = and i32 %bf.lshr73, 255, !dbg !3054
  %arrayidx76 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_reg_pressure_info.death, i64 0, i64 %idxprom63, !dbg !3055
  %25 = load i32, i32* %arrayidx76, align 4, !dbg !3055
  %sub = sub nsw i32 %bf.clear74, %25, !dbg !3056
  call void @llvm.dbg.value(metadata i32 %sub, metadata !2207, metadata !DIExpression()), !dbg !3000
  %arrayidx78 = getelementptr inbounds i32, i32* %19, i64 %indvars.iv, !dbg !3057
  %26 = load i32, i32* %arrayidx78, align 4, !dbg !3057
  %arrayidx80 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_available_class_regs, i64 0, i64 %idxprom63, !dbg !3057
  %27 = load i32, i32* %arrayidx80, align 4, !dbg !3057
  %cmp82 = icmp slt i32 %26, %27, !dbg !3057
  br i1 %cmp82, label %cond.end90, label %cond.false84, !dbg !3057

cond.false84:                                     ; preds = %cond.end68
  %sub89 = sub nsw i32 %26, %27, !dbg !3057
  br label %cond.end90, !dbg !3057

cond.end90:                                       ; preds = %cond.end68, %cond.false84
  %cond91 = phi i32 [ %sub89, %cond.false84 ], [ 0, %cond.end68 ], !dbg !3057
  call void @llvm.dbg.value(metadata i32 %cond91, metadata !2208, metadata !DIExpression()), !dbg !3000
  %add94 = add nsw i32 %26, %sub, !dbg !3058
  %cmp98 = icmp slt i32 %add94, %27, !dbg !3058
  br i1 %cmp98, label %cond.end107, label %cond.false100, !dbg !3058

cond.false100:                                    ; preds = %cond.end90
  %sub106 = sub nsw i32 %add94, %27, !dbg !3058
  br label %cond.end107, !dbg !3058

cond.end107:                                      ; preds = %cond.end90, %cond.false100
  %cond108 = phi i32 [ %sub106, %cond.false100 ], [ 0, %cond.end90 ], !dbg !3058
  call void @llvm.dbg.value(metadata i32 %cond108, metadata !2209, metadata !DIExpression()), !dbg !3000
  %arrayidx111 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom63, i64 0, !dbg !3059
  %28 = load i16, i16* %arrayidx111, align 2, !dbg !3059
  %cmp112 = icmp sgt i16 %28, -1, !dbg !3060
  br i1 %cmp112, label %cond.end116, label %cond.true114, !dbg !3060

cond.true114:                                     ; preds = %cond.end107
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1159, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3060
  br label %cond.end116, !dbg !3060

cond.end116:                                      ; preds = %cond.end107, %cond.true114
  %idxprom118 = sext i16 %28 to i64, !dbg !3061
  %arrayidx119 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i64 0, i64 %idxprom118, !dbg !3061
  %29 = load i32, i32* %arrayidx119, align 4, !dbg !3061
  call void @llvm.dbg.value(metadata i32 %29, metadata !2212, metadata !DIExpression()), !dbg !3000
  %sub120 = sub nsw i32 %cond108, %cond91, !dbg !3062
  %idxprom121 = zext i32 %29 to i64, !dbg !3063
  %arrayidx125 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom121, i64 %idxprom63, i64 0, !dbg !3063
  %30 = load i16, i16* %arrayidx125, align 4, !dbg !3063
  %conv126 = sext i16 %30 to i32, !dbg !3063
  %arrayidx131 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom121, i64 %idxprom63, i64 1, !dbg !3064
  %31 = load i16, i16* %arrayidx131, align 2, !dbg !3064
  %conv132 = sext i16 %31 to i32, !dbg !3064
  %add133 = add nsw i32 %conv126, %conv132, !dbg !3065
  %mul = mul nsw i32 %sub120, %add133, !dbg !3066
  %add134 = add nsw i32 %excess_cost_change.0, %mul, !dbg !3067
  call void @llvm.dbg.value(metadata i32 %add134, metadata !2211, metadata !DIExpression()), !dbg !3000
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3068
  call void @llvm.dbg.value(metadata i32 undef, metadata !2206, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3000
  br label %for.cond58, !dbg !3069, !llvm.loop !3070

for.end137:                                       ; preds = %for.cond58
  %excess_cost_change.0.lcssa = phi i32 [ %excess_cost_change.0, %for.cond58 ], !dbg !3000
  call void @llvm.dbg.value(metadata i32 %excess_cost_change.0.lcssa, metadata !2211, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i32 %excess_cost_change.0.lcssa, metadata !2211, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i32 %excess_cost_change.0.lcssa, metadata !2211, metadata !DIExpression()), !dbg !3000
  %32 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3072
  %base140 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %32, i64 0, i32 0, !dbg !3072
  %33 = load i32, i32* %rt_int, align 8, !dbg !3072
  %call148 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base140, i32 %33) #7, !dbg !3072
  %reg_pressure_excess_cost_change = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call148, i64 0, i32 17, !dbg !3072
  store i32 %excess_cost_change.0.lcssa, i32* %reg_pressure_excess_cost_change, align 8, !dbg !3073
  ret void, !dbg !3074
}

; Function Attrs: nounwind uwtable
define internal fastcc void @swap_sort(%struct.rtx_def** %a, i32 %n) unnamed_addr #5 !dbg !3075 {
entry:
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %a, metadata !3079, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 2, metadata !3080, metadata !DIExpression()), !dbg !3083
  %0 = bitcast %struct.rtx_def** %insn to i8*, !dbg !3084
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3084
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %a, i64 1, !dbg !3085
  %1 = bitcast %struct.rtx_def** %arrayidx to i64*, !dbg !3085
  %2 = load i64, i64* %1, align 8, !dbg !3085
  %3 = bitcast %struct.rtx_def** %insn to i64*, !dbg !3086
  store i64 %2, i64* %3, align 8, !dbg !3086
  call void @llvm.dbg.value(metadata i32 0, metadata !3082, metadata !DIExpression()), !dbg !3083
  br label %while.cond, !dbg !3087

while.cond:                                       ; preds = %while.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body ], [ 0, %entry ], !dbg !3083
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3082, metadata !DIExpression()), !dbg !3083
  %cmp = icmp sgt i64 %indvars.iv, -1, !dbg !3088
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !3089

land.rhs:                                         ; preds = %while.cond
  %add.ptr = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %a, i64 %indvars.iv, !dbg !3090
  %4 = bitcast %struct.rtx_def** %add.ptr to i8*, !dbg !3091
  %call = call i32 @rank_for_schedule(i8* %4, i8* nonnull %0) #7, !dbg !3092
  %cmp2 = icmp sgt i32 %call, -1, !dbg !3093
  br i1 %cmp2, label %while.body, label %while.end, !dbg !3087

while.body:                                       ; preds = %land.rhs
  %5 = bitcast %struct.rtx_def** %add.ptr to i64*, !dbg !3094
  %6 = load i64, i64* %5, align 8, !dbg !3094
  %7 = add nsw i64 %indvars.iv, 1, !dbg !3096
  %arrayidx6 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %a, i64 %7, !dbg !3097
  %8 = bitcast %struct.rtx_def** %arrayidx6 to i64*, !dbg !3098
  store i64 %6, i64* %8, align 8, !dbg !3098
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3099
  call void @llvm.dbg.value(metadata i32 undef, metadata !3082, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3083
  br label %while.cond, !dbg !3087, !llvm.loop !3100

while.end:                                        ; preds = %while.cond, %land.rhs
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %while.cond ], [ %indvars.iv, %land.rhs ], !dbg !3083
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !3082, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !3082, metadata !DIExpression()), !dbg !3083
  %9 = load i64, i64* %3, align 8, !dbg !3102
  %add8 = shl i64 %indvars.iv.lcssa, 32, !dbg !3103
  %sext = add i64 %add8, 4294967296, !dbg !3103
  %idxprom9 = ashr exact i64 %sext, 32, !dbg !3103
  %arrayidx10 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %a, i64 %idxprom9, !dbg !3103
  %10 = bitcast %struct.rtx_def** %arrayidx10 to i64*, !dbg !3104
  store i64 %9, i64* %10, align 8, !dbg !3104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3105
  ret void, !dbg !3105
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @rank_for_schedule(i8* %x, i8* %y) #5 !dbg !3106 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3108, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i8* %y, metadata !3109, metadata !DIExpression()), !dbg !3132
  %0 = bitcast i8* %y to %struct.rtx_def**, !dbg !3133
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !3134
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3110, metadata !DIExpression()), !dbg !3132
  %2 = bitcast i8* %x to %struct.rtx_def**, !dbg !3135
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !3136
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3111, metadata !DIExpression()), !dbg !3132
  %4 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3137
  %tobool = icmp eq i32 %4, 0, !dbg !3137
  br i1 %tobool, label %if.end10, label %if.then, !dbg !3139

if.then:                                          ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3140
  %bf.load = load i32, i32* %5, align 8, !dbg !3140
  %bf.clear = and i32 %bf.load, 65535, !dbg !3140
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !3140
  br i1 %cmp, label %land.lhs.true, label %if.then.if.else_crit_edge, !dbg !3143

if.then.if.else_crit_edge:                        ; preds = %if.then
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3144
  %bf.load5.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3146
  %.pre14 = and i32 %bf.load5.pre, 65535, !dbg !3146
  br label %if.else, !dbg !3143

land.lhs.true:                                    ; preds = %if.then
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3147
  %bf.load1 = load i32, i32* %6, align 8, !dbg !3147
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3147
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3147
  br i1 %cmp3, label %if.else, label %cleanup461, !dbg !3148

if.else:                                          ; preds = %if.then.if.else_crit_edge, %land.lhs.true
  %bf.clear6.pre-phi = phi i32 [ %.pre14, %if.then.if.else_crit_edge ], [ %bf.clear2, %land.lhs.true ], !dbg !3146
  %cmp7 = icmp eq i32 %bf.clear6.pre-phi, 7, !dbg !3146
  br i1 %cmp7, label %cleanup461, label %if.end10, !dbg !3149

if.end10:                                         ; preds = %entry, %if.else
  %7 = load i32, i32* @flag_sched_group_heuristic, align 4, !dbg !3150
  %tobool11 = icmp eq i32 %7, 0, !dbg !3150
  br i1 %tobool11, label %if.end24, label %land.lhs.true12, !dbg !3152

land.lhs.true12:                                  ; preds = %if.end10
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3153
  %bf.load13 = load i32, i32* %8, align 8, !dbg !3153
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3154
  %bf.load15 = load i32, i32* %9, align 8, !dbg !3154
  %bf.lshr11 = xor i32 %bf.load13, %bf.load15, !dbg !3155
  %10 = and i32 %bf.lshr11, 268435456, !dbg !3155
  %cmp18 = icmp eq i32 %10, 0, !dbg !3155
  br i1 %cmp18, label %if.end24, label %if.then19, !dbg !3156

if.then19:                                        ; preds = %land.lhs.true12
  %bf.clear22 = and i32 %bf.load15, 268435456, !dbg !3157
  %tobool23 = icmp eq i32 %bf.clear22, 0, !dbg !3157
  %cond = select i1 %tobool23, i32 -1, i32 1, !dbg !3157
  br label %cleanup461, !dbg !3158

if.end24:                                         ; preds = %land.lhs.true12, %if.end10
  %11 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3159
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %11, i64 0, i32 0, !dbg !3159
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3159
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3159
  %12 = load i32, i32* %rt_int, align 8, !dbg !3159
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %12) #7, !dbg !3159
  %priority_status = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 7, !dbg !3159
  %13 = load i8, i8* %priority_status, align 1, !dbg !3159
  %cmp27 = icmp sgt i8 %13, 0, !dbg !3159
  br i1 %cmp27, label %land.lhs.true29, label %cond.true45, !dbg !3159

land.lhs.true29:                                  ; preds = %if.end24
  %14 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3159
  %base32 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %14, i64 0, i32 0, !dbg !3159
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3159
  %rt_int39 = bitcast %union.rtunion_def* %arrayidx38 to i32*, !dbg !3159
  %15 = load i32, i32* %rt_int39, align 8, !dbg !3159
  %call40 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base32, i32 %15) #7, !dbg !3159
  %priority_status41 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call40, i64 0, i32 7, !dbg !3159
  %16 = load i8, i8* %priority_status41, align 1, !dbg !3159
  %cmp43 = icmp sgt i8 %16, 0, !dbg !3159
  br i1 %cmp43, label %cond.end47, label %cond.true45, !dbg !3159

cond.true45:                                      ; preds = %land.lhs.true29, %if.end24
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3159
  br label %cond.end47, !dbg !3159

cond.end47:                                       ; preds = %land.lhs.true29, %cond.true45
  %17 = load i8, i8* @sched_pressure_p, align 1, !dbg !3160
  %tobool49 = icmp eq i8 %17, 0, !dbg !3160
  br i1 %tobool49, label %if.end140, label %if.then50, !dbg !3161

if.then50:                                        ; preds = %cond.end47
  %18 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3162
  %base53 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %18, i64 0, i32 0, !dbg !3162
  %19 = load i32, i32* %rt_int, align 8, !dbg !3162
  %call61 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base53, i32 %19) #7, !dbg !3162
  %reg_pressure_excess_cost_change = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call61, i64 0, i32 17, !dbg !3162
  %20 = load i32, i32* %reg_pressure_excess_cost_change, align 8, !dbg !3162
  %21 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3164
  %base64 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %21, i64 0, i32 0, !dbg !3164
  %22 = load i32, i32* %rt_int, align 8, !dbg !3164
  %call72 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base64, i32 %22) #7, !dbg !3164
  %tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call72, i64 0, i32 2, !dbg !3164
  %23 = load i32, i32* %tick, align 8, !dbg !3164
  %24 = load i32, i32* @clock_var, align 4, !dbg !3165
  %cmp73 = icmp sgt i32 %23, %24, !dbg !3166
  br i1 %cmp73, label %cond.true75, label %cond.end89, !dbg !3164

cond.true75:                                      ; preds = %if.then50
  %25 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3167
  %base78 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %25, i64 0, i32 0, !dbg !3167
  %26 = load i32, i32* %rt_int, align 8, !dbg !3167
  %call86 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base78, i32 %26) #7, !dbg !3167
  %tick87 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call86, i64 0, i32 2, !dbg !3167
  %27 = load i32, i32* %tick87, align 8, !dbg !3167
  %28 = load i32, i32* @clock_var, align 4, !dbg !3168
  %sub = sub nsw i32 %27, %28, !dbg !3169
  br label %cond.end89, !dbg !3164

cond.end89:                                       ; preds = %if.then50, %cond.true75
  %cond90 = phi i32 [ %sub, %cond.true75 ], [ 0, %if.then50 ], !dbg !3164
  %add = add nsw i32 %20, %cond90, !dbg !3170
  %29 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3171
  %base93 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %29, i64 0, i32 0, !dbg !3171
  %arrayidx99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3171
  %rt_int100 = bitcast %union.rtunion_def* %arrayidx99 to i32*, !dbg !3171
  %30 = load i32, i32* %rt_int100, align 8, !dbg !3171
  %call101 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base93, i32 %30) #7, !dbg !3171
  %reg_pressure_excess_cost_change102 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call101, i64 0, i32 17, !dbg !3171
  %31 = load i32, i32* %reg_pressure_excess_cost_change102, align 8, !dbg !3171
  %sub103 = sub nsw i32 %add, %31, !dbg !3172
  %32 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3173
  %base106 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %32, i64 0, i32 0, !dbg !3173
  %33 = load i32, i32* %rt_int100, align 8, !dbg !3173
  %call114 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base106, i32 %33) #7, !dbg !3173
  %tick115 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call114, i64 0, i32 2, !dbg !3173
  %34 = load i32, i32* %tick115, align 8, !dbg !3173
  %35 = load i32, i32* @clock_var, align 4, !dbg !3174
  %cmp116 = icmp sgt i32 %34, %35, !dbg !3175
  br i1 %cmp116, label %cond.true118, label %cond.end133, !dbg !3173

cond.true118:                                     ; preds = %cond.end89
  %36 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3176
  %base121 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %36, i64 0, i32 0, !dbg !3176
  %37 = load i32, i32* %rt_int100, align 8, !dbg !3176
  %call129 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base121, i32 %37) #7, !dbg !3176
  %tick130 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call129, i64 0, i32 2, !dbg !3176
  %38 = load i32, i32* %tick130, align 8, !dbg !3176
  %39 = load i32, i32* @clock_var, align 4, !dbg !3177
  %sub131 = sub nsw i32 %38, %39, !dbg !3178
  br label %cond.end133, !dbg !3173

cond.end133:                                      ; preds = %cond.end89, %cond.true118
  %cond134 = phi i32 [ %sub131, %cond.true118 ], [ 0, %cond.end89 ], !dbg !3173
  %sub135 = sub nsw i32 %sub103, %cond134, !dbg !3179
  call void @llvm.dbg.value(metadata i32 %sub135, metadata !3118, metadata !DIExpression()), !dbg !3180
  %cmp136 = icmp eq i32 %sub135, 0, !dbg !3181
  br i1 %cmp136, label %cond.end133.if.end140_crit_edge, label %cleanup461

cond.end133.if.end140_crit_edge:                  ; preds = %cond.end133
  %.pre = load i8, i8* @sched_pressure_p, align 1, !dbg !3182
  br label %if.end140

if.end140:                                        ; preds = %cond.end133.if.end140_crit_edge, %cond.end47
  %40 = phi i8 [ %.pre, %cond.end133.if.end140_crit_edge ], [ 0, %cond.end47 ], !dbg !3182
  %tobool142 = icmp eq i8 %40, 0, !dbg !3182
  br i1 %tobool142, label %if.end140.if.end230_crit_edge, label %land.lhs.true143, !dbg !3184

if.end140.if.end230_crit_edge:                    ; preds = %if.end140
  br label %if.end230, !dbg !3184

land.lhs.true143:                                 ; preds = %if.end140
  %41 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3185
  %base146 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %41, i64 0, i32 0, !dbg !3185
  %arrayidx152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3185
  %rt_int153 = bitcast %union.rtunion_def* %arrayidx152 to i32*, !dbg !3185
  %42 = load i32, i32* %rt_int153, align 8, !dbg !3185
  %call154 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base146, i32 %42) #7, !dbg !3185
  %tick155 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call154, i64 0, i32 2, !dbg !3185
  %43 = load i32, i32* %tick155, align 8, !dbg !3185
  %44 = load i32, i32* @clock_var, align 4, !dbg !3186
  %cmp156 = icmp sgt i32 %43, %44, !dbg !3187
  br i1 %cmp156, label %if.then172, label %lor.lhs.false, !dbg !3188

lor.lhs.false:                                    ; preds = %land.lhs.true143
  %45 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3189
  %base160 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %45, i64 0, i32 0, !dbg !3189
  %46 = load i32, i32* %rt_int, align 8, !dbg !3189
  %call168 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base160, i32 %46) #7, !dbg !3189
  %tick169 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call168, i64 0, i32 2, !dbg !3189
  %47 = load i32, i32* %tick169, align 8, !dbg !3189
  %48 = load i32, i32* @clock_var, align 4, !dbg !3190
  %cmp170 = icmp sgt i32 %47, %48, !dbg !3191
  br i1 %cmp170, label %if.then172, label %if.end230, !dbg !3192

if.then172:                                       ; preds = %lor.lhs.false, %land.lhs.true143
  %49 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3193
  %base175 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %49, i64 0, i32 0, !dbg !3193
  %50 = load i32, i32* %rt_int, align 8, !dbg !3193
  %call183 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base175, i32 %50) #7, !dbg !3193
  %tick184 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call183, i64 0, i32 2, !dbg !3193
  %51 = load i32, i32* %tick184, align 8, !dbg !3193
  %52 = load i32, i32* @clock_var, align 4, !dbg !3196
  %cmp185 = icmp sgt i32 %51, %52, !dbg !3197
  br i1 %cmp185, label %if.else188, label %cleanup461, !dbg !3198

if.else188:                                       ; preds = %if.then172
  %53 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3199
  %base191 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %53, i64 0, i32 0, !dbg !3199
  %54 = load i32, i32* %rt_int153, align 8, !dbg !3199
  %call199 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base191, i32 %54) #7, !dbg !3199
  %tick200 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call199, i64 0, i32 2, !dbg !3199
  %55 = load i32, i32* %tick200, align 8, !dbg !3199
  %56 = load i32, i32* @clock_var, align 4, !dbg !3201
  %cmp201 = icmp sgt i32 %55, %56, !dbg !3202
  br i1 %cmp201, label %if.else204, label %cleanup461, !dbg !3203

if.else204:                                       ; preds = %if.else188
  %57 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3204
  %base207 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %57, i64 0, i32 0, !dbg !3204
  %58 = load i32, i32* %rt_int, align 8, !dbg !3204
  %call215 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base207, i32 %58) #7, !dbg !3204
  %tick216 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call215, i64 0, i32 2, !dbg !3204
  %59 = load i32, i32* %tick216, align 8, !dbg !3204
  %60 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3205
  %base219 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %60, i64 0, i32 0, !dbg !3205
  %61 = load i32, i32* %rt_int153, align 8, !dbg !3205
  %call227 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base219, i32 %61) #7, !dbg !3205
  %tick228 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call227, i64 0, i32 2, !dbg !3205
  %62 = load i32, i32* %tick228, align 8, !dbg !3205
  %sub229 = sub nsw i32 %59, %62, !dbg !3206
  br label %cleanup461, !dbg !3207

if.end230:                                        ; preds = %if.end140.if.end230_crit_edge, %lor.lhs.false
  %63 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3208
  %base233 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %63, i64 0, i32 0, !dbg !3208
  %arrayidx239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3208
  %rt_int240 = bitcast %union.rtunion_def* %arrayidx239 to i32*, !dbg !3208
  %64 = load i32, i32* %rt_int240, align 8, !dbg !3208
  %call241 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base233, i32 %64) #7, !dbg !3208
  %priority = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call241, i64 0, i32 1, !dbg !3208
  %65 = load i32, i32* %priority, align 4, !dbg !3208
  %66 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3209
  %base244 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %66, i64 0, i32 0, !dbg !3209
  %67 = load i32, i32* %rt_int, align 8, !dbg !3209
  %call252 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base244, i32 %67) #7, !dbg !3209
  %priority253 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call252, i64 0, i32 1, !dbg !3209
  %68 = load i32, i32* %priority253, align 4, !dbg !3209
  %sub254 = sub nsw i32 %65, %68, !dbg !3210
  call void @llvm.dbg.value(metadata i32 %sub254, metadata !3116, metadata !DIExpression()), !dbg !3132
  %69 = load i32, i32* @flag_sched_critical_path_heuristic, align 4, !dbg !3211
  %tobool255 = icmp ne i32 %69, 0, !dbg !3211
  %tobool257 = icmp ne i32 %sub254, 0, !dbg !3213
  %or.cond = and i1 %tobool255, %tobool257, !dbg !3214
  br i1 %or.cond, label %cleanup461, label %if.end259, !dbg !3214

if.end259:                                        ; preds = %if.end230
  %70 = load i32, i32* @flag_sched_spec_insn_heuristic, align 4, !dbg !3215
  %tobool260 = icmp ne i32 %70, 0, !dbg !3215
  %71 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !3216
  %tobool262 = icmp ne %struct.spec_info_def* %71, null, !dbg !3216
  %or.cond4 = and i1 %tobool260, %tobool262, !dbg !3217
  br i1 %or.cond4, label %if.then263, label %if.end313, !dbg !3217

if.then263:                                       ; preds = %if.end259
  %72 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3218
  %base266 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %72, i64 0, i32 0, !dbg !3218
  %73 = load i32, i32* %rt_int, align 8, !dbg !3218
  %call274 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base266, i32 %73) #7, !dbg !3218
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call274, i64 0, i32 8, !dbg !3218
  %74 = load i32, i32* %todo_spec, align 8, !dbg !3218
  %and = and i32 %74, 16777215, !dbg !3219
  call void @llvm.dbg.value(metadata i32 %and, metadata !3121, metadata !DIExpression()), !dbg !3220
  %tobool275 = icmp eq i32 %and, 0, !dbg !3221
  br i1 %tobool275, label %if.end279, label %if.then276, !dbg !3223

if.then276:                                       ; preds = %if.then263
  %call277 = tail call i32 @ds_weak(i32 %and) #6, !dbg !3224
  call void @llvm.dbg.value(metadata i32 %call277, metadata !3125, metadata !DIExpression()), !dbg !3220
  br label %if.end279, !dbg !3225

if.end279:                                        ; preds = %if.then263, %if.then276
  %dw1.0 = phi i32 [ %call277, %if.then276 ], [ 63, %if.then263 ], !dbg !3226
  call void @llvm.dbg.value(metadata i32 %dw1.0, metadata !3125, metadata !DIExpression()), !dbg !3220
  %75 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3227
  %base282 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %75, i64 0, i32 0, !dbg !3227
  %76 = load i32, i32* %rt_int240, align 8, !dbg !3227
  %call290 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base282, i32 %76) #7, !dbg !3227
  %todo_spec291 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call290, i64 0, i32 8, !dbg !3227
  %77 = load i32, i32* %todo_spec291, align 8, !dbg !3227
  %and292 = and i32 %77, 16777215, !dbg !3228
  call void @llvm.dbg.value(metadata i32 %and292, metadata !3124, metadata !DIExpression()), !dbg !3220
  %tobool293 = icmp eq i32 %and292, 0, !dbg !3229
  br i1 %tobool293, label %if.end297, label %if.then294, !dbg !3231

if.then294:                                       ; preds = %if.end279
  %call295 = tail call i32 @ds_weak(i32 %and292) #6, !dbg !3232
  call void @llvm.dbg.value(metadata i32 %call295, metadata !3126, metadata !DIExpression()), !dbg !3220
  br label %if.end297, !dbg !3233

if.end297:                                        ; preds = %if.end279, %if.then294
  %dw2.0 = phi i32 [ %call295, %if.then294 ], [ 63, %if.end279 ], !dbg !3234
  call void @llvm.dbg.value(metadata i32 %dw2.0, metadata !3126, metadata !DIExpression()), !dbg !3220
  %sub298 = sub nsw i32 %dw2.0, %dw1.0, !dbg !3235
  call void @llvm.dbg.value(metadata i32 %sub298, metadata !3127, metadata !DIExpression()), !dbg !3220
  %sub298.off = add i32 %sub298, 7, !dbg !3236
  %78 = icmp ugt i32 %sub298.off, 14, !dbg !3236
  %retval.2 = select i1 %78, i32 %sub298, i32 0, !dbg !3236
  br i1 %78, label %cleanup461, label %if.end313

if.end313:                                        ; preds = %if.end297, %if.end259
  %retval.3 = phi i32 [ 0, %if.end259 ], [ %retval.2, %if.end297 ], !dbg !3132
  %79 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3238
  %rank = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %79, i64 0, i32 4, !dbg !3239
  %80 = load i32 (%struct.rtx_def*, %struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)** %rank, align 8, !dbg !3239
  %call314 = tail call i32 %80(%struct.rtx_def* %1, %struct.rtx_def* %3) #6, !dbg !3240
  call void @llvm.dbg.value(metadata i32 %call314, metadata !3117, metadata !DIExpression()), !dbg !3132
  %81 = load i32, i32* @flag_sched_rank_heuristic, align 4, !dbg !3241
  %tobool315 = icmp ne i32 %81, 0, !dbg !3241
  %tobool317 = icmp ne i32 %call314, 0, !dbg !3243
  %or.cond6 = and i1 %tobool315, %tobool317, !dbg !3244
  br i1 %or.cond6, label %cleanup461, label %if.end319, !dbg !3244

if.end319:                                        ; preds = %if.end313
  %82 = load i32, i32* @flag_sched_last_insn_heuristic, align 4, !dbg !3245
  %tobool320 = icmp eq i32 %82, 0, !dbg !3245
  br i1 %tobool320, label %if.end361, label %if.then321, !dbg !3247

if.then321:                                       ; preds = %if.end319
  %83 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !3248
  call void @llvm.dbg.value(metadata %struct.rtx_def* %83, metadata !3112, metadata !DIExpression()), !dbg !3132
  %84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i64 0, i32 0, !dbg !3250
  %bf.load322 = load i32, i32* %84, align 8, !dbg !3250
  %bf.clear323 = and i32 %bf.load322, 65535, !dbg !3250
  %cmp324 = icmp eq i32 %bf.clear323, 7, !dbg !3250
  br i1 %cmp324, label %land.lhs.true326, label %if.end361, !dbg !3252

land.lhs.true326:                                 ; preds = %if.then321
  %85 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3253
  %prev_head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %85, i64 0, i32 8, !dbg !3254
  %86 = load %struct.rtx_def*, %struct.rtx_def** %prev_head, align 8, !dbg !3254
  %cmp327 = icmp eq %struct.rtx_def* %83, %86, !dbg !3255
  br i1 %cmp327, label %if.end361, label %do.body.preheader, !dbg !3256

do.body.preheader:                                ; preds = %land.lhs.true326
  br label %do.body, !dbg !3257

do.body:                                          ; preds = %do.body.preheader, %land.rhs
  %last.0 = phi %struct.rtx_def* [ %88, %land.rhs ], [ %83, %do.body.preheader ], !dbg !3258
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !3112, metadata !DIExpression()), !dbg !3132
  %87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3259
  %rt_rtx = bitcast %union.rtunion_def* %87 to %struct.rtx_def**, !dbg !3259
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3259
  call void @llvm.dbg.value(metadata %struct.rtx_def* %88, metadata !3112, metadata !DIExpression()), !dbg !3132
  %89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i64 0, i32 0, !dbg !3260
  %bf.load333 = load i32, i32* %89, align 8, !dbg !3260
  %bf.clear334 = and i32 %bf.load333, 65535, !dbg !3260
  %cmp335 = icmp eq i32 %bf.clear334, 8, !dbg !3260
  br i1 %cmp335, label %land.lhs.true352, label %lor.lhs.false337, !dbg !3260

lor.lhs.false337:                                 ; preds = %do.body
  %cmp340 = icmp eq i32 %bf.clear334, 7, !dbg !3260
  br i1 %cmp340, label %land.lhs.true352, label %lor.lhs.false342, !dbg !3260

lor.lhs.false342:                                 ; preds = %lor.lhs.false337
  %cmp345 = icmp eq i32 %bf.clear334, 9, !dbg !3260
  br i1 %cmp345, label %land.lhs.true352, label %lor.lhs.false347, !dbg !3260

lor.lhs.false347:                                 ; preds = %lor.lhs.false342
  %cmp350 = icmp eq i32 %bf.clear334, 10, !dbg !3260
  br i1 %cmp350, label %land.lhs.true352, label %land.rhs, !dbg !3260

land.lhs.true352:                                 ; preds = %lor.lhs.false347, %lor.lhs.false342, %lor.lhs.false337, %do.body
  %cmp355 = icmp eq i32 %bf.clear334, 7, !dbg !3260
  br i1 %cmp355, label %land.rhs, label %if.end361.loopexit, !dbg !3261

land.rhs:                                         ; preds = %land.lhs.true352, %lor.lhs.false347
  %cmp358 = icmp eq %struct.rtx_def* %88, %86, !dbg !3262
  br i1 %cmp358, label %if.end361.loopexit, label %do.body, !dbg !3263, !llvm.loop !3264

if.end361.loopexit:                               ; preds = %land.lhs.true352, %land.rhs
  %.lcssa = phi %struct.rtx_def* [ %88, %land.lhs.true352 ], [ %88, %land.rhs ], !dbg !3259
  br label %if.end361, !dbg !3266

if.end361:                                        ; preds = %if.end361.loopexit, %land.lhs.true326, %if.end319, %if.then321
  %last.2 = phi %struct.rtx_def* [ undef, %if.end319 ], [ %83, %land.lhs.true326 ], [ %83, %if.then321 ], [ %.lcssa, %if.end361.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.2, metadata !3112, metadata !DIExpression()), !dbg !3132
  br i1 %tobool320, label %if.end428, label %land.lhs.true363, !dbg !3267

land.lhs.true363:                                 ; preds = %if.end361
  %90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last.2, i64 0, i32 0, !dbg !3268
  %bf.load364 = load i32, i32* %90, align 8, !dbg !3268
  %bf.clear365 = and i32 %bf.load364, 65535, !dbg !3268
  %cmp366 = icmp eq i32 %bf.clear365, 8, !dbg !3268
  br i1 %cmp366, label %land.lhs.true383, label %lor.lhs.false368, !dbg !3268

lor.lhs.false368:                                 ; preds = %land.lhs.true363
  %cmp371 = icmp eq i32 %bf.clear365, 7, !dbg !3268
  br i1 %cmp371, label %land.lhs.true383, label %lor.lhs.false373, !dbg !3268

lor.lhs.false373:                                 ; preds = %lor.lhs.false368
  %cmp376 = icmp eq i32 %bf.clear365, 9, !dbg !3268
  br i1 %cmp376, label %land.lhs.true383, label %lor.lhs.false378, !dbg !3268

lor.lhs.false378:                                 ; preds = %lor.lhs.false373
  %cmp381 = icmp eq i32 %bf.clear365, 10, !dbg !3268
  br i1 %cmp381, label %land.lhs.true383, label %if.end428, !dbg !3268

land.lhs.true383:                                 ; preds = %lor.lhs.false378, %lor.lhs.false373, %lor.lhs.false368, %land.lhs.true363
  %cmp386 = icmp eq i32 %bf.clear365, 7, !dbg !3268
  br i1 %cmp386, label %if.end428, label %if.then388, !dbg !3269

if.then388:                                       ; preds = %land.lhs.true383
  %call389 = tail call %struct._dep* @sd_find_dep_between(%struct.rtx_def* %last.2, %struct.rtx_def* %1, i8 zeroext 1) #6, !dbg !3270
  call void @llvm.dbg.value(metadata %struct._dep* %call389, metadata !3128, metadata !DIExpression()), !dbg !3271
  %cmp390 = icmp eq %struct._dep* %call389, null, !dbg !3272
  br i1 %cmp390, label %if.end403, label %lor.lhs.false392, !dbg !3274

lor.lhs.false392:                                 ; preds = %if.then388
  %call393 = tail call i32 @dep_cost(%struct._dep* nonnull %call389) #7, !dbg !3275
  %cmp394 = icmp eq i32 %call393, 1, !dbg !3276
  br i1 %cmp394, label %if.end403, label %if.else397, !dbg !3277

if.else397:                                       ; preds = %lor.lhs.false392
  %type = getelementptr inbounds %struct._dep, %struct._dep* %call389, i64 0, i32 2, !dbg !3278
  %91 = load i32, i32* %type, align 8, !dbg !3278
  %cmp398 = icmp eq i32 %91, 0, !dbg !3280
  %.7 = select i1 %cmp398, i32 1, i32 2
  call void @llvm.dbg.value(metadata i32 %.7, metadata !3113, metadata !DIExpression()), !dbg !3132
  br label %if.end403

if.end403:                                        ; preds = %if.then388, %lor.lhs.false392, %if.else397
  %tmp_class.1 = phi i32 [ %.7, %if.else397 ], [ 3, %lor.lhs.false392 ], [ 3, %if.then388 ], !dbg !3281
  call void @llvm.dbg.value(metadata i32 %tmp_class.1, metadata !3113, metadata !DIExpression()), !dbg !3132
  %call404 = tail call %struct._dep* @sd_find_dep_between(%struct.rtx_def* %last.2, %struct.rtx_def* %3, i8 zeroext 1) #6, !dbg !3282
  call void @llvm.dbg.value(metadata %struct._dep* %call404, metadata !3131, metadata !DIExpression()), !dbg !3271
  %cmp405 = icmp eq %struct._dep* %call404, null, !dbg !3283
  br i1 %cmp405, label %if.end419, label %lor.lhs.false407, !dbg !3285

lor.lhs.false407:                                 ; preds = %if.end403
  %call408 = tail call i32 @dep_cost(%struct._dep* nonnull %call404) #7, !dbg !3286
  %cmp409 = icmp eq i32 %call408, 1, !dbg !3287
  br i1 %cmp409, label %if.end419, label %if.else412, !dbg !3288

if.else412:                                       ; preds = %lor.lhs.false407
  %type413 = getelementptr inbounds %struct._dep, %struct._dep* %call404, i64 0, i32 2, !dbg !3289
  %92 = load i32, i32* %type413, align 8, !dbg !3289
  %cmp414 = icmp eq i32 %92, 0, !dbg !3291
  %.8 = select i1 %cmp414, i32 1, i32 2
  call void @llvm.dbg.value(metadata i32 %.8, metadata !3114, metadata !DIExpression()), !dbg !3132
  br label %if.end419

if.end419:                                        ; preds = %if.end403, %lor.lhs.false407, %if.else412
  %tmp2_class.1 = phi i32 [ %.8, %if.else412 ], [ 3, %lor.lhs.false407 ], [ 3, %if.end403 ], !dbg !3292
  call void @llvm.dbg.value(metadata i32 %tmp2_class.1, metadata !3114, metadata !DIExpression()), !dbg !3132
  %sub420 = sub nsw i32 %tmp2_class.1, %tmp_class.1, !dbg !3293
  call void @llvm.dbg.value(metadata i32 %sub420, metadata !3115, metadata !DIExpression()), !dbg !3132
  %tobool421 = icmp ne i32 %sub420, 0, !dbg !3295
  %sub420.retval.3 = select i1 %tobool421, i32 %sub420, i32 %retval.3, !dbg !3296
  br i1 %tobool421, label %cleanup461, label %if.end428

if.end428:                                        ; preds = %if.end419, %if.end361, %land.lhs.true383, %lor.lhs.false378
  %call429 = tail call fastcc i32 @dep_list_size(%struct.rtx_def* %3) #7, !dbg !3297
  %call430 = tail call fastcc i32 @dep_list_size(%struct.rtx_def* %1) #7, !dbg !3298
  %sub431 = sub nsw i32 %call429, %call430, !dbg !3299
  call void @llvm.dbg.value(metadata i32 %sub431, metadata !3115, metadata !DIExpression()), !dbg !3132
  %93 = load i32, i32* @flag_sched_dep_count_heuristic, align 4, !dbg !3300
  %tobool432 = icmp ne i32 %93, 0, !dbg !3300
  %cmp434 = icmp ne i32 %sub431, 0, !dbg !3302
  %or.cond10 = and i1 %tobool432, %cmp434, !dbg !3303
  br i1 %or.cond10, label %cleanup461, label %if.end437, !dbg !3303

if.end437:                                        ; preds = %if.end428
  %94 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3304
  %base440 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %94, i64 0, i32 0, !dbg !3304
  %95 = load i32, i32* %rt_int, align 8, !dbg !3304
  %call448 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base440, i32 %95) #7, !dbg !3304
  %96 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3305
  %base451 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %96, i64 0, i32 0, !dbg !3305
  %97 = load i32, i32* %rt_int240, align 8, !dbg !3305
  %call459 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base451, i32 %97) #7, !dbg !3305
  %sub460 = sub nsw i32 %call448, %call459, !dbg !3306
  br label %cleanup461, !dbg !3307

cleanup461:                                       ; preds = %if.else188, %if.then172, %if.end297, %if.end419, %if.end428, %if.end313, %if.end230, %if.else, %land.lhs.true, %cond.end133, %if.end437, %if.else204, %if.then19
  %retval.5 = phi i32 [ %cond, %if.then19 ], [ %sub135, %cond.end133 ], [ %sub229, %if.else204 ], [ %retval.2, %if.end297 ], [ %sub460, %if.end437 ], [ %sub420.retval.3, %if.end419 ], [ -1, %land.lhs.true ], [ 1, %if.else ], [ -1, %if.then172 ], [ 1, %if.else188 ], [ %sub254, %if.end230 ], [ %call314, %if.end313 ], [ %sub431, %if.end428 ], !dbg !3132
  ret i32 %retval.5, !dbg !3308
}

; Function Attrs: nounwind uwtable
define dso_local void @advance_state(i8* %state) local_unnamed_addr #5 !dbg !3309 {
entry:
  call void @llvm.dbg.value(metadata i8* %state, metadata !3313, metadata !DIExpression()), !dbg !3314
  %0 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 15), align 8, !dbg !3315
  %tobool = icmp eq void ()* %0, null, !dbg !3317
  br i1 %tobool, label %if.end, label %if.then, !dbg !3318

if.then:                                          ; preds = %entry
  tail call void %0() #6, !dbg !3319
  br label %if.end, !dbg !3319

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 12), align 8, !dbg !3320
  %tobool1 = icmp eq %struct.rtx_def* ()* %1, null, !dbg !3322
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !3323

if.then2:                                         ; preds = %if.end
  %call = tail call %struct.rtx_def* %1() #6, !dbg !3324
  %call3 = tail call i32 @state_transition(i8* %state, %struct.rtx_def* %call) #6, !dbg !3325
  br label %if.end4, !dbg !3325

if.end4:                                          ; preds = %if.end, %if.then2
  %call5 = tail call i32 @state_transition(i8* %state, %struct.rtx_def* null) #6, !dbg !3326
  %2 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 14), align 8, !dbg !3327
  %tobool6 = icmp eq %struct.rtx_def* ()* %2, null, !dbg !3329
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !3330

if.then7:                                         ; preds = %if.end4
  %call8 = tail call %struct.rtx_def* %2() #6, !dbg !3331
  %call9 = tail call i32 @state_transition(i8* %state, %struct.rtx_def* %call8) #6, !dbg !3332
  br label %if.end10, !dbg !3332

if.end10:                                         ; preds = %if.end4, %if.then7
  %3 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 16), align 8, !dbg !3333
  %tobool11 = icmp eq void ()* %3, null, !dbg !3335
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !3336

if.then12:                                        ; preds = %if.end10
  tail call void %3() #6, !dbg !3337
  br label %if.end13, !dbg !3337

if.end13:                                         ; preds = %if.end10, %if.then12
  ret void, !dbg !3338
}

declare dso_local i32 @state_transition(i8*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_setup_bb_reg_pressure_info(%struct.basic_block_def* %bb, %struct.rtx_def* %after) local_unnamed_addr #5 !dbg !3339 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3343, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !3344, metadata !DIExpression()), !dbg !3345
  %0 = load i8, i8* @sched_pressure_p, align 1, !dbg !3346
  %tobool = icmp eq i8 %0, 0, !dbg !3346
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3346

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1650, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3346
  br label %cond.end, !dbg !3346

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @initiate_bb_reg_pressure_info(%struct.basic_block_def* %bb) #7, !dbg !3347
  tail call fastcc void @setup_insn_max_reg_pressure(%struct.rtx_def* %after, i8 zeroext 0) #7, !dbg !3348
  ret void, !dbg !3349
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initiate_bb_reg_pressure_info(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !3350 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3352, metadata !DIExpression()), !dbg !3360
  %0 = load i32, i32* @current_nr_blocks, align 4, !dbg !3361
  %cmp = icmp sgt i32 %0, 1, !dbg !3363
  br i1 %cmp, label %if.then, label %if.end25, !dbg !3364

if.then:                                          ; preds = %entry
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3365
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3365
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3365
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 0, !dbg !3365
  br label %for.cond, !dbg !3365

for.cond:                                         ; preds = %for.inc, %if.then
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.then ], [ %rt_rtx24, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3354, metadata !DIExpression()), !dbg !3360
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !3368
  br i1 %tobool, label %if.end25.loopexit, label %land.rhs, !dbg !3368

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3368
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 1, !dbg !3368
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3368
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3368
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !3368
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3368
  %cmp3 = icmp eq %struct.rtx_def* %insn.0, %5, !dbg !3368
  br i1 %cmp3, label %if.end25.loopexit, label %for.body, !dbg !3365

for.body:                                         ; preds = %land.rhs
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3370
  %bf.load = load i32, i32* %6, align 8, !dbg !3370
  %bf.clear = and i32 %bf.load, 65535, !dbg !3370
  %cmp4 = icmp eq i32 %bf.clear, 8, !dbg !3370
  br i1 %cmp4, label %if.then16, label %lor.lhs.false, !dbg !3370

lor.lhs.false:                                    ; preds = %for.body
  %cmp7 = icmp eq i32 %bf.clear, 7, !dbg !3370
  br i1 %cmp7, label %if.then16, label %lor.lhs.false8, !dbg !3370

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i32 %bf.clear, 9, !dbg !3370
  br i1 %cmp11, label %if.then16, label %lor.lhs.false12, !dbg !3370

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %cmp15 = icmp eq i32 %bf.clear, 10, !dbg !3370
  br i1 %cmp15, label %if.then16, label %for.inc, !dbg !3372

if.then16:                                        ; preds = %lor.lhs.false12, %lor.lhs.false8, %lor.lhs.false, %for.body
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !3373
  %7 = getelementptr inbounds %union.u, %union.u* %u17, i64 1, i32 0, i32 0, i64 0, !dbg !3373
  %rt_rtx20 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3373
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !3373
  tail call fastcc void @setup_ref_regs(%struct.rtx_def* %8) #7, !dbg !3374
  br label %for.inc, !dbg !3374

for.inc:                                          ; preds = %lor.lhs.false12, %if.then16
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3368
  %rt_rtx24 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !3368
  br label %for.cond, !dbg !3368, !llvm.loop !3375

if.end25.loopexit:                                ; preds = %for.cond, %land.rhs
  br label %if.end25, !dbg !3377

if.end25:                                         ; preds = %if.end25.loopexit, %entry
  %call = tail call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %bb) #6, !dbg !3377
  tail call fastcc void @initiate_reg_pressure_info(%struct.bitmap_head_def* %call) #7, !dbg !3378
  %call26 = tail call fastcc zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %bb) #7, !dbg !3379
  %tobool27 = icmp eq i8 %call26, 0, !dbg !3379
  br i1 %tobool27, label %if.end41, label %for.cond29.preheader, !dbg !3380

for.cond29.preheader:                             ; preds = %if.end25
  br label %for.cond29, !dbg !3381

for.cond29:                                       ; preds = %for.cond29.preheader, %for.inc39
  %i.0 = phi i32 [ %inc, %for.inc39 ], [ 0, %for.cond29.preheader ], !dbg !3382
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3353, metadata !DIExpression()), !dbg !3360
  %cmp30 = icmp ugt i32 %i.0, 1, !dbg !3383
  br i1 %cmp30, label %cleanup, label %if.end33, !dbg !3384

if.end33:                                         ; preds = %for.cond29
  %call34 = tail call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %bb) #6, !dbg !3385
  %call35 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call34, i32 %i.0) #6, !dbg !3387
  %tobool36 = icmp eq i32 %call35, 0, !dbg !3387
  br i1 %tobool36, label %if.then37, label %cleanup, !dbg !3388

if.then37:                                        ; preds = %if.end33
  tail call fastcc void @mark_regno_birth_or_death(i32 %i.0, i8 zeroext 1) #7, !dbg !3389
  br label %cleanup, !dbg !3389

cleanup:                                          ; preds = %if.end33, %if.then37, %for.cond29
  %cleanup.dest.slot.0 = phi i1 [ false, %for.cond29 ], [ true, %if.then37 ], [ true, %if.end33 ]
  br i1 %cleanup.dest.slot.0, label %for.inc39, label %if.end41.loopexit

for.inc39:                                        ; preds = %cleanup
  %inc = add i32 %i.0, 1, !dbg !3390
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3353, metadata !DIExpression()), !dbg !3360
  br label %for.cond29, !dbg !3391, !llvm.loop !3392

if.end41.loopexit:                                ; preds = %cleanup
  br label %if.end41, !dbg !3394

if.end41:                                         ; preds = %if.end41.loopexit, %if.end25
  ret void, !dbg !3394
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_insn_max_reg_pressure(%struct.rtx_def* %after, i8 zeroext %update_p) unnamed_addr #5 !dbg !2224 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !2228, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.value(metadata i8 %update_p, metadata !2229, metadata !DIExpression()), !dbg !3395
  tail call fastcc void @save_reg_pressure() #7, !dbg !3396
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !3395
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3397
  %1 = sext i32 %0 to i64, !dbg !3400
  br label %for.cond, !dbg !3400

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.body ], [ 0, %entry ], !dbg !3401
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !2230, metadata !DIExpression()), !dbg !3395
  %cmp = icmp slt i64 %indvars.iv8, %1, !dbg !3402
  br i1 %cmp, label %for.body, label %for.end, !dbg !3403

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv8, !dbg !3404
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3404
  %idxprom1 = zext i32 %2 to i64, !dbg !3405
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom1, !dbg !3405
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !3405
  %arrayidx6 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_max_reg_pressure.max_reg_pressure, i64 0, i64 %idxprom1, !dbg !3406
  store i32 %3, i32* %arrayidx6, align 4, !dbg !3407
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !3408
  call void @llvm.dbg.value(metadata i32 undef, metadata !2230, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3395
  br label %for.cond, !dbg !3409, !llvm.loop !3410

for.end:                                          ; preds = %for.cond
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after, i64 0, i32 1, i32 0, i32 1, !dbg !3412
  %rt_bb16 = bitcast %struct.object_block** %arrayidx15 to %struct.basic_block_def**, !dbg !3412
  %tobool69 = icmp eq i8 %update_p, 0, !dbg !3415
  br i1 %tobool69, label %for.end.for.end.split_crit_edge, label %for.end.split.us, !dbg !3419

for.end.for.end.split_crit_edge:                  ; preds = %for.end
  br label %for.cond8, !dbg !3419

for.end.split.us:                                 ; preds = %for.end
  br label %for.cond8.us, !dbg !3419

for.cond8.us:                                     ; preds = %for.inc103.us, %for.end.split.us
  %4 = phi i32 [ %0, %for.end.split.us ], [ %26, %for.inc103.us ]
  %after.pn.us = phi %struct.rtx_def* [ %after, %for.end.split.us ], [ %insn.0.us, %for.inc103.us ]
  %insn.0.in.in.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.pn.us, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3420
  %insn.0.in.us = bitcast %union.rtunion_def* %insn.0.in.in.us to %struct.rtx_def**, !dbg !3420
  %insn.0.us = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in.us, align 8, !dbg !3420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.us, metadata !2233, metadata !DIExpression()), !dbg !3395
  %cmp9.us = icmp eq %struct.rtx_def* %insn.0.us, null, !dbg !3421
  br i1 %cmp9.us, label %for.end108.us-lcssa.us, label %land.rhs.us, !dbg !3422

land.rhs.us:                                      ; preds = %for.cond8.us
  %arrayidx12.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, i32 0, i32 1, !dbg !3423
  %rt_bb.us = bitcast %struct.object_block** %arrayidx12.us to %struct.basic_block_def**, !dbg !3423
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb.us, align 8, !dbg !3423
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb16, align 8, !dbg !3424
  %cmp17.us = icmp eq %struct.basic_block_def* %5, %6, !dbg !3425
  br i1 %cmp17.us, label %for.body18.us, label %for.end108.us-lcssa.us, !dbg !3426

for.body18.us:                                    ; preds = %land.rhs.us
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 0, !dbg !3427
  %bf.load.us = load i32, i32* %7, align 8, !dbg !3427
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !3427
  %cmp19.us = icmp eq i32 %bf.clear.us, 8, !dbg !3427
  br i1 %cmp19.us, label %land.lhs.true.us, label %lor.lhs.false.us, !dbg !3427

lor.lhs.false.us:                                 ; preds = %for.body18.us
  %cmp22.us = icmp eq i32 %bf.clear.us, 7, !dbg !3427
  br i1 %cmp22.us, label %land.lhs.true.us, label %lor.lhs.false23.us, !dbg !3427

lor.lhs.false23.us:                               ; preds = %lor.lhs.false.us
  %cmp26.us = icmp eq i32 %bf.clear.us, 9, !dbg !3427
  br i1 %cmp26.us, label %land.lhs.true.us, label %lor.lhs.false27.us, !dbg !3427

lor.lhs.false27.us:                               ; preds = %lor.lhs.false23.us
  %cmp30.us = icmp eq i32 %bf.clear.us, 10, !dbg !3427
  br i1 %cmp30.us, label %land.lhs.true.us, label %for.inc103.us, !dbg !3427

land.lhs.true.us:                                 ; preds = %lor.lhs.false27.us, %lor.lhs.false23.us, %lor.lhs.false.us, %for.body18.us
  %cmp33.us = icmp eq i32 %bf.clear.us, 7, !dbg !3427
  br i1 %cmp33.us, label %for.inc103.us, label %for.cond34.preheader.us, !dbg !3428

for.cond34.us:                                    ; preds = %for.cond34.preheader.us, %for.inc66.us
  %indvars.iv4 = phi i64 [ 0, %for.cond34.preheader.us ], [ %indvars.iv.next5, %for.inc66.us ], !dbg !3429
  %8 = phi i32 [ %4, %for.cond34.preheader.us ], [ %.pre, %for.inc66.us ], !dbg !3429
  %eq_p.0.us = phi i8 [ 1, %for.cond34.preheader.us ], [ %eq_p.1.us, %for.inc66.us ], !dbg !3432
  call void @llvm.dbg.value(metadata i8 %eq_p.0.us, metadata !2232, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !2230, metadata !DIExpression()), !dbg !3395
  %9 = sext i32 %8 to i64, !dbg !3433
  %cmp35.us = icmp slt i64 %indvars.iv4, %9, !dbg !3433
  br i1 %cmp35.us, label %for.body36.us, label %for.end68.us, !dbg !3434

for.end68.us:                                     ; preds = %for.cond34.us
  %eq_p.0.us.lcssa = phi i8 [ %eq_p.0.us, %for.cond34.us ], !dbg !3432
  call void @llvm.dbg.value(metadata i8 %eq_p.0.us.lcssa, metadata !2232, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.value(metadata i8 %eq_p.0.us.lcssa, metadata !2232, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.value(metadata i8 %eq_p.0.us.lcssa, metadata !2232, metadata !DIExpression()), !dbg !3395
  %tobool72.us = icmp eq i8 %eq_p.0.us.lcssa, 0, !dbg !3435
  br i1 %tobool72.us, label %if.end74.us, label %for.end108.us-lcssa.us, !dbg !3436

if.end74.us:                                      ; preds = %for.end68.us
  tail call fastcc void @update_register_pressure(%struct.rtx_def* nonnull %insn.0.us) #7, !dbg !3437
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !3395
  %10 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3438
  %11 = sext i32 %10 to i64, !dbg !3441
  br label %for.cond75.us, !dbg !3441

for.cond75.us:                                    ; preds = %for.inc99.us, %if.end74.us
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc99.us ], [ 0, %if.end74.us ], !dbg !3442
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !2230, metadata !DIExpression()), !dbg !3395
  %cmp76.us = icmp slt i64 %indvars.iv6, %11, !dbg !3443
  br i1 %cmp76.us, label %for.body78.us, label %for.inc103.loopexit.us, !dbg !3444

for.body78.us:                                    ; preds = %for.cond75.us
  %arrayidx80.us = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv6, !dbg !3445
  %12 = load i32, i32* %arrayidx80.us, align 4, !dbg !3445
  %idxprom81.us = zext i32 %12 to i64, !dbg !3447
  %arrayidx82.us = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_max_reg_pressure.max_reg_pressure, i64 0, i64 %idxprom81.us, !dbg !3447
  %13 = load i32, i32* %arrayidx82.us, align 4, !dbg !3447
  %arrayidx86.us = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom81.us, !dbg !3448
  %14 = load i32, i32* %arrayidx86.us, align 4, !dbg !3448
  %cmp87.us = icmp slt i32 %13, %14, !dbg !3449
  br i1 %cmp87.us, label %if.then89.us, label %for.inc99.us, !dbg !3450

if.then89.us:                                     ; preds = %for.body78.us
  store i32 %14, i32* %arrayidx82.us, align 4, !dbg !3451
  br label %for.inc99.us, !dbg !3452

for.inc99.us:                                     ; preds = %if.then89.us, %for.body78.us
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !3453
  call void @llvm.dbg.value(metadata i32 undef, metadata !2230, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3395
  br label %for.cond75.us, !dbg !3454, !llvm.loop !3455

for.body36.us:                                    ; preds = %for.cond34.us
  %arrayidx38.us = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv4, !dbg !3457
  %15 = load i32, i32* %arrayidx38.us, align 4, !dbg !3457
  %idxprom39.us = zext i32 %15 to i64, !dbg !3459
  %arrayidx40.us = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_max_reg_pressure.max_reg_pressure, i64 0, i64 %idxprom39.us, !dbg !3459
  %16 = load i32, i32* %arrayidx40.us, align 4, !dbg !3459
  call void @llvm.dbg.value(metadata i32 %16, metadata !2231, metadata !DIExpression()), !dbg !3395
  %17 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3460
  %base.us = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %17, i64 0, i32 0, !dbg !3460
  %18 = load i32, i32* %rt_int.us, align 8, !dbg !3460
  %call.us = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base.us, i32 %18) #7, !dbg !3460
  %max_reg_pressure.us = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call.us, i64 0, i32 14, !dbg !3460
  %19 = load i32*, i32** %max_reg_pressure.us, align 8, !dbg !3460
  %arrayidx45.us = getelementptr inbounds i32, i32* %19, i64 %indvars.iv4, !dbg !3460
  %20 = load i32, i32* %arrayidx45.us, align 4, !dbg !3460
  %cmp46.us = icmp eq i32 %20, %16, !dbg !3462
  br i1 %cmp46.us, label %for.inc66.us, label %if.then47.us, !dbg !3463

if.then47.us:                                     ; preds = %for.body36.us
  call void @llvm.dbg.value(metadata i8 0, metadata !2232, metadata !DIExpression()), !dbg !3395
  %21 = load i32, i32* %arrayidx38.us, align 4, !dbg !3464
  %idxprom50.us = zext i32 %21 to i64, !dbg !3466
  %arrayidx51.us = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_max_reg_pressure.max_reg_pressure, i64 0, i64 %idxprom50.us, !dbg !3466
  %22 = load i32, i32* %arrayidx51.us, align 4, !dbg !3466
  %23 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3467
  %base54.us = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %23, i64 0, i32 0, !dbg !3467
  %24 = load i32, i32* %rt_int.us, align 8, !dbg !3467
  %call62.us = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base54.us, i32 %24) #7, !dbg !3467
  %max_reg_pressure63.us = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call62.us, i64 0, i32 14, !dbg !3467
  %25 = load i32*, i32** %max_reg_pressure63.us, align 8, !dbg !3467
  %arrayidx65.us = getelementptr inbounds i32, i32* %25, i64 %indvars.iv4, !dbg !3467
  store i32 %22, i32* %arrayidx65.us, align 4, !dbg !3468
  br label %for.inc66.us, !dbg !3469

for.inc66.us:                                     ; preds = %if.then47.us, %for.body36.us
  %eq_p.1.us = phi i8 [ 0, %if.then47.us ], [ %eq_p.0.us, %for.body36.us ], !dbg !3432
  call void @llvm.dbg.value(metadata i8 %eq_p.1.us, metadata !2232, metadata !DIExpression()), !dbg !3395
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3470
  call void @llvm.dbg.value(metadata i32 undef, metadata !2230, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3395
  %.pre = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3429
  br label %for.cond34.us, !dbg !3471, !llvm.loop !3472

for.inc103.us:                                    ; preds = %for.inc103.loopexit.us, %land.lhs.true.us, %lor.lhs.false27.us
  %26 = phi i32 [ %10, %for.inc103.loopexit.us ], [ %4, %land.lhs.true.us ], [ %4, %lor.lhs.false27.us ]
  br label %for.cond8.us, !dbg !3474, !llvm.loop !3475

for.inc103.loopexit.us:                           ; preds = %for.cond75.us
  br label %for.inc103.us, !dbg !3474

for.cond34.preheader.us:                          ; preds = %land.lhs.true.us
  %arrayidx43.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3477
  %rt_int.us = bitcast %union.rtunion_def* %arrayidx43.us to i32*, !dbg !3477
  br label %for.cond34.us, !dbg !3434

for.end108.us-lcssa.us:                           ; preds = %for.end68.us, %land.rhs.us, %for.cond8.us
  br label %for.end108, !dbg !3478

for.cond8:                                        ; preds = %for.inc103, %for.end.for.end.split_crit_edge
  %27 = phi i32 [ %0, %for.end.for.end.split_crit_edge ], [ %49, %for.inc103 ]
  %after.pn = phi %struct.rtx_def* [ %after, %for.end.for.end.split_crit_edge ], [ %insn.0, %for.inc103 ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %after.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3420
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !3420
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2233, metadata !DIExpression()), !dbg !3395
  %cmp9 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !3421
  br i1 %cmp9, label %for.end108.us-lcssa, label %land.rhs, !dbg !3422

land.rhs:                                         ; preds = %for.cond8
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 1, !dbg !3423
  %rt_bb = bitcast %struct.object_block** %arrayidx12 to %struct.basic_block_def**, !dbg !3423
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3423
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb16, align 8, !dbg !3424
  %cmp17 = icmp eq %struct.basic_block_def* %28, %29, !dbg !3425
  br i1 %cmp17, label %for.body18, label %for.end108.us-lcssa, !dbg !3426

for.body18:                                       ; preds = %land.rhs
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3427
  %bf.load = load i32, i32* %30, align 8, !dbg !3427
  %bf.clear = and i32 %bf.load, 65535, !dbg !3427
  %cmp19 = icmp eq i32 %bf.clear, 8, !dbg !3427
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false, !dbg !3427

lor.lhs.false:                                    ; preds = %for.body18
  %cmp22 = icmp eq i32 %bf.clear, 7, !dbg !3427
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false23, !dbg !3427

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %cmp26 = icmp eq i32 %bf.clear, 9, !dbg !3427
  br i1 %cmp26, label %land.lhs.true, label %lor.lhs.false27, !dbg !3427

lor.lhs.false27:                                  ; preds = %lor.lhs.false23
  %cmp30 = icmp eq i32 %bf.clear, 10, !dbg !3427
  br i1 %cmp30, label %land.lhs.true, label %for.inc103, !dbg !3427

land.lhs.true:                                    ; preds = %lor.lhs.false27, %lor.lhs.false23, %lor.lhs.false, %for.body18
  %cmp33 = icmp eq i32 %bf.clear, 7, !dbg !3427
  br i1 %cmp33, label %for.inc103, label %for.cond34.preheader, !dbg !3428

for.cond34.preheader:                             ; preds = %land.lhs.true
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3477
  %rt_int = bitcast %union.rtunion_def* %arrayidx43 to i32*, !dbg !3477
  br label %for.cond34, !dbg !3434

for.cond34:                                       ; preds = %for.cond34.preheader, %for.inc66
  %indvars.iv = phi i64 [ 0, %for.cond34.preheader ], [ %indvars.iv.next, %for.inc66 ], !dbg !3429
  %31 = phi i32 [ %27, %for.cond34.preheader ], [ %.pre1, %for.inc66 ], !dbg !3429
  call void @llvm.dbg.value(metadata i8 undef, metadata !2232, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2230, metadata !DIExpression()), !dbg !3395
  %32 = sext i32 %31 to i64, !dbg !3433
  %cmp35 = icmp slt i64 %indvars.iv, %32, !dbg !3433
  br i1 %cmp35, label %for.body36, label %for.end68, !dbg !3434

for.body36:                                       ; preds = %for.cond34
  %arrayidx38 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !3457
  %33 = load i32, i32* %arrayidx38, align 4, !dbg !3457
  %idxprom39 = zext i32 %33 to i64, !dbg !3459
  %arrayidx40 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_max_reg_pressure.max_reg_pressure, i64 0, i64 %idxprom39, !dbg !3459
  %34 = load i32, i32* %arrayidx40, align 4, !dbg !3459
  call void @llvm.dbg.value(metadata i32 %34, metadata !2231, metadata !DIExpression()), !dbg !3395
  %35 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3460
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %35, i64 0, i32 0, !dbg !3460
  %36 = load i32, i32* %rt_int, align 8, !dbg !3460
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %36) #7, !dbg !3460
  %max_reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 14, !dbg !3460
  %37 = load i32*, i32** %max_reg_pressure, align 8, !dbg !3460
  %arrayidx45 = getelementptr inbounds i32, i32* %37, i64 %indvars.iv, !dbg !3460
  %38 = load i32, i32* %arrayidx45, align 4, !dbg !3460
  %cmp46 = icmp eq i32 %38, %34, !dbg !3462
  br i1 %cmp46, label %for.inc66, label %if.then47, !dbg !3463

if.then47:                                        ; preds = %for.body36
  call void @llvm.dbg.value(metadata i8 0, metadata !2232, metadata !DIExpression()), !dbg !3395
  %39 = load i32, i32* %arrayidx38, align 4, !dbg !3464
  %idxprom50 = zext i32 %39 to i64, !dbg !3466
  %arrayidx51 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_max_reg_pressure.max_reg_pressure, i64 0, i64 %idxprom50, !dbg !3466
  %40 = load i32, i32* %arrayidx51, align 4, !dbg !3466
  %41 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !3467
  %base54 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %41, i64 0, i32 0, !dbg !3467
  %42 = load i32, i32* %rt_int, align 8, !dbg !3467
  %call62 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base54, i32 %42) #7, !dbg !3467
  %max_reg_pressure63 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call62, i64 0, i32 14, !dbg !3467
  %43 = load i32*, i32** %max_reg_pressure63, align 8, !dbg !3467
  %arrayidx65 = getelementptr inbounds i32, i32* %43, i64 %indvars.iv, !dbg !3467
  store i32 %40, i32* %arrayidx65, align 4, !dbg !3468
  br label %for.inc66, !dbg !3469

for.inc66:                                        ; preds = %for.body36, %if.then47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3470
  call void @llvm.dbg.value(metadata i32 undef, metadata !2230, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3395
  %.pre1 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3429
  br label %for.cond34, !dbg !3471, !llvm.loop !3472

for.end68:                                        ; preds = %for.cond34
  tail call fastcc void @update_register_pressure(%struct.rtx_def* nonnull %insn.0) #7, !dbg !3437
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !3395
  %44 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3438
  %45 = sext i32 %44 to i64, !dbg !3441
  br label %for.cond75, !dbg !3441

for.cond75:                                       ; preds = %for.inc99, %for.end68
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc99 ], [ 0, %for.end68 ], !dbg !3442
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !2230, metadata !DIExpression()), !dbg !3395
  %cmp76 = icmp slt i64 %indvars.iv2, %45, !dbg !3443
  br i1 %cmp76, label %for.body78, label %for.inc103.loopexit, !dbg !3444

for.body78:                                       ; preds = %for.cond75
  %arrayidx80 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv2, !dbg !3445
  %46 = load i32, i32* %arrayidx80, align 4, !dbg !3445
  %idxprom81 = zext i32 %46 to i64, !dbg !3447
  %arrayidx82 = getelementptr inbounds [27 x i32], [27 x i32]* @setup_insn_max_reg_pressure.max_reg_pressure, i64 0, i64 %idxprom81, !dbg !3447
  %47 = load i32, i32* %arrayidx82, align 4, !dbg !3447
  %arrayidx86 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom81, !dbg !3448
  %48 = load i32, i32* %arrayidx86, align 4, !dbg !3448
  %cmp87 = icmp slt i32 %47, %48, !dbg !3449
  br i1 %cmp87, label %if.then89, label %for.inc99, !dbg !3450

if.then89:                                        ; preds = %for.body78
  store i32 %48, i32* %arrayidx82, align 4, !dbg !3451
  br label %for.inc99, !dbg !3452

for.inc99:                                        ; preds = %for.body78, %if.then89
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !3453
  call void @llvm.dbg.value(metadata i32 undef, metadata !2230, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3395
  br label %for.cond75, !dbg !3454, !llvm.loop !3455

for.inc103.loopexit:                              ; preds = %for.cond75
  br label %for.inc103, !dbg !3474

for.inc103:                                       ; preds = %for.inc103.loopexit, %lor.lhs.false27, %land.lhs.true
  %49 = phi i32 [ %44, %for.inc103.loopexit ], [ %27, %lor.lhs.false27 ], [ %27, %land.lhs.true ]
  br label %for.cond8, !dbg !3474, !llvm.loop !3475

for.end108.us-lcssa:                              ; preds = %land.rhs, %for.cond8
  br label %for.end108, !dbg !3478

for.end108:                                       ; preds = %for.end108.us-lcssa.us, %for.end108.us-lcssa
  tail call fastcc void @restore_reg_pressure() #7, !dbg !3478
  ret void, !dbg !3479
}

; Function Attrs: nounwind uwtable
define dso_local void @concat_note_lists(%struct.rtx_def* %from_end, %struct.rtx_def** %to_endp) local_unnamed_addr #5 !dbg !3480 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from_end, metadata !3484, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.value(metadata %struct.rtx_def** %to_endp, metadata !3485, metadata !DIExpression()), !dbg !3487
  %cmp = icmp eq %struct.rtx_def* %from_end, null, !dbg !3488
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3490

if.end:                                           ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %to_endp, align 8, !dbg !3491
  %cmp1 = icmp eq %struct.rtx_def* %0, null, !dbg !3493
  %1 = ptrtoint %struct.rtx_def* %0 to i64, !dbg !3494
  br i1 %cmp1, label %if.then2, label %while.cond.preheader, !dbg !3494

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !3495

if.then2:                                         ; preds = %if.end
  store %struct.rtx_def* %from_end, %struct.rtx_def** %to_endp, align 8, !dbg !3496
  br label %cleanup.cont, !dbg !3498

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %from_start.0 = phi %struct.rtx_def* [ %3, %while.body ], [ %from_end, %while.cond.preheader ], !dbg !3487
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from_start.0, metadata !3486, metadata !DIExpression()), !dbg !3487
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from_start.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3499
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3499
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3499
  %cmp4 = icmp eq %struct.rtx_def* %3, null, !dbg !3500
  br i1 %cmp4, label %while.end, label %while.body, !dbg !3495

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3486, metadata !DIExpression()), !dbg !3487
  br label %while.cond, !dbg !3495, !llvm.loop !3501

while.end:                                        ; preds = %while.cond
  %from_start.0.lcssa = phi %struct.rtx_def* [ %from_start.0, %while.cond ], !dbg !3487
  %.lcssa = phi %union.rtunion_def* [ %2, %while.cond ], !dbg !3499
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from_start.0.lcssa, metadata !3486, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from_start.0.lcssa, metadata !3486, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from_start.0.lcssa, metadata !3486, metadata !DIExpression()), !dbg !3487
  %4 = bitcast %union.rtunion_def* %.lcssa to i64*, !dbg !3503
  store i64 %1, i64* %4, align 8, !dbg !3503
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to_endp, align 8, !dbg !3504
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3504
  %rt_rtx16 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !3504
  store %struct.rtx_def* %from_start.0.lcssa, %struct.rtx_def** %rt_rtx16, align 8, !dbg !3505
  store %struct.rtx_def* %from_end, %struct.rtx_def** %to_endp, align 8, !dbg !3506
  br label %cleanup.cont, !dbg !3507

cleanup.cont:                                     ; preds = %if.then2, %while.end, %entry
  ret void, !dbg !3507
}

; Function Attrs: nounwind uwtable
define dso_local void @remove_notes(%struct.rtx_def* %head, %struct.rtx_def* %tail) local_unnamed_addr #5 !dbg !3508 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3510, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !3511, metadata !DIExpression()), !dbg !3515
  store %struct.rtx_def* null, %struct.rtx_def** @note_list, align 8, !dbg !3516
  %cmp = icmp eq %struct.rtx_def* %head, %tail, !dbg !3517
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3519

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 0, !dbg !3520
  %bf.load = load i32, i32* %0, align 8, !dbg !3520
  %bf.clear = and i32 %bf.load, 65535, !dbg !3520
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !3520
  br i1 %cmp1, label %if.end, label %lor.lhs.false, !dbg !3520

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !3520
  br i1 %cmp4, label %if.end, label %lor.lhs.false5, !dbg !3520

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !3520
  br i1 %cmp8, label %if.end, label %lor.lhs.false9, !dbg !3520

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !3520
  br i1 %cmp12, label %if.end, label %cleanup.cont, !dbg !3521

if.end:                                           ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %land.lhs.true, %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3522
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !3522
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3522
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3512, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3513, metadata !DIExpression()), !dbg !3515
  br label %for.cond, !dbg !3523

for.cond:                                         ; preds = %for.inc, %if.end
  %insn.0 = phi %struct.rtx_def* [ %head, %if.end ], [ %4, %for.inc ], !dbg !3525
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3513, metadata !DIExpression()), !dbg !3515
  %cmp13 = icmp eq %struct.rtx_def* %insn.0, %2, !dbg !3526
  br i1 %cmp13, label %cleanup.cont.loopexit, label %for.body, !dbg !3528

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3529
  %rt_rtx17 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3529
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !3529
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3514, metadata !DIExpression()), !dbg !3515
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3531
  %bf.load18 = load i32, i32* %5, align 8, !dbg !3531
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !3531
  %cmp20 = icmp eq i32 %bf.clear19, 13, !dbg !3531
  br i1 %cmp20, label %if.end22, label %for.inc, !dbg !3533

if.end22:                                         ; preds = %for.body
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !3534
  %6 = getelementptr inbounds %union.u, %union.u* %u23, i64 1, i32 0, i32 0, i64 0, !dbg !3534
  %rt_int = bitcast %union.rtunion_def* %6 to i32*, !dbg !3534
  %7 = load i32, i32* %rt_int, align 8, !dbg !3534
  switch i32 %7, label %sw.default [
    i32 10, label %for.inc
    i32 6, label %sw.bb26
  ], !dbg !3535

sw.bb26:                                          ; preds = %if.end22
  %cmp27 = icmp eq %struct.rtx_def* %insn.0, %tail, !dbg !3536
  br i1 %cmp27, label %sw.default, label %if.then28, !dbg !3539

if.then28:                                        ; preds = %sw.bb26
  tail call void @remove_insn(%struct.rtx_def* %insn.0) #6, !dbg !3540
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 6) #6, !dbg !3542
  tail call void @add_reg_note(%struct.rtx_def* %4, i32 26, %struct.rtx_def* %call) #6, !dbg !3543
  br label %sw.epilog, !dbg !3544

sw.default:                                       ; preds = %sw.bb26, %if.end22
  tail call void @remove_insn(%struct.rtx_def* %insn.0) #6, !dbg !3545
  %8 = load i64, i64* bitcast (%struct.rtx_def** @note_list to i64*), align 8, !dbg !3546
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3547
  %10 = bitcast %union.rtunion_def* %9 to i64*, !dbg !3548
  store i64 %8, i64* %10, align 8, !dbg !3548
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx17, align 8, !dbg !3549
  %tobool = icmp eq i64 %8, 0, !dbg !3550
  br i1 %tobool, label %if.end43, label %if.then38, !dbg !3552

if.then38:                                        ; preds = %sw.default
  %11 = inttoptr i64 %8 to %struct.rtx_def*, !dbg !3550
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3553
  %rt_rtx42 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !3553
  store %struct.rtx_def* %insn.0, %struct.rtx_def** %rt_rtx42, align 8, !dbg !3554
  br label %if.end43, !dbg !3553

if.end43:                                         ; preds = %sw.default, %if.then38
  store %struct.rtx_def* %insn.0, %struct.rtx_def** @note_list, align 8, !dbg !3555
  br label %sw.epilog, !dbg !3556

sw.epilog:                                        ; preds = %if.end43, %if.then28
  %call44 = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !3557
  %tobool45 = icmp ne i8 %call44, 0, !dbg !3557
  %cmp47 = icmp ne %struct.rtx_def* %insn.0, %tail, !dbg !3557
  %or.cond = or i1 %tobool45, %cmp47, !dbg !3557
  %cmp50 = icmp ne %struct.rtx_def* %insn.0, %head, !dbg !3557
  %or.cond1 = and i1 %or.cond, %cmp50, !dbg !3557
  br i1 %or.cond1, label %for.inc, label %cond.true, !dbg !3557

cond.true:                                        ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1887, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3557
  br label %for.inc, !dbg !3557

for.inc:                                          ; preds = %cond.true, %sw.epilog, %if.end22, %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3513, metadata !DIExpression()), !dbg !3515
  br label %for.cond, !dbg !3558, !llvm.loop !3559

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3561

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %lor.lhs.false9
  ret void, !dbg !3561
}

declare dso_local void @remove_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @get_ebb_head_tail(%struct.basic_block_def* %beg, %struct.basic_block_def* %end, %struct.rtx_def** %headp, %struct.rtx_def** %tailp) local_unnamed_addr #5 !dbg !3562 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %beg, metadata !3566, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %end, metadata !3567, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def** %headp, metadata !3568, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tailp, metadata !3569, metadata !DIExpression()), !dbg !3574
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %beg, i64 0, i32 7, !dbg !3575
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3575
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3575
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !3575
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3570, metadata !DIExpression()), !dbg !3574
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !3576
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3571, metadata !DIExpression()), !dbg !3574
  %il3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %end, i64 0, i32 7, !dbg !3577
  %rtl4 = bitcast %union.basic_block_il_dependent* %il3 to %struct.rtl_bb_info**, !dbg !3577
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl4, align 8, !dbg !3577
  %head_5 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 0, !dbg !3577
  %4 = load %struct.rtx_def*, %struct.rtx_def** %head_5, align 8, !dbg !3577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3572, metadata !DIExpression()), !dbg !3574
  %end_8 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !3578
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_8, align 8, !dbg !3578
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3573, metadata !DIExpression()), !dbg !3574
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3579
  %bf.load = load i32, i32* %6, align 8, !dbg !3579
  %bf.clear = and i32 %bf.load, 65535, !dbg !3579
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !3579
  br i1 %cmp, label %if.then, label %if.end, !dbg !3581

if.then:                                          ; preds = %entry
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3582
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !3582
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3582
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !3570, metadata !DIExpression()), !dbg !3574
  br label %if.end, !dbg !3583

if.end:                                           ; preds = %if.then, %entry
  %beg_head.0 = phi %struct.rtx_def* [ %8, %if.then ], [ %1, %entry ], !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.0, metadata !3570, metadata !DIExpression()), !dbg !3574
  br label %while.cond, !dbg !3584

while.cond:                                       ; preds = %if.then18, %if.end
  %beg_head.1 = phi %struct.rtx_def* [ %beg_head.0, %if.end ], [ %11, %if.then18 ], !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1, metadata !3570, metadata !DIExpression()), !dbg !3574
  %cmp9 = icmp eq %struct.rtx_def* %beg_head.1, %2, !dbg !3585
  br i1 %cmp9, label %while.end, label %while.body, !dbg !3584

while.body:                                       ; preds = %while.cond
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %beg_head.1, i64 0, i32 0, !dbg !3586
  %bf.load10 = load i32, i32* %9, align 8, !dbg !3586
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !3586
  %cmp12 = icmp eq i32 %bf.clear11, 13, !dbg !3586
  br i1 %cmp12, label %if.then18, label %lor.lhs.false, !dbg !3588

lor.lhs.false:                                    ; preds = %while.body
  %cmp15 = icmp eq i32 %bf.clear11, 7, !dbg !3589
  br i1 %cmp15, label %land.lhs.true, label %while.end, !dbg !3589

land.lhs.true:                                    ; preds = %lor.lhs.false
  %bf.clear17 = and i32 %bf.load10, 67108864, !dbg !3589
  %tobool = icmp eq i32 %bf.clear17, 0, !dbg !3589
  br i1 %tobool, label %if.then18, label %while.end, !dbg !3590

if.then18:                                        ; preds = %land.lhs.true, %while.body
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %beg_head.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3591
  %rt_rtx22 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !3591
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !3591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !3570, metadata !DIExpression()), !dbg !3574
  br label %while.cond, !dbg !3584, !llvm.loop !3592

while.end:                                        ; preds = %land.lhs.true, %while.cond, %lor.lhs.false
  %beg_head.1.lcssa = phi %struct.rtx_def* [ %beg_head.1, %land.lhs.true ], [ %beg_head.1, %while.cond ], [ %beg_head.1, %lor.lhs.false ], !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %beg_head.1.lcssa, metadata !3570, metadata !DIExpression()), !dbg !3574
  store %struct.rtx_def* %beg_head.1.lcssa, %struct.rtx_def** %headp, align 8, !dbg !3594
  %cmp24 = icmp eq %struct.basic_block_def* %beg, %end, !dbg !3595
  br i1 %cmp24, label %if.end36, label %if.else26, !dbg !3597

if.else26:                                        ; preds = %while.end
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !3598
  %bf.load27 = load i32, i32* %12, align 8, !dbg !3598
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !3598
  %cmp29 = icmp eq i32 %bf.clear28, 12, !dbg !3598
  br i1 %cmp29, label %if.then30, label %if.end36, !dbg !3600

if.then30:                                        ; preds = %if.else26
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3601
  %rt_rtx34 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !3601
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !3601
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !3572, metadata !DIExpression()), !dbg !3574
  br label %if.end36, !dbg !3602

if.end36:                                         ; preds = %if.else26, %if.then30, %while.end
  %end_head.1 = phi %struct.rtx_def* [ %beg_head.1.lcssa, %while.end ], [ %14, %if.then30 ], [ %4, %if.else26 ], !dbg !3603
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_head.1, metadata !3572, metadata !DIExpression()), !dbg !3574
  br label %while.cond37, !dbg !3604

while.cond37:                                     ; preds = %if.then52, %if.end36
  %end_tail.0 = phi %struct.rtx_def* [ %5, %if.end36 ], [ %17, %if.then52 ], !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0, metadata !3573, metadata !DIExpression()), !dbg !3574
  %cmp38 = icmp eq %struct.rtx_def* %end_head.1, %end_tail.0, !dbg !3605
  br i1 %cmp38, label %while.end59, label %while.body39, !dbg !3604

while.body39:                                     ; preds = %while.cond37
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end_tail.0, i64 0, i32 0, !dbg !3606
  %bf.load40 = load i32, i32* %15, align 8, !dbg !3606
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !3606
  %cmp42 = icmp eq i32 %bf.clear41, 13, !dbg !3606
  br i1 %cmp42, label %if.then52, label %lor.lhs.false43, !dbg !3608

lor.lhs.false43:                                  ; preds = %while.body39
  %cmp46 = icmp eq i32 %bf.clear41, 7, !dbg !3609
  br i1 %cmp46, label %land.lhs.true47, label %while.end59, !dbg !3609

land.lhs.true47:                                  ; preds = %lor.lhs.false43
  %bf.clear50 = and i32 %bf.load40, 67108864, !dbg !3609
  %tobool51 = icmp eq i32 %bf.clear50, 0, !dbg !3609
  br i1 %tobool51, label %if.then52, label %while.end59, !dbg !3610

if.then52:                                        ; preds = %land.lhs.true47, %while.body39
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end_tail.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3611
  %rt_rtx56 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !3611
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !3611
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !3573, metadata !DIExpression()), !dbg !3574
  br label %while.cond37, !dbg !3604, !llvm.loop !3612

while.end59:                                      ; preds = %land.lhs.true47, %while.cond37, %lor.lhs.false43
  %end_tail.0.lcssa = phi %struct.rtx_def* [ %end_tail.0, %land.lhs.true47 ], [ %end_tail.0, %while.cond37 ], [ %end_tail.0, %lor.lhs.false43 ], !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_tail.0.lcssa, metadata !3573, metadata !DIExpression()), !dbg !3574
  store %struct.rtx_def* %end_tail.0.lcssa, %struct.rtx_def** %tailp, align 8, !dbg !3614
  ret void, !dbg !3615
}

; Function Attrs: nounwind uwtable
define dso_local i32 @no_real_insns_p(%struct.rtx_def* %head, %struct.rtx_def* %tail) local_unnamed_addr #5 !dbg !3616 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3620, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !3621, metadata !DIExpression()), !dbg !3622
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3622
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !3622
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3622
  br label %while.cond, !dbg !3623

while.cond:                                       ; preds = %if.end, %entry
  %head.addr.0 = phi %struct.rtx_def* [ %head, %entry ], [ %4, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.addr.0, metadata !3620, metadata !DIExpression()), !dbg !3622
  %cmp = icmp eq %struct.rtx_def* %head.addr.0, %1, !dbg !3624
  br i1 %cmp, label %return, label %while.body, !dbg !3623

while.body:                                       ; preds = %while.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.addr.0, i64 0, i32 0, !dbg !3625
  %bf.load = load i32, i32* %2, align 8, !dbg !3625
  %bf.clear = and i32 %bf.load, 65535, !dbg !3625
  %cmp1 = icmp eq i32 %bf.clear, 13, !dbg !3625
  br i1 %cmp1, label %if.end, label %land.lhs.true, !dbg !3628

land.lhs.true:                                    ; preds = %while.body
  %cmp4 = icmp eq i32 %bf.clear, 12, !dbg !3629
  br i1 %cmp4, label %if.end, label %land.lhs.true5, !dbg !3630

land.lhs.true5:                                   ; preds = %land.lhs.true
  %cmp8 = icmp eq i32 %bf.clear, 7, !dbg !3631
  br i1 %cmp8, label %land.lhs.true9, label %return, !dbg !3631

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %bf.clear11 = and i32 %bf.load, 67108864, !dbg !3631
  %tobool = icmp eq i32 %bf.clear11, 0, !dbg !3631
  br i1 %tobool, label %if.end, label %return, !dbg !3632

if.end:                                           ; preds = %land.lhs.true9, %land.lhs.true, %while.body
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3633
  %rt_rtx15 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3633
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !3633
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3620, metadata !DIExpression()), !dbg !3622
  br label %while.cond, !dbg !3623, !llvm.loop !3634

return:                                           ; preds = %land.lhs.true9, %while.cond, %land.lhs.true5
  %retval.0 = phi i32 [ 0, %land.lhs.true9 ], [ 0, %land.lhs.true5 ], [ 1, %while.cond ], !dbg !3622
  ret i32 %retval.0, !dbg !3636
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @restore_other_notes(%struct.rtx_def* %head, %struct.basic_block_def* %head_bb) local_unnamed_addr #5 !dbg !3637 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !3641, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %head_bb, metadata !3642, metadata !DIExpression()), !dbg !3646
  %0 = load %struct.rtx_def*, %struct.rtx_def** @note_list, align 8, !dbg !3647
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !3648
  br i1 %cmp, label %if.end53, label %if.then, !dbg !3649

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3643, metadata !DIExpression()), !dbg !3650
  %tobool = icmp eq %struct.rtx_def* %head, null, !dbg !3651
  br i1 %tobool, label %if.else, label %if.then1, !dbg !3653

if.then1:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 1, i32 0, i32 1, !dbg !3654
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !3654
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !3654
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !3642, metadata !DIExpression()), !dbg !3646
  br label %if.end, !dbg !3655

if.else:                                          ; preds = %if.then
  %call = tail call %struct.rtx_def* @bb_note(%struct.basic_block_def* %head_bb) #7, !dbg !3656
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3656
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3656
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3656
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3641, metadata !DIExpression()), !dbg !3646
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %head_bb.addr.0 = phi %struct.basic_block_def* [ %1, %if.then1 ], [ %head_bb, %if.else ]
  %head.addr.0 = phi %struct.rtx_def* [ %head, %if.then1 ], [ %3, %if.else ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.addr.0, metadata !3641, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %head_bb.addr.0, metadata !3642, metadata !DIExpression()), !dbg !3646
  br label %while.cond, !dbg !3657

while.cond:                                       ; preds = %while.body, %if.end
  %note_head.0 = phi %struct.rtx_def* [ %0, %if.end ], [ %5, %while.body ], !dbg !3650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_head.0, metadata !3643, metadata !DIExpression()), !dbg !3650
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note_head.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3658
  %rt_rtx8 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !3658
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !3658
  %tobool9 = icmp eq %struct.rtx_def* %5, null, !dbg !3657
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note_head.0, i64 0, i32 1, i32 0, i32 1, !dbg !3650
  %rt_bb13 = bitcast %struct.object_block** %arrayidx12 to %struct.basic_block_def**, !dbg !3650
  store %struct.basic_block_def* %head_bb.addr.0, %struct.basic_block_def** %rt_bb13, align 8, !dbg !3650
  br i1 %tobool9, label %while.end, label %while.body, !dbg !3657

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3643, metadata !DIExpression()), !dbg !3650
  br label %while.cond, !dbg !3657, !llvm.loop !3659

while.end:                                        ; preds = %while.cond
  %note_head.0.lcssa = phi %struct.rtx_def* [ %note_head.0, %while.cond ], !dbg !3650
  %.lcssa = phi %union.rtunion_def* [ %4, %while.cond ], !dbg !3658
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_head.0.lcssa, metadata !3643, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_head.0.lcssa, metadata !3643, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note_head.0.lcssa, metadata !3643, metadata !DIExpression()), !dbg !3650
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3661
  %7 = bitcast %union.rtunion_def* %6 to i64*, !dbg !3661
  %8 = load i64, i64* %7, align 8, !dbg !3661
  %9 = bitcast %union.rtunion_def* %.lcssa to i64*, !dbg !3662
  store i64 %8, i64* %9, align 8, !dbg !3662
  %rt_rtx33 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !3663
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !3663
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3663
  %rt_rtx37 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !3663
  store %struct.rtx_def* %note_head.0.lcssa, %struct.rtx_def** %rt_rtx37, align 8, !dbg !3664
  %12 = load i64, i64* bitcast (%struct.rtx_def** @note_list to i64*), align 8, !dbg !3665
  store i64 %12, i64* %7, align 8, !dbg !3666
  %.cast = inttoptr i64 %12 to %struct.rtx_def*, !dbg !3667
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.cast, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3667
  %rt_rtx45 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !3667
  store %struct.rtx_def* %head.addr.0, %struct.rtx_def** %rt_rtx45, align 8, !dbg !3668
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.addr.0, i64 0, i32 1, i32 0, i32 1, !dbg !3669
  %rt_bb49 = bitcast %struct.object_block** %arrayidx48 to %struct.basic_block_def**, !dbg !3669
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb49, align 8, !dbg !3669
  %cmp50 = icmp eq %struct.basic_block_def* %14, %head_bb.addr.0, !dbg !3671
  br i1 %cmp50, label %if.end53, label %if.then51, !dbg !3672

if.then51:                                        ; preds = %while.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %head_bb.addr.0, i64 0, i32 7, !dbg !3673
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3673
  %15 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3673
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %15, i64 0, i32 1, !dbg !3673
  %16 = bitcast %struct.rtx_def** %end_ to i64*, !dbg !3674
  store i64 %12, i64* %16, align 8, !dbg !3674
  br label %if.end53, !dbg !3673

if.end53:                                         ; preds = %while.end, %entry, %if.then51
  %head.addr.1 = phi %struct.rtx_def* [ %head, %entry ], [ %note_head.0.lcssa, %if.then51 ], [ %note_head.0.lcssa, %while.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.addr.1, metadata !3641, metadata !DIExpression()), !dbg !3646
  ret %struct.rtx_def* %head.addr.1, !dbg !3675
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @bb_note(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3676 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3680, metadata !DIExpression()), !dbg !3682
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3683
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3683
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3683
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !3683
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3683
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !3681, metadata !DIExpression()), !dbg !3682
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !3684
  %bf.load = load i32, i32* %2, align 8, !dbg !3684
  %bf.clear = and i32 %bf.load, 65535, !dbg !3684
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !3684
  br i1 %cmp, label %if.then, label %if.end, !dbg !3686

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3687
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !3687
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3687
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !3681, metadata !DIExpression()), !dbg !3682
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !3682
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3688
  br label %if.end, !dbg !3689

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ], !dbg !3688
  %note.0 = phi %struct.rtx_def* [ %4, %if.then ], [ %1, %entry ], !dbg !3682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3681, metadata !DIExpression()), !dbg !3682
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3688
  %cmp3 = icmp eq i32 %bf.clear2, 13, !dbg !3688
  br i1 %cmp3, label %land.lhs.true, label %cond.true, !dbg !3688

land.lhs.true:                                    ; preds = %if.end
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, !dbg !3688
  %5 = getelementptr inbounds %union.u, %union.u* %u4, i64 1, i32 0, i32 0, i64 0, !dbg !3688
  %rt_int = bitcast %union.rtunion_def* %5 to i32*, !dbg !3688
  %6 = load i32, i32* %rt_int, align 8, !dbg !3688
  %cmp7 = icmp eq i32 %6, 10, !dbg !3688
  br i1 %cmp7, label %cond.end, label %cond.true, !dbg !3688

cond.true:                                        ; preds = %land.lhs.true, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5132, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3688
  br label %cond.end, !dbg !3688

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  ret %struct.rtx_def* %note.0, !dbg !3690
}

; Function Attrs: nounwind uwtable
define dso_local void @reemit_notes(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !3691 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3693, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3695, metadata !DIExpression()), !dbg !3702
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3703
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !3703
  br label %for.cond, !dbg !3704

for.cond:                                         ; preds = %for.inc, %entry
  %note.0.in.in = phi %union.rtunion_def* [ %0, %entry ], [ %4, %for.inc ]
  %last.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %last.1, %for.inc ], !dbg !3702
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !3705
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !3705
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.0, metadata !3695, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !3694, metadata !DIExpression()), !dbg !3702
  %tobool = icmp eq %struct.rtx_def* %note.0, null, !dbg !3706
  br i1 %tobool, label %for.end, label %for.body, !dbg !3706

for.body:                                         ; preds = %for.cond
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !3707
  %bf.load = load i32, i32* %1, align 8, !dbg !3707
  %bf.clear = and i32 %bf.load, 16711680, !dbg !3707
  %cmp = icmp eq i32 %bf.clear, 1703936, !dbg !3708
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3709

if.then:                                          ; preds = %for.body
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3710
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !3710
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !3710
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !3710
  %arrayidx6 = bitcast %union.u* %u5 to i64*, !dbg !3710
  %3 = load i64, i64* %arrayidx6, align 8, !dbg !3710
  %conv = trunc i64 %3 to i32, !dbg !3711
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3696, metadata !DIExpression()), !dbg !3712
  %call = tail call %struct.rtx_def* @emit_note_before(i32 %conv, %struct.rtx_def* %last.0) #6, !dbg !3713
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3695, metadata !DIExpression()), !dbg !3702
  tail call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* nonnull %note.0) #6, !dbg !3714
  br label %for.inc, !dbg !3715

for.inc:                                          ; preds = %for.body, %if.then
  %last.1 = phi %struct.rtx_def* [ %call, %if.then ], [ %last.0, %for.body ], !dbg !3702
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last.1, metadata !3695, metadata !DIExpression()), !dbg !3702
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3716
  br label %for.cond, !dbg !3717, !llvm.loop !3718

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3720
}

declare dso_local %struct.rtx_def* @emit_note_before(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @max_issue(%struct.ready_list* %ready, i32 %privileged_n, i8* %state, i32* %index) local_unnamed_addr #5 !dbg !3721 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* %ready, metadata !3725, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %privileged_n, metadata !3726, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i8* %state, metadata !3727, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32* %index, metadata !3728, metadata !DIExpression()), !dbg !3740
  %n_ready1 = getelementptr inbounds %struct.ready_list, %struct.ready_list* %ready, i64 0, i32 3, !dbg !3741
  %0 = load i32, i32* %n_ready1, align 8, !dbg !3741
  call void @llvm.dbg.value(metadata i32 %0, metadata !3732, metadata !DIExpression()), !dbg !3740
  %1 = load i32, i32* @dfa_lookahead, align 4, !dbg !3742
  %cmp = icmp sgt i32 %1, 0, !dbg !3742
  %cmp2 = icmp sgt i32 %privileged_n, -1, !dbg !3742
  %or.cond = and i1 %cmp, %cmp2, !dbg !3742
  %cmp4 = icmp sge i32 %0, %privileged_n, !dbg !3742
  %or.cond1 = and i1 %or.cond, %cmp4, !dbg !3742
  br i1 %or.cond1, label %cond.end, label %cond.true, !dbg !3742

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2458, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3742
  %.pre = load i32, i32* @dfa_lookahead, align 4, !dbg !3743
  br label %cond.end, !dbg !3742

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi i32 [ %1, %entry ], [ %.pre, %cond.true ], !dbg !3743
  %3 = load i32, i32* @cached_first_cycle_multipass_dfa_lookahead, align 4, !dbg !3745
  %cmp5 = icmp eq i32 %3, %2, !dbg !3746
  br i1 %cmp5, label %cond.end.if.end_crit_edge, label %if.then, !dbg !3747

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  %.pre9 = load i32, i32* @issue_rate, align 4, !dbg !3748
  br label %if.end, !dbg !3747

if.then:                                          ; preds = %cond.end
  store i32 %2, i32* @cached_first_cycle_multipass_dfa_lookahead, align 4, !dbg !3749
  store i32 100, i32* @max_lookahead_tries, align 4, !dbg !3751
  call void @llvm.dbg.value(metadata i32 0, metadata !3730, metadata !DIExpression()), !dbg !3740
  %4 = load i32, i32* @issue_rate, align 4, !dbg !3752
  br label %for.cond, !dbg !3755

for.cond:                                         ; preds = %for.body, %if.then
  %5 = phi i32 [ 100, %if.then ], [ %mul, %for.body ]
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.body ], !dbg !3756
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3730, metadata !DIExpression()), !dbg !3740
  %cmp6 = icmp slt i32 %i.0, %4, !dbg !3757
  br i1 %cmp6, label %for.body, label %if.end.loopexit, !dbg !3758

for.body:                                         ; preds = %for.cond
  %mul = mul nsw i32 %5, %2, !dbg !3759
  store i32 %mul, i32* @max_lookahead_tries, align 4, !dbg !3759
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3760
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3730, metadata !DIExpression()), !dbg !3740
  br label %for.cond, !dbg !3761, !llvm.loop !3762

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !3748

if.end:                                           ; preds = %cond.end.if.end_crit_edge, %if.end.loopexit
  %6 = phi i32 [ %.pre9, %cond.end.if.end_crit_edge ], [ %4, %if.end.loopexit ], !dbg !3748
  call void @llvm.dbg.value(metadata i32 0, metadata !3736, metadata !DIExpression()), !dbg !3740
  %7 = load i32, i32* @cycle_issued_insns, align 4, !dbg !3764
  %sub = sub nsw i32 %6, %7, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3737, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 0, metadata !3730, metadata !DIExpression()), !dbg !3740
  %8 = load i8*, i8** @ready_try, align 8, !dbg !3766
  %9 = sext i32 %0 to i64, !dbg !3770
  br label %for.cond7, !dbg !3770

for.cond7:                                        ; preds = %for.inc15, %if.end
  %indvars.iv13 = phi i64 [ %indvars.iv.next14, %for.inc15 ], [ 0, %if.end ], !dbg !3771
  %max_points.0 = phi i32 [ %max_points.1, %for.inc15 ], [ 0, %if.end ], !dbg !3772
  %more_issue.0 = phi i32 [ %more_issue.1, %for.inc15 ], [ %sub, %if.end ], !dbg !3773
  call void @llvm.dbg.value(metadata i32 %more_issue.0, metadata !3737, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %max_points.0, metadata !3736, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i64 %indvars.iv13, metadata !3730, metadata !DIExpression()), !dbg !3740
  %cmp8 = icmp slt i64 %indvars.iv13, %9, !dbg !3774
  br i1 %cmp8, label %for.body9, label %for.end17, !dbg !3775

for.body9:                                        ; preds = %for.cond7
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %indvars.iv13, !dbg !3776
  %10 = load i8, i8* %arrayidx, align 1, !dbg !3776
  %tobool = icmp eq i8 %10, 0, !dbg !3776
  br i1 %tobool, label %if.then10, label %for.inc15, !dbg !3777

if.then10:                                        ; preds = %for.body9
  call void @llvm.dbg.value(metadata i32 %more_issue.0, metadata !3737, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3740
  %cmp11 = icmp sgt i32 %more_issue.0, 0, !dbg !3778
  br i1 %cmp11, label %if.then12, label %for.end17, !dbg !3781

if.then12:                                        ; preds = %if.then10
  %dec = add nsw i32 %more_issue.0, -1, !dbg !3782
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3737, metadata !DIExpression()), !dbg !3740
  %add = add nsw i32 %max_points.0, 1, !dbg !3783
  call void @llvm.dbg.value(metadata i32 %add, metadata !3736, metadata !DIExpression()), !dbg !3740
  br label %for.inc15, !dbg !3784

for.inc15:                                        ; preds = %for.body9, %if.then12
  %max_points.1 = phi i32 [ %max_points.0, %for.body9 ], [ %add, %if.then12 ], !dbg !3740
  %more_issue.1 = phi i32 [ %more_issue.0, %for.body9 ], [ %dec, %if.then12 ], !dbg !3740
  call void @llvm.dbg.value(metadata i32 %more_issue.1, metadata !3737, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %max_points.1, metadata !3736, metadata !DIExpression()), !dbg !3740
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !3785
  call void @llvm.dbg.value(metadata i32 undef, metadata !3730, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3740
  br label %for.cond7, !dbg !3786, !llvm.loop !3787

for.end17:                                        ; preds = %if.then10, %for.cond7
  %max_points.0.lcssa = phi i32 [ %max_points.0, %if.then10 ], [ %max_points.0, %for.cond7 ], !dbg !3772
  call void @llvm.dbg.value(metadata i32 %max_points.0.lcssa, metadata !3736, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %max_points.0.lcssa, metadata !3736, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %max_points.0.lcssa, metadata !3736, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %max_points.0.lcssa, metadata !3736, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %max_points.0.lcssa, metadata !3736, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %max_points.0.lcssa, metadata !3736, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 0, metadata !3733, metadata !DIExpression()), !dbg !3740
  %11 = load %struct.choice_entry*, %struct.choice_entry** @choice_stack, align 8, !dbg !3789
  call void @llvm.dbg.value(metadata %struct.choice_entry* %11, metadata !3738, metadata !DIExpression()), !dbg !3740
  %state18 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %11, i64 0, i32 3, !dbg !3790
  %12 = load i8*, i8** %state18, align 8, !dbg !3790
  %13 = load i64, i64* @dfa_state_size, align 8, !dbg !3791
  %call = tail call i8* @memcpy(i8* %12, i8* %state, i64 %13) #6, !dbg !3792
  %14 = load i32, i32* @dfa_lookahead, align 4, !dbg !3793
  %rest = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %11, i64 0, i32 1, !dbg !3794
  store i32 %14, i32* %rest, align 4, !dbg !3795
  %n19 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %11, i64 0, i32 2, !dbg !3796
  store i32 0, i32* %n19, align 8, !dbg !3797
  call void @llvm.dbg.value(metadata i32 0, metadata !3730, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 0, metadata !3731, metadata !DIExpression()), !dbg !3740
  %15 = load i8*, i8** @ready_try, align 8, !dbg !3798
  %16 = sext i32 %0 to i64, !dbg !3802
  br label %for.cond20, !dbg !3802

for.cond20:                                       ; preds = %for.body22, %for.end17
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ 0, %for.end17 ], !dbg !3803
  %all.0 = phi i32 [ %spec.select, %for.body22 ], [ 0, %for.end17 ], !dbg !3803
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3730, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %all.0, metadata !3731, metadata !DIExpression()), !dbg !3740
  %cmp21 = icmp slt i64 %indvars.iv, %16, !dbg !3804
  br i1 %cmp21, label %for.body22, label %for.cond32.preheader, !dbg !3805

for.cond32.preheader:                             ; preds = %for.cond20
  %all.0.lcssa = phi i32 [ %all.0, %for.cond20 ], !dbg !3803
  call void @llvm.dbg.value(metadata i32 %all.0.lcssa, metadata !3731, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %all.0.lcssa, metadata !3731, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %all.0.lcssa, metadata !3731, metadata !DIExpression()), !dbg !3740
  %tobool48 = icmp eq i32 %privileged_n, 0, !dbg !3806
  br label %for.cond32, !dbg !3815

for.body22:                                       ; preds = %for.cond20
  %arrayidx24 = getelementptr inbounds i8, i8* %15, i64 %indvars.iv, !dbg !3816
  %17 = load i8, i8* %arrayidx24, align 1, !dbg !3816
  %tobool25 = icmp eq i8 %17, 0, !dbg !3816
  %inc27 = zext i1 %tobool25 to i32, !dbg !3817
  %spec.select = add nuw nsw i32 %all.0, %inc27, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3731, metadata !DIExpression()), !dbg !3740
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3818
  call void @llvm.dbg.value(metadata i32 undef, metadata !3730, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3740
  br label %for.cond20, !dbg !3819, !llvm.loop !3820

for.cond32:                                       ; preds = %for.cond32.preheader, %if.end131
  %18 = phi i32 [ %.pre10, %if.end131 ], [ %14, %for.cond32.preheader ], !dbg !3822
  %best.0 = phi i32 [ %best.3, %if.end131 ], [ 0, %for.cond32.preheader ], !dbg !3740
  %i.3 = phi i32 [ %inc132, %if.end131 ], [ 0, %for.cond32.preheader ], !dbg !3740
  %n.0 = phi i32 [ %n.8, %if.end131 ], [ undef, %for.cond32.preheader ]
  %tries_num.0 = phi i32 [ %tries_num.2, %if.end131 ], [ 0, %for.cond32.preheader ], !dbg !3823
  %top.0 = phi %struct.choice_entry* [ %top.3, %if.end131 ], [ %11, %for.cond32.preheader ], !dbg !3740
  call void @llvm.dbg.value(metadata %struct.choice_entry* %top.0, metadata !3738, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %tries_num.0, metadata !3735, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !3729, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !3730, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.0, metadata !3733, metadata !DIExpression()), !dbg !3740
  %rest33 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 0, i32 1, !dbg !3822
  %cmp34 = icmp eq i32 %18, 0, !dbg !3824
  %cmp35 = icmp sge i32 %i.3, %0, !dbg !3825
  %or.cond2 = or i1 %cmp34, %cmp35, !dbg !3826
  br i1 %or.cond2, label %if.then36, label %if.else86, !dbg !3826

if.then36:                                        ; preds = %for.cond32
  %cmp37 = icmp sgt i32 %i.3, %0, !dbg !3827
  br i1 %cmp37, label %cond.true38, label %cond.end40, !dbg !3827

cond.true38:                                      ; preds = %if.then36
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2517, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3827
  br label %cond.end40, !dbg !3827

cond.end40:                                       ; preds = %if.then36, %cond.true38
  %19 = load %struct.choice_entry*, %struct.choice_entry** @choice_stack, align 8, !dbg !3828
  %cmp42 = icmp eq %struct.choice_entry* %top.0, %19, !dbg !3830
  br i1 %cmp42, label %for.end133.split.loop.exit7, label %if.end44, !dbg !3831

if.end44:                                         ; preds = %cond.end40
  %20 = ptrtoint %struct.choice_entry* %19 to i64, !dbg !3831
  %conv = sext i32 %best.0 to i64, !dbg !3832
  %sub.ptr.lhs.cast = ptrtoint %struct.choice_entry* %top.0 to i64, !dbg !3833
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %20, !dbg !3833
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !3833
  %cmp45 = icmp sgt i64 %sub.ptr.div, %conv, !dbg !3834
  br i1 %cmp45, label %if.then47, label %if.end80, !dbg !3835

if.then47:                                        ; preds = %if.end44
  br i1 %tobool48, label %if.end55, label %while.cond.preheader, !dbg !3836

while.cond.preheader:                             ; preds = %if.then47
  %21 = load i8*, i8** @ready_try, align 8, !dbg !3837
  br label %while.cond, !dbg !3839

while.cond:                                       ; preds = %while.cond.preheader, %land.end
  %n.1 = phi i32 [ %n.2, %land.end ], [ %privileged_n, %while.cond.preheader ], !dbg !3837
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !3729, metadata !DIExpression()), !dbg !3740
  %tobool50 = icmp eq i32 %n.1, 0, !dbg !3840
  br i1 %tobool50, label %land.end, label %land.rhs, !dbg !3841

land.rhs:                                         ; preds = %while.cond
  %dec51 = add nsw i32 %n.1, -1, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %dec51, metadata !3729, metadata !DIExpression()), !dbg !3740
  %idxprom52 = sext i32 %dec51 to i64, !dbg !3843
  %arrayidx53 = getelementptr inbounds i8, i8* %21, i64 %idxprom52, !dbg !3843
  %22 = load i8, i8* %arrayidx53, align 1, !dbg !3843
  %tobool54 = icmp eq i8 %22, 0, !dbg !3844
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %n.2 = phi i32 [ %dec51, %land.rhs ], [ 0, %while.cond ], !dbg !3837
  %23 = phi i1 [ %tobool54, %land.rhs ], [ false, %while.cond ], !dbg !3837
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !3729, metadata !DIExpression()), !dbg !3740
  br i1 %23, label %while.cond, label %if.end55.loopexit, !dbg !3839, !llvm.loop !3845

if.end55.loopexit:                                ; preds = %land.end
  %n.2.lcssa = phi i32 [ %n.2, %land.end ], !dbg !3837
  call void @llvm.dbg.value(metadata i32 %n.2.lcssa, metadata !3729, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %n.2.lcssa, metadata !3729, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %n.2.lcssa, metadata !3729, metadata !DIExpression()), !dbg !3740
  br label %if.end55, !dbg !3847

if.end55:                                         ; preds = %if.end55.loopexit, %if.then47
  %n.3 = phi i32 [ %n.0, %if.then47 ], [ %n.2.lcssa, %if.end55.loopexit ]
  call void @llvm.dbg.value(metadata i32 %n.3, metadata !3729, metadata !DIExpression()), !dbg !3740
  br i1 %tobool48, label %if.then63, label %lor.lhs.false58, !dbg !3849

lor.lhs.false58:                                  ; preds = %if.end55
  %24 = load i8*, i8** @ready_try, align 8, !dbg !3850
  %idxprom59 = sext i32 %n.3 to i64, !dbg !3850
  %arrayidx60 = getelementptr inbounds i8, i8* %24, i64 %idxprom59, !dbg !3850
  %25 = load i8, i8* %arrayidx60, align 1, !dbg !3850
  %tobool62 = icmp eq i8 %25, 0, !dbg !3850
  br i1 %tobool62, label %if.end80, label %if.then63, !dbg !3851

if.then63:                                        ; preds = %lor.lhs.false58, %if.end55
  %conv68 = trunc i64 %sub.ptr.div to i32, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %conv68, metadata !3733, metadata !DIExpression()), !dbg !3740
  %index70 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %19, i64 1, i32 0, !dbg !3854
  %26 = load i32, i32* %index70, align 8, !dbg !3854
  store i32 %26, i32* %index, align 4, !dbg !3855
  %n71 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 0, i32 2, !dbg !3856
  %27 = load i32, i32* %n71, align 8, !dbg !3856
  %cmp72 = icmp eq i32 %27, %max_points.0.lcssa, !dbg !3858
  %cmp75 = icmp eq i32 %all.0.lcssa, %conv68, !dbg !3859
  %or.cond3 = or i1 %cmp72, %cmp75, !dbg !3860
  br i1 %or.cond3, label %for.end133.split.loop.exit5, label %if.end80, !dbg !3860

if.end80:                                         ; preds = %lor.lhs.false58, %if.then63, %if.end44
  %best.2 = phi i32 [ %best.0, %if.end44 ], [ %best.0, %lor.lhs.false58 ], [ %conv68, %if.then63 ], !dbg !3740
  %n.4 = phi i32 [ %n.0, %if.end44 ], [ %n.3, %lor.lhs.false58 ], [ %n.3, %if.then63 ]
  call void @llvm.dbg.value(metadata i32 %n.4, metadata !3729, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.2, metadata !3733, metadata !DIExpression()), !dbg !3740
  %index81 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 0, i32 0, !dbg !3861
  %28 = load i32, i32* %index81, align 8, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %28, metadata !3730, metadata !DIExpression()), !dbg !3740
  %29 = load i8*, i8** @ready_try, align 8, !dbg !3862
  %idxprom82 = sext i32 %28 to i64, !dbg !3862
  %arrayidx83 = getelementptr inbounds i8, i8* %29, i64 %idxprom82, !dbg !3862
  store i8 0, i8* %arrayidx83, align 1, !dbg !3863
  %incdec.ptr = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 -1, !dbg !3864
  call void @llvm.dbg.value(metadata %struct.choice_entry* %incdec.ptr, metadata !3738, metadata !DIExpression()), !dbg !3740
  %state84 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 -1, i32 3, !dbg !3865
  %30 = load i8*, i8** %state84, align 8, !dbg !3865
  %31 = load i64, i64* @dfa_state_size, align 8, !dbg !3866
  %call85 = tail call i8* @memcpy(i8* %state, i8* %30, i64 %31) #6, !dbg !3867
  br label %if.end131, !dbg !3868

if.else86:                                        ; preds = %for.cond32
  %32 = load i8*, i8** @ready_try, align 8, !dbg !3869
  %idxprom87 = sext i32 %i.3 to i64, !dbg !3869
  %arrayidx88 = getelementptr inbounds i8, i8* %32, i64 %idxprom87, !dbg !3869
  %33 = load i8, i8* %arrayidx88, align 1, !dbg !3869
  %tobool89 = icmp eq i8 %33, 0, !dbg !3869
  br i1 %tobool89, label %if.then90, label %if.end131, !dbg !3871

if.then90:                                        ; preds = %if.else86
  %inc91 = add nsw i32 %tries_num.0, 1, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %inc91, metadata !3735, metadata !DIExpression()), !dbg !3740
  %34 = load i32, i32* @max_lookahead_tries, align 4, !dbg !3874
  %cmp92 = icmp slt i32 %tries_num.0, %34, !dbg !3876
  br i1 %cmp92, label %if.end95, label %for.end133.split.loop.exit, !dbg !3877

if.end95:                                         ; preds = %if.then90
  %call96 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* %ready, i32 %i.3) #7, !dbg !3878
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call96, metadata !3739, metadata !DIExpression()), !dbg !3740
  %call97 = tail call i32 @state_transition(i8* %state, %struct.rtx_def* %call96) #6, !dbg !3879
  call void @llvm.dbg.value(metadata i32 %call97, metadata !3734, metadata !DIExpression()), !dbg !3740
  %cmp98 = icmp slt i32 %call97, 0, !dbg !3880
  br i1 %cmp98, label %if.then100, label %if.end131, !dbg !3882

if.then100:                                       ; preds = %if.end95
  %call101 = tail call i32 @state_dead_lock_p(i8* %state) #6, !dbg !3883
  %tobool102 = icmp eq i32 %call101, 0, !dbg !3883
  br i1 %tobool102, label %lor.lhs.false103, label %if.then107, !dbg !3886

lor.lhs.false103:                                 ; preds = %if.then100
  %call104 = tail call fastcc zeroext i8 @insn_finishes_cycle_p(%struct.rtx_def* %call96) #7, !dbg !3887
  %tobool106 = icmp eq i8 %call104, 0, !dbg !3887
  br i1 %tobool106, label %if.else109, label %if.then107, !dbg !3888

if.then107:                                       ; preds = %lor.lhs.false103, %if.then100
  br label %if.end112, !dbg !3889

if.else109:                                       ; preds = %lor.lhs.false103
  %35 = load i32, i32* %rest33, align 4, !dbg !3890
  %dec111 = add nsw i32 %35, -1, !dbg !3890
  br label %if.end112

if.end112:                                        ; preds = %if.else109, %if.then107
  %storemerge = phi i32 [ 0, %if.then107 ], [ %dec111, %if.else109 ], !dbg !3891
  store i32 %storemerge, i32* %rest33, align 4, !dbg !3891
  %n113 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 0, i32 2, !dbg !3892
  %36 = load i32, i32* %n113, align 8, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %36, metadata !3729, metadata !DIExpression()), !dbg !3740
  %state114 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 0, i32 3, !dbg !3893
  %37 = load i8*, i8** %state114, align 8, !dbg !3893
  %38 = load i64, i64* @dfa_state_size, align 8, !dbg !3895
  %call115 = tail call i32 @memcmp(i8* %37, i8* %state, i64 %38) #6, !dbg !3896
  %cmp116 = icmp ne i32 %call115, 0, !dbg !3897
  %add119 = zext i1 %cmp116 to i32, !dbg !3898
  %spec.select4 = add nsw i32 %36, %add119, !dbg !3898
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !3729, metadata !DIExpression()), !dbg !3740
  %incdec.ptr121 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 1, !dbg !3899
  call void @llvm.dbg.value(metadata %struct.choice_entry* %incdec.ptr121, metadata !3738, metadata !DIExpression()), !dbg !3740
  %39 = load i32, i32* @dfa_lookahead, align 4, !dbg !3900
  %rest122 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 1, i32 1, !dbg !3901
  store i32 %39, i32* %rest122, align 4, !dbg !3902
  %index123 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %incdec.ptr121, i64 0, i32 0, !dbg !3903
  store i32 %i.3, i32* %index123, align 8, !dbg !3904
  %n124 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 1, i32 2, !dbg !3905
  store i32 %spec.select4, i32* %n124, align 8, !dbg !3906
  %state125 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.0, i64 1, i32 3, !dbg !3907
  %40 = load i8*, i8** %state125, align 8, !dbg !3907
  %41 = load i64, i64* @dfa_state_size, align 8, !dbg !3908
  %call126 = tail call i8* @memcpy(i8* %40, i8* %state, i64 %41) #6, !dbg !3909
  %42 = load i8*, i8** @ready_try, align 8, !dbg !3910
  %arrayidx128 = getelementptr inbounds i8, i8* %42, i64 %idxprom87, !dbg !3910
  store i8 1, i8* %arrayidx128, align 1, !dbg !3911
  call void @llvm.dbg.value(metadata i32 -1, metadata !3730, metadata !DIExpression()), !dbg !3740
  br label %if.end131, !dbg !3912

if.end131:                                        ; preds = %if.else86, %if.end112, %if.end95, %if.end80
  %best.3 = phi i32 [ %best.2, %if.end80 ], [ %best.0, %if.end95 ], [ %best.0, %if.end112 ], [ %best.0, %if.else86 ], !dbg !3740
  %i.6 = phi i32 [ %28, %if.end80 ], [ %i.3, %if.end95 ], [ -1, %if.end112 ], [ %i.3, %if.else86 ], !dbg !3740
  %n.8 = phi i32 [ %n.4, %if.end80 ], [ %n.0, %if.end95 ], [ %spec.select4, %if.end112 ], [ %n.0, %if.else86 ]
  %tries_num.2 = phi i32 [ %tries_num.0, %if.end80 ], [ %inc91, %if.end95 ], [ %inc91, %if.end112 ], [ %tries_num.0, %if.else86 ], !dbg !3823
  %top.3 = phi %struct.choice_entry* [ %incdec.ptr, %if.end80 ], [ %top.0, %if.end95 ], [ %incdec.ptr121, %if.end112 ], [ %top.0, %if.else86 ], !dbg !3740
  call void @llvm.dbg.value(metadata %struct.choice_entry* %top.3, metadata !3738, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %tries_num.2, metadata !3735, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %n.8, metadata !3729, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %i.6, metadata !3730, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.3, metadata !3733, metadata !DIExpression()), !dbg !3740
  %inc132 = add nsw i32 %i.6, 1, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %inc132, metadata !3730, metadata !DIExpression()), !dbg !3740
  %rest33.phi.trans.insert = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %top.3, i64 0, i32 1, !dbg !3914
  %.pre10 = load i32, i32* %rest33.phi.trans.insert, align 4, !dbg !3822
  br label %for.cond32, !dbg !3915, !llvm.loop !3916

for.end133.split.loop.exit:                       ; preds = %if.then90
  %best.0.lcssa = phi i32 [ %best.0, %if.then90 ], !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.0.lcssa, metadata !3733, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.0.lcssa, metadata !3733, metadata !DIExpression()), !dbg !3740
  br label %for.end133, !dbg !3918

for.end133.split.loop.exit5:                      ; preds = %if.then63
  %conv68.lcssa = phi i32 [ %conv68, %if.then63 ], !dbg !3852
  br label %for.end133, !dbg !3918

for.end133.split.loop.exit7:                      ; preds = %cond.end40
  %best.0.lcssa15 = phi i32 [ %best.0, %cond.end40 ], !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.0.lcssa15, metadata !3733, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.0.lcssa15, metadata !3733, metadata !DIExpression()), !dbg !3740
  br label %for.end133, !dbg !3918

for.end133:                                       ; preds = %for.end133.split.loop.exit7, %for.end133.split.loop.exit5, %for.end133.split.loop.exit
  %best.4 = phi i32 [ %best.0.lcssa, %for.end133.split.loop.exit ], [ %conv68.lcssa, %for.end133.split.loop.exit5 ], [ %best.0.lcssa15, %for.end133.split.loop.exit7 ], !dbg !3740
  call void @llvm.dbg.value(metadata i32 %best.4, metadata !3733, metadata !DIExpression()), !dbg !3740
  %43 = load %struct.choice_entry*, %struct.choice_entry** @choice_stack, align 8, !dbg !3918
  %state134 = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %43, i64 0, i32 3, !dbg !3919
  %44 = load i8*, i8** %state134, align 8, !dbg !3919
  %45 = load i64, i64* @dfa_state_size, align 8, !dbg !3920
  %call135 = tail call i8* @memcpy(i8* %state, i8* %44, i64 %45) #6, !dbg !3921
  ret i32 %best.4, !dbg !3922
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i32 @state_dead_lock_p(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @insn_finishes_cycle_p(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !3923 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3925, metadata !DIExpression()), !dbg !3926
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3927
  %bf.load = load i32, i32* %0, align 8, !dbg !3927
  %bf.clear = and i32 %bf.load, 268435456, !dbg !3927
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !3927
  br i1 %tobool, label %if.end, label %return, !dbg !3929

if.end:                                           ; preds = %entry
  %1 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3930
  %insn_finishes_block_p = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %1, i64 0, i32 7, !dbg !3932
  %2 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** %insn_finishes_block_p, align 8, !dbg !3932
  %tobool1 = icmp eq i8 (%struct.rtx_def*)* %2, null, !dbg !3930
  br i1 %tobool1, label %if.end5, label %land.lhs.true, !dbg !3933

land.lhs.true:                                    ; preds = %if.end
  %call = tail call zeroext i8 %2(%struct.rtx_def* %insn) #6, !dbg !3934
  %tobool3 = icmp eq i8 %call, 0, !dbg !3934
  br i1 %tobool3, label %if.end5, label %return, !dbg !3935

if.end5:                                          ; preds = %land.lhs.true, %if.end
  br label %return, !dbg !3936

return:                                           ; preds = %land.lhs.true, %entry, %if.end5
  %retval.0 = phi i8 [ 0, %if.end5 ], [ 1, %entry ], [ 1, %land.lhs.true ], !dbg !3926
  ret i8 %retval.0, !dbg !3937
}

declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @schedule_block(%struct.basic_block_def** %target_bb) local_unnamed_addr #5 !dbg !3938 {
entry:
  %sort_p = alloca i32, align 4
  %insn188 = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %target_bb, metadata !3943, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i8* null, metadata !3947, metadata !DIExpression()), !dbg !4007
  %0 = bitcast i32* %sort_p to i8*, !dbg !4008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4008
  %1 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4009
  %prev_head1 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %1, i64 0, i32 8, !dbg !4010
  %2 = load %struct.rtx_def*, %struct.rtx_def** %prev_head1, align 8, !dbg !4010
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3951, metadata !DIExpression()), !dbg !4007
  %next_tail2 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %1, i64 0, i32 9, !dbg !4011
  %3 = load %struct.rtx_def*, %struct.rtx_def** %next_tail2, align 8, !dbg !4011
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3952, metadata !DIExpression()), !dbg !4007
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4012
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !4012
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4012
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3953, metadata !DIExpression()), !dbg !4007
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4013
  %rt_rtx6 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4013
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !4013
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !3954, metadata !DIExpression()), !dbg !4007
  %cmp = icmp eq %struct.rtx_def* %5, %7, !dbg !4014
  br i1 %cmp, label %lor.lhs.false, label %cond.end, !dbg !4014

lor.lhs.false:                                    ; preds = %entry
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !4014
  %bf.load = load i32, i32* %8, align 8, !dbg !4014
  %bf.clear = and i32 %bf.load, 65535, !dbg !4014
  %cmp7 = icmp eq i32 %bf.clear, 8, !dbg !4014
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !4014

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i32 %bf.clear, 7, !dbg !4014
  br i1 %cmp11, label %cond.end, label %lor.lhs.false12, !dbg !4014

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %cmp15 = icmp eq i32 %bf.clear, 9, !dbg !4014
  br i1 %cmp15, label %cond.end, label %lor.lhs.false16, !dbg !4014

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %cmp19 = icmp eq i32 %bf.clear, 10, !dbg !4014
  br i1 %cmp19, label %cond.end, label %cond.true, !dbg !4014

cond.true:                                        ; preds = %lor.lhs.false16
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4014
  br label %cond.end, !dbg !4014

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false8, %lor.lhs.false12, %lor.lhs.false16, %cond.true
  store i1 false, i1* @haifa_recovery_bb_recently_added_p, align 1, !dbg !4015
  %9 = load i32, i32* @sched_verbose, align 4, !dbg !4016
  %tobool = icmp eq i32 %9, 0, !dbg !4016
  br i1 %tobool, label %if.end, label %if.then, !dbg !4018

if.then:                                          ; preds = %cond.end
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4019
  tail call fastcc void @dump_new_block_header(i32 0, %struct.basic_block_def* %10, %struct.rtx_def* %5, %struct.rtx_def* %7) #7, !dbg !4020
  br label %if.end, !dbg !4020

if.end:                                           ; preds = %cond.end, %if.then
  %11 = load i8*, i8** @curr_state, align 8, !dbg !4021
  tail call void @state_reset(i8* %11) #6, !dbg !4022
  %12 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !4023
  %sub = add nsw i32 %12, -1, !dbg !4024
  store i32 %sub, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !4025
  store i32 0, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4026
  store i32 0, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !4027
  %13 = load i64, i64* @dfa_state_size, align 8, !dbg !4028
  %14 = alloca i8, i64 %13, align 16, !dbg !4028
  call void @llvm.dbg.value(metadata i8* %14, metadata !3947, metadata !DIExpression()), !dbg !4007
  %15 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 4), align 8, !dbg !4029
  %tobool20 = icmp eq void (%struct._IO_FILE*, i32, i32)* %15, null, !dbg !4031
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !4032

if.then21:                                        ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4033
  %17 = load i32, i32* @sched_verbose, align 4, !dbg !4034
  tail call void %15(%struct._IO_FILE* %16, i32 %17, i32 %12) #6, !dbg !4035
  br label %if.end22, !dbg !4035

if.end22:                                         ; preds = %if.end, %if.then21
  store %struct.rtx_def* %2, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4036
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !4037
  %bf.load23 = load i32, i32* %.cast, align 8, !dbg !4037
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4037
  %cmp25 = icmp eq i32 %bf.clear24, 13, !dbg !4037
  br i1 %cmp25, label %land.lhs.true33, label %lor.lhs.false26, !dbg !4037

lor.lhs.false26:                                  ; preds = %if.end22
  %cmp29 = icmp eq i32 %bf.clear24, 7, !dbg !4037
  br i1 %cmp29, label %land.lhs.true, label %cond.true38, !dbg !4037

land.lhs.true:                                    ; preds = %lor.lhs.false26
  %bf.clear31 = and i32 %bf.load23, 67108864, !dbg !4037
  %tobool32 = icmp eq i32 %bf.clear31, 0, !dbg !4037
  br i1 %tobool32, label %land.lhs.true33, label %cond.true38, !dbg !4037

land.lhs.true33:                                  ; preds = %land.lhs.true, %if.end22
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 1, !dbg !4037
  %rt_bb = bitcast %struct.object_block** %arrayidx36 to %struct.basic_block_def**, !dbg !4037
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4037
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4037
  %cmp37 = icmp eq %struct.basic_block_def* %18, %19, !dbg !4037
  br i1 %cmp37, label %cond.end40, label %cond.true38, !dbg !4037

cond.true38:                                      ; preds = %land.lhs.true, %land.lhs.true33, %lor.lhs.false26
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2806, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4037
  br label %cond.end40, !dbg !4037

cond.end40:                                       ; preds = %land.lhs.true33, %cond.true38
  store i32 0, i32* @q_ptr, align 4, !dbg !4038
  store i32 0, i32* @q_size, align 4, !dbg !4039
  %20 = load i32, i32* @max_insn_queue_index, align 4, !dbg !4040
  %add = add nsw i32 %20, 1, !dbg !4040
  %conv = sext i32 %add to i64, !dbg !4040
  %21 = alloca %struct.rtx_def*, i64 %conv, align 16, !dbg !4040
  store %struct.rtx_def** %21, %struct.rtx_def*** @insn_queue, align 8, !dbg !4041
  %.cast10 = bitcast %struct.rtx_def** %21 to i8*, !dbg !4042
  %mul44 = shl nsw i64 %conv, 3, !dbg !4043
  %call = call i8* @memset(i8* nonnull %.cast10, i32 0, i64 %mul44) #6, !dbg !4044
  store i32 -1, i32* @clock_var, align 4, !dbg !4045
  %22 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4046
  %init_ready_list = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %22, i64 0, i32 0, !dbg !4047
  %23 = load void ()*, void ()** %init_ready_list, align 8, !dbg !4047
  call void %23() #6, !dbg !4048
  %24 = load i32, i32* @reload_completed, align 4, !dbg !4049
  %tobool45 = icmp eq i32 %24, 0, !dbg !4049
  br i1 %tobool45, label %land.lhs.true46, label %if.end84, !dbg !4050

land.lhs.true46:                                  ; preds = %cond.end40
  %25 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4051
  %26 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !4052
  %sub47 = sub nsw i32 %25, %26, !dbg !4053
  %27 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4054
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %27, i64 96, i32 1, !dbg !4054
  %28 = load i32, i32* %value, align 8, !dbg !4054
  %cmp49 = icmp sgt i32 %sub47, %28, !dbg !4055
  br i1 %cmp49, label %if.then51, label %if.end84, !dbg !4056

if.then51:                                        ; preds = %land.lhs.true46
  call void @ready_sort(%struct.ready_list* nonnull @ready) #7, !dbg !4057
  %29 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4058
  %value53 = getelementptr inbounds %struct.param_info, %struct.param_info* %29, i64 96, i32 1, !dbg !4058
  %30 = load i32, i32* %value53, align 8, !dbg !4058
  %31 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !4060
  %add54 = add nsw i32 %30, %31, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %add54, metadata !3944, metadata !DIExpression()), !dbg !4007
  br label %for.cond, !dbg !4062

for.cond:                                         ; preds = %for.inc, %if.then51
  %i.0 = phi i32 [ %add54, %if.then51 ], [ %inc, %for.inc ], !dbg !4063
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3944, metadata !DIExpression()), !dbg !4007
  %32 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4064
  %cmp55 = icmp slt i32 %i.0, %32, !dbg !4066
  br i1 %cmp55, label %for.body, label %for.end, !dbg !4067

for.body:                                         ; preds = %for.cond
  %call57 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %i.0) #7, !dbg !4068
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call57, i64 0, i32 0, !dbg !4068
  %bf.load58 = load i32, i32* %33, align 8, !dbg !4068
  %bf.clear60 = and i32 %bf.load58, 268435456, !dbg !4068
  %tobool61 = icmp eq i32 %bf.clear60, 0, !dbg !4068
  br i1 %tobool61, label %for.end, label %for.inc, !dbg !4070

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3944, metadata !DIExpression()), !dbg !4007
  br label %for.cond, !dbg !4072, !llvm.loop !4073

for.end:                                          ; preds = %for.body, %for.cond
  %i.0.lcssa = phi i32 [ %i.0, %for.body ], [ %i.0, %for.cond ], !dbg !4063
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3944, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3944, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3944, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3944, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3944, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3944, metadata !DIExpression()), !dbg !4007
  %34 = load i32, i32* @sched_verbose, align 4, !dbg !4075
  %cmp64 = icmp sgt i32 %34, 1, !dbg !4077
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !4078

if.then66:                                        ; preds = %for.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4079
  %36 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4081
  %call67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i32 %36) #6, !dbg !4082
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4083
  %call68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i32 %i.0.lcssa) #6, !dbg !4084
  br label %if.end69, !dbg !4085

if.end69:                                         ; preds = %if.then66, %for.end
  %call70 = call zeroext i8 @dbg_cnt(i32 29) #6, !dbg !4086
  %cmp72 = icmp eq i8 %call70, 0, !dbg !4088
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !4089

if.then74:                                        ; preds = %if.end69
  %38 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4090
  %call75 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %38) #6, !dbg !4091
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !3955, metadata !DIExpression()), !dbg !4092
  br label %if.end76, !dbg !4093

if.end76:                                         ; preds = %if.end69, %if.then74
  %skip_insn.0 = phi %struct.rtx_def* [ %call75, %if.then74 ], [ null, %if.end69 ], !dbg !4094
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0, metadata !3955, metadata !DIExpression()), !dbg !4092
  br label %while.cond, !dbg !4095

while.cond:                                       ; preds = %if.end83, %if.end76
  %39 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4096
  %cmp77 = icmp slt i32 %i.0.lcssa, %39, !dbg !4097
  br i1 %cmp77, label %while.body, label %if.end84.loopexit, !dbg !4095

while.body:                                       ; preds = %while.cond
  %call79 = call fastcc %struct.rtx_def* @ready_remove(%struct.ready_list* nonnull @ready, i32 %i.0.lcssa) #7, !dbg !4098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !3959, metadata !DIExpression()), !dbg !4099
  %cmp80 = icmp eq %struct.rtx_def* %call79, %skip_insn.0, !dbg !4100
  br i1 %cmp80, label %if.end83, label %if.then82, !dbg !4102

if.then82:                                        ; preds = %while.body
  call fastcc void @queue_insn(%struct.rtx_def* %call79, i32 1) #7, !dbg !4103
  br label %if.end83, !dbg !4103

if.end83:                                         ; preds = %while.body, %if.then82
  br label %while.cond, !dbg !4095, !llvm.loop !4104

if.end84.loopexit:                                ; preds = %while.cond
  br label %if.end84, !dbg !4106

if.end84:                                         ; preds = %if.end84.loopexit, %cond.end40, %land.lhs.true46
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4106
  call fastcc void @restore_bb_notes(%struct.basic_block_def* %40) #7, !dbg !4107
  store i32 -1, i32* @last_clock_var, align 4, !dbg !4108
  call void @llvm.dbg.value(metadata i32 0, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 1, metadata !3948, metadata !DIExpression()), !dbg !4007
  store i32 1, i32* %sort_p, align 4, !dbg !4109
  %41 = bitcast %struct.rtx_def** %insn188 to i8*, !dbg !4110
  %42 = bitcast %struct.rtx_def** %insn188 to i64*, !dbg !4110
  %43 = bitcast %struct.rtx_def** %insn188 to i32**, !dbg !4111
  br label %while.cond85, !dbg !4115

while.cond85.loopexit:                            ; preds = %cleanup523
  %advance.8.lcssa = phi i32 [ %advance.8, %cleanup523 ], !dbg !4116
  call void @llvm.dbg.value(metadata i32 %advance.8.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.8.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.8.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  br label %while.cond85.backedge, !dbg !4115

while.cond85:                                     ; preds = %while.cond85.backedge, %if.end84
  %advance.0 = phi i32 [ 0, %if.end84 ], [ %advance.0.be, %while.cond85.backedge ], !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.0, metadata !3949, metadata !DIExpression()), !dbg !4007
  %44 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4117
  %schedule_more_p = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %44, i64 0, i32 2, !dbg !4118
  %45 = load i32 ()*, i32 ()** %schedule_more_p, align 8, !dbg !4118
  %call86 = call i32 %45() #6, !dbg !4119
  %tobool87 = icmp eq i32 %call86, 0, !dbg !4115
  br i1 %tobool87, label %while.end529, label %do.body.preheader, !dbg !4115

do.body.preheader:                                ; preds = %while.cond85
  %.pre = load i32, i32* @clock_var, align 4, !dbg !4120
  br label %do.body, !dbg !4122

do.body:                                          ; preds = %do.body.preheader, %if.end99
  %46 = phi i32 [ %50, %if.end99 ], [ %.pre, %do.body.preheader ], !dbg !4120
  %advance.1 = phi i32 [ %sub101, %if.end99 ], [ %advance.0, %do.body.preheader ], !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.1, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %46, metadata !3950, metadata !DIExpression()), !dbg !4007
  %inc89 = add nsw i32 %46, 1, !dbg !4123
  store i32 %inc89, i32* @clock_var, align 4, !dbg !4123
  call fastcc void @advance_one_cycle() #7, !dbg !4124
  call fastcc void @queue_to_ready(%struct.ready_list* nonnull @ready) #7, !dbg !4125
  %47 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4126
  %tobool90 = icmp eq i32 %47, 0, !dbg !4126
  br i1 %tobool90, label %cond.true91, label %cond.end93, !dbg !4126

cond.true91:                                      ; preds = %do.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2893, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4126
  br label %cond.end93, !dbg !4126

cond.end93:                                       ; preds = %do.body, %cond.true91
  %48 = load i32, i32* @sched_verbose, align 4, !dbg !4127
  %cmp95 = icmp sgt i32 %48, 1, !dbg !4129
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !4130

if.then97:                                        ; preds = %cond.end93
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4131
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !4133
  call fastcc void @debug_ready_list(%struct.ready_list* nonnull @ready) #7, !dbg !4134
  br label %if.end99, !dbg !4135

if.end99:                                         ; preds = %if.then97, %cond.end93
  %50 = load i32, i32* @clock_var, align 4, !dbg !4136
  %sub10011 = sub i32 %46, %50, !dbg !4137
  %sub101 = add i32 %advance.1, %sub10011, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %sub101, metadata !3949, metadata !DIExpression()), !dbg !4007
  %cmp102 = icmp sgt i32 %sub101, 0, !dbg !4138
  br i1 %cmp102, label %do.body, label %do.end, !dbg !4139, !llvm.loop !4140

do.end:                                           ; preds = %if.end99
  %sub101.lcssa = phi i32 [ %sub101, %if.end99 ], !dbg !4137
  %51 = load i32, i32* %sort_p, align 4, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %51, metadata !3948, metadata !DIExpression()), !dbg !4007
  %tobool104 = icmp eq i32 %51, 0, !dbg !4142
  br i1 %tobool104, label %if.end111, label %if.then105, !dbg !4144

if.then105:                                       ; preds = %do.end
  call void @ready_sort(%struct.ready_list* nonnull @ready) #7, !dbg !4145
  %52 = load i32, i32* @sched_verbose, align 4, !dbg !4147
  %cmp106 = icmp sgt i32 %52, 1, !dbg !4149
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !4150

if.then108:                                       ; preds = %if.then105
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4151
  %call109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4153
  call fastcc void @debug_ready_list(%struct.ready_list* nonnull @ready) #7, !dbg !4154
  br label %if.end111, !dbg !4155

if.end111:                                        ; preds = %do.end, %if.then105, %if.then108
  %54 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4156
  %tobool112 = icmp eq i32 %54, 0, !dbg !4157
  br i1 %tobool112, label %if.end169, label %land.lhs.true113, !dbg !4158

land.lhs.true113:                                 ; preds = %if.end111
  %call114 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !4159
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call114, i64 0, i32 0, !dbg !4159
  %bf.load115 = load i32, i32* %55, align 8, !dbg !4159
  %bf.clear116 = and i32 %bf.load115, 65535, !dbg !4159
  %cmp117 = icmp eq i32 %bf.clear116, 7, !dbg !4159
  br i1 %cmp117, label %if.then119, label %if.end169, !dbg !4160

if.then119:                                       ; preds = %land.lhs.true113
  %56 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4161
  %call120 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %56) #6, !dbg !4162
  %tobool121 = icmp eq i8 %call120, 0, !dbg !4162
  br i1 %tobool121, label %if.end134, label %if.then122, !dbg !4163

if.then122:                                       ; preds = %if.then119
  %57 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4164
  %advance_target_bb = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %57, i64 0, i32 16, !dbg !4165
  %58 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** %advance_target_bb, align 8, !dbg !4165
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4166
  %call123 = call %struct.basic_block_def* %58(%struct.basic_block_def* %59, %struct.rtx_def* null) #6, !dbg !4164
  store %struct.basic_block_def* %call123, %struct.basic_block_def** %target_bb, align 8, !dbg !4167
  %60 = load i32, i32* @sched_verbose, align 4, !dbg !4168
  %tobool124 = icmp eq i32 %60, 0, !dbg !4168
  br i1 %tobool124, label %if.end132, label %if.then125, !dbg !4169

if.then125:                                       ; preds = %if.then122
  %61 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4170
  %call126 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %61) #6, !dbg !4171
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call126, metadata !3961, metadata !DIExpression()), !dbg !4172
  %tobool127 = icmp eq %struct.rtx_def* %call126, null, !dbg !4173
  br i1 %tobool127, label %cond.true128, label %cond.end130, !dbg !4173

cond.true128:                                     ; preds = %if.then125
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2930, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4173
  br label %cond.end130, !dbg !4173

cond.end130:                                      ; preds = %if.then125, %cond.true128
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4174
  call fastcc void @dump_new_block_header(i32 1, %struct.basic_block_def* %62, %struct.rtx_def* %call126, %struct.rtx_def* %7) #7, !dbg !4175
  %.pre13 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4176
  br label %if.end132, !dbg !4177

if.end132:                                        ; preds = %if.then122, %cond.end130
  %63 = phi %struct.basic_block_def* [ %call123, %if.then122 ], [ %.pre13, %cond.end130 ], !dbg !4176
  %call133 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %63) #7, !dbg !4178
  store %struct.rtx_def* %call133, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4179
  br label %if.end134, !dbg !4180

if.end134:                                        ; preds = %if.then119, %if.end132
  br label %while.cond135, !dbg !4181

while.cond135:                                    ; preds = %if.end164, %if.end134
  %advance.2 = phi i32 [ %sub101.lcssa, %if.end134 ], [ %call154, %if.end164 ], !dbg !4116
  call void @llvm.dbg.value(metadata i32 %advance.2, metadata !3949, metadata !DIExpression()), !dbg !4007
  %64 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4182
  %tobool136 = icmp eq i32 %64, 0, !dbg !4183
  br i1 %tobool136, label %while.end165.loopexit, label %land.rhs, !dbg !4184

land.rhs:                                         ; preds = %while.cond135
  %call137 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !4185
  %65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call137, i64 0, i32 0, !dbg !4185
  %bf.load138 = load i32, i32* %65, align 8, !dbg !4185
  %bf.clear139 = and i32 %bf.load138, 65535, !dbg !4185
  %cmp140 = icmp eq i32 %bf.clear139, 7, !dbg !4185
  br i1 %cmp140, label %while.body142, label %land.rhs.while.end165_crit_edge, !dbg !4181

land.rhs.while.end165_crit_edge:                  ; preds = %land.rhs
  %advance.2.lcssa26 = phi i32 [ %advance.2, %land.rhs ], !dbg !4116
  call void @llvm.dbg.value(metadata i32 %advance.2.lcssa26, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.2.lcssa26, metadata !3949, metadata !DIExpression()), !dbg !4007
  %.pre14 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4186
  br label %while.end165, !dbg !4181

while.body142:                                    ; preds = %land.rhs
  %call144 = call fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* nonnull @ready) #7, !dbg !4188
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call144, metadata !3969, metadata !DIExpression()), !dbg !4189
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call144, i64 0, i32 0, !dbg !4190
  %bf.load145 = load i32, i32* %66, align 8, !dbg !4190
  %bf.clear146 = and i32 %bf.load145, 65535, !dbg !4190
  %cmp147 = icmp eq i32 %bf.clear146, 7, !dbg !4190
  br i1 %cmp147, label %cond.end151, label %cond.true149, !dbg !4190

cond.true149:                                     ; preds = %while.body142
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2940, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4190
  br label %cond.end151, !dbg !4190

cond.end151:                                      ; preds = %while.body142, %cond.true149
  %67 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4191
  %begin_schedule_ready = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %67, i64 0, i32 15, !dbg !4192
  %68 = load void (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.rtx_def*)** %begin_schedule_ready, align 8, !dbg !4192
  %69 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4193
  call void %68(%struct.rtx_def* %call144, %struct.rtx_def* %69) #6, !dbg !4194
  %70 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4195
  %71 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4196
  %next_tail153 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %71, i64 0, i32 9, !dbg !4197
  %72 = load %struct.rtx_def*, %struct.rtx_def** %next_tail153, align 8, !dbg !4197
  call fastcc void @move_insn(%struct.rtx_def* %call144, %struct.rtx_def* %70, %struct.rtx_def* %72) #7, !dbg !4198
  store %struct.rtx_def* %call144, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4199
  %call154 = call fastcc i32 @schedule_insn(%struct.rtx_def* %call144) #7, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %call154, metadata !3949, metadata !DIExpression()), !dbg !4007
  %cmp155 = icmp eq i32 %call154, 0, !dbg !4201
  br i1 %cmp155, label %cond.end159, label %cond.true157, !dbg !4201

cond.true157:                                     ; preds = %cond.end151
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2947, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4201
  br label %cond.end159, !dbg !4201

cond.end159:                                      ; preds = %cond.end151, %cond.true157
  %73 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4202
  %cmp161 = icmp sgt i32 %73, 0, !dbg !4204
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !4205

if.then163:                                       ; preds = %cond.end159
  call void @ready_sort(%struct.ready_list* nonnull @ready) #7, !dbg !4206
  br label %if.end164, !dbg !4206

if.end164:                                        ; preds = %if.then163, %cond.end159
  br label %while.cond135, !dbg !4181, !llvm.loop !4207

while.end165.loopexit:                            ; preds = %while.cond135
  %advance.2.lcssa = phi i32 [ %advance.2, %while.cond135 ], !dbg !4116
  call void @llvm.dbg.value(metadata i32 %advance.2.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.2.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  br label %while.end165, !dbg !4209

while.end165:                                     ; preds = %while.end165.loopexit, %land.rhs.while.end165_crit_edge
  %advance.227 = phi i32 [ %advance.2.lcssa26, %land.rhs.while.end165_crit_edge ], [ %advance.2.lcssa, %while.end165.loopexit ]
  %74 = phi i32 [ %.pre14, %land.rhs.while.end165_crit_edge ], [ 0, %while.end165.loopexit ], !dbg !4186
  call void @llvm.dbg.value(metadata i32 %advance.227, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.227, metadata !3949, metadata !DIExpression()), !dbg !4007
  %tobool166 = icmp eq i32 %74, 0, !dbg !4209
  br i1 %tobool166, label %while.cond85.backedge, label %if.end169, !dbg !4210

while.cond85.backedge:                            ; preds = %while.end165, %while.cond85.loopexit
  %advance.0.be = phi i32 [ %advance.227, %while.end165 ], [ %advance.8.lcssa, %while.cond85.loopexit ]
  br label %while.cond85, !dbg !4007, !llvm.loop !4211

if.end169:                                        ; preds = %while.end165, %if.end111, %land.lhs.true113
  %advance.3 = phi i32 [ %sub101.lcssa, %land.lhs.true113 ], [ %sub101.lcssa, %if.end111 ], [ %advance.227, %while.end165 ], !dbg !4137
  call void @llvm.dbg.value(metadata i32 %advance.3, metadata !3949, metadata !DIExpression()), !dbg !4007
  %75 = load i32, i32* %sort_p, align 4, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %75, metadata !3948, metadata !DIExpression()), !dbg !4007
  %tobool170 = icmp ne i32 %75, 0, !dbg !4213
  %76 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 8), align 8, !dbg !4215
  %tobool172 = icmp ne i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %76, null, !dbg !4216
  %or.cond = and i1 %tobool170, %tobool172, !dbg !4217
  br i1 %or.cond, label %land.lhs.true173, label %if.else185, !dbg !4217

land.lhs.true173:                                 ; preds = %if.end169
  %77 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4218
  %cmp174 = icmp eq i32 %77, 0, !dbg !4219
  br i1 %cmp174, label %if.then182, label %lor.lhs.false176, !dbg !4220

lor.lhs.false176:                                 ; preds = %land.lhs.true173
  %call177 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !4221
  %78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call177, i64 0, i32 0, !dbg !4221
  %bf.load178 = load i32, i32* %78, align 8, !dbg !4221
  %bf.clear180 = and i32 %bf.load178, 268435456, !dbg !4221
  %tobool181 = icmp eq i32 %bf.clear180, 0, !dbg !4221
  br i1 %tobool181, label %lor.lhs.false176.if.then182_crit_edge, label %if.else185, !dbg !4222

lor.lhs.false176.if.then182_crit_edge:            ; preds = %lor.lhs.false176
  %.pre15 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 8), align 8, !dbg !4223
  br label %if.then182, !dbg !4222

if.then182:                                       ; preds = %lor.lhs.false176.if.then182_crit_edge, %land.lhs.true173
  %79 = phi i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* [ %.pre15, %lor.lhs.false176.if.then182_crit_edge ], [ %76, %land.lhs.true173 ], !dbg !4223
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4224
  %81 = load i32, i32* @sched_verbose, align 4, !dbg !4225
  %call183 = call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #7, !dbg !4226
  %82 = load i32, i32* @clock_var, align 4, !dbg !4227
  %call184 = call i32 %79(%struct._IO_FILE* %80, i32 %81, %struct.rtx_def** %call183, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), i32 %82) #6, !dbg !4228
  call void @llvm.dbg.value(metadata i32 %call184, metadata !3946, metadata !DIExpression()), !dbg !4007
  br label %if.end186, !dbg !4229

if.else185:                                       ; preds = %lor.lhs.false176, %if.end169
  %83 = load i32, i32* @issue_rate, align 4, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %83, metadata !3946, metadata !DIExpression()), !dbg !4007
  br label %if.end186

if.end186:                                        ; preds = %if.else185, %if.then182
  %can_issue_more.0 = phi i32 [ %call184, %if.then182 ], [ %83, %if.else185 ], !dbg !4231
  call void @llvm.dbg.value(metadata i32 %can_issue_more.0, metadata !3946, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 1, metadata !3945, metadata !DIExpression()), !dbg !4007
  store i32 0, i32* @cycle_issued_insns, align 4, !dbg !4232
  br label %for.cond187, !dbg !4233

for.cond187:                                      ; preds = %cleanup523, %if.end186
  %advance.4 = phi i32 [ %advance.3, %if.end186 ], [ %advance.8, %cleanup523 ], !dbg !4137
  %can_issue_more.1 = phi i32 [ %can_issue_more.0, %if.end186 ], [ %can_issue_more.5, %cleanup523 ], !dbg !4234
  %first_cycle_insn_p.0 = phi i32 [ 1, %if.end186 ], [ %first_cycle_insn_p.1, %cleanup523 ], !dbg !4235
  call void @llvm.dbg.value(metadata i32 %first_cycle_insn_p.0, metadata !3945, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %can_issue_more.1, metadata !3946, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.4, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8, !dbg !4236
  call void @llvm.dbg.value(metadata i8 0, metadata !3976, metadata !DIExpression()), !dbg !4110
  %84 = load i32, i32* @sched_verbose, align 4, !dbg !4237
  %cmp189 = icmp sgt i32 %84, 1, !dbg !4239
  br i1 %cmp189, label %if.then191, label %if.end196, !dbg !4240

if.then191:                                       ; preds = %for.cond187
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4241
  %86 = load i32, i32* @clock_var, align 4, !dbg !4243
  %call192 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 %86) #6, !dbg !4244
  call fastcc void @debug_ready_list(%struct.ready_list* nonnull @ready) #7, !dbg !4245
  %87 = load i8, i8* @sched_pressure_p, align 1, !dbg !4246
  %tobool193 = icmp eq i8 %87, 0, !dbg !4246
  br i1 %tobool193, label %if.end196, label %if.then194, !dbg !4248

if.then194:                                       ; preds = %if.then191
  call fastcc void @print_curr_reg_pressure() #7, !dbg !4249
  br label %if.end196, !dbg !4249

if.end196:                                        ; preds = %if.then191, %if.then194, %for.cond187
  %88 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4250
  %cmp197 = icmp eq i32 %88, 0, !dbg !4252
  %tobool200 = icmp ne i32 %can_issue_more.1, 0, !dbg !4253
  %or.cond2 = and i1 %cmp197, %tobool200, !dbg !4254
  %89 = load i32, i32* @reload_completed, align 4, !dbg !4255
  %tobool202 = icmp ne i32 %89, 0, !dbg !4255
  %or.cond3 = and i1 %or.cond2, %tobool202, !dbg !4254
  br i1 %or.cond3, label %if.then203, label %if.end214, !dbg !4254

if.then203:                                       ; preds = %if.end196
  %90 = load i32, i32* @sched_verbose, align 4, !dbg !4256
  %cmp204 = icmp sgt i32 %90, 5, !dbg !4259
  br i1 %cmp204, label %if.then206, label %if.end208, !dbg !4260

if.then206:                                       ; preds = %if.then203
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4261
  %call207 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4262
  br label %if.end208, !dbg !4262

if.end208:                                        ; preds = %if.then206, %if.then203
  %92 = load i8*, i8** @curr_state, align 8, !dbg !4263
  %93 = load i64, i64* @dfa_state_size, align 8, !dbg !4264
  %call209 = call i8* @memcpy(i8* nonnull %14, i8* %92, i64 %93) #6, !dbg !4265
  %call210 = call fastcc i32 @early_queue_to_ready(i8* nonnull %14, %struct.ready_list* nonnull @ready) #7, !dbg !4266
  %tobool211 = icmp eq i32 %call210, 0, !dbg !4266
  br i1 %tobool211, label %if.end214, label %if.then212, !dbg !4268

if.then212:                                       ; preds = %if.end208
  call void @ready_sort(%struct.ready_list* nonnull @ready) #7, !dbg !4269
  br label %if.end214, !dbg !4269

if.end214:                                        ; preds = %if.end208, %if.then212, %if.end196
  %94 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4270
  %cmp215 = icmp ne i32 %94, 0, !dbg !4272
  %or.cond4 = and i1 %cmp215, %tobool200, !dbg !4273
  br i1 %or.cond4, label %lor.lhs.false219, label %cleanup523, !dbg !4273

lor.lhs.false219:                                 ; preds = %if.end214
  %95 = load i8*, i8** @curr_state, align 8, !dbg !4274
  %call220 = call i32 @state_dead_lock_p(i8* %95) #6, !dbg !4275
  %tobool221 = icmp eq i32 %call220, 0, !dbg !4275
  br i1 %tobool221, label %lor.lhs.false222, label %cleanup523, !dbg !4276

lor.lhs.false222:                                 ; preds = %lor.lhs.false219
  %96 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4277
  %schedule_more_p223 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %96, i64 0, i32 2, !dbg !4278
  %97 = load i32 ()*, i32 ()** %schedule_more_p223, align 8, !dbg !4278
  %call224 = call i32 %97() #6, !dbg !4279
  %tobool225 = icmp eq i32 %call224, 0, !dbg !4279
  br i1 %tobool225, label %cleanup523, label %if.end227, !dbg !4280

if.end227:                                        ; preds = %lor.lhs.false222
  %98 = load i32, i32* %sort_p, align 4, !dbg !4281
  call void @llvm.dbg.value(metadata i32 %98, metadata !3948, metadata !DIExpression()), !dbg !4007
  %tobool228 = icmp eq i32 %98, 0, !dbg !4281
  br i1 %tobool228, label %if.else245, label %if.then229, !dbg !4282

if.then229:                                       ; preds = %if.end227
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !3971, metadata !DIExpression()), !dbg !4110
  store %struct.rtx_def* null, %struct.rtx_def** %insn188, align 8, !dbg !4283
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn188, metadata !3971, metadata !DIExpression(DW_OP_deref)), !dbg !4110
  %call230 = call fastcc i32 @choose_ready(%struct.ready_list* nonnull @ready, %struct.rtx_def** nonnull %insn188) #7, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %call230, metadata !3977, metadata !DIExpression()), !dbg !4285
  %cmp231 = icmp slt i32 %call230, 0, !dbg !4286
  br i1 %cmp231, label %cleanup, label %if.end234, !dbg !4288

if.end234:                                        ; preds = %if.then229
  %cmp235 = icmp eq i32 %call230, 0, !dbg !4289
  br i1 %cmp235, label %if.end238, label %cleanup, !dbg !4291, !llvm.loop !4292

if.end238:                                        ; preds = %if.end234
  %99 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4295
  call void @llvm.dbg.value(metadata %struct.rtx_def* %99, metadata !3971, metadata !DIExpression()), !dbg !4110
  %cmp239 = icmp eq %struct.rtx_def* %99, null, !dbg !4295
  br i1 %cmp239, label %cond.true241, label %cleanup, !dbg !4295

cond.true241:                                     ; preds = %if.end238
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3020, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4295
  br label %cleanup, !dbg !4295

cleanup:                                          ; preds = %if.end238, %if.end234, %cond.true241, %if.then229
  %cleanup.dest.slot.0 = phi i32 [ 13, %if.then229 ], [ 14, %if.end234 ], [ 0, %if.end238 ], [ 0, %cond.true241 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end247, label %cleanup523

if.else245:                                       ; preds = %if.end227
  %call246 = call fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* nonnull @ready) #7, !dbg !4296
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call246, metadata !3971, metadata !DIExpression()), !dbg !4110
  store %struct.rtx_def* %call246, %struct.rtx_def** %insn188, align 8, !dbg !4297
  br label %if.end247

if.end247:                                        ; preds = %cleanup, %if.else245
  %100 = load i8, i8* @sched_pressure_p, align 1, !dbg !4298
  %tobool249 = icmp eq i8 %100, 0, !dbg !4298
  br i1 %tobool249, label %if.end263, label %land.lhs.true250, !dbg !4300

land.lhs.true250:                                 ; preds = %if.end247
  %101 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4301
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %101, i64 0, i32 0, !dbg !4301
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %102, metadata !3971, metadata !DIExpression()), !dbg !4110
  %arrayidx258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4301
  %rt_int = bitcast %union.rtunion_def* %arrayidx258 to i32*, !dbg !4301
  %103 = load i32, i32* %rt_int, align 8, !dbg !4301
  %call259 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %103) #7, !dbg !4301
  %tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call259, i64 0, i32 2, !dbg !4301
  %104 = load i32, i32* %tick, align 8, !dbg !4301
  %105 = load i32, i32* @clock_var, align 4, !dbg !4302
  %cmp260 = icmp sgt i32 %104, %105, !dbg !4303
  br i1 %cmp260, label %if.then262, label %if.end263, !dbg !4304

if.then262:                                       ; preds = %land.lhs.true250
  %106 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4305
  call void @llvm.dbg.value(metadata %struct.rtx_def* %106, metadata !3971, metadata !DIExpression()), !dbg !4110
  call fastcc void @ready_add(%struct.ready_list* nonnull @ready, %struct.rtx_def* %106, i8 zeroext 1) #7, !dbg !4307
  call void @llvm.dbg.value(metadata i32 1, metadata !3949, metadata !DIExpression()), !dbg !4007
  br label %cleanup523, !dbg !4308

if.end263:                                        ; preds = %if.end247, %land.lhs.true250
  %107 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 19), align 8, !dbg !4309
  %tobool264 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)* %107, null, !dbg !4311
  br i1 %tobool264, label %if.end269, label %land.lhs.true265, !dbg !4312

land.lhs.true265:                                 ; preds = %if.end263
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4313
  %109 = load i32, i32* @sched_verbose, align 4, !dbg !4314
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4315
  call void @llvm.dbg.value(metadata %struct.rtx_def* %110, metadata !3971, metadata !DIExpression()), !dbg !4110
  %111 = load i32, i32* @last_clock_var, align 4, !dbg !4316
  %112 = load i32, i32* @clock_var, align 4, !dbg !4317
  call void @llvm.dbg.value(metadata i32* %sort_p, metadata !3948, metadata !DIExpression(DW_OP_deref)), !dbg !4007
  %call266 = call i32 %107(%struct._IO_FILE* %108, i32 %109, %struct.rtx_def* %110, i32 %111, i32 %112, i32* nonnull %sort_p) #6, !dbg !4318
  %tobool267 = icmp eq i32 %call266, 0, !dbg !4318
  br i1 %tobool267, label %if.end269, label %if.then268, !dbg !4319

if.then268:                                       ; preds = %land.lhs.true265
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4320
  call void @llvm.dbg.value(metadata %struct.rtx_def* %113, metadata !3971, metadata !DIExpression()), !dbg !4110
  call fastcc void @ready_add(%struct.ready_list* nonnull @ready, %struct.rtx_def* %113, i8 zeroext 1) #7, !dbg !4322
  br label %cleanup523, !dbg !4323

if.end269:                                        ; preds = %land.lhs.true265, %if.end263
  call void @llvm.dbg.value(metadata i32 1, metadata !3948, metadata !DIExpression()), !dbg !4007
  store i32 1, i32* %sort_p, align 4, !dbg !4324
  %114 = load i8*, i8** @curr_state, align 8, !dbg !4325
  %115 = load i64, i64* @dfa_state_size, align 8, !dbg !4326
  %call270 = call i8* @memcpy(i8* nonnull %14, i8* %114, i64 %115) #6, !dbg !4327
  %116 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %116, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call271 = call fastcc i32 @recog_memoized(%struct.rtx_def* %116) #7, !dbg !4330
  %cmp272 = icmp slt i32 %call271, 0, !dbg !4331
  br i1 %cmp272, label %if.then274, label %if.else298, !dbg !4332

if.then274:                                       ; preds = %if.end269
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %117, metadata !3971, metadata !DIExpression()), !dbg !4110
  %u275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i64 0, i32 1, !dbg !4333
  %118 = getelementptr inbounds %union.u, %union.u* %u275, i64 1, i32 0, i32 0, i64 0, !dbg !4333
  %119 = bitcast %union.rtunion_def* %118 to i32**, !dbg !4333
  %120 = load i32*, i32** %119, align 8, !dbg !4333
  %bf.load279 = load i32, i32* %120, align 8, !dbg !4333
  %bf.clear280 = and i32 %bf.load279, 65535, !dbg !4333
  %cmp281 = icmp eq i32 %bf.clear280, 16, !dbg !4335
  br i1 %cmp281, label %lor.end, label %lor.rhs, !dbg !4336

lor.rhs:                                          ; preds = %if.then274
  %121 = bitcast i32* %120 to %struct.rtx_def*, !dbg !4336
  call void @llvm.dbg.value(metadata %struct.rtx_def* %117, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call287 = call i32 @asm_noperands(%struct.rtx_def* %121) #6, !dbg !4337
  %cmp288 = icmp sgt i32 %call287, -1, !dbg !4338
  br label %lor.end, !dbg !4336

lor.end:                                          ; preds = %lor.rhs, %if.then274
  %122 = phi i1 [ true, %if.then274 ], [ %cmp288, %lor.rhs ]
  %lor.ext = zext i1 %122 to i32, !dbg !4336
  call void @llvm.dbg.value(metadata i1 %122, metadata !3976, metadata !DIExpression()), !dbg !4110
  %tobool291 = icmp eq i32 %first_cycle_insn_p.0, 0, !dbg !4339
  %or.cond5 = and i1 %tobool291, %122, !dbg !4341
  %cost.0 = zext i1 %or.cond5 to i32, !dbg !4341
  br label %if.end313, !dbg !4341

if.else298:                                       ; preds = %if.end269
  %123 = load i8, i8* @sched_pressure_p, align 1, !dbg !4342
  %tobool299 = icmp eq i8 %123, 0, !dbg !4342
  br i1 %tobool299, label %if.else301, label %if.end313, !dbg !4344

if.else301:                                       ; preds = %if.else298
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4345
  call void @llvm.dbg.value(metadata %struct.rtx_def* %124, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call302 = call i32 @state_transition(i8* nonnull %14, %struct.rtx_def* %124) #6, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %call302, metadata !3975, metadata !DIExpression()), !dbg !4110
  %cmp303 = icmp slt i32 %call302, 0, !dbg !4348
  %cmp307 = icmp eq i32 %call302, 0, !dbg !4350
  %spec.select = select i1 %cmp307, i32 1, i32 %call302, !dbg !4350
  %cost.2 = select i1 %cmp303, i32 0, i32 %spec.select, !dbg !4350
  br label %if.end313, !dbg !4350

if.end313:                                        ; preds = %if.else298, %if.else301, %lor.end
  %cost.4 = phi i32 [ %cost.0, %lor.end ], [ 0, %if.else298 ], [ %cost.2, %if.else301 ], !dbg !4351
  %asm_p.0 = phi i32 [ %lor.ext, %lor.end ], [ 0, %if.else298 ], [ 0, %if.else301 ], !dbg !4110
  call void @llvm.dbg.value(metadata i32 %cost.4, metadata !3975, metadata !DIExpression()), !dbg !4110
  %cmp314 = icmp sgt i32 %cost.4, 0, !dbg !4352
  br i1 %cmp314, label %if.then316, label %if.end323, !dbg !4353

if.then316:                                       ; preds = %if.end313
  %125 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4354
  call void @llvm.dbg.value(metadata %struct.rtx_def* %125, metadata !3971, metadata !DIExpression()), !dbg !4110
  call fastcc void @queue_insn(%struct.rtx_def* %125, i32 %cost.4) #7, !dbg !4355
  %126 = load i32*, i32** %43, align 8, !dbg !4356
  %bf.load317 = load i32, i32* %126, align 8, !dbg !4356
  %bf.clear319 = and i32 %bf.load317, 268435456, !dbg !4356
  %tobool320 = icmp ne i32 %bf.clear319, 0, !dbg !4356
  %. = select i1 %tobool320, i32 13, i32 14, !dbg !4357
  %cost.4.advance.4 = select i1 %tobool320, i32 %cost.4, i32 %advance.4, !dbg !4357
  br label %cleanup523, !dbg !4357

if.end323:                                        ; preds = %if.end313
  %127 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4358
  %can_schedule_ready_p = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %127, i64 0, i32 1, !dbg !4360
  %128 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** %can_schedule_ready_p, align 8, !dbg !4360
  %tobool324 = icmp eq i32 (%struct.rtx_def*)* %128, null, !dbg !4358
  br i1 %tobool324, label %if.end353, label %land.lhs.true325, !dbg !4361

land.lhs.true325:                                 ; preds = %if.end323
  %129 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %129, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call327 = call i32 %128(%struct.rtx_def* %129) #6, !dbg !4363
  %tobool328 = icmp eq i32 %call327, 0, !dbg !4363
  br i1 %tobool328, label %if.then329, label %if.end353, !dbg !4364

if.then329:                                       ; preds = %land.lhs.true325
  %130 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4365
  %base332 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %130, i64 0, i32 0, !dbg !4365
  %131 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4365
  call void @llvm.dbg.value(metadata %struct.rtx_def* %131, metadata !3971, metadata !DIExpression()), !dbg !4110
  %arrayidx338 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4365
  %rt_int339 = bitcast %union.rtunion_def* %arrayidx338 to i32*, !dbg !4365
  %132 = load i32, i32* %rt_int339, align 8, !dbg !4365
  %call340 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base332, i32 %132) #7, !dbg !4365
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call340, i64 0, i32 8, !dbg !4365
  %133 = load i32, i32* %todo_spec, align 8, !dbg !4365
  %and = and i32 %133, -150994944, !dbg !4367
  %or = or i32 %and, 134217728, !dbg !4368
  %134 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4369
  %base343 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %134, i64 0, i32 0, !dbg !4369
  %135 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4369
  call void @llvm.dbg.value(metadata %struct.rtx_def* %135, metadata !3971, metadata !DIExpression()), !dbg !4110
  %arrayidx349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4369
  %rt_int350 = bitcast %union.rtunion_def* %arrayidx349 to i32*, !dbg !4369
  %136 = load i32, i32* %rt_int350, align 8, !dbg !4369
  %call351 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base343, i32 %136) #7, !dbg !4369
  %todo_spec352 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call351, i64 0, i32 8, !dbg !4369
  store i32 %or, i32* %todo_spec352, align 8, !dbg !4370
  br label %cleanup523, !dbg !4371, !llvm.loop !4292

if.end353:                                        ; preds = %land.lhs.true325, %if.end323
  %137 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4372
  %base356 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %137, i64 0, i32 0, !dbg !4372
  %138 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4372
  call void @llvm.dbg.value(metadata %struct.rtx_def* %138, metadata !3971, metadata !DIExpression()), !dbg !4110
  %arrayidx362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4372
  %rt_int363 = bitcast %union.rtunion_def* %arrayidx362 to i32*, !dbg !4372
  %139 = load i32, i32* %rt_int363, align 8, !dbg !4372
  %call364 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base356, i32 %139) #7, !dbg !4372
  %todo_spec365 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call364, i64 0, i32 8, !dbg !4372
  %140 = load i32, i32* %todo_spec365, align 8, !dbg !4372
  %and366 = and i32 %140, 16777215, !dbg !4374
  %tobool367 = icmp eq i32 %and366, 0, !dbg !4374
  br i1 %tobool367, label %if.end369, label %if.then368, !dbg !4375

if.then368:                                       ; preds = %if.end353
  %141 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4376
  call void @llvm.dbg.value(metadata %struct.rtx_def* %141, metadata !3971, metadata !DIExpression()), !dbg !4110
  call fastcc void @generate_recovery_code(%struct.rtx_def* %141) #7, !dbg !4377
  br label %if.end369, !dbg !4377

if.end369:                                        ; preds = %if.end353, %if.then368
  %142 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4378
  %call370 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %142) #6, !dbg !4379
  %tobool372 = icmp eq i8 %call370, 0, !dbg !4379
  br i1 %tobool372, label %lor.lhs.false373, label %if.then377, !dbg !4380

lor.lhs.false373:                                 ; preds = %if.end369
  %143 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4381
  %advance_target_bb374 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %143, i64 0, i32 16, !dbg !4382
  %144 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** %advance_target_bb374, align 8, !dbg !4382
  %145 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4383
  %146 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %146, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call375 = call %struct.basic_block_def* %144(%struct.basic_block_def* %145, %struct.rtx_def* %146) #6, !dbg !4381
  %tobool376 = icmp eq %struct.basic_block_def* %call375, null, !dbg !4381
  br i1 %tobool376, label %lor.lhs.false373.if.end391_crit_edge, label %if.then377, !dbg !4385

lor.lhs.false373.if.end391_crit_edge:             ; preds = %lor.lhs.false373
  %.pre17 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4386
  br label %if.end391, !dbg !4385

if.then377:                                       ; preds = %lor.lhs.false373, %if.end369
  %147 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4387
  %advance_target_bb378 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %147, i64 0, i32 16, !dbg !4388
  %148 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** %advance_target_bb378, align 8, !dbg !4388
  %149 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4389
  %call379 = call %struct.basic_block_def* %148(%struct.basic_block_def* %149, %struct.rtx_def* null) #6, !dbg !4387
  store %struct.basic_block_def* %call379, %struct.basic_block_def** %target_bb, align 8, !dbg !4390
  %150 = load i32, i32* @sched_verbose, align 4, !dbg !4391
  %tobool380 = icmp eq i32 %150, 0, !dbg !4391
  br i1 %tobool380, label %if.end389, label %if.then381, !dbg !4392

if.then381:                                       ; preds = %if.then377
  %151 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4393
  %call383 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %151) #6, !dbg !4394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call383, metadata !3980, metadata !DIExpression()), !dbg !4395
  %tobool384 = icmp eq %struct.rtx_def* %call383, null, !dbg !4396
  br i1 %tobool384, label %cond.true385, label %cond.end387, !dbg !4396

cond.true385:                                     ; preds = %if.then381
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4396
  br label %cond.end387, !dbg !4396

cond.end387:                                      ; preds = %if.then381, %cond.true385
  %152 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4397
  call fastcc void @dump_new_block_header(i32 1, %struct.basic_block_def* %152, %struct.rtx_def* %call383, %struct.rtx_def* %7) #7, !dbg !4398
  %.pre16 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4399
  br label %if.end389, !dbg !4400

if.end389:                                        ; preds = %if.then377, %cond.end387
  %153 = phi %struct.basic_block_def* [ %call379, %if.then377 ], [ %.pre16, %cond.end387 ], !dbg !4399
  %call390 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %153) #7, !dbg !4401
  store %struct.rtx_def* %call390, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4402
  br label %if.end391, !dbg !4403

if.end391:                                        ; preds = %lor.lhs.false373.if.end391_crit_edge, %if.end389
  %154 = phi %struct.rtx_def* [ %.pre17, %lor.lhs.false373.if.end391_crit_edge ], [ %call390, %if.end389 ], !dbg !4386
  %155 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4404
  %begin_schedule_ready392 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %155, i64 0, i32 15, !dbg !4405
  %156 = load void (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.rtx_def*)** %begin_schedule_ready392, align 8, !dbg !4405
  %157 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4406
  call void @llvm.dbg.value(metadata %struct.rtx_def* %157, metadata !3971, metadata !DIExpression()), !dbg !4110
  call void %156(%struct.rtx_def* %157, %struct.rtx_def* %154) #6, !dbg !4407
  %158 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %158, metadata !3971, metadata !DIExpression()), !dbg !4110
  %159 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4409
  %160 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4410
  %next_tail393 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %160, i64 0, i32 9, !dbg !4411
  %161 = load %struct.rtx_def*, %struct.rtx_def** %next_tail393, align 8, !dbg !4411
  call fastcc void @move_insn(%struct.rtx_def* %158, %struct.rtx_def* %159, %struct.rtx_def* %161) #7, !dbg !4412
  %162 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %162, metadata !3971, metadata !DIExpression()), !dbg !4110
  call void @reemit_notes(%struct.rtx_def* %162) #7, !dbg !4414
  %163 = load i64, i64* %42, align 8, !dbg !4415
  store i64 %163, i64* bitcast (%struct.rtx_def** @last_scheduled_insn to i64*), align 8, !dbg !4416
  %164 = load i8*, i8** @curr_state, align 8, !dbg !4417
  %165 = load i64, i64* @dfa_state_size, align 8, !dbg !4419
  %call394 = call i32 @memcmp(i8* %164, i8* nonnull %14, i64 %165) #6, !dbg !4420
  %cmp395 = icmp eq i32 %call394, 0, !dbg !4421
  br i1 %cmp395, label %if.end400, label %if.then397, !dbg !4422

if.then397:                                       ; preds = %if.end391
  %166 = load i32, i32* @cycle_issued_insns, align 4, !dbg !4423
  %inc398 = add nsw i32 %166, 1, !dbg !4423
  store i32 %inc398, i32* @cycle_issued_insns, align 4, !dbg !4423
  %167 = load i8*, i8** @curr_state, align 8, !dbg !4425
  %168 = load i64, i64* @dfa_state_size, align 8, !dbg !4426
  %call399 = call i8* @memcpy(i8* %167, i8* nonnull %14, i64 %168) #6, !dbg !4427
  br label %if.end400, !dbg !4428

if.end400:                                        ; preds = %if.end391, %if.then397
  %169 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 3), align 8, !dbg !4429
  %tobool401 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* %169, null, !dbg !4431
  br i1 %tobool401, label %if.else404, label %if.then402, !dbg !4432

if.then402:                                       ; preds = %if.end400
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4433
  %171 = load i32, i32* @sched_verbose, align 4, !dbg !4434
  %172 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %172, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call403 = call i32 %169(%struct._IO_FILE* %170, i32 %171, %struct.rtx_def* %172, i32 %can_issue_more.1) #6, !dbg !4436
  call void @llvm.dbg.value(metadata i32 %call403, metadata !3946, metadata !DIExpression()), !dbg !4007
  %.pre18 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4437
  br label %if.end424, !dbg !4438

if.else404:                                       ; preds = %if.end400
  %173 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4439
  call void @llvm.dbg.value(metadata %struct.rtx_def* %173, metadata !3971, metadata !DIExpression()), !dbg !4110
  %u405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i64 0, i32 1, !dbg !4439
  %174 = getelementptr inbounds %union.u, %union.u* %u405, i64 1, i32 0, i32 0, i64 0, !dbg !4439
  %175 = bitcast %union.rtunion_def* %174 to i32**, !dbg !4439
  %176 = load i32*, i32** %175, align 8, !dbg !4439
  %bf.load409 = load i32, i32* %176, align 8, !dbg !4439
  %bf.clear410 = and i32 %bf.load409, 65535, !dbg !4439
  %cmp411 = icmp eq i32 %bf.clear410, 24, !dbg !4441
  br i1 %cmp411, label %if.end424, label %land.lhs.true413, !dbg !4442

land.lhs.true413:                                 ; preds = %if.else404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %173, metadata !3971, metadata !DIExpression()), !dbg !4110
  %cmp420 = icmp ne i32 %bf.clear410, 25, !dbg !4443
  %177 = zext i1 %cmp420 to i32, !dbg !4444
  %spec.select6 = sub i32 %can_issue_more.1, %177, !dbg !4444
  br label %if.end424, !dbg !4444

if.end424:                                        ; preds = %if.else404, %land.lhs.true413, %if.then402
  %178 = phi %struct.rtx_def* [ %.pre18, %if.then402 ], [ %173, %if.else404 ], [ %173, %land.lhs.true413 ], !dbg !4437
  %can_issue_more.3 = phi i32 [ %call403, %if.then402 ], [ %can_issue_more.1, %if.else404 ], [ %spec.select6, %land.lhs.true413 ], !dbg !4445
  call void @llvm.dbg.value(metadata i32 %can_issue_more.3, metadata !3946, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata %struct.rtx_def* %178, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call425 = call fastcc i32 @schedule_insn(%struct.rtx_def* %178) #7, !dbg !4446
  call void @llvm.dbg.value(metadata i32 %call425, metadata !3949, metadata !DIExpression()), !dbg !4007
  %cmp426 = icmp eq i32 %call425, 0, !dbg !4447
  %tobool430 = icmp ne i32 %asm_p.0, 0, !dbg !4449
  %or.cond7 = and i1 %cmp426, %tobool430, !dbg !4450
  %advance.5 = select i1 %or.cond7, i32 1, i32 %call425, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %advance.5, metadata !3949, metadata !DIExpression()), !dbg !4007
  %cmp433 = icmp eq i32 %advance.5, 0, !dbg !4451
  br i1 %cmp433, label %if.end436, label %cleanup523, !dbg !4453

if.end436:                                        ; preds = %if.end424
  call void @llvm.dbg.value(metadata i32 0, metadata !3945, metadata !DIExpression()), !dbg !4007
  %179 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4454
  %cmp437 = icmp sgt i32 %179, 0, !dbg !4456
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !4457

if.then439:                                       ; preds = %if.end436
  call void @ready_sort(%struct.ready_list* nonnull @ready) #7, !dbg !4458
  %.pre19 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4459
  br label %if.end440, !dbg !4458

if.end440:                                        ; preds = %if.then439, %if.end436
  %180 = phi i32 [ %.pre19, %if.then439 ], [ %179, %if.end436 ], !dbg !4459
  %tobool441 = icmp eq i32 %180, 0, !dbg !4460
  br i1 %tobool441, label %if.end503, label %land.lhs.true442, !dbg !4461

land.lhs.true442:                                 ; preds = %if.end440
  %call443 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !4462
  %181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call443, i64 0, i32 0, !dbg !4462
  %bf.load444 = load i32, i32* %181, align 8, !dbg !4462
  %bf.clear445 = and i32 %bf.load444, 65535, !dbg !4462
  %cmp446 = icmp eq i32 %bf.clear445, 7, !dbg !4462
  br i1 %cmp446, label %land.lhs.true448, label %if.end503, !dbg !4463

land.lhs.true448:                                 ; preds = %land.lhs.true442
  %182 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4464
  %schedule_more_p449 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %182, i64 0, i32 2, !dbg !4465
  %183 = load i32 ()*, i32 ()** %schedule_more_p449, align 8, !dbg !4465
  %call450 = call i32 %183() #6, !dbg !4466
  %tobool451 = icmp eq i32 %call450, 0, !dbg !4466
  br i1 %tobool451, label %if.end503, label %if.then452, !dbg !4467

if.then452:                                       ; preds = %land.lhs.true448
  %184 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4468
  %call453 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %184) #6, !dbg !4469
  %tobool454 = icmp eq i8 %call453, 0, !dbg !4469
  br i1 %tobool454, label %if.end469, label %if.then455, !dbg !4470

if.then455:                                       ; preds = %if.then452
  %185 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4471
  %advance_target_bb456 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %185, i64 0, i32 16, !dbg !4472
  %186 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** %advance_target_bb456, align 8, !dbg !4472
  %187 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4473
  %call457 = call %struct.basic_block_def* %186(%struct.basic_block_def* %187, %struct.rtx_def* null) #6, !dbg !4471
  store %struct.basic_block_def* %call457, %struct.basic_block_def** %target_bb, align 8, !dbg !4474
  %188 = load i32, i32* @sched_verbose, align 4, !dbg !4475
  %tobool458 = icmp eq i32 %188, 0, !dbg !4475
  br i1 %tobool458, label %if.end467, label %if.then459, !dbg !4476

if.then459:                                       ; preds = %if.then455
  %189 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4477
  %call461 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %189) #6, !dbg !4478
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call461, metadata !3985, metadata !DIExpression()), !dbg !4479
  %tobool462 = icmp eq %struct.rtx_def* %call461, null, !dbg !4480
  br i1 %tobool462, label %cond.true463, label %cond.end465, !dbg !4480

cond.true463:                                     ; preds = %if.then459
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3183, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4480
  br label %cond.end465, !dbg !4480

cond.end465:                                      ; preds = %if.then459, %cond.true463
  %190 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4481
  call fastcc void @dump_new_block_header(i32 1, %struct.basic_block_def* %190, %struct.rtx_def* %call461, %struct.rtx_def* %7) #7, !dbg !4482
  %.pre20 = load %struct.basic_block_def*, %struct.basic_block_def** %target_bb, align 8, !dbg !4483
  br label %if.end467, !dbg !4484

if.end467:                                        ; preds = %if.then455, %cond.end465
  %191 = phi %struct.basic_block_def* [ %call457, %if.then455 ], [ %.pre20, %cond.end465 ], !dbg !4483
  %call468 = call %struct.rtx_def* @bb_note(%struct.basic_block_def* %191) #7, !dbg !4485
  store %struct.rtx_def* %call468, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4486
  br label %if.end469, !dbg !4487

if.end469:                                        ; preds = %if.then452, %if.end467
  br label %while.cond470, !dbg !4488

while.cond470:                                    ; preds = %if.end501, %if.end469
  %advance.6 = phi i32 [ 0, %if.end469 ], [ %call491, %if.end501 ], !dbg !4110
  call void @llvm.dbg.value(metadata i32 %advance.6, metadata !3949, metadata !DIExpression()), !dbg !4007
  %192 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4489
  %tobool471 = icmp eq i32 %192, 0, !dbg !4490
  br i1 %tobool471, label %if.end503.loopexit, label %land.rhs472, !dbg !4491

land.rhs472:                                      ; preds = %while.cond470
  %call473 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !4492
  %193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call473, i64 0, i32 0, !dbg !4492
  %bf.load474 = load i32, i32* %193, align 8, !dbg !4492
  %bf.clear475 = and i32 %bf.load474, 65535, !dbg !4492
  %cmp476 = icmp eq i32 %bf.clear475, 7, !dbg !4492
  br i1 %cmp476, label %while.body479, label %if.end503.loopexit, !dbg !4488

while.body479:                                    ; preds = %land.rhs472
  %call480 = call fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* nonnull @ready) #7, !dbg !4493
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call480, metadata !3971, metadata !DIExpression()), !dbg !4110
  store %struct.rtx_def* %call480, %struct.rtx_def** %insn188, align 8, !dbg !4495
  %.cast12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call480, i64 0, i32 0, !dbg !4496
  %bf.load481 = load i32, i32* %.cast12, align 8, !dbg !4496
  %bf.clear482 = and i32 %bf.load481, 65535, !dbg !4496
  %cmp483 = icmp eq i32 %bf.clear482, 7, !dbg !4496
  br i1 %cmp483, label %cond.end487, label %cond.true485, !dbg !4496

cond.true485:                                     ; preds = %while.body479
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4496
  %.pre21 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4497
  br label %cond.end487, !dbg !4496

cond.end487:                                      ; preds = %while.body479, %cond.true485
  %194 = phi %struct.rtx_def* [ %call480, %while.body479 ], [ %.pre21, %cond.true485 ], !dbg !4497
  %195 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4498
  %begin_schedule_ready489 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %195, i64 0, i32 15, !dbg !4499
  %196 = load void (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.rtx_def*)** %begin_schedule_ready489, align 8, !dbg !4499
  call void @llvm.dbg.value(metadata %struct.rtx_def* %194, metadata !3971, metadata !DIExpression()), !dbg !4110
  %197 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4500
  call void %196(%struct.rtx_def* %194, %struct.rtx_def* %197) #6, !dbg !4501
  %198 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.rtx_def* %198, metadata !3971, metadata !DIExpression()), !dbg !4110
  %199 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4503
  %200 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4504
  %next_tail490 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %200, i64 0, i32 9, !dbg !4505
  %201 = load %struct.rtx_def*, %struct.rtx_def** %next_tail490, align 8, !dbg !4505
  call fastcc void @move_insn(%struct.rtx_def* %198, %struct.rtx_def* %199, %struct.rtx_def* %201) #7, !dbg !4506
  %202 = load %struct.rtx_def*, %struct.rtx_def** %insn188, align 8, !dbg !4507
  call void @llvm.dbg.value(metadata %struct.rtx_def* %202, metadata !3971, metadata !DIExpression()), !dbg !4110
  %call491 = call fastcc i32 @schedule_insn(%struct.rtx_def* %202) #7, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %call491, metadata !3949, metadata !DIExpression()), !dbg !4007
  %203 = load i64, i64* %42, align 8, !dbg !4509
  store i64 %203, i64* bitcast (%struct.rtx_def** @last_scheduled_insn to i64*), align 8, !dbg !4510
  %cmp492 = icmp eq i32 %call491, 0, !dbg !4511
  br i1 %cmp492, label %cond.end496, label %cond.true494, !dbg !4511

cond.true494:                                     ; preds = %cond.end487
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4511
  br label %cond.end496, !dbg !4511

cond.end496:                                      ; preds = %cond.end487, %cond.true494
  %204 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4512
  %cmp498 = icmp sgt i32 %204, 0, !dbg !4514
  br i1 %cmp498, label %if.then500, label %if.end501, !dbg !4515

if.then500:                                       ; preds = %cond.end496
  call void @ready_sort(%struct.ready_list* nonnull @ready) #7, !dbg !4516
  br label %if.end501, !dbg !4516

if.end501:                                        ; preds = %if.then500, %cond.end496
  br label %while.cond470, !dbg !4488, !llvm.loop !4517

if.end503.loopexit:                               ; preds = %land.rhs472, %while.cond470
  %advance.6.lcssa = phi i32 [ %advance.6, %land.rhs472 ], [ %advance.6, %while.cond470 ], !dbg !4110
  call void @llvm.dbg.value(metadata i32 %advance.6.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.6.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.6.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.6.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.6.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.6.lcssa, metadata !3949, metadata !DIExpression()), !dbg !4007
  br label %if.end503, !dbg !4519

if.end503:                                        ; preds = %if.end503.loopexit, %land.lhs.true448, %if.end440, %land.lhs.true442
  %advance.7 = phi i32 [ 0, %land.lhs.true448 ], [ 0, %land.lhs.true442 ], [ 0, %if.end440 ], [ %advance.6.lcssa, %if.end503.loopexit ], !dbg !4521
  call void @llvm.dbg.value(metadata i32 %advance.7, metadata !3949, metadata !DIExpression()), !dbg !4007
  %205 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 9), align 8, !dbg !4519
  %tobool504 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %205, null, !dbg !4522
  br i1 %tobool504, label %cleanup523, label %land.lhs.true505, !dbg !4523

land.lhs.true505:                                 ; preds = %if.end503
  %206 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4524
  %cmp506 = icmp eq i32 %206, 0, !dbg !4525
  br i1 %cmp506, label %if.then514, label %lor.lhs.false508, !dbg !4526

lor.lhs.false508:                                 ; preds = %land.lhs.true505
  %call509 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !4527
  %207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call509, i64 0, i32 0, !dbg !4527
  %bf.load510 = load i32, i32* %207, align 8, !dbg !4527
  %bf.clear512 = and i32 %bf.load510, 268435456, !dbg !4527
  %tobool513 = icmp eq i32 %bf.clear512, 0, !dbg !4527
  br i1 %tobool513, label %lor.lhs.false508.if.then514_crit_edge, label %cleanup523, !dbg !4528

lor.lhs.false508.if.then514_crit_edge:            ; preds = %lor.lhs.false508
  %.pre22 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 9), align 8, !dbg !4529
  %.pre23 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4531
  br label %if.then514, !dbg !4528

if.then514:                                       ; preds = %lor.lhs.false508.if.then514_crit_edge, %land.lhs.true505
  %208 = phi i32 [ %.pre23, %lor.lhs.false508.if.then514_crit_edge ], [ 0, %land.lhs.true505 ], !dbg !4531
  %209 = phi i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* [ %.pre22, %lor.lhs.false508.if.then514_crit_edge ], [ %205, %land.lhs.true505 ], !dbg !4529
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4532
  %211 = load i32, i32* @sched_verbose, align 4, !dbg !4533
  %tobool515 = icmp eq i32 %208, 0, !dbg !4534
  br i1 %tobool515, label %cond.end519, label %cond.true516, !dbg !4534

cond.true516:                                     ; preds = %if.then514
  %call517 = call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #7, !dbg !4535
  br label %cond.end519, !dbg !4534

cond.end519:                                      ; preds = %if.then514, %cond.true516
  %cond520 = phi %struct.rtx_def** [ %call517, %cond.true516 ], [ null, %if.then514 ], !dbg !4534
  %212 = load i32, i32* @clock_var, align 4, !dbg !4536
  %call521 = call i32 %209(%struct._IO_FILE* %210, i32 %211, %struct.rtx_def** %cond520, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), i32 %212) #6, !dbg !4537
  call void @llvm.dbg.value(metadata i32 %call521, metadata !3946, metadata !DIExpression()), !dbg !4007
  br label %cleanup523, !dbg !4538

cleanup523:                                       ; preds = %lor.lhs.false508, %if.end503, %if.end424, %lor.lhs.false222, %lor.lhs.false219, %cond.end519, %if.then316, %if.end214, %cleanup, %if.then329, %if.then268, %if.then262
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 13, %if.then262 ], [ 13, %if.then268 ], [ 14, %if.then329 ], [ 13, %if.end214 ], [ 13, %lor.lhs.false222 ], [ 13, %lor.lhs.false219 ], [ %., %if.then316 ], [ 13, %if.end424 ], [ 0, %cond.end519 ], [ 0, %lor.lhs.false508 ], [ 0, %if.end503 ]
  %advance.8 = phi i32 [ %advance.4, %cleanup ], [ 1, %if.then262 ], [ %advance.4, %if.then268 ], [ %advance.4, %if.then329 ], [ %advance.4, %if.end214 ], [ %advance.4, %lor.lhs.false222 ], [ %advance.4, %lor.lhs.false219 ], [ %cost.4.advance.4, %if.then316 ], [ %advance.5, %if.end424 ], [ %advance.7, %cond.end519 ], [ %advance.7, %lor.lhs.false508 ], [ %advance.7, %if.end503 ], !dbg !4116
  %can_issue_more.5 = phi i32 [ %can_issue_more.1, %cleanup ], [ %can_issue_more.1, %if.then262 ], [ %can_issue_more.1, %if.then268 ], [ %can_issue_more.1, %if.then329 ], [ %can_issue_more.1, %if.end214 ], [ %can_issue_more.1, %lor.lhs.false222 ], [ %can_issue_more.1, %lor.lhs.false219 ], [ %can_issue_more.1, %if.then316 ], [ %can_issue_more.3, %if.end424 ], [ %call521, %cond.end519 ], [ %can_issue_more.3, %lor.lhs.false508 ], [ %can_issue_more.3, %if.end503 ], !dbg !4116
  %first_cycle_insn_p.1 = phi i32 [ %first_cycle_insn_p.0, %cleanup ], [ %first_cycle_insn_p.0, %if.then262 ], [ %first_cycle_insn_p.0, %if.then268 ], [ %first_cycle_insn_p.0, %if.then329 ], [ %first_cycle_insn_p.0, %if.end214 ], [ %first_cycle_insn_p.0, %lor.lhs.false222 ], [ %first_cycle_insn_p.0, %lor.lhs.false219 ], [ %first_cycle_insn_p.0, %if.then316 ], [ %first_cycle_insn_p.0, %if.end424 ], [ 0, %cond.end519 ], [ 0, %lor.lhs.false508 ], [ 0, %if.end503 ], !dbg !4116
  call void @llvm.dbg.value(metadata i32 %first_cycle_insn_p.1, metadata !3945, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %can_issue_more.5, metadata !3946, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %advance.8, metadata !3949, metadata !DIExpression()), !dbg !4007
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8, !dbg !4539
  %switch = icmp eq i32 %cleanup.dest.slot.1, 13
  br i1 %switch, label %while.cond85.loopexit, label %for.cond187

while.end529:                                     ; preds = %while.cond85
  %213 = load i32, i32* @sched_verbose, align 4, !dbg !4540
  %tobool530 = icmp eq i32 %213, 0, !dbg !4540
  br i1 %tobool530, label %if.end533, label %if.then531, !dbg !4542

if.then531:                                       ; preds = %while.end529
  %214 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4543
  %call532 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %214, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4545
  call fastcc void @debug_ready_list(%struct.ready_list* nonnull @ready) #7, !dbg !4546
  br label %if.end533, !dbg !4547

if.end533:                                        ; preds = %while.end529, %if.then531
  %215 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4548
  %queue_must_finish_empty = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %215, i64 0, i32 12, !dbg !4549
  %bf.load534 = load i8, i8* %queue_must_finish_empty, align 8, !dbg !4549
  %bf.clear535 = and i8 %bf.load534, 1, !dbg !4549
  %tobool536 = icmp eq i8 %bf.clear535, 0, !dbg !4548
  br i1 %tobool536, label %if.else547, label %if.then537, !dbg !4550

if.then537:                                       ; preds = %if.end533
  %216 = load i32, i32* @q_size, align 4, !dbg !4551
  %217 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4551
  %218 = or i32 %216, %217, !dbg !4551
  %219 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !4551
  %220 = or i32 %218, %219, !dbg !4551
  %221 = icmp eq i32 %220, 0, !dbg !4551
  br i1 %221, label %if.end660, label %cond.true543, !dbg !4551

cond.true543:                                     ; preds = %if.then537
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4551
  br label %if.end660, !dbg !4551

if.else547:                                       ; preds = %if.end533
  %222 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %222, metadata !3944, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4007
  br label %for.cond549, !dbg !4553

for.cond549:                                      ; preds = %for.body552, %if.else547
  %i.1.in = phi i32 [ %222, %if.else547 ], [ %i.1, %for.body552 ]
  %i.1 = add nsw i32 %i.1.in, -1, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3944, metadata !DIExpression()), !dbg !4007
  %cmp550 = icmp sgt i32 %i.1.in, 0, !dbg !4555
  br i1 %cmp550, label %for.body552, label %for.end594, !dbg !4556

for.body552:                                      ; preds = %for.cond549
  %call554 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %i.1) #7, !dbg !4557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call554, metadata !3992, metadata !DIExpression()), !dbg !4558
  %223 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4559
  %base557 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %223, i64 0, i32 0, !dbg !4559
  %arrayidx563 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call554, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4559
  %rt_int564 = bitcast %union.rtunion_def* %arrayidx563 to i32*, !dbg !4559
  %224 = load i32, i32* %rt_int564, align 8, !dbg !4559
  %call565 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base557, i32 %224) #7, !dbg !4559
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call565, i64 0, i32 4, !dbg !4559
  store i32 -2, i32* %queue_index, align 8, !dbg !4560
  %225 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4561
  %base568 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %225, i64 0, i32 0, !dbg !4561
  %226 = load i32, i32* %rt_int564, align 8, !dbg !4561
  %call576 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base568, i32 %226) #7, !dbg !4561
  %todo_spec577 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call576, i64 0, i32 8, !dbg !4561
  %227 = load i32, i32* %todo_spec577, align 8, !dbg !4561
  %and578 = and i32 %227, -150994944, !dbg !4562
  %or579 = or i32 %and578, 134217728, !dbg !4563
  %228 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4564
  %base582 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %228, i64 0, i32 0, !dbg !4564
  %229 = load i32, i32* %rt_int564, align 8, !dbg !4564
  %call590 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base582, i32 %229) #7, !dbg !4564
  %todo_spec591 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call590, i64 0, i32 8, !dbg !4564
  store i32 %or579, i32* %todo_spec591, align 8, !dbg !4565
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3944, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4007
  br label %for.cond549, !dbg !4566, !llvm.loop !4567

for.end594:                                       ; preds = %for.cond549
  %230 = load i32, i32* @q_size, align 4, !dbg !4569
  %tobool595 = icmp eq i32 %230, 0, !dbg !4569
  br i1 %tobool595, label %if.end660, label %for.cond597.preheader, !dbg !4570

for.cond597.preheader:                            ; preds = %for.end594
  %231 = sext i32 %20 to i64, !dbg !4571
  br label %for.cond597, !dbg !4571

for.cond597:                                      ; preds = %for.cond597.preheader, %for.end653
  %indvars.iv = phi i64 [ 0, %for.cond597.preheader ], [ %indvars.iv.next, %for.end653 ], !dbg !4572
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3944, metadata !DIExpression()), !dbg !4007
  %cmp598 = icmp sgt i64 %indvars.iv, %231, !dbg !4573
  br i1 %cmp598, label %if.end660.loopexit, label %for.body600, !dbg !4571

for.body600:                                      ; preds = %for.cond597
  %232 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4574
  %arrayidx601 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %232, i64 %indvars.iv, !dbg !4574
  br label %for.cond602, !dbg !4575

for.cond602:                                      ; preds = %for.body604, %for.body600
  %link.0.in = phi %struct.rtx_def** [ %arrayidx601, %for.body600 ], [ %rt_rtx652, %for.body604 ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !4576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !3998, metadata !DIExpression()), !dbg !4577
  %tobool603 = icmp eq %struct.rtx_def* %link.0, null, !dbg !4578
  br i1 %tobool603, label %for.end653, label %for.body604, !dbg !4578

for.body604:                                      ; preds = %for.cond602
  %arrayidx608 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4579
  %rt_rtx609 = bitcast %union.rtunion_def* %arrayidx608 to %struct.rtx_def**, !dbg !4579
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx609, align 8, !dbg !4579
  call void @llvm.dbg.value(metadata %struct.rtx_def* %233, metadata !4003, metadata !DIExpression()), !dbg !4580
  %234 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4581
  %base612 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %234, i64 0, i32 0, !dbg !4581
  %arrayidx618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4581
  %rt_int619 = bitcast %union.rtunion_def* %arrayidx618 to i32*, !dbg !4581
  %235 = load i32, i32* %rt_int619, align 8, !dbg !4581
  %call620 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base612, i32 %235) #7, !dbg !4581
  %queue_index621 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call620, i64 0, i32 4, !dbg !4581
  store i32 -2, i32* %queue_index621, align 8, !dbg !4582
  %236 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4583
  %base624 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %236, i64 0, i32 0, !dbg !4583
  %237 = load i32, i32* %rt_int619, align 8, !dbg !4583
  %call632 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base624, i32 %237) #7, !dbg !4583
  %todo_spec633 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call632, i64 0, i32 8, !dbg !4583
  %238 = load i32, i32* %todo_spec633, align 8, !dbg !4583
  %and634 = and i32 %238, -150994944, !dbg !4584
  %or635 = or i32 %and634, 134217728, !dbg !4585
  %239 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4586
  %base638 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %239, i64 0, i32 0, !dbg !4586
  %240 = load i32, i32* %rt_int619, align 8, !dbg !4586
  %call646 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base638, i32 %240) #7, !dbg !4586
  %todo_spec647 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call646, i64 0, i32 8, !dbg !4586
  store i32 %or635, i32* %todo_spec647, align 8, !dbg !4587
  %241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4588
  %rt_rtx652 = bitcast %union.rtunion_def* %241 to %struct.rtx_def**, !dbg !4588
  br label %for.cond602, !dbg !4589, !llvm.loop !4590

for.end653:                                       ; preds = %for.cond602
  %242 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4592
  %arrayidx655 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %242, i64 %indvars.iv, !dbg !4592
  call void @free_INSN_LIST_list(%struct.rtx_def** %arrayidx655) #6, !dbg !4593
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4594
  call void @llvm.dbg.value(metadata i32 undef, metadata !3944, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4007
  br label %for.cond597, !dbg !4595, !llvm.loop !4596

if.end660.loopexit:                               ; preds = %for.cond597
  br label %if.end660, !dbg !4598

if.end660:                                        ; preds = %if.end660.loopexit, %if.then537, %for.end594, %cond.true543
  %243 = load i32, i32* @sched_verbose, align 4, !dbg !4598
  %tobool661 = icmp eq i32 %243, 0, !dbg !4598
  br i1 %tobool661, label %if.end664, label %if.then662, !dbg !4600

if.then662:                                       ; preds = %if.end660
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4601
  %245 = load i32, i32* @clock_var, align 4, !dbg !4602
  %call663 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %244, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i32 %245) #6, !dbg !4603
  br label %if.end664, !dbg !4603

if.end664:                                        ; preds = %if.end660, %if.then662
  %246 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4604
  %queue_must_finish_empty665 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %246, i64 0, i32 12, !dbg !4606
  %bf.load666 = load i8, i8* %queue_must_finish_empty665, align 8, !dbg !4606
  %bf.clear667 = and i8 %bf.load666, 1, !dbg !4606
  %tobool669 = icmp eq i8 %bf.clear667, 0, !dbg !4604
  br i1 %tobool669, label %if.then673, label %lor.lhs.false670, !dbg !4607

lor.lhs.false670:                                 ; preds = %if.end664
  %.b = load i1, i1* @haifa_recovery_bb_recently_added_p, align 1, !dbg !4608
  br i1 %.b, label %if.then673, label %if.end678, !dbg !4609

if.then673:                                       ; preds = %lor.lhs.false670, %if.end664
  %247 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4610
  %248 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4612
  call fastcc void @fix_inter_tick(%struct.rtx_def* %247, %struct.rtx_def* %248) #7, !dbg !4613
  br label %if.end678, !dbg !4614

if.end678:                                        ; preds = %lor.lhs.false670, %if.then673
  %249 = load void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 5), align 8, !dbg !4615
  %tobool679 = icmp eq void (%struct._IO_FILE*, i32)* %249, null, !dbg !4617
  br i1 %tobool679, label %if.end681, label %if.then680, !dbg !4618

if.then680:                                       ; preds = %if.end678
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4619
  %251 = load i32, i32* @sched_verbose, align 4, !dbg !4621
  call void %249(%struct._IO_FILE* %250, i32 %251) #6, !dbg !4622
  call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #7, !dbg !4623
  br label %if.end681, !dbg !4624

if.end681:                                        ; preds = %if.end678, %if.then680
  %252 = load i32, i32* @sched_verbose, align 4, !dbg !4625
  %tobool682 = icmp eq i32 %252, 0, !dbg !4625
  br i1 %tobool682, label %if.end693, label %if.then683, !dbg !4627

if.then683:                                       ; preds = %if.end681
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4628
  %arrayidx686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4629
  %rt_int687 = bitcast %union.rtunion_def* %arrayidx686 to i32*, !dbg !4629
  %254 = load i32, i32* %rt_int687, align 8, !dbg !4629
  %arrayidx690 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4630
  %rt_int691 = bitcast %union.rtunion_def* %arrayidx690 to i32*, !dbg !4630
  %255 = load i32, i32* %rt_int691, align 8, !dbg !4630
  %call692 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %253, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), i32 %254, i32 %255) #6, !dbg !4631
  br label %if.end693, !dbg !4631

if.end693:                                        ; preds = %if.end681, %if.then683
  %256 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4632
  call void @llvm.dbg.value(metadata %struct.rtx_def* %256, metadata !3953, metadata !DIExpression()), !dbg !4007
  %257 = load i64, i64* bitcast (%struct.rtx_def** @last_scheduled_insn to i64*), align 8, !dbg !4633
  %call698 = call %struct.rtx_def* @restore_other_notes(%struct.rtx_def* %256, %struct.basic_block_def* null) #7, !dbg !4634
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call698, metadata !3953, metadata !DIExpression()), !dbg !4007
  %258 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4635
  %head699 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %258, i64 0, i32 10, !dbg !4636
  store %struct.rtx_def* %call698, %struct.rtx_def** %head699, align 8, !dbg !4637
  %tail700 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %258, i64 0, i32 11, !dbg !4638
  %259 = bitcast %struct.rtx_def** %tail700 to i64*, !dbg !4639
  store i64 %257, i64* %259, align 8, !dbg !4639
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4640
  ret void, !dbg !4640
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_new_block_header(i32 %i, %struct.basic_block_def* %bb, %struct.rtx_def* %head, %struct.rtx_def* %tail) unnamed_addr #5 !dbg !4641 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !4645, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4646, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !4647, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !4648, metadata !DIExpression()), !dbg !4649
  %tobool = icmp eq i32 %i, 0, !dbg !4650
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4652
  br i1 %tobool, label %if.then, label %if.else, !dbg !4653

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.55, i64 0, i64 0)) #6, !dbg !4654
  br label %if.end, !dbg !4654

if.else:                                          ; preds = %entry
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.56, i64 0, i64 0)) #6, !dbg !4655
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4656
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4657
  %2 = load i32, i32* %index, align 8, !dbg !4657
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4658
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4658
  %3 = load i32, i32* %rt_int, align 8, !dbg !4658
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4659
  %rt_int5 = bitcast %union.rtunion_def* %arrayidx4 to i32*, !dbg !4659
  %4 = load i32, i32* %rt_int5, align 8, !dbg !4659
  %5 = load i32, i32* @reload_completed, align 4, !dbg !4660
  %tobool6 = icmp eq i32 %5, 0, !dbg !4660
  %cond = select i1 %tobool6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), !dbg !4660
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.57, i64 0, i64 0), i32 %2, i32 %3, i32 %4, i8* %cond) #6, !dbg !4661
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4662
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.55, i64 0, i64 0)) #6, !dbg !4663
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4664
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4665
  ret void, !dbg !4666
}

declare dso_local void @state_reset(i8*) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ready_remove(%struct.ready_list* %ready, i32 %index) unnamed_addr #5 !dbg !4667 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* @ready, metadata !4669, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i32 %index, metadata !4670, metadata !DIExpression()), !dbg !4673
  %cmp = icmp eq i32 %index, 0, !dbg !4674
  br i1 %cmp, label %if.then, label %if.end, !dbg !4676

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* nonnull @ready) #7, !dbg !4677
  br label %cleanup, !dbg !4678

if.end:                                           ; preds = %entry
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4679
  %tobool = icmp eq i32 %0, 0, !dbg !4679
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !4679

land.lhs.true:                                    ; preds = %if.end
  %cmp2 = icmp sgt i32 %0, %index, !dbg !4679
  br i1 %cmp2, label %cond.end, label %cond.true, !dbg !4679

cond.true:                                        ; preds = %if.end, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1473, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4679
  %.pre = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4680
  br label %cond.end, !dbg !4679

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %1 = phi i32 [ %0, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !4680
  %2 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !4681
  %3 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !4682
  %sub = sub nsw i32 %3, %index, !dbg !4683
  %idxprom = sext i32 %sub to i64, !dbg !4684
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !4684
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4684
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4671, metadata !DIExpression()), !dbg !4673
  %dec = add nsw i32 %1, -1, !dbg !4680
  store i32 %dec, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4680
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !4685
  %bf.load = load i32, i32* %5, align 8, !dbg !4685
  %bf.clear = and i32 %bf.load, 65535, !dbg !4685
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !4685
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !4687

if.then5:                                         ; preds = %cond.end
  %6 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !4688
  %dec6 = add nsw i32 %6, -1, !dbg !4688
  store i32 %dec6, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !4688
  br label %if.end7, !dbg !4689

if.end7:                                          ; preds = %if.then5, %cond.end
  call void @llvm.dbg.value(metadata i32 %index, metadata !4672, metadata !DIExpression()), !dbg !4673
  br label %for.cond, !dbg !4690

for.cond:                                         ; preds = %for.body, %if.end7
  %7 = phi i32 [ %dec, %if.end7 ], [ %.pre1, %for.body ], !dbg !4692
  %i.0 = phi i32 [ %index, %if.end7 ], [ %inc, %for.body ], !dbg !4694
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4672, metadata !DIExpression()), !dbg !4673
  %cmp9 = icmp slt i32 %i.0, %7, !dbg !4695
  br i1 %cmp9, label %for.body, label %for.end, !dbg !4696

for.body:                                         ; preds = %for.cond
  %8 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !4697
  %9 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !4698
  %10 = xor i32 %i.0, -1, !dbg !4699
  %sub13 = add i32 %9, %10, !dbg !4699
  %idxprom14 = sext i32 %sub13 to i64, !dbg !4700
  %arrayidx15 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom14, !dbg !4700
  %11 = bitcast %struct.rtx_def** %arrayidx15 to i64*, !dbg !4700
  %12 = load i64, i64* %11, align 8, !dbg !4700
  %sub18 = sub nsw i32 %9, %i.0, !dbg !4701
  %idxprom19 = sext i32 %sub18 to i64, !dbg !4702
  %arrayidx20 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom19, !dbg !4702
  %13 = bitcast %struct.rtx_def** %arrayidx20 to i64*, !dbg !4703
  store i64 %12, i64* %13, align 8, !dbg !4703
  %inc = add nsw i32 %i.0, 1, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4672, metadata !DIExpression()), !dbg !4673
  %.pre1 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4692
  br label %for.cond, !dbg !4705, !llvm.loop !4706

for.end:                                          ; preds = %for.cond
  %14 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4708
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %14, i64 0, i32 0, !dbg !4708
  %arrayidx26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4708
  %rt_int = bitcast %union.rtunion_def* %arrayidx26 to i32*, !dbg !4708
  %15 = load i32, i32* %rt_int, align 8, !dbg !4708
  %call27 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %15) #7, !dbg !4708
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call27, i64 0, i32 4, !dbg !4708
  store i32 -2, i32* %queue_index, align 8, !dbg !4709
  br label %cleanup, !dbg !4710

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %4, %for.end ], !dbg !4673
  ret %struct.rtx_def* %retval.0, !dbg !4711
}

; Function Attrs: nounwind uwtable
define internal fastcc void @queue_insn(%struct.rtx_def* %insn, i32 %n_cycles) unnamed_addr #5 !dbg !4712 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4714, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.value(metadata i32 %n_cycles, metadata !4715, metadata !DIExpression()), !dbg !4718
  %0 = load i32, i32* @q_ptr, align 4, !dbg !4719
  %add = add nsw i32 %0, %n_cycles, !dbg !4719
  %1 = load i32, i32* @max_insn_queue_index, align 4, !dbg !4719
  %and = and i32 %add, %1, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %and, metadata !4716, metadata !DIExpression()), !dbg !4718
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4720
  %idxprom = sext i32 %and to i64, !dbg !4720
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !4720
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4720
  %call = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %3) #6, !dbg !4721
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4717, metadata !DIExpression()), !dbg !4718
  %cmp = icmp slt i32 %1, %n_cycles, !dbg !4722
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4722

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1346, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4722
  br label %cond.end, !dbg !4722

cond.end:                                         ; preds = %entry, %cond.true
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4723
  %bf.load = load i32, i32* %4, align 8, !dbg !4723
  %bf.clear = and i32 %bf.load, 65535, !dbg !4723
  %cmp1 = icmp eq i32 %bf.clear, 7, !dbg !4723
  br i1 %cmp1, label %cond.true2, label %cond.end4, !dbg !4723

cond.true2:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4723
  br label %cond.end4, !dbg !4723

cond.end4:                                        ; preds = %cond.end, %cond.true2
  %5 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4724
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %5, i64 %idxprom, !dbg !4724
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx7, align 8, !dbg !4725
  %6 = load i32, i32* @q_size, align 4, !dbg !4726
  %add8 = add nsw i32 %6, 1, !dbg !4726
  store i32 %add8, i32* @q_size, align 4, !dbg !4726
  %7 = load i32, i32* @sched_verbose, align 4, !dbg !4727
  %cmp9 = icmp sgt i32 %7, 1, !dbg !4729
  br i1 %cmp9, label %if.then, label %if.end, !dbg !4730

if.then:                                          ; preds = %cond.end4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4731
  %9 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4733
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %9, i64 0, i32 5, !dbg !4734
  %10 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !4734
  %call10 = tail call i8* %10(%struct.rtx_def* %insn, i32 0) #6, !dbg !4735
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i64 0, i64 0), i8* %call10) #6, !dbg !4736
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4737
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i32 %n_cycles) #6, !dbg !4738
  br label %if.end, !dbg !4739

if.end:                                           ; preds = %if.then, %cond.end4
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4740
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %12, i64 0, i32 0, !dbg !4740
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4740
  %rt_int = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !4740
  %13 = load i32, i32* %rt_int, align 8, !dbg !4740
  %call18 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %13) #7, !dbg !4740
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call18, i64 0, i32 4, !dbg !4740
  store i32 %and, i32* %queue_index, align 8, !dbg !4741
  ret void, !dbg !4742
}

; Function Attrs: nounwind uwtable
define internal fastcc void @restore_bb_notes(%struct.basic_block_def* %first) unnamed_addr #5 !dbg !4743 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first, metadata !4745, metadata !DIExpression()), !dbg !4751
  %0 = load %struct.rtx_def**, %struct.rtx_def*** @bb_header, align 8, !dbg !4752
  %tobool = icmp eq %struct.rtx_def** %0, null, !dbg !4752
  br i1 %tobool, label %return, label %if.end, !dbg !4754

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !4755

while.cond:                                       ; preds = %cond.end, %if.end
  %first.pn = phi %struct.basic_block_def* [ %first, %if.end ], [ %first.addr.0, %cond.end ]
  %first.addr.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.pn, i64 0, i32 6, !dbg !4751
  %first.addr.0 = load %struct.basic_block_def*, %struct.basic_block_def** %first.addr.0.in, align 8, !dbg !4751
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.addr.0, metadata !4745, metadata !DIExpression()), !dbg !4751
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4756
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !4756
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4756
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !4756
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4756
  %cmp = icmp eq %struct.basic_block_def* %first.addr.0, %3, !dbg !4757
  br i1 %cmp, label %while.cond.land.end_crit_edge, label %land.rhs, !dbg !4758

while.cond.land.end_crit_edge:                    ; preds = %while.cond
  %.pre = load %struct.rtx_def**, %struct.rtx_def*** @bb_header, align 8, !dbg !4751
  br label %land.end, !dbg !4758

land.rhs:                                         ; preds = %while.cond
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @bb_header, align 8, !dbg !4759
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.addr.0, i64 0, i32 9, !dbg !4760
  %5 = load i32, i32* %index, align 8, !dbg !4760
  %idxprom = sext i32 %5 to i64, !dbg !4759
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %4, i64 %idxprom, !dbg !4759
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4759
  %tobool1 = icmp ne %struct.rtx_def* %6, null, !dbg !4758
  br label %land.end

land.end:                                         ; preds = %while.cond.land.end_crit_edge, %land.rhs
  %7 = phi %struct.rtx_def** [ %.pre, %while.cond.land.end_crit_edge ], [ %4, %land.rhs ], !dbg !4751
  %8 = phi i1 [ false, %while.cond.land.end_crit_edge ], [ %tobool1, %land.rhs ], !dbg !4751
  br i1 %8, label %while.body, label %while.end, !dbg !4755

while.body:                                       ; preds = %land.end
  %index2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.addr.0, i64 0, i32 9, !dbg !4761
  %9 = load i32, i32* %index2, align 8, !dbg !4761
  %idxprom3 = sext i32 %9 to i64, !dbg !4762
  %arrayidx4 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom3, !dbg !4762
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4, align 8, !dbg !4762
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !4748, metadata !DIExpression()), !dbg !4763
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4764
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4764
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4764
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !4746, metadata !DIExpression()), !dbg !4763
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4765
  %rt_rtx9 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !4765
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !4765
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !4750, metadata !DIExpression()), !dbg !4763
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !4766
  %bf.load = load i32, i32* %15, align 8, !dbg !4766
  %bf.clear = and i32 %bf.load, 65535, !dbg !4766
  %cmp10 = icmp eq i32 %bf.clear, 12, !dbg !4766
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !4768

if.then11:                                        ; preds = %while.body
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4769
  %rt_rtx15 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !4769
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !4769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !4749, metadata !DIExpression()), !dbg !4763
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !4763
  %bf.load17.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4770
  br label %if.end16, !dbg !4771

if.end16:                                         ; preds = %while.body, %if.then11
  %bf.load17 = phi i32 [ %bf.load17.pre, %if.then11 ], [ %bf.load, %while.body ], !dbg !4770
  %note.0 = phi %struct.rtx_def* [ %17, %if.then11 ], [ %10, %while.body ], !dbg !4772
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !4749, metadata !DIExpression()), !dbg !4763
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !4770
  %cmp19 = icmp eq i32 %bf.clear18, 13, !dbg !4770
  br i1 %cmp19, label %land.lhs.true, label %cond.true, !dbg !4770

land.lhs.true:                                    ; preds = %if.end16
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, !dbg !4770
  %18 = getelementptr inbounds %union.u, %union.u* %u20, i64 1, i32 0, i32 0, i64 0, !dbg !4770
  %rt_int = bitcast %union.rtunion_def* %18 to i32*, !dbg !4770
  %19 = load i32, i32* %rt_int, align 8, !dbg !4770
  %cmp23 = icmp eq i32 %19, 10, !dbg !4770
  br i1 %cmp23, label %cond.end, label %cond.true, !dbg !4770

cond.true:                                        ; preds = %land.lhs.true, %if.end16
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4941, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4770
  %.pre2 = load %struct.rtx_def**, %struct.rtx_def*** @bb_header, align 8, !dbg !4773
  %.pre3 = load i32, i32* %index2, align 8, !dbg !4774
  %.pre4 = sext i32 %.pre3 to i64, !dbg !4773
  br label %cond.end, !dbg !4770

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %idxprom25.pre-phi = phi i64 [ %idxprom3, %land.lhs.true ], [ %.pre4, %cond.true ], !dbg !4773
  %20 = phi %struct.rtx_def** [ %7, %land.lhs.true ], [ %.pre2, %cond.true ], !dbg !4773
  %arrayidx26 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom25.pre-phi, !dbg !4773
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx26, align 8, !dbg !4775
  store %struct.rtx_def* %10, %struct.rtx_def** %rt_rtx9, align 8, !dbg !4776
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4777
  %rt_rtx34 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !4777
  store %struct.rtx_def* %14, %struct.rtx_def** %rt_rtx34, align 8, !dbg !4778
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4779
  %rt_rtx38 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !4779
  store %struct.rtx_def* %note.0, %struct.rtx_def** %rt_rtx38, align 8, !dbg !4780
  br label %while.cond, !dbg !4755, !llvm.loop !4781

while.end:                                        ; preds = %land.end
  %.lcssa = phi %struct.rtx_def** [ %7, %land.end ], !dbg !4751
  %23 = bitcast %struct.rtx_def** %.lcssa to i8*, !dbg !4783
  tail call void @free(i8* %23) #6, !dbg !4784
  store %struct.rtx_def** null, %struct.rtx_def*** @bb_header, align 8, !dbg !4785
  br label %return, !dbg !4786

return:                                           ; preds = %entry, %while.end
  ret void, !dbg !4786
}

; Function Attrs: nounwind uwtable
define internal fastcc void @advance_one_cycle() unnamed_addr #5 !dbg !4787 {
entry:
  %0 = load i8*, i8** @curr_state, align 8, !dbg !4788
  tail call void @advance_state(i8* %0) #7, !dbg !4789
  %1 = load i32, i32* @sched_verbose, align 4, !dbg !4790
  %cmp = icmp sgt i32 %1, 5, !dbg !4792
  br i1 %cmp, label %if.then, label %if.end, !dbg !4793

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4794
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !4795
  br label %if.end, !dbg !4795

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4796
}

; Function Attrs: nounwind uwtable
define internal fastcc void @queue_to_ready(%struct.ready_list* %ready) unnamed_addr #5 !dbg !4797 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* @ready, metadata !4799, metadata !DIExpression()), !dbg !4806
  %0 = load i32, i32* @q_ptr, align 4, !dbg !4807
  %add = add nsw i32 %0, 1, !dbg !4807
  %1 = load i32, i32* @max_insn_queue_index, align 4, !dbg !4807
  %and = and i32 %add, %1, !dbg !4807
  store i32 %and, i32* @q_ptr, align 4, !dbg !4808
  %call = tail call zeroext i8 @dbg_cnt(i32 29) #6, !dbg !4809
  %cmp = icmp eq i8 %call, 0, !dbg !4811
  br i1 %cmp, label %if.then, label %if.end, !dbg !4812

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !4813
  %call2 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %2) #6, !dbg !4815
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4802, metadata !DIExpression()), !dbg !4806
  br label %while.cond, !dbg !4816

while.cond:                                       ; preds = %while.body, %if.then
  %skip_insn.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ %call5, %while.body ], !dbg !4817
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0, metadata !4802, metadata !DIExpression()), !dbg !4806
  %tobool = icmp eq %struct.rtx_def* %skip_insn.0, null, !dbg !4818
  br i1 %tobool, label %if.end.loopexit, label %land.rhs, !dbg !4819

land.rhs:                                         ; preds = %while.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %skip_insn.0, i64 0, i32 0, !dbg !4820
  %bf.load = load i32, i32* %3, align 8, !dbg !4820
  %bf.clear = and i32 %bf.load, 65535, !dbg !4820
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4820
  br i1 %cmp3, label %while.body, label %if.end.loopexit, !dbg !4816

while.body:                                       ; preds = %land.rhs
  %call5 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* nonnull %skip_insn.0) #6, !dbg !4821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !4802, metadata !DIExpression()), !dbg !4806
  br label %while.cond, !dbg !4816, !llvm.loop !4822

if.end.loopexit:                                  ; preds = %land.rhs, %while.cond
  %skip_insn.0.lcssa = phi %struct.rtx_def* [ %skip_insn.0, %land.rhs ], [ %skip_insn.0, %while.cond ], !dbg !4817
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0.lcssa, metadata !4802, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0.lcssa, metadata !4802, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0.lcssa, metadata !4802, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0.lcssa, metadata !4802, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0.lcssa, metadata !4802, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.0.lcssa, metadata !4802, metadata !DIExpression()), !dbg !4806
  br label %if.end, !dbg !4824

if.end:                                           ; preds = %if.end.loopexit, %entry
  %skip_insn.1 = phi %struct.rtx_def* [ null, %entry ], [ %skip_insn.0.lcssa, %if.end.loopexit ], !dbg !4826
  call void @llvm.dbg.value(metadata %struct.rtx_def* %skip_insn.1, metadata !4802, metadata !DIExpression()), !dbg !4806
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4824
  %5 = load i32, i32* @q_ptr, align 4, !dbg !4827
  %idxprom = sext i32 %5 to i64, !dbg !4824
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %4, i64 %idxprom, !dbg !4824
  br label %for.cond, !dbg !4828

for.cond:                                         ; preds = %for.inc, %if.end
  %link.0.in = phi %struct.rtx_def** [ %arrayidx, %if.end ], [ %rt_rtx42, %for.inc ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !4829
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !4801, metadata !DIExpression()), !dbg !4806
  %tobool6 = icmp eq %struct.rtx_def* %link.0, null, !dbg !4830
  br i1 %tobool6, label %for.end, label %for.body, !dbg !4830

for.body:                                         ; preds = %for.cond
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4831
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !4831
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4831
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4800, metadata !DIExpression()), !dbg !4806
  %7 = load i32, i32* @q_size, align 4, !dbg !4834
  %sub = add nsw i32 %7, -1, !dbg !4834
  store i32 %sub, i32* @q_size, align 4, !dbg !4834
  %8 = load i32, i32* @sched_verbose, align 4, !dbg !4835
  %cmp8 = icmp sgt i32 %8, 1, !dbg !4837
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !4838

if.then10:                                        ; preds = %for.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4839
  %10 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4840
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %10, i64 0, i32 5, !dbg !4841
  %11 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !4841
  %call11 = tail call i8* %11(%struct.rtx_def* %6, i32 0) #6, !dbg !4842
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i8* %call11) #6, !dbg !4843
  br label %if.end13, !dbg !4843

if.end13:                                         ; preds = %if.then10, %for.body
  %12 = load i32, i32* @reload_completed, align 4, !dbg !4844
  %tobool14 = icmp eq i32 %12, 0, !dbg !4844
  br i1 %tobool14, label %land.lhs.true, label %if.else32, !dbg !4846

land.lhs.true:                                    ; preds = %if.end13
  %13 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4847
  %14 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !4848
  %sub15 = sub nsw i32 %13, %14, !dbg !4849
  %15 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4850
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %15, i64 96, i32 1, !dbg !4850
  %16 = load i32, i32* %value, align 8, !dbg !4850
  %cmp17 = icmp sgt i32 %sub15, %16, !dbg !4851
  br i1 %cmp17, label %land.lhs.true19, label %if.else32, !dbg !4852

land.lhs.true19:                                  ; preds = %land.lhs.true
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !4853
  %bf.load20 = load i32, i32* %17, align 8, !dbg !4853
  %bf.clear21 = and i32 %bf.load20, 268435456, !dbg !4853
  %tobool22 = icmp eq i32 %bf.clear21, 0, !dbg !4853
  %cmp24 = icmp ne %struct.rtx_def* %6, %skip_insn.1, !dbg !4854
  %or.cond = and i1 %tobool22, %cmp24, !dbg !4855
  br i1 %or.cond, label %if.then26, label %if.else32, !dbg !4855

if.then26:                                        ; preds = %land.lhs.true19
  %18 = load i32, i32* @sched_verbose, align 4, !dbg !4856
  %cmp27 = icmp sgt i32 %18, 1, !dbg !4859
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !4860

if.then29:                                        ; preds = %if.then26
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4861
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !4862
  br label %if.end31, !dbg !4862

if.end31:                                         ; preds = %if.then29, %if.then26
  tail call fastcc void @queue_insn(%struct.rtx_def* %6, i32 1) #7, !dbg !4863
  br label %for.inc, !dbg !4864

if.else32:                                        ; preds = %if.end13, %land.lhs.true19, %land.lhs.true
  tail call fastcc void @ready_add(%struct.ready_list* nonnull @ready, %struct.rtx_def* %6, i8 zeroext 0) #7, !dbg !4865
  %20 = load i32, i32* @sched_verbose, align 4, !dbg !4867
  %cmp33 = icmp sgt i32 %20, 1, !dbg !4869
  br i1 %cmp33, label %if.then35, label %for.inc, !dbg !4870

if.then35:                                        ; preds = %if.else32
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4871
  %call36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4872
  br label %for.inc, !dbg !4872

for.inc:                                          ; preds = %if.end31, %if.then35, %if.else32
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4873
  %rt_rtx42 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !4873
  br label %for.cond, !dbg !4874, !llvm.loop !4875

for.end:                                          ; preds = %for.cond
  %23 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4877
  %24 = load i32, i32* @q_ptr, align 4, !dbg !4878
  %idxprom43 = sext i32 %24 to i64, !dbg !4877
  %arrayidx44 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %23, i64 %idxprom43, !dbg !4877
  tail call void @free_INSN_LIST_list(%struct.rtx_def** %arrayidx44) #6, !dbg !4879
  %25 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4880
  %cmp46 = icmp eq i32 %25, 0, !dbg !4881
  br i1 %cmp46, label %for.cond49.preheader, label %if.end95, !dbg !4882

for.cond49.preheader:                             ; preds = %for.end
  br label %for.cond49, !dbg !4883

for.cond49:                                       ; preds = %for.cond49.preheader, %if.end89
  %stalls.0 = phi i32 [ %inc, %if.end89 ], [ 1, %for.cond49.preheader ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %stalls.0, metadata !4803, metadata !DIExpression()), !dbg !4886
  %cmp50 = icmp sgt i32 %stalls.0, %1, !dbg !4887
  br i1 %cmp50, label %for.end91.loopexit, label %for.body52, !dbg !4883

for.body52:                                       ; preds = %for.cond49
  %26 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4889
  %27 = load i32, i32* @q_ptr, align 4, !dbg !4892
  %add53 = add nsw i32 %27, %stalls.0, !dbg !4892
  %and54 = and i32 %add53, %1, !dbg !4892
  %idxprom55 = sext i32 %and54 to i64, !dbg !4889
  %arrayidx56 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %26, i64 %idxprom55, !dbg !4889
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx56, align 8, !dbg !4889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %28, metadata !4801, metadata !DIExpression()), !dbg !4806
  %tobool57 = icmp eq %struct.rtx_def* %28, null, !dbg !4893
  br i1 %tobool57, label %if.end89, label %for.cond59.preheader, !dbg !4894

for.cond59.preheader:                             ; preds = %for.body52
  %.lcssa = phi %struct.rtx_def* [ %28, %for.body52 ], !dbg !4889
  %stalls.0.lcssa7 = phi i32 [ %stalls.0, %for.body52 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %stalls.0.lcssa7, metadata !4803, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i32 %stalls.0.lcssa7, metadata !4803, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i32 %stalls.0.lcssa7, metadata !4803, metadata !DIExpression()), !dbg !4886
  br label %for.cond59, !dbg !4895

for.cond59:                                       ; preds = %for.cond59.preheader, %for.inc79
  %link.1 = phi %struct.rtx_def* [ %38, %for.inc79 ], [ %.lcssa, %for.cond59.preheader ], !dbg !4898
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.1, metadata !4801, metadata !DIExpression()), !dbg !4806
  %tobool60 = icmp eq %struct.rtx_def* %link.1, null, !dbg !4895
  br i1 %tobool60, label %for.end84, label %for.body61, !dbg !4895

for.body61:                                       ; preds = %for.cond59
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4899
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !4899
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !4899
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !4800, metadata !DIExpression()), !dbg !4806
  %30 = load i32, i32* @q_size, align 4, !dbg !4902
  %sub66 = add nsw i32 %30, -1, !dbg !4902
  store i32 %sub66, i32* @q_size, align 4, !dbg !4902
  %31 = load i32, i32* @sched_verbose, align 4, !dbg !4903
  %cmp67 = icmp sgt i32 %31, 1, !dbg !4905
  br i1 %cmp67, label %if.then69, label %if.end73, !dbg !4906

if.then69:                                        ; preds = %for.body61
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4907
  %33 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4908
  %print_insn70 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %33, i64 0, i32 5, !dbg !4909
  %34 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn70, align 8, !dbg !4909
  %call71 = tail call i8* %34(%struct.rtx_def* %29, i32 0) #6, !dbg !4910
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i8* %call71) #6, !dbg !4911
  br label %if.end73, !dbg !4911

if.end73:                                         ; preds = %if.then69, %for.body61
  tail call fastcc void @ready_add(%struct.ready_list* nonnull @ready, %struct.rtx_def* %29, i8 zeroext 0) #7, !dbg !4912
  %35 = load i32, i32* @sched_verbose, align 4, !dbg !4913
  %cmp74 = icmp sgt i32 %35, 1, !dbg !4915
  br i1 %cmp74, label %if.then76, label %for.inc79, !dbg !4916

if.then76:                                        ; preds = %if.end73
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4917
  %call77 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i32 %stalls.0.lcssa7) #6, !dbg !4918
  br label %for.inc79, !dbg !4918

for.inc79:                                        ; preds = %if.end73, %if.then76
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4919
  %rt_rtx83 = bitcast %union.rtunion_def* %37 to %struct.rtx_def**, !dbg !4919
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !4919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %38, metadata !4801, metadata !DIExpression()), !dbg !4806
  br label %for.cond59, !dbg !4920, !llvm.loop !4921

for.end84:                                        ; preds = %for.cond59
  %39 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !4923
  %40 = load i32, i32* @q_ptr, align 4, !dbg !4924
  %add85 = add nsw i32 %40, %stalls.0.lcssa7, !dbg !4924
  %and86 = and i32 %add85, %1, !dbg !4924
  %idxprom87 = sext i32 %and86 to i64, !dbg !4923
  %arrayidx88 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %39, i64 %idxprom87, !dbg !4923
  tail call void @free_INSN_LIST_list(%struct.rtx_def** %arrayidx88) #6, !dbg !4925
  tail call fastcc void @advance_one_cycle() #7, !dbg !4926
  br label %for.end91, !dbg !4927

if.end89:                                         ; preds = %for.body52
  tail call fastcc void @advance_one_cycle() #7, !dbg !4928
  %inc = add nuw nsw i32 %stalls.0, 1, !dbg !4929
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4803, metadata !DIExpression()), !dbg !4886
  br label %for.cond49, !dbg !4930, !llvm.loop !4931

for.end91.loopexit:                               ; preds = %for.cond49
  %stalls.0.lcssa = phi i32 [ %stalls.0, %for.cond49 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %stalls.0.lcssa, metadata !4803, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i32 %stalls.0.lcssa, metadata !4803, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i32 %stalls.0.lcssa, metadata !4803, metadata !DIExpression()), !dbg !4886
  br label %for.end91, !dbg !4933

for.end91:                                        ; preds = %for.end91.loopexit, %for.end84
  %stalls.08 = phi i32 [ %stalls.0.lcssa, %for.end91.loopexit ], [ %stalls.0.lcssa7, %for.end84 ]
  %41 = load i32, i32* @q_ptr, align 4, !dbg !4933
  %add92 = add nsw i32 %41, %stalls.08, !dbg !4933
  %and93 = and i32 %add92, %1, !dbg !4933
  store i32 %and93, i32* @q_ptr, align 4, !dbg !4934
  %42 = load i32, i32* @clock_var, align 4, !dbg !4935
  %add94 = add nsw i32 %42, %stalls.08, !dbg !4935
  store i32 %add94, i32* @clock_var, align 4, !dbg !4935
  br label %if.end95, !dbg !4936

if.end95:                                         ; preds = %for.end91, %for.end
  ret void, !dbg !4937
}

; Function Attrs: nounwind uwtable
define internal fastcc void @debug_ready_list(%struct.ready_list* %ready) unnamed_addr #5 !dbg !4938 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* @ready, metadata !4940, metadata !DIExpression()), !dbg !4943
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4944
  %cmp = icmp eq i32 %0, 0, !dbg !4946
  br i1 %cmp, label %if.then, label %if.end, !dbg !4947

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4948
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4950
  br label %cleanup.cont, !dbg !4951

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #7, !dbg !4952
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call1, metadata !4941, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata i32 0, metadata !4942, metadata !DIExpression()), !dbg !4943
  br label %for.cond, !dbg !4953

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end ], !dbg !4955
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4942, metadata !DIExpression()), !dbg !4943
  %2 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !4956
  %3 = sext i32 %2 to i64, !dbg !4958
  %cmp3 = icmp slt i64 %indvars.iv, %3, !dbg !4958
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4943
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4959

for.body:                                         ; preds = %for.cond
  %5 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !4960
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %5, i64 0, i32 5, !dbg !4962
  %6 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !4962
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %call1, i64 %indvars.iv, !dbg !4963
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4963
  %call4 = tail call i8* %6(%struct.rtx_def* %7, i32 0) #6, !dbg !4964
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !4965
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %8, i64 0, i32 0, !dbg !4965
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4965
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4965
  %rt_int = bitcast %union.rtunion_def* %arrayidx7 to i32*, !dbg !4965
  %10 = load i32, i32* %rt_int, align 8, !dbg !4965
  %call8 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %10) #7, !dbg !4965
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i8* %call4, i32 %call8) #6, !dbg !4966
  %11 = load i8, i8* @sched_pressure_p, align 1, !dbg !4967
  %tobool10 = icmp eq i8 %11, 0, !dbg !4967
  br i1 %tobool10, label %if.end26, label %if.then11, !dbg !4969

if.then11:                                        ; preds = %for.body
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4970
  %13 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4971
  %base14 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %13, i64 0, i32 0, !dbg !4971
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4971
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4971
  %rt_int23 = bitcast %union.rtunion_def* %arrayidx22 to i32*, !dbg !4971
  %15 = load i32, i32* %rt_int23, align 8, !dbg !4971
  %call24 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base14, i32 %15) #7, !dbg !4971
  %reg_pressure_excess_cost_change = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call24, i64 0, i32 17, !dbg !4971
  %16 = load i32, i32* %reg_pressure_excess_cost_change, align 8, !dbg !4971
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i32 %16) #6, !dbg !4972
  br label %if.end26, !dbg !4972

if.end26:                                         ; preds = %for.body, %if.then11
  %17 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4973
  %base29 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %17, i64 0, i32 0, !dbg !4973
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4973
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4973
  %rt_int38 = bitcast %union.rtunion_def* %arrayidx37 to i32*, !dbg !4973
  %19 = load i32, i32* %rt_int38, align 8, !dbg !4973
  %call39 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base29, i32 %19) #7, !dbg !4973
  %tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call39, i64 0, i32 2, !dbg !4973
  %20 = load i32, i32* %tick, align 8, !dbg !4973
  %21 = load i32, i32* @clock_var, align 4, !dbg !4975
  %cmp40 = icmp sgt i32 %20, %21, !dbg !4976
  br i1 %cmp40, label %if.then41, label %if.end57, !dbg !4977

if.then41:                                        ; preds = %if.end26
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4978
  %23 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !4979
  %base44 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %23, i64 0, i32 0, !dbg !4979
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !4979
  %arrayidx52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4979
  %rt_int53 = bitcast %union.rtunion_def* %arrayidx52 to i32*, !dbg !4979
  %25 = load i32, i32* %rt_int53, align 8, !dbg !4979
  %call54 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base44, i32 %25) #7, !dbg !4979
  %tick55 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call54, i64 0, i32 2, !dbg !4979
  %26 = load i32, i32* %tick55, align 8, !dbg !4979
  %27 = load i32, i32* @clock_var, align 4, !dbg !4980
  %sub = sub nsw i32 %26, %27, !dbg !4981
  %call56 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i32 %sub) #6, !dbg !4982
  br label %if.end57, !dbg !4982

if.end57:                                         ; preds = %if.then41, %if.end26
  %28 = load i8, i8* @sched_pressure_p, align 1, !dbg !4983
  %tobool58 = icmp eq i8 %28, 0, !dbg !4983
  br i1 %tobool58, label %for.inc, label %if.then59, !dbg !4985

if.then59:                                        ; preds = %if.end57
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !4986
  %call60 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !4987
  br label %for.inc, !dbg !4987

for.inc:                                          ; preds = %if.end57, %if.then59
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4988
  call void @llvm.dbg.value(metadata i32 undef, metadata !4942, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4943
  br label %for.cond, !dbg !4989, !llvm.loop !4990

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct._IO_FILE* [ %4, %for.cond ], !dbg !4943
  %call62 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4992
  br label %cleanup.cont, !dbg !4993

cleanup.cont:                                     ; preds = %if.then, %for.end
  ret void, !dbg !4993
}

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @next_real_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* %ready) unnamed_addr #5 !dbg !4994 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* @ready, metadata !4998, metadata !DIExpression()), !dbg !5000
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5001
  %tobool = icmp eq i32 %0, 0, !dbg !5001
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5001

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1430, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5001
  %.pre = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5002
  br label %cond.end, !dbg !5001

cond.end:                                         ; preds = %entry, %cond.true
  %1 = phi i32 [ %0, %entry ], [ %.pre, %cond.true ], !dbg !5002
  %2 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !5003
  %3 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !5004
  %dec = add nsw i32 %3, -1, !dbg !5004
  store i32 %dec, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !5004
  %idxprom = sext i32 %3 to i64, !dbg !5005
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !5005
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !4999, metadata !DIExpression()), !dbg !5000
  %dec2 = add nsw i32 %1, -1, !dbg !5002
  store i32 %dec2, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5002
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !5006
  %bf.load = load i32, i32* %5, align 8, !dbg !5006
  %bf.clear = and i32 %bf.load, 65535, !dbg !5006
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !5006
  br i1 %cmp, label %if.then, label %if.end, !dbg !5008

if.then:                                          ; preds = %cond.end
  %6 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !5009
  %dec3 = add nsw i32 %6, -1, !dbg !5009
  store i32 %dec3, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !5009
  br label %if.end, !dbg !5010

if.end:                                           ; preds = %if.then, %cond.end
  %cmp5 = icmp eq i32 %dec2, 0, !dbg !5011
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !5013

if.then6:                                         ; preds = %if.end
  %7 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !5014
  %sub = add nsw i32 %7, -1, !dbg !5015
  store i32 %sub, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !5016
  br label %if.end8, !dbg !5017

if.end8:                                          ; preds = %if.then6, %if.end
  %8 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5018
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %8, i64 0, i32 0, !dbg !5018
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5018
  %rt_int = bitcast %union.rtunion_def* %arrayidx14 to i32*, !dbg !5018
  %9 = load i32, i32* %rt_int, align 8, !dbg !5018
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %9) #7, !dbg !5018
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 4, !dbg !5018
  %10 = load i32, i32* %queue_index, align 8, !dbg !5018
  %cmp15 = icmp eq i32 %10, -1, !dbg !5018
  br i1 %cmp15, label %cond.end18, label %cond.true16, !dbg !5018

cond.true16:                                      ; preds = %if.end8
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1439, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5018
  br label %cond.end18, !dbg !5018

cond.end18:                                       ; preds = %if.end8, %cond.true16
  %11 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5019
  %base22 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %11, i64 0, i32 0, !dbg !5019
  %12 = load i32, i32* %rt_int, align 8, !dbg !5019
  %call30 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base22, i32 %12) #7, !dbg !5019
  %queue_index31 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call30, i64 0, i32 4, !dbg !5019
  store i32 -2, i32* %queue_index31, align 8, !dbg !5020
  ret %struct.rtx_def* %4, !dbg !5021
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_insn(%struct.rtx_def* %insn, %struct.rtx_def* %last, %struct.rtx_def* %nt) unnamed_addr #5 !dbg !5022 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5026, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last, metadata !5027, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %nt, metadata !5028, metadata !DIExpression()), !dbg !5034
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5035
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5035
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5035
  %cmp = icmp eq %struct.rtx_def* %1, %last, !dbg !5036
  br i1 %cmp, label %if.end217, label %if.then, !dbg !5037

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !5033, metadata !DIExpression()), !dbg !5038
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !5039
  %rt_bb = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !5039
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5039
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !5029, metadata !DIExpression()), !dbg !5038
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !5040
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5040
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5040
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 0, !dbg !5040
  %4 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5040
  %cmp4 = icmp eq %struct.rtx_def* %4, %insn, !dbg !5040
  br i1 %cmp4, label %cond.true, label %cond.end, !dbg !5040

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2298, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5040
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5041
  br label %cond.end, !dbg !5040

cond.end:                                         ; preds = %if.then, %cond.true
  %5 = phi %struct.rtl_bb_info* [ %3, %if.then ], [ %.pre, %cond.true ], !dbg !5041
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 1, !dbg !5041
  %6 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5041
  %cmp7 = icmp eq %struct.rtx_def* %6, %insn, !dbg !5043
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !5044

if.then8:                                         ; preds = %cond.end
  %call = tail call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %insn) #6, !dbg !5045
  %conv = zext i8 %call to i32, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5033, metadata !DIExpression()), !dbg !5038
  %tobool = icmp eq i8 %call, 0, !dbg !5047
  br i1 %tobool, label %cond.end43, label %lor.lhs.false, !dbg !5047

lor.lhs.false:                                    ; preds = %if.then8
  %7 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !5047
  %sched_pass_id = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %7, i64 0, i32 4, !dbg !5047
  %8 = load i32, i32* %sched_pass_id, align 8, !dbg !5047
  %cmp9 = icmp eq i32 %8, 1, !dbg !5047
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false37, !dbg !5047

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5047
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %9, i64 0, i32 0, !dbg !5047
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5047
  %rt_int = bitcast %union.rtunion_def* %arrayidx18 to i32*, !dbg !5047
  %10 = load i32, i32* %rt_int, align 8, !dbg !5047
  %call19 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %10) #7, !dbg !5047
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call19, i64 0, i32 11, !dbg !5047
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !5047
  %cmp20 = icmp eq %struct.basic_block_def* %11, null, !dbg !5047
  br i1 %cmp20, label %lor.lhs.false37, label %land.lhs.true22, !dbg !5047

land.lhs.true22:                                  ; preds = %land.lhs.true
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5047
  %base25 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %12, i64 0, i32 0, !dbg !5047
  %13 = load i32, i32* %rt_int, align 8, !dbg !5047
  %call33 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base25, i32 %13) #7, !dbg !5047
  %recovery_block34 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call33, i64 0, i32 11, !dbg !5047
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block34, align 8, !dbg !5047
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5047
  %cfg = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 1, !dbg !5047
  %16 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5047
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %16, i64 0, i32 1, !dbg !5047
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5047
  %cmp35 = icmp eq %struct.basic_block_def* %14, %17, !dbg !5047
  br i1 %cmp35, label %lor.lhs.false37, label %cond.end43, !dbg !5047

lor.lhs.false37:                                  ; preds = %land.lhs.true22, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !5047
  %sched_pass_id38 = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %18, i64 0, i32 4, !dbg !5047
  %19 = load i32, i32* %sched_pass_id38, align 8, !dbg !5047
  %cmp39 = icmp eq i32 %19, 2, !dbg !5047
  br i1 %cmp39, label %cond.end43, label %cond.true41, !dbg !5047

cond.true41:                                      ; preds = %lor.lhs.false37
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2311, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5047
  br label %cond.end43, !dbg !5047

cond.end43:                                       ; preds = %land.lhs.true22, %if.then8, %lor.lhs.false37, %cond.true41
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5048
  %arrayidx51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 1, !dbg !5048
  %rt_bb52 = bitcast %struct.object_block** %arrayidx51 to %struct.basic_block_def**, !dbg !5048
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb52, align 8, !dbg !5048
  %cmp53 = icmp eq %struct.basic_block_def* %21, %2, !dbg !5048
  br i1 %cmp53, label %cond.end43.cond.end57_crit_edge, label %cond.true55, !dbg !5048

cond.end43.cond.end57_crit_edge:                  ; preds = %cond.end43
  %22 = ptrtoint %struct.rtx_def* %20 to i64, !dbg !5048
  br label %cond.end57, !dbg !5048

cond.true55:                                      ; preds = %cond.end43
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5048
  %.phi.trans.insert = bitcast %union.rtunion_def* %0 to i64*, !dbg !5049
  %.pre1 = load i64, i64* %.phi.trans.insert, align 8, !dbg !5050
  br label %cond.end57, !dbg !5048

cond.end57:                                       ; preds = %cond.end43.cond.end57_crit_edge, %cond.true55
  %23 = phi i64 [ %22, %cond.end43.cond.end57_crit_edge ], [ %.pre1, %cond.true55 ], !dbg !5050
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5051
  %end_65 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 1, !dbg !5051
  %25 = bitcast %struct.rtx_def** %end_65 to i64*, !dbg !5052
  store i64 %23, i64* %25, align 8, !dbg !5052
  %.pre2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5053
  %end_68.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre2, i64 0, i32 1, !dbg !5038
  %.pre3 = load %struct.rtx_def*, %struct.rtx_def** %end_68.phi.trans.insert, align 8, !dbg !5053
  br label %if.end, !dbg !5054

if.end:                                           ; preds = %cond.end57, %cond.end
  %26 = phi %struct.rtx_def* [ %.pre3, %cond.end57 ], [ %6, %cond.end ], !dbg !5053
  %jump_p.0 = phi i32 [ %conv, %cond.end57 ], [ 0, %cond.end ], !dbg !5038
  call void @llvm.dbg.value(metadata i32 %jump_p.0, metadata !5033, metadata !DIExpression()), !dbg !5038
  %cmp69 = icmp eq %struct.rtx_def* %26, %last, !dbg !5053
  br i1 %cmp69, label %cond.true71, label %cond.end73, !dbg !5053

cond.true71:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2318, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5053
  br label %cond.end73, !dbg !5053

cond.end73:                                       ; preds = %if.end, %cond.true71
  %tobool75 = icmp eq i32 %jump_p.0, 0, !dbg !5055
  br i1 %tobool75, label %if.end134, label %if.then76, !dbg !5057

if.then76:                                        ; preds = %cond.end73
  %tobool77 = icmp eq %struct.rtx_def* %nt, null, !dbg !5058
  br i1 %tobool77, label %cond.true78, label %cond.end80, !dbg !5058

cond.true78:                                      ; preds = %if.then76
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2323, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5058
  br label %cond.end80, !dbg !5058

cond.end80:                                       ; preds = %if.then76, %cond.true78
  br label %while.cond, !dbg !5060

while.cond:                                       ; preds = %while.body, %cond.end80
  %insn.pn = phi %struct.rtx_def* [ %insn, %cond.end80 ], [ %note.0, %while.body ]
  %note.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5061
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !5061
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !5061
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !5032, metadata !DIExpression()), !dbg !5038
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !5062
  %bf.load = load i32, i32* %27, align 8, !dbg !5062
  %bf.clear = and i32 %bf.load, 65535, !dbg !5062
  %cmp86 = icmp eq i32 %bf.clear, 13, !dbg !5062
  br i1 %cmp86, label %land.lhs.true88, label %while.end, !dbg !5062

land.lhs.true88:                                  ; preds = %while.cond
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, !dbg !5062
  %28 = getelementptr inbounds %union.u, %union.u* %u89, i64 1, i32 0, i32 0, i64 0, !dbg !5062
  %rt_int92 = bitcast %union.rtunion_def* %28 to i32*, !dbg !5062
  %29 = load i32, i32* %rt_int92, align 8, !dbg !5062
  %cmp93 = icmp ne i32 %29, 10, !dbg !5062
  %cmp95 = icmp ne %struct.rtx_def* %note.0, %nt, !dbg !5063
  %spec.select = and i1 %cmp95, %cmp93, !dbg !5064
  br i1 %spec.select, label %while.body, label %while.end, !dbg !5060

while.body:                                       ; preds = %land.lhs.true88
  br label %while.cond, !dbg !5060, !llvm.loop !5065

while.end:                                        ; preds = %while.cond, %land.lhs.true88
  %note.0.lcssa = phi %struct.rtx_def* [ %note.0, %while.cond ], [ %note.0, %land.lhs.true88 ], !dbg !5061
  %bf.clear.lcssa = phi i32 [ %bf.clear, %while.cond ], [ %bf.clear, %land.lhs.true88 ], !dbg !5062
  %cmp101 = icmp eq %struct.rtx_def* %note.0.lcssa, %nt, !dbg !5067
  br i1 %cmp101, label %if.end118, label %land.lhs.true103, !dbg !5069

land.lhs.true103:                                 ; preds = %while.end
  %cmp106 = icmp eq i32 %bf.clear.lcssa, 12, !dbg !5070
  br i1 %cmp106, label %if.then113, label %lor.lhs.false108, !dbg !5071

lor.lhs.false108:                                 ; preds = %land.lhs.true103
  %cmp111 = icmp eq i32 %bf.clear.lcssa, 11, !dbg !5072
  br i1 %cmp111, label %if.then113, label %if.end118, !dbg !5073

if.then113:                                       ; preds = %lor.lhs.false108, %land.lhs.true103
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0.lcssa, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5074
  %rt_rtx117 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !5074
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx117, align 8, !dbg !5074
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !5032, metadata !DIExpression()), !dbg !5038
  br label %if.end118, !dbg !5075

if.end118:                                        ; preds = %while.end, %if.then113, %lor.lhs.false108
  %note.1 = phi %struct.rtx_def* [ %31, %if.then113 ], [ %note.0.lcssa, %lor.lhs.false108 ], [ %nt, %while.end ], !dbg !5061
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.1, metadata !5032, metadata !DIExpression()), !dbg !5038
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 0, !dbg !5076
  %bf.load119 = load i32, i32* %32, align 8, !dbg !5076
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !5076
  %cmp121 = icmp eq i32 %bf.clear120, 13, !dbg !5076
  br i1 %cmp121, label %land.lhs.true123, label %cond.true130, !dbg !5076

land.lhs.true123:                                 ; preds = %if.end118
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 1, !dbg !5076
  %33 = getelementptr inbounds %union.u, %union.u* %u124, i64 1, i32 0, i32 0, i64 0, !dbg !5076
  %rt_int127 = bitcast %union.rtunion_def* %33 to i32*, !dbg !5076
  %34 = load i32, i32* %rt_int127, align 8, !dbg !5076
  %cmp128 = icmp eq i32 %34, 10, !dbg !5076
  br i1 %cmp128, label %if.end134, label %cond.true130, !dbg !5076

cond.true130:                                     ; preds = %land.lhs.true123, %if.end118
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2334, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5076
  br label %if.end134, !dbg !5076

if.end134:                                        ; preds = %cond.end73, %cond.true130, %land.lhs.true123
  %note.2 = phi %struct.rtx_def* [ %note.1, %land.lhs.true123 ], [ %note.1, %cond.true130 ], [ %insn, %cond.end73 ], !dbg !5077
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.2, metadata !5032, metadata !DIExpression()), !dbg !5038
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5078
  %36 = bitcast %union.rtunion_def* %35 to i64*, !dbg !5078
  %37 = load i64, i64* %36, align 8, !dbg !5078
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5079
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5079
  %40 = bitcast %union.rtunion_def* %39 to i64*, !dbg !5080
  store i64 %37, i64* %40, align 8, !dbg !5080
  %41 = bitcast %union.rtunion_def* %0 to i64*, !dbg !5081
  %42 = load i64, i64* %41, align 8, !dbg !5081
  %rt_rtx154 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !5082
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx154, align 8, !dbg !5082
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5082
  %45 = bitcast %union.rtunion_def* %44 to i64*, !dbg !5083
  store i64 %42, i64* %45, align 8, !dbg !5083
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5084
  %47 = bitcast %union.rtunion_def* %46 to i64*, !dbg !5084
  %48 = load i64, i64* %47, align 8, !dbg !5084
  store i64 %48, i64* %36, align 8, !dbg !5085
  %rt_rtx170 = bitcast %union.rtunion_def* %46 to %struct.rtx_def**, !dbg !5086
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx170, align 8, !dbg !5086
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5086
  %rt_rtx174 = bitcast %union.rtunion_def* %50 to %struct.rtx_def**, !dbg !5086
  store %struct.rtx_def* %note.2, %struct.rtx_def** %rt_rtx174, align 8, !dbg !5087
  store %struct.rtx_def* %insn, %struct.rtx_def** %rt_rtx170, align 8, !dbg !5088
  store %struct.rtx_def* %last, %struct.rtx_def** %rt_rtx, align 8, !dbg !5089
  %arrayidx185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last, i64 0, i32 1, i32 0, i32 1, !dbg !5090
  %rt_bb186 = bitcast %struct.object_block** %arrayidx185 to %struct.basic_block_def**, !dbg !5090
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb186, align 8, !dbg !5090
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %51, metadata !5029, metadata !DIExpression()), !dbg !5038
  br i1 %tobool75, label %if.end134.if.end206_crit_edge, label %if.then188, !dbg !5091

if.end134.if.end206_crit_edge:                    ; preds = %if.end134
  br label %if.end206, !dbg !5091

if.then188:                                       ; preds = %if.end134
  tail call fastcc void @fix_jump_move(%struct.rtx_def* %insn) #7, !dbg !5092
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5095
  %cmp193 = icmp eq %struct.basic_block_def* %52, %51, !dbg !5097
  br i1 %cmp193, label %if.end196, label %if.then195, !dbg !5098

if.then195:                                       ; preds = %if.then188
  tail call fastcc void @move_block_after_check(%struct.rtx_def* %insn) #7, !dbg !5099
  br label %if.end196, !dbg !5099

if.end196:                                        ; preds = %if.then188, %if.then195
  %il197 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i64 0, i32 7, !dbg !5100
  %rtl198 = bitcast %union.basic_block_il_dependent* %il197 to %struct.rtl_bb_info**, !dbg !5100
  %53 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl198, align 8, !dbg !5100
  %end_199 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %53, i64 0, i32 1, !dbg !5100
  %54 = load %struct.rtx_def*, %struct.rtx_def** %end_199, align 8, !dbg !5100
  %cmp200 = icmp eq %struct.rtx_def* %54, %last, !dbg !5100
  br i1 %cmp200, label %if.end206, label %cond.true202, !dbg !5100

cond.true202:                                     ; preds = %if.end196
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 2357, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5100
  br label %if.end206, !dbg !5100

if.end206:                                        ; preds = %if.end134.if.end206_crit_edge, %cond.true202, %if.end196
  tail call void @df_insn_change_bb(%struct.rtx_def* %insn, %struct.basic_block_def* %51) #6, !dbg !5101
  %il207 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i64 0, i32 7, !dbg !5102
  %rtl208 = bitcast %union.basic_block_il_dependent* %il207 to %struct.rtl_bb_info**, !dbg !5102
  %55 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl208, align 8, !dbg !5102
  %end_209 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %55, i64 0, i32 1, !dbg !5102
  %56 = load %struct.rtx_def*, %struct.rtx_def** %end_209, align 8, !dbg !5102
  %cmp210 = icmp eq %struct.rtx_def* %56, %last, !dbg !5104
  br i1 %cmp210, label %if.then212, label %if.end217, !dbg !5105

if.then212:                                       ; preds = %if.end206
  store %struct.rtx_def* %insn, %struct.rtx_def** %end_209, align 8, !dbg !5106
  br label %if.end217, !dbg !5107

if.end217:                                        ; preds = %entry, %if.end206, %if.then212
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5108
  %bf.load218 = load i32, i32* %57, align 8, !dbg !5109
  %bf.clear219 = and i32 %bf.load218, -268435457, !dbg !5109
  store i32 %bf.clear219, i32* %57, align 8, !dbg !5109
  ret void, !dbg !5110
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @schedule_insn(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5111 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %buf = alloca [2048 x i8], align 16
  %tmp = alloca %struct._sd_iterator, align 8
  %tmp144 = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5113, metadata !DIExpression()), !dbg !5137
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !5138
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5138
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !5139
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5139
  call void @llvm.dbg.value(metadata i32 0, metadata !5117, metadata !DIExpression()), !dbg !5137
  %2 = load i32, i32* @sched_verbose, align 4, !dbg !5140
  %cmp = icmp sgt i32 %2, 0, !dbg !5141
  br i1 %cmp, label %if.then, label %if.end23, !dbg !5142

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i64 0, i64 0, !dbg !5143
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %3) #8, !dbg !5143
  call void @llvm.dbg.declare(metadata [2048 x i8]* %buf, metadata !5121, metadata !DIExpression()), !dbg !5144
  call void @print_insn(i8* nonnull %3, %struct.rtx_def* %insn, i32 0) #6, !dbg !5145
  %arrayidx = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i64 0, i64 40, !dbg !5146
  store i8 0, i8* %arrayidx, align 8, !dbg !5147
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5148
  %5 = load i32, i32* @clock_var, align 4, !dbg !5149
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0), i32 %5, i8* nonnull %3) #6, !dbg !5150
  %call2 = call fastcc i32 @recog_memoized(%struct.rtx_def* %insn) #7, !dbg !5151
  %cmp3 = icmp slt i32 %call2, 0, !dbg !5153
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5154
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !5155

if.then4:                                         ; preds = %if.then
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !5156
  br label %if.end, !dbg !5156

if.else:                                          ; preds = %if.then
  call void @print_reservation(%struct._IO_FILE* %6, %struct.rtx_def* %insn) #6, !dbg !5157
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %7 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5158
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %7, i64 0, i32 0, !dbg !5158
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5158
  %rt_int = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !5158
  %8 = load i32, i32* %rt_int, align 8, !dbg !5158
  %call7 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %8) #7, !dbg !5158
  %reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call7, i64 0, i32 13, !dbg !5158
  %9 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** %reg_pressure, align 8, !dbg !5158
  call void @llvm.dbg.value(metadata %struct.reg_pressure_data* %9, metadata !5118, metadata !DIExpression()), !dbg !5159
  %cmp8 = icmp eq %struct.reg_pressure_data* %9, null, !dbg !5160
  br i1 %cmp8, label %if.end21, label %if.then9, !dbg !5162

if.then9:                                         ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5163
  %call10 = call i32 @fputc(i32 58, %struct._IO_FILE* %10) #6, !dbg !5165
  call void @llvm.dbg.value(metadata i32 0, metadata !5116, metadata !DIExpression()), !dbg !5137
  br label %for.cond, !dbg !5166

for.cond:                                         ; preds = %for.body, %if.then9
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then9 ], !dbg !5168
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5116, metadata !DIExpression()), !dbg !5137
  %11 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !5169
  %12 = sext i32 %11 to i64, !dbg !5171
  %cmp11 = icmp slt i64 %indvars.iv, %12, !dbg !5171
  br i1 %cmp11, label %for.body, label %if.end21.loopexit, !dbg !5172

for.body:                                         ; preds = %for.cond
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5173
  %arrayidx12 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !5174
  %14 = load i32, i32* %arrayidx12, align 4, !dbg !5174
  %idxprom13 = zext i32 %14 to i64, !dbg !5175
  %arrayidx14 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom13, !dbg !5175
  %15 = load i8*, i8** %arrayidx14, align 8, !dbg !5175
  %16 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %9, i64 %indvars.iv, i32 0, !dbg !5176
  %bf.load = load i32, i32* %16, align 4, !dbg !5176
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !5176
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5176
  %bf.ashr = ashr i32 %bf.load, 24, !dbg !5177
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0), i8* %15, i32 %bf.clear, i32 %bf.ashr) #6, !dbg !5178
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5179
  call void @llvm.dbg.value(metadata i32 undef, metadata !5116, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5137
  br label %for.cond, !dbg !5180, !llvm.loop !5181

if.end21.loopexit:                                ; preds = %for.cond
  br label %if.end21, !dbg !5183

if.end21:                                         ; preds = %if.end21.loopexit, %if.end
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5183
  %call22 = call i32 @fputc(i32 10, %struct._IO_FILE* %17) #6, !dbg !5184
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %3) #8, !dbg !5185
  br label %if.end23, !dbg !5186

if.end23:                                         ; preds = %if.end21, %entry
  %18 = load i8, i8* @sched_pressure_p, align 1, !dbg !5187
  %tobool24 = icmp eq i8 %18, 0, !dbg !5187
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5189

if.then25:                                        ; preds = %if.end23
  call fastcc void @update_reg_and_insn_max_reg_pressure(%struct.rtx_def* %insn) #7, !dbg !5190
  br label %if.end26, !dbg !5190

if.end26:                                         ; preds = %if.end23, %if.then25
  %call27 = call zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %insn, i32 3) #6, !dbg !5191
  %tobool28 = icmp eq i8 %call27, 0, !dbg !5191
  br i1 %tobool28, label %cond.true29, label %cond.end31, !dbg !5191

cond.true29:                                      ; preds = %if.end26
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1699, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5191
  br label %cond.end31, !dbg !5191

cond.end31:                                       ; preds = %if.end26, %cond.true29
  %19 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5192
  %tobool33 = icmp eq i32 %19, 0, !dbg !5192
  br i1 %tobool33, label %if.end67, label %land.lhs.true, !dbg !5193

land.lhs.true:                                    ; preds = %cond.end31
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5194
  %bf.load34 = load i32, i32* %20, align 8, !dbg !5194
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !5194
  %cmp36 = icmp eq i32 %bf.clear35, 7, !dbg !5194
  br i1 %cmp36, label %if.end67, label %if.then37, !dbg !5195

if.then37:                                        ; preds = %land.lhs.true
  %21 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !5196
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #8, !dbg !5196
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 3) #7, !dbg !5196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %21, i64 32, i1 false), !dbg !5196
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8, !dbg !5196
  br label %for.cond38, !dbg !5197

for.cond38:                                       ; preds = %if.end56, %if.then37
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5114, metadata !DIExpression(DW_OP_deref)), !dbg !5137
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !5115, metadata !DIExpression(DW_OP_deref)), !dbg !5137
  %call39 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !5198
  %tobool40 = icmp eq i8 %call39, 0, !dbg !5199
  br i1 %tobool40, label %if.end67.loopexit, label %for.body41, !dbg !5199

for.body41:                                       ; preds = %for.cond38
  %22 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5200
  call void @llvm.dbg.value(metadata %struct._dep* %22, metadata !5115, metadata !DIExpression()), !dbg !5137
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %22, i64 0, i32 0, !dbg !5200
  %23 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !5200
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !5125, metadata !DIExpression()), !dbg !5201
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 0, !dbg !5202
  %bf.load42 = load i32, i32* %24, align 8, !dbg !5202
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !5202
  %cmp44 = icmp eq i32 %bf.clear43, 7, !dbg !5202
  br i1 %cmp44, label %cond.end47, label %cond.true45, !dbg !5202

cond.true45:                                      ; preds = %for.body41
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1708, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5202
  br label %cond.end47, !dbg !5202

cond.end47:                                       ; preds = %for.body41, %cond.true45
  %25 = load i32, i32* @sched_verbose, align 4, !dbg !5203
  %cmp49 = icmp sgt i32 %25, 5, !dbg !5205
  br i1 %cmp49, label %if.then50, label %if.end56, !dbg !5206

if.then50:                                        ; preds = %cond.end47
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5207
  %arrayidx53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5208
  %rt_int54 = bitcast %union.rtunion_def* %arrayidx53 to i32*, !dbg !5208
  %27 = load i32, i32* %rt_int54, align 8, !dbg !5208
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0), i32 %27) #6, !dbg !5209
  br label %if.end56, !dbg !5209

if.end56:                                         ; preds = %if.then50, %cond.end47
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5210
  %call57 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %28) #6, !dbg !5210
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, !dbg !5211
  %29 = getelementptr inbounds %union.u, %union.u* %u58, i64 1, i32 0, i32 0, i64 0, !dbg !5211
  %rt_rtx = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !5211
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5211
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5211
  %rt_rtx64 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !5211
  store %struct.rtx_def* %call57, %struct.rtx_def** %rt_rtx64, align 8, !dbg !5212
  %call65 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %23) #6, !dbg !5213
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5114, metadata !DIExpression(DW_OP_deref)), !dbg !5137
  call void @sd_delete_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #6, !dbg !5214
  br label %for.cond38, !dbg !5215, !llvm.loop !5216

if.end67.loopexit:                                ; preds = %for.cond38
  br label %if.end67, !dbg !5218

if.end67:                                         ; preds = %if.end67.loopexit, %cond.end31, %land.lhs.true
  %32 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5218
  %base70 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %32, i64 0, i32 0, !dbg !5218
  %arrayidx76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5218
  %rt_int77 = bitcast %union.rtunion_def* %arrayidx76 to i32*, !dbg !5218
  %33 = load i32, i32* %rt_int77, align 8, !dbg !5218
  %call78 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base70, i32 %33) #7, !dbg !5218
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call78, i64 0, i32 4, !dbg !5218
  %34 = load i32, i32* %queue_index, align 8, !dbg !5218
  %cmp79 = icmp eq i32 %34, -2, !dbg !5218
  br i1 %cmp79, label %cond.end82, label %cond.true80, !dbg !5218

cond.true80:                                      ; preds = %if.end67
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1734, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5218
  br label %cond.end82, !dbg !5218

cond.end82:                                       ; preds = %if.end67, %cond.true80
  %35 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5219
  %base86 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %35, i64 0, i32 0, !dbg !5219
  %36 = load i32, i32* %rt_int77, align 8, !dbg !5219
  %call94 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base86, i32 %36) #7, !dbg !5219
  %queue_index95 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call94, i64 0, i32 4, !dbg !5219
  store i32 -3, i32* %queue_index95, align 8, !dbg !5220
  %37 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5221
  %base98 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %37, i64 0, i32 0, !dbg !5221
  %38 = load i32, i32* %rt_int77, align 8, !dbg !5221
  %call106 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base98, i32 %38) #7, !dbg !5221
  %tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call106, i64 0, i32 2, !dbg !5221
  %39 = load i32, i32* %tick, align 8, !dbg !5221
  %40 = load i32, i32* @max_insn_queue_index, align 4, !dbg !5221
  %sub = sub nsw i32 0, %40, !dbg !5221
  %cmp107 = icmp slt i32 %39, %sub, !dbg !5221
  br i1 %cmp107, label %cond.true108, label %cond.end110, !dbg !5221

cond.true108:                                     ; preds = %cond.end82
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1737, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5221
  br label %cond.end110, !dbg !5221

cond.end110:                                      ; preds = %cond.end82, %cond.true108
  %41 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5222
  %base114 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %41, i64 0, i32 0, !dbg !5222
  %42 = load i32, i32* %rt_int77, align 8, !dbg !5222
  %call122 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base114, i32 %42) #7, !dbg !5222
  %tick123 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call122, i64 0, i32 2, !dbg !5222
  %43 = load i32, i32* %tick123, align 8, !dbg !5222
  %44 = load i32, i32* @clock_var, align 4, !dbg !5224
  %cmp124 = icmp sle i32 %43, %44, !dbg !5225
  %45 = load i32, i32* @flag_sched_stalled_insns, align 4, !dbg !5226
  %tobool126 = icmp ne i32 %45, 0, !dbg !5226
  %or.cond1 = or i1 %cmp124, %tobool126, !dbg !5227
  br i1 %or.cond1, label %if.end131, label %cond.true127, !dbg !5227

cond.true127:                                     ; preds = %cond.end110
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1741, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5226
  %.pre = load i32, i32* @clock_var, align 4, !dbg !5228
  br label %if.end131, !dbg !5226

if.end131:                                        ; preds = %cond.end110, %cond.true127
  %46 = phi i32 [ %44, %cond.end110 ], [ %.pre, %cond.true127 ], !dbg !5228
  %47 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5229
  %base134 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %47, i64 0, i32 0, !dbg !5229
  %48 = load i32, i32* %rt_int77, align 8, !dbg !5229
  %call142 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base134, i32 %48) #7, !dbg !5229
  %tick143 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call142, i64 0, i32 2, !dbg !5229
  store i32 %46, i32* %tick143, align 8, !dbg !5230
  %49 = bitcast %struct._sd_iterator* %tmp144 to i8*, !dbg !5231
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #8, !dbg !5231
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp144, %struct.rtx_def* %insn, i32 4) #7, !dbg !5231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %49, i64 32, i1 false), !dbg !5231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #8, !dbg !5231
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5232
  br label %for.cond145, !dbg !5234

for.cond145:                                      ; preds = %cleanup, %if.end131
  %advance.0 = phi i32 [ 0, %if.end131 ], [ %advance.3, %cleanup ], !dbg !5235
  call void @llvm.dbg.value(metadata i32 %advance.0, metadata !5117, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5114, metadata !DIExpression(DW_OP_deref)), !dbg !5137
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !5115, metadata !DIExpression(DW_OP_deref)), !dbg !5137
  %call146 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !5236
  %tobool147 = icmp eq i8 %call146, 0, !dbg !5237
  br i1 %tobool147, label %for.end216, label %for.body148, !dbg !5237

for.body148:                                      ; preds = %for.cond145
  %51 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5238
  call void @llvm.dbg.value(metadata %struct._dep* %51, metadata !5115, metadata !DIExpression()), !dbg !5137
  %con = getelementptr inbounds %struct._dep, %struct._dep* %51, i64 0, i32 1, !dbg !5238
  %52 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !5238
  call void @llvm.dbg.value(metadata %struct.rtx_def* %52, metadata !5130, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5114, metadata !DIExpression(DW_OP_deref)), !dbg !5137
  call void @sd_resolve_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #6, !dbg !5240
  %bf.load149 = load i32, i32* %50, align 8, !dbg !5241
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !5241
  %cmp151 = icmp eq i32 %bf.clear150, 7, !dbg !5241
  br i1 %cmp151, label %land.lhs.true152, label %if.end157, !dbg !5242

land.lhs.true152:                                 ; preds = %for.body148
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 0, !dbg !5243
  %bf.load153 = load i32, i32* %53, align 8, !dbg !5243
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !5243
  %cmp155 = icmp eq i32 %bf.clear154, 7, !dbg !5243
  br i1 %cmp155, label %if.end157, label %cleanup, !dbg !5244, !llvm.loop !5245

if.end157:                                        ; preds = %land.lhs.true152, %for.body148
  %54 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5247
  %base160 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %54, i64 0, i32 0, !dbg !5247
  %55 = load i32, i32* %rt_int77, align 8, !dbg !5247
  %call168 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base160, i32 %55) #7, !dbg !5247
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call168, i64 0, i32 11, !dbg !5247
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !5247
  %cmp169 = icmp eq %struct.basic_block_def* %56, null, !dbg !5247
  br i1 %cmp169, label %if.then184, label %land.lhs.true170, !dbg !5247

land.lhs.true170:                                 ; preds = %if.end157
  %57 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5247
  %base173 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %57, i64 0, i32 0, !dbg !5247
  %58 = load i32, i32* %rt_int77, align 8, !dbg !5247
  %call181 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base173, i32 %58) #7, !dbg !5247
  %recovery_block182 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call181, i64 0, i32 11, !dbg !5247
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block182, align 8, !dbg !5247
  %60 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5247
  %cfg = getelementptr inbounds %struct.function, %struct.function* %60, i64 0, i32 1, !dbg !5247
  %61 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5247
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %61, i64 0, i32 1, !dbg !5247
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5247
  %cmp183 = icmp eq %struct.basic_block_def* %59, %62, !dbg !5247
  br i1 %cmp183, label %if.then184, label %if.else196, !dbg !5248

if.then184:                                       ; preds = %land.lhs.true170, %if.end157
  %call185 = call i32 @try_ready(%struct.rtx_def* %52) #7, !dbg !5249
  call void @llvm.dbg.value(metadata i32 %call185, metadata !5134, metadata !DIExpression()), !dbg !5250
  %cmp186 = icmp sgt i32 %call185, -1, !dbg !5251
  br i1 %cmp186, label %land.lhs.true187, label %cleanup, !dbg !5253

land.lhs.true187:                                 ; preds = %if.then184
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 0, !dbg !5254
  %bf.load188 = load i32, i32* %63, align 8, !dbg !5254
  %bf.clear190 = and i32 %bf.load188, 268435456, !dbg !5254
  %tobool191 = icmp ne i32 %bf.clear190, 0, !dbg !5254
  %cmp193 = icmp slt i32 %advance.0, %call185, !dbg !5255
  %or.cond = and i1 %tobool191, %cmp193, !dbg !5256
  %spec.select = select i1 %or.cond, i32 %call185, i32 %advance.0, !dbg !5256
  br label %cleanup, !dbg !5256

if.else196:                                       ; preds = %land.lhs.true170
  %call197 = call zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %insn, i32 4) #6, !dbg !5257
  %tobool198 = icmp eq i8 %call197, 0, !dbg !5257
  br i1 %tobool198, label %cond.true199, label %cond.end201, !dbg !5257

cond.true199:                                     ; preds = %if.else196
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1779, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5257
  br label %cond.end201, !dbg !5257

cond.end201:                                      ; preds = %if.else196, %cond.true199
  %64 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5259
  %base205 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %64, i64 0, i32 0, !dbg !5259
  %65 = load i32, i32* %rt_int77, align 8, !dbg !5259
  %call213 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base205, i32 %65) #7, !dbg !5259
  %recovery_block214 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call213, i64 0, i32 11, !dbg !5259
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block214, align 8, !dbg !5259
  call fastcc void @fix_recovery_deps(%struct.basic_block_def* %66) #7, !dbg !5260
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true187, %cond.end201, %if.then184, %land.lhs.true152
  %advance.3 = phi i32 [ %advance.0, %land.lhs.true152 ], [ %advance.0, %cond.end201 ], [ %advance.0, %if.then184 ], [ %spec.select, %land.lhs.true187 ], !dbg !5235
  call void @llvm.dbg.value(metadata i32 %advance.3, metadata !5117, metadata !DIExpression()), !dbg !5137
  br label %for.cond145

for.end216:                                       ; preds = %for.cond145
  %advance.0.lcssa = phi i32 [ %advance.0, %for.cond145 ], !dbg !5235
  call void @llvm.dbg.value(metadata i32 %advance.0.lcssa, metadata !5117, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata i32 %advance.0.lcssa, metadata !5117, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata i32 %advance.0.lcssa, metadata !5117, metadata !DIExpression()), !dbg !5137
  %67 = load i32, i32* @issue_rate, align 4, !dbg !5261
  %cmp217 = icmp sgt i32 %67, 1, !dbg !5263
  br i1 %cmp217, label %land.lhs.true218, label %if.end246, !dbg !5264

land.lhs.true218:                                 ; preds = %for.end216
  %u219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !5265
  %68 = getelementptr inbounds %union.u, %union.u* %u219, i64 1, i32 0, i32 0, i64 0, !dbg !5265
  %69 = bitcast %union.rtunion_def* %68 to i32**, !dbg !5265
  %70 = load i32*, i32** %69, align 8, !dbg !5265
  %bf.load223 = load i32, i32* %70, align 8, !dbg !5265
  %bf.clear224 = and i32 %bf.load223, 65535, !dbg !5265
  %cmp225 = icmp eq i32 %bf.clear224, 24, !dbg !5266
  br i1 %cmp225, label %if.end246, label %land.lhs.true226, !dbg !5267

land.lhs.true226:                                 ; preds = %land.lhs.true218
  %cmp233 = icmp eq i32 %bf.clear224, 25, !dbg !5268
  br i1 %cmp233, label %if.end246, label %land.lhs.true234, !dbg !5269

land.lhs.true234:                                 ; preds = %land.lhs.true226
  %bf.load235 = load i32, i32* %50, align 8, !dbg !5270
  %bf.clear236 = and i32 %bf.load235, 65535, !dbg !5270
  %cmp237 = icmp eq i32 %bf.clear236, 7, !dbg !5270
  br i1 %cmp237, label %if.end246, label %if.then238, !dbg !5271

if.then238:                                       ; preds = %land.lhs.true234
  %71 = load i32, i32* @reload_completed, align 4, !dbg !5272
  %tobool239 = icmp eq i32 %71, 0, !dbg !5272
  br i1 %tobool239, label %if.end245, label %if.then240, !dbg !5275

if.then240:                                       ; preds = %if.then238
  %72 = load i32, i32* @clock_var, align 4, !dbg !5276
  %73 = load i32, i32* @last_clock_var, align 4, !dbg !5276
  %cmp241 = icmp sgt i32 %72, %73, !dbg !5276
  %cond242 = select i1 %cmp241, i32 1179648, i32 0, !dbg !5276
  %bf.clear244 = and i32 %bf.load235, -16711681, !dbg !5276
  %bf.set = or i32 %bf.clear244, %cond242, !dbg !5276
  store i32 %bf.set, i32* %50, align 8, !dbg !5276
  br label %if.end245, !dbg !5276

if.end245:                                        ; preds = %if.then238, %if.then240
  %74 = load i32, i32* @clock_var, align 4, !dbg !5277
  store i32 %74, i32* @last_clock_var, align 4, !dbg !5278
  br label %if.end246, !dbg !5279

if.end246:                                        ; preds = %land.lhs.true226, %land.lhs.true218, %if.end245, %land.lhs.true234, %for.end216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5280
  ret i32 %advance.0.lcssa, !dbg !5281
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_curr_reg_pressure() unnamed_addr #5 !dbg !5282 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5286
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !5287
  call void @llvm.dbg.value(metadata i32 0, metadata !5284, metadata !DIExpression()), !dbg !5288
  br label %for.cond, !dbg !5289

for.cond:                                         ; preds = %cond.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end ], [ 0, %entry ], !dbg !5291
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5284, metadata !DIExpression()), !dbg !5288
  %1 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !5292
  %2 = sext i32 %1 to i64, !dbg !5294
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !5294
  br i1 %cmp, label %for.body, label %for.end, !dbg !5295

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !5296
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5296
  call void @llvm.dbg.value(metadata i32 %3, metadata !5285, metadata !DIExpression()), !dbg !5288
  %idxprom1 = zext i32 %3 to i64, !dbg !5298
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom1, !dbg !5298
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !5298
  %cmp3 = icmp sgt i32 %4, -1, !dbg !5298
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !5298

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 787, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5298
  %.pre = load i32, i32* %arrayidx2, align 4, !dbg !5299
  br label %cond.end, !dbg !5298

cond.end:                                         ; preds = %for.body, %cond.true
  %5 = phi i32 [ %4, %for.body ], [ %.pre, %cond.true ], !dbg !5300
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5301
  %arrayidx5 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom1, !dbg !5302
  %7 = load i8*, i8** %arrayidx5, align 8, !dbg !5302
  %arrayidx11 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_available_class_regs, i64 0, i64 %idxprom1, !dbg !5303
  %8 = load i32, i32* %arrayidx11, align 4, !dbg !5303
  %sub = sub nsw i32 %5, %8, !dbg !5304
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0), i8* %7, i32 %5, i32 %sub) #6, !dbg !5305
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5306
  call void @llvm.dbg.value(metadata i32 undef, metadata !5284, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5288
  br label %for.cond, !dbg !5307, !llvm.loop !5308

for.end:                                          ; preds = %for.cond
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5310
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !5311
  ret void, !dbg !5312
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @early_queue_to_ready(i8* %state, %struct.ready_list* %ready) unnamed_addr #5 !dbg !5313 {
entry:
  call void @llvm.dbg.value(metadata i8* %state, metadata !5317, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata %struct.ready_list* @ready, metadata !5318, metadata !DIExpression()), !dbg !5328
  %0 = load i64, i64* @dfa_state_size, align 8, !dbg !5329
  %1 = alloca i8, i64 %0, align 16, !dbg !5329
  call void @llvm.dbg.value(metadata i8* %1, metadata !5325, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i32 0, metadata !5327, metadata !DIExpression()), !dbg !5328
  %2 = load i32, i32* @flag_sched_stalled_insns, align 4, !dbg !5330
  %tobool = icmp eq i32 %2, 0, !dbg !5330
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !5332

for.cond.preheader:                               ; preds = %entry
  %3 = load i32, i32* @max_insn_queue_index, align 4, !dbg !5333
  br label %for.cond, !dbg !5336

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %stalls.0 = phi i32 [ %inc63, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5337
  %insns_removed.0 = phi i32 [ %insns_removed.4, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5338
  call void @llvm.dbg.value(metadata i32 %insns_removed.0, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i32 %stalls.0, metadata !5326, metadata !DIExpression()), !dbg !5328
  %cmp = icmp sgt i32 %stalls.0, %3, !dbg !5339
  br i1 %cmp, label %cleanup.loopexit1, label %for.body, !dbg !5336

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !5340
  %5 = load i32, i32* @q_ptr, align 4, !dbg !5343
  %add = add nsw i32 %5, %stalls.0, !dbg !5343
  %and = and i32 %add, %3, !dbg !5343
  %idxprom = sext i32 %and to i64, !dbg !5340
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %4, i64 %idxprom, !dbg !5340
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !5320, metadata !DIExpression()), !dbg !5328
  %tobool1 = icmp eq %struct.rtx_def* %6, null, !dbg !5344
  br i1 %tobool1, label %for.inc, label %if.then2, !dbg !5345

if.then2:                                         ; preds = %for.body
  %7 = load i32, i32* @sched_verbose, align 4, !dbg !5346
  %cmp3 = icmp sgt i32 %7, 6, !dbg !5349
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5350

if.then4:                                         ; preds = %if.then2
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5351
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.41, i64 0, i64 0), i32 %5, i32 %stalls.0) #6, !dbg !5352
  br label %if.end5, !dbg !5352

if.end5:                                          ; preds = %if.then4, %if.then2
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5322, metadata !DIExpression()), !dbg !5328
  br label %while.cond, !dbg !5353

while.cond:                                       ; preds = %if.end56, %if.end5
  %prev_link.0 = phi %struct.rtx_def* [ null, %if.end5 ], [ %spec.select, %if.end56 ], !dbg !5354
  %link.0 = phi %struct.rtx_def* [ %6, %if.end5 ], [ %10, %if.end56 ], !dbg !5355
  %insns_removed.1 = phi i32 [ %insns_removed.0, %if.end5 ], [ %insns_removed.3, %if.end56 ], !dbg !5328
  call void @llvm.dbg.value(metadata i32 %insns_removed.1, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !5320, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_link.0, metadata !5322, metadata !DIExpression()), !dbg !5328
  %tobool6 = icmp eq %struct.rtx_def* %link.0, null, !dbg !5353
  br i1 %tobool6, label %for.inc.loopexit, label %while.body, !dbg !5353

while.body:                                       ; preds = %while.cond
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5356
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !5356
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5321, metadata !DIExpression()), !dbg !5328
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5358
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !5358
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !5358
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5319, metadata !DIExpression()), !dbg !5328
  %tobool12 = icmp ne %struct.rtx_def* %11, null, !dbg !5359
  %12 = load i32, i32* @sched_verbose, align 4, !dbg !5361
  %cmp13 = icmp sgt i32 %12, 6, !dbg !5362
  %or.cond = and i1 %tobool12, %cmp13, !dbg !5363
  br i1 %or.cond, label %if.then14, label %if.end16, !dbg !5363

if.then14:                                        ; preds = %while.body
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5364
  %call15 = call i32 @print_rtl_single(%struct._IO_FILE* %13, %struct.rtx_def* nonnull %11) #6, !dbg !5365
  br label %if.end16, !dbg !5365

if.end16:                                         ; preds = %if.then14, %while.body
  %14 = load i64, i64* @dfa_state_size, align 8, !dbg !5366
  %call17 = call i8* @memcpy(i8* nonnull %1, i8* %state, i64 %14) #6, !dbg !5367
  %call18 = call fastcc i32 @recog_memoized(%struct.rtx_def* %11) #7, !dbg !5368
  %cmp19 = icmp slt i32 %call18, 0, !dbg !5370
  br i1 %cmp19, label %if.end22, label %if.else, !dbg !5371

if.else:                                          ; preds = %if.end16
  %call21 = call i32 @state_transition(i8* nonnull %1, %struct.rtx_def* %11) #6, !dbg !5372
  call void @llvm.dbg.value(metadata i32 %call21, metadata !5324, metadata !DIExpression()), !dbg !5328
  br label %if.end22

if.end22:                                         ; preds = %if.end16, %if.else
  %cost.0 = phi i32 [ %call21, %if.else ], [ 0, %if.end16 ], !dbg !5373
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !5324, metadata !DIExpression()), !dbg !5328
  %15 = load i32, i32* @sched_verbose, align 4, !dbg !5374
  %cmp23 = icmp sgt i32 %15, 5, !dbg !5376
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !5377

if.then24:                                        ; preds = %if.end22
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5378
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i64 0, i64 0), i32 %cost.0) #6, !dbg !5379
  br label %if.end26, !dbg !5379

if.end26:                                         ; preds = %if.then24, %if.end22
  call void @llvm.dbg.value(metadata i8 0, metadata !5323, metadata !DIExpression()), !dbg !5328
  %cmp27 = icmp slt i32 %cost.0, 0, !dbg !5380
  br i1 %cmp27, label %if.then28, label %if.end56, !dbg !5382

if.then28:                                        ; preds = %if.end26
  %call29 = call fastcc zeroext i8 @ok_for_early_queue_removal(%struct.rtx_def* %11) #7, !dbg !5383
  call void @llvm.dbg.value(metadata i8 %call29, metadata !5323, metadata !DIExpression()), !dbg !5328
  %cmp30 = icmp eq i8 %call29, 1, !dbg !5385
  br i1 %cmp30, label %if.then32, label %if.end56, !dbg !5387

if.then32:                                        ; preds = %if.then28
  %17 = load i32, i32* @q_size, align 4, !dbg !5388
  %sub = add nsw i32 %17, -1, !dbg !5388
  store i32 %sub, i32* @q_size, align 4, !dbg !5388
  call fastcc void @ready_add(%struct.ready_list* nonnull @ready, %struct.rtx_def* %11, i8 zeroext 0) #7, !dbg !5390
  %tobool33 = icmp eq %struct.rtx_def* %prev_link.0, null, !dbg !5391
  br i1 %tobool33, label %if.else39, label %if.then34, !dbg !5393

if.then34:                                        ; preds = %if.then32
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev_link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5394
  %rt_rtx38 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !5394
  store %struct.rtx_def* %10, %struct.rtx_def** %rt_rtx38, align 8, !dbg !5395
  br label %if.end44, !dbg !5394

if.else39:                                        ; preds = %if.then32
  %19 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !5396
  %20 = load i32, i32* @q_ptr, align 4, !dbg !5397
  %add40 = add nsw i32 %20, %stalls.0, !dbg !5397
  %and41 = and i32 %add40, %3, !dbg !5397
  %idxprom42 = sext i32 %and41 to i64, !dbg !5396
  %arrayidx43 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %19, i64 %idxprom42, !dbg !5396
  store %struct.rtx_def* %10, %struct.rtx_def** %arrayidx43, align 8, !dbg !5398
  br label %if.end44

if.end44:                                         ; preds = %if.else39, %if.then34
  call void @free_INSN_LIST_node(%struct.rtx_def* nonnull %link.0) #6, !dbg !5399
  %21 = load i32, i32* @sched_verbose, align 4, !dbg !5400
  %cmp45 = icmp sgt i32 %21, 1, !dbg !5402
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !5403

if.then47:                                        ; preds = %if.end44
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5404
  %23 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5405
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %23, i64 0, i32 5, !dbg !5406
  %24 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !5406
  %call48 = call i8* %24(%struct.rtx_def* %11, i32 0) #6, !dbg !5407
  %call49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0), i8* %call48) #6, !dbg !5408
  br label %if.end50, !dbg !5408

if.end50:                                         ; preds = %if.then47, %if.end44
  %inc = add nsw i32 %insns_removed.1, 1, !dbg !5409
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5327, metadata !DIExpression()), !dbg !5328
  %25 = load i32, i32* @flag_sched_stalled_insns, align 4, !dbg !5410
  %cmp51 = icmp eq i32 %inc, %25, !dbg !5412
  br i1 %cmp51, label %cleanup.loopexit, label %if.end56, !dbg !5413

if.end56:                                         ; preds = %if.then28, %if.end50, %if.end26
  %move_to_ready.0 = phi i8 [ 0, %if.end26 ], [ 1, %if.end50 ], [ %call29, %if.then28 ], !dbg !5414
  %insns_removed.3 = phi i32 [ %insns_removed.1, %if.end26 ], [ %inc, %if.end50 ], [ %insns_removed.1, %if.then28 ], !dbg !5328
  call void @llvm.dbg.value(metadata i32 %insns_removed.3, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i8 %move_to_ready.0, metadata !5323, metadata !DIExpression()), !dbg !5328
  %cmp58 = icmp eq i8 %move_to_ready.0, 0, !dbg !5415
  %spec.select = select i1 %cmp58, %struct.rtx_def* %link.0, %struct.rtx_def* %prev_link.0, !dbg !5417
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !5322, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5320, metadata !DIExpression()), !dbg !5328
  br label %while.cond, !dbg !5353, !llvm.loop !5418

for.inc.loopexit:                                 ; preds = %while.cond
  %insns_removed.1.lcssa = phi i32 [ %insns_removed.1, %while.cond ], !dbg !5328
  call void @llvm.dbg.value(metadata i32 %insns_removed.1.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i32 %insns_removed.1.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i32 %insns_removed.1.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  br label %for.inc, !dbg !5420

for.inc:                                          ; preds = %for.inc.loopexit, %for.body
  %insns_removed.4 = phi i32 [ %insns_removed.0, %for.body ], [ %insns_removed.1.lcssa, %for.inc.loopexit ], !dbg !5338
  call void @llvm.dbg.value(metadata i32 %insns_removed.4, metadata !5327, metadata !DIExpression()), !dbg !5328
  %inc63 = add nuw nsw i32 %stalls.0, 1, !dbg !5420
  call void @llvm.dbg.value(metadata i32 %inc63, metadata !5326, metadata !DIExpression()), !dbg !5328
  br label %for.cond, !dbg !5421, !llvm.loop !5422

cleanup.loopexit:                                 ; preds = %if.end50
  %inc.lcssa = phi i32 [ %inc, %if.end50 ], !dbg !5409
  br label %cleanup, !dbg !5424

cleanup.loopexit1:                                ; preds = %for.cond
  %insns_removed.0.lcssa = phi i32 [ %insns_removed.0, %for.cond ], !dbg !5338
  call void @llvm.dbg.value(metadata i32 %insns_removed.0.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i32 %insns_removed.0.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata i32 %insns_removed.0.lcssa, metadata !5327, metadata !DIExpression()), !dbg !5328
  br label %cleanup, !dbg !5424

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %inc.lcssa, %cleanup.loopexit ], [ %insns_removed.0.lcssa, %cleanup.loopexit1 ], !dbg !5328
  ret i32 %retval.0, !dbg !5424
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @choose_ready(%struct.ready_list* %ready, %struct.rtx_def** %insn_ptr) unnamed_addr #5 !dbg !5425 {
entry:
  %index = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ready_list* @ready, metadata !5429, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn_ptr, metadata !5430, metadata !DIExpression()), !dbg !5451
  %call = tail call zeroext i8 @dbg_cnt(i32 29) #6, !dbg !5452
  %cmp = icmp eq i8 %call, 0, !dbg !5453
  br i1 %cmp, label %if.then, label %if.end7, !dbg !5454

if.then:                                          ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !5455
  %call2 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %0) #6, !dbg !5456
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !5432, metadata !DIExpression()), !dbg !5457
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5458
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !5458
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5458
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5458
  %2 = load i32, i32* %rt_int, align 8, !dbg !5458
  %call3 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %2) #7, !dbg !5458
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call3, i64 0, i32 4, !dbg !5458
  %3 = load i32, i32* %queue_index, align 8, !dbg !5458
  %cmp4 = icmp eq i32 %3, -1, !dbg !5460
  br i1 %cmp4, label %if.then6, label %cleanup218, !dbg !5461

if.then6:                                         ; preds = %if.then
  tail call fastcc void @ready_remove_insn(%struct.rtx_def* %call2) #7, !dbg !5462
  store %struct.rtx_def* %call2, %struct.rtx_def** %insn_ptr, align 8, !dbg !5464
  br label %cleanup218, !dbg !5465

if.end7:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !5431, metadata !DIExpression()), !dbg !5451
  %4 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 17), align 8, !dbg !5466
  %tobool8 = icmp eq i32 ()* %4, null, !dbg !5468
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !5469

if.then9:                                         ; preds = %if.end7
  %call10 = tail call i32 %4() #6, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %call10, metadata !5431, metadata !DIExpression()), !dbg !5451
  %phitmp = icmp slt i32 %call10, 1, !dbg !5471
  br label %if.end11, !dbg !5471

if.end11:                                         ; preds = %if.end7, %if.then9
  %lookahead.0 = phi i1 [ %phitmp, %if.then9 ], [ true, %if.end7 ]
  br i1 %lookahead.0, label %if.then22, label %lor.lhs.false, !dbg !5472

lor.lhs.false:                                    ; preds = %if.end11
  %call14 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !5473
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 0, !dbg !5473
  %bf.load = load i32, i32* %5, align 8, !dbg !5473
  %bf.clear = and i32 %bf.load, 268435456, !dbg !5473
  %tobool15 = icmp eq i32 %bf.clear, 0, !dbg !5473
  br i1 %tobool15, label %lor.lhs.false16, label %if.then22, !dbg !5474

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %call17 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !5475
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call17, i64 0, i32 0, !dbg !5475
  %bf.load18 = load i32, i32* %6, align 8, !dbg !5475
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !5475
  %cmp20 = icmp eq i32 %bf.clear19, 7, !dbg !5475
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !5476

if.then22:                                        ; preds = %lor.lhs.false, %lor.lhs.false16, %if.end11
  %call23 = tail call fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* nonnull @ready) #7, !dbg !5477
  store %struct.rtx_def* %call23, %struct.rtx_def** %insn_ptr, align 8, !dbg !5479
  br label %cleanup218, !dbg !5480

if.else:                                          ; preds = %lor.lhs.false16
  %7 = bitcast i32* %index to i8*, !dbg !5481
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8, !dbg !5481
  call void @llvm.dbg.value(metadata i32 0, metadata !5435, metadata !DIExpression()), !dbg !5482
  store i32 0, i32* %index, align 4, !dbg !5483
  call void @llvm.dbg.value(metadata i32 1, metadata !5441, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 1, metadata !5442, metadata !DIExpression()), !dbg !5482
  %call25 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 0) #7, !dbg !5484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !5440, metadata !DIExpression()), !dbg !5482
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call25, i64 0, i32 1, !dbg !5485
  %8 = getelementptr inbounds %union.u, %union.u* %u26, i64 1, i32 0, i32 0, i64 1, !dbg !5485
  %rt_int29 = bitcast %union.rtunion_def* %8 to i32*, !dbg !5485
  %9 = load i32, i32* %rt_int29, align 8, !dbg !5485
  %cmp30 = icmp slt i32 %9, 0, !dbg !5487
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !5488

if.then32:                                        ; preds = %if.else
  %call33 = tail call fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* nonnull @ready) #7, !dbg !5489
  store %struct.rtx_def* %call33, %struct.rtx_def** %insn_ptr, align 8, !dbg !5491
  br label %cleanup211, !dbg !5492

if.end34:                                         ; preds = %if.else
  %10 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !5493
  %tobool35 = icmp eq %struct.spec_info_def* %10, null, !dbg !5493
  br i1 %tobool35, label %if.end84, label %land.lhs.true, !dbg !5494

land.lhs.true:                                    ; preds = %if.end34
  %flags = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %10, i64 0, i32 4, !dbg !5495
  %11 = load i32, i32* %flags, align 8, !dbg !5495
  %and = and i32 %11, 6, !dbg !5496
  %tobool36 = icmp eq i32 %and, 0, !dbg !5496
  br i1 %tobool36, label %if.end84, label %if.then37, !dbg !5497

if.then37:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !5438, metadata !DIExpression()), !dbg !5482
  %12 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5498
  call void @llvm.dbg.value(metadata i32 %12, metadata !5439, metadata !DIExpression()), !dbg !5482
  br label %for.cond, !dbg !5499

for.cond:                                         ; preds = %for.inc, %if.then37
  %i.0 = phi i32 [ 0, %if.then37 ], [ %inc, %for.inc ], !dbg !5500
  %try_data.0 = phi i32 [ 1, %if.then37 ], [ %try_data.2, %for.inc ], !dbg !5501
  %try_control.0 = phi i32 [ 1, %if.then37 ], [ %try_control.2, %for.inc ], !dbg !5502
  call void @llvm.dbg.value(metadata i32 %try_control.0, metadata !5442, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %try_data.0, metadata !5441, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5438, metadata !DIExpression()), !dbg !5482
  %cmp38 = icmp slt i32 %i.0, %12, !dbg !5503
  br i1 %cmp38, label %for.body, label %if.end84.loopexit, !dbg !5504

for.body:                                         ; preds = %for.cond
  %call40 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %i.0) #7, !dbg !5505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !5444, metadata !DIExpression()), !dbg !5506
  %13 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5507
  %base43 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %13, i64 0, i32 0, !dbg !5507
  %arrayidx49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5507
  %rt_int50 = bitcast %union.rtunion_def* %arrayidx49 to i32*, !dbg !5507
  %14 = load i32, i32* %rt_int50, align 8, !dbg !5507
  %call51 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base43, i32 %14) #7, !dbg !5507
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call51, i64 0, i32 8, !dbg !5507
  %15 = load i32, i32* %todo_spec, align 8, !dbg !5507
  call void @llvm.dbg.value(metadata i32 %15, metadata !5450, metadata !DIExpression()), !dbg !5506
  %16 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !5508
  %flags52 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %16, i64 0, i32 4, !dbg !5510
  %17 = load i32, i32* %flags52, align 8, !dbg !5510
  %and53 = and i32 %17, 2, !dbg !5511
  %tobool54 = icmp eq i32 %and53, 0, !dbg !5511
  %and56 = and i32 %15, 4095, !dbg !5512
  %tobool57 = icmp ne i32 %and56, 0, !dbg !5512
  %or.cond = or i1 %tobool54, %tobool57, !dbg !5513
  br i1 %or.cond, label %for.body.if.end66_crit_edge, label %if.then58, !dbg !5513

for.body.if.end66_crit_edge:                      ; preds = %for.body
  %.pre35 = and i32 %17, 4, !dbg !5514
  br label %if.end66, !dbg !5513

if.then58:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 0, metadata !5441, metadata !DIExpression()), !dbg !5482
  %and60 = and i32 %17, 4, !dbg !5516
  %tobool61 = icmp ne i32 %and60, 0, !dbg !5516
  %tobool63 = icmp ne i32 %try_control.0, 0, !dbg !5519
  %or.cond1 = and i1 %tobool61, %tobool63, !dbg !5520
  br i1 %or.cond1, label %if.end66, label %cleanup82, !dbg !5520

if.end66:                                         ; preds = %for.body.if.end66_crit_edge, %if.then58
  %and68.pre-phi = phi i32 [ %.pre35, %for.body.if.end66_crit_edge ], [ %and60, %if.then58 ], !dbg !5514
  %try_data.1 = phi i32 [ %try_data.0, %for.body.if.end66_crit_edge ], [ 0, %if.then58 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %try_data.1, metadata !5441, metadata !DIExpression()), !dbg !5482
  %tobool69 = icmp eq i32 %and68.pre-phi, 0, !dbg !5514
  %and71 = and i32 %15, 16773120, !dbg !5521
  %tobool72 = icmp ne i32 %and71, 0, !dbg !5521
  %or.cond2 = or i1 %tobool69, %tobool72, !dbg !5522
  br i1 %or.cond2, label %if.end81, label %if.then73, !dbg !5522

if.then73:                                        ; preds = %if.end66
  call void @llvm.dbg.value(metadata i32 0, metadata !5442, metadata !DIExpression()), !dbg !5482
  %tobool76 = icmp ne i32 %and53, 0, !dbg !5523
  %tobool78 = icmp ne i32 %try_data.1, 0, !dbg !5526
  %or.cond3 = and i1 %tobool76, %tobool78, !dbg !5527
  br i1 %or.cond3, label %if.end81, label %cleanup82, !dbg !5527

if.end81:                                         ; preds = %if.then73, %if.end66
  %try_control.1 = phi i32 [ %try_control.0, %if.end66 ], [ 0, %if.then73 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %try_control.1, metadata !5442, metadata !DIExpression()), !dbg !5482
  br label %cleanup82, !dbg !5528

cleanup82:                                        ; preds = %if.then73, %if.then58, %if.end81
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end81 ], [ false, %if.then58 ], [ false, %if.then73 ]
  %try_data.2 = phi i32 [ %try_data.1, %if.end81 ], [ 0, %if.then58 ], [ %try_data.1, %if.then73 ], !dbg !5482
  %try_control.2 = phi i32 [ %try_control.1, %if.end81 ], [ %try_control.0, %if.then58 ], [ 0, %if.then73 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %try_control.2, metadata !5442, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %try_data.2, metadata !5441, metadata !DIExpression()), !dbg !5482
  br i1 %cleanup.dest.slot.0, label %for.inc, label %if.end84.loopexit

for.inc:                                          ; preds = %cleanup82
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5529
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5438, metadata !DIExpression()), !dbg !5482
  br label %for.cond, !dbg !5530, !llvm.loop !5531

if.end84.loopexit:                                ; preds = %cleanup82, %for.cond
  %try_data.4.ph = phi i32 [ %try_data.0, %for.cond ], [ %try_data.2, %cleanup82 ]
  %try_control.4.ph = phi i32 [ %try_control.0, %for.cond ], [ %try_control.2, %cleanup82 ]
  br label %if.end84, !dbg !5533

if.end84:                                         ; preds = %if.end84.loopexit, %land.lhs.true, %if.end34
  %try_data.4 = phi i32 [ 1, %land.lhs.true ], [ 1, %if.end34 ], [ %try_data.4.ph, %if.end84.loopexit ], !dbg !5501
  %try_control.4 = phi i32 [ 1, %land.lhs.true ], [ 1, %if.end34 ], [ %try_control.4.ph, %if.end84.loopexit ], !dbg !5502
  call void @llvm.dbg.value(metadata i32 %try_control.4, metadata !5442, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %try_data.4, metadata !5441, metadata !DIExpression()), !dbg !5482
  %18 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5533
  %base87 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %18, i64 0, i32 0, !dbg !5533
  %arrayidx93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call25, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5533
  %rt_int94 = bitcast %union.rtunion_def* %arrayidx93 to i32*, !dbg !5533
  %19 = load i32, i32* %rt_int94, align 8, !dbg !5533
  %call95 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base87, i32 %19) #7, !dbg !5533
  %todo_spec96 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call95, i64 0, i32 8, !dbg !5533
  %20 = load i32, i32* %todo_spec96, align 8, !dbg !5533
  call void @llvm.dbg.value(metadata i32 %20, metadata !5443, metadata !DIExpression()), !dbg !5482
  %and97 = and i32 %20, 16777215, !dbg !5534
  %tobool98 = icmp eq i32 %and97, 0, !dbg !5534
  br i1 %tobool98, label %if.end115, label %land.lhs.true99, !dbg !5536

land.lhs.true99:                                  ; preds = %if.end84
  %tobool100 = icmp eq i32 %try_data.4, 0, !dbg !5537
  %and102 = and i32 %20, 4095, !dbg !5538
  %tobool103 = icmp ne i32 %and102, 0, !dbg !5538
  %or.cond4 = and i1 %tobool100, %tobool103, !dbg !5539
  br i1 %or.cond4, label %if.then114, label %lor.lhs.false104, !dbg !5539

lor.lhs.false104:                                 ; preds = %land.lhs.true99
  %tobool105 = icmp eq i32 %try_control.4, 0, !dbg !5540
  %and107 = and i32 %20, 16773120, !dbg !5541
  %tobool108 = icmp ne i32 %and107, 0, !dbg !5541
  %or.cond5 = and i1 %tobool105, %tobool108, !dbg !5542
  br i1 %or.cond5, label %if.then114, label %lor.lhs.false109, !dbg !5542

lor.lhs.false109:                                 ; preds = %lor.lhs.false104
  %21 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 31), align 8, !dbg !5543
  %tobool110 = icmp eq i8 (%struct.rtx_def*)* %21, null, !dbg !5544
  br i1 %tobool110, label %if.end115, label %land.lhs.true111, !dbg !5545

land.lhs.true111:                                 ; preds = %lor.lhs.false109
  %call112 = tail call zeroext i8 %21(%struct.rtx_def* %call25) #6, !dbg !5546
  %tobool113 = icmp eq i8 %call112, 0, !dbg !5546
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !5547

if.then114:                                       ; preds = %land.lhs.true111, %lor.lhs.false104, %land.lhs.true99
  tail call fastcc void @change_queue_index(%struct.rtx_def* %call25, i32 1) #7, !dbg !5548
  br label %cleanup211, !dbg !5550

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false109, %if.end84
  %22 = load i8*, i8** @ready_try, align 8, !dbg !5551
  store i8 0, i8* %22, align 1, !dbg !5552
  call void @llvm.dbg.value(metadata i32 1, metadata !5438, metadata !DIExpression()), !dbg !5482
  %tobool123 = icmp eq i32 %try_data.4, 0, !dbg !5553
  %tobool139 = icmp eq i32 %try_control.4, 0, !dbg !5553
  br i1 %tobool123, label %if.end115.split.us, label %if.end115.if.end115.split_crit_edge, !dbg !5557

if.end115.if.end115.split_crit_edge:              ; preds = %if.end115
  br i1 %tobool139, label %if.end115.split.split.us, label %if.end115.split.if.end115.split.split_crit_edge, !dbg !5557

if.end115.split.us:                               ; preds = %if.end115
  br label %for.cond117.us, !dbg !5557

for.cond117.us:                                   ; preds = %lor.end.us, %if.end115.split.us
  %indvars.iv38 = phi i64 [ %indvars.iv.next39, %lor.end.us ], [ 1, %if.end115.split.us ], !dbg !5558
  call void @llvm.dbg.value(metadata i64 %indvars.iv38, metadata !5438, metadata !DIExpression()), !dbg !5482
  %23 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5559
  %24 = sext i32 %23 to i64, !dbg !5560
  %cmp119.us = icmp slt i64 %indvars.iv38, %24, !dbg !5560
  br i1 %cmp119.us, label %for.body121.us, label %for.cond159.preheader.us-lcssa.us, !dbg !5561

for.body121.us:                                   ; preds = %for.cond117.us
  %25 = trunc i64 %indvars.iv38 to i32, !dbg !5562
  %call122.us = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %25) #7, !dbg !5562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122.us, metadata !5440, metadata !DIExpression()), !dbg !5482
  %26 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5563
  %base127.us = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %26, i64 0, i32 0, !dbg !5563
  %arrayidx133.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call122.us, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5563
  %rt_int134.us = bitcast %union.rtunion_def* %arrayidx133.us to i32*, !dbg !5563
  %27 = load i32, i32* %rt_int134.us, align 8, !dbg !5563
  %call135.us = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base127.us, i32 %27) #7, !dbg !5563
  %todo_spec136.us = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call135.us, i64 0, i32 8, !dbg !5563
  %28 = load i32, i32* %todo_spec136.us, align 8, !dbg !5563
  %and137.us = and i32 %28, 4095, !dbg !5564
  %tobool138.us = icmp eq i32 %and137.us, 0, !dbg !5564
  br i1 %tobool138.us, label %lor.rhs.us, label %lor.end.us, !dbg !5565

lor.rhs.us:                                       ; preds = %for.body121.us
  br i1 %tobool139, label %land.rhs.us, label %lor.end.us, !dbg !5566

land.rhs.us:                                      ; preds = %lor.rhs.us
  %29 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5567
  %base142.us = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %29, i64 0, i32 0, !dbg !5567
  %30 = load i32, i32* %rt_int134.us, align 8, !dbg !5567
  %call150.us = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base142.us, i32 %30) #7, !dbg !5567
  %todo_spec151.us = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call150.us, i64 0, i32 8, !dbg !5567
  %31 = load i32, i32* %todo_spec151.us, align 8, !dbg !5567
  %and152.us = and i32 %31, 16773120, !dbg !5568
  %tobool153.us = icmp ne i32 %and152.us, 0, !dbg !5566
  br label %lor.end.us

lor.end.us:                                       ; preds = %land.rhs.us, %lor.rhs.us, %for.body121.us
  %32 = phi i1 [ true, %for.body121.us ], [ false, %lor.rhs.us ], [ %tobool153.us, %land.rhs.us ]
  %conv154.us = zext i1 %32 to i8, !dbg !5569
  %33 = load i8*, i8** @ready_try, align 8, !dbg !5570
  %arrayidx155.us = getelementptr inbounds i8, i8* %33, i64 %indvars.iv38, !dbg !5570
  store i8 %conv154.us, i8* %arrayidx155.us, align 1, !dbg !5571
  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1, !dbg !5572
  call void @llvm.dbg.value(metadata i32 undef, metadata !5438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5482
  br label %for.cond117.us, !dbg !5573, !llvm.loop !5574

for.cond159.preheader.us-lcssa.us:                ; preds = %for.cond117.us
  %.lcssa = phi i32 [ %23, %for.cond117.us ], !dbg !5559
  br label %for.cond159.preheader, !dbg !5576

if.end115.split.if.end115.split.split_crit_edge:  ; preds = %if.end115.if.end115.split_crit_edge
  br label %for.cond117, !dbg !5557

if.end115.split.split.us:                         ; preds = %if.end115.if.end115.split_crit_edge
  br label %for.cond117.us6, !dbg !5557

for.cond117.us6:                                  ; preds = %for.body121.us9, %if.end115.split.split.us
  %indvars.iv40 = phi i64 [ %indvars.iv.next41, %for.body121.us9 ], [ 1, %if.end115.split.split.us ], !dbg !5558
  call void @llvm.dbg.value(metadata i64 %indvars.iv40, metadata !5438, metadata !DIExpression()), !dbg !5482
  %34 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5559
  %35 = sext i32 %34 to i64, !dbg !5560
  %cmp119.us8 = icmp slt i64 %indvars.iv40, %35, !dbg !5560
  br i1 %cmp119.us8, label %for.body121.us9, label %for.cond159.preheader.us-lcssa.us-lcssa.us, !dbg !5561

for.body121.us9:                                  ; preds = %for.cond117.us6
  %36 = trunc i64 %indvars.iv40 to i32, !dbg !5562
  %call122.us10 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %36) #7, !dbg !5562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122.us10, metadata !5440, metadata !DIExpression()), !dbg !5482
  %37 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5567
  %base142.us21 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %37, i64 0, i32 0, !dbg !5567
  %arrayidx148.us22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call122.us10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5567
  %rt_int149.us23 = bitcast %union.rtunion_def* %arrayidx148.us22 to i32*, !dbg !5567
  %38 = load i32, i32* %rt_int149.us23, align 8, !dbg !5567
  %call150.us24 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base142.us21, i32 %38) #7, !dbg !5567
  %todo_spec151.us25 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call150.us24, i64 0, i32 8, !dbg !5567
  %39 = load i32, i32* %todo_spec151.us25, align 8, !dbg !5567
  %and152.us26 = and i32 %39, 16773120, !dbg !5568
  %tobool153.us27 = icmp ne i32 %and152.us26, 0, !dbg !5566
  %conv154.us29 = zext i1 %tobool153.us27 to i8, !dbg !5569
  %40 = load i8*, i8** @ready_try, align 8, !dbg !5570
  %arrayidx155.us31 = getelementptr inbounds i8, i8* %40, i64 %indvars.iv40, !dbg !5570
  store i8 %conv154.us29, i8* %arrayidx155.us31, align 1, !dbg !5571
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv40, 1, !dbg !5572
  call void @llvm.dbg.value(metadata i32 undef, metadata !5438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5482
  br label %for.cond117.us6, !dbg !5573, !llvm.loop !5574

for.cond159.preheader.us-lcssa.us-lcssa.us:       ; preds = %for.cond117.us6
  %.lcssa44 = phi i32 [ %34, %for.cond117.us6 ], !dbg !5559
  br label %for.cond159.preheader.us-lcssa, !dbg !5576

for.cond117:                                      ; preds = %for.body121, %if.end115.split.if.end115.split.split_crit_edge
  %indvars.iv42 = phi i64 [ %indvars.iv.next43, %for.body121 ], [ 1, %if.end115.split.if.end115.split.split_crit_edge ], !dbg !5558
  call void @llvm.dbg.value(metadata i64 %indvars.iv42, metadata !5438, metadata !DIExpression()), !dbg !5482
  %41 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5559
  %42 = sext i32 %41 to i64, !dbg !5560
  %cmp119 = icmp slt i64 %indvars.iv42, %42, !dbg !5560
  br i1 %cmp119, label %for.body121, label %for.cond159.preheader.us-lcssa.us-lcssa, !dbg !5561

for.cond159.preheader.us-lcssa.us-lcssa:          ; preds = %for.cond117
  %.lcssa45 = phi i32 [ %41, %for.cond117 ], !dbg !5559
  br label %for.cond159.preheader.us-lcssa, !dbg !5576

for.cond159.preheader.us-lcssa:                   ; preds = %for.cond159.preheader.us-lcssa.us-lcssa.us, %for.cond159.preheader.us-lcssa.us-lcssa
  %43 = phi i32 [ %.lcssa44, %for.cond159.preheader.us-lcssa.us-lcssa.us ], [ %.lcssa45, %for.cond159.preheader.us-lcssa.us-lcssa ]
  br label %for.cond159.preheader, !dbg !5576

for.cond159.preheader:                            ; preds = %for.cond159.preheader.us-lcssa.us, %for.cond159.preheader.us-lcssa
  %44 = phi i32 [ %.lcssa, %for.cond159.preheader.us-lcssa.us ], [ %43, %for.cond159.preheader.us-lcssa ]
  br label %for.cond159, !dbg !5579

for.body121:                                      ; preds = %for.cond117
  %45 = trunc i64 %indvars.iv42 to i32, !dbg !5562
  %call122 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %45) #7, !dbg !5562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122, metadata !5440, metadata !DIExpression()), !dbg !5482
  %46 = load i8*, i8** @ready_try, align 8, !dbg !5570
  %arrayidx155 = getelementptr inbounds i8, i8* %46, i64 %indvars.iv42, !dbg !5570
  store i8 0, i8* %arrayidx155, align 1, !dbg !5571
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1, !dbg !5572
  call void @llvm.dbg.value(metadata i32 undef, metadata !5438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5482
  br label %for.cond117, !dbg !5573, !llvm.loop !5574

for.cond159:                                      ; preds = %for.cond159.preheader, %for.inc187
  %indvars.iv = phi i64 [ 1, %for.cond159.preheader ], [ %indvars.iv.next, %for.inc187 ]
  %.pre33 = phi i32 [ %44, %for.cond159.preheader ], [ %.pre, %for.inc187 ]
  %47 = phi i32 [ %44, %for.cond159.preheader ], [ %.pre, %for.inc187 ], !dbg !5580
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5438, metadata !DIExpression()), !dbg !5482
  %48 = sext i32 %47 to i64, !dbg !5581
  %cmp161 = icmp slt i64 %indvars.iv, %48, !dbg !5581
  br i1 %cmp161, label %for.body163, label %for.end189, !dbg !5579

for.body163:                                      ; preds = %for.cond159
  %49 = load i8*, i8** @ready_try, align 8, !dbg !5582
  %arrayidx165 = getelementptr inbounds i8, i8* %49, i64 %indvars.iv, !dbg !5582
  %50 = load i8, i8* %arrayidx165, align 1, !dbg !5582
  %tobool166 = icmp eq i8 %50, 0, !dbg !5582
  br i1 %tobool166, label %if.then167, label %for.inc187, !dbg !5584

if.then167:                                       ; preds = %for.body163
  %51 = trunc i64 %indvars.iv to i32, !dbg !5585
  %call168 = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %51) #7, !dbg !5585
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call168, metadata !5440, metadata !DIExpression()), !dbg !5482
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call168, i64 0, i32 1, !dbg !5587
  %52 = getelementptr inbounds %union.u, %union.u* %u169, i64 1, i32 0, i32 0, i64 1, !dbg !5587
  %rt_int172 = bitcast %union.rtunion_def* %52 to i32*, !dbg !5587
  %53 = load i32, i32* %rt_int172, align 8, !dbg !5587
  %cmp173 = icmp slt i32 %53, 0, !dbg !5588
  br i1 %cmp173, label %lor.end181, label %lor.rhs175, !dbg !5589

lor.rhs175:                                       ; preds = %if.then167
  %54 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 18), align 8, !dbg !5590
  %tobool176 = icmp eq i32 (%struct.rtx_def*)* %54, null, !dbg !5591
  br i1 %tobool176, label %lor.end181, label %land.rhs177, !dbg !5592

land.rhs177:                                      ; preds = %lor.rhs175
  %call178 = tail call i32 %54(%struct.rtx_def* %call168) #6, !dbg !5593
  %tobool179 = icmp eq i32 %call178, 0, !dbg !5594
  br label %lor.end181

lor.end181:                                       ; preds = %lor.rhs175, %land.rhs177, %if.then167
  %55 = phi i1 [ true, %if.then167 ], [ false, %lor.rhs175 ], [ %tobool179, %land.rhs177 ]
  %conv183 = zext i1 %55 to i8, !dbg !5595
  %56 = load i8*, i8** @ready_try, align 8, !dbg !5596
  %arrayidx185 = getelementptr inbounds i8, i8* %56, i64 %indvars.iv, !dbg !5596
  store i8 %conv183, i8* %arrayidx185, align 1, !dbg !5597
  %.pre.pre = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5580
  br label %for.inc187, !dbg !5598

for.inc187:                                       ; preds = %for.body163, %lor.end181
  %.pre = phi i32 [ %.pre33, %for.body163 ], [ %.pre.pre, %lor.end181 ], !dbg !5580
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5599
  call void @llvm.dbg.value(metadata i32 undef, metadata !5438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5482
  br label %for.cond159, !dbg !5600, !llvm.loop !5601

for.end189:                                       ; preds = %for.cond159
  %57 = load i8*, i8** @curr_state, align 8, !dbg !5603
  call void @llvm.dbg.value(metadata i32* %index, metadata !5435, metadata !DIExpression(DW_OP_deref)), !dbg !5482
  %call190 = call i32 @max_issue(%struct.ready_list* nonnull @ready, i32 1, i8* %57, i32* nonnull %index) #7, !dbg !5605
  %cmp191 = icmp eq i32 %call190, 0, !dbg !5606
  br i1 %cmp191, label %if.then193, label %if.else201, !dbg !5607

if.then193:                                       ; preds = %for.end189
  %call194 = call fastcc %struct.rtx_def* @ready_remove_first(%struct.ready_list* nonnull @ready) #7, !dbg !5608
  store %struct.rtx_def* %call194, %struct.rtx_def** %insn_ptr, align 8, !dbg !5610
  %58 = load i32, i32* @sched_verbose, align 4, !dbg !5611
  %cmp195 = icmp sgt i32 %58, 3, !dbg !5613
  br i1 %cmp195, label %if.then197, label %cleanup211, !dbg !5614

if.then197:                                       ; preds = %if.then193
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5615
  %60 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5616
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %60, i64 0, i32 5, !dbg !5617
  %61 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !5617
  %call198 = call i8* %61(%struct.rtx_def* %call194, i32 0) #6, !dbg !5618
  %call199 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.44, i64 0, i64 0), i8* %call198) #6, !dbg !5619
  br label %cleanup211, !dbg !5619

if.else201:                                       ; preds = %for.end189
  %62 = load i32, i32* @sched_verbose, align 4, !dbg !5620
  %cmp202 = icmp sgt i32 %62, 3, !dbg !5623
  br i1 %cmp202, label %if.then204, label %if.end209, !dbg !5624

if.then204:                                       ; preds = %if.else201
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !5625
  %64 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5626
  %print_insn205 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %64, i64 0, i32 5, !dbg !5627
  %65 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn205, align 8, !dbg !5627
  %66 = load i32, i32* %index, align 4, !dbg !5628
  call void @llvm.dbg.value(metadata i32 %66, metadata !5435, metadata !DIExpression()), !dbg !5482
  %call206 = call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %66) #7, !dbg !5629
  %call207 = call i8* %65(%struct.rtx_def* %call206, i32 0) #6, !dbg !5630
  %call208 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0), i8* %call207) #6, !dbg !5631
  br label %if.end209, !dbg !5631

if.end209:                                        ; preds = %if.then204, %if.else201
  %67 = load i32, i32* %index, align 4, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %67, metadata !5435, metadata !DIExpression()), !dbg !5482
  %call210 = call fastcc %struct.rtx_def* @ready_remove(%struct.ready_list* nonnull @ready, i32 %67) #7, !dbg !5633
  store %struct.rtx_def* %call210, %struct.rtx_def** %insn_ptr, align 8, !dbg !5634
  br label %cleanup211, !dbg !5635

cleanup211:                                       ; preds = %if.then193, %if.then197, %if.end209, %if.then114, %if.then32
  %retval.1 = phi i32 [ 0, %if.then32 ], [ 0, %if.end209 ], [ 1, %if.then114 ], [ 0, %if.then197 ], [ 0, %if.then193 ], !dbg !5482
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8, !dbg !5636
  br label %cleanup218

cleanup218:                                       ; preds = %if.then6, %if.then, %cleanup211, %if.then22
  %retval.2 = phi i32 [ 0, %if.then22 ], [ %retval.1, %cleanup211 ], [ 0, %if.then6 ], [ -1, %if.then ], !dbg !5451
  ret i32 %retval.2, !dbg !5637
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ready_add(%struct.ready_list* %ready, %struct.rtx_def* %insn, i8 zeroext %first_p) unnamed_addr #5 !dbg !5638 {
entry:
  call void @llvm.dbg.value(metadata %struct.ready_list* @ready, metadata !5642, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5643, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.value(metadata i8 %first_p, metadata !5644, metadata !DIExpression()), !dbg !5645
  %tobool = icmp eq i8 %first_p, 0, !dbg !5646
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !5648
  br i1 %tobool, label %if.then, label %if.else, !dbg !5649

if.then:                                          ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5650
  %cmp = icmp eq i32 %0, %1, !dbg !5653
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5654

if.then1:                                         ; preds = %if.then
  %2 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !5655
  %3 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !5657
  %idx.ext = sext i32 %3 to i64, !dbg !5658
  %add.ptr = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idx.ext, !dbg !5658
  %idx.ext3 = sext i32 %0 to i64, !dbg !5659
  %idx.neg = sub nsw i64 0, %idx.ext3, !dbg !5659
  %add.ptr4 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %add.ptr, i64 %idx.neg, !dbg !5659
  %4 = bitcast %struct.rtx_def** %add.ptr4 to i8*, !dbg !5660
  %call = tail call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #7, !dbg !5661
  %5 = bitcast %struct.rtx_def** %call to i8*, !dbg !5661
  %6 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5662
  %conv = sext i32 %6 to i64, !dbg !5663
  %mul = shl nsw i64 %conv, 3, !dbg !5664
  %call6 = tail call i8* @memmove(i8* %4, i8* %5, i64 %mul) #6, !dbg !5665
  %7 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !5666
  %sub = add nsw i32 %7, -1, !dbg !5667
  store i32 %sub, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !5668
  %.pre1 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5669
  br label %if.end, !dbg !5670

if.end:                                           ; preds = %if.then1, %if.then
  %8 = phi i32 [ %.pre1, %if.then1 ], [ %1, %if.then ], !dbg !5669
  %9 = phi i32 [ %sub, %if.then1 ], [ %0, %if.then ], !dbg !5671
  %10 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !5672
  %sub12 = sub nsw i32 %9, %8, !dbg !5673
  %idxprom = sext i32 %sub12 to i64, !dbg !5674
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom, !dbg !5674
  store %struct.rtx_def* %insn, %struct.rtx_def** %arrayidx, align 8, !dbg !5675
  br label %if.end45, !dbg !5676

if.else:                                          ; preds = %entry
  %11 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !5677
  %sub15 = add nsw i32 %11, -1, !dbg !5680
  %cmp16 = icmp eq i32 %0, %sub15, !dbg !5681
  br i1 %cmp16, label %if.then18, label %if.end40, !dbg !5682

if.then18:                                        ; preds = %if.else
  %12 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5683
  %tobool20 = icmp eq i32 %12, 0, !dbg !5686
  br i1 %tobool20, label %if.end36, label %if.then21, !dbg !5687

if.then21:                                        ; preds = %if.then18
  %13 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !5688
  %idx.ext24 = sext i32 %11 to i64, !dbg !5689
  %add.ptr25 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %13, i64 %idx.ext24, !dbg !5689
  %idx.ext27 = sext i32 %12 to i64, !dbg !5690
  %idx.neg28 = sub nsw i64 0, %idx.ext27, !dbg !5690
  %add.ptr29 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %add.ptr25, i64 %idx.neg28, !dbg !5690
  %add.ptr30 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %add.ptr29, i64 -1, !dbg !5691
  %14 = bitcast %struct.rtx_def** %add.ptr30 to i8*, !dbg !5692
  %call31 = tail call %struct.rtx_def** @ready_lastpos(%struct.ready_list* nonnull @ready) #7, !dbg !5693
  %15 = bitcast %struct.rtx_def** %call31 to i8*, !dbg !5693
  %16 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5694
  %conv33 = sext i32 %16 to i64, !dbg !5695
  %mul34 = shl nsw i64 %conv33, 3, !dbg !5696
  %call35 = tail call i8* @memmove(i8* nonnull %14, i8* %15, i64 %mul34) #6, !dbg !5697
  %.pre = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !5698
  br label %if.end36, !dbg !5697

if.end36:                                         ; preds = %if.then18, %if.then21
  %17 = phi i32 [ %11, %if.then18 ], [ %.pre, %if.then21 ], !dbg !5698
  %sub38 = add nsw i32 %17, -2, !dbg !5699
  store i32 %sub38, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !5700
  br label %if.end40, !dbg !5701

if.end40:                                         ; preds = %if.end36, %if.else
  %18 = phi i32 [ %sub38, %if.end36 ], [ %0, %if.else ], !dbg !5702
  %19 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !5703
  %inc = add nsw i32 %18, 1, !dbg !5702
  store i32 %inc, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 2), align 4, !dbg !5702
  %idxprom43 = sext i32 %inc to i64, !dbg !5704
  %arrayidx44 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %19, i64 %idxprom43, !dbg !5704
  store %struct.rtx_def* %insn, %struct.rtx_def** %arrayidx44, align 8, !dbg !5705
  br label %if.end45

if.end45:                                         ; preds = %if.end40, %if.end
  %20 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5706
  %inc47 = add nsw i32 %20, 1, !dbg !5706
  store i32 %inc47, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !5706
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5707
  %bf.load = load i32, i32* %21, align 8, !dbg !5707
  %bf.clear = and i32 %bf.load, 65535, !dbg !5707
  %cmp48 = icmp eq i32 %bf.clear, 7, !dbg !5707
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !5709

if.then50:                                        ; preds = %if.end45
  %22 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !5710
  %inc51 = add nsw i32 %22, 1, !dbg !5710
  store i32 %inc51, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 4), align 4, !dbg !5710
  br label %if.end52, !dbg !5711

if.end52:                                         ; preds = %if.then50, %if.end45
  %23 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5712
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %23, i64 0, i32 0, !dbg !5712
  %arrayidx54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5712
  %rt_int = bitcast %union.rtunion_def* %arrayidx54 to i32*, !dbg !5712
  %24 = load i32, i32* %rt_int, align 8, !dbg !5712
  %call55 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %24) #7, !dbg !5712
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call55, i64 0, i32 4, !dbg !5712
  %25 = load i32, i32* %queue_index, align 8, !dbg !5712
  %cmp56 = icmp eq i32 %25, -1, !dbg !5712
  br i1 %cmp56, label %cond.true58, label %cond.end60, !dbg !5712

cond.true58:                                      ; preds = %if.end52
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1418, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5712
  br label %cond.end60, !dbg !5712

cond.end60:                                       ; preds = %if.end52, %cond.true58
  %26 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5713
  %base64 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %26, i64 0, i32 0, !dbg !5713
  %27 = load i32, i32* %rt_int, align 8, !dbg !5713
  %call72 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base64, i32 %27) #7, !dbg !5713
  %queue_index73 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call72, i64 0, i32 4, !dbg !5713
  store i32 -1, i32* %queue_index73, align 8, !dbg !5714
  ret void, !dbg !5715
}

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @generate_recovery_code(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5716 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5718, metadata !DIExpression()), !dbg !5719
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5720
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !5720
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5720
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5720
  %1 = load i32, i32* %rt_int, align 8, !dbg !5720
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !5720
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 8, !dbg !5720
  %2 = load i32, i32* %todo_spec, align 8, !dbg !5720
  %and = and i32 %2, 258111, !dbg !5722
  %tobool1 = icmp eq i32 %and, 0, !dbg !5722
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5723

if.then:                                          ; preds = %entry
  tail call fastcc void @begin_speculative_block(%struct.rtx_def* %insn) #7, !dbg !5724
  br label %if.end, !dbg !5724

if.end:                                           ; preds = %entry, %if.then
  %3 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5725
  %base4 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %3, i64 0, i32 0, !dbg !5725
  %4 = load i32, i32* %rt_int, align 8, !dbg !5725
  %call12 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base4, i32 %4) #7, !dbg !5725
  %todo_spec13 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call12, i64 0, i32 8, !dbg !5725
  %5 = load i32, i32* %todo_spec13, align 8, !dbg !5725
  %and14 = and i32 %5, 16519104, !dbg !5727
  %tobool15 = icmp eq i32 %and14, 0, !dbg !5727
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !5728

if.then16:                                        ; preds = %if.end
  tail call fastcc void @add_to_speculative_block(%struct.rtx_def* %insn) #7, !dbg !5729
  br label %if.end17, !dbg !5729

if.end17:                                         ; preds = %if.end, %if.then16
  ret void, !dbg !5730
}

declare dso_local void @free_INSN_LIST_list(%struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fix_inter_tick(%struct.rtx_def* %head, %struct.rtx_def* %tail) unnamed_addr #5 !dbg !5731 {
entry:
  %processed = alloca %struct.bitmap_head_def, align 8
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !5733, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !5734, metadata !DIExpression()), !dbg !5750
  %0 = bitcast %struct.bitmap_head_def* %processed to i8*, !dbg !5751
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5751
  %1 = load i32, i32* @clock_var, align 4, !dbg !5752
  %add = add nsw i32 %1, 1, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %add, metadata !5737, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %processed, metadata !5735, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %processed, %struct.bitmap_obstack* null) #7, !dbg !5754
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tail, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5755
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5755
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5755
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5734, metadata !DIExpression()), !dbg !5750
  %4 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !5756
  %5 = bitcast %struct._dep** %dep to i8*, !dbg !5756
  %6 = load i32, i32* @max_insn_queue_index, align 4, !dbg !5756
  %sub = sub nsw i32 0, %6, !dbg !5756
  %7 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !5757
  %8 = xor i32 %6, -1, !dbg !5758
  br label %for.cond, !dbg !5760

for.cond:                                         ; preds = %for.inc169, %entry
  %head.addr.0 = phi %struct.rtx_def* [ %head, %entry ], [ %37, %for.inc169 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.addr.0, metadata !5733, metadata !DIExpression()), !dbg !5750
  %cmp = icmp eq %struct.rtx_def* %head.addr.0, %3, !dbg !5761
  br i1 %cmp, label %for.end174, label %for.body, !dbg !5762

for.body:                                         ; preds = %for.cond
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.addr.0, i64 0, i32 0, !dbg !5763
  %bf.load = load i32, i32* %9, align 8, !dbg !5763
  %bf.clear = and i32 %bf.load, 65535, !dbg !5763
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !5763
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !5763

lor.lhs.false:                                    ; preds = %for.body
  %cmp4 = icmp eq i32 %bf.clear, 7, !dbg !5763
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !5763

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !5763
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !5763

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %cmp12 = icmp eq i32 %bf.clear, 10, !dbg !5763
  br i1 %cmp12, label %if.then, label %for.inc169, !dbg !5764

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8, !dbg !5765
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !5766
  %10 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5767
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %10, i64 0, i32 0, !dbg !5767
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5767
  %rt_int = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !5767
  %11 = load i32, i32* %rt_int, align 8, !dbg !5767
  %call = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %11) #7, !dbg !5767
  %tick16 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 2, !dbg !5767
  %12 = load i32, i32* %tick16, align 8, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %12, metadata !5738, metadata !DIExpression()), !dbg !5756
  %cmp17 = icmp slt i32 %12, %sub, !dbg !5768
  br i1 %cmp17, label %cond.true18, label %cond.end20, !dbg !5768

cond.true18:                                      ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3605, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5768
  br label %cond.end20, !dbg !5768

cond.end20:                                       ; preds = %if.then, %cond.true18
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5769
  %base24 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !5769
  %14 = load i32, i32* %rt_int, align 8, !dbg !5769
  %call32 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base24, i32 %14) #7, !dbg !5769
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %processed, metadata !5735, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  %call33 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %processed, i32 %call32) #6, !dbg !5771
  %tobool34 = icmp eq i32 %call33, 0, !dbg !5771
  br i1 %tobool34, label %if.then35, label %if.end65, !dbg !5772

if.then35:                                        ; preds = %cond.end20
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5773
  %base38 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i64 0, i32 0, !dbg !5773
  %16 = load i32, i32* %rt_int, align 8, !dbg !5773
  %call46 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base38, i32 %16) #7, !dbg !5773
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %processed, metadata !5735, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  %call47 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %processed, i32 %call46) #6, !dbg !5775
  %sub48 = sub nsw i32 %12, %add, !dbg !5776
  call void @llvm.dbg.value(metadata i32 %sub48, metadata !5738, metadata !DIExpression()), !dbg !5756
  %cmp50 = icmp slt i32 %sub48, %sub, !dbg !5777
  %tick.0 = select i1 %cmp50, i32 %sub, i32 %sub48, !dbg !5779
  call void @llvm.dbg.value(metadata i32 %tick.0, metadata !5738, metadata !DIExpression()), !dbg !5756
  %17 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5780
  %base55 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %17, i64 0, i32 0, !dbg !5780
  %18 = load i32, i32* %rt_int, align 8, !dbg !5780
  %call63 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base55, i32 %18) #7, !dbg !5780
  %tick64 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call63, i64 0, i32 2, !dbg !5780
  store i32 %tick.0, i32* %tick64, align 8, !dbg !5781
  br label %if.end65, !dbg !5782

if.end65:                                         ; preds = %cond.end20, %if.then35
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8, !dbg !5783
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %head.addr.0, i32 16) #7, !dbg !5783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %7, i64 32, i1 false), !dbg !5783
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8, !dbg !5783
  br label %for.cond66, !dbg !5783

for.cond66:                                       ; preds = %for.inc, %if.end65
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5744, metadata !DIExpression(DW_OP_deref)), !dbg !5756
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !5745, metadata !DIExpression(DW_OP_deref)), !dbg !5756
  %call67 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !5784
  %tobool68 = icmp eq i8 %call67, 0, !dbg !5783
  br i1 %tobool68, label %for.end, label %for.body69, !dbg !5783

for.body69:                                       ; preds = %for.cond66
  %19 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5785
  call void @llvm.dbg.value(metadata %struct._dep* %19, metadata !5745, metadata !DIExpression()), !dbg !5756
  %con = getelementptr inbounds %struct._dep, %struct._dep* %19, i64 0, i32 1, !dbg !5785
  %20 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !5785
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !5746, metadata !DIExpression()), !dbg !5786
  %21 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5787
  %base72 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %21, i64 0, i32 0, !dbg !5787
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5787
  %rt_int79 = bitcast %union.rtunion_def* %arrayidx78 to i32*, !dbg !5787
  %22 = load i32, i32* %rt_int79, align 8, !dbg !5787
  %call80 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base72, i32 %22) #7, !dbg !5787
  %tick81 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call80, i64 0, i32 2, !dbg !5787
  %23 = load i32, i32* %tick81, align 8, !dbg !5787
  call void @llvm.dbg.value(metadata i32 %23, metadata !5738, metadata !DIExpression()), !dbg !5756
  %cmp84 = icmp eq i32 %23, %8, !dbg !5788
  br i1 %cmp84, label %for.inc, label %land.lhs.true, !dbg !5789

land.lhs.true:                                    ; preds = %for.body69
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5790
  %base87 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %24, i64 0, i32 0, !dbg !5790
  %25 = load i32, i32* %rt_int79, align 8, !dbg !5790
  %call95 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base87, i32 %25) #7, !dbg !5790
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %processed, metadata !5735, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  %call96 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %processed, i32 %call95) #6, !dbg !5791
  %tobool97 = icmp eq i32 %call96, 0, !dbg !5791
  br i1 %tobool97, label %if.then98, label %for.inc, !dbg !5792

if.then98:                                        ; preds = %land.lhs.true
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5793
  %base101 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i64 0, i32 0, !dbg !5793
  %27 = load i32, i32* %rt_int79, align 8, !dbg !5793
  %call109 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base101, i32 %27) #7, !dbg !5793
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %processed, metadata !5735, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  %call110 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %processed, i32 %call109) #6, !dbg !5795
  %sub111 = sub nsw i32 %23, %add, !dbg !5796
  call void @llvm.dbg.value(metadata i32 %sub111, metadata !5738, metadata !DIExpression()), !dbg !5756
  %cmp113 = icmp slt i32 %sub111, %sub, !dbg !5797
  %tick.1 = select i1 %cmp113, i32 %sub, i32 %sub111, !dbg !5799
  call void @llvm.dbg.value(metadata i32 %tick.1, metadata !5738, metadata !DIExpression()), !dbg !5756
  %28 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5800
  %base119 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %28, i64 0, i32 0, !dbg !5800
  %29 = load i32, i32* %rt_int79, align 8, !dbg !5800
  %call127 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base119, i32 %29) #7, !dbg !5800
  %inter_tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call127, i64 0, i32 3, !dbg !5800
  %30 = load i32, i32* %inter_tick, align 4, !dbg !5800
  %cmp128 = icmp sgt i32 %tick.1, %30, !dbg !5802
  %31 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5803
  %base132 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %31, i64 0, i32 0, !dbg !5803
  %32 = load i32, i32* %rt_int79, align 8, !dbg !5803
  %call140 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base132, i32 %32) #7, !dbg !5803
  %inter_tick141 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call140, i64 0, i32 3, !dbg !5803
  br i1 %cmp128, label %if.then129, label %if.else, !dbg !5804

if.then129:                                       ; preds = %if.then98
  store i32 %tick.1, i32* %inter_tick141, align 4, !dbg !5805
  br label %if.end154, !dbg !5806

if.else:                                          ; preds = %if.then98
  %33 = load i32, i32* %inter_tick141, align 4, !dbg !5807
  call void @llvm.dbg.value(metadata i32 %33, metadata !5738, metadata !DIExpression()), !dbg !5756
  br label %if.end154

if.end154:                                        ; preds = %if.else, %if.then129
  %tick.2 = phi i32 [ %tick.1, %if.then129 ], [ %33, %if.else ], !dbg !5808
  call void @llvm.dbg.value(metadata i32 %tick.2, metadata !5738, metadata !DIExpression()), !dbg !5756
  %34 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5809
  %base157 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %34, i64 0, i32 0, !dbg !5809
  %35 = load i32, i32* %rt_int79, align 8, !dbg !5809
  %call165 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base157, i32 %35) #7, !dbg !5809
  %tick166 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call165, i64 0, i32 2, !dbg !5809
  store i32 %tick.2, i32* %tick166, align 8, !dbg !5810
  br label %for.inc, !dbg !5811

for.inc:                                          ; preds = %land.lhs.true, %for.body69, %if.end154
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5744, metadata !DIExpression(DW_OP_deref)), !dbg !5756
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !5784
  br label %for.cond66, !dbg !5784, !llvm.loop !5812

for.end:                                          ; preds = %for.cond66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !5814
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8, !dbg !5814
  br label %for.inc169, !dbg !5815

for.inc169:                                       ; preds = %lor.lhs.false9, %for.end
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5816
  %rt_rtx173 = bitcast %union.rtunion_def* %36 to %struct.rtx_def**, !dbg !5816
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx173, align 8, !dbg !5816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %37, metadata !5733, metadata !DIExpression()), !dbg !5750
  br label %for.cond, !dbg !5817, !llvm.loop !5818

for.end174:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %processed, metadata !5735, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %processed) #6, !dbg !5820
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5821
  ret void, !dbg !5821
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_init_luids(%struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* %bb, %struct.VEC_rtx_heap* %insns, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !5822 {
entry:
  %ssi = alloca %struct.sched_scan_info_def, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %bbs, metadata !5828, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5829, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* %insns, metadata !5830, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5831, metadata !DIExpression()), !dbg !5833
  %0 = bitcast %struct.sched_scan_info_def* %ssi to i8*, !dbg !5834
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 bitcast (%struct.sched_scan_info_def* @__const.sched_init_luids.ssi to i8*), i64 32, i1 false), !dbg !5835
  call void @llvm.dbg.value(metadata %struct.sched_scan_info_def* %ssi, metadata !5832, metadata !DIExpression(DW_OP_deref)), !dbg !5833
  call void @sched_scan(%struct.sched_scan_info_def* nonnull %ssi, %struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* %bb, %struct.VEC_rtx_heap* %insns, %struct.rtx_def* %insn) #7, !dbg !5836
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5837
  ret void, !dbg !5837
}

; Function Attrs: nounwind uwtable
define dso_local i32 @set_priorities(%struct.rtx_def* %head, %struct.rtx_def* %tail) local_unnamed_addr #5 !dbg !5838 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head, metadata !5840, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !5841, metadata !DIExpression()), !dbg !5846
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5847
  %sched_max_insns_priority1 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 13, !dbg !5848
  %1 = load i32, i32* %sched_max_insns_priority1, align 4, !dbg !5848
  call void @llvm.dbg.value(metadata i32 %1, metadata !5844, metadata !DIExpression()), !dbg !5846
  %cmp = icmp eq %struct.rtx_def* %head, %tail, !dbg !5849
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5851

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 0, !dbg !5852
  %bf.load = load i32, i32* %2, align 8, !dbg !5852
  %bf.clear = and i32 %bf.load, 65535, !dbg !5852
  %cmp2 = icmp eq i32 %bf.clear, 8, !dbg !5852
  br i1 %cmp2, label %lor.lhs.false14, label %lor.lhs.false, !dbg !5852

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !5852
  br i1 %cmp5, label %lor.lhs.false14, label %lor.lhs.false6, !dbg !5852

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 9, !dbg !5852
  br i1 %cmp9, label %lor.lhs.false14, label %lor.lhs.false10, !dbg !5852

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %cmp13 = icmp eq i32 %bf.clear, 10, !dbg !5852
  br i1 %cmp13, label %lor.lhs.false14, label %if.then, !dbg !5853

lor.lhs.false14:                                  ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %land.lhs.true
  %cmp17 = icmp eq i32 %bf.clear, 7, !dbg !5854
  br i1 %cmp17, label %land.lhs.true18, label %if.end, !dbg !5854

land.lhs.true18:                                  ; preds = %lor.lhs.false14
  %bf.clear20 = and i32 %bf.load, 67108864, !dbg !5854
  %tobool = icmp eq i32 %bf.clear20, 0, !dbg !5854
  br i1 %tobool, label %if.then, label %if.end, !dbg !5855

if.then:                                          ; preds = %land.lhs.true18, %lor.lhs.false10
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3309, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5856
  br label %if.end, !dbg !5856

if.end:                                           ; preds = %land.lhs.true18, %if.then, %lor.lhs.false14, %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !5843, metadata !DIExpression()), !dbg !5846
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5857
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !5857
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tail, metadata !5842, metadata !DIExpression()), !dbg !5846
  br label %for.cond, !dbg !5858

for.cond:                                         ; preds = %for.inc, %if.end
  %insn.0 = phi %struct.rtx_def* [ %tail, %if.end ], [ %16, %for.inc ], !dbg !5860
  %n_insn.0 = phi i32 [ 0, %if.end ], [ %n_insn.1, %for.inc ], !dbg !5846
  %sched_max_insns_priority.0 = phi i32 [ %1, %if.end ], [ %sched_max_insns_priority.1, %for.inc ], !dbg !5846
  call void @llvm.dbg.value(metadata i32 %sched_max_insns_priority.0, metadata !5844, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %n_insn.0, metadata !5843, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5842, metadata !DIExpression()), !dbg !5846
  %cmp21 = icmp eq %struct.rtx_def* %insn.0, %4, !dbg !5861
  br i1 %cmp21, label %for.end, label %for.body, !dbg !5863

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5864
  %bf.load22 = load i32, i32* %5, align 8, !dbg !5864
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5864
  %cmp24 = icmp eq i32 %bf.clear23, 8, !dbg !5864
  br i1 %cmp24, label %if.end38, label %lor.lhs.false25, !dbg !5864

lor.lhs.false25:                                  ; preds = %for.body
  %cmp28 = icmp eq i32 %bf.clear23, 7, !dbg !5864
  br i1 %cmp28, label %if.end38, label %lor.lhs.false29, !dbg !5864

lor.lhs.false29:                                  ; preds = %lor.lhs.false25
  %cmp32 = icmp eq i32 %bf.clear23, 9, !dbg !5864
  br i1 %cmp32, label %if.end38, label %lor.lhs.false33, !dbg !5864

lor.lhs.false33:                                  ; preds = %lor.lhs.false29
  %cmp36 = icmp eq i32 %bf.clear23, 10, !dbg !5864
  br i1 %cmp36, label %if.end38, label %for.inc, !dbg !5867

if.end38:                                         ; preds = %lor.lhs.false33, %lor.lhs.false29, %lor.lhs.false25, %for.body
  %inc = add nsw i32 %n_insn.0, 1, !dbg !5868
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5843, metadata !DIExpression()), !dbg !5846
  %call = tail call fastcc i32 @priority(%struct.rtx_def* %insn.0) #7, !dbg !5869
  %6 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5870
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %6, i64 0, i32 0, !dbg !5870
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5870
  %rt_int = bitcast %union.rtunion_def* %arrayidx42 to i32*, !dbg !5870
  %7 = load i32, i32* %rt_int, align 8, !dbg !5870
  %call43 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %7) #7, !dbg !5870
  %priority_status = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call43, i64 0, i32 7, !dbg !5870
  %8 = load i8, i8* %priority_status, align 1, !dbg !5870
  %cmp44 = icmp sgt i8 %8, 0, !dbg !5870
  br i1 %cmp44, label %cond.end48, label %cond.true46, !dbg !5870

cond.true46:                                      ; preds = %if.end38
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5870
  br label %cond.end48, !dbg !5870

cond.end48:                                       ; preds = %if.end38, %cond.true46
  %9 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5871
  %base52 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %9, i64 0, i32 0, !dbg !5871
  %10 = load i32, i32* %rt_int, align 8, !dbg !5871
  %call60 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base52, i32 %10) #7, !dbg !5871
  %priority = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call60, i64 0, i32 1, !dbg !5871
  %11 = load i32, i32* %priority, align 4, !dbg !5871
  %cmp61 = icmp sgt i32 %sched_max_insns_priority.0, %11, !dbg !5871
  br i1 %cmp61, label %for.inc, label %cond.false64, !dbg !5871

cond.false64:                                     ; preds = %cond.end48
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5871
  %base67 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %12, i64 0, i32 0, !dbg !5871
  %13 = load i32, i32* %rt_int, align 8, !dbg !5871
  %call75 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base67, i32 %13) #7, !dbg !5871
  %priority76 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call75, i64 0, i32 1, !dbg !5871
  %14 = load i32, i32* %priority76, align 4, !dbg !5871
  br label %for.inc, !dbg !5871

for.inc:                                          ; preds = %cond.false64, %cond.end48, %lor.lhs.false33
  %n_insn.1 = phi i32 [ %n_insn.0, %lor.lhs.false33 ], [ %inc, %cond.end48 ], [ %inc, %cond.false64 ], !dbg !5846
  %sched_max_insns_priority.1 = phi i32 [ %sched_max_insns_priority.0, %lor.lhs.false33 ], [ %sched_max_insns_priority.0, %cond.end48 ], [ %14, %cond.false64 ], !dbg !5846
  call void @llvm.dbg.value(metadata i32 %sched_max_insns_priority.1, metadata !5844, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %n_insn.1, metadata !5843, metadata !DIExpression()), !dbg !5846
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5872
  %rt_rtx82 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !5872
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx82, align 8, !dbg !5872
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !5842, metadata !DIExpression()), !dbg !5846
  br label %for.cond, !dbg !5873, !llvm.loop !5874

for.end:                                          ; preds = %for.cond
  %n_insn.0.lcssa = phi i32 [ %n_insn.0, %for.cond ], !dbg !5846
  %sched_max_insns_priority.0.lcssa = phi i32 [ %sched_max_insns_priority.0, %for.cond ], !dbg !5846
  call void @llvm.dbg.value(metadata i32 %n_insn.0.lcssa, metadata !5843, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %sched_max_insns_priority.0.lcssa, metadata !5844, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %n_insn.0.lcssa, metadata !5843, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %sched_max_insns_priority.0.lcssa, metadata !5844, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %n_insn.0.lcssa, metadata !5843, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %sched_max_insns_priority.0.lcssa, metadata !5844, metadata !DIExpression()), !dbg !5846
  %17 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5876
  %sched_max_insns_priority83 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %17, i64 0, i32 13, !dbg !5877
  store i32 %sched_max_insns_priority.0.lcssa, i32* %sched_max_insns_priority83, align 4, !dbg !5878
  ret i32 %n_insn.0.lcssa, !dbg !5879
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @priority(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !5880 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %_dep1 = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5882, metadata !DIExpression()), !dbg !5907
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !5908
  %bf.load = load i32, i32* %0, align 8, !dbg !5908
  %bf.clear = and i32 %bf.load, 65535, !dbg !5908
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5908
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !5908

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !5908
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !5908

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !5908
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !5908

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !5908
  br i1 %cmp11, label %if.end, label %return, !dbg !5910

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5911
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !5911
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5911
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5911
  %2 = load i32, i32* %rt_int, align 8, !dbg !5911
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %2) #7, !dbg !5911
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 4, !dbg !5911
  %3 = load i32, i32* %queue_index, align 8, !dbg !5911
  %cmp12 = icmp eq i32 %3, -3, !dbg !5911
  br i1 %cmp12, label %cond.true13, label %cond.end15, !dbg !5911

cond.true13:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1010, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5911
  br label %cond.end15, !dbg !5911

cond.end15:                                       ; preds = %if.end, %cond.true13
  %4 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5912
  %base19 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %4, i64 0, i32 0, !dbg !5912
  %5 = load i32, i32* %rt_int, align 8, !dbg !5912
  %call27 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base19, i32 %5) #7, !dbg !5912
  %priority_status = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call27, i64 0, i32 7, !dbg !5912
  %6 = load i8, i8* %priority_status, align 1, !dbg !5912
  %cmp28 = icmp sgt i8 %6, 0, !dbg !5912
  br i1 %cmp28, label %if.end144, label %if.then30, !dbg !5913

if.then30:                                        ; preds = %cond.end15
  call void @llvm.dbg.value(metadata i32 -1, metadata !5883, metadata !DIExpression()), !dbg !5914
  %call31 = tail call fastcc i32 @dep_list_size(%struct.rtx_def* %insn) #7, !dbg !5915
  %cmp32 = icmp eq i32 %call31, 0, !dbg !5916
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !5917

if.then34:                                        ; preds = %if.then30
  %call35 = tail call i32 @insn_cost(%struct.rtx_def* %insn) #7, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %call35, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %if.end109, !dbg !5919

if.else:                                          ; preds = %if.then30
  %call36 = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !5920
  %tobool38 = icmp eq i8 %call36, 0, !dbg !5920
  br i1 %tobool38, label %cond.false40, label %cond.end52, !dbg !5920

cond.false40:                                     ; preds = %if.else
  %7 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5921
  %base43 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %7, i64 0, i32 0, !dbg !5921
  %8 = load i32, i32* %rt_int, align 8, !dbg !5921
  %call51 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base43, i32 %8) #7, !dbg !5921
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call51, i64 0, i32 11, !dbg !5921
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !5921
  br label %cond.end52, !dbg !5920

cond.end52:                                       ; preds = %if.else, %cond.false40
  %cond53 = phi %struct.basic_block_def* [ %9, %cond.false40 ], [ null, %if.else ], !dbg !5920
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond53, metadata !5890, metadata !DIExpression()), !dbg !5922
  %tobool54 = icmp eq %struct.basic_block_def* %cond53, null, !dbg !5923
  br i1 %tobool54, label %if.then58, label %lor.lhs.false55, !dbg !5925

lor.lhs.false55:                                  ; preds = %cond.end52
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5926
  %cfg = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !5926
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5926
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 1, !dbg !5926
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5926
  %cmp56 = icmp eq %struct.basic_block_def* %cond53, %12, !dbg !5927
  br i1 %cmp56, label %if.then58, label %if.else62, !dbg !5928

if.then58:                                        ; preds = %cond.end52, %lor.lhs.false55
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !5889, metadata !DIExpression()), !dbg !5922
  br label %if.end73, !dbg !5931

if.else62:                                        ; preds = %lor.lhs.false55
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond53, i64 0, i32 7, !dbg !5932
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5932
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5932
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 0, !dbg !5932
  %15 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5932
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5932
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !5934
  %17 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5934
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5934
  %rt_rtx72 = bitcast %union.rtunion_def* %18 to %struct.rtx_def**, !dbg !5934
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !5934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !5889, metadata !DIExpression()), !dbg !5922
  br label %if.end73

if.end73:                                         ; preds = %if.else62, %if.then58
  %twin.0 = phi %struct.rtx_def* [ %insn, %if.then58 ], [ %19, %if.else62 ], !dbg !5935
  %prev_first.0.in.in = phi %union.rtunion_def* [ %13, %if.then58 ], [ %16, %if.else62 ]
  %prev_first.0.in = bitcast %union.rtunion_def* %prev_first.0.in.in to %struct.rtx_def**, !dbg !5935
  %prev_first.0 = load %struct.rtx_def*, %struct.rtx_def** %prev_first.0.in, align 8, !dbg !5935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_first.0, metadata !5886, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twin.0, metadata !5889, metadata !DIExpression()), !dbg !5922
  %20 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !5936
  %21 = bitcast %struct._dep** %dep to i8*, !dbg !5936
  %22 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !5937
  %23 = bitcast %struct._dep* %_dep1 to i8*, !dbg !5938
  br label %do.body, !dbg !5939

do.body:                                          ; preds = %for.end, %if.end73
  %twin.1 = phi %struct.rtx_def* [ %twin.0, %if.end73 ], [ %32, %for.end ], !dbg !5922
  %this_priority.0 = phi i32 [ -1, %if.end73 ], [ %this_priority.1.lcssa, %for.end ], !dbg !5940
  call void @llvm.dbg.value(metadata i32 %this_priority.0, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twin.1, metadata !5889, metadata !DIExpression()), !dbg !5922
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #8, !dbg !5941
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8, !dbg !5942
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8, !dbg !5943
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %twin.1, i32 4) #7, !dbg !5943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %22, i64 32, i1 false), !dbg !5943
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8, !dbg !5943
  %cmp86 = icmp eq %struct.rtx_def* %twin.1, %insn, !dbg !5944
  br i1 %cmp86, label %do.body.split.us, label %do.body.do.body.split_crit_edge, !dbg !5943

do.body.do.body.split_crit_edge:                  ; preds = %do.body
  br label %for.cond, !dbg !5943

do.body.split.us:                                 ; preds = %do.body
  br label %for.cond.us, !dbg !5943

for.cond.us:                                      ; preds = %cleanup99.us, %do.body.split.us
  %this_priority.1.us = phi i32 [ %this_priority.0, %do.body.split.us ], [ %this_priority.5.us, %cleanup99.us ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.us, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5891, metadata !DIExpression(DW_OP_deref)), !dbg !5936
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !5893, metadata !DIExpression(DW_OP_deref)), !dbg !5936
  %call74.us = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !5945
  %tobool75.us = icmp eq i8 %call74.us, 0, !dbg !5943
  br i1 %tobool75.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !5943

for.body.us:                                      ; preds = %for.cond.us
  %24 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5946
  call void @llvm.dbg.value(metadata %struct._dep* %24, metadata !5893, metadata !DIExpression()), !dbg !5936
  %con.us = getelementptr inbounds %struct._dep, %struct._dep* %24, i64 0, i32 1, !dbg !5946
  %25 = load %struct.rtx_def*, %struct.rtx_def** %con.us, align 8, !dbg !5946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !5894, metadata !DIExpression()), !dbg !5947
  %arrayidx78.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 1, !dbg !5948
  %rt_bb.us = bitcast %struct.object_block** %arrayidx78.us to %struct.basic_block_def**, !dbg !5948
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb.us, align 8, !dbg !5948
  %cmp79.us = icmp eq %struct.basic_block_def* %26, %cond53, !dbg !5949
  br i1 %cmp79.us, label %if.end98.us, label %if.then81.us, !dbg !5950

if.then81.us:                                     ; preds = %for.body.us
  call void @llvm.dbg.value(metadata %struct._dep* %24, metadata !5893, metadata !DIExpression()), !dbg !5936
  %call82.us = call fastcc zeroext i8 @contributes_to_priority_p(%struct._dep* %24) #7, !dbg !5951
  %tobool83.us = icmp eq i8 %call82.us, 0, !dbg !5951
  br i1 %tobool83.us, label %cleanup.us, label %if.end85.us, !dbg !5953

if.end85.us:                                      ; preds = %if.then81.us
  %27 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5954
  call void @llvm.dbg.value(metadata %struct._dep* %27, metadata !5893, metadata !DIExpression()), !dbg !5936
  %call89.us = call i32 @dep_cost(%struct._dep* %27) #7, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %call89.us, metadata !5899, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i32 %call89.us, metadata !5899, metadata !DIExpression()), !dbg !5956
  %call93.us = call fastcc i32 @priority(%struct.rtx_def* %25) #7, !dbg !5957
  %add.us = add nsw i32 %call89.us, %call93.us, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %add.us, metadata !5898, metadata !DIExpression()), !dbg !5947
  %cmp94.us = icmp sgt i32 %add.us, %this_priority.1.us, !dbg !5959
  %spec.select.us = select i1 %cmp94.us, i32 %add.us, i32 %this_priority.1.us, !dbg !5961
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %cleanup.us, !dbg !5962

cleanup.us:                                       ; preds = %if.end85.us, %if.then81.us
  %this_priority.3.us = phi i32 [ %spec.select.us, %if.end85.us ], [ %this_priority.1.us, %if.then81.us ], !dbg !5914
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.end85.us ], [ false, %if.then81.us ]
  call void @llvm.dbg.value(metadata i32 %this_priority.3.us, metadata !5883, metadata !DIExpression()), !dbg !5914
  br i1 %cleanup.dest.slot.0.us, label %if.end98.us, label %cleanup99.us

if.end98.us:                                      ; preds = %cleanup.us, %for.body.us
  %this_priority.4.us = phi i32 [ %this_priority.1.us, %for.body.us ], [ %this_priority.3.us, %cleanup.us ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.4.us, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %cleanup99.us, !dbg !5963

cleanup99.us:                                     ; preds = %if.end98.us, %cleanup.us
  %this_priority.5.us = phi i32 [ %this_priority.3.us, %cleanup.us ], [ %this_priority.4.us, %if.end98.us ], !dbg !5964
  call void @llvm.dbg.value(metadata i32 %this_priority.5.us, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5891, metadata !DIExpression(DW_OP_deref)), !dbg !5936
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !5945
  br label %for.cond.us, !dbg !5945, !llvm.loop !5965

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %this_priority.1.us.lcssa = phi i32 [ %this_priority.1.us, %for.cond.us ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.us.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.us.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %for.end, !dbg !5967

for.cond:                                         ; preds = %cleanup99, %do.body.do.body.split_crit_edge
  %this_priority.1 = phi i32 [ %this_priority.0, %do.body.do.body.split_crit_edge ], [ %this_priority.5, %cleanup99 ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5891, metadata !DIExpression(DW_OP_deref)), !dbg !5936
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !5893, metadata !DIExpression(DW_OP_deref)), !dbg !5936
  %call74 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !5945
  %tobool75 = icmp eq i8 %call74, 0, !dbg !5943
  br i1 %tobool75, label %for.end.us-lcssa, label %for.body, !dbg !5943

for.body:                                         ; preds = %for.cond
  %28 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5946
  call void @llvm.dbg.value(metadata %struct._dep* %28, metadata !5893, metadata !DIExpression()), !dbg !5936
  %con = getelementptr inbounds %struct._dep, %struct._dep* %28, i64 0, i32 1, !dbg !5946
  %29 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !5946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !5894, metadata !DIExpression()), !dbg !5947
  %arrayidx78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 1, !dbg !5948
  %rt_bb = bitcast %struct.object_block** %arrayidx78 to %struct.basic_block_def**, !dbg !5948
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5948
  %cmp79 = icmp eq %struct.basic_block_def* %30, %cond53, !dbg !5949
  br i1 %cmp79, label %if.end98, label %if.then81, !dbg !5950

if.then81:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._dep* %28, metadata !5893, metadata !DIExpression()), !dbg !5936
  %call82 = call fastcc zeroext i8 @contributes_to_priority_p(%struct._dep* %28) #7, !dbg !5951
  %tobool83 = icmp eq i8 %call82, 0, !dbg !5951
  br i1 %tobool83, label %cleanup, label %if.end85, !dbg !5953

if.end85:                                         ; preds = %if.then81
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8, !dbg !5968
  call void @llvm.dbg.value(metadata %struct._dep* %_dep1, metadata !5905, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata %struct._dep* %_dep1, metadata !5902, metadata !DIExpression(DW_OP_deref)), !dbg !5938
  call void @init_dep(%struct._dep* nonnull %_dep1, %struct.rtx_def* %insn, %struct.rtx_def* %29, i32 12) #6, !dbg !5969
  call void @llvm.dbg.value(metadata %struct._dep* %_dep1, metadata !5902, metadata !DIExpression(DW_OP_deref)), !dbg !5938
  %call91 = call i32 @dep_cost(%struct._dep* nonnull %_dep1) #7, !dbg !5970
  call void @llvm.dbg.value(metadata i32 %call91, metadata !5899, metadata !DIExpression()), !dbg !5956
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8, !dbg !5971
  call void @llvm.dbg.value(metadata i32 %call91, metadata !5899, metadata !DIExpression()), !dbg !5956
  %call93 = call fastcc i32 @priority(%struct.rtx_def* %29) #7, !dbg !5957
  %add = add nsw i32 %call91, %call93, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %add, metadata !5898, metadata !DIExpression()), !dbg !5947
  %cmp94 = icmp sgt i32 %add, %this_priority.1, !dbg !5959
  %spec.select = select i1 %cmp94, i32 %add, i32 %this_priority.1, !dbg !5961
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %cleanup, !dbg !5962

cleanup:                                          ; preds = %if.then81, %if.end85
  %this_priority.3 = phi i32 [ %spec.select, %if.end85 ], [ %this_priority.1, %if.then81 ], !dbg !5914
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end85 ], [ false, %if.then81 ]
  call void @llvm.dbg.value(metadata i32 %this_priority.3, metadata !5883, metadata !DIExpression()), !dbg !5914
  br i1 %cleanup.dest.slot.0, label %if.end98, label %cleanup99

if.end98:                                         ; preds = %for.body, %cleanup
  %this_priority.4 = phi i32 [ %this_priority.1, %for.body ], [ %this_priority.3, %cleanup ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.4, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %cleanup99, !dbg !5963

cleanup99:                                        ; preds = %cleanup, %if.end98
  %this_priority.5 = phi i32 [ %this_priority.3, %cleanup ], [ %this_priority.4, %if.end98 ], !dbg !5964
  call void @llvm.dbg.value(metadata i32 %this_priority.5, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !5891, metadata !DIExpression(DW_OP_deref)), !dbg !5936
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !5945
  br label %for.cond, !dbg !5945, !llvm.loop !5965

for.end.us-lcssa:                                 ; preds = %for.cond
  %this_priority.1.lcssa3 = phi i32 [ %this_priority.1, %for.cond ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.lcssa3, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.lcssa3, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %for.end, !dbg !5967

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %this_priority.1.lcssa = phi i32 [ %this_priority.1.lcssa3, %for.end.us-lcssa ], [ %this_priority.1.us.lcssa, %for.end.us-lcssa.us ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5914
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %twin.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5967
  %rt_rtx106 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !5967
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !5967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !5889, metadata !DIExpression()), !dbg !5922
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8, !dbg !5972
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #8, !dbg !5972
  %cmp107 = icmp eq %struct.rtx_def* %32, %prev_first.0, !dbg !5973
  br i1 %cmp107, label %if.end109.loopexit, label %do.body, !dbg !5974, !llvm.loop !5975

if.end109.loopexit:                               ; preds = %for.end
  %this_priority.1.lcssa.lcssa = phi i32 [ %this_priority.1.lcssa, %for.end ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.lcssa.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.lcssa.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.1.lcssa.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %if.end109, !dbg !5977

if.end109:                                        ; preds = %if.end109.loopexit, %if.then34
  %this_priority.6 = phi i32 [ %call35, %if.then34 ], [ %this_priority.1.lcssa.lcssa, %if.end109.loopexit ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.6, metadata !5883, metadata !DIExpression()), !dbg !5914
  %cmp110 = icmp slt i32 %this_priority.6, 0, !dbg !5977
  br i1 %cmp110, label %if.then112, label %if.end120, !dbg !5979

if.then112:                                       ; preds = %if.end109
  %cmp113 = icmp eq i32 %this_priority.6, -1, !dbg !5980
  br i1 %cmp113, label %cond.end117, label %cond.true115, !dbg !5980

cond.true115:                                     ; preds = %if.then112
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1090, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5980
  br label %cond.end117, !dbg !5980

cond.end117:                                      ; preds = %if.then112, %cond.true115
  %call119 = call i32 @insn_cost(%struct.rtx_def* %insn) #7, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %call119, metadata !5883, metadata !DIExpression()), !dbg !5914
  br label %if.end120, !dbg !5983

if.end120:                                        ; preds = %cond.end117, %if.end109
  %this_priority.7 = phi i32 [ %call119, %cond.end117 ], [ %this_priority.6, %if.end109 ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %this_priority.7, metadata !5883, metadata !DIExpression()), !dbg !5914
  %33 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5984
  %base123 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %33, i64 0, i32 0, !dbg !5984
  %34 = load i32, i32* %rt_int, align 8, !dbg !5984
  %call131 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base123, i32 %34) #7, !dbg !5984
  %priority = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call131, i64 0, i32 1, !dbg !5984
  store i32 %this_priority.7, i32* %priority, align 4, !dbg !5985
  %35 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5986
  %base134 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %35, i64 0, i32 0, !dbg !5986
  %36 = load i32, i32* %rt_int, align 8, !dbg !5986
  %call142 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base134, i32 %36) #7, !dbg !5986
  %priority_status143 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call142, i64 0, i32 7, !dbg !5986
  store i8 1, i8* %priority_status143, align 1, !dbg !5987
  br label %if.end144, !dbg !5988

if.end144:                                        ; preds = %if.end120, %cond.end15
  %37 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !5989
  %base147 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %37, i64 0, i32 0, !dbg !5989
  %38 = load i32, i32* %rt_int, align 8, !dbg !5989
  %call155 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base147, i32 %38) #7, !dbg !5989
  %priority156 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call155, i64 0, i32 1, !dbg !5989
  %39 = load i32, i32* %priority156, align 4, !dbg !5989
  br label %return, !dbg !5990

return:                                           ; preds = %lor.lhs.false8, %if.end144
  %retval.0 = phi i32 [ %39, %if.end144 ], [ 0, %lor.lhs.false8 ], !dbg !5907
  ret i32 %retval.0, !dbg !5991
}

; Function Attrs: nounwind uwtable
define dso_local void @setup_sched_dump() local_unnamed_addr #5 !dbg !5992 {
entry:
  %0 = load i32, i32* @sched_verbose_param, align 4, !dbg !5993
  %cmp = icmp eq i32 %0, 0, !dbg !5994
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5996
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !5996
  %or.cond = and i1 %cmp, %tobool, !dbg !5997
  %spec.store.select = select i1 %or.cond, i32 1, i32 %0, !dbg !5997
  store i32 %spec.store.select, i32* @sched_verbose, align 4, !dbg !5998
  %cmp1 = icmp slt i32 %0, 10, !dbg !5999
  %or.cond1 = and i1 %cmp1, %tobool, !dbg !6000
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6000
  %cond = select i1 %or.cond1, %struct._IO_FILE* %1, %struct._IO_FILE* %2, !dbg !6000
  store %struct._IO_FILE* %cond, %struct._IO_FILE** @sched_dump, align 8, !dbg !6001
  ret void, !dbg !6002
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_init() local_unnamed_addr #5 !dbg !6003 {
entry:
  %0 = load i32, i32* @flag_sched_pressure, align 4, !dbg !6009
  %tobool = icmp eq i32 %0, 0, !dbg !6009
  %1 = load i32, i32* @reload_completed, align 4, !dbg !6010
  %tobool1 = icmp ne i32 %1, 0, !dbg !6010
  %or.cond = or i1 %tobool, %tobool1, !dbg !6011
  br i1 %or.cond, label %land.end, label %land.rhs, !dbg !6011

land.rhs:                                         ; preds = %entry
  %2 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !6012
  %sched_pass_id = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %2, i64 0, i32 4, !dbg !6013
  %3 = load i32, i32* %sched_pass_id, align 8, !dbg !6013
  %cmp = icmp eq i32 %3, 1, !dbg !6014
  %phitmp = zext i1 %cmp to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %4 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  store i8 %4, i8* @sched_pressure_p, align 1, !dbg !6015
  %tobool2 = icmp eq i8 %4, 0, !dbg !6016
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6018

if.then:                                          ; preds = %land.end
  tail call void @ira_setup_eliminable_regset() #6, !dbg !6019
  br label %if.end, !dbg !6019

if.end:                                           ; preds = %land.end, %if.then
  %5 = load void (%struct.spec_info_def*)*, void (%struct.spec_info_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 32), align 8, !dbg !6020
  %tobool3 = icmp eq void (%struct.spec_info_def*)* %5, null, !dbg !6022
  br i1 %tobool3, label %if.else13, label %if.then4, !dbg !6023

if.then4:                                         ; preds = %if.end
  store %struct.spec_info_def* @spec_info_var, %struct.spec_info_def** @spec_info, align 8, !dbg !6024
  tail call void %5(%struct.spec_info_def* nonnull @spec_info_var) #6, !dbg !6026
  %6 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6027
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %6, i64 0, i32 0, !dbg !6029
  %7 = load i32, i32* %mask, align 8, !dbg !6029
  %cmp5 = icmp eq i32 %7, 0, !dbg !6030
  br i1 %cmp5, label %if.else, label %if.then7, !dbg !6031

if.then7:                                         ; preds = %if.then4
  %8 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6032
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %8, i64 84, i32 1, !dbg !6032
  %9 = load i32, i32* %value, align 8, !dbg !6032
  %mul = mul nsw i32 %9, 62, !dbg !6034
  %div = sdiv i32 %mul, 100, !dbg !6035
  %data_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %6, i64 0, i32 2, !dbg !6036
  store i32 %div, i32* %data_weakness_cutoff, align 8, !dbg !6037
  %10 = load i32, i32* %value, align 8, !dbg !6038
  %div11 = mul nsw i32 %10, 100, !dbg !6039
  %control_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %6, i64 0, i32 3, !dbg !6040
  store i32 %div11, i32* %control_weakness_cutoff, align 4, !dbg !6041
  br label %if.end14, !dbg !6042

if.else:                                          ; preds = %if.then4
  store %struct.spec_info_def* null, %struct.spec_info_def** @spec_info, align 8, !dbg !6043
  br label %if.end14

if.else13:                                        ; preds = %if.end
  store %struct.spec_info_def* null, %struct.spec_info_def** @spec_info, align 8, !dbg !6044
  br label %if.end14

if.end14:                                         ; preds = %if.then7, %if.else, %if.else13
  %11 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 2), align 8, !dbg !6045
  %tobool15 = icmp eq i32 ()* %11, null, !dbg !6047
  br i1 %tobool15, label %if.else17, label %if.then16, !dbg !6048

if.then16:                                        ; preds = %if.end14
  %call = tail call i32 %11() #6, !dbg !6049
  br label %if.end18, !dbg !6050

if.else17:                                        ; preds = %if.end14
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.then16
  %12 = phi i32 [ 1, %if.else17 ], [ %call, %if.then16 ], !dbg !6051
  store i32 %12, i32* @issue_rate, align 4, !dbg !6051
  %13 = load i32, i32* @cached_issue_rate, align 4, !dbg !6052
  %cmp19 = icmp eq i32 %13, %12, !dbg !6054
  br i1 %cmp19, label %if.end22, label %if.then21, !dbg !6055

if.then21:                                        ; preds = %if.end18
  store i32 %12, i32* @cached_issue_rate, align 4, !dbg !6056
  store i32 0, i32* @cached_first_cycle_multipass_dfa_lookahead, align 4, !dbg !6058
  br label %if.end22, !dbg !6059

if.end22:                                         ; preds = %if.end18, %if.then21
  %14 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 17), align 8, !dbg !6060
  %tobool23 = icmp eq i32 ()* %14, null, !dbg !6062
  br i1 %tobool23, label %if.else26, label %if.then24, !dbg !6063

if.then24:                                        ; preds = %if.end22
  %call25 = tail call i32 %14() #6, !dbg !6064
  br label %if.end27, !dbg !6065

if.else26:                                        ; preds = %if.end22
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then24
  %storemerge1 = phi i32 [ 0, %if.else26 ], [ %call25, %if.then24 ], !dbg !6066
  store i32 %storemerge1, i32* @dfa_lookahead, align 4, !dbg !6066
  %15 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 11), align 8, !dbg !6067
  %tobool28 = icmp eq void ()* %15, null, !dbg !6069
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !6070

if.then29:                                        ; preds = %if.end27
  tail call void %15() #6, !dbg !6071
  br label %if.end30, !dbg !6071

if.end30:                                         ; preds = %if.end27, %if.then29
  %16 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 13), align 8, !dbg !6072
  %tobool31 = icmp eq void ()* %16, null, !dbg !6074
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !6075

if.then32:                                        ; preds = %if.end30
  tail call void %16() #6, !dbg !6076
  br label %if.end33, !dbg !6076

if.end33:                                         ; preds = %if.end30, %if.then32
  tail call void @dfa_start() #6, !dbg !6077
  %call34 = tail call i32 @state_size() #6, !dbg !6078
  %conv35 = sext i32 %call34 to i64, !dbg !6078
  store i64 %conv35, i64* @dfa_state_size, align 8, !dbg !6079
  tail call void @init_alias_analysis() #6, !dbg !6080
  %call36 = tail call i32 @df_set_flags(i32 1) #6, !dbg !6081
  tail call void @df_note_add_problem() #6, !dbg !6082
  %17 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !6083
  %sched_pass_id37 = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %17, i64 0, i32 4, !dbg !6085
  %18 = load i32, i32* %sched_pass_id37, align 8, !dbg !6085
  %cmp38 = icmp eq i32 %18, 3, !dbg !6086
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !6087

if.then40:                                        ; preds = %if.end33
  tail call void @df_rd_add_problem() #6, !dbg !6088
  tail call void @df_chain_add_problem(i32 3) #6, !dbg !6090
  br label %if.end41, !dbg !6091

if.end41:                                         ; preds = %if.then40, %if.end33
  tail call void @df_analyze() #6, !dbg !6092
  %19 = load i32, i32* @reload_completed, align 4, !dbg !6093
  %tobool42 = icmp eq i32 %19, 0, !dbg !6093
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !6095

if.then43:                                        ; preds = %if.end41
  %call44 = tail call i32 @df_clear_flags(i32 1) #6, !dbg !6096
  br label %if.end45, !dbg !6096

if.end45:                                         ; preds = %if.end41, %if.then43
  tail call void @regstat_compute_calls_crossed() #6, !dbg !6097
  %20 = load void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 6), align 8, !dbg !6098
  %tobool46 = icmp eq void (%struct._IO_FILE*, i32, i32)* %20, null, !dbg !6100
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !6101

if.then47:                                        ; preds = %if.end45
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6102
  %22 = load i32, i32* @sched_verbose, align 4, !dbg !6103
  %call48 = tail call i32 @get_max_uid() #6, !dbg !6104
  %add = add nsw i32 %call48, 1, !dbg !6105
  tail call void %20(%struct._IO_FILE* %21, i32 %22, i32 %add) #6, !dbg !6106
  br label %if.end49, !dbg !6106

if.end49:                                         ; preds = %if.end45, %if.then47
  %23 = load i8, i8* @sched_pressure_p, align 1, !dbg !6107
  %tobool50 = icmp eq i8 %23, 0, !dbg !6107
  br i1 %tobool50, label %if.end74, label %if.then51, !dbg !6108

if.then51:                                        ; preds = %if.end49
  %call52 = tail call i32 @max_reg_num() #6, !dbg !6109
  call void @llvm.dbg.value(metadata i32 %call52, metadata !6008, metadata !DIExpression()), !dbg !6110
  %24 = load i32, i32* @sched_verbose, align 4, !dbg !6111
  %tobool53 = icmp eq i32 %24, 0, !dbg !6111
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6111
  %cond = select i1 %tobool53, %struct._IO_FILE* null, %struct._IO_FILE* %25, !dbg !6111
  tail call void @ira_set_pseudo_classes(%struct._IO_FILE* %cond) #6, !dbg !6112
  %conv54 = sext i32 %call52 to i64, !dbg !6113
  %mul55 = shl nsw i64 %conv54, 2, !dbg !6114
  %call56 = tail call i8* @xmalloc(i64 %mul55) #6, !dbg !6115
  store i8* %call56, i8** bitcast (i32** @sched_regno_cover_class to i8**), align 8, !dbg !6116
  call void @llvm.dbg.value(metadata i32 0, metadata !6005, metadata !DIExpression()), !dbg !6110
  %26 = sext i32 %call52 to i64, !dbg !6117
  br label %for.cond, !dbg !6117

for.cond:                                         ; preds = %cond.end67, %if.then51
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end67 ], [ 0, %if.then51 ], !dbg !6119
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6005, metadata !DIExpression()), !dbg !6110
  %cmp57 = icmp slt i64 %indvars.iv, %26, !dbg !6120
  br i1 %cmp57, label %for.body, label %for.end, !dbg !6122

for.body:                                         ; preds = %for.cond
  %cmp59 = icmp ult i64 %indvars.iv, 53, !dbg !6123
  br i1 %cmp59, label %cond.true61, label %cond.false65, !dbg !6124

cond.true61:                                      ; preds = %for.body
  %arrayidx62 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %indvars.iv, !dbg !6125
  %27 = load i32, i32* %arrayidx62, align 4, !dbg !6125
  %idxprom63 = zext i32 %27 to i64, !dbg !6126
  %arrayidx64 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %idxprom63, !dbg !6126
  %28 = load i32, i32* %arrayidx64, align 4, !dbg !6126
  br label %cond.end67, !dbg !6124

cond.false65:                                     ; preds = %for.body
  %29 = trunc i64 %indvars.iv to i32, !dbg !6127
  %call66 = tail call i32 @reg_cover_class(i32 %29) #6, !dbg !6127
  br label %cond.end67, !dbg !6124

cond.end67:                                       ; preds = %cond.false65, %cond.true61
  %cond68 = phi i32 [ %28, %cond.true61 ], [ %call66, %cond.false65 ], !dbg !6124
  %30 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !6128
  %arrayidx70 = getelementptr inbounds i32, i32* %30, i64 %indvars.iv, !dbg !6128
  store i32 %cond68, i32* %arrayidx70, align 4, !dbg !6129
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6130
  call void @llvm.dbg.value(metadata i32 undef, metadata !6005, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6110
  br label %for.cond, !dbg !6131, !llvm.loop !6132

for.end:                                          ; preds = %for.cond
  %call71 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6134
  store %struct.bitmap_head_def* %call71, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !6135
  %call72 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6136
  store %struct.bitmap_head_def* %call72, %struct.bitmap_head_def** @saved_reg_live, align 8, !dbg !6137
  %call73 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6138
  store %struct.bitmap_head_def* %call73, %struct.bitmap_head_def** @region_ref_regs, align 8, !dbg !6139
  br label %if.end74, !dbg !6140

if.end74:                                         ; preds = %if.end49, %for.end
  %31 = load i64, i64* @dfa_state_size, align 8, !dbg !6141
  %call75 = tail call i8* @xmalloc(i64 %31) #6, !dbg !6142
  store i8* %call75, i8** @curr_state, align 8, !dbg !6143
  ret void, !dbg !6144
}

declare dso_local void @ira_setup_eliminable_regset() local_unnamed_addr #2

declare dso_local void @dfa_start() local_unnamed_addr #2

declare dso_local i32 @state_size() local_unnamed_addr #2

declare dso_local void @init_alias_analysis() local_unnamed_addr #2

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #2

declare dso_local void @df_note_add_problem() local_unnamed_addr #2

declare dso_local void @df_rd_add_problem() local_unnamed_addr #2

declare dso_local void @df_chain_add_problem(i32) local_unnamed_addr #2

declare dso_local void @df_analyze() local_unnamed_addr #2

declare dso_local i32 @df_clear_flags(i32) local_unnamed_addr #2

declare dso_local void @regstat_compute_calls_crossed() local_unnamed_addr #2

declare dso_local i32 @get_max_uid() local_unnamed_addr #2

declare dso_local i32 @max_reg_num() local_unnamed_addr #2

declare dso_local void @ira_set_pseudo_classes(%struct._IO_FILE*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i32 @reg_cover_class(i32) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @haifa_sched_init() local_unnamed_addr #5 !dbg !6145 {
entry:
  %bbs = alloca %struct.VEC_basic_block_heap*, align 8
  tail call void @setup_sched_dump() #7, !dbg !6150
  tail call void @sched_init() #7, !dbg !6151
  %0 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6152
  %cmp = icmp eq %struct.spec_info_def* %0, null, !dbg !6154
  br i1 %cmp, label %if.end, label %if.then, !dbg !6155

if.then:                                          ; preds = %entry
  %1 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6156
  %use_deps_list = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i64 0, i32 12, !dbg !6158
  %bf.load = load i8, i8* %use_deps_list, align 8, !dbg !6159
  %bf.set3 = or i8 %bf.load, 6, !dbg !6160
  store i8 %bf.set3, i8* %use_deps_list, align 8, !dbg !6160
  br label %if.end, !dbg !6161

if.end:                                           ; preds = %entry, %if.then
  %2 = bitcast %struct.VEC_basic_block_heap** %bbs to i8*, !dbg !6162
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6162
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6163
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !6163
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6163
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 3, !dbg !6163
  %5 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !6163
  %call = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %5) #7, !dbg !6163
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6147, metadata !DIExpression()), !dbg !6164
  store %struct.VEC_basic_block_heap* %call, %struct.VEC_basic_block_heap** %bbs, align 8, !dbg !6165
  tail call void @sched_init_bbs() #7, !dbg !6166
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6167
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !6167
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !6167
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 0, !dbg !6167
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6167
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %call, i64 0, i32 0, !dbg !6169
  br label %for.cond, !dbg !6167

for.cond:                                         ; preds = %for.body, %if.end
  %9 = phi %struct.control_flow_graph* [ %7, %if.end ], [ %.pre1, %for.body ], !dbg !6171
  %.pn = phi %struct.basic_block_def* [ %8, %if.end ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !6172
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6172
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6149, metadata !DIExpression()), !dbg !6164
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 1, !dbg !6171
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6171
  %cmp8 = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !6171
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6147, metadata !DIExpression()), !dbg !6164
  br i1 %cmp8, label %for.end, label %for.body, !dbg !6167

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6147, metadata !DIExpression()), !dbg !6164
  %call9 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %base, %struct.basic_block_def* %bb.0) #7, !dbg !6173
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6171
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6169
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !6171
  br label %for.cond, !dbg !6171, !llvm.loop !6174

for.end:                                          ; preds = %for.cond
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* %call, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #7, !dbg !6176
  tail call void @sched_deps_init(i8 zeroext 1) #6, !dbg !6177
  tail call void @sched_extend_target() #7, !dbg !6178
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !6147, metadata !DIExpression()), !dbg !6164
  tail call void @haifa_init_h_i_d(%struct.VEC_basic_block_heap* %call, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* null) #7, !dbg !6179
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %bbs, metadata !6147, metadata !DIExpression(DW_OP_deref)), !dbg !6164
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %bbs) #7, !dbg !6180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6181
  store void (%struct.basic_block_def*, %struct.basic_block_def*)* @haifa_init_only_bb, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !6182
  store %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* @sched_split_block_1, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !6183
  store %struct.basic_block_def* (%struct.basic_block_def*)* @sched_create_empty_bb_1, %struct.basic_block_def* (%struct.basic_block_def*)** @sched_create_empty_bb, align 8, !dbg !6184
  store i8 0, i8* @haifa_recovery_bb_ever_added_p, align 1, !dbg !6185
  store i32 0, i32* @nr_be_in_control, align 4, !dbg !6186
  store i32 0, i32* @nr_be_in_data, align 4, !dbg !6187
  store i32 0, i32* @nr_begin_control, align 4, !dbg !6188
  store i32 0, i32* @nr_begin_data, align 4, !dbg !6189
  store %struct.basic_block_def* null, %struct.basic_block_def** @before_recovery, align 8, !dbg !6190
  store %struct.basic_block_def* null, %struct.basic_block_def** @after_recovery, align 8, !dbg !6191
  ret void, !dbg !6192
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6193 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6197, metadata !DIExpression()), !dbg !6198
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !6199
  %0 = bitcast i8* %call to %struct.VEC_basic_block_heap*, !dbg !6199
  ret %struct.VEC_basic_block_heap* %0, !dbg !6199
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_init_bbs() local_unnamed_addr #5 !dbg !6200 {
entry:
  tail call fastcc void @sched_extend_bb() #7, !dbg !6201
  ret void, !dbg !6202
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_quick_push(%struct.VEC_basic_block_base* %vec_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !6203 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !6208, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !6209, metadata !DIExpression()), !dbg !6211
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !6212
  %0 = load i32, i32* %num1, align 8, !dbg !6212
  %inc = add i32 %0, 1, !dbg !6212
  store i32 %inc, i32* %num1, align 8, !dbg !6212
  %idxprom = zext i32 %0 to i64, !dbg !6212
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6212
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %arrayidx, metadata !6210, metadata !DIExpression()), !dbg !6211
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !6212
  ret %struct.basic_block_def** %arrayidx, !dbg !6212
}

declare dso_local void @sched_deps_init(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_extend_target() local_unnamed_addr #5 !dbg !6213 {
entry:
  %0 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 22), align 8, !dbg !6214
  %tobool = icmp eq void ()* %0, null, !dbg !6216
  br i1 %tobool, label %if.end, label %if.then, !dbg !6217

if.then:                                          ; preds = %entry
  tail call void %0() #6, !dbg !6218
  br label %if.end, !dbg !6218

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6219
}

; Function Attrs: nounwind uwtable
define dso_local void @haifa_init_h_i_d(%struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* %bb, %struct.VEC_rtx_heap* %insns, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !6220 {
entry:
  %ssi = alloca %struct.sched_scan_info_def, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %bbs, metadata !6222, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6223, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* %insns, metadata !6224, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6225, metadata !DIExpression()), !dbg !6227
  %0 = bitcast %struct.sched_scan_info_def* %ssi to i8*, !dbg !6228
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 bitcast (%struct.sched_scan_info_def* @__const.haifa_init_h_i_d.ssi to i8*), i64 32, i1 false), !dbg !6229
  call void @llvm.dbg.value(metadata %struct.sched_scan_info_def* %ssi, metadata !6226, metadata !DIExpression(DW_OP_deref)), !dbg !6227
  call void @sched_scan(%struct.sched_scan_info_def* nonnull %ssi, %struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* %bb, %struct.VEC_rtx_heap* %insns, %struct.rtx_def* %insn) #7, !dbg !6230
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6231
  ret void, !dbg !6231
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !6232 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !6237, metadata !DIExpression()), !dbg !6238
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !6239
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !6239
  br i1 %tobool, label %if.end, label %if.then, !dbg !6241

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !6241
  tail call void @free(i8* nonnull %1) #6, !dbg !6239
  br label %if.end, !dbg !6239

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !6241
  ret void, !dbg !6241
}

; Function Attrs: nounwind uwtable
define internal void @haifa_init_only_bb(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #5 !dbg !6242 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6244, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !6245, metadata !DIExpression()), !dbg !6246
  %cmp = icmp eq %struct.basic_block_def* %bb, null, !dbg !6247
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6247

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6247
  br label %cond.end, !dbg !6247

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @sched_init_bbs() #7, !dbg !6248
  %0 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !6249
  %add_block = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %0, i64 0, i32 1, !dbg !6251
  %1 = load void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)** %add_block, align 8, !dbg !6251
  %tobool = icmp eq void (%struct.basic_block_def*, %struct.basic_block_def*)* %1, null, !dbg !6249
  br i1 %tobool, label %if.end, label %if.then, !dbg !6252

if.then:                                          ; preds = %cond.end
  tail call void %1(%struct.basic_block_def* %bb, %struct.basic_block_def* %after) #6, !dbg !6253
  br label %if.end, !dbg !6253

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !6254
}

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @sched_split_block_1(%struct.basic_block_def* %first_bb, %struct.rtx_def* %after) #5 !dbg !6255 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first_bb, metadata !6257, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.value(metadata %struct.rtx_def* %after, metadata !6258, metadata !DIExpression()), !dbg !6260
  %0 = bitcast %struct.rtx_def* %after to i8*, !dbg !6261
  %call = tail call %struct.edge_def* @split_block(%struct.basic_block_def* %first_bb, i8* %0) #6, !dbg !6262
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !6259, metadata !DIExpression()), !dbg !6260
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !6263
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6263
  %cmp = icmp eq %struct.basic_block_def* %1, %first_bb, !dbg !6263
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6263

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5531, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6263
  br label %cond.end, !dbg !6263

cond.end:                                         ; preds = %entry, %cond.true
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !6264
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6264
  ret %struct.basic_block_def* %2, !dbg !6265
}

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @sched_create_empty_bb_1(%struct.basic_block_def* %after) #5 !dbg !6266 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %after, metadata !6268, metadata !DIExpression()), !dbg !6269
  %call = tail call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %after) #6, !dbg !6270
  ret %struct.basic_block_def* %call, !dbg !6271
}

; Function Attrs: nounwind uwtable
define dso_local void @haifa_sched_finish() local_unnamed_addr #5 !dbg !6272 {
entry:
  store %struct.basic_block_def* (%struct.basic_block_def*)* null, %struct.basic_block_def* (%struct.basic_block_def*)** @sched_create_empty_bb, align 8, !dbg !6277
  store %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)* null, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !6278
  store void (%struct.basic_block_def*, %struct.basic_block_def*)* null, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !6279
  %0 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6280
  %tobool = icmp eq %struct.spec_info_def* %0, null, !dbg !6280
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6281

land.lhs.true:                                    ; preds = %entry
  %dump = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %0, i64 0, i32 1, !dbg !6282
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %dump, align 8, !dbg !6282
  %tobool1 = icmp eq %struct._IO_FILE* %1, null, !dbg !6283
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6284

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @reload_completed, align 4, !dbg !6285
  %tobool2 = icmp eq i32 %2, 0, !dbg !6285
  %call = tail call i8* @current_function_name() #6, !dbg !6286
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* %call) #6, !dbg !6287
  %3 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6288
  %dump5 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %3, i64 0, i32 1, !dbg !6289
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %dump5, align 8, !dbg !6289
  %conv6 = select i1 %tobool2, i32 98, i32 97, !dbg !6290
  %5 = load i32, i32* @nr_begin_data, align 4, !dbg !6291
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.14, i64 0, i64 0), i32 %conv6, i32 %5) #6, !dbg !6292
  %6 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6293
  %dump8 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %6, i64 0, i32 1, !dbg !6294
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %dump8, align 8, !dbg !6294
  %8 = load i32, i32* @nr_be_in_data, align 4, !dbg !6295
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.15, i64 0, i64 0), i32 %conv6, i32 %8) #6, !dbg !6296
  %9 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6297
  %dump11 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %9, i64 0, i32 1, !dbg !6298
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %dump11, align 8, !dbg !6298
  %11 = load i32, i32* @nr_begin_control, align 4, !dbg !6299
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0), i32 %conv6, i32 %11) #6, !dbg !6300
  %12 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6301
  %dump14 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %12, i64 0, i32 1, !dbg !6302
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %dump14, align 8, !dbg !6302
  %14 = load i32, i32* @nr_be_in_control, align 4, !dbg !6303
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.17, i64 0, i64 0), i32 %conv6, i32 %14) #6, !dbg !6304
  br label %if.end, !dbg !6305

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  tail call void @sched_deps_finish() #6, !dbg !6306
  tail call void @sched_finish_luids() #7, !dbg !6307
  store %struct.haifa_sched_info* null, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6308
  tail call void @sched_finish() #7, !dbg !6309
  ret void, !dbg !6310
}

declare dso_local i8* @current_function_name() local_unnamed_addr #2

declare dso_local void @sched_deps_finish() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_finish_luids() local_unnamed_addr #5 !dbg !6311 {
entry:
  tail call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull @sched_luids) #7, !dbg !6312
  store i32 1, i32* @sched_max_luid, align 4, !dbg !6313
  ret void, !dbg !6314
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_finish() local_unnamed_addr #5 !dbg !6315 {
entry:
  tail call void @haifa_finish_h_i_d() #7, !dbg !6316
  %0 = load i8, i8* @sched_pressure_p, align 1, !dbg !6317
  %tobool = icmp eq i8 %0, 0, !dbg !6317
  br i1 %tobool, label %if.end, label %if.then, !dbg !6319

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** bitcast (i32** @sched_regno_cover_class to i8**), align 8, !dbg !6320
  tail call void @free(i8* %1) #6, !dbg !6322
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @region_ref_regs, align 8, !dbg !6323
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !6323
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @region_ref_regs, align 8, !dbg !6323
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @saved_reg_live, align 8, !dbg !6324
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !6324
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @saved_reg_live, align 8, !dbg !6324
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !6325
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !6325
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !6325
  br label %if.end, !dbg !6326

if.end:                                           ; preds = %entry, %if.then
  %5 = load i8*, i8** @curr_state, align 8, !dbg !6327
  tail call void @free(i8* %5) #6, !dbg !6328
  %6 = load void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 7), align 8, !dbg !6329
  %tobool1 = icmp eq void (%struct._IO_FILE*, i32)* %6, null, !dbg !6331
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6332

if.then2:                                         ; preds = %if.end
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6333
  %8 = load i32, i32* @sched_verbose, align 4, !dbg !6334
  tail call void %6(%struct._IO_FILE* %7, i32 %8) #6, !dbg !6335
  br label %if.end3, !dbg !6335

if.end3:                                          ; preds = %if.end, %if.then2
  tail call void @end_alias_analysis() #6, !dbg !6336
  tail call void @regstat_free_calls_crossed() #6, !dbg !6337
  tail call void @dfa_finish() #6, !dbg !6338
  ret void, !dbg !6339
}

; Function Attrs: nounwind uwtable
define dso_local void @haifa_finish_h_i_d() local_unnamed_addr #5 !dbg !6340 {
entry:
  %data = alloca %struct._haifa_insn_data*, align 8
  %0 = bitcast %struct._haifa_insn_data** %data to i8*, !dbg !6347
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6347
  call void @llvm.dbg.value(metadata i32 0, metadata !6342, metadata !DIExpression()), !dbg !6348
  br label %for.cond, !dbg !6349

for.cond:                                         ; preds = %for.inc6, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc6 ], !dbg !6351
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6342, metadata !DIExpression()), !dbg !6348
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6352
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !6352
  call void @llvm.dbg.value(metadata %struct._haifa_insn_data** %data, metadata !6343, metadata !DIExpression(DW_OP_deref)), !dbg !6348
  %call = call fastcc i32 @VEC_haifa_insn_data_def_base_iterate(%struct.VEC_haifa_insn_data_def_base* %base, i32 %i.0, %struct._haifa_insn_data** nonnull %data) #7, !dbg !6352
  %tobool1 = icmp eq i32 %call, 0, !dbg !6354
  br i1 %tobool1, label %for.end7, label %for.body, !dbg !6354

for.body:                                         ; preds = %for.cond
  %2 = load %struct._haifa_insn_data*, %struct._haifa_insn_data** %data, align 8, !dbg !6355
  call void @llvm.dbg.value(metadata %struct._haifa_insn_data* %2, metadata !6343, metadata !DIExpression()), !dbg !6348
  %reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %2, i64 0, i32 13, !dbg !6358
  %3 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** %reg_pressure, align 8, !dbg !6358
  %cmp = icmp eq %struct.reg_pressure_data* %3, null, !dbg !6359
  br i1 %cmp, label %if.end, label %if.then, !dbg !6360

if.then:                                          ; preds = %for.body
  %4 = bitcast %struct.reg_pressure_data* %3 to i8*, !dbg !6360
  call void @llvm.dbg.value(metadata %struct._haifa_insn_data* %2, metadata !6343, metadata !DIExpression()), !dbg !6348
  call void @free(i8* nonnull %4) #6, !dbg !6361
  %.pre = load %struct._haifa_insn_data*, %struct._haifa_insn_data** %data, align 8, !dbg !6362
  br label %if.end, !dbg !6361

if.end:                                           ; preds = %for.body, %if.then
  %5 = phi %struct._haifa_insn_data* [ %2, %for.body ], [ %.pre, %if.then ], !dbg !6362
  call void @llvm.dbg.value(metadata %struct._haifa_insn_data* %5, metadata !6343, metadata !DIExpression()), !dbg !6348
  %reg_use_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %5, i64 0, i32 15, !dbg !6364
  %6 = load %struct.reg_use_data*, %struct.reg_use_data** %reg_use_list, align 8, !dbg !6364
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %6, metadata !6345, metadata !DIExpression()), !dbg !6348
  br label %for.cond3, !dbg !6365

for.cond3:                                        ; preds = %for.body5, %if.end
  %.in = phi %struct.reg_use_data* [ %6, %if.end ], [ %8, %for.body5 ]
  %use.0 = phi %struct.reg_use_data* [ %6, %if.end ], [ %8, %for.body5 ], !dbg !6366
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %use.0, metadata !6345, metadata !DIExpression()), !dbg !6348
  %cmp4 = icmp eq %struct.reg_use_data* %use.0, null, !dbg !6367
  br i1 %cmp4, label %for.inc6, label %for.body5, !dbg !6369

for.body5:                                        ; preds = %for.cond3
  %7 = bitcast %struct.reg_use_data* %.in to i8*, !dbg !6366
  %next_insn_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.0, i64 0, i32 3, !dbg !6370
  %8 = load %struct.reg_use_data*, %struct.reg_use_data** %next_insn_use, align 8, !dbg !6370
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %8, metadata !6346, metadata !DIExpression()), !dbg !6348
  call void @free(i8* %7) #6, !dbg !6372
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %8, metadata !6345, metadata !DIExpression()), !dbg !6348
  br label %for.cond3, !dbg !6373, !llvm.loop !6374

for.inc6:                                         ; preds = %for.cond3
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6376
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6342, metadata !DIExpression()), !dbg !6348
  br label %for.cond, !dbg !6377, !llvm.loop !6378

for.end7:                                         ; preds = %for.cond
  call fastcc void @VEC_haifa_insn_data_def_heap_free(%struct.VEC_haifa_insn_data_def_heap** nonnull @h_i_d) #7, !dbg !6380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6381
  ret void, !dbg !6381
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @end_alias_analysis() local_unnamed_addr #2

declare dso_local void @regstat_free_calls_crossed() local_unnamed_addr #2

declare dso_local void @dfa_finish() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @try_ready(%struct.rtx_def* %next) local_unnamed_addr #5 !dbg !6382 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %new_pat = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next, metadata !6384, metadata !DIExpression()), !dbg !6406
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6407
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6407
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6407
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6407
  %1 = load i32, i32* %rt_int, align 8, !dbg !6407
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !6407
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 8, !dbg !6407
  call void @llvm.dbg.value(metadata i32* %todo_spec, metadata !6386, metadata !DIExpression()), !dbg !6406
  %2 = load i32, i32* %todo_spec, align 4, !dbg !6408
  call void @llvm.dbg.value(metadata i32 %2, metadata !6385, metadata !DIExpression()), !dbg !6406
  %and = and i32 %2, -150994944, !dbg !6409
  %tobool1 = icmp eq i32 %and, 0, !dbg !6409
  br i1 %tobool1, label %land.lhs.true, label %cond.true6, !dbg !6409

land.lhs.true:                                    ; preds = %entry
  %3 = and i32 %2, 150994943, !dbg !6409
  %4 = icmp eq i32 %3, 0, !dbg !6409
  br i1 %4, label %cond.true6, label %cond.end8, !dbg !6409

cond.true6:                                       ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3669, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6409
  br label %cond.end8, !dbg !6409

cond.end8:                                        ; preds = %land.lhs.true, %cond.true6
  %call10 = tail call zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %next, i32 3) #6, !dbg !6410
  %tobool11 = icmp eq i8 %call10, 0, !dbg !6410
  %5 = load i32, i32* %todo_spec, align 4, !dbg !6411
  br i1 %tobool11, label %if.else, label %if.then, !dbg !6412

if.then:                                          ; preds = %cond.end8
  %and12 = and i32 %5, -134217729, !dbg !6413
  store i32 %and12, i32* %todo_spec, align 4, !dbg !6413
  %6 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6415
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %6, i64 0, i32 17, !dbg !6417
  %7 = load i32, i32* %flags, align 8, !dbg !6417
  %and13 = and i32 %7, 2, !dbg !6418
  %tobool14 = icmp eq i32 %and13, 0, !dbg !6418
  br i1 %tobool14, label %if.end43, label %if.then15, !dbg !6419

if.then15:                                        ; preds = %if.then
  %and16 = and i32 %5, -150994944, !dbg !6420
  store i32 %and16, i32* %todo_spec, align 4, !dbg !6420
  br label %if.end43, !dbg !6421

if.else:                                          ; preds = %cond.end8
  %and17 = and i32 %5, -150994944, !dbg !6422
  store i32 %and17, i32* %todo_spec, align 4, !dbg !6422
  %call18 = tail call zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %next, i32 1) #6, !dbg !6423
  %tobool19 = icmp eq i8 %call18, 0, !dbg !6423
  br i1 %tobool19, label %if.else40, label %if.then20, !dbg !6424

if.then20:                                        ; preds = %if.else
  %8 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !6425
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8, !dbg !6425
  %9 = bitcast %struct._dep** %dep to i8*, !dbg !6426
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !6426
  call void @llvm.dbg.value(metadata i8 1, metadata !6394, metadata !DIExpression()), !dbg !6427
  %10 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !6428
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8, !dbg !6428
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %next, i32 3) #7, !dbg !6428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %10, i64 32, i1 false), !dbg !6428
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8, !dbg !6428
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 0, !dbg !6429
  br label %for.cond, !dbg !6428

for.cond:                                         ; preds = %cleanup, %if.then20
  %first_p.0 = phi i8 [ 1, %if.then20 ], [ %first_p.2, %cleanup ], !dbg !6427
  call void @llvm.dbg.value(metadata i8 %first_p.0, metadata !6394, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6427
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !6393, metadata !DIExpression(DW_OP_deref)), !dbg !6427
  %call21 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !6431
  %tobool22 = icmp eq i8 %call21, 0, !dbg !6428
  br i1 %tobool22, label %for.end, label %for.body, !dbg !6428

for.body:                                         ; preds = %for.cond
  %12 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6432
  call void @llvm.dbg.value(metadata %struct._dep* %12, metadata !6393, metadata !DIExpression()), !dbg !6427
  %status = getelementptr inbounds %struct._dep, %struct._dep* %12, i64 0, i32 3, !dbg !6432
  %13 = load i32, i32* %status, align 4, !dbg !6432
  %and23 = and i32 %13, 16777215, !dbg !6433
  call void @llvm.dbg.value(metadata i32 %and23, metadata !6395, metadata !DIExpression()), !dbg !6434
  call void @llvm.dbg.value(metadata %struct._dep* %12, metadata !6393, metadata !DIExpression()), !dbg !6427
  %14 = bitcast %struct._dep* %12 to i32**, !dbg !6435
  %15 = load i32*, i32** %14, align 8, !dbg !6435
  %bf.load = load i32, i32* %15, align 8, !dbg !6435
  %bf.clear = and i32 %bf.load, 65535, !dbg !6435
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !6435
  br i1 %cmp, label %land.lhs.true24, label %if.end29, !dbg !6436

land.lhs.true24:                                  ; preds = %for.body
  %bf.load25 = load i32, i32* %11, align 8, !dbg !6437
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !6437
  %cmp27 = icmp eq i32 %bf.clear26, 7, !dbg !6437
  br i1 %cmp27, label %if.end29, label %cleanup, !dbg !6438

if.end29:                                         ; preds = %land.lhs.true24, %for.body
  %tobool30 = icmp eq i8 %first_p.0, 0, !dbg !6439
  br i1 %tobool30, label %if.else32, label %if.then31, !dbg !6441

if.then31:                                        ; preds = %if.end29
  call void @llvm.dbg.value(metadata i8 0, metadata !6394, metadata !DIExpression()), !dbg !6427
  store i32 %and23, i32* %todo_spec, align 4, !dbg !6442
  br label %cleanup, !dbg !6444

if.else32:                                        ; preds = %if.end29
  %16 = load i32, i32* %todo_spec, align 4, !dbg !6445
  %call33 = call i32 @ds_merge(i32 %16, i32 %and23) #6, !dbg !6446
  store i32 %call33, i32* %todo_spec, align 4, !dbg !6447
  br label %cleanup

cleanup:                                          ; preds = %if.then31, %if.else32, %land.lhs.true24
  %first_p.2 = phi i8 [ %first_p.0, %land.lhs.true24 ], [ 0, %if.then31 ], [ 0, %if.else32 ], !dbg !6427
  call void @llvm.dbg.value(metadata i8 %first_p.2, metadata !6394, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6427
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !6431
  br label %for.cond, !dbg !6431, !llvm.loop !6448

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %todo_spec, align 4, !dbg !6450
  %call35 = call i32 @ds_weak(i32 %17) #6, !dbg !6452
  %18 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6453
  %data_weakness_cutoff = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %18, i64 0, i32 2, !dbg !6454
  %19 = load i32, i32* %data_weakness_cutoff, align 8, !dbg !6454
  %cmp36 = icmp slt i32 %call35, %19, !dbg !6455
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !6456

if.then37:                                        ; preds = %for.end
  %20 = load i32, i32* %todo_spec, align 4, !dbg !6457
  %and38 = and i32 %20, -150994944, !dbg !6458
  %or = or i32 %and38, 134217728, !dbg !6459
  store i32 %or, i32* %todo_spec, align 4, !dbg !6460
  br label %if.end39, !dbg !6461

if.end39:                                         ; preds = %if.then37, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !6462
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8, !dbg !6462
  %.pre = load i32, i32* %todo_spec, align 4, !dbg !6463
  br label %if.end43, !dbg !6465

if.else40:                                        ; preds = %if.else
  %21 = load i32, i32* %todo_spec, align 4, !dbg !6466
  %or41 = or i32 %21, 134217728, !dbg !6466
  store i32 %or41, i32* %todo_spec, align 4, !dbg !6466
  br label %if.end43

if.end43:                                         ; preds = %if.then, %if.end39, %if.else40, %if.then15
  %22 = phi i32 [ %and12, %if.then ], [ %.pre, %if.end39 ], [ %or41, %if.else40 ], [ %and16, %if.then15 ], !dbg !6463
  %and44 = and i32 %22, 134217728, !dbg !6467
  %tobool45 = icmp eq i32 %and44, 0, !dbg !6467
  br i1 %tobool45, label %if.else65, label %if.then46, !dbg !6468

if.then46:                                        ; preds = %if.end43
  %cmp47 = icmp eq i32 %22, %2, !dbg !6469
  br i1 %cmp47, label %land.lhs.true48, label %cond.true61, !dbg !6469

land.lhs.true48:                                  ; preds = %if.then46
  %23 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6469
  %base51 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %23, i64 0, i32 0, !dbg !6469
  %24 = load i32, i32* %rt_int, align 8, !dbg !6469
  %call59 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base51, i32 %24) #7, !dbg !6469
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call59, i64 0, i32 4, !dbg !6469
  %25 = load i32, i32* %queue_index, align 8, !dbg !6469
  %cmp60 = icmp eq i32 %25, -2, !dbg !6469
  br i1 %cmp60, label %if.end71, label %cond.true61, !dbg !6469

cond.true61:                                      ; preds = %land.lhs.true48, %if.then46
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3725, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6469
  br label %if.end71, !dbg !6469

if.else65:                                        ; preds = %if.end43
  %26 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6470
  %new_ready = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %26, i64 0, i32 3, !dbg !6472
  %27 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %new_ready, align 8, !dbg !6472
  %tobool66 = icmp eq i32 (%struct.rtx_def*, i32)* %27, null, !dbg !6470
  br i1 %tobool66, label %if.end71, label %if.then67, !dbg !6473

if.then67:                                        ; preds = %if.else65
  %call69 = call i32 %27(%struct.rtx_def* %next, i32 %22) #6, !dbg !6474
  store i32 %call69, i32* %todo_spec, align 4, !dbg !6475
  br label %if.end71, !dbg !6476

if.end71:                                         ; preds = %if.else65, %if.then67, %cond.true61, %land.lhs.true48
  %28 = load i32, i32* %todo_spec, align 4, !dbg !6477
  %and72 = and i32 %28, 16777215, !dbg !6478
  %tobool73 = icmp eq i32 %and72, 0, !dbg !6478
  br i1 %tobool73, label %if.end151, label %land.lhs.true74, !dbg !6479

land.lhs.true74:                                  ; preds = %if.end71
  %cmp75 = icmp eq i32 %28, %2, !dbg !6480
  br i1 %cmp75, label %if.end151, label %if.then76, !dbg !6481

if.then76:                                        ; preds = %land.lhs.true74
  %29 = bitcast %struct.rtx_def** %new_pat to i8*, !dbg !6482
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8, !dbg !6482
  br i1 false, label %if.then76.cond.true82_crit_edge, label %land.lhs.true79, !dbg !6483

if.then76.cond.true82_crit_edge:                  ; preds = %if.then76
  br label %cond.true82, !dbg !6483

land.lhs.true79:                                  ; preds = %if.then76
  %tobool81 = icmp ugt i32 %28, 16777215, !dbg !6483
  br i1 %tobool81, label %cond.true82, label %cond.end84, !dbg !6483

cond.true82:                                      ; preds = %if.then76.cond.true82_crit_edge, %land.lhs.true79
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6483
  %.pre1 = load i32, i32* %todo_spec, align 4, !dbg !6484
  br label %cond.end84, !dbg !6483

cond.end84:                                       ; preds = %land.lhs.true79, %cond.true82
  %30 = phi i32 [ %28, %land.lhs.true79 ], [ %.pre1, %cond.true82 ], !dbg !6484
  call void @llvm.dbg.value(metadata %struct.rtx_def** %new_pat, metadata !6402, metadata !DIExpression(DW_OP_deref)), !dbg !6485
  %call86 = call fastcc i32 @haifa_speculate_insn(%struct.rtx_def* %next, i32 %30, %struct.rtx_def** nonnull %new_pat) #7, !dbg !6486
  call void @llvm.dbg.value(metadata i32 %call86, metadata !6399, metadata !DIExpression()), !dbg !6485
  switch i32 %call86, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb89
    i32 1, label %sw.bb119
  ], !dbg !6487

sw.bb:                                            ; preds = %cond.end84
  %31 = load i32, i32* %todo_spec, align 4, !dbg !6488
  %and87 = and i32 %31, -150994944, !dbg !6490
  %or88 = or i32 %and87, 134217728, !dbg !6491
  store i32 %or88, i32* %todo_spec, align 4, !dbg !6492
  br label %sw.epilog, !dbg !6493

sw.bb89:                                          ; preds = %cond.end84
  %32 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6494
  %base92 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %32, i64 0, i32 0, !dbg !6494
  %33 = load i32, i32* %rt_int, align 8, !dbg !6494
  %call100 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base92, i32 %33) #7, !dbg !6494
  %orig_pat = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call100, i64 0, i32 12, !dbg !6494
  %34 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat, align 8, !dbg !6494
  %tobool101 = icmp eq %struct.rtx_def* %34, null, !dbg !6494
  br i1 %tobool101, label %if.then102, label %sw.epilog, !dbg !6496

if.then102:                                       ; preds = %sw.bb89
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, !dbg !6497
  %35 = getelementptr inbounds %union.u, %union.u* %u103, i64 1, i32 0, i32 0, i64 0, !dbg !6497
  %36 = bitcast %union.rtunion_def* %35 to i64*, !dbg !6497
  %37 = load i64, i64* %36, align 8, !dbg !6497
  %38 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6498
  %base108 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %38, i64 0, i32 0, !dbg !6498
  %39 = load i32, i32* %rt_int, align 8, !dbg !6498
  %call116 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base108, i32 %39) #7, !dbg !6498
  %orig_pat117 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call116, i64 0, i32 12, !dbg !6498
  %40 = bitcast %struct.rtx_def** %orig_pat117 to i64*, !dbg !6499
  store i64 %37, i64* %40, align 8, !dbg !6499
  br label %sw.epilog, !dbg !6498

sw.bb119:                                         ; preds = %cond.end84
  %41 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6500
  %base122 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %41, i64 0, i32 0, !dbg !6500
  %42 = load i32, i32* %rt_int, align 8, !dbg !6500
  %call130 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base122, i32 %42) #7, !dbg !6500
  %orig_pat131 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call130, i64 0, i32 12, !dbg !6500
  %43 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat131, align 8, !dbg !6500
  %tobool132 = icmp eq %struct.rtx_def* %43, null, !dbg !6500
  br i1 %tobool132, label %if.then133, label %if.end150, !dbg !6502

if.then133:                                       ; preds = %sw.bb119
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, !dbg !6503
  %44 = getelementptr inbounds %union.u, %union.u* %u134, i64 1, i32 0, i32 0, i64 0, !dbg !6503
  %45 = bitcast %union.rtunion_def* %44 to i64*, !dbg !6503
  %46 = load i64, i64* %45, align 8, !dbg !6503
  %47 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6504
  %base140 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %47, i64 0, i32 0, !dbg !6504
  %48 = load i32, i32* %rt_int, align 8, !dbg !6504
  %call148 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base140, i32 %48) #7, !dbg !6504
  %orig_pat149 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call148, i64 0, i32 12, !dbg !6504
  %49 = bitcast %struct.rtx_def** %orig_pat149 to i64*, !dbg !6505
  store i64 %46, i64* %49, align 8, !dbg !6505
  br label %if.end150, !dbg !6504

if.end150:                                        ; preds = %sw.bb119, %if.then133
  %50 = load %struct.rtx_def*, %struct.rtx_def** %new_pat, align 8, !dbg !6506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %50, metadata !6402, metadata !DIExpression()), !dbg !6485
  call fastcc void @haifa_change_pattern(%struct.rtx_def* %next, %struct.rtx_def* %50) #7, !dbg !6507
  br label %sw.epilog, !dbg !6508

sw.default:                                       ; preds = %cond.end84
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3777, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6509
  br label %sw.epilog, !dbg !6510

sw.epilog:                                        ; preds = %sw.bb89, %if.then102, %sw.default, %if.end150, %sw.bb
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8, !dbg !6511
  br label %if.end151, !dbg !6512

if.end151:                                        ; preds = %land.lhs.true74, %if.end71, %sw.epilog
  %51 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6513
  %base154 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %51, i64 0, i32 0, !dbg !6513
  %52 = load i32, i32* %rt_int, align 8, !dbg !6513
  %call162 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base154, i32 %52) #7, !dbg !6513
  %orig_pat163 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call162, i64 0, i32 12, !dbg !6513
  %53 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat163, align 8, !dbg !6513
  %tobool164 = icmp eq %struct.rtx_def* %53, null, !dbg !6513
  br i1 %tobool164, label %cond.end194, label %lor.lhs.false165, !dbg !6513

lor.lhs.false165:                                 ; preds = %if.end151
  %54 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6513
  %base168 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %54, i64 0, i32 0, !dbg !6513
  %55 = load i32, i32* %rt_int, align 8, !dbg !6513
  %call176 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base168, i32 %55) #7, !dbg !6513
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call176, i64 0, i32 11, !dbg !6513
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !6513
  %cmp177 = icmp eq %struct.basic_block_def* %56, null, !dbg !6513
  br i1 %cmp177, label %cond.end194, label %land.lhs.true178, !dbg !6513

land.lhs.true178:                                 ; preds = %lor.lhs.false165
  %57 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6513
  %base181 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %57, i64 0, i32 0, !dbg !6513
  %58 = load i32, i32* %rt_int, align 8, !dbg !6513
  %call189 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base181, i32 %58) #7, !dbg !6513
  %recovery_block190 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call189, i64 0, i32 11, !dbg !6513
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block190, align 8, !dbg !6513
  %60 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6513
  %cfg = getelementptr inbounds %struct.function, %struct.function* %60, i64 0, i32 1, !dbg !6513
  %61 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6513
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %61, i64 0, i32 1, !dbg !6513
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6513
  %cmp191 = icmp eq %struct.basic_block_def* %59, %62, !dbg !6513
  br i1 %cmp191, label %cond.end194, label %cond.true192, !dbg !6513

cond.true192:                                     ; preds = %land.lhs.true178
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3786, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6513
  br label %cond.end194, !dbg !6513

cond.end194:                                      ; preds = %land.lhs.true178, %lor.lhs.false165, %if.end151, %cond.true192
  %63 = load i32, i32* %todo_spec, align 4, !dbg !6514
  %and196 = and i32 %63, 134217728, !dbg !6516
  %tobool197 = icmp eq i32 %and196, 0, !dbg !6516
  br i1 %tobool197, label %if.else199, label %if.then198, !dbg !6517

if.then198:                                       ; preds = %cond.end194
  call fastcc void @change_queue_index(%struct.rtx_def* %next, i32 -2) #7, !dbg !6518
  br label %cleanup308, !dbg !6520

if.else199:                                       ; preds = %cond.end194
  %and200 = and i32 %63, 258111, !dbg !6521
  %tobool201 = icmp eq i32 %and200, 0, !dbg !6521
  br i1 %tobool201, label %land.lhs.true202, label %if.end264, !dbg !6523

land.lhs.true202:                                 ; preds = %if.else199
  %64 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6524
  %base205 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %64, i64 0, i32 0, !dbg !6524
  %65 = load i32, i32* %rt_int, align 8, !dbg !6524
  %call213 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base205, i32 %65) #7, !dbg !6524
  %orig_pat214 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call213, i64 0, i32 12, !dbg !6524
  %66 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat214, align 8, !dbg !6524
  %tobool215 = icmp eq %struct.rtx_def* %66, null, !dbg !6524
  br i1 %tobool215, label %if.end264, label %land.lhs.true216, !dbg !6525

land.lhs.true216:                                 ; preds = %land.lhs.true202
  %call217 = call fastcc zeroext i8 @sel_sched_p() #7, !dbg !6526
  %tobool218 = icmp eq i8 %call217, 0, !dbg !6526
  br i1 %tobool218, label %cond.false223, label %cond.true219, !dbg !6527

cond.true219:                                     ; preds = %land.lhs.true216
  %call220 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %next) #6, !dbg !6526
  %tobool222 = icmp eq i8 %call220, 0, !dbg !6526
  br i1 %tobool222, label %if.then238, label %if.end264, !dbg !6526

cond.false223:                                    ; preds = %land.lhs.true216
  %67 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6526
  %base226 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %67, i64 0, i32 0, !dbg !6526
  %68 = load i32, i32* %rt_int, align 8, !dbg !6526
  %call234 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base226, i32 %68) #7, !dbg !6526
  %recovery_block235 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call234, i64 0, i32 11, !dbg !6526
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block235, align 8, !dbg !6526
  %cmp236 = icmp eq %struct.basic_block_def* %69, null, !dbg !6526
  br i1 %cmp236, label %if.then238, label %if.end264, !dbg !6527

if.then238:                                       ; preds = %cond.true219, %cond.false223
  %70 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6528
  %base241 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %70, i64 0, i32 0, !dbg !6528
  %71 = load i32, i32* %rt_int, align 8, !dbg !6528
  %call249 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base241, i32 %71) #7, !dbg !6528
  %orig_pat250 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call249, i64 0, i32 12, !dbg !6528
  %72 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat250, align 8, !dbg !6528
  call fastcc void @haifa_change_pattern(%struct.rtx_def* %next, %struct.rtx_def* %72) #7, !dbg !6530
  %73 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6531
  %base253 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %73, i64 0, i32 0, !dbg !6531
  %74 = load i32, i32* %rt_int, align 8, !dbg !6531
  %call261 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base253, i32 %74) #7, !dbg !6531
  %orig_pat262 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call261, i64 0, i32 12, !dbg !6531
  store %struct.rtx_def* null, %struct.rtx_def** %orig_pat262, align 8, !dbg !6532
  br label %if.end264, !dbg !6533

if.end264:                                        ; preds = %cond.true219, %cond.false223, %land.lhs.true202, %if.else199, %if.then238
  %75 = load i32, i32* @sched_verbose, align 4, !dbg !6534
  %cmp265 = icmp sgt i32 %75, 1, !dbg !6535
  br i1 %cmp265, label %if.then267, label %if.end306, !dbg !6536

if.then267:                                       ; preds = %if.end264
  %76 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6537
  %base270 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %76, i64 0, i32 0, !dbg !6537
  %77 = load i32, i32* %rt_int, align 8, !dbg !6537
  %call278 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base270, i32 %77) #7, !dbg !6537
  %todo_spec279 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call278, i64 0, i32 8, !dbg !6537
  %78 = load i32, i32* %todo_spec279, align 8, !dbg !6537
  call void @llvm.dbg.value(metadata i32 %78, metadata !6403, metadata !DIExpression()), !dbg !6538
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6539
  %80 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6540
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %80, i64 0, i32 5, !dbg !6541
  %81 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !6541
  %call280 = call i8* %81(%struct.rtx_def* %next, i32 0) #6, !dbg !6542
  %call281 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i8* %call280) #6, !dbg !6543
  %82 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6544
  %tobool282 = icmp eq %struct.spec_info_def* %82, null, !dbg !6544
  br i1 %tobool282, label %if.end304, label %land.lhs.true283, !dbg !6546

land.lhs.true283:                                 ; preds = %if.then267
  %dump = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %82, i64 0, i32 1, !dbg !6547
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %dump, align 8, !dbg !6547
  %tobool284 = icmp eq %struct._IO_FILE* %83, null, !dbg !6548
  br i1 %tobool284, label %if.end304, label %if.then285, !dbg !6549

if.then285:                                       ; preds = %land.lhs.true283
  %and286 = and i32 %78, 63, !dbg !6550
  %tobool287 = icmp eq i32 %and286, 0, !dbg !6550
  br i1 %tobool287, label %if.end291, label %if.then288, !dbg !6553

if.then288:                                       ; preds = %if.then285
  %call290 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %83, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !6554
  br label %if.end291, !dbg !6554

if.end291:                                        ; preds = %if.then285, %if.then288
  %and292 = and i32 %78, 258048, !dbg !6555
  %tobool293 = icmp eq i32 %and292, 0, !dbg !6555
  br i1 %tobool293, label %if.end297, label %if.then294, !dbg !6557

if.then294:                                       ; preds = %if.end291
  %84 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6558
  %dump295 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %84, i64 0, i32 1, !dbg !6559
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %dump295, align 8, !dbg !6559
  %call296 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !6560
  br label %if.end297, !dbg !6560

if.end297:                                        ; preds = %if.end291, %if.then294
  %and298 = and i32 %78, 16515072, !dbg !6561
  %tobool299 = icmp eq i32 %and298, 0, !dbg !6561
  br i1 %tobool299, label %if.end304, label %if.then300, !dbg !6563

if.then300:                                       ; preds = %if.end297
  %86 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !6564
  %dump301 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %86, i64 0, i32 1, !dbg !6565
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %dump301, align 8, !dbg !6565
  %call302 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !6566
  br label %if.end304, !dbg !6566

if.end304:                                        ; preds = %if.end297, %land.lhs.true283, %if.then267, %if.then300
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6567
  %call305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !6568
  br label %if.end306, !dbg !6569

if.end306:                                        ; preds = %if.end304, %if.end264
  call fastcc void @adjust_priority(%struct.rtx_def* %next) #7, !dbg !6570
  %call307 = call fastcc i32 @fix_tick_ready(%struct.rtx_def* %next) #7, !dbg !6571
  br label %cleanup308, !dbg !6572

cleanup308:                                       ; preds = %if.end306, %if.then198
  %retval.0 = phi i32 [ -1, %if.then198 ], [ %call307, %if.end306 ], !dbg !6406
  ret i32 %retval.0, !dbg !6573
}

declare dso_local zeroext i8 @sd_lists_empty_p(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sd_iterator_start(%struct._sd_iterator* noalias sret %agg.result, %struct.rtx_def* %insn, i32 %types) unnamed_addr #0 !dbg !2249 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2283, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i32 %types, metadata !2284, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %agg.result, metadata !2285, metadata !DIExpression()), !dbg !6575
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 0, !dbg !6576
  store i32 %types, i32* %types1, align 8, !dbg !6577
  %insn2 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 1, !dbg !6578
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn2, align 8, !dbg !6579
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 2, !dbg !6580
  store %struct._dep_link** @sd_iterator_start.null_link, %struct._dep_link*** %linkp, align 8, !dbg !6581
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i64 0, i32 3, !dbg !6582
  store i8 0, i8* %resolved_p, align 8, !dbg !6583
  ret void, !dbg !6584
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %it_ptr, %struct._dep** %dep_ptr) unnamed_addr #0 !dbg !6585 {
entry:
  %list = alloca %struct._deps_list*, align 8
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %it_ptr, metadata !6591, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata %struct._dep** %dep_ptr, metadata !6592, metadata !DIExpression()), !dbg !6606
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 2, !dbg !6607
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !6607
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !6608
  call void @llvm.dbg.value(metadata %struct._dep_link* %1, metadata !6593, metadata !DIExpression()), !dbg !6606
  %cmp = icmp eq %struct._dep_link* %1, null, !dbg !6609
  br i1 %cmp, label %if.else, label %if.then, !dbg !6610

if.then:                                          ; preds = %entry
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 0, !dbg !6611
  %2 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !6611
  %dep = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i64 0, i32 1, !dbg !6611
  store %struct._dep* %dep, %struct._dep** %dep_ptr, align 8, !dbg !6613
  br label %cleanup9, !dbg !6614

if.else:                                          ; preds = %entry
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 0, !dbg !6615
  %3 = load i32, i32* %types1, align 8, !dbg !6615
  call void @llvm.dbg.value(metadata i32 %3, metadata !6594, metadata !DIExpression()), !dbg !6616
  %cmp2 = icmp eq i32 %3, 0, !dbg !6617
  br i1 %cmp2, label %if.end7, label %if.then3, !dbg !6618

if.then3:                                         ; preds = %if.else
  %4 = bitcast %struct._deps_list** %list to i8*, !dbg !6619
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6619
  %insn = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 1, !dbg !6620
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6620
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 3, !dbg !6621
  call void @llvm.dbg.value(metadata %struct._deps_list** %list, metadata !6597, metadata !DIExpression(DW_OP_deref)), !dbg !6622
  call void @sd_next_list(%struct.rtx_def* %5, i32* %types1, %struct._deps_list** nonnull %list, i8* nonnull %resolved_p) #6, !dbg !6623
  %6 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !6624
  call void @llvm.dbg.value(metadata %struct._deps_list* %6, metadata !6597, metadata !DIExpression()), !dbg !6622
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %6, i64 0, i32 0, !dbg !6624
  store %struct._dep_link** %first, %struct._dep_link*** %linkp, align 8, !dbg !6625
  call void @llvm.dbg.value(metadata %struct._deps_list* %6, metadata !6597, metadata !DIExpression()), !dbg !6622
  %tobool = icmp eq %struct._deps_list* %6, null, !dbg !6626
  br i1 %tobool, label %cleanup, label %if.then6, !dbg !6628

if.then6:                                         ; preds = %if.then3
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %it_ptr, %struct._dep** %dep_ptr) #7, !dbg !6629
  br label %cleanup, !dbg !6630

cleanup:                                          ; preds = %if.then3, %if.then6
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then6 ], [ true, %if.then3 ]
  %retval.0 = phi i8 [ %call, %if.then6 ], [ undef, %if.then3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6631
  br i1 %cleanup.dest.slot.0, label %if.end7, label %cleanup9

if.end7:                                          ; preds = %if.else, %cleanup
  store %struct._dep* null, %struct._dep** %dep_ptr, align 8, !dbg !6632
  br label %cleanup9, !dbg !6633

cleanup9:                                         ; preds = %if.end7, %cleanup, %if.then
  %retval.2 = phi i8 [ 1, %if.then ], [ %retval.0, %cleanup ], [ 0, %if.end7 ], !dbg !6634
  ret i8 %retval.2, !dbg !6635
}

declare dso_local i32 @ds_merge(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sd_iterator_next(%struct._sd_iterator* %it_ptr) unnamed_addr #0 !dbg !6636 {
entry:
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %it_ptr, metadata !6640, metadata !DIExpression()), !dbg !6641
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %it_ptr, i64 0, i32 2, !dbg !6642
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !6642
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !6642
  %next = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i64 0, i32 1, !dbg !6642
  store %struct._dep_link** %next, %struct._dep_link*** %linkp, align 8, !dbg !6643
  ret void, !dbg !6644
}

declare dso_local i32 @ds_weak(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @haifa_speculate_insn(%struct.rtx_def* %insn, i32 %request, %struct.rtx_def** %new_pat) unnamed_addr #5 !dbg !6645 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6649, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32 %request, metadata !6650, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata %struct.rtx_def** %new_pat, metadata !6651, metadata !DIExpression()), !dbg !6652
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6653
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i64 0, i32 12, !dbg !6653
  %bf.load = load i8, i8* %generate_spec_deps, align 8, !dbg !6653
  %bf.clear = and i8 %bf.load, 4, !dbg !6653
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !6653
  br i1 %tobool, label %cond.true10, label %land.lhs.true, !dbg !6653

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !6653
  %tobool1 = icmp eq i8 %call, 0, !dbg !6653
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !6653

cond.true:                                        ; preds = %land.lhs.true
  %call2 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %insn) #6, !dbg !6653
  %tobool4 = icmp eq i8 %call2, 0, !dbg !6653
  br i1 %tobool4, label %cond.end12, label %cond.true10, !dbg !6653

cond.false:                                       ; preds = %land.lhs.true
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6653
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !6653
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6653
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6653
  %2 = load i32, i32* %rt_int, align 8, !dbg !6653
  %call8 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %2) #7, !dbg !6653
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call8, i64 0, i32 11, !dbg !6653
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !6653
  %cmp = icmp eq %struct.basic_block_def* %3, null, !dbg !6653
  br i1 %cmp, label %cond.end12, label %cond.true10, !dbg !6653

cond.true10:                                      ; preds = %cond.true, %cond.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4836, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6653
  br label %cond.end12, !dbg !6653

cond.end12:                                       ; preds = %cond.true, %cond.false, %cond.true10
  %4 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6654
  %base16 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %4, i64 0, i32 0, !dbg !6654
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !6654
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %5, i64 0, i32 0, !dbg !6654
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6654
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !6654
  %6 = load i32, i32* %rt_int29, align 8, !dbg !6654
  %call30 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base22, i32 %6) #7, !dbg !6654
  %call31 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base16, i32 %call30) #7, !dbg !6654
  %has_internal_dep = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call31, i64 0, i32 1, !dbg !6654
  %7 = load i32, i32* %has_internal_dep, align 4, !dbg !6654
  %tobool32 = icmp eq i32 %7, 0, !dbg !6654
  br i1 %tobool32, label %lor.lhs.false, label %return, !dbg !6656

lor.lhs.false:                                    ; preds = %cond.end12
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !6657
  %bf.load33 = load i32, i32* %8, align 8, !dbg !6657
  %bf.clear35 = and i32 %bf.load33, 268435456, !dbg !6657
  %tobool36 = icmp eq i32 %bf.clear35, 0, !dbg !6657
  br i1 %tobool36, label %if.end, label %return, !dbg !6658

if.end:                                           ; preds = %lor.lhs.false
  %call37 = tail call i32 @sched_speculate_insn(%struct.rtx_def* %insn, i32 %request, %struct.rtx_def** %new_pat) #7, !dbg !6659
  br label %return, !dbg !6660

return:                                           ; preds = %lor.lhs.false, %cond.end12, %if.end
  %retval.0 = phi i32 [ %call37, %if.end ], [ -1, %lor.lhs.false ], [ -1, %cond.end12 ], !dbg !6652
  ret i32 %retval.0, !dbg !6661
}

; Function Attrs: nounwind uwtable
define internal fastcc void @haifa_change_pattern(%struct.rtx_def* %insn, %struct.rtx_def* %new_pat) unnamed_addr #5 !dbg !6662 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6664, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_pat, metadata !6665, metadata !DIExpression()), !dbg !6666
  tail call void @sched_change_pattern(%struct.rtx_def* %insn, %struct.rtx_def* %new_pat) #7, !dbg !6667
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6668
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6668
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6668
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6668
  %1 = load i32, i32* %rt_int, align 8, !dbg !6668
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !6668
  %cost = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 5, !dbg !6668
  store i16 -1, i16* %cost, align 4, !dbg !6669
  %2 = load i32, i32* @max_insn_queue_index, align 4, !dbg !6670
  %3 = xor i32 %2, -1, !dbg !6670
  %4 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6671
  %base3 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %4, i64 0, i32 0, !dbg !6671
  %5 = load i32, i32* %rt_int, align 8, !dbg !6671
  %call11 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base3, i32 %5) #7, !dbg !6671
  %tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call11, i64 0, i32 2, !dbg !6671
  store i32 %3, i32* %tick, align 8, !dbg !6672
  ret void, !dbg !6673
}

; Function Attrs: nounwind uwtable
define internal fastcc void @change_queue_index(%struct.rtx_def* %next, i32 %delay) unnamed_addr #5 !dbg !6674 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next, metadata !6676, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i32 %delay, metadata !6677, metadata !DIExpression()), !dbg !6679
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6680
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !6680
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6680
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6680
  %1 = load i32, i32* %rt_int, align 8, !dbg !6680
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !6680
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 4, !dbg !6680
  %2 = load i32, i32* %queue_index, align 8, !dbg !6680
  call void @llvm.dbg.value(metadata i32 %2, metadata !6678, metadata !DIExpression()), !dbg !6679
  %cmp = icmp sgt i32 %delay, -3, !dbg !6681
  %3 = load i32, i32* @max_insn_queue_index, align 4, !dbg !6681
  %cmp1 = icmp sge i32 %3, %delay, !dbg !6681
  %or.cond = and i1 %cmp, %cmp1, !dbg !6681
  %cmp3 = icmp ne i32 %delay, 0, !dbg !6681
  %or.cond1 = and i1 %or.cond, %cmp3, !dbg !6681
  br i1 %or.cond1, label %cond.end6, label %cond.true4, !dbg !6681

cond.true4:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3889, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6681
  br label %cond.end6, !dbg !6681

cond.end6:                                        ; preds = %entry, %cond.true4
  %cmp8 = icmp eq i32 %2, -3, !dbg !6682
  br i1 %cmp8, label %cond.true9, label %cond.end11, !dbg !6682

cond.true9:                                       ; preds = %cond.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3890, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6682
  br label %cond.end11, !dbg !6682

cond.end11:                                       ; preds = %cond.end6, %cond.true9
  %cmp13 = icmp sgt i32 %delay, 0, !dbg !6683
  br i1 %cmp13, label %land.lhs.true14, label %lor.lhs.false, !dbg !6685

land.lhs.true14:                                  ; preds = %cond.end11
  %4 = load i32, i32* @q_ptr, align 4, !dbg !6686
  %add = add nsw i32 %4, %delay, !dbg !6686
  %and = and i32 %add, %3, !dbg !6686
  %cmp15 = icmp eq i32 %and, %2, !dbg !6687
  br i1 %cmp15, label %cleanup.cont, label %lor.lhs.false, !dbg !6688

lor.lhs.false:                                    ; preds = %land.lhs.true14, %cond.end11
  %cmp16 = icmp slt i32 %delay, 0, !dbg !6689
  %cmp18 = icmp eq i32 %2, %delay, !dbg !6690
  %or.cond2 = and i1 %cmp16, %cmp18, !dbg !6691
  br i1 %or.cond2, label %cleanup.cont, label %if.end, !dbg !6691

if.end:                                           ; preds = %lor.lhs.false
  %cmp19 = icmp eq i32 %2, -1, !dbg !6692
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !6694

if.then20:                                        ; preds = %if.end
  tail call fastcc void @ready_remove_insn(%struct.rtx_def* %next) #7, !dbg !6695
  br label %if.end24, !dbg !6695

if.else:                                          ; preds = %if.end
  %cmp21 = icmp sgt i32 %2, -1, !dbg !6696
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !6698

if.then22:                                        ; preds = %if.else
  tail call fastcc void @queue_remove(%struct.rtx_def* %next) #7, !dbg !6699
  br label %if.end24, !dbg !6699

if.end24:                                         ; preds = %if.else, %if.then22, %if.then20
  %cmp25 = icmp eq i32 %delay, -1, !dbg !6700
  br i1 %cmp25, label %if.then26, label %if.else27, !dbg !6702

if.then26:                                        ; preds = %if.end24
  tail call fastcc void @ready_add(%struct.ready_list* nonnull @ready, %struct.rtx_def* %next, i8 zeroext 0) #7, !dbg !6703
  br label %if.end31, !dbg !6703

if.else27:                                        ; preds = %if.end24
  br i1 %cmp13, label %if.then29, label %if.end31, !dbg !6704

if.then29:                                        ; preds = %if.else27
  tail call fastcc void @queue_insn(%struct.rtx_def* %next, i32 %delay) #7, !dbg !6705
  br label %if.end31, !dbg !6705

if.end31:                                         ; preds = %if.else27, %if.then29, %if.then26
  %5 = load i32, i32* @sched_verbose, align 4, !dbg !6707
  %cmp32 = icmp sgt i32 %5, 1, !dbg !6709
  br i1 %cmp32, label %if.then33, label %cleanup.cont, !dbg !6710

if.then33:                                        ; preds = %if.end31
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6711
  %7 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6713
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %7, i64 0, i32 5, !dbg !6714
  %8 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !6714
  %call34 = tail call i8* %8(%struct.rtx_def* %next, i32 0) #6, !dbg !6715
  %call35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.46, i64 0, i64 0), i8* %call34) #6, !dbg !6716
  br i1 %cmp25, label %if.then37, label %if.else39, !dbg !6717

if.then37:                                        ; preds = %if.then33
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6718
  %call38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0)) #6, !dbg !6720
  br label %cleanup.cont, !dbg !6720

if.else39:                                        ; preds = %if.then33
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @sched_dump, align 8, !dbg !6721
  br i1 %cmp13, label %if.then41, label %if.else43, !dbg !6723

if.then41:                                        ; preds = %if.else39
  %call42 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i64 0, i64 0), i32 %delay) #6, !dbg !6724
  br label %cleanup.cont, !dbg !6724

if.else43:                                        ; preds = %if.else39
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !6725
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %lor.lhs.false, %land.lhs.true14, %if.then37, %if.else43, %if.then41, %if.end31
  ret void, !dbg !6726
}

declare dso_local zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @adjust_priority(%struct.rtx_def* %prev) unnamed_addr #5 !dbg !6727 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev, metadata !6729, metadata !DIExpression()), !dbg !6730
  %0 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 1), align 8, !dbg !6731
  %tobool = icmp eq i32 (%struct.rtx_def*, i32)* %0, null, !dbg !6733
  br i1 %tobool, label %if.end, label %if.then, !dbg !6734

if.then:                                          ; preds = %entry
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6735
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !6735
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6735
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6735
  %2 = load i32, i32* %rt_int, align 8, !dbg !6735
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %2) #7, !dbg !6735
  %priority = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 1, !dbg !6735
  %3 = load i32, i32* %priority, align 4, !dbg !6735
  %call2 = tail call i32 %0(%struct.rtx_def* %prev, i32 %3) #6, !dbg !6736
  %4 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6737
  %base5 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %4, i64 0, i32 0, !dbg !6737
  %5 = load i32, i32* %rt_int, align 8, !dbg !6737
  %call13 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base5, i32 %5) #7, !dbg !6737
  %priority14 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call13, i64 0, i32 1, !dbg !6737
  store i32 %call2, i32* %priority14, align 4, !dbg !6738
  br label %if.end, !dbg !6737

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6739
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @fix_tick_ready(%struct.rtx_def* %next) unnamed_addr #5 !dbg !6740 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next, metadata !6742, metadata !DIExpression()), !dbg !6755
  %call = tail call zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %next, i32 8) #6, !dbg !6756
  %tobool = icmp eq i8 %call, 0, !dbg !6756
  br i1 %tobool, label %if.then, label %entry.if.end47_crit_edge, !dbg !6757

entry.if.end47_crit_edge:                         ; preds = %entry
  br label %if.end47, !dbg !6757

if.then:                                          ; preds = %entry
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !6758
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6758
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !6759
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6759
  %2 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6760
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %2, i64 0, i32 0, !dbg !6760
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6760
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6760
  %3 = load i32, i32* %rt_int, align 8, !dbg !6760
  %call2 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %3) #7, !dbg !6760
  %tick3 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call2, i64 0, i32 2, !dbg !6760
  %4 = load i32, i32* %tick3, align 8, !dbg !6760
  call void @llvm.dbg.value(metadata i32 %4, metadata !6743, metadata !DIExpression()), !dbg !6755
  %5 = load i32, i32* @max_insn_queue_index, align 4, !dbg !6761
  %6 = xor i32 %5, -1, !dbg !6761
  %cmp = icmp eq i32 %4, %6, !dbg !6762
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !6745, metadata !DIExpression()), !dbg !6763
  %7 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !6764
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8, !dbg !6764
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %next, i32 8) #7, !dbg !6764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %7, i64 32, i1 false), !dbg !6764
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8, !dbg !6764
  %sub19 = sub nsw i32 0, %5, !dbg !6765
  br i1 %cmp, label %if.then.split.us, label %if.then.if.then.split_crit_edge, !dbg !6764

if.then.if.then.split_crit_edge:                  ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 %4, metadata !6743, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !6748, metadata !DIExpression(DW_OP_deref)), !dbg !6763
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !6749, metadata !DIExpression(DW_OP_deref)), !dbg !6763
  %call4 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !6766
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6764
  br i1 %tobool5, label %for.end.us-lcssa, label %for.body, !dbg !6764

if.then.split.us:                                 ; preds = %if.then
  br label %for.cond.us, !dbg !6764

for.cond.us:                                      ; preds = %cond.end24.us, %if.then.split.us
  %tick.0.us = phi i32 [ %4, %if.then.split.us ], [ %spec.select.us, %cond.end24.us ], !dbg !6763
  call void @llvm.dbg.value(metadata i32 %tick.0.us, metadata !6743, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !6748, metadata !DIExpression(DW_OP_deref)), !dbg !6763
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !6749, metadata !DIExpression(DW_OP_deref)), !dbg !6763
  %call4.us = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !6766
  %tobool5.us = icmp eq i8 %call4.us, 0, !dbg !6764
  br i1 %tobool5.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !6764

for.body.us:                                      ; preds = %for.cond.us
  %8 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6767
  call void @llvm.dbg.value(metadata %struct._dep* %8, metadata !6749, metadata !DIExpression()), !dbg !6763
  %pro6.us = getelementptr inbounds %struct._dep, %struct._dep* %8, i64 0, i32 0, !dbg !6767
  %9 = load %struct.rtx_def*, %struct.rtx_def** %pro6.us, align 8, !dbg !6767
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !6750, metadata !DIExpression()), !dbg !6765
  %10 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6768
  %base9.us = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %10, i64 0, i32 0, !dbg !6768
  %arrayidx15.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6768
  %rt_int16.us = bitcast %union.rtunion_def* %arrayidx15.us to i32*, !dbg !6768
  %11 = load i32, i32* %rt_int16.us, align 8, !dbg !6768
  %call17.us = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base9.us, i32 %11) #7, !dbg !6768
  %tick18.us = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call17.us, i64 0, i32 2, !dbg !6768
  %12 = load i32, i32* %tick18.us, align 8, !dbg !6768
  %cmp20.us = icmp slt i32 %12, %sub19, !dbg !6768
  br i1 %cmp20.us, label %cond.true22.us, label %cond.end24.us, !dbg !6768

cond.true22.us:                                   ; preds = %for.body.us
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3856, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6768
  br label %cond.end24.us, !dbg !6768

cond.end24.us:                                    ; preds = %cond.true22.us, %for.body.us
  %13 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6769
  %base28.us = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %13, i64 0, i32 0, !dbg !6769
  %14 = load i32, i32* %rt_int16.us, align 8, !dbg !6769
  %call36.us = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base28.us, i32 %14) #7, !dbg !6769
  %tick37.us = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call36.us, i64 0, i32 2, !dbg !6769
  %15 = load i32, i32* %tick37.us, align 8, !dbg !6769
  %16 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6770
  call void @llvm.dbg.value(metadata %struct._dep* %16, metadata !6749, metadata !DIExpression()), !dbg !6763
  %call38.us = call i32 @dep_cost(%struct._dep* %16) #7, !dbg !6771
  %add39.us = add nsw i32 %15, %call38.us, !dbg !6772
  call void @llvm.dbg.value(metadata i32 %add39.us, metadata !6754, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.value(metadata i32 undef, metadata !6743, metadata !DIExpression()), !dbg !6755
  %cmp40.us = icmp sgt i32 %add39.us, %tick.0.us, !dbg !6773
  %spec.select.us = select i1 %cmp40.us, i32 %add39.us, i32 %tick.0.us, !dbg !6775
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !6743, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !6748, metadata !DIExpression(DW_OP_deref)), !dbg !6763
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !6766
  br label %for.cond.us, !dbg !6766, !llvm.loop !6776

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %tick.0.us.lcssa = phi i32 [ %tick.0.us, %for.cond.us ], !dbg !6763
  call void @llvm.dbg.value(metadata i32 %tick.0.us.lcssa, metadata !6743, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %tick.0.us.lcssa, metadata !6743, metadata !DIExpression()), !dbg !6755
  br label %for.end, !dbg !6778

for.body:                                         ; preds = %if.then.if.then.split_crit_edge
  %17 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6767
  call void @llvm.dbg.value(metadata %struct._dep* %17, metadata !6749, metadata !DIExpression()), !dbg !6763
  %pro6 = getelementptr inbounds %struct._dep, %struct._dep* %17, i64 0, i32 0, !dbg !6767
  %18 = load %struct.rtx_def*, %struct.rtx_def** %pro6, align 8, !dbg !6767
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !6750, metadata !DIExpression()), !dbg !6765
  %19 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6768
  %base9 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %19, i64 0, i32 0, !dbg !6768
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6768
  %rt_int16 = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !6768
  %20 = load i32, i32* %rt_int16, align 8, !dbg !6768
  %call17 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base9, i32 %20) #7, !dbg !6768
  %tick18 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call17, i64 0, i32 2, !dbg !6768
  %21 = load i32, i32* %tick18, align 8, !dbg !6768
  %cmp20 = icmp slt i32 %21, %sub19, !dbg !6768
  br i1 %cmp20, label %cond.true22, label %cond.end24, !dbg !6768

cond.true22:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3856, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6768
  br label %cond.end24, !dbg !6768

cond.end24:                                       ; preds = %for.body, %cond.true22
  %22 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6769
  %base28 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %22, i64 0, i32 0, !dbg !6769
  %23 = load i32, i32* %rt_int16, align 8, !dbg !6769
  %call36 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base28, i32 %23) #7, !dbg !6769
  %tick37 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call36, i64 0, i32 2, !dbg !6769
  %24 = load i32, i32* %tick37, align 8, !dbg !6769
  %25 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6770
  call void @llvm.dbg.value(metadata %struct._dep* %25, metadata !6749, metadata !DIExpression()), !dbg !6763
  %call38 = call i32 @dep_cost(%struct._dep* %25) #7, !dbg !6771
  %add39 = add nsw i32 %24, %call38, !dbg !6772
  call void @llvm.dbg.value(metadata i32 %add39, metadata !6754, metadata !DIExpression()), !dbg !6765
  %cmp40 = icmp sgt i32 %add39, %4, !dbg !6773
  %spec.select = select i1 %cmp40, i32 %add39, i32 %4, !dbg !6775
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6743, metadata !DIExpression()), !dbg !6755
  br label %for.end.us-lcssa

for.end.us-lcssa:                                 ; preds = %cond.end24, %if.then.if.then.split_crit_edge
  %tick.2.ph = phi i32 [ %4, %if.then.if.then.split_crit_edge ], [ %spec.select, %cond.end24 ]
  br label %for.end, !dbg !6778

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %tick.2 = phi i32 [ %tick.2.ph, %for.end.us-lcssa ], [ %tick.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !6763
  call void @llvm.dbg.value(metadata i32 %tick.2, metadata !6743, metadata !DIExpression()), !dbg !6755
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6778
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6778
  br label %if.end47, !dbg !6779

if.end47:                                         ; preds = %entry.if.end47_crit_edge, %for.end
  %tick.3 = phi i32 [ %tick.2, %for.end ], [ -1, %entry.if.end47_crit_edge ], !dbg !6780
  call void @llvm.dbg.value(metadata i32 %tick.3, metadata !6743, metadata !DIExpression()), !dbg !6755
  %26 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !6781
  %base50 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %26, i64 0, i32 0, !dbg !6781
  %arrayidx56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %next, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6781
  %rt_int57 = bitcast %union.rtunion_def* %arrayidx56 to i32*, !dbg !6781
  %27 = load i32, i32* %rt_int57, align 8, !dbg !6781
  %call58 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base50, i32 %27) #7, !dbg !6781
  %tick59 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call58, i64 0, i32 2, !dbg !6781
  store i32 %tick.3, i32* %tick59, align 8, !dbg !6782
  %28 = load i32, i32* @clock_var, align 4, !dbg !6783
  %sub60 = sub nsw i32 %tick.3, %28, !dbg !6784
  call void @llvm.dbg.value(metadata i32 %sub60, metadata !6744, metadata !DIExpression()), !dbg !6755
  %cmp61 = icmp slt i32 %sub60, 1, !dbg !6785
  br i1 %cmp61, label %if.then65, label %lor.lhs.false, !dbg !6787

lor.lhs.false:                                    ; preds = %if.end47
  %29 = load i8, i8* @sched_pressure_p, align 1, !dbg !6788
  %tobool64 = icmp eq i8 %29, 0, !dbg !6788
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !6789

if.then65:                                        ; preds = %lor.lhs.false, %if.end47
  call void @llvm.dbg.value(metadata i32 -1, metadata !6744, metadata !DIExpression()), !dbg !6755
  br label %if.end66, !dbg !6790

if.end66:                                         ; preds = %lor.lhs.false, %if.then65
  %delay.0 = phi i32 [ -1, %if.then65 ], [ %sub60, %lor.lhs.false ], !dbg !6755
  call void @llvm.dbg.value(metadata i32 %delay.0, metadata !6744, metadata !DIExpression()), !dbg !6755
  call fastcc void @change_queue_index(%struct.rtx_def* %next, i32 %delay.0) #7, !dbg !6791
  ret i32 %delay.0, !dbg !6792
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_extend_ready_list(i32 %new_sched_ready_n_insns) local_unnamed_addr #5 !dbg !6793 {
entry:
  call void @llvm.dbg.value(metadata i32 %new_sched_ready_n_insns, metadata !6797, metadata !DIExpression()), !dbg !6799
  %0 = load i32, i32* @sched_ready_n_insns, align 4, !dbg !6800
  %cmp = icmp eq i32 %0, -1, !dbg !6802
  br i1 %cmp, label %if.then, label %if.else, !dbg !6803

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !6798, metadata !DIExpression()), !dbg !6799
  store i32 0, i32* @sched_ready_n_insns, align 4, !dbg !6804
  br label %if.end, !dbg !6806

if.else:                                          ; preds = %entry
  %add = add nsw i32 %0, 1, !dbg !6807
  call void @llvm.dbg.value(metadata i32 %add, metadata !6798, metadata !DIExpression()), !dbg !6799
  %phitmp = sext i32 %add to i64
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %i.0 = phi i64 [ 0, %if.then ], [ %phitmp, %if.else ]
  %1 = load i32, i32* @issue_rate, align 4, !dbg !6808
  %add1 = add nsw i32 %1, %new_sched_ready_n_insns, !dbg !6809
  store i32 %add1, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !6810
  %2 = load i8*, i8** bitcast (%struct.ready_list* @ready to i8**), align 8, !dbg !6811
  %conv = sext i32 %add1 to i64, !dbg !6811
  %mul = shl nsw i64 %conv, 3, !dbg !6811
  %call = tail call i8* @xrealloc(i8* %2, i64 %mul) #6, !dbg !6811
  store i8* %call, i8** bitcast (%struct.ready_list* @ready to i8**), align 8, !dbg !6812
  %3 = load i32, i32* @sched_ready_n_insns, align 4, !dbg !6813
  %cmp2 = icmp sgt i32 %3, %new_sched_ready_n_insns, !dbg !6813
  br i1 %cmp2, label %cond.true, label %cond.end, !dbg !6813

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 3944, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6813
  %.pre = load i32, i32* @sched_ready_n_insns, align 4, !dbg !6814
  br label %cond.end, !dbg !6813

cond.end:                                         ; preds = %if.end, %cond.true
  %4 = phi i32 [ %3, %if.end ], [ %.pre, %cond.true ], !dbg !6814
  %5 = load i8*, i8** @ready_try, align 8, !dbg !6815
  %conv4 = sext i32 %new_sched_ready_n_insns to i64, !dbg !6816
  %conv5 = sext i32 %4 to i64, !dbg !6814
  %call6 = tail call i8* @xrecalloc(i8* %5, i64 %conv4, i64 %conv5, i64 1) #7, !dbg !6817
  store i8* %call6, i8** @ready_try, align 8, !dbg !6818
  %6 = load i8*, i8** bitcast (%struct.choice_entry** @choice_stack to i8**), align 8, !dbg !6819
  %add7 = add nsw i32 %new_sched_ready_n_insns, 1, !dbg !6819
  %conv8 = sext i32 %add7 to i64, !dbg !6819
  %mul9 = mul nsw i64 %conv8, 24, !dbg !6819
  %call10 = tail call i8* @xrealloc(i8* %6, i64 %mul9) #6, !dbg !6819
  store i8* %call10, i8** bitcast (%struct.choice_entry** @choice_stack to i8**), align 8, !dbg !6820
  %7 = sext i32 %new_sched_ready_n_insns to i64, !dbg !6821
  br label %for.cond, !dbg !6821

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %i.0, %cond.end ], !dbg !6799
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6798, metadata !DIExpression()), !dbg !6799
  %cmp11 = icmp sgt i64 %indvars.iv, %7, !dbg !6822
  br i1 %cmp11, label %for.end, label %for.body, !dbg !6825

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* @dfa_state_size, align 8, !dbg !6826
  %call13 = tail call i8* @xmalloc(i64 %8) #6, !dbg !6827
  %9 = load %struct.choice_entry*, %struct.choice_entry** @choice_stack, align 8, !dbg !6828
  %state = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %9, i64 %indvars.iv, i32 3, !dbg !6829
  store i8* %call13, i8** %state, align 8, !dbg !6830
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !6831
  call void @llvm.dbg.value(metadata i32 undef, metadata !6798, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6799
  br label %for.cond, !dbg !6832, !llvm.loop !6833

for.end:                                          ; preds = %for.cond
  store i32 %new_sched_ready_n_insns, i32* @sched_ready_n_insns, align 4, !dbg !6835
  ret void, !dbg !6836
}

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @xrecalloc(i8* %p, i64 %new_nmemb, i64 %old_nmemb, i64 %size) local_unnamed_addr #5 !dbg !6837 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !6841, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata i64 %new_nmemb, metadata !6842, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata i64 %old_nmemb, metadata !6843, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata i64 %size, metadata !6844, metadata !DIExpression()), !dbg !6845
  %cmp = icmp ult i64 %new_nmemb, %old_nmemb, !dbg !6846
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6846

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6846
  br label %cond.end, !dbg !6846

cond.end:                                         ; preds = %entry, %cond.true
  %mul = mul i64 %new_nmemb, %size, !dbg !6847
  %call = tail call i8* @xrealloc(i8* %p, i64 %mul) #6, !dbg !6847
  call void @llvm.dbg.value(metadata i8* %call, metadata !6841, metadata !DIExpression()), !dbg !6845
  %mul1 = mul i64 %old_nmemb, %size, !dbg !6848
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %mul1, !dbg !6849
  %sub = sub i64 %new_nmemb, %old_nmemb, !dbg !6850
  %mul2 = mul i64 %sub, %size, !dbg !6851
  %call3 = tail call i8* @memset(i8* %add.ptr, i32 0, i64 %mul2) #6, !dbg !6852
  ret i8* %call, !dbg !6853
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_finish_ready_list() local_unnamed_addr #5 !dbg !6854 {
entry:
  %0 = load i8*, i8** bitcast (%struct.ready_list* @ready to i8**), align 8, !dbg !6857
  tail call void @free(i8* %0) #6, !dbg !6858
  store %struct.rtx_def** null, %struct.rtx_def*** getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 0), align 8, !dbg !6859
  store i32 0, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 1), align 8, !dbg !6860
  %1 = load i8*, i8** @ready_try, align 8, !dbg !6861
  tail call void @free(i8* %1) #6, !dbg !6862
  store i8* null, i8** @ready_try, align 8, !dbg !6863
  call void @llvm.dbg.value(metadata i32 0, metadata !6856, metadata !DIExpression()), !dbg !6864
  br label %for.cond, !dbg !6865

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !6867
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6856, metadata !DIExpression()), !dbg !6864
  %2 = load i32, i32* @sched_ready_n_insns, align 4, !dbg !6868
  %3 = sext i32 %2 to i64, !dbg !6870
  %cmp = icmp sgt i64 %indvars.iv, %3, !dbg !6870
  %4 = load %struct.choice_entry*, %struct.choice_entry** @choice_stack, align 8, !dbg !6864
  br i1 %cmp, label %for.end, label %for.body, !dbg !6871

for.body:                                         ; preds = %for.cond
  %state = getelementptr inbounds %struct.choice_entry, %struct.choice_entry* %4, i64 %indvars.iv, i32 3, !dbg !6872
  %5 = load i8*, i8** %state, align 8, !dbg !6872
  tail call void @free(i8* %5) #6, !dbg !6873
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6874
  call void @llvm.dbg.value(metadata i32 undef, metadata !6856, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6864
  br label %for.cond, !dbg !6875, !llvm.loop !6876

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.choice_entry* [ %4, %for.cond ], !dbg !6864
  %6 = bitcast %struct.choice_entry* %.lcssa to i8*, !dbg !6878
  tail call void @free(i8* %6) #6, !dbg !6879
  store %struct.choice_entry* null, %struct.choice_entry** @choice_stack, align 8, !dbg !6880
  store i32 -1, i32* @sched_ready_n_insns, align 4, !dbg !6881
  ret void, !dbg !6882
}

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %pred) local_unnamed_addr #5 !dbg !6883 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp26 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %pred, metadata !6887, metadata !DIExpression()), !dbg !6897
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !6898
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6898
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6899
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6899
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %pred, i64 0, i32 6, !dbg !6900
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6900
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !6896, metadata !DIExpression()), !dbg !6897
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 5, !dbg !6901
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6901
  %cmp = icmp eq %struct.basic_block_def* %3, %pred, !dbg !6901
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6901

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4238, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6901
  br label %cond.end, !dbg !6901

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %pred, i64 0, i32 1, !dbg !6902
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6902
  %tobool = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !6902
  br i1 %tobool, label %cond.end4, label %cond.true1, !dbg !6902

cond.true1:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !6902
  br label %cond.end4, !dbg !6902

cond.end4:                                        ; preds = %cond.end, %cond.true1
  %cond5 = phi %struct.VEC_edge_base* [ %base, %cond.true1 ], [ null, %cond.end ], !dbg !6902
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond5) #7, !dbg !6902
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 0, !dbg !6904
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6904
  %tobool6 = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !6904
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !6904

cond.true7:                                       ; preds = %cond.end4
  %base9 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !6904
  br label %cond.end11, !dbg !6904

cond.end11:                                       ; preds = %cond.end4, %cond.true7
  %cond12 = phi %struct.VEC_edge_base* [ %base9, %cond.true7 ], [ null, %cond.end4 ], !dbg !6904
  %call13 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond12) #7, !dbg !6904
  %cmp14 = icmp ugt i32 %call, %call13, !dbg !6905
  br i1 %cmp14, label %if.else, label %if.then, !dbg !6906

if.then:                                          ; preds = %cond.end11
  %6 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6907
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !6907
  %call16 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6907
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6907
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call16, 0, !dbg !6907
  store i32 %8, i32* %7, align 8, !dbg !6907
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6907
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call16, 1, !dbg !6907
  store %struct.VEC_edge_gc** %10, %struct.VEC_edge_gc*** %9, align 8, !dbg !6907
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !6907
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !6907
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6910
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6910
  br label %for.cond, !dbg !6907

for.cond:                                         ; preds = %for.inc, %if.then
  %13 = load i32, i32* %11, align 8, !dbg !6912
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !6912
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6888, metadata !DIExpression(DW_OP_deref)), !dbg !6897
  %call17 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #7, !dbg !6912
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6907
  br i1 %tobool18, label %cleanup.loopexit1, label %for.body, !dbg !6907

for.body:                                         ; preds = %for.cond
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6913
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !6888, metadata !DIExpression()), !dbg !6897
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 7, !dbg !6915
  %16 = load i32, i32* %flags, align 8, !dbg !6915
  %and = and i32 %16, 1, !dbg !6916
  %tobool19 = icmp eq i32 %and, 0, !dbg !6916
  br i1 %tobool19, label %for.inc, label %if.then20, !dbg !6917

if.then20:                                        ; preds = %for.body
  %.lcssa4 = phi %struct.edge_def* [ %15, %for.body ], !dbg !6913
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa4, metadata !6888, metadata !DIExpression()), !dbg !6897
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.lcssa4, i64 0, i32 1, !dbg !6918
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6918
  %cmp21 = icmp eq %struct.basic_block_def* %17, %2, !dbg !6918
  br i1 %cmp21, label %cond.end24, label %cond.true22, !dbg !6918

cond.true22:                                      ; preds = %if.then20
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6918
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6920
  br label %cond.end24, !dbg !6918

cond.end24:                                       ; preds = %if.then20, %cond.true22
  %18 = phi %struct.edge_def* [ %.lcssa4, %if.then20 ], [ %.pre, %cond.true22 ], !dbg !6920
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !6888, metadata !DIExpression()), !dbg !6897
  br label %cleanup, !dbg !6921

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6889, metadata !DIExpression(DW_OP_deref)), !dbg !6897
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6912
  br label %for.cond, !dbg !6912, !llvm.loop !6922

if.else:                                          ; preds = %cond.end11
  %19 = bitcast %struct.edge_iterator* %tmp26 to i8*, !dbg !6924
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8, !dbg !6924
  %call28 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6924
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp26, i64 0, i32 0, !dbg !6924
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call28, 0, !dbg !6924
  store i32 %21, i32* %20, align 8, !dbg !6924
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp26, i64 0, i32 1, !dbg !6924
  %23 = extractvalue { i32, %struct.VEC_edge_gc** } %call28, 1, !dbg !6924
  store %struct.VEC_edge_gc** %23, %struct.VEC_edge_gc*** %22, align 8, !dbg !6924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %19, i64 16, i1 false), !dbg !6924
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8, !dbg !6924
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6927
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6927
  br label %for.cond29, !dbg !6924

for.cond29:                                       ; preds = %for.inc43, %if.else
  %26 = load i32, i32* %24, align 8, !dbg !6929
  %27 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !6929
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6888, metadata !DIExpression(DW_OP_deref)), !dbg !6897
  %call30 = call fastcc zeroext i8 @ei_cond(i32 %26, %struct.VEC_edge_gc** %27, %struct.edge_def** nonnull %e) #7, !dbg !6929
  %tobool31 = icmp eq i8 %call30, 0, !dbg !6924
  br i1 %tobool31, label %cleanup.loopexit, label %for.body32, !dbg !6924

for.body32:                                       ; preds = %for.cond29
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6930
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !6888, metadata !DIExpression()), !dbg !6897
  %flags33 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 7, !dbg !6932
  %29 = load i32, i32* %flags33, align 8, !dbg !6932
  %and34 = and i32 %29, 1, !dbg !6933
  %tobool35 = icmp eq i32 %and34, 0, !dbg !6933
  br i1 %tobool35, label %for.inc43, label %if.then36, !dbg !6934

if.then36:                                        ; preds = %for.body32
  %.lcssa = phi %struct.edge_def* [ %28, %for.body32 ], !dbg !6930
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !6888, metadata !DIExpression()), !dbg !6897
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.lcssa, i64 0, i32 0, !dbg !6935
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6935
  %cmp37 = icmp eq %struct.basic_block_def* %30, %pred, !dbg !6935
  br i1 %cmp37, label %cond.end40, label %cond.true38, !dbg !6935

cond.true38:                                      ; preds = %if.then36
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4254, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6935
  %.pre2 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6937
  br label %cond.end40, !dbg !6935

cond.end40:                                       ; preds = %if.then36, %cond.true38
  %31 = phi %struct.edge_def* [ %.lcssa, %if.then36 ], [ %.pre2, %cond.true38 ], !dbg !6937
  call void @llvm.dbg.value(metadata %struct.edge_def* %31, metadata !6888, metadata !DIExpression()), !dbg !6897
  br label %cleanup, !dbg !6938

for.inc43:                                        ; preds = %for.body32
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6889, metadata !DIExpression(DW_OP_deref)), !dbg !6897
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6929
  br label %for.cond29, !dbg !6929, !llvm.loop !6939

cleanup.loopexit:                                 ; preds = %for.cond29
  br label %cleanup, !dbg !6941

cleanup.loopexit1:                                ; preds = %for.cond
  br label %cleanup, !dbg !6941

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %cond.end40, %cond.end24
  %retval.0 = phi %struct.edge_def* [ %18, %cond.end24 ], [ %31, %cond.end40 ], [ null, %cleanup.loopexit ], [ null, %cleanup.loopexit1 ], !dbg !6897
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6941
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6941
  ret %struct.edge_def* %retval.0, !dbg !6941
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6942 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6948, metadata !DIExpression()), !dbg !6949
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6950
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6950

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6950
  %0 = load i32, i32* %num, align 8, !dbg !6950
  br label %cond.end, !dbg !6950

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6950
  ret i32 %cond, !dbg !6950
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !6951 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !6955, metadata !DIExpression()), !dbg !6957
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !6958
  store i32 0, i32* %index, align 8, !dbg !6959
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !6960
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !6961
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !6962
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !6962
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !6962
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !6963 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !6969, metadata !DIExpression()), !dbg !6970
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6971
  %tobool = icmp eq i8 %call, 0, !dbg !6971
  br i1 %tobool, label %if.then, label %if.else, !dbg !6973

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !6974
  br label %return, !dbg !6976

if.else:                                          ; preds = %entry
  br label %return, !dbg !6977

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !6979
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !6979
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !6979
  ret i8 %retval.0, !dbg !6980
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !6981 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !6986, metadata !DIExpression()), !dbg !6987
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !6988
  %0 = load i32, i32* %index, align 8, !dbg !6988
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !6988
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6988
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !6988
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !6988
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6988

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !6988
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !6988
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !6988
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !6988
  br label %cond.end, !dbg !6988

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6988
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6988
  %cmp = icmp ult i32 %0, %call2, !dbg !6988
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !6988

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6988
  br label %cond.end5, !dbg !6988

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !6989
  %inc = add i32 %5, 1, !dbg !6989
  store i32 %inc, i32* %index, align 8, !dbg !6989
  ret void, !dbg !6990
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sched_extend_bb() unnamed_addr #5 !dbg !6991 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6997
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6997
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6997
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !6997
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6997
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 5, !dbg !6997
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6997
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 7, !dbg !6997
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6997
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6997
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !6997
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6997
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6993, metadata !DIExpression()), !dbg !6998
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6999
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6999
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6999
  %cmp = icmp eq %struct.rtx_def* %7, null, !dbg !7000
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !7001
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7001

lor.lhs.false:                                    ; preds = %entry
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !7002
  %bf.load = load i32, i32* %9, align 8, !dbg !7002
  %bf.clear = and i32 %bf.load, 65535, !dbg !7002
  %cmp1 = icmp eq i32 %bf.clear, 13, !dbg !7002
  br i1 %cmp1, label %if.end, label %land.lhs.true, !dbg !7003

land.lhs.true:                                    ; preds = %lor.lhs.false
  %cmp4 = icmp eq i32 %bf.clear, 12, !dbg !7004
  br i1 %cmp4, label %if.end, label %land.lhs.true5, !dbg !7005

land.lhs.true5:                                   ; preds = %land.lhs.true
  %bf.load10 = load i32, i32* %8, align 8, !dbg !7006
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !7006
  %cmp12 = icmp eq i32 %bf.clear11, 11, !dbg !7006
  br i1 %cmp12, label %if.end, label %if.then, !dbg !7007

if.then:                                          ; preds = %land.lhs.true5, %entry
  %call = tail call %struct.rtx_def* @emit_note_after(i32 0, %struct.rtx_def* %5) #6, !dbg !7008
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !6994, metadata !DIExpression()), !dbg !7009
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 1, !dbg !7010
  %rt_bb = bitcast %struct.object_block** %arrayidx15 to %struct.basic_block_def**, !dbg !7010
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !7010
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7011
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !7011
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !7011
  %x_exit_block_ptr18 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 1, !dbg !7011
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr18, align 8, !dbg !7011
  %prev_bb19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 5, !dbg !7011
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb19, align 8, !dbg !7011
  %il20 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 7, !dbg !7011
  %rtl21 = bitcast %union.basic_block_il_dependent* %il20 to %struct.rtl_bb_info**, !dbg !7011
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl21, align 8, !dbg !7011
  %end_22 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !7011
  store %struct.rtx_def* %5, %struct.rtx_def** %end_22, align 8, !dbg !7012
  br label %if.end, !dbg !7013

if.end:                                           ; preds = %if.then, %land.lhs.true5, %land.lhs.true, %lor.lhs.false
  ret void, !dbg !7014
}

; Function Attrs: nounwind uwtable
define dso_local %struct.basic_block_def* @sched_create_recovery_block(%struct.basic_block_def** %before_recovery_ptr) local_unnamed_addr #5 !dbg !7015 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %before_recovery_ptr, metadata !7019, metadata !DIExpression()), !dbg !7026
  store i1 true, i1* @haifa_recovery_bb_recently_added_p, align 1, !dbg !7027
  store i8 1, i8* @haifa_recovery_bb_ever_added_p, align 1, !dbg !7028
  tail call fastcc void @init_before_recovery(%struct.basic_block_def** %before_recovery_ptr) #7, !dbg !7029
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** @before_recovery, align 8, !dbg !7030
  %call = tail call %struct.rtx_def* @get_last_bb_insn(%struct.basic_block_def* %0) #6, !dbg !7031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7021, metadata !DIExpression()), !dbg !7026
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !7032
  %bf.load = load i32, i32* %1, align 8, !dbg !7032
  %bf.clear = and i32 %bf.load, 65535, !dbg !7032
  %cmp = icmp eq i32 %bf.clear, 11, !dbg !7032
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7032

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4382, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7032
  br label %cond.end, !dbg !7032

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !7033
  %call2 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call1, %struct.rtx_def* %call) #6, !dbg !7034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !7020, metadata !DIExpression()), !dbg !7026
  %2 = bitcast %struct.rtx_def* %call2 to i8*, !dbg !7035
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** @before_recovery, align 8, !dbg !7036
  %call3 = tail call %struct.basic_block_def* @create_basic_block(i8* %2, i8* %2, %struct.basic_block_def* %3) #6, !dbg !7037
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !7022, metadata !DIExpression()), !dbg !7026
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 7, !dbg !7038
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7038
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7038
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !7038
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7038
  %call4 = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %5) #6, !dbg !7039
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** @before_recovery, align 8, !dbg !7040
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 13, !dbg !7040
  %7 = load i32, i32* %flags, align 8, !dbg !7040
  %and = and i32 %7, 96, !dbg !7040
  %cmp5 = icmp eq i32 %and, 0, !dbg !7041
  br i1 %cmp5, label %if.end, label %do.body, !dbg !7042

do.body:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !7023, metadata !DIExpression()), !dbg !7043
  %flags6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 13, !dbg !7044
  %8 = load i32, i32* %flags6, align 8, !dbg !7044
  %and7 = and i32 %8, -97, !dbg !7044
  %or = or i32 %and7, 64, !dbg !7044
  store i32 %or, i32* %flags6, align 8, !dbg !7044
  br label %if.end, !dbg !7044

if.end:                                           ; preds = %cond.end, %do.body
  %9 = load i32, i32* @sched_verbose, align 4, !dbg !7045
  %tobool = icmp eq i32 %9, 0, !dbg !7045
  br i1 %tobool, label %if.end13, label %land.lhs.true, !dbg !7047

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !7048
  %dump = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %10, i64 0, i32 1, !dbg !7049
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %dump, align 8, !dbg !7049
  %tobool9 = icmp eq %struct._IO_FILE* %11, null, !dbg !7048
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !7050

if.then10:                                        ; preds = %land.lhs.true
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 9, !dbg !7051
  %12 = load i32, i32* %index, align 8, !dbg !7051
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i64 0, i64 0), i32 %12) #6, !dbg !7052
  br label %if.end13, !dbg !7052

if.end13:                                         ; preds = %land.lhs.true, %if.end, %if.then10
  ret %struct.basic_block_def* %call3, !dbg !7053
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_before_recovery(%struct.basic_block_def** %before_recovery_ptr) unnamed_addr #5 !dbg !7054 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %before_recovery_ptr, metadata !7056, metadata !DIExpression()), !dbg !7069
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7070
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7070
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7070
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !7070
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7070
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 5, !dbg !7071
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !7071
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !7057, metadata !DIExpression()), !dbg !7069
  %call = tail call %struct.edge_def* @find_fallthru_edge(%struct.basic_block_def* %3) #7, !dbg !7072
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !7058, metadata !DIExpression()), !dbg !7069
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !7073
  br i1 %tobool, label %if.else, label %if.then, !dbg !7074

if.then:                                          ; preds = %entry
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** @after_recovery, align 8, !dbg !7075
  %cmp = icmp eq %struct.basic_block_def* %3, %4, !dbg !7077
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7078

if.end:                                           ; preds = %if.then
  store i8 0, i8* @adding_bb_to_current_region_p, align 1, !dbg !7079
  %5 = load %struct.basic_block_def* (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*)** @sched_create_empty_bb, align 8, !dbg !7080
  %call2 = tail call %struct.basic_block_def* %5(%struct.basic_block_def* %3) #6, !dbg !7080
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !7059, metadata !DIExpression()), !dbg !7081
  %6 = load %struct.basic_block_def* (%struct.basic_block_def*)*, %struct.basic_block_def* (%struct.basic_block_def*)** @sched_create_empty_bb, align 8, !dbg !7082
  %call3 = tail call %struct.basic_block_def* %6(%struct.basic_block_def* %call2) #6, !dbg !7082
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !7062, metadata !DIExpression()), !dbg !7081
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7083
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 4, !dbg !7083
  %8 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !7083
  %cmp5 = icmp eq %struct.loops* %8, null, !dbg !7085
  br i1 %cmp5, label %if.end27, label %if.then6, !dbg !7086

if.then6:                                         ; preds = %if.end
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %8, i64 0, i32 1, !dbg !7087
  %9 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !7087
  %tobool9 = icmp eq %struct.VEC_loop_p_gc* %9, null, !dbg !7087
  br i1 %tobool9, label %cond.end, label %cond.true, !dbg !7087

cond.true:                                        ; preds = %if.then6
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %9, i64 0, i32 0, !dbg !7087
  br label %cond.end, !dbg !7087

cond.end:                                         ; preds = %if.then6, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.then6 ], !dbg !7087
  %call13 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 0) #7, !dbg !7087
  tail call void @add_bb_to_loop(%struct.basic_block_def* %call2, %struct.loop* %call13) #6, !dbg !7089
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7090
  %x_current_loops15 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 4, !dbg !7090
  %11 = load %struct.loops*, %struct.loops** %x_current_loops15, align 8, !dbg !7090
  %larray16 = getelementptr inbounds %struct.loops, %struct.loops* %11, i64 0, i32 1, !dbg !7090
  %12 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray16, align 8, !dbg !7090
  %tobool17 = icmp eq %struct.VEC_loop_p_gc* %12, null, !dbg !7090
  br i1 %tobool17, label %cond.end24, label %cond.true18, !dbg !7090

cond.true18:                                      ; preds = %cond.end
  %base22 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %12, i64 0, i32 0, !dbg !7090
  br label %cond.end24, !dbg !7090

cond.end24:                                       ; preds = %cond.end, %cond.true18
  %cond25 = phi %struct.VEC_loop_p_base* [ %base22, %cond.true18 ], [ null, %cond.end ], !dbg !7090
  %call26 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond25, i32 0) #7, !dbg !7090
  tail call void @add_bb_to_loop(%struct.basic_block_def* %call3, %struct.loop* %call26) #6, !dbg !7091
  br label %if.end27, !dbg !7092

if.end27:                                         ; preds = %if.end, %cond.end24
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 8, !dbg !7093
  %13 = load i64, i64* %count, align 8, !dbg !7093
  %count28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 8, !dbg !7094
  store i64 %13, i64* %count28, align 8, !dbg !7095
  %14 = load i64, i64* %count, align 8, !dbg !7096
  %count30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 8, !dbg !7097
  store i64 %14, i64* %count30, align 8, !dbg !7098
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 11, !dbg !7099
  %15 = load i32, i32* %frequency, align 8, !dbg !7099
  %frequency31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 11, !dbg !7100
  store i32 %15, i32* %frequency31, align 8, !dbg !7101
  %16 = load i32, i32* %frequency, align 8, !dbg !7102
  %frequency33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 11, !dbg !7103
  store i32 %16, i32* %frequency33, align 8, !dbg !7104
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !7065, metadata !DIExpression()), !dbg !7105
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 13, !dbg !7106
  %17 = load i32, i32* %flags, align 8, !dbg !7106
  %and = and i32 %17, -97, !dbg !7106
  %flags34 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 13, !dbg !7106
  %18 = load i32, i32* %flags34, align 8, !dbg !7106
  %and35 = and i32 %18, 96, !dbg !7106
  %or = or i32 %and, %and35, !dbg !7106
  store i32 %or, i32* %flags, align 8, !dbg !7106
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !7067, metadata !DIExpression()), !dbg !7107
  %flags39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 13, !dbg !7108
  %19 = load i32, i32* %flags39, align 8, !dbg !7108
  %and40 = and i32 %19, -97, !dbg !7108
  %20 = load i32, i32* %flags34, align 8, !dbg !7108
  %and42 = and i32 %20, 96, !dbg !7108
  %or43 = or i32 %and40, %and42, !dbg !7108
  store i32 %or43, i32* %flags39, align 8, !dbg !7108
  tail call void @redirect_edge_succ(%struct.edge_def* nonnull %call, %struct.basic_block_def* %call2) #6, !dbg !7109
  %call47 = tail call %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def* %call2, %struct.basic_block_def* %call3, i32 0) #6, !dbg !7110
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7111
  %cfg49 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 1, !dbg !7111
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg49, align 8, !dbg !7111
  %x_exit_block_ptr50 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i64 0, i32 1, !dbg !7111
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr50, align 8, !dbg !7111
  %call51 = tail call %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def* %call3, %struct.basic_block_def* %23, i32 65) #6, !dbg !7112
  %call52 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %call3) #6, !dbg !7113
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !7064, metadata !DIExpression()), !dbg !7081
  %call53 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call52) #6, !dbg !7114
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 7, !dbg !7115
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7115
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7115
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 1, !dbg !7115
  %25 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7115
  %call54 = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call53, %struct.rtx_def* %25) #6, !dbg !7116
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !7063, metadata !DIExpression()), !dbg !7081
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call54, i64 0, i32 1, !dbg !7117
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !7117
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !7117
  store %struct.rtx_def* %call52, %struct.rtx_def** %rt_rtx, align 8, !dbg !7118
  %arrayidx57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call52, i64 0, i32 1, i32 0, i32 2, !dbg !7119
  %rt_int = bitcast i64* %arrayidx57 to i32*, !dbg !7119
  %26 = load i32, i32* %rt_int, align 8, !dbg !7120
  %inc = add nsw i32 %26, 1, !dbg !7120
  store i32 %inc, i32* %rt_int, align 8, !dbg !7120
  tail call fastcc void @haifa_init_insn(%struct.rtx_def* %call54) #7, !dbg !7121
  %call58 = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %call54) #6, !dbg !7122
  %27 = load void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !7123
  tail call void %27(%struct.basic_block_def* %call3, %struct.basic_block_def* null) #6, !dbg !7123
  %28 = load void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !7124
  tail call void %28(%struct.basic_block_def* %call2, %struct.basic_block_def* null) #6, !dbg !7124
  tail call fastcc void @sched_extend_bb() #7, !dbg !7125
  store i8 1, i8* @adding_bb_to_current_region_p, align 1, !dbg !7126
  store %struct.basic_block_def* %call2, %struct.basic_block_def** @before_recovery, align 8, !dbg !7127
  store %struct.basic_block_def* %call3, %struct.basic_block_def** @after_recovery, align 8, !dbg !7128
  %tobool59 = icmp eq %struct.basic_block_def** %before_recovery_ptr, null, !dbg !7129
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !7131

if.then60:                                        ; preds = %if.end27
  %29 = ptrtoint %struct.basic_block_def* %call2 to i64, !dbg !7131
  %30 = bitcast %struct.basic_block_def** %before_recovery_ptr to i64*, !dbg !7132
  store i64 %29, i64* %30, align 8, !dbg !7132
  br label %if.end61, !dbg !7133

if.end61:                                         ; preds = %if.end27, %if.then60
  %31 = load i32, i32* @sched_verbose, align 4, !dbg !7134
  %cmp62 = icmp sgt i32 %31, 1, !dbg !7136
  br i1 %cmp62, label %land.lhs.true, label %cleanup, !dbg !7137

land.lhs.true:                                    ; preds = %if.end61
  %32 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !7138
  %dump = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %32, i64 0, i32 1, !dbg !7139
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %dump, align 8, !dbg !7139
  %tobool63 = icmp eq %struct._IO_FILE* %33, null, !dbg !7138
  br i1 %tobool63, label %cleanup, label %if.then64, !dbg !7140

if.then64:                                        ; preds = %land.lhs.true
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !7141
  %34 = load i32, i32* %index, align 8, !dbg !7141
  %index66 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !7142
  %35 = load i32, i32* %index66, align 8, !dbg !7142
  %index67 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 9, !dbg !7143
  %36 = load i32, i32* %index67, align 8, !dbg !7143
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %33, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.54, i64 0, i64 0), i32 %34, i32 %35, i32 %36) #6, !dbg !7144
  br label %cleanup, !dbg !7144

cleanup:                                          ; preds = %land.lhs.true, %if.end61, %if.then64, %if.then
  ret void

if.else:                                          ; preds = %entry
  store %struct.basic_block_def* %3, %struct.basic_block_def** @before_recovery, align 8, !dbg !7145
  ret void, !dbg !7146
}

declare dso_local %struct.rtx_def* @get_last_bb_insn(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_label_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_basic_block(i8*, i8*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_create_recovery_edges(%struct.basic_block_def* %first_bb, %struct.basic_block_def* %rec, %struct.basic_block_def* %second_bb) local_unnamed_addr #5 !dbg !7147 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first_bb, metadata !7151, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %rec, metadata !7152, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %second_bb, metadata !7153, metadata !DIExpression()), !dbg !7157
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first_bb, i64 0, i32 13, !dbg !7158
  %0 = load i32, i32* %flags, align 8, !dbg !7158
  %flags1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %rec, i64 0, i32 13, !dbg !7160
  %1 = load i32, i32* %flags1, align 8, !dbg !7160
  %2 = xor i32 %0, %1, !dbg !7161
  %3 = and i32 %2, 96, !dbg !7161
  %cmp = icmp eq i32 %3, 0, !dbg !7161
  %. = select i1 %cmp, i32 0, i32 8192
  call void @llvm.dbg.value(metadata i32 %., metadata !7156, metadata !DIExpression()), !dbg !7157
  %call = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %first_bb, %struct.basic_block_def* %rec, i32 %.) #6, !dbg !7162
  %call3 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %second_bb) #6, !dbg !7163
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !7154, metadata !DIExpression()), !dbg !7157
  %call4 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call3) #6, !dbg !7164
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %rec, i64 0, i32 7, !dbg !7165
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7165
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7165
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !7165
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7165
  %call5 = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call4, %struct.rtx_def* %5) #6, !dbg !7166
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !7155, metadata !DIExpression()), !dbg !7157
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call5, i64 0, i32 1, !dbg !7167
  %arrayidx = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 1, !dbg !7167
  %rt_rtx = bitcast %struct.object_block** %arrayidx to %struct.rtx_def**, !dbg !7167
  store %struct.rtx_def* %call3, %struct.rtx_def** %rt_rtx, align 8, !dbg !7168
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call3, i64 0, i32 1, i32 0, i32 2, !dbg !7169
  %rt_int = bitcast i64* %arrayidx8 to i32*, !dbg !7169
  %6 = load i32, i32* %rt_int, align 8, !dbg !7170
  %inc = add nsw i32 %6, 1, !dbg !7170
  store i32 %inc, i32* %rt_int, align 8, !dbg !7170
  %flags9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %second_bb, i64 0, i32 13, !dbg !7171
  %7 = load i32, i32* %flags9, align 8, !dbg !7171
  %8 = load i32, i32* %flags1, align 8, !dbg !7173
  %9 = xor i32 %7, %8, !dbg !7174
  %10 = and i32 %9, 96, !dbg !7174
  %cmp13 = icmp eq i32 %10, 0, !dbg !7174
  br i1 %cmp13, label %if.end19, label %if.then14, !dbg !7175

if.then14:                                        ; preds = %entry
  %11 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !7176
  %tobool = icmp eq i32 %11, 0, !dbg !7176
  br i1 %tobool, label %if.end19, label %land.lhs.true, !dbg !7179

land.lhs.true:                                    ; preds = %if.then14
  %12 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !7180
  %tobool15 = icmp eq i8 %12, 0, !dbg !7181
  br i1 %tobool15, label %if.end19, label %if.then16, !dbg !7182

if.then16:                                        ; preds = %land.lhs.true
  tail call void @add_reg_note(%struct.rtx_def* %call5, i32 29, %struct.rtx_def* null) #6, !dbg !7183
  br label %if.end19, !dbg !7185

if.end19:                                         ; preds = %land.lhs.true, %if.then14, %entry, %if.then16
  %edge_flags.1 = phi i32 [ 8192, %if.then16 ], [ 8192, %land.lhs.true ], [ 8192, %if.then14 ], [ 0, %entry ], !dbg !7186
  call void @llvm.dbg.value(metadata i32 %edge_flags.1, metadata !7156, metadata !DIExpression()), !dbg !7157
  %call20 = tail call %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def* %rec, %struct.basic_block_def* %second_bb, i32 %edge_flags.1) #6, !dbg !7187
  ret void, !dbg !7188
}

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @block_label(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_single_succ_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sched_change_pattern(%struct.rtx_def* %insn, %struct.rtx_def* %new_pat) local_unnamed_addr #5 !dbg !7189 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7191, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_pat, metadata !7192, metadata !DIExpression()), !dbg !7194
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7195
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7195
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7195
  %call = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** nonnull %rt_rtx, %struct.rtx_def* %new_pat, i8 zeroext 0) #6, !dbg !7196
  call void @llvm.dbg.value(metadata i8 %call, metadata !7193, metadata !DIExpression()), !dbg !7194
  %tobool = icmp eq i8 %call, 0, !dbg !7197
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7197

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4794, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7197
  br label %cond.end, !dbg !7197

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @dfa_clear_single_insn_cache(%struct.rtx_def* %insn) #6, !dbg !7198
  ret void, !dbg !7199
}

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @dfa_clear_single_insn_cache(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @sched_speculate_insn(%struct.rtx_def* %insn, i32 %request, %struct.rtx_def** %new_pat) local_unnamed_addr #5 !dbg !7200 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7202, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.value(metadata i32 %request, metadata !7203, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.value(metadata %struct.rtx_def** %new_pat, metadata !7204, metadata !DIExpression()), !dbg !7205
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !7206
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 17, !dbg !7206
  %1 = load i32, i32* %flags, align 8, !dbg !7206
  %and = and i32 %1, 2, !dbg !7206
  %tobool = icmp ne i32 %and, 0, !dbg !7206
  %and1 = and i32 %request, 16777215, !dbg !7206
  %tobool2 = icmp ne i32 %and1, 0, !dbg !7206
  %or.cond = and i1 %tobool, %tobool2, !dbg !7206
  br i1 %or.cond, label %land.lhs.true3, label %cond.true, !dbg !7206

land.lhs.true3:                                   ; preds = %entry
  %call = tail call zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %insn, i32 %request) #6, !dbg !7206
  %tobool4 = icmp eq i8 %call, 0, !dbg !7206
  br i1 %tobool4, label %cond.true, label %cond.end, !dbg !7206

cond.true:                                        ; preds = %land.lhs.true3, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4820, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7206
  br label %cond.end, !dbg !7206

cond.end:                                         ; preds = %land.lhs.true3, %cond.true
  %2 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !7207
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %2, i64 0, i32 0, !dbg !7209
  %3 = load i32, i32* %mask, align 8, !dbg !7209
  %and5 = and i32 %3, %request, !dbg !7210
  %cmp = icmp eq i32 %and5, %request, !dbg !7211
  br i1 %cmp, label %if.end, label %return, !dbg !7212

if.end:                                           ; preds = %cond.end
  %and7 = and i32 %request, 16519104, !dbg !7213
  %tobool8 = icmp eq i32 %and7, 0, !dbg !7213
  %and10 = and i32 %request, 258111, !dbg !7215
  %tobool11 = icmp ne i32 %and10, 0, !dbg !7215
  %or.cond1 = or i1 %tobool8, %tobool11, !dbg !7216
  br i1 %or.cond1, label %if.end13, label %return, !dbg !7216

if.end13:                                         ; preds = %if.end
  %4 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 28), align 8, !dbg !7217
  %call14 = tail call i32 %4(%struct.rtx_def* %insn, i32 %request, %struct.rtx_def** %new_pat) #6, !dbg !7218
  br label %return, !dbg !7219

return:                                           ; preds = %cond.end, %if.end, %if.end13
  %retval.0 = phi i32 [ %call14, %if.end13 ], [ -1, %cond.end ], [ 0, %if.end ], !dbg !7205
  ret i32 %retval.0, !dbg !7220
}

declare dso_local zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @unlink_bb_notes(%struct.basic_block_def* %first, %struct.basic_block_def* %last) local_unnamed_addr #5 !dbg !7221 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first, metadata !7223, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last, metadata !7224, metadata !DIExpression()), !dbg !7230
  %cmp = icmp eq %struct.basic_block_def* %first, %last, !dbg !7231
  br i1 %cmp, label %do.end, label %if.end, !dbg !7233

if.end:                                           ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7234
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7234
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7234
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !7234
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !7234
  %conv = sext i32 %2 to i64, !dbg !7234
  %mul = shl nsw i64 %conv, 3, !dbg !7234
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !7234
  store i8* %call, i8** bitcast (%struct.rtx_def*** @bb_header to i8**), align 8, !dbg !7235
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %last, i64 0, i32 6, !dbg !7236
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !7236
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7238
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !7238
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !7238
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !7238
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7238
  %cmp3 = icmp eq %struct.basic_block_def* %3, %6, !dbg !7239
  br i1 %cmp3, label %if.end7, label %if.then5, !dbg !7240

if.then5:                                         ; preds = %if.end
  %7 = bitcast i8* %call to %struct.rtx_def**, !dbg !7240
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !7241
  %8 = load i32, i32* %index, align 8, !dbg !7241
  %idxprom = sext i32 %8 to i64, !dbg !7242
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom, !dbg !7242
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx, align 8, !dbg !7243
  br label %if.end7, !dbg !7242

if.end7:                                          ; preds = %if.end, %if.then5
  %next_bb8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first, i64 0, i32 6, !dbg !7244
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb8, align 8, !dbg !7244
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !7223, metadata !DIExpression()), !dbg !7230
  br label %do.body, !dbg !7245

do.body:                                          ; preds = %cleanup, %if.end7
  %last.addr.0 = phi %struct.basic_block_def* [ %last, %if.end7 ], [ %last.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.addr.0, metadata !7224, metadata !DIExpression()), !dbg !7230
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %last.addr.0, i64 0, i32 7, !dbg !7246
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7246
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7246
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 0, !dbg !7246
  %11 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7246
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !7227, metadata !DIExpression()), !dbg !7247
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !7248
  %bf.load = load i32, i32* %12, align 8, !dbg !7248
  %bf.clear = and i32 %bf.load, 65535, !dbg !7248
  %cmp9 = icmp eq i32 %bf.clear, 12, !dbg !7248
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !7250

if.then11:                                        ; preds = %do.body
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7251
  %rt_rtx = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !7251
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7251
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !7228, metadata !DIExpression()), !dbg !7247
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !7247
  %bf.load14.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !7252
  br label %if.end13, !dbg !7253

if.end13:                                         ; preds = %do.body, %if.then11
  %bf.load14 = phi i32 [ %bf.load14.pre, %if.then11 ], [ %bf.load, %do.body ], !dbg !7252
  %note.0 = phi %struct.rtx_def* [ %14, %if.then11 ], [ %11, %do.body ], !dbg !7254
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !7228, metadata !DIExpression()), !dbg !7247
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !7252
  %cmp16 = icmp eq i32 %bf.clear15, 13, !dbg !7252
  br i1 %cmp16, label %land.lhs.true, label %cond.true, !dbg !7252

land.lhs.true:                                    ; preds = %if.end13
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, !dbg !7252
  %15 = getelementptr inbounds %union.u, %union.u* %u18, i64 1, i32 0, i32 0, i64 0, !dbg !7252
  %rt_int = bitcast %union.rtunion_def* %15 to i32*, !dbg !7252
  %16 = load i32, i32* %rt_int, align 8, !dbg !7252
  %cmp21 = icmp eq i32 %16, 10, !dbg !7252
  br i1 %cmp21, label %cond.end, label %cond.true, !dbg !7252

cond.true:                                        ; preds = %land.lhs.true, %if.end13
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4897, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7252
  br label %cond.end, !dbg !7252

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7255
  %rt_rtx26 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !7255
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !7255
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !7225, metadata !DIExpression()), !dbg !7247
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7256
  %rt_rtx30 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !7256
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !7256
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !7229, metadata !DIExpression()), !dbg !7247
  %tobool = icmp ne %struct.rtx_def* %18, null, !dbg !7257
  %tobool32 = icmp ne %struct.rtx_def* %20, null, !dbg !7257
  %or.cond = and i1 %tobool, %tobool32, !dbg !7257
  br i1 %or.cond, label %cond.end35, label %cond.true33, !dbg !7257

cond.true33:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4901, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7257
  br label %cond.end35, !dbg !7257

cond.end35:                                       ; preds = %cond.end, %cond.true33
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7258
  %rt_rtx40 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !7258
  store %struct.rtx_def* %20, %struct.rtx_def** %rt_rtx40, align 8, !dbg !7259
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7260
  %rt_rtx44 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !7260
  store %struct.rtx_def* %18, %struct.rtx_def** %rt_rtx44, align 8, !dbg !7261
  %23 = load %struct.rtx_def**, %struct.rtx_def*** @bb_header, align 8, !dbg !7262
  %index45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %last.addr.0, i64 0, i32 9, !dbg !7263
  %24 = load i32, i32* %index45, align 8, !dbg !7263
  %idxprom46 = sext i32 %24 to i64, !dbg !7262
  %arrayidx47 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %23, i64 %idxprom46, !dbg !7262
  store %struct.rtx_def* %11, %struct.rtx_def** %arrayidx47, align 8, !dbg !7264
  %cmp48 = icmp eq %struct.basic_block_def* %last.addr.0, %9, !dbg !7265
  br i1 %cmp48, label %cleanup, label %if.end51, !dbg !7267

if.end51:                                         ; preds = %cond.end35
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %last.addr.0, i64 0, i32 5, !dbg !7268
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !7268
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %25, metadata !7224, metadata !DIExpression()), !dbg !7230
  br label %cleanup, !dbg !7269

cleanup:                                          ; preds = %cond.end35, %if.end51
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end51 ], [ false, %cond.end35 ]
  %last.addr.1 = phi %struct.basic_block_def* [ %25, %if.end51 ], [ %9, %cond.end35 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.addr.1, metadata !7224, metadata !DIExpression()), !dbg !7230
  br i1 %cleanup.dest.slot.0, label %do.body, label %do.end.loopexit

do.end.loopexit:                                  ; preds = %cleanup
  br label %do.end, !dbg !7270

do.end:                                           ; preds = %do.end.loopexit, %entry
  ret void, !dbg !7270
}

; Function Attrs: nounwind uwtable
define dso_local void @sched_scan(%struct.sched_scan_info_def* %ssi, %struct.VEC_basic_block_heap* %bbs, %struct.basic_block_def* %bb, %struct.VEC_rtx_heap* %insns, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7271 {
entry:
  %x = alloca %struct.basic_block_def*, align 8
  %x12 = alloca %struct.basic_block_def*, align 8
  %x33 = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.sched_scan_info_def* %ssi, metadata !7275, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %bbs, metadata !7276, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7277, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* %insns, metadata !7278, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7279, metadata !DIExpression()), !dbg !7294
  store %struct.sched_scan_info_def* %ssi, %struct.sched_scan_info_def** @sched_scan_info, align 8, !dbg !7295
  %cmp = icmp ne %struct.VEC_basic_block_heap* %bbs, null, !dbg !7296
  %cmp1 = icmp ne %struct.basic_block_def* %bb, null, !dbg !7297
  %or.cond = or i1 %cmp, %cmp1, !dbg !7298
  br i1 %or.cond, label %if.then, label %if.end8, !dbg !7298

if.then:                                          ; preds = %entry
  tail call fastcc void @extend_bb() #7, !dbg !7299
  %cmp2 = icmp eq %struct.VEC_basic_block_heap* %bbs, null, !dbg !7300
  br i1 %cmp2, label %if.end, label %if.then3, !dbg !7301

if.then3:                                         ; preds = %if.then
  %0 = bitcast %struct.basic_block_def** %x to i8*, !dbg !7302
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7302
  call void @llvm.dbg.value(metadata i32 0, metadata !7280, metadata !DIExpression()), !dbg !7303
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %bbs, i64 0, i32 0, !dbg !7304
  br label %for.cond, !dbg !7307

for.cond:                                         ; preds = %for.body, %if.then3
  %i.0 = phi i32 [ 0, %if.then3 ], [ %inc, %for.body ], !dbg !7308
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7280, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %x, metadata !7285, metadata !DIExpression(DW_OP_deref)), !dbg !7303
  %call = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* nonnull %base, i32 %i.0, %struct.basic_block_def** nonnull %x) #7, !dbg !7309
  %tobool4 = icmp eq i32 %call, 0, !dbg !7310
  br i1 %tobool4, label %for.end, label %for.body, !dbg !7310

for.body:                                         ; preds = %for.cond
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %x, align 8, !dbg !7311
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !7285, metadata !DIExpression()), !dbg !7303
  call fastcc void @init_bb(%struct.basic_block_def* %1) #7, !dbg !7312
  %inc = add i32 %i.0, 1, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7280, metadata !DIExpression()), !dbg !7303
  br label %for.cond, !dbg !7314, !llvm.loop !7315

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7317
  br label %if.end, !dbg !7318

if.end:                                           ; preds = %if.then, %for.end
  %cmp5 = icmp eq %struct.basic_block_def* %bb, null, !dbg !7319
  br i1 %cmp5, label %if.end8, label %if.then6, !dbg !7321

if.then6:                                         ; preds = %if.end
  call fastcc void @init_bb(%struct.basic_block_def* nonnull %bb) #7, !dbg !7322
  br label %if.end8, !dbg !7322

if.end8:                                          ; preds = %if.end, %if.then6, %entry
  call fastcc void @extend_insn() #7, !dbg !7323
  %cmp9 = icmp eq %struct.VEC_basic_block_heap* %bbs, null, !dbg !7324
  br i1 %cmp9, label %if.end26, label %if.then10, !dbg !7325

if.then10:                                        ; preds = %if.end8
  %2 = bitcast %struct.basic_block_def** %x12 to i8*, !dbg !7326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7326
  call void @llvm.dbg.value(metadata i32 0, metadata !7286, metadata !DIExpression()), !dbg !7327
  %base16 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %bbs, i64 0, i32 0, !dbg !7328
  br label %for.cond13, !dbg !7331

for.cond13:                                       ; preds = %for.body22, %if.then10
  %i11.0 = phi i32 [ 0, %if.then10 ], [ %inc24, %for.body22 ], !dbg !7332
  call void @llvm.dbg.value(metadata i32 %i11.0, metadata !7286, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %x12, metadata !7289, metadata !DIExpression(DW_OP_deref)), !dbg !7327
  %call20 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* nonnull %base16, i32 %i11.0, %struct.basic_block_def** nonnull %x12) #7, !dbg !7333
  %tobool21 = icmp eq i32 %call20, 0, !dbg !7334
  br i1 %tobool21, label %for.end25, label %for.body22, !dbg !7334

for.body22:                                       ; preds = %for.cond13
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x12, align 8, !dbg !7335
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !7289, metadata !DIExpression()), !dbg !7327
  call fastcc void @init_insns_in_bb(%struct.basic_block_def* %3) #7, !dbg !7336
  %inc24 = add i32 %i11.0, 1, !dbg !7337
  call void @llvm.dbg.value(metadata i32 %inc24, metadata !7286, metadata !DIExpression()), !dbg !7327
  br label %for.cond13, !dbg !7338, !llvm.loop !7339

for.end25:                                        ; preds = %for.cond13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7341
  br label %if.end26, !dbg !7342

if.end26:                                         ; preds = %if.end8, %for.end25
  %cmp27 = icmp eq %struct.basic_block_def* %bb, null, !dbg !7343
  br i1 %cmp27, label %if.end29, label %if.then28, !dbg !7345

if.then28:                                        ; preds = %if.end26
  call fastcc void @init_insns_in_bb(%struct.basic_block_def* nonnull %bb) #7, !dbg !7346
  br label %if.end29, !dbg !7346

if.end29:                                         ; preds = %if.end26, %if.then28
  %cmp30 = icmp eq %struct.VEC_rtx_heap* %insns, null, !dbg !7347
  br i1 %cmp30, label %if.end47, label %if.then31, !dbg !7348

if.then31:                                        ; preds = %if.end29
  %4 = bitcast %struct.rtx_def** %x33 to i8*, !dbg !7349
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7349
  call void @llvm.dbg.value(metadata i32 0, metadata !7290, metadata !DIExpression()), !dbg !7350
  %base37 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %insns, i64 0, i32 0, !dbg !7351
  br label %for.cond34, !dbg !7354

for.cond34:                                       ; preds = %for.body43, %if.then31
  %i32.0 = phi i32 [ 0, %if.then31 ], [ %inc45, %for.body43 ], !dbg !7355
  call void @llvm.dbg.value(metadata i32 %i32.0, metadata !7290, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x33, metadata !7293, metadata !DIExpression(DW_OP_deref)), !dbg !7350
  %call41 = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* nonnull %base37, i32 %i32.0, %struct.rtx_def** nonnull %x33) #7, !dbg !7356
  %tobool42 = icmp eq i32 %call41, 0, !dbg !7357
  br i1 %tobool42, label %for.end46, label %for.body43, !dbg !7357

for.body43:                                       ; preds = %for.cond34
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x33, align 8, !dbg !7358
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7293, metadata !DIExpression()), !dbg !7350
  call fastcc void @init_insn(%struct.rtx_def* %5) #7, !dbg !7359
  %inc45 = add i32 %i32.0, 1, !dbg !7360
  call void @llvm.dbg.value(metadata i32 %inc45, metadata !7290, metadata !DIExpression()), !dbg !7350
  br label %for.cond34, !dbg !7361, !llvm.loop !7362

for.end46:                                        ; preds = %for.cond34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7364
  br label %if.end47, !dbg !7365

if.end47:                                         ; preds = %if.end29, %for.end46
  %cmp48 = icmp eq %struct.rtx_def* %insn, null, !dbg !7366
  br i1 %cmp48, label %if.end50, label %if.then49, !dbg !7368

if.then49:                                        ; preds = %if.end47
  call fastcc void @init_insn(%struct.rtx_def* nonnull %insn) #7, !dbg !7369
  br label %if.end50, !dbg !7369

if.end50:                                         ; preds = %if.end47, %if.then49
  ret void, !dbg !7370
}

; Function Attrs: nounwind uwtable
define internal fastcc void @extend_bb() unnamed_addr #5 !dbg !7371 {
entry:
  %0 = load %struct.sched_scan_info_def*, %struct.sched_scan_info_def** @sched_scan_info, align 8, !dbg !7372
  %extend_bb = getelementptr inbounds %struct.sched_scan_info_def, %struct.sched_scan_info_def* %0, i64 0, i32 0, !dbg !7374
  %1 = load void ()*, void ()** %extend_bb, align 8, !dbg !7374
  %tobool = icmp eq void ()* %1, null, !dbg !7372
  br i1 %tobool, label %if.end, label %if.then, !dbg !7375

if.then:                                          ; preds = %entry
  tail call void %1() #6, !dbg !7376
  br label %if.end, !dbg !7376

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7377
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def** %ptr) unnamed_addr #0 !dbg !7378 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !7384, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7385, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %ptr, metadata !7386, metadata !DIExpression()), !dbg !7387
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !7388
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7388

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !7388
  %0 = load i32, i32* %num, align 8, !dbg !7388
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7388
  br i1 %cmp, label %if.then, label %if.else, !dbg !7390

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7391
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7391
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !7391
  br label %return, !dbg !7391

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7393

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.basic_block_def* [ null, %if.else ], [ %1, %if.then ], !dbg !7395
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7395
  store %struct.basic_block_def* %storemerge, %struct.basic_block_def** %ptr, align 8, !dbg !7395
  ret i32 %retval.0, !dbg !7390
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7396 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7398, metadata !DIExpression()), !dbg !7399
  %0 = load %struct.sched_scan_info_def*, %struct.sched_scan_info_def** @sched_scan_info, align 8, !dbg !7400
  %init_bb = getelementptr inbounds %struct.sched_scan_info_def, %struct.sched_scan_info_def* %0, i64 0, i32 1, !dbg !7402
  %1 = load void (%struct.basic_block_def*)*, void (%struct.basic_block_def*)** %init_bb, align 8, !dbg !7402
  %tobool = icmp eq void (%struct.basic_block_def*)* %1, null, !dbg !7400
  br i1 %tobool, label %if.end, label %if.then, !dbg !7403

if.then:                                          ; preds = %entry
  tail call void %1(%struct.basic_block_def* %bb) #6, !dbg !7404
  br label %if.end, !dbg !7404

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7405
}

; Function Attrs: nounwind uwtable
define internal fastcc void @extend_insn() unnamed_addr #5 !dbg !7406 {
entry:
  %0 = load %struct.sched_scan_info_def*, %struct.sched_scan_info_def** @sched_scan_info, align 8, !dbg !7407
  %extend_insn = getelementptr inbounds %struct.sched_scan_info_def, %struct.sched_scan_info_def* %0, i64 0, i32 2, !dbg !7409
  %1 = load void ()*, void ()** %extend_insn, align 8, !dbg !7409
  %tobool = icmp eq void ()* %1, null, !dbg !7407
  br i1 %tobool, label %if.end, label %if.then, !dbg !7410

if.then:                                          ; preds = %entry
  tail call void %1() #6, !dbg !7411
  br label %if.end, !dbg !7411

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7412
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_insns_in_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7413 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7415, metadata !DIExpression()), !dbg !7417
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7418
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7418
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7418
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !7418
  br label %for.cond, !dbg !7418

for.cond:                                         ; preds = %for.body, %entry
  %insn.0.in = phi %struct.rtx_def** [ %head_, %entry ], [ %rt_rtx6, %for.body ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7416, metadata !DIExpression()), !dbg !7417
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7421
  br i1 %tobool, label %for.end, label %land.rhs, !dbg !7421

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7421
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !7421
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7421
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7421
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !7421
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7421
  %cmp = icmp eq %struct.rtx_def* %insn.0, %4, !dbg !7421
  br i1 %cmp, label %for.end, label %for.body, !dbg !7418

for.body:                                         ; preds = %land.rhs
  tail call fastcc void @init_insn(%struct.rtx_def* nonnull %insn.0) #7, !dbg !7423
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7421
  %rt_rtx6 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !7421
  br label %for.cond, !dbg !7421, !llvm.loop !7424

for.end:                                          ; preds = %land.rhs, %for.cond
  ret void, !dbg !7426
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %vec_, i32 %ix_, %struct.rtx_def** %ptr) unnamed_addr #0 !dbg !7427 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !7433, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7434, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ptr, metadata !7435, metadata !DIExpression()), !dbg !7436
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !7437
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7437

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !7437
  %0 = load i32, i32* %num, align 8, !dbg !7437
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7437
  br i1 %cmp, label %if.then, label %if.else, !dbg !7439

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7440
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7440
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !7440
  br label %return, !dbg !7440

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7442

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.rtx_def* [ null, %if.else ], [ %1, %if.then ], !dbg !7444
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7444
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %ptr, align 8, !dbg !7444
  ret i32 %retval.0, !dbg !7439
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_insn(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !7445 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7447, metadata !DIExpression()), !dbg !7448
  %0 = load %struct.sched_scan_info_def*, %struct.sched_scan_info_def** @sched_scan_info, align 8, !dbg !7449
  %init_insn = getelementptr inbounds %struct.sched_scan_info_def, %struct.sched_scan_info_def* %0, i64 0, i32 3, !dbg !7451
  %1 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %init_insn, align 8, !dbg !7451
  %tobool = icmp eq void (%struct.rtx_def*)* %1, null, !dbg !7449
  br i1 %tobool, label %if.end, label %if.then, !dbg !7452

if.then:                                          ; preds = %entry
  tail call void %1(%struct.rtx_def* %insn) #6, !dbg !7453
  br label %if.end, !dbg !7453

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7454
}

; Function Attrs: nounwind uwtable
define internal void @luids_extend_insn() #5 !dbg !7455 {
entry:
  %call = tail call i32 @get_max_uid() #6, !dbg !7458
  %add = add nsw i32 %call, 1, !dbg !7459
  call void @llvm.dbg.value(metadata i32 %add, metadata !7457, metadata !DIExpression()), !dbg !7460
  tail call fastcc void @VEC_int_heap_safe_grow_cleared(%struct.VEC_int_heap** nonnull @sched_luids, i32 %add) #7, !dbg !7461
  ret void, !dbg !7462
}

; Function Attrs: nounwind uwtable
define internal void @luids_init_insn(%struct.rtx_def* %insn) #5 !dbg !7463 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7465, metadata !DIExpression()), !dbg !7468
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7469
  %bf.load = load i32, i32* %0, align 8, !dbg !7469
  %bf.clear = and i32 %bf.load, 65535, !dbg !7469
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !7469
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !7469

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !7469
  br i1 %cmp3, label %cond.end, label %lor.lhs.false4, !dbg !7469

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !7469
  br i1 %cmp7, label %cond.end, label %lor.lhs.false8, !dbg !7469

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !7469
  br i1 %cmp11, label %cond.end, label %cond.false, !dbg !7469

cond.false:                                       ; preds = %lor.lhs.false8
  %1 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !7470
  %luid_for_non_insn = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %1, i64 0, i32 3, !dbg !7471
  %2 = load i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)** %luid_for_non_insn, align 8, !dbg !7471
  %call = tail call i32 %2(%struct.rtx_def* %insn) #6, !dbg !7470
  br label %cond.end, !dbg !7469

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false4, %lor.lhs.false8, %cond.false
  %cond = phi i32 [ %call, %cond.false ], [ 1, %lor.lhs.false8 ], [ 1, %lor.lhs.false4 ], [ 1, %lor.lhs.false ], [ 1, %entry ], !dbg !7469
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7466, metadata !DIExpression()), !dbg !7468
  %cmp12 = icmp sgt i32 %cond, -1, !dbg !7472
  br i1 %cmp12, label %if.then, label %if.end, !dbg !7474

if.then:                                          ; preds = %cond.end
  %3 = load i32, i32* @sched_max_luid, align 4, !dbg !7475
  call void @llvm.dbg.value(metadata i32 %3, metadata !7467, metadata !DIExpression()), !dbg !7468
  %add = add nsw i32 %3, %cond, !dbg !7477
  store i32 %add, i32* @sched_max_luid, align 4, !dbg !7477
  br label %if.end, !dbg !7478

if.end:                                           ; preds = %cond.end, %if.then
  %luid.0 = phi i32 [ %3, %if.then ], [ -1, %cond.end ], !dbg !7479
  call void @llvm.dbg.value(metadata i32 %luid.0, metadata !7467, metadata !DIExpression()), !dbg !7468
  %4 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7480
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %4, i64 0, i32 0, !dbg !7480
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7480
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7480
  %5 = load i32, i32* %rt_int, align 8, !dbg !7480
  %call17 = tail call fastcc i32 @VEC_int_base_replace(%struct.VEC_int_base* %base, i32 %5, i32 %luid.0) #7, !dbg !7480
  ret void, !dbg !7481
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !7482 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** @sched_luids, metadata !7487, metadata !DIExpression()), !dbg !7488
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7489
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !7489
  br i1 %tobool, label %if.end, label %if.then, !dbg !7491

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !7491
  tail call void @free(i8* nonnull %1) #6, !dbg !7489
  br label %if.end, !dbg !7489

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7491
  ret void, !dbg !7491
}

; Function Attrs: nounwind uwtable
define dso_local i32 @insn_luid(%struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !7492 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7494, metadata !DIExpression()), !dbg !7495
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7496
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !7496
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7496
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7496
  %1 = load i32, i32* %rt_int, align 8, !dbg !7496
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %1) #7, !dbg !7496
  ret i32 %call, !dbg !7497
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7498 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7504, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7505, metadata !DIExpression()), !dbg !7506
  br label %land.end, !dbg !7507

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7507
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7507
  %0 = load i32, i32* %arrayidx, align 4, !dbg !7507
  ret i32 %0, !dbg !7507
}

; Function Attrs: nounwind uwtable
define internal void @extend_h_i_d() #5 !dbg !7508 {
entry:
  %call = tail call i32 @get_max_uid() #6, !dbg !7511
  %add = add nsw i32 %call, 1, !dbg !7512
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7513
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !7513
  %call1 = tail call fastcc i32 @VEC_haifa_insn_data_def_base_length(%struct.VEC_haifa_insn_data_def_base* %base) #7, !dbg !7513
  %sub = sub i32 %add, %call1, !dbg !7514
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7510, metadata !DIExpression()), !dbg !7515
  %cmp = icmp sgt i32 %sub, 0, !dbg !7516
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7518

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7519
  %base4 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !7519
  %call8 = tail call fastcc i32 @VEC_haifa_insn_data_def_base_space(%struct.VEC_haifa_insn_data_def_base* %base4, i32 %sub) #7, !dbg !7519
  %tobool9 = icmp eq i32 %call8, 0, !dbg !7519
  br i1 %tobool9, label %if.then, label %if.end, !dbg !7520

if.then:                                          ; preds = %land.lhs.true
  %call10 = tail call i32 @get_max_uid() #6, !dbg !7521
  %mul = mul nsw i32 %call10, 3, !dbg !7521
  %div = sdiv i32 %mul, 2, !dbg !7521
  tail call fastcc void @VEC_haifa_insn_data_def_heap_safe_grow_cleared(%struct.VEC_haifa_insn_data_def_heap** nonnull @h_i_d, i32 %div) #7, !dbg !7521
  tail call void @sched_extend_target() #7, !dbg !7523
  br label %if.end, !dbg !7524

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  ret void, !dbg !7525
}

; Function Attrs: nounwind uwtable
define internal void @init_h_i_d(%struct.rtx_def* %insn) #5 !dbg !7526 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7528, metadata !DIExpression()), !dbg !7529
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7530
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !7530
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7530
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7530
  %1 = load i32, i32* %rt_int, align 8, !dbg !7530
  %call = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %1) #7, !dbg !7530
  %cmp = icmp sgt i32 %call, 0, !dbg !7532
  br i1 %cmp, label %if.then, label %if.end, !dbg !7533

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7534
  %base3 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %2, i64 0, i32 0, !dbg !7534
  %3 = load i32, i32* %rt_int, align 8, !dbg !7534
  %call11 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base3, i32 %3) #7, !dbg !7534
  %cost = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call11, i64 0, i32 5, !dbg !7534
  store i16 -1, i16* %cost, align 4, !dbg !7536
  %4 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7537
  %base14 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %4, i64 0, i32 0, !dbg !7537
  %5 = load i32, i32* %rt_int, align 8, !dbg !7537
  %call22 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base14, i32 %5) #7, !dbg !7537
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call22, i64 0, i32 4, !dbg !7537
  store i32 -2, i32* %queue_index, align 8, !dbg !7538
  %6 = load i32, i32* @max_insn_queue_index, align 4, !dbg !7539
  %7 = xor i32 %6, -1, !dbg !7539
  %8 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7540
  %base25 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %8, i64 0, i32 0, !dbg !7540
  %9 = load i32, i32* %rt_int, align 8, !dbg !7540
  %call33 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base25, i32 %9) #7, !dbg !7540
  %tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call33, i64 0, i32 2, !dbg !7540
  store i32 %7, i32* %tick, align 8, !dbg !7541
  %10 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7542
  %base38 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %10, i64 0, i32 0, !dbg !7542
  %11 = load i32, i32* %rt_int, align 8, !dbg !7542
  %call46 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base38, i32 %11) #7, !dbg !7542
  %inter_tick = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call46, i64 0, i32 3, !dbg !7542
  store i32 %7, i32* %inter_tick, align 4, !dbg !7543
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7544
  %base49 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %12, i64 0, i32 0, !dbg !7544
  %13 = load i32, i32* %rt_int, align 8, !dbg !7544
  %call57 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base49, i32 %13) #7, !dbg !7544
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call57, i64 0, i32 8, !dbg !7544
  store i32 134217728, i32* %todo_spec, align 8, !dbg !7545
  br label %if.end, !dbg !7546

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_haifa_insn_data_def_base_iterate(%struct.VEC_haifa_insn_data_def_base* %vec_, i32 %ix_, %struct._haifa_insn_data** %ptr) unnamed_addr #0 !dbg !7548 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !7553, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7554, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata %struct._haifa_insn_data** %ptr, metadata !7555, metadata !DIExpression()), !dbg !7556
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_base* %vec_, null, !dbg !7557
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7557

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 0, !dbg !7557
  %0 = load i32, i32* %num, align 8, !dbg !7557
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7557
  br i1 %cmp, label %if.then, label %if.else, !dbg !7559

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7560
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7560
  br label %return, !dbg !7560

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7562

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct._haifa_insn_data* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !7564
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7564
  store %struct._haifa_insn_data* %storemerge, %struct._haifa_insn_data** %ptr, align 8, !dbg !7564
  ret i32 %retval.0, !dbg !7559
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_haifa_insn_data_def_heap_free(%struct.VEC_haifa_insn_data_def_heap** %vec_) unnamed_addr #0 !dbg !7565 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_heap** @h_i_d, metadata !7570, metadata !DIExpression()), !dbg !7571
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7572
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_heap* %0, null, !dbg !7572
  br i1 %tobool, label %if.end, label %if.then, !dbg !7574

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_haifa_insn_data_def_heap* %0 to i8*, !dbg !7574
  tail call void @free(i8* nonnull %1) #6, !dbg !7572
  br label %if.end, !dbg !7572

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_haifa_insn_data_def_heap* null, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7574
  ret void, !dbg !7574
}

declare dso_local %struct.edge_def* @split_block(%struct.basic_block_def*, i8*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @sched_emit_insn(%struct.rtx_def* %pat) local_unnamed_addr #5 !dbg !7575 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !7579, metadata !DIExpression()), !dbg !7581
  %0 = load %struct.rtx_def*, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !7582
  %call = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %pat, %struct.rtx_def* %0) #6, !dbg !7583
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7580, metadata !DIExpression()), !dbg !7581
  store %struct.rtx_def* %call, %struct.rtx_def** @last_scheduled_insn, align 8, !dbg !7584
  tail call fastcc void @haifa_init_insn(%struct.rtx_def* %call) #7, !dbg !7585
  ret %struct.rtx_def* %call, !dbg !7586
}

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @haifa_init_insn(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !7587 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7589, metadata !DIExpression()), !dbg !7590
  %cmp = icmp eq %struct.rtx_def* %insn, null, !dbg !7591
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7591

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5495, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7591
  br label %cond.end, !dbg !7591

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @sched_init_luids(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* %insn) #7, !dbg !7592
  tail call void @sched_extend_target() #7, !dbg !7593
  tail call void @sched_deps_init(i8 zeroext 0) #6, !dbg !7594
  tail call void @haifa_init_h_i_d(%struct.VEC_basic_block_heap* null, %struct.basic_block_def* null, %struct.VEC_rtx_heap* null, %struct.rtx_def* %insn) #7, !dbg !7595
  %0 = load i8, i8* @adding_bb_to_current_region_p, align 1, !dbg !7596
  %tobool = icmp eq i8 %0, 0, !dbg !7596
  br i1 %tobool, label %if.end, label %if.then, !dbg !7598

if.then:                                          ; preds = %cond.end
  tail call void @sd_init_insn(%struct.rtx_def* %insn) #6, !dbg !7599
  tail call void @extend_dependency_caches(i32 1, i8 zeroext 0) #6, !dbg !7601
  br label %if.end, !dbg !7602

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !7603
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @may_trap_exp(%struct.rtx_def* %x, i32 %is_store) unnamed_addr #5 !dbg !7604 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7608, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata i32 %is_store, metadata !7609, metadata !DIExpression()), !dbg !7629
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !7630
  br i1 %cmp, label %cleanup148, label %if.end, !dbg !7632

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7633
  %bf.load = load i32, i32* %0, align 8, !dbg !7633
  %bf.clear = and i32 %bf.load, 65535, !dbg !7633
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7610, metadata !DIExpression()), !dbg !7629
  %tobool = icmp eq i32 %is_store, 0, !dbg !7634
  %cmp2 = icmp eq i32 %bf.clear, 43, !dbg !7629
  br i1 %tobool, label %if.end5, label %if.then1, !dbg !7636

if.then1:                                         ; preds = %if.end
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !7637

land.lhs.true:                                    ; preds = %if.then1
  %call = tail call i32 @may_trap_p(%struct.rtx_def* nonnull %x) #6, !dbg !7640
  %tobool3 = icmp eq i32 %call, 0, !dbg !7640
  br i1 %tobool3, label %if.else, label %cleanup148, !dbg !7641

if.else:                                          ; preds = %land.lhs.true, %if.then1
  br label %cleanup148, !dbg !7642

if.end5:                                          ; preds = %if.end
  br i1 %cmp2, label %if.then7, label %if.else72, !dbg !7643

if.then7:                                         ; preds = %if.end5
  %bf.clear9 = and i32 %bf.load, 134217728, !dbg !7644
  %tobool10 = icmp eq i32 %bf.clear9, 0, !dbg !7644
  br i1 %tobool10, label %if.end12, label %cleanup148, !dbg !7647

if.end12:                                         ; preds = %if.then7
  %call13 = tail call i32 @may_trap_p(%struct.rtx_def* nonnull %x) #6, !dbg !7648
  %tobool14 = icmp eq i32 %call13, 0, !dbg !7648
  br i1 %tobool14, label %cleanup148, label %if.end16, !dbg !7650

if.end16:                                         ; preds = %if.end12
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7651
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !7651
  %2 = load i32*, i32** %1, align 8, !dbg !7651
  %bf.load17 = load i32, i32* %2, align 8, !dbg !7651
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !7651
  %cmp19 = icmp eq i32 %bf.clear18, 37, !dbg !7651
  br i1 %cmp19, label %cleanup148, label %lor.lhs.false, !dbg !7651

lor.lhs.false:                                    ; preds = %if.end16
  %cmp26 = icmp eq i32 %bf.clear18, 49, !dbg !7651
  br i1 %cmp26, label %land.lhs.true43, label %lor.lhs.false27, !dbg !7651

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %cmp34 = icmp eq i32 %bf.clear18, 50, !dbg !7651
  br i1 %cmp34, label %land.lhs.true43, label %lor.lhs.false35, !dbg !7651

lor.lhs.false35:                                  ; preds = %lor.lhs.false27
  %cmp42 = icmp eq i32 %bf.clear18, 122, !dbg !7651
  br i1 %cmp42, label %land.lhs.true43, label %if.end71, !dbg !7651

land.lhs.true43:                                  ; preds = %lor.lhs.false35, %lor.lhs.false27, %lor.lhs.false
  %arrayidx50 = getelementptr inbounds i32, i32* %2, i64 2, !dbg !7651
  %3 = bitcast i32* %arrayidx50 to i32**, !dbg !7651
  %4 = load i32*, i32** %3, align 8, !dbg !7651
  %bf.load52 = load i32, i32* %4, align 8, !dbg !7651
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !7651
  %idxprom = zext i32 %bf.clear53 to i64, !dbg !7651
  %arrayidx54 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7651
  %5 = load i32, i32* %arrayidx54, align 4, !dbg !7651
  %cmp55 = icmp eq i32 %5, 9, !dbg !7651
  br i1 %cmp55, label %cleanup148, label %lor.lhs.false56, !dbg !7651

lor.lhs.false56:                                  ; preds = %land.lhs.true43
  %6 = getelementptr inbounds i32, i32* %2, i64 4, !dbg !7651
  %7 = bitcast i32* %6 to i32**, !dbg !7651
  %8 = load i32*, i32** %7, align 8, !dbg !7651
  %bf.load65 = load i32, i32* %8, align 8, !dbg !7651
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !7651
  %idxprom67 = zext i32 %bf.clear66 to i64, !dbg !7651
  %arrayidx68 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom67, !dbg !7651
  %9 = load i32, i32* %arrayidx68, align 4, !dbg !7651
  %cmp69 = icmp eq i32 %9, 9, !dbg !7651
  br i1 %cmp69, label %cleanup148, label %if.end71, !dbg !7653

if.end71:                                         ; preds = %lor.lhs.false56, %lor.lhs.false35
  br label %cleanup148, !dbg !7654

if.else72:                                        ; preds = %if.end5
  call void @llvm.dbg.value(metadata i32 0, metadata !7615, metadata !DIExpression()), !dbg !7655
  %call73 = tail call i32 @may_trap_p(%struct.rtx_def* nonnull %x) #6, !dbg !7656
  %tobool74 = icmp eq i32 %call73, 0, !dbg !7656
  br i1 %tobool74, label %if.end76, label %cleanup148, !dbg !7658

if.end76:                                         ; preds = %if.else72
  %idxprom77 = zext i32 %bf.clear to i64, !dbg !7659
  %arrayidx78 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom77, !dbg !7659
  %10 = load i8*, i8** %arrayidx78, align 8, !dbg !7659
  call void @llvm.dbg.value(metadata i8* %10, metadata !7611, metadata !DIExpression()), !dbg !7655
  %arrayidx80 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom77, !dbg !7660
  %11 = load i8, i8* %arrayidx80, align 1, !dbg !7660
  call void @llvm.dbg.value(metadata i8 %11, metadata !7614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7655
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !7661
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !7661
  %12 = zext i8 %11 to i64, !dbg !7662
  br label %for.cond, !dbg !7662

for.cond:                                         ; preds = %for.inc143, %if.end76
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc143 ], [ %12, %if.end76 ]
  %insn_class.0 = phi i32 [ %insn_class.4, %for.inc143 ], [ 0, %if.end76 ], !dbg !7655
  %indvars.iv.next4 = add nsw i64 %indvars.iv3, -1, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %insn_class.0, metadata !7615, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.value(metadata i32 undef, metadata !7614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7655
  %cmp81 = icmp sgt i64 %indvars.iv3, 0, !dbg !7664
  br i1 %cmp81, label %for.body, label %cleanup148.loopexit, !dbg !7665

for.body:                                         ; preds = %for.cond
  %arrayidx84 = getelementptr inbounds i8, i8* %10, i64 %indvars.iv.next4, !dbg !7666
  %13 = load i8, i8* %arrayidx84, align 1, !dbg !7666
  %cmp86 = icmp eq i8 %13, 101, !dbg !7667
  br i1 %cmp86, label %if.then88, label %if.else97, !dbg !7668

if.then88:                                        ; preds = %for.body
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 %indvars.iv.next4, !dbg !7669
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !7669
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !7669
  %call94 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %14, i32 0) #7, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %call94, metadata !7616, metadata !DIExpression()), !dbg !7671
  %cmp95 = icmp sgt i32 %insn_class.0, %call94, !dbg !7672
  %insn_class.0.call94 = select i1 %cmp95, i32 %insn_class.0, i32 %call94, !dbg !7672
  call void @llvm.dbg.value(metadata i32 %insn_class.0.call94, metadata !7615, metadata !DIExpression()), !dbg !7655
  br label %if.end135, !dbg !7673

if.else97:                                        ; preds = %for.body
  %cmp101 = icmp eq i8 %13, 69, !dbg !7674
  br i1 %cmp101, label %for.cond104.preheader, label %if.end135, !dbg !7675

for.cond104.preheader:                            ; preds = %if.else97
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 %indvars.iv.next4, !dbg !7676
  %rt_rtvec117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtvec_def**, !dbg !7676
  br label %for.cond104, !dbg !7677

for.cond104:                                      ; preds = %for.cond104.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond104.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !7655
  %insn_class.1 = phi i32 [ %insn_class.0, %for.cond104.preheader ], [ %insn_class.1.call120, %for.inc ], !dbg !7655
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7622, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %insn_class.1, metadata !7615, metadata !DIExpression()), !dbg !7655
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec117, align 8, !dbg !7679
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 0, !dbg !7679
  %16 = load i32, i32* %num_elem, align 8, !dbg !7679
  %17 = sext i32 %16 to i64, !dbg !7680
  %cmp109 = icmp slt i64 %indvars.iv, %17, !dbg !7680
  br i1 %cmp109, label %for.body111, label %if.end135.loopexit, !dbg !7677

for.body111:                                      ; preds = %for.cond104
  %arrayidx119 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i64 0, i32 1, i64 %indvars.iv, !dbg !7676
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx119, align 8, !dbg !7676
  %call120 = tail call fastcc i32 @may_trap_exp(%struct.rtx_def* %18, i32 0) #7, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %call120, metadata !7625, metadata !DIExpression()), !dbg !7661
  %cmp121 = icmp sgt i32 %insn_class.1, %call120, !dbg !7682
  %insn_class.1.call120 = select i1 %cmp121, i32 %insn_class.1, i32 %call120, !dbg !7682
  call void @llvm.dbg.value(metadata i32 %insn_class.1.call120, metadata !7615, metadata !DIExpression()), !dbg !7655
  %19 = and i32 %insn_class.1.call120, -2, !dbg !7683
  %switch1 = icmp eq i32 %19, 4, !dbg !7683
  br i1 %switch1, label %if.end135.loopexit, label %for.inc

for.inc:                                          ; preds = %for.body111
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7685
  call void @llvm.dbg.value(metadata i32 undef, metadata !7622, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7678
  br label %for.cond104, !dbg !7686, !llvm.loop !7687

if.end135.loopexit:                               ; preds = %for.cond104, %for.body111
  %insn_class.4.ph = phi i32 [ %insn_class.1, %for.cond104 ], [ %insn_class.1.call120, %for.body111 ]
  br label %if.end135, !dbg !7689

if.end135:                                        ; preds = %if.end135.loopexit, %if.else97, %if.then88
  %insn_class.4 = phi i32 [ %insn_class.0.call94, %if.then88 ], [ %insn_class.0, %if.else97 ], [ %insn_class.4.ph, %if.end135.loopexit ], !dbg !7691
  call void @llvm.dbg.value(metadata i32 %insn_class.4, metadata !7615, metadata !DIExpression()), !dbg !7655
  %20 = and i32 %insn_class.4, -2, !dbg !7689
  %switch2 = icmp eq i32 %20, 4, !dbg !7689
  br i1 %switch2, label %cleanup148.loopexit, label %for.inc143, !dbg !7689

for.inc143:                                       ; preds = %if.end135
  call void @llvm.dbg.value(metadata i32 undef, metadata !7614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7655
  br label %for.cond, !dbg !7692, !llvm.loop !7693

cleanup148.loopexit:                              ; preds = %for.cond, %if.end135
  %retval.1.ph = phi i32 [ %insn_class.4, %if.end135 ], [ %insn_class.0, %for.cond ]
  br label %cleanup148, !dbg !7695

cleanup148:                                       ; preds = %cleanup148.loopexit, %land.lhs.true, %if.end12, %if.then7, %if.else72, %if.end16, %land.lhs.true43, %lor.lhs.false56, %entry, %if.end71, %if.else
  %retval.1 = phi i32 [ 0, %if.else ], [ 3, %if.end71 ], [ 0, %entry ], [ 5, %land.lhs.true ], [ 4, %if.then7 ], [ 1, %if.end12 ], [ 2, %lor.lhs.false56 ], [ 2, %land.lhs.true43 ], [ 2, %if.end16 ], [ 5, %if.else72 ], [ %retval.1.ph, %cleanup148.loopexit ], !dbg !7629
  ret i32 %retval.1, !dbg !7695
}

declare dso_local i32 @may_trap_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @dying_use_p(%struct.reg_use_data* %use) unnamed_addr #5 !dbg !7696 {
entry:
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %use, metadata !7700, metadata !DIExpression()), !dbg !7702
  br label %for.cond, !dbg !7703

for.cond:                                         ; preds = %for.inc, %entry
  %use.pn = phi %struct.reg_use_data* [ %use, %entry ], [ %next.0, %for.inc ]
  %next.0.in = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.pn, i64 0, i32 2, !dbg !7705
  %next.0 = load %struct.reg_use_data*, %struct.reg_use_data** %next.0.in, align 8, !dbg !7705
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %next.0, metadata !7701, metadata !DIExpression()), !dbg !7702
  %cmp = icmp eq %struct.reg_use_data* %next.0, %use, !dbg !7706
  br i1 %cmp, label %cleanup, label %for.body, !dbg !7708

for.body:                                         ; preds = %for.cond
  %insn = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %next.0, i64 0, i32 1, !dbg !7709
  %0 = bitcast %struct.rtx_def** %insn to i32**, !dbg !7709
  %1 = load i32*, i32** %0, align 8, !dbg !7709
  %bf.load = load i32, i32* %1, align 8, !dbg !7709
  %bf.clear = and i32 %bf.load, 65535, !dbg !7709
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !7709
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !7709

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !7709
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !7709

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp10 = icmp eq i32 %bf.clear, 9, !dbg !7709
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false11, !dbg !7709

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %cmp15 = icmp eq i32 %bf.clear, 10, !dbg !7709
  br i1 %cmp15, label %land.lhs.true, label %for.inc, !dbg !7709

land.lhs.true:                                    ; preds = %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false, %for.body
  %cmp19 = icmp eq i32 %bf.clear, 7, !dbg !7709
  br i1 %cmp19, label %for.inc, label %land.lhs.true20, !dbg !7711

land.lhs.true20:                                  ; preds = %land.lhs.true
  %2 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !7712
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %2, i64 0, i32 0, !dbg !7712
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 2, !dbg !7712
  %3 = load i32, i32* %arrayidx, align 8, !dbg !7712
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %3) #7, !dbg !7712
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 4, !dbg !7712
  %4 = load i32, i32* %queue_index, align 8, !dbg !7712
  %cmp22 = icmp eq i32 %4, -3, !dbg !7713
  br i1 %cmp22, label %for.inc, label %cleanup, !dbg !7714

for.inc:                                          ; preds = %land.lhs.true20, %lor.lhs.false11, %land.lhs.true
  br label %for.cond, !dbg !7715, !llvm.loop !7716

cleanup:                                          ; preds = %land.lhs.true20, %for.cond
  %retval.0 = phi i8 [ 0, %land.lhs.true20 ], [ 1, %for.cond ], !dbg !7702
  ret i8 %retval.0, !dbg !7718
}

declare dso_local %struct._dep* @sd_find_dep_between(%struct.rtx_def*, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @dep_list_size(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !7719 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7721, metadata !DIExpression()), !dbg !7726
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !7727
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7727
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !7728
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7728
  call void @llvm.dbg.value(metadata i32 0, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 0, metadata !7725, metadata !DIExpression()), !dbg !7726
  %2 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !7729
  %tobool = icmp eq i32 %2, 0, !dbg !7729
  br i1 %tobool, label %if.then, label %if.end, !dbg !7731

if.then:                                          ; preds = %entry
  %call = tail call i32 @sd_lists_size(%struct.rtx_def* %insn, i32 4) #6, !dbg !7732
  br label %cleanup, !dbg !7733

if.end:                                           ; preds = %entry
  %3 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !7734
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !7734
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 4) #7, !dbg !7734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 32, i1 false), !dbg !7734
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !7734
  br label %for.cond, !dbg !7734

for.cond:                                         ; preds = %for.inc, %if.end
  %nodbgcount.0 = phi i32 [ 0, %if.end ], [ %nodbgcount.2, %for.inc ], !dbg !7736
  %dbgcount.0 = phi i32 [ 0, %if.end ], [ %dbgcount.1, %for.inc ], !dbg !7726
  call void @llvm.dbg.value(metadata i32 %dbgcount.0, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %nodbgcount.0, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7722, metadata !DIExpression(DW_OP_deref)), !dbg !7726
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !7723, metadata !DIExpression(DW_OP_deref)), !dbg !7726
  %call1 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !7737
  %tobool2 = icmp eq i8 %call1, 0, !dbg !7734
  br i1 %tobool2, label %for.end, label %for.body, !dbg !7734

for.body:                                         ; preds = %for.cond
  %4 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7739
  call void @llvm.dbg.value(metadata %struct._dep* %4, metadata !7723, metadata !DIExpression()), !dbg !7726
  %con = getelementptr inbounds %struct._dep, %struct._dep* %4, i64 0, i32 1, !dbg !7739
  %5 = bitcast %struct.rtx_def** %con to i32**, !dbg !7739
  %6 = load i32*, i32** %5, align 8, !dbg !7739
  %bf.load = load i32, i32* %6, align 8, !dbg !7739
  %bf.clear = and i32 %bf.load, 65535, !dbg !7739
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7739
  br i1 %cmp, label %if.then3, label %if.else, !dbg !7742

if.then3:                                         ; preds = %for.body
  %inc = add nsw i32 %dbgcount.0, 1, !dbg !7743
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7724, metadata !DIExpression()), !dbg !7726
  br label %for.inc, !dbg !7744

if.else:                                          ; preds = %for.body
  %7 = bitcast %struct._dep* %4 to i32**, !dbg !7742
  %8 = load i32*, i32** %7, align 8, !dbg !7745
  %bf.load4 = load i32, i32* %8, align 8, !dbg !7745
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !7745
  %cmp6 = icmp ne i32 %bf.clear5, 7, !dbg !7745
  %inc8 = zext i1 %cmp6 to i32, !dbg !7747
  %spec.select = add nsw i32 %nodbgcount.0, %inc8, !dbg !7747
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7725, metadata !DIExpression()), !dbg !7726
  br label %for.inc

for.inc:                                          ; preds = %if.then3, %if.else
  %nodbgcount.2 = phi i32 [ %nodbgcount.0, %if.then3 ], [ %spec.select, %if.else ], !dbg !7736
  %dbgcount.1 = phi i32 [ %inc, %if.then3 ], [ %dbgcount.0, %if.else ], !dbg !7726
  call void @llvm.dbg.value(metadata i32 %dbgcount.1, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %nodbgcount.2, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !7722, metadata !DIExpression(DW_OP_deref)), !dbg !7726
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !7737
  br label %for.cond, !dbg !7737, !llvm.loop !7748

for.end:                                          ; preds = %for.cond
  %nodbgcount.0.lcssa = phi i32 [ %nodbgcount.0, %for.cond ], !dbg !7736
  %dbgcount.0.lcssa = phi i32 [ %dbgcount.0, %for.cond ], !dbg !7726
  call void @llvm.dbg.value(metadata i32 %nodbgcount.0.lcssa, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %dbgcount.0.lcssa, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %nodbgcount.0.lcssa, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %dbgcount.0.lcssa, metadata !7724, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %nodbgcount.0.lcssa, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i32 %dbgcount.0.lcssa, metadata !7724, metadata !DIExpression()), !dbg !7726
  %add = add nsw i32 %dbgcount.0.lcssa, %nodbgcount.0.lcssa, !dbg !7750
  %call11 = call i32 @sd_lists_size(%struct.rtx_def* %insn, i32 4) #6, !dbg !7750
  %cmp12 = icmp eq i32 %add, %call11, !dbg !7750
  br i1 %cmp12, label %cleanup, label %cond.true, !dbg !7750

cond.true:                                        ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 997, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7750
  br label %cleanup, !dbg !7750

cleanup:                                          ; preds = %cond.true, %for.end, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %nodbgcount.0.lcssa, %for.end ], [ %nodbgcount.0.lcssa, %cond.true ], !dbg !7726
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7751
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7751
  ret i32 %retval.0, !dbg !7751
}

declare dso_local i32 @sd_lists_size(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_ref_regs(%struct.rtx_def* %x) unnamed_addr #5 !dbg !7752 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7754, metadata !DIExpression()), !dbg !7761
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7762
  %bf.load = load i32, i32* %0, align 8, !dbg !7762
  %bf.clear = and i32 %bf.load, 65535, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7758, metadata !DIExpression()), !dbg !7761
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !7763
  br i1 %cmp, label %if.then, label %if.end14, !dbg !7765

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %call, metadata !7757, metadata !DIExpression()), !dbg !7761
  %cmp3 = icmp sgt i32 %call, 52, !dbg !7768
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !7770

if.then4:                                         ; preds = %if.then
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @region_ref_regs, align 8, !dbg !7771
  %call5 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !7772
  %call6 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 %call5) #6, !dbg !7773
  br label %cleanup.cont, !dbg !7773

if.else:                                          ; preds = %if.then
  %idxprom = sext i32 %call to i64, !dbg !7774
  %bf.load7 = load i32, i32* %0, align 8, !dbg !7776
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !7776
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !7776
  %idxprom9 = zext i32 %bf.clear8 to i64, !dbg !7774
  %arrayidx10 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom9, !dbg !7774
  %2 = load i8, i8* %arrayidx10, align 1, !dbg !7774
  %conv = zext i8 %2 to i32, !dbg !7774
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7761
  br label %for.cond, !dbg !7777

for.cond:                                         ; preds = %for.body, %if.else
  %i.0.in = phi i32 [ %conv, %if.else ], [ %i.0, %for.body ]
  %i.0 = add nsw i32 %i.0.in, -1, !dbg !7778
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7755, metadata !DIExpression()), !dbg !7761
  %cmp11 = icmp sgt i32 %i.0.in, 0, !dbg !7779
  br i1 %cmp11, label %for.body, label %cleanup.cont.loopexit, !dbg !7781

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @region_ref_regs, align 8, !dbg !7782
  %add = add nsw i32 %call, %i.0, !dbg !7783
  %call13 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %add) #6, !dbg !7784
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7761
  br label %for.cond, !dbg !7785, !llvm.loop !7786

if.end14:                                         ; preds = %entry
  %idxprom15 = zext i32 %bf.clear to i64, !dbg !7788
  %arrayidx16 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom15, !dbg !7788
  %4 = load i8*, i8** %arrayidx16, align 8, !dbg !7788
  call void @llvm.dbg.value(metadata i8* %4, metadata !7760, metadata !DIExpression()), !dbg !7761
  %arrayidx18 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom15, !dbg !7789
  %5 = load i8, i8* %arrayidx18, align 1, !dbg !7789
  call void @llvm.dbg.value(metadata i8 %5, metadata !7755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7761
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !7791
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !7791
  %6 = zext i8 %5 to i64, !dbg !7798
  br label %for.cond21, !dbg !7798

for.cond21:                                       ; preds = %for.inc59, %if.end14
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc59 ], [ %6, %if.end14 ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !7799
  call void @llvm.dbg.value(metadata i32 undef, metadata !7755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7761
  %cmp22 = icmp sgt i64 %indvars.iv2, 0, !dbg !7800
  br i1 %cmp22, label %for.body24, label %cleanup.cont.loopexit1, !dbg !7801

for.body24:                                       ; preds = %for.cond21
  %arrayidx26 = getelementptr inbounds i8, i8* %4, i64 %indvars.iv.next3, !dbg !7802
  %7 = load i8, i8* %arrayidx26, align 1, !dbg !7802
  %cmp28 = icmp eq i8 %7, 101, !dbg !7803
  br i1 %cmp28, label %if.then30, label %if.else33, !dbg !7804

if.then30:                                        ; preds = %for.body24
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 %indvars.iv.next3, !dbg !7805
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !7805
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7805
  tail call fastcc void @setup_ref_regs(%struct.rtx_def* %8) #7, !dbg !7806
  br label %for.inc59, !dbg !7806

if.else33:                                        ; preds = %for.body24
  %cmp37 = icmp eq i8 %7, 69, !dbg !7807
  br i1 %cmp37, label %for.cond40.preheader, label %for.inc59, !dbg !7808

for.cond40.preheader:                             ; preds = %if.else33
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 %indvars.iv.next3, !dbg !7791
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtvec_def**, !dbg !7791
  br label %for.cond40, !dbg !7809

for.cond40:                                       ; preds = %for.cond40.preheader, %for.body47
  %indvars.iv = phi i64 [ 0, %for.cond40.preheader ], [ %indvars.iv.next, %for.body47 ], !dbg !7810
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7756, metadata !DIExpression()), !dbg !7761
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7811
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 0, !dbg !7811
  %10 = load i32, i32* %num_elem, align 8, !dbg !7811
  %11 = sext i32 %10 to i64, !dbg !7812
  %cmp45 = icmp slt i64 %indvars.iv, %11, !dbg !7812
  br i1 %cmp45, label %for.body47, label %for.inc59.loopexit, !dbg !7809

for.body47:                                       ; preds = %for.cond40
  %arrayidx54 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv, !dbg !7813
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8, !dbg !7813
  tail call fastcc void @setup_ref_regs(%struct.rtx_def* %12) #7, !dbg !7814
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7815
  call void @llvm.dbg.value(metadata i32 undef, metadata !7756, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7761
  br label %for.cond40, !dbg !7816, !llvm.loop !7817

for.inc59.loopexit:                               ; preds = %for.cond40
  br label %for.inc59, !dbg !7819

for.inc59:                                        ; preds = %for.inc59.loopexit, %if.then30, %if.else33
  call void @llvm.dbg.value(metadata i32 undef, metadata !7755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7761
  br label %for.cond21, !dbg !7819, !llvm.loop !7820

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !7822

cleanup.cont.loopexit1:                           ; preds = %for.cond21
  br label %cleanup.cont, !dbg !7822

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit1, %cleanup.cont.loopexit, %if.then4
  ret void, !dbg !7822
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initiate_reg_pressure_info(%struct.bitmap_head_def* %live) unnamed_addr #5 !dbg !7823 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !7827, metadata !DIExpression()), !dbg !7838
  %0 = bitcast i32* %j to i8*, !dbg !7839
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7839
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7840
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7840
  call void @llvm.dbg.value(metadata i32 0, metadata !7828, metadata !DIExpression()), !dbg !7838
  %2 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !7841
  %3 = sext i32 %2 to i64, !dbg !7844
  br label %for.cond, !dbg !7844

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !7845
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7828, metadata !DIExpression()), !dbg !7838
  %cmp = icmp slt i64 %indvars.iv, %3, !dbg !7846
  br i1 %cmp, label %for.body, label %for.end, !dbg !7847

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !7848
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7848
  %idxprom1 = zext i32 %4 to i64, !dbg !7849
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom1, !dbg !7849
  store i32 0, i32* %arrayidx2, align 4, !dbg !7850
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7851
  call void @llvm.dbg.value(metadata i32 undef, metadata !7828, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7838
  br label %for.cond, !dbg !7852, !llvm.loop !7853

for.end:                                          ; preds = %for.cond
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !7855
  tail call void @bitmap_clear(%struct.bitmap_head_def* %5) #6, !dbg !7856
  call void @llvm.dbg.value(metadata i32* %j, metadata !7829, metadata !DIExpression(DW_OP_deref)), !dbg !7838
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7830, metadata !DIExpression(DW_OP_deref)), !dbg !7838
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %live, i32 0, i32* nonnull %j) #7, !dbg !7857
  br label %for.cond3, !dbg !7857

for.cond3:                                        ; preds = %for.inc8, %for.end
  call void @llvm.dbg.value(metadata i32* %j, metadata !7829, metadata !DIExpression(DW_OP_deref)), !dbg !7838
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7830, metadata !DIExpression(DW_OP_deref)), !dbg !7838
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !7859
  %tobool = icmp eq i8 %call, 0, !dbg !7857
  br i1 %tobool, label %for.end9, label %for.body4, !dbg !7857

for.body4:                                        ; preds = %for.cond3
  %6 = load i32, i32* @current_nr_blocks, align 4, !dbg !7861
  %cmp5 = icmp eq i32 %6, 1, !dbg !7863
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !7864

lor.lhs.false:                                    ; preds = %for.body4
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @region_ref_regs, align 8, !dbg !7865
  %8 = load i32, i32* %j, align 4, !dbg !7866
  call void @llvm.dbg.value(metadata i32 %8, metadata !7829, metadata !DIExpression()), !dbg !7838
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !7867
  %tobool7 = icmp eq i32 %call6, 0, !dbg !7867
  br i1 %tobool7, label %for.inc8, label %if.then, !dbg !7868

if.then:                                          ; preds = %lor.lhs.false, %for.body4
  %9 = load i32, i32* %j, align 4, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %9, metadata !7829, metadata !DIExpression()), !dbg !7838
  call fastcc void @mark_regno_birth_or_death(i32 %9, i8 zeroext 1) #7, !dbg !7870
  br label %for.inc8, !dbg !7870

for.inc8:                                         ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.value(metadata i32* %j, metadata !7829, metadata !DIExpression(DW_OP_deref)), !dbg !7838
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7830, metadata !DIExpression(DW_OP_deref)), !dbg !7838
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !7859
  br label %for.cond3, !dbg !7859, !llvm.loop !7871

for.end9:                                         ; preds = %for.cond3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7873
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7873
  ret void, !dbg !7873
}

declare dso_local %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7874 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7878, metadata !DIExpression()), !dbg !7881
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !7882
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7882
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7883
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7883
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7884
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7884
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7884
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !7884
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7884
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7884
  store i32 %4, i32* %3, align 8, !dbg !7884
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7884
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7884
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7884
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7884
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7886
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7886
  br label %for.cond, !dbg !7884

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !7888
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7888
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7879, metadata !DIExpression(DW_OP_deref)), !dbg !7881
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !7888
  %tobool = icmp eq i8 %call1, 0, !dbg !7884
  br i1 %tobool, label %cleanup, label %for.body, !dbg !7884

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7889
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !7879, metadata !DIExpression()), !dbg !7881
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !7892
  %12 = load i32, i32* %flags, align 8, !dbg !7892
  %and = and i32 %12, 8, !dbg !7893
  %tobool2 = icmp eq i32 %and, 0, !dbg !7893
  br i1 %tobool2, label %for.inc, label %cleanup, !dbg !7894

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7880, metadata !DIExpression(DW_OP_deref)), !dbg !7881
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7888
  br label %for.cond, !dbg !7888, !llvm.loop !7895

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !7881
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7897
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7897
  ret i8 %retval.0, !dbg !7897
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_regno_birth_or_death(i32 %regno, i8 zeroext %birth_p) unnamed_addr #5 !dbg !7898 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7902, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i8 %birth_p, metadata !7903, metadata !DIExpression()), !dbg !7905
  %0 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !7906
  %idxprom = sext i32 %regno to i64, !dbg !7906
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !7906
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %1, metadata !7904, metadata !DIExpression()), !dbg !7905
  %cmp = icmp sgt i32 %regno, 52, !dbg !7907
  %cmp1 = icmp ne i32 %1, 0, !dbg !7909
  br i1 %cmp, label %if.then, label %if.else25, !dbg !7910

if.then:                                          ; preds = %entry
  br i1 %cmp1, label %if.then2, label %if.end40, !dbg !7911

if.then2:                                         ; preds = %if.then
  %tobool = icmp eq i8 %birth_p, 0, !dbg !7913
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !7917
  br i1 %tobool, label %if.else, label %if.then3, !dbg !7918

if.then3:                                         ; preds = %if.then2
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %regno) #6, !dbg !7919
  %idxprom4 = zext i32 %1 to i64, !dbg !7921
  %3 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7922
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idxprom, !dbg !7922
  %4 = bitcast %struct.rtx_def** %arrayidx7 to i32**, !dbg !7922
  %5 = load i32*, i32** %4, align 8, !dbg !7922
  %bf.load = load i32, i32* %5, align 8, !dbg !7922
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7922
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7922
  %idxprom8 = zext i32 %bf.clear to i64, !dbg !7921
  %arrayidx9 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom4, i64 %idxprom8, !dbg !7921
  %6 = load i32, i32* %arrayidx9, align 4, !dbg !7921
  %arrayidx11 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom4, !dbg !7923
  %7 = load i32, i32* %arrayidx11, align 4, !dbg !7924
  %add = add nsw i32 %7, %6, !dbg !7924
  store i32 %add, i32* %arrayidx11, align 4, !dbg !7924
  br label %if.end40, !dbg !7925

if.else:                                          ; preds = %if.then2
  %call12 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %2, i32 %regno) #6, !dbg !7926
  %idxprom13 = zext i32 %1 to i64, !dbg !7928
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7929
  %arrayidx16 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom, !dbg !7929
  %9 = bitcast %struct.rtx_def** %arrayidx16 to i32**, !dbg !7929
  %10 = load i32*, i32** %9, align 8, !dbg !7929
  %bf.load17 = load i32, i32* %10, align 8, !dbg !7929
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !7929
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !7929
  %idxprom20 = zext i32 %bf.clear19 to i64, !dbg !7928
  %arrayidx21 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom13, i64 %idxprom20, !dbg !7928
  %11 = load i32, i32* %arrayidx21, align 4, !dbg !7928
  %arrayidx23 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom13, !dbg !7930
  %12 = load i32, i32* %arrayidx23, align 4, !dbg !7931
  %sub = sub nsw i32 %12, %11, !dbg !7931
  store i32 %sub, i32* %arrayidx23, align 4, !dbg !7931
  br label %if.end40

if.else25:                                        ; preds = %entry
  br i1 %cmp1, label %land.lhs.true, label %if.end40, !dbg !7932

land.lhs.true:                                    ; preds = %if.else25
  %13 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !7934
  %sh_prom = zext i32 %regno to i64, !dbg !7934
  %shl = shl i64 1, %sh_prom, !dbg !7934
  %and = and i64 %13, %shl, !dbg !7934
  %tobool27 = icmp eq i64 %and, 0, !dbg !7934
  br i1 %tobool27, label %if.then28, label %if.end40, !dbg !7935

if.then28:                                        ; preds = %land.lhs.true
  %tobool29 = icmp eq i8 %birth_p, 0, !dbg !7936
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !7939
  br i1 %tobool29, label %if.else34, label %if.then30, !dbg !7940

if.then30:                                        ; preds = %if.then28
  %call31 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %14, i32 %regno) #6, !dbg !7941
  %idxprom32 = zext i32 %1 to i64, !dbg !7943
  %arrayidx33 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom32, !dbg !7943
  %15 = load i32, i32* %arrayidx33, align 4, !dbg !7944
  %inc = add nsw i32 %15, 1, !dbg !7944
  store i32 %inc, i32* %arrayidx33, align 4, !dbg !7944
  br label %if.end40, !dbg !7945

if.else34:                                        ; preds = %if.then28
  %call35 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %14, i32 %regno) #6, !dbg !7946
  %idxprom36 = zext i32 %1 to i64, !dbg !7948
  %arrayidx37 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom36, !dbg !7948
  %16 = load i32, i32* %arrayidx37, align 4, !dbg !7949
  %dec = add nsw i32 %16, -1, !dbg !7949
  store i32 %dec, i32* %arrayidx37, align 4, !dbg !7949
  br label %if.end40

if.end40:                                         ; preds = %land.lhs.true, %if.else25, %if.else34, %if.then30, %if.then, %if.else, %if.then3
  ret void, !dbg !7950
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !7951 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7955, metadata !DIExpression()), !dbg !7956
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7957
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7957
  %0 = load i32, i32* %rt_uint, align 8, !dbg !7957
  ret i32 %0, !dbg !7958
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !7959 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7968, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !7969, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 0, metadata !7970, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !7971, metadata !DIExpression()), !dbg !7972
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !7973
  %1 = load i64, i64* %0, align 8, !dbg !7973
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !7974
  store i64 %1, i64* %2, align 8, !dbg !7974
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !7975
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !7976
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !7977
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !7980
  br label %while.body, !dbg !7980

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !7981
  br i1 %tobool, label %if.then, label %if.end, !dbg !7982

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !7983
  br label %while.end, !dbg !7985

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !7986

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !7980, !llvm.loop !7987

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !7989

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !7989
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !7991
  %7 = load i32, i32* %indx9, align 8, !dbg !7991
  %cmp11 = icmp eq i32 %7, 0, !dbg !7992
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !7993

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !7994
  %8 = load i32, i32* %indx14, align 8, !dbg !7994
  %mul = shl i32 %8, 7, !dbg !7995
  call void @llvm.dbg.value(metadata i32 %mul, metadata !7970, metadata !DIExpression()), !dbg !7972
  br label %if.end15, !dbg !7996

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !7970, metadata !DIExpression()), !dbg !7972
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !7997
  store i32 0, i32* %word_no, align 8, !dbg !7998
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !7999
  %9 = load i64, i64* %arrayidx, align 8, !dbg !7999
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8000
  store i64 %9, i64* %bits21, align 8, !dbg !8001
  %tobool23 = icmp eq i64 %9, 0, !dbg !8002
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !8002
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !8003
  call void @llvm.dbg.value(metadata i32 %add, metadata !7970, metadata !DIExpression()), !dbg !7972
  store i32 %add, i32* %bit_no, align 4, !dbg !8004
  ret void, !dbg !8005
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !8006 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8010, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !8011, metadata !DIExpression()), !dbg !8015
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8016
  %0 = load i64, i64* %bits, align 8, !dbg !8016
  %tobool = icmp eq i64 %0, 0, !dbg !8017
  br i1 %tobool, label %if.end, label %next_bit, !dbg !8018

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !8019
  br label %next_bit, !dbg !8022

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !8012), !dbg !8023
  br label %while.cond, !dbg !8022

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !8024
  %and = and i64 %2, 1, !dbg !8025
  %tobool2 = icmp eq i64 %and, 0, !dbg !8026
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !8022

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !8027
  store i64 %shr, i64* %bits, align 8, !dbg !8027
  %3 = load i32, i32* %bit_no, align 4, !dbg !8029
  %add = add i32 %3, 1, !dbg !8029
  store i32 %add, i32* %bit_no, align 4, !dbg !8029
  %.pre = load i64, i64* %bits, align 8, !dbg !8024
  br label %while.cond, !dbg !8022, !llvm.loop !8030

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !8032
  %sub = add i32 %4, 63, !dbg !8033
  %div = and i32 %sub, -64, !dbg !8034
  store i32 %div, i32* %bit_no, align 4, !dbg !8035
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !8036
  %5 = load i32, i32* %word_no, align 8, !dbg !8037
  %inc = add i32 %5, 1, !dbg !8037
  store i32 %inc, i32* %word_no, align 8, !dbg !8037
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !8038
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !8038
  br label %while.body6, !dbg !8039

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !8040

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !8041
  %cmp = icmp eq i32 %8, 2, !dbg !8042
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !8038
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !8040

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !8019
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !8019
  %10 = load i64, i64* %arrayidx, align 8, !dbg !8019
  store i64 %10, i64* %bits, align 8, !dbg !8043
  %tobool14 = icmp eq i64 %10, 0, !dbg !8044
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !8046

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !8047
  %add17 = add i32 %11, 64, !dbg !8047
  store i32 %add17, i32* %bit_no, align 4, !dbg !8047
  %12 = load i32, i32* %word_no, align 8, !dbg !8048
  %inc19 = add i32 %12, 1, !dbg !8048
  store i32 %inc19, i32* %word_no, align 8, !dbg !8048
  br label %while.cond7, !dbg !8040, !llvm.loop !8049

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !8038
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !8051
  %14 = load i64, i64* %13, align 8, !dbg !8051
  store i64 %14, i64* %6, align 8, !dbg !8052
  %tobool24 = icmp eq i64 %14, 0, !dbg !8053
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !8055

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !8055
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !8056
  %16 = load i32, i32* %indx, align 8, !dbg !8056
  %mul28 = shl i32 %16, 7, !dbg !8057
  store i32 %mul28, i32* %bit_no, align 4, !dbg !8058
  store i32 0, i32* %word_no, align 8, !dbg !8059
  br label %while.body6, !dbg !8039, !llvm.loop !8060

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !8062

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !8062

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !8015
  ret i8 %retval.0, !dbg !8062
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !8063 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !8068, metadata !DIExpression()), !dbg !8069
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8070
  %0 = load i64, i64* %bits, align 8, !dbg !8071
  %shr = lshr i64 %0, 1, !dbg !8071
  store i64 %shr, i64* %bits, align 8, !dbg !8071
  %1 = load i32, i32* %bit_no, align 4, !dbg !8072
  %add = add i32 %1, 1, !dbg !8072
  store i32 %add, i32* %bit_no, align 4, !dbg !8072
  ret void, !dbg !8073
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @save_reg_pressure() unnamed_addr #5 !dbg !8074 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !8076, metadata !DIExpression()), !dbg !8077
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8078
  %1 = sext i32 %0 to i64, !dbg !8081
  br label %for.cond, !dbg !8081

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !8082
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8076, metadata !DIExpression()), !dbg !8077
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !8083
  br i1 %cmp, label %for.body, label %for.end, !dbg !8084

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !8085
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8085
  %idxprom1 = zext i32 %2 to i64, !dbg !8086
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom1, !dbg !8086
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !8086
  %arrayidx6 = getelementptr inbounds [27 x i32], [27 x i32]* @saved_reg_pressure, i64 0, i64 %idxprom1, !dbg !8087
  store i32 %3, i32* %arrayidx6, align 4, !dbg !8088
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8089
  call void @llvm.dbg.value(metadata i32 undef, metadata !8076, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8077
  br label %for.cond, !dbg !8090, !llvm.loop !8091

for.end:                                          ; preds = %for.cond
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @saved_reg_live, align 8, !dbg !8093
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !8094
  tail call void @bitmap_copy(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5) #6, !dbg !8095
  ret void, !dbg !8096
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_register_pressure(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !8097 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8099, metadata !DIExpression()), !dbg !8102
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8103
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !8103
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8103
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8103
  %1 = load i32, i32* %rt_int, align 8, !dbg !8103
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !8103
  %reg_use_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 15, !dbg !8103
  br label %for.cond, !dbg !8105

for.cond:                                         ; preds = %for.inc, %entry
  %use.0.in = phi %struct.reg_use_data** [ %reg_use_list, %entry ], [ %next_insn_use, %for.inc ]
  %use.0 = load %struct.reg_use_data*, %struct.reg_use_data** %use.0.in, align 8, !dbg !8106
  call void @llvm.dbg.value(metadata %struct.reg_use_data* %use.0, metadata !8100, metadata !DIExpression()), !dbg !8102
  %cmp = icmp eq %struct.reg_use_data* %use.0, null, !dbg !8107
  br i1 %cmp, label %for.end, label %for.body, !dbg !8109

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc zeroext i8 @dying_use_p(%struct.reg_use_data* nonnull %use.0) #7, !dbg !8110
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8110
  br i1 %tobool2, label %for.inc, label %land.lhs.true, !dbg !8112

land.lhs.true:                                    ; preds = %for.body
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !8113
  %regno = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.0, i64 0, i32 0, !dbg !8114
  %3 = load i32, i32* %regno, align 8, !dbg !8114
  %call3 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !8115
  %tobool4 = icmp eq i32 %call3, 0, !dbg !8115
  br i1 %tobool4, label %for.inc, label %if.then, !dbg !8116

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %regno, align 8, !dbg !8117
  tail call fastcc void @mark_regno_birth_or_death(i32 %4, i8 zeroext 0) #7, !dbg !8118
  br label %for.inc, !dbg !8118

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %next_insn_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %use.0, i64 0, i32 3, !dbg !8119
  br label %for.cond, !dbg !8120, !llvm.loop !8121

for.end:                                          ; preds = %for.cond
  %5 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8123
  %base8 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %5, i64 0, i32 0, !dbg !8123
  %6 = load i32, i32* %rt_int, align 8, !dbg !8123
  %call16 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base8, i32 %6) #7, !dbg !8123
  %reg_set_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call16, i64 0, i32 16, !dbg !8123
  br label %for.cond17, !dbg !8125

for.cond17:                                       ; preds = %for.body20, %for.end
  %set.0.in = phi %struct.reg_set_data** [ %reg_set_list, %for.end ], [ %next_insn_set, %for.body20 ]
  %set.0 = load %struct.reg_set_data*, %struct.reg_set_data** %set.0.in, align 8, !dbg !8126
  call void @llvm.dbg.value(metadata %struct.reg_set_data* %set.0, metadata !8101, metadata !DIExpression()), !dbg !8102
  %cmp18 = icmp eq %struct.reg_set_data* %set.0, null, !dbg !8127
  br i1 %cmp18, label %for.end23, label %for.body20, !dbg !8129

for.body20:                                       ; preds = %for.cond17
  %regno21 = getelementptr inbounds %struct.reg_set_data, %struct.reg_set_data* %set.0, i64 0, i32 0, !dbg !8130
  %7 = load i32, i32* %regno21, align 8, !dbg !8130
  tail call fastcc void @mark_regno_birth_or_death(i32 %7, i8 zeroext 1) #7, !dbg !8131
  %next_insn_set = getelementptr inbounds %struct.reg_set_data, %struct.reg_set_data* %set.0, i64 0, i32 2, !dbg !8132
  br label %for.cond17, !dbg !8133, !llvm.loop !8134

for.end23:                                        ; preds = %for.cond17
  ret void, !dbg !8136
}

; Function Attrs: nounwind uwtable
define internal fastcc void @restore_reg_pressure() unnamed_addr #5 !dbg !8137 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !8139, metadata !DIExpression()), !dbg !8140
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8141
  %1 = sext i32 %0 to i64, !dbg !8144
  br label %for.cond, !dbg !8144

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !8145
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8139, metadata !DIExpression()), !dbg !8140
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !8146
  br i1 %cmp, label %for.body, label %for.end, !dbg !8147

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !8148
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8148
  %idxprom1 = zext i32 %2 to i64, !dbg !8149
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @saved_reg_pressure, i64 0, i64 %idxprom1, !dbg !8149
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !8149
  %arrayidx6 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom1, !dbg !8150
  store i32 %3, i32* %arrayidx6, align 4, !dbg !8151
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8152
  call void @llvm.dbg.value(metadata i32 undef, metadata !8139, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8140
  br label %for.cond, !dbg !8153, !llvm.loop !8154

for.end:                                          ; preds = %for.cond
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @curr_reg_live, align 8, !dbg !8156
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @saved_reg_live, align 8, !dbg !8157
  tail call void @bitmap_copy(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5) #6, !dbg !8158
  ret void, !dbg !8159
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fix_jump_move(%struct.rtx_def* %jump) unnamed_addr #5 !dbg !8160 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !8162, metadata !DIExpression()), !dbg !8166
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8167
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !8167
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8167
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 1, !dbg !8167
  %rt_bb = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !8167
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8167
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !8163, metadata !DIExpression()), !dbg !8166
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 1, !dbg !8168
  %rt_bb7 = bitcast %struct.object_block** %arrayidx6 to %struct.basic_block_def**, !dbg !8168
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb7, align 8, !dbg !8168
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !8164, metadata !DIExpression()), !dbg !8166
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 6, !dbg !8169
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !8169
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !8165, metadata !DIExpression()), !dbg !8166
  %5 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !8170
  %sched_pass_id = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %5, i64 0, i32 4, !dbg !8170
  %6 = load i32, i32* %sched_pass_id, align 8, !dbg !8170
  %cmp = icmp eq i32 %6, 2, !dbg !8170
  br i1 %cmp, label %cond.end27, label %lor.lhs.false, !dbg !8170

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8170
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %7, i64 0, i32 0, !dbg !8170
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8170
  %rt_int = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !8170
  %8 = load i32, i32* %rt_int, align 8, !dbg !8170
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %8) #7, !dbg !8170
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 11, !dbg !8170
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !8170
  %cmp11 = icmp eq %struct.basic_block_def* %9, null, !dbg !8170
  br i1 %cmp11, label %cond.true25, label %land.lhs.true, !dbg !8170

land.lhs.true:                                    ; preds = %lor.lhs.false
  %10 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8170
  %base14 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %10, i64 0, i32 0, !dbg !8170
  %11 = load i32, i32* %rt_int, align 8, !dbg !8170
  %call22 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base14, i32 %11) #7, !dbg !8170
  %recovery_block23 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call22, i64 0, i32 11, !dbg !8170
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block23, align 8, !dbg !8170
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8170
  %cfg = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !8170
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8170
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 1, !dbg !8170
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8170
  %cmp24 = icmp eq %struct.basic_block_def* %12, %15, !dbg !8170
  br i1 %cmp24, label %cond.true25, label %cond.end27, !dbg !8170

cond.true25:                                      ; preds = %land.lhs.true, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4969, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8170
  br label %cond.end27, !dbg !8170

cond.end27:                                       ; preds = %land.lhs.true, %entry, %cond.true25
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 7, !dbg !8171
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8171
  %16 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8171
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %16, i64 0, i32 1, !dbg !8171
  %17 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !8171
  %18 = load i32*, i32** %17, align 8, !dbg !8171
  %bf.load = load i32, i32* %18, align 8, !dbg !8171
  %bf.clear = and i32 %bf.load, 65535, !dbg !8171
  %cmp29 = icmp eq i32 %bf.clear, 13, !dbg !8171
  %19 = ptrtoint i32* %18 to i64, !dbg !8171
  br i1 %cmp29, label %land.lhs.true30, label %if.then, !dbg !8171

land.lhs.true30:                                  ; preds = %cond.end27
  %20 = getelementptr inbounds i32, i32* %18, i64 12, !dbg !8171
  %21 = load i32, i32* %20, align 8, !dbg !8171
  %cmp38 = icmp eq i32 %21, 10, !dbg !8171
  br i1 %cmp38, label %if.end, label %if.then, !dbg !8173

if.then:                                          ; preds = %land.lhs.true30, %cond.end27
  %il42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 7, !dbg !8174
  %rtl43 = bitcast %union.basic_block_il_dependent* %il42 to %struct.rtl_bb_info**, !dbg !8174
  %22 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl43, align 8, !dbg !8174
  %end_44 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %22, i64 0, i32 1, !dbg !8174
  %23 = bitcast %struct.rtx_def** %end_44 to i64*, !dbg !8175
  store i64 %19, i64* %23, align 8, !dbg !8175
  br label %if.end, !dbg !8174

if.end:                                           ; preds = %if.then, %land.lhs.true30
  %il45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !8176
  %rtl46 = bitcast %union.basic_block_il_dependent* %il45 to %struct.rtl_bb_info**, !dbg !8176
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl46, align 8, !dbg !8176
  %end_47 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 1, !dbg !8176
  %25 = load %struct.rtx_def*, %struct.rtx_def** %end_47, align 8, !dbg !8176
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8178
  %cmp52 = icmp eq %struct.rtx_def* %25, %26, !dbg !8179
  br i1 %cmp52, label %if.else, label %if.then53, !dbg !8180

if.then53:                                        ; preds = %if.end
  %27 = ptrtoint %struct.rtx_def* %25 to i64, !dbg !8180
  %28 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8181
  %end_59 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %28, i64 0, i32 1, !dbg !8181
  %29 = bitcast %struct.rtx_def** %end_59 to i64*, !dbg !8182
  store i64 %27, i64* %29, align 8, !dbg !8182
  br label %if.end69, !dbg !8181

if.else:                                          ; preds = %if.end
  %30 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8183
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 0, !dbg !8183
  %31 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8183
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8183
  %33 = bitcast %union.rtunion_def* %32 to i64*, !dbg !8183
  %34 = load i64, i64* %33, align 8, !dbg !8183
  %end_68 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 1, !dbg !8184
  %35 = bitcast %struct.rtx_def** %end_68 to i64*, !dbg !8185
  store i64 %34, i64* %35, align 8, !dbg !8185
  br label %if.end69

if.end69:                                         ; preds = %if.else, %if.then53
  %36 = bitcast %union.rtunion_def* %0 to i64*, !dbg !8186
  %37 = load i64, i64* %36, align 8, !dbg !8186
  %38 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl46, align 8, !dbg !8187
  %end_76 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %38, i64 0, i32 1, !dbg !8187
  %39 = bitcast %struct.rtx_def** %end_76 to i64*, !dbg !8188
  store i64 %37, i64* %39, align 8, !dbg !8188
  tail call void @update_bb_for_insn(%struct.basic_block_def* %4) #6, !dbg !8189
  ret void, !dbg !8190
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_block_after_check(%struct.rtx_def* %jump) unnamed_addr #5 !dbg !8191 {
entry:
  %t = alloca %struct.VEC_edge_gc*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !8193, metadata !DIExpression()), !dbg !8198
  %0 = bitcast %struct.VEC_edge_gc** %t to i8*, !dbg !8199
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8199
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8200
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !8200
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8200
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 1, !dbg !8200
  %rt_bb = bitcast %struct.object_block** %arrayidx3 to %struct.basic_block_def**, !dbg !8200
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8200
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !8194, metadata !DIExpression()), !dbg !8198
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 1, !dbg !8201
  %rt_bb7 = bitcast %struct.object_block** %arrayidx6 to %struct.basic_block_def**, !dbg !8201
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb7, align 8, !dbg !8201
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !8195, metadata !DIExpression()), !dbg !8198
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 6, !dbg !8202
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !8202
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !8196, metadata !DIExpression()), !dbg !8198
  tail call void @update_bb_for_insn(%struct.basic_block_def* %4) #6, !dbg !8203
  %call = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !8204
  %tobool = icmp eq i8 %call, 0, !dbg !8204
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !8204

cond.true:                                        ; preds = %entry
  %call8 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %jump) #6, !dbg !8204
  %tobool10 = icmp eq i8 %call8, 0, !dbg !8204
  br i1 %tobool10, label %lor.lhs.false, label %cond.end46, !dbg !8204

cond.false:                                       ; preds = %entry
  %6 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8204
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %6, i64 0, i32 0, !dbg !8204
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8204
  %rt_int = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !8204
  %7 = load i32, i32* %rt_int, align 8, !dbg !8204
  %call17 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %7) #7, !dbg !8204
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call17, i64 0, i32 11, !dbg !8204
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !8204
  %cmp = icmp eq %struct.basic_block_def* %8, null, !dbg !8204
  br i1 %cmp, label %lor.lhs.false, label %cond.end46, !dbg !8204

lor.lhs.false:                                    ; preds = %cond.true, %cond.false
  %call19 = tail call fastcc zeroext i8 @sel_sched_p() #7, !dbg !8204
  %tobool21 = icmp eq i8 %call19, 0, !dbg !8204
  br i1 %tobool21, label %cond.false26, label %cond.true22, !dbg !8204

cond.true22:                                      ; preds = %lor.lhs.false
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 7, !dbg !8204
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8204
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8204
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !8204
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8204
  %call23 = tail call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %10) #6, !dbg !8204
  %tobool25 = icmp eq i8 %call23, 0, !dbg !8204
  br i1 %tobool25, label %cond.true44, label %cond.end46, !dbg !8204

cond.false26:                                     ; preds = %lor.lhs.false
  %11 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8204
  %base29 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %11, i64 0, i32 0, !dbg !8204
  %il33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 7, !dbg !8204
  %rtl34 = bitcast %union.basic_block_il_dependent* %il33 to %struct.rtl_bb_info**, !dbg !8204
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl34, align 8, !dbg !8204
  %end_35 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !8204
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_35, align 8, !dbg !8204
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8204
  %rt_int39 = bitcast %union.rtunion_def* %arrayidx38 to i32*, !dbg !8204
  %14 = load i32, i32* %rt_int39, align 8, !dbg !8204
  %call40 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base29, i32 %14) #7, !dbg !8204
  %recovery_block41 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call40, i64 0, i32 11, !dbg !8204
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block41, align 8, !dbg !8204
  %cmp42 = icmp eq %struct.basic_block_def* %15, null, !dbg !8204
  br i1 %cmp42, label %cond.true44, label %cond.end46, !dbg !8204

cond.true44:                                      ; preds = %cond.true22, %cond.false26
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5003, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8204
  br label %cond.end46, !dbg !8204

cond.end46:                                       ; preds = %cond.true, %cond.true22, %cond.false26, %cond.false, %cond.true44
  tail call void @unlink_block(%struct.basic_block_def* %5) #6, !dbg !8205
  tail call void @link_block(%struct.basic_block_def* %5, %struct.basic_block_def* %3) #6, !dbg !8206
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 1, !dbg !8207
  %16 = bitcast %struct.VEC_edge_gc** %succs to i64*, !dbg !8207
  %17 = load i64, i64* %16, align 8, !dbg !8207
  %18 = bitcast %struct.VEC_edge_gc** %t to i64*, !dbg !8208
  store i64 %17, i64* %18, align 8, !dbg !8208
  store %struct.VEC_edge_gc* null, %struct.VEC_edge_gc** %succs, align 8, !dbg !8209
  %succs49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 1, !dbg !8210
  tail call fastcc void @move_succs(%struct.VEC_edge_gc** nonnull %succs49, %struct.basic_block_def* %3) #7, !dbg !8211
  %succs50 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 1, !dbg !8212
  tail call fastcc void @move_succs(%struct.VEC_edge_gc** nonnull %succs50, %struct.basic_block_def* %4) #7, !dbg !8213
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %t, metadata !8197, metadata !DIExpression(DW_OP_deref)), !dbg !8198
  call fastcc void @move_succs(%struct.VEC_edge_gc** nonnull %t, %struct.basic_block_def* %5) #7, !dbg !8214
  call void @df_mark_solutions_dirty() #6, !dbg !8215
  %19 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !8216
  %fix_recovery_cfg = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %19, i64 0, i32 0, !dbg !8217
  %20 = load void (i32, i32, i32)*, void (i32, i32, i32)** %fix_recovery_cfg, align 8, !dbg !8217
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !8218
  %21 = load i32, i32* %index, align 8, !dbg !8218
  %index51 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !8219
  %22 = load i32, i32* %index51, align 8, !dbg !8219
  %index52 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 9, !dbg !8220
  %23 = load i32, i32* %index52, align 8, !dbg !8220
  call void %20(i32 %21, i32 %22, i32 %23) #6, !dbg !8216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8221
  ret void, !dbg !8221
}

declare dso_local void @df_insn_change_bb(%struct.rtx_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @update_bb_for_insn(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @unlink_block(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @link_block(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @move_succs(%struct.VEC_edge_gc** %succsp, %struct.basic_block_def* %to) unnamed_addr #5 !dbg !8222 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %succsp, metadata !8226, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %to, metadata !8227, metadata !DIExpression()), !dbg !8230
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !8231
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8231
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8232
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8232
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %to, i64 0, i32 1, !dbg !8233
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8233
  %cmp = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !8233
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8233

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5029, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8233
  br label %cond.end, !dbg !8233

cond.end:                                         ; preds = %entry, %cond.true
  %3 = bitcast %struct.VEC_edge_gc** %succsp to i64*, !dbg !8234
  %4 = load i64, i64* %3, align 8, !dbg !8234
  %5 = bitcast %struct.VEC_edge_gc** %succs to i64*, !dbg !8235
  store i64 %4, i64* %5, align 8, !dbg !8235
  %6 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8236
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !8236
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !8236
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8236
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !8236
  store i32 %8, i32* %7, align 8, !dbg !8236
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8236
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !8236
  store %struct.VEC_edge_gc** %10, %struct.VEC_edge_gc*** %9, align 8, !dbg !8236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !8236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !8236
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8238
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8238
  br label %for.cond, !dbg !8236

for.cond:                                         ; preds = %for.body, %cond.end
  %13 = load i32, i32* %11, align 8, !dbg !8240
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !8240
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8228, metadata !DIExpression(DW_OP_deref)), !dbg !8230
  %call3 = call fastcc zeroext i8 @ei_cond(i32 %13, %struct.VEC_edge_gc** %14, %struct.edge_def** nonnull %e) #7, !dbg !8240
  %tobool = icmp eq i8 %call3, 0, !dbg !8236
  br i1 %tobool, label %for.end, label %for.body, !dbg !8236

for.body:                                         ; preds = %for.cond
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8241
  call void @llvm.dbg.value(metadata %struct.edge_def* %15, metadata !8228, metadata !DIExpression()), !dbg !8230
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i64 0, i32 0, !dbg !8242
  store %struct.basic_block_def* %to, %struct.basic_block_def** %src, align 8, !dbg !8243
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8229, metadata !DIExpression(DW_OP_deref)), !dbg !8230
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8240
  br label %for.cond, !dbg !8240, !llvm.loop !8244

for.end:                                          ; preds = %for.cond
  store %struct.VEC_edge_gc* null, %struct.VEC_edge_gc** %succsp, align 8, !dbg !8246
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8247
  ret void, !dbg !8247
}

declare dso_local void @df_mark_solutions_dirty() local_unnamed_addr #2

declare dso_local void @print_insn(i8*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @print_reservation(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @update_reg_and_insn_max_reg_pressure(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !8248 {
entry:
  %before = alloca [27 x i32], align 16
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8250, metadata !DIExpression()), !dbg !8253
  %0 = bitcast [27 x i32]* %before to i8*, !dbg !8254
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %0) #8, !dbg !8254
  call void @llvm.dbg.declare(metadata [27 x i32]* %before, metadata !8252, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i32 0, metadata !8251, metadata !DIExpression()), !dbg !8253
  %1 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8256
  %2 = sext i32 %1 to i64, !dbg !8259
  br label %for.cond, !dbg !8259

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ 0, %entry ], !dbg !8260
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !8251, metadata !DIExpression()), !dbg !8253
  %cmp = icmp slt i64 %indvars.iv1, %2, !dbg !8261
  br i1 %cmp, label %for.body, label %for.end, !dbg !8262

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv1, !dbg !8263
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8263
  %idxprom1 = zext i32 %3 to i64, !dbg !8264
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom1, !dbg !8264
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !8264
  %arrayidx4 = getelementptr inbounds [27 x i32], [27 x i32]* %before, i64 0, i64 %indvars.iv1, !dbg !8265
  store i32 %4, i32* %arrayidx4, align 4, !dbg !8266
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !8267
  call void @llvm.dbg.value(metadata i32 undef, metadata !8251, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8253
  br label %for.cond, !dbg !8268, !llvm.loop !8269

for.end:                                          ; preds = %for.cond
  tail call fastcc void @update_register_pressure(%struct.rtx_def* %insn) #7, !dbg !8271
  call void @llvm.dbg.value(metadata i32 0, metadata !8251, metadata !DIExpression()), !dbg !8253
  %5 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8272
  %6 = sext i32 %5 to i64, !dbg !8275
  br label %for.cond5, !dbg !8275

for.cond5:                                        ; preds = %for.inc15, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc15 ], [ 0, %for.end ], !dbg !8276
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8251, metadata !DIExpression()), !dbg !8253
  %cmp6 = icmp slt i64 %indvars.iv, %6, !dbg !8277
  br i1 %cmp6, label %for.body7, label %for.end17, !dbg !8278

for.body7:                                        ; preds = %for.cond5
  %arrayidx9 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !8279
  %7 = load i32, i32* %arrayidx9, align 4, !dbg !8279
  %idxprom10 = zext i32 %7 to i64, !dbg !8281
  %arrayidx11 = getelementptr inbounds [27 x i32], [27 x i32]* @curr_reg_pressure, i64 0, i64 %idxprom10, !dbg !8281
  %8 = load i32, i32* %arrayidx11, align 4, !dbg !8281
  %arrayidx13 = getelementptr inbounds [27 x i32], [27 x i32]* %before, i64 0, i64 %indvars.iv, !dbg !8282
  %9 = load i32, i32* %arrayidx13, align 4, !dbg !8282
  %cmp14 = icmp eq i32 %8, %9, !dbg !8283
  br i1 %cmp14, label %for.inc15, label %for.end17, !dbg !8284

for.inc15:                                        ; preds = %for.body7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8285
  call void @llvm.dbg.value(metadata i32 undef, metadata !8251, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8253
  br label %for.cond5, !dbg !8286, !llvm.loop !8287

for.end17:                                        ; preds = %for.body7, %for.cond5
  %cmp6.lcssa = phi i1 [ %cmp6, %for.body7 ], [ %cmp6, %for.cond5 ], !dbg !8277
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8251, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8251, metadata !DIExpression()), !dbg !8253
  br i1 %cmp6.lcssa, label %if.then19, label %if.end20, !dbg !8289

if.then19:                                        ; preds = %for.end17
  tail call fastcc void @setup_insn_max_reg_pressure(%struct.rtx_def* %insn, i8 zeroext 1) #7, !dbg !8290
  br label %if.end20, !dbg !8290

if.end20:                                         ; preds = %if.then19, %for.end17
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %0) #8, !dbg !8292
  ret void, !dbg !8292
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @sd_delete_dep(%struct._sd_iterator* byval(%struct._sd_iterator) align 8) local_unnamed_addr #2

declare dso_local void @sd_resolve_dep(%struct._sd_iterator* byval(%struct._sd_iterator) align 8) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fix_recovery_deps(%struct.basic_block_def* %rec) unnamed_addr #5 !dbg !8293 {
entry:
  %ready_list = alloca %struct.rtx_def*, align 8
  %in_ready = alloca %struct.bitmap_head_def, align 8
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %rec, metadata !8295, metadata !DIExpression()), !dbg !8309
  %0 = bitcast %struct.rtx_def** %ready_list to i8*, !dbg !8310
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8310
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8299, metadata !DIExpression()), !dbg !8309
  store %struct.rtx_def* null, %struct.rtx_def** %ready_list, align 8, !dbg !8311
  %1 = bitcast %struct.bitmap_head_def* %in_ready to i8*, !dbg !8312
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8312
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %in_ready, metadata !8300, metadata !DIExpression(DW_OP_deref)), !dbg !8309
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %in_ready, %struct.bitmap_obstack* null) #7, !dbg !8313
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %rec, i64 0, i32 7, !dbg !8314
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8314
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8314
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 0, !dbg !8314
  %3 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8314
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8314
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !8314
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !8296, metadata !DIExpression()), !dbg !8309
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !8315
  %bf.load = load i32, i32* %6, align 8, !dbg !8315
  %bf.clear = and i32 %bf.load, 65535, !dbg !8315
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !8315
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !8315

land.lhs.true:                                    ; preds = %entry
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, !dbg !8315
  %7 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !8315
  %rt_int = bitcast %union.rtunion_def* %7 to i32*, !dbg !8315
  %8 = load i32, i32* %rt_int, align 8, !dbg !8315
  %cmp4 = icmp eq i32 %8, 10, !dbg !8315
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !8315

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4732, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8315
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8316
  br label %cond.end, !dbg !8315

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %9 = phi %struct.rtl_bb_info* [ %2, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !8316
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !8316
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8316
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !8297, metadata !DIExpression()), !dbg !8309
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !8317
  %bf.load7 = load i32, i32* %11, align 8, !dbg !8317
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !8317
  %cmp9 = icmp eq i32 %bf.clear8, 9, !dbg !8317
  br i1 %cmp9, label %cond.end12, label %cond.true10, !dbg !8317

cond.true10:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4734, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8317
  br label %cond.end12, !dbg !8317

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8318
  %rt_rtx17 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !8318
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !8318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !8297, metadata !DIExpression()), !dbg !8309
  %14 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !8319
  %15 = bitcast %struct._dep** %dep to i8*, !dbg !8319
  %16 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !8320
  br label %do.body, !dbg !8321

do.body:                                          ; preds = %for.end, %cond.end12
  %insn.0 = phi %struct.rtx_def* [ %13, %cond.end12 ], [ %27, %for.end ], !dbg !8309
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8297, metadata !DIExpression()), !dbg !8309
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !dbg !8322
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8, !dbg !8323
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8, !dbg !8324
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn.0, i32 4) #7, !dbg !8324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %16, i64 32, i1 false), !dbg !8324
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8, !dbg !8324
  br label %for.cond, !dbg !8325

for.cond:                                         ; preds = %if.end53, %do.body
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8302, metadata !DIExpression(DW_OP_deref)), !dbg !8319
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8304, metadata !DIExpression(DW_OP_deref)), !dbg !8319
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8326
  %tobool = icmp eq i8 %call, 0, !dbg !8327
  br i1 %tobool, label %for.end, label %for.body, !dbg !8327

for.body:                                         ; preds = %for.cond
  %17 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8328
  call void @llvm.dbg.value(metadata %struct._dep* %17, metadata !8304, metadata !DIExpression()), !dbg !8319
  %con = getelementptr inbounds %struct._dep, %struct._dep* %17, i64 0, i32 1, !dbg !8328
  %18 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !8328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !8305, metadata !DIExpression()), !dbg !8329
  %arrayidx20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 1, !dbg !8330
  %rt_bb = bitcast %struct.object_block** %arrayidx20 to %struct.basic_block_def**, !dbg !8330
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8330
  %cmp21 = icmp eq %struct.basic_block_def* %19, %rec, !dbg !8332
  br i1 %cmp21, label %if.else, label %if.then, !dbg !8333

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8302, metadata !DIExpression(DW_OP_deref)), !dbg !8319
  call void @sd_delete_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #6, !dbg !8334
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8336
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %20, i64 0, i32 0, !dbg !8336
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8336
  %rt_int30 = bitcast %union.rtunion_def* %arrayidx29 to i32*, !dbg !8336
  %21 = load i32, i32* %rt_int30, align 8, !dbg !8336
  %call31 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base, i32 %21) #7, !dbg !8336
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %in_ready, metadata !8300, metadata !DIExpression(DW_OP_deref)), !dbg !8309
  %call32 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %in_ready, i32 %call31) #6, !dbg !8338
  %tobool33 = icmp eq i32 %call32, 0, !dbg !8338
  br i1 %tobool33, label %if.then34, label %if.end53, !dbg !8339

if.then34:                                        ; preds = %if.then
  %22 = load %struct.rtx_def*, %struct.rtx_def** %ready_list, align 8, !dbg !8340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !8299, metadata !DIExpression()), !dbg !8309
  %call35 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %18, %struct.rtx_def* %22) #6, !dbg !8342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !8299, metadata !DIExpression()), !dbg !8309
  store %struct.rtx_def* %call35, %struct.rtx_def** %ready_list, align 8, !dbg !8343
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8344
  %base38 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i64 0, i32 0, !dbg !8344
  %24 = load i32, i32* %rt_int30, align 8, !dbg !8344
  %call46 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base38, i32 %24) #7, !dbg !8344
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %in_ready, metadata !8300, metadata !DIExpression(DW_OP_deref)), !dbg !8309
  %call47 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %in_ready, i32 %call46) #6, !dbg !8345
  br label %if.end53, !dbg !8346

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._dep* %17, metadata !8304, metadata !DIExpression()), !dbg !8319
  %status = getelementptr inbounds %struct._dep, %struct._dep* %17, i64 0, i32 3, !dbg !8347
  %25 = load i32, i32* %status, align 4, !dbg !8347
  %and = and i32 %25, 117440512, !dbg !8347
  %cmp48 = icmp eq i32 %and, 16777216, !dbg !8347
  br i1 %cmp48, label %cond.end51, label %cond.true49, !dbg !8347

cond.true49:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4759, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8347
  br label %cond.end51, !dbg !8347

cond.end51:                                       ; preds = %if.else, %cond.true49
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8302, metadata !DIExpression(DW_OP_deref)), !dbg !8319
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !8349
  br label %if.end53

if.end53:                                         ; preds = %if.then, %if.then34, %cond.end51
  br label %for.cond, !dbg !8350, !llvm.loop !8351

for.end:                                          ; preds = %for.cond
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8353
  %rt_rtx57 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !8353
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !8353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !8297, metadata !DIExpression()), !dbg !8309
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8, !dbg !8354
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !dbg !8354
  %cmp58 = icmp eq %struct.rtx_def* %27, %5, !dbg !8355
  br i1 %cmp58, label %do.end, label %do.body, !dbg !8356, !llvm.loop !8357

do.end:                                           ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %in_ready, metadata !8300, metadata !DIExpression(DW_OP_deref)), !dbg !8309
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %in_ready) #6, !dbg !8359
  br label %for.cond59, !dbg !8360

for.cond59:                                       ; preds = %for.body61, %do.end
  %link.0.in = phi %struct.rtx_def** [ %ready_list, %do.end ], [ %rt_rtx70, %for.body61 ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !8362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !8301, metadata !DIExpression()), !dbg !8309
  %tobool60 = icmp eq %struct.rtx_def* %link.0, null, !dbg !8363
  br i1 %tobool60, label %for.end71, label %for.body61, !dbg !8363

for.body61:                                       ; preds = %for.cond59
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8364
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !8364
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !8364
  %call66 = call i32 @try_ready(%struct.rtx_def* %28) #7, !dbg !8366
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8367
  %rt_rtx70 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !8367
  br label %for.cond59, !dbg !8368, !llvm.loop !8369

for.end71:                                        ; preds = %for.cond59
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ready_list, metadata !8299, metadata !DIExpression(DW_OP_deref)), !dbg !8309
  call void @free_INSN_LIST_list(%struct.rtx_def** nonnull %ready_list) #6, !dbg !8371
  %30 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8372
  %head_74 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 0, !dbg !8372
  %31 = load %struct.rtx_def*, %struct.rtx_def** %head_74, align 8, !dbg !8372
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !8297, metadata !DIExpression()), !dbg !8309
  %end_77 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 1, !dbg !8373
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_77, align 8, !dbg !8373
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !8298, metadata !DIExpression()), !dbg !8309
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 0, !dbg !8374
  %bf.load78 = load i32, i32* %33, align 8, !dbg !8374
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !8374
  %cmp80 = icmp eq i32 %bf.clear79, 12, !dbg !8374
  br i1 %cmp80, label %cond.end83, label %cond.true81, !dbg !8374

cond.true81:                                      ; preds = %for.end71
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4780, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8374
  br label %cond.end83, !dbg !8374

cond.end83:                                       ; preds = %for.end71, %cond.true81
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8375
  %rt_rtx88 = bitcast %union.rtunion_def* %34 to %struct.rtx_def**, !dbg !8375
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !8375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %35, metadata !8297, metadata !DIExpression()), !dbg !8309
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 0, !dbg !8376
  %bf.load89 = load i32, i32* %36, align 8, !dbg !8376
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !8376
  %cmp91 = icmp eq i32 %bf.clear90, 13, !dbg !8376
  br i1 %cmp91, label %land.lhs.true92, label %cond.true98, !dbg !8376

land.lhs.true92:                                  ; preds = %cond.end83
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, !dbg !8376
  %37 = getelementptr inbounds %union.u, %union.u* %u93, i64 1, i32 0, i32 0, i64 0, !dbg !8376
  %rt_int96 = bitcast %union.rtunion_def* %37 to i32*, !dbg !8376
  %38 = load i32, i32* %rt_int96, align 8, !dbg !8376
  %cmp97 = icmp eq i32 %38, 10, !dbg !8376
  br i1 %cmp97, label %cond.end100, label %cond.true98, !dbg !8376

cond.true98:                                      ; preds = %land.lhs.true92, %cond.end83
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4783, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8376
  br label %cond.end100, !dbg !8376

cond.end100:                                      ; preds = %land.lhs.true92, %cond.true98
  call fastcc void @add_jump_dependencies(%struct.rtx_def* %35, %struct.rtx_def* %32) #7, !dbg !8377
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !8378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8378
  ret void, !dbg !8378
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) unnamed_addr #0 !dbg !8379 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %head, metadata !8383, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata %struct.bitmap_obstack* null, metadata !8384, metadata !DIExpression()), !dbg !8385
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 1, !dbg !8386
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !8387
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 0, !dbg !8388
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !8389
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 3, !dbg !8390
  store %struct.bitmap_obstack* null, %struct.bitmap_obstack** %obstack1, align 8, !dbg !8391
  ret void, !dbg !8392
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_jump_dependencies(%struct.rtx_def* %insn, %struct.rtx_def* %jump) unnamed_addr #5 !dbg !8393 {
entry:
  %_new_dep = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8395, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !8396, metadata !DIExpression()), !dbg !8402
  %0 = bitcast %struct._dep* %_new_dep to i8*, !dbg !8403
  br label %do.body, !dbg !8404

do.body:                                          ; preds = %do.cond, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %insn, %entry ], [ %2, %do.cond ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.addr.0, metadata !8395, metadata !DIExpression()), !dbg !8402
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8405
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !8405
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8395, metadata !DIExpression()), !dbg !8402
  %cmp = icmp eq %struct.rtx_def* %2, %jump, !dbg !8406
  br i1 %cmp, label %do.end, label %if.end, !dbg !8408

if.end:                                           ; preds = %do.body
  %call = call fastcc i32 @dep_list_size(%struct.rtx_def* %2) #7, !dbg !8409
  %cmp1 = icmp eq i32 %call, 0, !dbg !8410
  br i1 %cmp1, label %if.then2, label %do.cond, !dbg !8411

if.then2:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8412
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8401, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8397, metadata !DIExpression(DW_OP_deref)), !dbg !8403
  call void @init_dep(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %2, %struct.rtx_def* %jump, i32 12) #6, !dbg !8413
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8397, metadata !DIExpression(DW_OP_deref)), !dbg !8403
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8414
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8415
  br label %do.cond, !dbg !8416

do.cond:                                          ; preds = %if.end, %if.then2
  br label %do.body, !dbg !8417

do.end:                                           ; preds = %do.body
  %call4 = call zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %jump, i32 3) #6, !dbg !8418
  %tobool = icmp eq i8 %call4, 0, !dbg !8418
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8418

cond.true:                                        ; preds = %do.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8418
  br label %cond.end, !dbg !8418

cond.end:                                         ; preds = %do.end, %cond.true
  ret void, !dbg !8419
}

declare dso_local void @init_dep(%struct._dep*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @sd_add_dep(%struct._dep*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @print_rtl_single(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ok_for_early_queue_removal(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !8420 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8422, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !8424, metadata !DIExpression()), !dbg !8437
  %0 = load i8 (%struct._dep*, i32, i32)*, i8 (%struct._dep*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 20), align 8, !dbg !8438
  %tobool = icmp eq i8 (%struct._dep*, i32, i32)* %0, null, !dbg !8439
  br i1 %tobool, label %cleanup35, label %if.then, !dbg !8440

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @flag_sched_stalled_insns_dep, align 4, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %1, metadata !8423, metadata !DIExpression()), !dbg !8437
  br label %for.cond, !dbg !8442

for.cond:                                         ; preds = %if.end27, %if.then
  %prev_insn.0.in = phi %struct.rtx_def** [ @last_scheduled_insn, %if.then ], [ %rt_rtx31, %if.end27 ]
  %n_cycles.0 = phi i32 [ %1, %if.then ], [ %dec, %if.end27 ], !dbg !8443
  call void @llvm.dbg.value(metadata i32 %n_cycles.0, metadata !8423, metadata !DIExpression()), !dbg !8437
  %tobool1 = icmp eq i32 %n_cycles.0, 0, !dbg !8444
  br i1 %tobool1, label %cleanup35.loopexit1, label %for.cond2.preheader, !dbg !8444

for.cond2.preheader:                              ; preds = %for.cond
  br label %for.cond2, !dbg !8445

for.cond2:                                        ; preds = %for.cond2.preheader, %for.inc
  %prev_insn.1.in = phi %struct.rtx_def** [ %rt_rtx, %for.inc ], [ %prev_insn.0.in, %for.cond2.preheader ]
  %prev_insn.1 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn.1.in, align 8, !dbg !8437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_insn.1, metadata !8424, metadata !DIExpression()), !dbg !8437
  %tobool3 = icmp eq %struct.rtx_def* %prev_insn.1, null, !dbg !8445
  br i1 %tobool3, label %for.end, label %for.body4, !dbg !8445

for.body4:                                        ; preds = %for.cond2
  %2 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !8446
  %prev_head = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %2, i64 0, i32 8, !dbg !8448
  %3 = load %struct.rtx_def*, %struct.rtx_def** %prev_head, align 8, !dbg !8448
  %cmp = icmp eq %struct.rtx_def* %prev_insn.1, %3, !dbg !8449
  br i1 %cmp, label %cleanup22, label %if.end, !dbg !8450

if.end:                                           ; preds = %for.body4
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev_insn.1, i64 0, i32 0, !dbg !8451
  %bf.load = load i32, i32* %4, align 8, !dbg !8451
  %bf.clear = and i32 %bf.load, 65535, !dbg !8451
  %cmp6 = icmp eq i32 %bf.clear, 13, !dbg !8451
  br i1 %cmp6, label %if.end16, label %if.then7, !dbg !8452

if.then7:                                         ; preds = %if.end
  %call = tail call %struct._dep* @sd_find_dep_between(%struct.rtx_def* nonnull %prev_insn.1, %struct.rtx_def* %insn, i8 zeroext 1) #6, !dbg !8453
  call void @llvm.dbg.value(metadata %struct._dep* %call, metadata !8434, metadata !DIExpression()), !dbg !8454
  %cmp8 = icmp eq %struct._dep* %call, null, !dbg !8455
  br i1 %cmp8, label %if.end15, label %if.then9, !dbg !8457

if.then9:                                         ; preds = %if.then7
  %call10 = tail call i32 @dep_cost(%struct._dep* nonnull %call) #7, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %call10, metadata !8425, metadata !DIExpression()), !dbg !8460
  %5 = load i8 (%struct._dep*, i32, i32)*, i8 (%struct._dep*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 20), align 8, !dbg !8461
  %6 = load i32, i32* @flag_sched_stalled_insns_dep, align 4, !dbg !8463
  %sub = sub nsw i32 %6, %n_cycles.0, !dbg !8464
  %call11 = tail call zeroext i8 %5(%struct._dep* nonnull %call, i32 %call10, i32 %sub) #6, !dbg !8465
  %tobool12 = icmp eq i8 %call11, 0, !dbg !8465
  br i1 %tobool12, label %if.end15, label %cleanup, !dbg !8466

if.end15:                                         ; preds = %if.then9, %if.then7
  br label %cleanup, !dbg !8467

cleanup:                                          ; preds = %if.then9, %if.end15
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end15 ], [ 1, %if.then9 ]
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %cleanup.if.end16_crit_edge, label %cleanup22

cleanup.if.end16_crit_edge:                       ; preds = %cleanup
  %bf.load17.pre = load i32, i32* %4, align 8, !dbg !8468
  br label %if.end16

if.end16:                                         ; preds = %cleanup.if.end16_crit_edge, %if.end
  %bf.load17 = phi i32 [ %bf.load17.pre, %cleanup.if.end16_crit_edge ], [ %bf.load, %if.end ], !dbg !8468
  %bf.clear18 = and i32 %bf.load17, 16711680, !dbg !8468
  %cmp19 = icmp eq i32 %bf.clear18, 1179648, !dbg !8470
  %. = select i1 %cmp19, i32 5, i32 0, !dbg !8471
  br label %cleanup22, !dbg !8471

cleanup22:                                        ; preds = %if.end16, %for.body4, %cleanup
  %prev_insn.2 = phi %struct.rtx_def* [ %prev_insn.1, %cleanup ], [ null, %for.body4 ], [ %prev_insn.1, %if.end16 ], !dbg !8437
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 5, %for.body4 ], [ %., %if.end16 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_insn.2, metadata !8424, metadata !DIExpression()), !dbg !8437
  switch i32 %cleanup.dest.slot.1, label %cleanup35.loopexit [
    i32 0, label %for.inc
    i32 5, label %for.end
  ]

for.inc:                                          ; preds = %cleanup22
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev_insn.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8472
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !8472
  br label %for.cond2, !dbg !8473, !llvm.loop !8474

for.end:                                          ; preds = %for.cond2, %cleanup22
  %prev_insn.3 = phi %struct.rtx_def* [ %prev_insn.2, %cleanup22 ], [ null, %for.cond2 ], !dbg !8437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev_insn.3, metadata !8424, metadata !DIExpression()), !dbg !8437
  %tobool25 = icmp eq %struct.rtx_def* %prev_insn.3, null, !dbg !8476
  br i1 %tobool25, label %cleanup35.loopexit1, label %if.end27, !dbg !8478

if.end27:                                         ; preds = %for.end
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev_insn.3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8479
  %rt_rtx31 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !8479
  %dec = add nsw i32 %n_cycles.0, -1, !dbg !8480
  call void @llvm.dbg.value(metadata i32 %dec, metadata !8423, metadata !DIExpression()), !dbg !8437
  br label %for.cond, !dbg !8481, !llvm.loop !8482

cleanup35.loopexit:                               ; preds = %cleanup22
  br label %cleanup35, !dbg !8484

cleanup35.loopexit1:                              ; preds = %for.cond, %for.end
  br label %cleanup35, !dbg !8484

cleanup35:                                        ; preds = %cleanup35.loopexit1, %cleanup35.loopexit, %entry
  %retval.6 = phi i8 [ 1, %entry ], [ 0, %cleanup35.loopexit ], [ 1, %cleanup35.loopexit1 ]
  ret i8 %retval.6, !dbg !8484
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ready_remove_insn(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !8485 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8487, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 0, metadata !8488, metadata !DIExpression()), !dbg !8489
  br label %for.cond, !dbg !8490

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !8492
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8488, metadata !DIExpression()), !dbg !8489
  %0 = load i32, i32* getelementptr inbounds (%struct.ready_list, %struct.ready_list* @ready, i64 0, i32 3), align 8, !dbg !8493
  %cmp = icmp slt i32 %i.0, %0, !dbg !8495
  br i1 %cmp, label %for.body, label %for.end, !dbg !8496

for.body:                                         ; preds = %for.cond
  %call = tail call %struct.rtx_def* @ready_element(%struct.ready_list* nonnull @ready, i32 %i.0) #7, !dbg !8497
  %cmp1 = icmp eq %struct.rtx_def* %call, %insn, !dbg !8499
  br i1 %cmp1, label %if.then, label %for.inc, !dbg !8500

if.then:                                          ; preds = %for.body
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body ], !dbg !8492
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !8488, metadata !DIExpression()), !dbg !8489
  %call2 = tail call fastcc %struct.rtx_def* @ready_remove(%struct.ready_list* nonnull @ready, i32 %i.0.lcssa3) #7, !dbg !8501
  br label %cleanup.cont, !dbg !8503

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8504
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8488, metadata !DIExpression()), !dbg !8489
  br label %for.cond, !dbg !8505, !llvm.loop !8506

for.end:                                          ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1496, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8508
  br label %cleanup.cont, !dbg !8509

cleanup.cont:                                     ; preds = %if.then, %for.end
  ret void, !dbg !8509
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @contributes_to_priority_p(%struct._dep* %dep) unnamed_addr #5 !dbg !8510 {
entry:
  call void @llvm.dbg.value(metadata %struct._dep* %dep, metadata !8514, metadata !DIExpression()), !dbg !8515
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 1, !dbg !8516
  %0 = bitcast %struct.rtx_def** %con to i32**, !dbg !8516
  %1 = load i32*, i32** %0, align 8, !dbg !8516
  %bf.load = load i32, i32* %1, align 8, !dbg !8516
  %bf.clear = and i32 %bf.load, 65535, !dbg !8516
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !8516
  %2 = bitcast i32* %1 to %struct.rtx_def*, !dbg !8518
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !8518

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast %struct._dep* %dep to i32**, !dbg !8519
  %4 = load i32*, i32** %3, align 8, !dbg !8519
  %bf.load1 = load i32, i32* %4, align 8, !dbg !8519
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8519
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !8519
  br i1 %cmp3, label %return, label %if.end, !dbg !8520

if.end:                                           ; preds = %lor.lhs.false
  %5 = bitcast i32* %4 to %struct.rtx_def*, !dbg !8520
  %6 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !8521
  %contributes_to_priority = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %6, i64 0, i32 6, !dbg !8523
  %7 = load i32 (%struct.rtx_def*, %struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)** %contributes_to_priority, align 8, !dbg !8523
  %call = tail call i32 %7(%struct.rtx_def* %2, %struct.rtx_def* %5) #6, !dbg !8521
  %tobool = icmp eq i32 %call, 0, !dbg !8521
  br i1 %tobool, label %return, label %if.end7, !dbg !8524

if.end7:                                          ; preds = %if.end
  %8 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8525
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %8, i64 0, i32 12, !dbg !8527
  %bf.load8 = load i8, i8* %generate_spec_deps, align 8, !dbg !8527
  %bf.clear9 = and i8 %bf.load8, 4, !dbg !8527
  %tobool10 = icmp eq i8 %bf.clear9, 0, !dbg !8525
  br i1 %tobool10, label %if.end16, label %land.lhs.true, !dbg !8528

land.lhs.true:                                    ; preds = %if.end7
  %9 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !8529
  %flags = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %9, i64 0, i32 4, !dbg !8530
  %10 = load i32, i32* %flags, align 8, !dbg !8530
  %and = and i32 %10, 1, !dbg !8531
  %tobool11 = icmp eq i32 %and, 0, !dbg !8531
  br i1 %tobool11, label %land.lhs.true12, label %if.end16, !dbg !8532

land.lhs.true12:                                  ; preds = %land.lhs.true
  %status = getelementptr inbounds %struct._dep, %struct._dep* %dep, i64 0, i32 3, !dbg !8533
  %11 = load i32, i32* %status, align 4, !dbg !8533
  %and13 = and i32 %11, 16777215, !dbg !8534
  %tobool14 = icmp eq i32 %and13, 0, !dbg !8534
  br i1 %tobool14, label %if.end16, label %return, !dbg !8535

if.end16:                                         ; preds = %land.lhs.true12, %land.lhs.true, %if.end7
  br label %return, !dbg !8536

return:                                           ; preds = %land.lhs.true12, %if.end, %entry, %lor.lhs.false, %if.end16
  %retval.0 = phi i8 [ 1, %if.end16 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.end ], [ 0, %land.lhs.true12 ], !dbg !8515
  ret i8 %retval.0, !dbg !8537
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local void @sd_next_list(%struct.rtx_def*, i32*, %struct._deps_list**, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @queue_remove(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !8538 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8540, metadata !DIExpression()), !dbg !8541
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8542
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !8542
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8542
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8542
  %1 = load i32, i32* %rt_int, align 8, !dbg !8542
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !8542
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 4, !dbg !8542
  %2 = load i32, i32* %queue_index, align 8, !dbg !8542
  %cmp = icmp sgt i32 %2, -1, !dbg !8542
  br i1 %cmp, label %cond.end3, label %cond.true1, !dbg !8542

cond.true1:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 1367, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8542
  br label %cond.end3, !dbg !8542

cond.end3:                                        ; preds = %entry, %cond.true1
  %3 = load %struct.rtx_def**, %struct.rtx_def*** @insn_queue, align 8, !dbg !8543
  %4 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8544
  %base7 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %4, i64 0, i32 0, !dbg !8544
  %5 = load i32, i32* %rt_int, align 8, !dbg !8544
  %call15 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base7, i32 %5) #7, !dbg !8544
  %queue_index16 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call15, i64 0, i32 4, !dbg !8544
  %6 = load i32, i32* %queue_index16, align 8, !dbg !8544
  %idxprom = sext i32 %6 to i64, !dbg !8543
  %arrayidx17 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idxprom, !dbg !8543
  tail call void @remove_free_INSN_LIST_elem(%struct.rtx_def* %insn, %struct.rtx_def** %arrayidx17) #6, !dbg !8545
  %7 = load i32, i32* @q_size, align 4, !dbg !8546
  %dec = add nsw i32 %7, -1, !dbg !8546
  store i32 %dec, i32* @q_size, align 4, !dbg !8546
  %8 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8547
  %base20 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %8, i64 0, i32 0, !dbg !8547
  %9 = load i32, i32* %rt_int, align 8, !dbg !8547
  %call28 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base20, i32 %9) #7, !dbg !8547
  %queue_index29 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call28, i64 0, i32 4, !dbg !8547
  store i32 -2, i32* %queue_index29, align 8, !dbg !8548
  ret void, !dbg !8549
}

declare dso_local void @remove_free_INSN_LIST_elem(%struct.rtx_def*, %struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @begin_speculative_block(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !8550 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8552, metadata !DIExpression()), !dbg !8553
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8554
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !8554
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8554
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8554
  %1 = load i32, i32* %rt_int, align 8, !dbg !8554
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %1) #7, !dbg !8554
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 8, !dbg !8554
  %2 = load i32, i32* %todo_spec, align 8, !dbg !8554
  %and = and i32 %2, 63, !dbg !8556
  %tobool1 = icmp eq i32 %and, 0, !dbg !8556
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8557

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @nr_begin_data, align 4, !dbg !8558
  %inc = add nsw i32 %3, 1, !dbg !8558
  store i32 %inc, i32* @nr_begin_data, align 4, !dbg !8558
  br label %if.end, !dbg !8559

if.end:                                           ; preds = %entry, %if.then
  %4 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8560
  %base4 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %4, i64 0, i32 0, !dbg !8560
  %5 = load i32, i32* %rt_int, align 8, !dbg !8560
  %call12 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base4, i32 %5) #7, !dbg !8560
  %todo_spec13 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call12, i64 0, i32 8, !dbg !8560
  %6 = load i32, i32* %todo_spec13, align 8, !dbg !8560
  %and14 = and i32 %6, 258048, !dbg !8562
  %tobool15 = icmp eq i32 %and14, 0, !dbg !8562
  br i1 %tobool15, label %if.end18, label %if.then16, !dbg !8563

if.then16:                                        ; preds = %if.end
  %7 = load i32, i32* @nr_begin_control, align 4, !dbg !8564
  %inc17 = add nsw i32 %7, 1, !dbg !8564
  store i32 %inc17, i32* @nr_begin_control, align 4, !dbg !8564
  br label %if.end18, !dbg !8565

if.end18:                                         ; preds = %if.end, %if.then16
  tail call fastcc void @create_check_block_twin(%struct.rtx_def* %insn, i8 zeroext 0) #7, !dbg !8566
  %8 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8567
  %base21 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %8, i64 0, i32 0, !dbg !8567
  %9 = load i32, i32* %rt_int, align 8, !dbg !8567
  %call29 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base21, i32 %9) #7, !dbg !8567
  %todo_spec30 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call29, i64 0, i32 8, !dbg !8567
  %10 = load i32, i32* %todo_spec30, align 8, !dbg !8568
  %and31 = and i32 %10, -258112, !dbg !8568
  store i32 %and31, i32* %todo_spec30, align 8, !dbg !8568
  ret void, !dbg !8569
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_to_speculative_block(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !8570 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %priorities_roots = alloca %struct.VEC_rtx_heap*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %tmp68 = alloca %struct._sd_iterator, align 8
  %tmp71 = alloca %struct._sd_iterator, align 8
  %tmp162 = alloca %struct._sd_iterator, align 8
  %_new_dep = alloca %struct._dep, align 8
  %tmp184 = alloca %struct._sd_iterator, align 8
  %_new_dep211 = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8572, metadata !DIExpression()), !dbg !8604
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !8605
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !8605
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !8606
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8606
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8576, metadata !DIExpression()), !dbg !8604
  %2 = bitcast %struct.VEC_rtx_heap** %priorities_roots to i8*, !dbg !8607
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8607
  %3 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8608
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %3, i64 0, i32 0, !dbg !8608
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8608
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8608
  %4 = load i32, i32* %rt_int, align 8, !dbg !8608
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %4) #7, !dbg !8608
  %todo_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 8, !dbg !8608
  %5 = load i32, i32* %todo_spec, align 8, !dbg !8608
  call void @llvm.dbg.value(metadata i32 %5, metadata !8573, metadata !DIExpression()), !dbg !8604
  %and = and i32 %5, -16519105, !dbg !8609
  %tobool1 = icmp eq i32 %and, 0, !dbg !8609
  br i1 %tobool1, label %cond.end4, label %cond.true2, !dbg !8609

cond.true2:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4091, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8609
  br label %cond.end4, !dbg !8609

cond.end4:                                        ; preds = %entry, %cond.true2
  %and6 = and i32 %5, 4032, !dbg !8610
  %tobool7 = icmp eq i32 %and6, 0, !dbg !8610
  br i1 %tobool7, label %if.end, label %if.then, !dbg !8612

if.then:                                          ; preds = %cond.end4
  %6 = load i32, i32* @nr_be_in_data, align 4, !dbg !8613
  %inc = add nsw i32 %6, 1, !dbg !8613
  store i32 %inc, i32* @nr_be_in_data, align 4, !dbg !8613
  br label %if.end, !dbg !8614

if.end:                                           ; preds = %cond.end4, %if.then
  %and8 = and i32 %5, 16515072, !dbg !8615
  %tobool9 = icmp eq i32 %and8, 0, !dbg !8615
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !8617

if.then10:                                        ; preds = %if.end
  %7 = load i32, i32* @nr_be_in_control, align 4, !dbg !8618
  %inc11 = add nsw i32 %7, 1, !dbg !8618
  store i32 %inc11, i32* @nr_be_in_control, align 4, !dbg !8618
  br label %if.end12, !dbg !8619

if.end12:                                         ; preds = %if.end, %if.then10
  %8 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8620
  %base15 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %8, i64 0, i32 0, !dbg !8620
  %9 = load i32, i32* %rt_int, align 8, !dbg !8620
  %call23 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base15, i32 %9) #7, !dbg !8620
  %todo_spec24 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call23, i64 0, i32 8, !dbg !8620
  %10 = load i32, i32* %todo_spec24, align 8, !dbg !8621
  %and25 = and i32 %10, -16519105, !dbg !8621
  store i32 %and25, i32* %todo_spec24, align 8, !dbg !8621
  %11 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8622
  %base28 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %11, i64 0, i32 0, !dbg !8622
  %12 = load i32, i32* %rt_int, align 8, !dbg !8622
  %call36 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base28, i32 %12) #7, !dbg !8622
  %todo_spec37 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call36, i64 0, i32 8, !dbg !8622
  %13 = load i32, i32* %todo_spec37, align 8, !dbg !8622
  %tobool38 = icmp eq i32 %13, 0, !dbg !8622
  br i1 %tobool38, label %cond.end41, label %cond.true39, !dbg !8622

cond.true39:                                      ; preds = %if.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4099, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8622
  br label %cond.end41, !dbg !8622

cond.end41:                                       ; preds = %if.end12, %cond.true39
  %14 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8623
  %base45 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %14, i64 0, i32 0, !dbg !8623
  %15 = load i32, i32* %rt_int, align 8, !dbg !8623
  %call53 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base45, i32 %15) #7, !dbg !8623
  %done_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call53, i64 0, i32 9, !dbg !8623
  %16 = load i32, i32* %done_spec, align 4, !dbg !8624
  %or = or i32 %16, %5, !dbg !8624
  store i32 %or, i32* %done_spec, align 4, !dbg !8624
  %17 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !8625
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8, !dbg !8625
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 2) #7, !dbg !8625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %17, i64 32, i1 false), !dbg !8625
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8, !dbg !8625
  %18 = bitcast %struct._sd_iterator* %tmp68 to i8*, !dbg !8626
  br label %for.cond, !dbg !8629

for.cond:                                         ; preds = %if.end69, %cond.end41
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8575, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  %call54 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8630
  %tobool55 = icmp eq i8 %call54, 0, !dbg !8631
  br i1 %tobool55, label %for.end, label %for.body, !dbg !8631

for.body:                                         ; preds = %for.cond
  %19 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8632
  call void @llvm.dbg.value(metadata %struct._dep* %19, metadata !8575, metadata !DIExpression()), !dbg !8604
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %19, i64 0, i32 0, !dbg !8632
  %20 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !8632
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !8579, metadata !DIExpression()), !dbg !8633
  %21 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8634
  %base58 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %21, i64 0, i32 0, !dbg !8634
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8634
  %rt_int65 = bitcast %union.rtunion_def* %arrayidx64 to i32*, !dbg !8634
  %22 = load i32, i32* %rt_int65, align 8, !dbg !8634
  %call66 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base58, i32 %22) #7, !dbg !8634
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call66, i64 0, i32 11, !dbg !8634
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !8634
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8634
  %cfg = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !8634
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8634
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 1, !dbg !8634
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8634
  %cmp = icmp eq %struct.basic_block_def* %23, %26, !dbg !8634
  br i1 %cmp, label %if.then67, label %if.else, !dbg !8635

if.then67:                                        ; preds = %for.body
  call fastcc void @create_check_block_twin(%struct.rtx_def* %20, i8 zeroext 1) #7, !dbg !8636
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #8, !dbg !8637
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp68, %struct.rtx_def* %insn, i32 2) #7, !dbg !8637
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %18, i64 32, i1 false), !dbg !8637
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #8, !dbg !8637
  br label %if.end69, !dbg !8638

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !8639
  br label %if.end69

if.end69:                                         ; preds = %if.else, %if.then67
  br label %for.cond, !dbg !8640, !llvm.loop !8641

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* null, metadata !8577, metadata !DIExpression()), !dbg !8604
  store %struct.VEC_rtx_heap* null, %struct.VEC_rtx_heap** %priorities_roots, align 8, !dbg !8643
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %priorities_roots, metadata !8577, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call fastcc void @clear_priorities(%struct.rtx_def* %insn, %struct.VEC_rtx_heap** nonnull %priorities_roots) #7, !dbg !8644
  %27 = bitcast %struct._sd_iterator* %tmp71 to i8*, !dbg !8645
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !8645
  %28 = getelementptr inbounds %union.u, %union.u* %u145, i64 1, i32 0, i32 0, i64 0, !dbg !8645
  %rt_rtx = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !8645
  %29 = bitcast %struct._sd_iterator* %tmp162 to i8*, !dbg !8646
  %30 = bitcast %struct._dep* %_new_dep to i8*, !dbg !8647
  %31 = bitcast %struct._sd_iterator* %tmp184 to i8*, !dbg !8648
  br label %while.cond, !dbg !8649

while.cond:                                       ; preds = %cleanup, %for.end
  %twins.0 = phi %struct.rtx_def* [ null, %for.end ], [ %twins.1, %cleanup ], !dbg !8604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twins.0, metadata !8576, metadata !DIExpression()), !dbg !8604
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #8, !dbg !8650
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp71, %struct.rtx_def* %insn, i32 2) #7, !dbg !8650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %27, i64 32, i1 false), !dbg !8650
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #8, !dbg !8650
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8575, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  %call72 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8651
  %tobool73 = icmp eq i8 %call72, 0, !dbg !8651
  br i1 %tobool73, label %cleanup, label %if.end75, !dbg !8653

if.end75:                                         ; preds = %while.cond
  %32 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8654
  call void @llvm.dbg.value(metadata %struct._dep* %32, metadata !8575, metadata !DIExpression()), !dbg !8604
  %status = getelementptr inbounds %struct._dep, %struct._dep* %32, i64 0, i32 3, !dbg !8654
  %33 = load i32, i32* %status, align 4, !dbg !8654
  %and76 = and i32 %33, 258111, !dbg !8654
  %cmp77 = icmp eq i32 %and76, 0, !dbg !8654
  br i1 %cmp77, label %land.lhs.true, label %cond.true85, !dbg !8654

land.lhs.true:                                    ; preds = %if.end75
  call void @llvm.dbg.value(metadata %struct._dep* %32, metadata !8575, metadata !DIExpression()), !dbg !8604
  %and79 = and i32 %33, 16519104, !dbg !8654
  %cmp80 = icmp eq i32 %and79, 0, !dbg !8654
  br i1 %cmp80, label %cond.true85, label %land.lhs.true81, !dbg !8654

land.lhs.true81:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct._dep* %32, metadata !8575, metadata !DIExpression()), !dbg !8604
  %and83 = and i32 %33, 117440512, !dbg !8654
  %cmp84 = icmp eq i32 %and83, 16777216, !dbg !8654
  br i1 %cmp84, label %cond.end87, label %cond.true85, !dbg !8654

cond.true85:                                      ; preds = %land.lhs.true, %land.lhs.true81, %if.end75
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8654
  %.pre = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8655
  br label %cond.end87, !dbg !8654

cond.end87:                                       ; preds = %land.lhs.true81, %cond.true85
  %34 = phi %struct._dep* [ %32, %land.lhs.true81 ], [ %.pre, %cond.true85 ], !dbg !8655
  call void @llvm.dbg.value(metadata %struct._dep* %34, metadata !8575, metadata !DIExpression()), !dbg !8604
  %pro89 = getelementptr inbounds %struct._dep, %struct._dep* %34, i64 0, i32 0, !dbg !8655
  %35 = load %struct.rtx_def*, %struct.rtx_def** %pro89, align 8, !dbg !8655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %35, metadata !8583, metadata !DIExpression()), !dbg !8645
  %call90 = call fastcc zeroext i8 @sel_sched_p() #7, !dbg !8656
  %tobool91 = icmp eq i8 %call90, 0, !dbg !8656
  br i1 %tobool91, label %cond.false96, label %cond.true92, !dbg !8656

cond.true92:                                      ; preds = %cond.end87
  %call93 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %35) #6, !dbg !8656
  %tobool95 = icmp eq i8 %call93, 0, !dbg !8656
  br i1 %tobool95, label %cond.true92.land.lhs.true111_crit_edge, label %cond.true138, !dbg !8656

cond.true92.land.lhs.true111_crit_edge:           ; preds = %cond.true92
  br label %land.lhs.true111, !dbg !8656

cond.false96:                                     ; preds = %cond.end87
  %36 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8656
  %base99 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %36, i64 0, i32 0, !dbg !8656
  %arrayidx105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8656
  %rt_int106 = bitcast %union.rtunion_def* %arrayidx105 to i32*, !dbg !8656
  %37 = load i32, i32* %rt_int106, align 8, !dbg !8656
  %call107 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base99, i32 %37) #7, !dbg !8656
  %recovery_block108 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call107, i64 0, i32 11, !dbg !8656
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block108, align 8, !dbg !8656
  %cmp109 = icmp eq %struct.basic_block_def* %38, null, !dbg !8656
  br i1 %cmp109, label %land.lhs.true111, label %cond.true138, !dbg !8656

land.lhs.true111:                                 ; preds = %cond.true92.land.lhs.true111_crit_edge, %cond.false96
  %39 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8656
  %base114 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %39, i64 0, i32 0, !dbg !8656
  %arrayidx120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8656
  %rt_int121 = bitcast %union.rtunion_def* %arrayidx120 to i32*, !dbg !8656
  %40 = load i32, i32* %rt_int121, align 8, !dbg !8656
  %call122 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base114, i32 %40) #7, !dbg !8656
  %orig_pat = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call122, i64 0, i32 12, !dbg !8656
  %41 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat, align 8, !dbg !8656
  %tobool123 = icmp eq %struct.rtx_def* %41, null, !dbg !8656
  br i1 %tobool123, label %land.lhs.true124, label %cond.true138, !dbg !8656

land.lhs.true124:                                 ; preds = %land.lhs.true111
  %42 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8656
  %base127 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %42, i64 0, i32 0, !dbg !8656
  %43 = load i32, i32* %rt_int121, align 8, !dbg !8656
  %call135 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base127, i32 %43) #7, !dbg !8656
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call135, i64 0, i32 4, !dbg !8656
  %44 = load i32, i32* %queue_index, align 8, !dbg !8656
  %cmp136 = icmp eq i32 %44, -2, !dbg !8656
  br i1 %cmp136, label %cond.end140, label %cond.true138, !dbg !8656

cond.true138:                                     ; preds = %cond.true92, %land.lhs.true111, %cond.false96, %land.lhs.true124
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8656
  br label %cond.end140, !dbg !8656

cond.end140:                                      ; preds = %land.lhs.true124, %cond.true138
  %arrayidx144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, i32 0, i32 1, !dbg !8657
  %rt_bb = bitcast %struct.object_block** %arrayidx144 to %struct.basic_block_def**, !dbg !8657
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8657
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %45, metadata !8586, metadata !DIExpression()), !dbg !8645
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8658
  %call148 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %46) #6, !dbg !8659
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i64 0, i32 7, !dbg !8660
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8660
  %47 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8660
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %47, i64 0, i32 1, !dbg !8660
  %48 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8660
  %call149 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call148, %struct.rtx_def* %48) #6, !dbg !8661
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call149, metadata !8585, metadata !DIExpression()), !dbg !8645
  call fastcc void @haifa_init_insn(%struct.rtx_def* %call149) #7, !dbg !8662
  call void @sd_copy_back_deps(%struct.rtx_def* %call149, %struct.rtx_def* %insn, i8 zeroext 1) #6, !dbg !8663
  %49 = load i32, i32* @sched_verbose, align 4, !dbg !8664
  %tobool150 = icmp eq i32 %49, 0, !dbg !8664
  br i1 %tobool150, label %if.end160, label %land.lhs.true151, !dbg !8666

land.lhs.true151:                                 ; preds = %cond.end140
  %50 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !8667
  %dump = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %50, i64 0, i32 1, !dbg !8668
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %dump, align 8, !dbg !8668
  %tobool152 = icmp eq %struct._IO_FILE* %51, null, !dbg !8667
  br i1 %tobool152, label %if.end160, label %if.then153, !dbg !8669

if.then153:                                       ; preds = %land.lhs.true151
  %arrayidx157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call149, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8670
  %rt_int158 = bitcast %union.rtunion_def* %arrayidx157 to i32*, !dbg !8670
  %52 = load i32, i32* %rt_int158, align 8, !dbg !8670
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i64 0, i32 9, !dbg !8671
  %53 = load i32, i32* %index, align 8, !dbg !8671
  %call159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %51, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.51, i64 0, i64 0), i32 %52, i32 %53) #6, !dbg !8672
  br label %if.end160, !dbg !8672

if.end160:                                        ; preds = %land.lhs.true151, %cond.end140, %if.then153
  %call161 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %call149, %struct.rtx_def* %twins.0) #6, !dbg !8673
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call161, metadata !8576, metadata !DIExpression()), !dbg !8604
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #8, !dbg !8674
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp162, %struct.rtx_def* %insn, i32 2) #7, !dbg !8674
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %29, i64 32, i1 false), !dbg !8674
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #8, !dbg !8674
  br label %for.cond163, !dbg !8674

for.cond163:                                      ; preds = %for.inc, %if.end160
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8575, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  %call164 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8675
  %tobool165 = icmp eq i8 %call164, 0, !dbg !8674
  br i1 %tobool165, label %for.end183, label %for.body166, !dbg !8674

for.body166:                                      ; preds = %for.cond163
  %54 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8676
  call void @llvm.dbg.value(metadata %struct._dep* %54, metadata !8575, metadata !DIExpression()), !dbg !8604
  %pro168 = getelementptr inbounds %struct._dep, %struct._dep* %54, i64 0, i32 0, !dbg !8676
  %55 = load %struct.rtx_def*, %struct.rtx_def** %pro168, align 8, !dbg !8676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %55, metadata !8587, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata %struct._dep* %54, metadata !8575, metadata !DIExpression()), !dbg !8604
  %type = getelementptr inbounds %struct._dep, %struct._dep* %54, i64 0, i32 2, !dbg !8678
  %56 = load i32, i32* %type, align 8, !dbg !8678
  %cmp169 = icmp eq i32 %56, 0, !dbg !8678
  br i1 %cmp169, label %cond.end173, label %cond.true171, !dbg !8678

cond.true171:                                     ; preds = %for.body166
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4165, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8678
  br label %cond.end173, !dbg !8678

cond.end173:                                      ; preds = %for.body166, %cond.true171
  %arrayidx177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i64 0, i32 1, i32 0, i32 1, !dbg !8679
  %rt_bb178 = bitcast %struct.object_block** %arrayidx177 to %struct.basic_block_def**, !dbg !8679
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb178, align 8, !dbg !8679
  %cmp179 = icmp eq %struct.basic_block_def* %57, %45, !dbg !8680
  br i1 %cmp179, label %if.then181, label %for.inc, !dbg !8681

if.then181:                                       ; preds = %cond.end173
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8, !dbg !8682
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8594, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8591, metadata !DIExpression(DW_OP_deref)), !dbg !8647
  call void @init_dep(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %55, %struct.rtx_def* %call149, i32 0) #6, !dbg !8683
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8591, metadata !DIExpression(DW_OP_deref)), !dbg !8647
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8684
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8, !dbg !8685
  br label %for.inc, !dbg !8686

for.inc:                                          ; preds = %cond.end173, %if.then181
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !8675
  br label %for.cond163, !dbg !8675, !llvm.loop !8687

for.end183:                                       ; preds = %for.cond163
  call fastcc void @process_insn_forw_deps_be_in_spec(%struct.rtx_def* %insn, %struct.rtx_def* %call149, i32 %5) #7, !dbg !8689
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #8, !dbg !8690
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp184, %struct.rtx_def* %insn, i32 2) #7, !dbg !8690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %31, i64 32, i1 false), !dbg !8690
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #8, !dbg !8690
  br label %for.cond185, !dbg !8691

for.cond185:                                      ; preds = %if.end199, %for.end183
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8575, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  %call186 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8692
  %tobool187 = icmp eq i8 %call186, 0, !dbg !8693
  br i1 %tobool187, label %cleanup.loopexit, label %for.body188, !dbg !8693

for.body188:                                      ; preds = %for.cond185
  %58 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8694
  call void @llvm.dbg.value(metadata %struct._dep* %58, metadata !8575, metadata !DIExpression()), !dbg !8604
  %pro190 = getelementptr inbounds %struct._dep, %struct._dep* %58, i64 0, i32 0, !dbg !8694
  %59 = load %struct.rtx_def*, %struct.rtx_def** %pro190, align 8, !dbg !8694
  call void @llvm.dbg.value(metadata %struct.rtx_def* %59, metadata !8595, metadata !DIExpression()), !dbg !8695
  %arrayidx193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i64 0, i32 1, i32 0, i32 1, !dbg !8696
  %rt_bb194 = bitcast %struct.object_block** %arrayidx193 to %struct.basic_block_def**, !dbg !8696
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb194, align 8, !dbg !8696
  %cmp195 = icmp eq %struct.basic_block_def* %60, %45, !dbg !8698
  br i1 %cmp195, label %if.then197, label %if.else198, !dbg !8699

if.then197:                                       ; preds = %for.body188
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call void @sd_delete_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #6, !dbg !8700
  br label %if.end199, !dbg !8700

if.else198:                                       ; preds = %for.body188
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8574, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !8701
  br label %if.end199

if.end199:                                        ; preds = %if.else198, %if.then197
  br label %for.cond185, !dbg !8702, !llvm.loop !8703

cleanup.loopexit:                                 ; preds = %for.cond185
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %while.cond
  %twins.1 = phi %struct.rtx_def* [ %twins.0, %while.cond ], [ %call161, %cleanup.loopexit ], !dbg !8604
  %cleanup.dest.slot.0 = phi i1 [ false, %while.cond ], [ true, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twins.1, metadata !8576, metadata !DIExpression()), !dbg !8604
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.cond203.preheader, !llvm.loop !8705

while.cond203.preheader:                          ; preds = %cleanup
  %twins.1.lcssa = phi %struct.rtx_def* [ %twins.1, %cleanup ], !dbg !8604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twins.1.lcssa, metadata !8576, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twins.1.lcssa, metadata !8576, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twins.1.lcssa, metadata !8576, metadata !DIExpression()), !dbg !8604
  %61 = bitcast %struct._dep* %_new_dep211 to i8*, !dbg !8707
  br label %while.cond203, !dbg !8708

while.cond203:                                    ; preds = %while.cond203.preheader, %while.body205
  %twins.2 = phi %struct.rtx_def* [ %64, %while.body205 ], [ %twins.1.lcssa, %while.cond203.preheader ], !dbg !8604
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twins.2, metadata !8576, metadata !DIExpression()), !dbg !8604
  %tobool204 = icmp eq %struct.rtx_def* %twins.2, null, !dbg !8708
  br i1 %tobool204, label %while.end217, label %while.body205, !dbg !8708

while.body205:                                    ; preds = %while.cond203
  %arrayidx209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %twins.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8709
  %rt_rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**, !dbg !8709
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx210, align 8, !dbg !8709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %62, metadata !8599, metadata !DIExpression()), !dbg !8710
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #8, !dbg !8711
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep211, metadata !8603, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep211, metadata !8601, metadata !DIExpression(DW_OP_deref)), !dbg !8707
  call void @init_dep(%struct._dep* nonnull %_new_dep211, %struct.rtx_def* %insn, %struct.rtx_def* %62, i32 11) #6, !dbg !8712
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep211, metadata !8601, metadata !DIExpression(DW_OP_deref)), !dbg !8707
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep211, i8 zeroext 0) #6, !dbg !8713
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #8, !dbg !8714
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %twins.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8715
  %rt_rtx216 = bitcast %union.rtunion_def* %63 to %struct.rtx_def**, !dbg !8715
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx216, align 8, !dbg !8715
  call void @llvm.dbg.value(metadata %struct.rtx_def* %64, metadata !8599, metadata !DIExpression()), !dbg !8710
  call void @free_INSN_LIST_node(%struct.rtx_def* nonnull %twins.2) #6, !dbg !8716
  call void @llvm.dbg.value(metadata %struct.rtx_def* %64, metadata !8576, metadata !DIExpression()), !dbg !8604
  br label %while.cond203, !dbg !8708, !llvm.loop !8717

while.end217:                                     ; preds = %while.cond203
  %65 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %priorities_roots, align 8, !dbg !8719
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* %65, metadata !8577, metadata !DIExpression()), !dbg !8604
  call fastcc void @calc_priorities(%struct.VEC_rtx_heap* %65) #7, !dbg !8720
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %priorities_roots, metadata !8577, metadata !DIExpression(DW_OP_deref)), !dbg !8604
  call fastcc void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** nonnull %priorities_roots) #7, !dbg !8721
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8722
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8722
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !8722
  ret void, !dbg !8722
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_check_block_twin(%struct.rtx_def* %insn, i8 zeroext %mutate_p) unnamed_addr #5 !dbg !8723 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %_new_dep = alloca %struct._dep, align 8
  %sd_it141 = alloca %struct._sd_iterator, align 8
  %dep142 = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %_dep2 = alloca %struct._dep, align 8
  %tmp238 = alloca %struct._sd_iterator, align 8
  %tmp265 = alloca %struct._sd_iterator, align 8
  %tmp391 = alloca %struct._sd_iterator, align 8
  %priorities_roots = alloca %struct.VEC_rtx_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !8725, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8 %mutate_p, metadata !8726, metadata !DIExpression()), !dbg !8763
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !8764
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !8764
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !8765
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8765
  %2 = bitcast %struct._dep* %_new_dep to i8*, !dbg !8766
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8766
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8735, metadata !DIExpression()), !dbg !8763
  %3 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8767
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %3, i64 0, i32 0, !dbg !8767
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8767
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8767
  %4 = load i32, i32* %rt_int, align 8, !dbg !8767
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %4) #7, !dbg !8767
  %orig_pat = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 12, !dbg !8767
  %5 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat, align 8, !dbg !8767
  %cmp = icmp eq %struct.rtx_def* %5, null, !dbg !8767
  br i1 %cmp, label %cond.true1, label %cond.end3, !dbg !8767

cond.true1:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8767
  br label %cond.end3, !dbg !8767

cond.end3:                                        ; preds = %entry, %cond.true1
  %tobool5 = icmp eq i8 %mutate_p, 0, !dbg !8768
  %6 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8770
  %base20 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %6, i64 0, i32 0, !dbg !8770
  %7 = load i32, i32* %rt_int, align 8, !dbg !8770
  %call28 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base20, i32 %7) #7, !dbg !8770
  br i1 %tobool5, label %cond.end10, label %cond.end22, !dbg !8771

cond.end10:                                       ; preds = %cond.end3
  %todo_spec17 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call28, i64 0, i32 8, !dbg !8772
  br label %if.end, !dbg !8773

cond.end22:                                       ; preds = %cond.end3
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call28, i64 0, i32 11, !dbg !8774
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !8774
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8774
  %cfg = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !8774
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8774
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 1, !dbg !8774
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8774
  %cmp29 = icmp eq %struct.basic_block_def* %8, %11, !dbg !8774
  br i1 %cmp29, label %land.lhs.true, label %cond.true43, !dbg !8774

land.lhs.true:                                    ; preds = %cond.end22
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8774
  %base32 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %12, i64 0, i32 0, !dbg !8774
  %13 = load i32, i32* %rt_int, align 8, !dbg !8774
  %call40 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base32, i32 %13) #7, !dbg !8774
  %todo_spec41 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call40, i64 0, i32 8, !dbg !8774
  %14 = load i32, i32* %todo_spec41, align 8, !dbg !8774
  %and = and i32 %14, 16777215, !dbg !8774
  %cmp42 = icmp eq i32 %and, 0, !dbg !8774
  br i1 %cmp42, label %cond.end45, label %cond.true43, !dbg !8774

cond.true43:                                      ; preds = %land.lhs.true, %cond.end22
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4464, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8774
  br label %cond.end45, !dbg !8774

cond.end45:                                       ; preds = %land.lhs.true, %cond.true43
  %15 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8776
  %base49 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %15, i64 0, i32 0, !dbg !8776
  %16 = load i32, i32* %rt_int, align 8, !dbg !8776
  %call57 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base49, i32 %16) #7, !dbg !8776
  %check_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call57, i64 0, i32 10, !dbg !8776
  br label %if.end

if.end:                                           ; preds = %cond.end45, %cond.end10
  %todo_spec.0.in = phi i32* [ %check_spec, %cond.end45 ], [ %todo_spec17, %cond.end10 ]
  %todo_spec.0 = load i32, i32* %todo_spec.0.in, align 8, !dbg !8770
  call void @llvm.dbg.value(metadata i32 %todo_spec.0, metadata !8736, metadata !DIExpression()), !dbg !8763
  %and58 = and i32 %todo_spec.0, 16777215, !dbg !8777
  call void @llvm.dbg.value(metadata i32 %and58, metadata !8736, metadata !DIExpression()), !dbg !8763
  br i1 %tobool5, label %lor.lhs.false, label %if.then63, !dbg !8778

lor.lhs.false:                                    ; preds = %if.end
  %17 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 29), align 8, !dbg !8780
  %call60 = tail call zeroext i8 %17(i32 %and58) #6, !dbg !8781
  %tobool62 = icmp eq i8 %call60, 0, !dbg !8781
  br i1 %tobool62, label %if.else65, label %if.then63, !dbg !8782

if.then63:                                        ; preds = %lor.lhs.false, %if.end
  %call64 = tail call %struct.basic_block_def* @sched_create_recovery_block(%struct.basic_block_def** null) #7, !dbg !8783
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call64, metadata !8727, metadata !DIExpression()), !dbg !8763
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call64, i64 0, i32 7, !dbg !8785
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8785
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8785
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i64 0, i32 0, !dbg !8785
  %19 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8785
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !8728, metadata !DIExpression()), !dbg !8763
  br label %if.end69, !dbg !8786

if.else65:                                        ; preds = %lor.lhs.false
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8787
  %cfg67 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 1, !dbg !8787
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg67, align 8, !dbg !8787
  %x_exit_block_ptr68 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i64 0, i32 1, !dbg !8787
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr68, align 8, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %22, metadata !8727, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8728, metadata !DIExpression()), !dbg !8763
  br label %if.end69

if.end69:                                         ; preds = %if.else65, %if.then63
  %label.0 = phi %struct.rtx_def* [ %19, %if.then63 ], [ null, %if.else65 ], !dbg !8789
  %rec.0 = phi %struct.basic_block_def* [ %call64, %if.then63 ], [ %22, %if.else65 ], !dbg !8789
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %rec.0, metadata !8727, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.0, metadata !8728, metadata !DIExpression()), !dbg !8763
  %23 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 1, i32 30), align 8, !dbg !8790
  %call70 = tail call %struct.rtx_def* %23(%struct.rtx_def* %insn, %struct.rtx_def* %label.0, i32 %and58) #6, !dbg !8791
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call70, metadata !8729, metadata !DIExpression()), !dbg !8763
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8792
  %cfg72 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !8792
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg72, align 8, !dbg !8792
  %x_exit_block_ptr73 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 1, !dbg !8792
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr73, align 8, !dbg !8792
  %cmp74 = icmp eq %struct.basic_block_def* %rec.0, %26, !dbg !8794
  br i1 %cmp74, label %if.else85, label %if.then76, !dbg !8795

if.then76:                                        ; preds = %if.end69
  %call77 = tail call %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %call70, %struct.rtx_def* %insn) #6, !dbg !8796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call77, metadata !8729, metadata !DIExpression()), !dbg !8763
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call77, i64 0, i32 1, !dbg !8798
  %arrayidx80 = getelementptr inbounds %union.u, %union.u* %u78, i64 1, i32 0, i32 1, !dbg !8798
  %rt_rtx = bitcast %struct.object_block** %arrayidx80 to %struct.rtx_def**, !dbg !8798
  store %struct.rtx_def* %label.0, %struct.rtx_def** %rt_rtx, align 8, !dbg !8799
  %arrayidx83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %label.0, i64 0, i32 1, i32 0, i32 2, !dbg !8800
  %rt_int84 = bitcast i64* %arrayidx83 to i32*, !dbg !8800
  %27 = load i32, i32* %rt_int84, align 8, !dbg !8801
  %inc = add nsw i32 %27, 1, !dbg !8801
  store i32 %inc, i32* %rt_int84, align 8, !dbg !8801
  br label %if.end87, !dbg !8802

if.else85:                                        ; preds = %if.end69
  %call86 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call70, %struct.rtx_def* %insn) #6, !dbg !8803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !8729, metadata !DIExpression()), !dbg !8763
  br label %if.end87

if.end87:                                         ; preds = %if.else85, %if.then76
  %check.0 = phi %struct.rtx_def* [ %call77, %if.then76 ], [ %call86, %if.else85 ], !dbg !8804
  call void @llvm.dbg.value(metadata %struct.rtx_def* %check.0, metadata !8729, metadata !DIExpression()), !dbg !8763
  tail call fastcc void @haifa_init_insn(%struct.rtx_def* %check.0) #7, !dbg !8805
  %28 = load i32, i32* @sched_ready_n_insns, align 4, !dbg !8806
  %cmp88 = icmp eq i32 %28, -1, !dbg !8806
  br i1 %cmp88, label %cond.true90, label %cond.end92, !dbg !8806

cond.true90:                                      ; preds = %if.end87
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4503, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8806
  %.pre = load i32, i32* @sched_ready_n_insns, align 4, !dbg !8807
  br label %cond.end92, !dbg !8806

cond.end92:                                       ; preds = %if.end87, %cond.true90
  %29 = phi i32 [ %28, %if.end87 ], [ %.pre, %cond.true90 ], !dbg !8807
  %add = add nsw i32 %29, 1, !dbg !8808
  tail call void @sched_extend_ready_list(i32 %add) #7, !dbg !8809
  %30 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !8810
  %add_remove_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %30, i64 0, i32 14, !dbg !8812
  %31 = load void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)** %add_remove_insn, align 8, !dbg !8812
  %tobool94 = icmp eq void (%struct.rtx_def*, i32)* %31, null, !dbg !8810
  br i1 %tobool94, label %if.end97, label %if.then95, !dbg !8813

if.then95:                                        ; preds = %cond.end92
  tail call void %31(%struct.rtx_def* %insn, i32 0) #6, !dbg !8814
  br label %if.end97, !dbg !8814

if.end97:                                         ; preds = %cond.end92, %if.then95
  %32 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8815
  %base100 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %32, i64 0, i32 0, !dbg !8815
  %arrayidx106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %check.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8815
  %rt_int107 = bitcast %union.rtunion_def* %arrayidx106 to i32*, !dbg !8815
  %33 = load i32, i32* %rt_int107, align 8, !dbg !8815
  %call108 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base100, i32 %33) #7, !dbg !8815
  %recovery_block109 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call108, i64 0, i32 11, !dbg !8815
  store %struct.basic_block_def* %rec.0, %struct.basic_block_def** %recovery_block109, align 8, !dbg !8816
  %34 = load i32, i32* @sched_verbose, align 4, !dbg !8817
  %tobool110 = icmp eq i32 %34, 0, !dbg !8817
  br i1 %tobool110, label %if.end117, label %land.lhs.true111, !dbg !8819

land.lhs.true111:                                 ; preds = %if.end97
  %35 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !8820
  %dump = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %35, i64 0, i32 1, !dbg !8821
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %dump, align 8, !dbg !8821
  %tobool112 = icmp eq %struct._IO_FILE* %36, null, !dbg !8820
  br i1 %tobool112, label %if.end117, label %if.then113, !dbg !8822

if.then113:                                       ; preds = %land.lhs.true111
  %37 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !8823
  %print_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %37, i64 0, i32 5, !dbg !8824
  %38 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn, align 8, !dbg !8824
  %call115 = tail call i8* %38(%struct.rtx_def* %check.0, i32 0) #6, !dbg !8825
  %call116 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %36, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.50, i64 0, i64 0), i8* %call115) #6, !dbg !8826
  br label %if.end117, !dbg !8826

if.end117:                                        ; preds = %land.lhs.true111, %if.end97, %if.then113
  %39 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8827
  %base120 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %39, i64 0, i32 0, !dbg !8827
  %40 = load i32, i32* %rt_int, align 8, !dbg !8827
  %call128 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base120, i32 %40) #7, !dbg !8827
  %orig_pat129 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call128, i64 0, i32 12, !dbg !8827
  %41 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat129, align 8, !dbg !8827
  %tobool130 = icmp eq %struct.rtx_def* %41, null, !dbg !8827
  br i1 %tobool130, label %cond.true131, label %cond.end133, !dbg !8827

cond.true131:                                     ; preds = %if.end117
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8827
  br label %cond.end133, !dbg !8827

cond.end133:                                      ; preds = %if.end117, %cond.true131
  %42 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8828
  %cfg136 = getelementptr inbounds %struct.function, %struct.function* %42, i64 0, i32 1, !dbg !8828
  %43 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg136, align 8, !dbg !8828
  %x_exit_block_ptr137 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %43, i64 0, i32 1, !dbg !8828
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr137, align 8, !dbg !8828
  %cmp138 = icmp eq %struct.basic_block_def* %rec.0, %44, !dbg !8829
  br i1 %cmp138, label %if.else177, label %if.then140, !dbg !8830

if.then140:                                       ; preds = %cond.end133
  %45 = bitcast %struct._sd_iterator* %sd_it141 to i8*, !dbg !8831
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #8, !dbg !8831
  %46 = bitcast %struct._dep** %dep142 to i8*, !dbg !8832
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8, !dbg !8832
  %47 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !8833
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #8, !dbg !8833
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 8) #7, !dbg !8833
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* nonnull align 8 %47, i64 32, i1 false), !dbg !8833
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #8, !dbg !8833
  %48 = bitcast %struct._dep* %_dep2 to i8*, !dbg !8834
  br label %for.cond, !dbg !8833

for.cond:                                         ; preds = %for.inc, %if.then140
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it141, metadata !8737, metadata !DIExpression(DW_OP_deref)), !dbg !8835
  call void @llvm.dbg.value(metadata %struct._dep** %dep142, metadata !8740, metadata !DIExpression(DW_OP_deref)), !dbg !8835
  %call143 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it141, %struct._dep** nonnull %dep142) #7, !dbg !8836
  %tobool144 = icmp eq i8 %call143, 0, !dbg !8833
  br i1 %tobool144, label %for.end, label %for.body, !dbg !8833

for.body:                                         ; preds = %for.cond
  %49 = load %struct._dep*, %struct._dep** %dep142, align 8, !dbg !8837
  call void @llvm.dbg.value(metadata %struct._dep* %49, metadata !8740, metadata !DIExpression()), !dbg !8835
  %status = getelementptr inbounds %struct._dep, %struct._dep* %49, i64 0, i32 3, !dbg !8837
  %50 = load i32, i32* %status, align 4, !dbg !8837
  %and145 = and i32 %50, 33554432, !dbg !8838
  %cmp146 = icmp eq i32 %and145, 0, !dbg !8839
  br i1 %cmp146, label %for.inc, label %if.then148, !dbg !8840

if.then148:                                       ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8, !dbg !8841
  call void @llvm.dbg.value(metadata %struct._dep* %_dep2, metadata !8746, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata %struct._dep* %49, metadata !8740, metadata !DIExpression()), !dbg !8835
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %49, i64 0, i32 0, !dbg !8842
  %51 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !8842
  call void @llvm.dbg.value(metadata %struct._dep* %_dep2, metadata !8741, metadata !DIExpression(DW_OP_deref)), !dbg !8834
  call void @init_dep(%struct._dep* nonnull %_dep2, %struct.rtx_def* %51, %struct.rtx_def* %check.0, i32 0) #6, !dbg !8843
  call void @llvm.dbg.value(metadata %struct._dep* %_dep2, metadata !8741, metadata !DIExpression(DW_OP_deref)), !dbg !8834
  call void @sd_add_dep(%struct._dep* nonnull %_dep2, i8 zeroext 1) #6, !dbg !8844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8, !dbg !8845
  br label %for.inc, !dbg !8846

for.inc:                                          ; preds = %for.body, %if.then148
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it141, metadata !8737, metadata !DIExpression(DW_OP_deref)), !dbg !8835
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it141) #7, !dbg !8836
  br label %for.cond, !dbg !8836, !llvm.loop !8847

for.end:                                          ; preds = %for.cond
  %52 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8849
  %base152 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %52, i64 0, i32 0, !dbg !8849
  %53 = load i32, i32* %rt_int, align 8, !dbg !8849
  %call160 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base152, i32 %53) #7, !dbg !8849
  %orig_pat161 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call160, i64 0, i32 12, !dbg !8849
  %54 = load %struct.rtx_def*, %struct.rtx_def** %orig_pat161, align 8, !dbg !8849
  %il162 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %rec.0, i64 0, i32 7, !dbg !8850
  %rtl163 = bitcast %union.basic_block_il_dependent* %il162 to %struct.rtl_bb_info**, !dbg !8850
  %55 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl163, align 8, !dbg !8850
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %55, i64 0, i32 1, !dbg !8850
  %56 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8850
  %call164 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %54, %struct.rtx_def* %56) #6, !dbg !8851
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call164, metadata !8730, metadata !DIExpression()), !dbg !8763
  call fastcc void @haifa_init_insn(%struct.rtx_def* %call164) #7, !dbg !8852
  %57 = load i32, i32* @sched_verbose, align 4, !dbg !8853
  %tobool165 = icmp eq i32 %57, 0, !dbg !8853
  br i1 %tobool165, label %if.end176, label %land.lhs.true166, !dbg !8855

land.lhs.true166:                                 ; preds = %for.end
  %58 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !8856
  %dump167 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %58, i64 0, i32 1, !dbg !8857
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %dump167, align 8, !dbg !8857
  %tobool168 = icmp eq %struct._IO_FILE* %59, null, !dbg !8856
  br i1 %tobool168, label %if.end176, label %if.then169, !dbg !8858

if.then169:                                       ; preds = %land.lhs.true166
  %arrayidx173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call164, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8859
  %rt_int174 = bitcast %union.rtunion_def* %arrayidx173 to i32*, !dbg !8859
  %60 = load i32, i32* %rt_int174, align 8, !dbg !8859
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %rec.0, i64 0, i32 9, !dbg !8860
  %61 = load i32, i32* %index, align 8, !dbg !8860
  %call175 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %59, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.51, i64 0, i64 0), i32 %60, i32 %61) #6, !dbg !8861
  br label %if.end176, !dbg !8861

if.end176:                                        ; preds = %land.lhs.true166, %for.end, %if.then169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8, !dbg !8862
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #8, !dbg !8862
  br label %if.end220, !dbg !8863

if.else177:                                       ; preds = %cond.end133
  %62 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8864
  %base180 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %62, i64 0, i32 0, !dbg !8864
  %63 = load i32, i32* %rt_int, align 8, !dbg !8864
  %call188 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base180, i32 %63) #7, !dbg !8864
  %orig_pat189 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call188, i64 0, i32 12, !dbg !8864
  %64 = bitcast %struct.rtx_def** %orig_pat189 to i64*, !dbg !8864
  %65 = load i64, i64* %64, align 8, !dbg !8864
  %66 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8866
  %base192 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %66, i64 0, i32 0, !dbg !8866
  %67 = load i32, i32* %rt_int107, align 8, !dbg !8866
  %call200 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base192, i32 %67) #7, !dbg !8866
  %orig_pat201 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call200, i64 0, i32 12, !dbg !8866
  %68 = bitcast %struct.rtx_def** %orig_pat201 to i64*, !dbg !8867
  store i64 %65, i64* %68, align 8, !dbg !8867
  %69 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !8868
  %base204 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %69, i64 0, i32 0, !dbg !8868
  %70 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !8868
  %base210 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %70, i64 0, i32 0, !dbg !8868
  %71 = load i32, i32* %rt_int107, align 8, !dbg !8868
  %call218 = tail call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base210, i32 %71) #7, !dbg !8868
  %call219 = tail call fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %base204, i32 %call218) #7, !dbg !8868
  %has_internal_dep = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call219, i64 0, i32 1, !dbg !8868
  store i32 1, i32* %has_internal_dep, align 4, !dbg !8869
  call void @llvm.dbg.value(metadata %struct.rtx_def* %check.0, metadata !8730, metadata !DIExpression()), !dbg !8763
  br label %if.end220

if.end220:                                        ; preds = %if.else177, %if.end176
  %twin.0 = phi %struct.rtx_def* [ %call164, %if.end176 ], [ %check.0, %if.else177 ], !dbg !8870
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twin.0, metadata !8730, metadata !DIExpression()), !dbg !8763
  call void @sd_copy_back_deps(%struct.rtx_def* %twin.0, %struct.rtx_def* %insn, i8 zeroext 1) #6, !dbg !8871
  %72 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8872
  %cfg222 = getelementptr inbounds %struct.function, %struct.function* %72, i64 0, i32 1, !dbg !8872
  %73 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg222, align 8, !dbg !8872
  %x_exit_block_ptr223 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %73, i64 0, i32 1, !dbg !8872
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr223, align 8, !dbg !8872
  %cmp224 = icmp eq %struct.basic_block_def* %rec.0, %74, !dbg !8873
  br i1 %cmp224, label %if.end237, label %if.then226, !dbg !8874

if.then226:                                       ; preds = %if.end220
  %arrayidx229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %check.0, i64 0, i32 1, i32 0, i32 1, !dbg !8875
  %rt_bb = bitcast %struct.object_block** %arrayidx229 to %struct.basic_block_def**, !dbg !8875
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8875
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %75, metadata !8747, metadata !DIExpression()), !dbg !8876
  %76 = load %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)** @sched_split_block, align 8, !dbg !8877
  %call230 = call %struct.basic_block_def* %76(%struct.basic_block_def* %75, %struct.rtx_def* %check.0) #6, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call230, metadata !8750, metadata !DIExpression()), !dbg !8876
  call void @sched_create_recovery_edges(%struct.basic_block_def* %75, %struct.basic_block_def* %rec.0, %struct.basic_block_def* %call230) #7, !dbg !8878
  %77 = load void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !8879
  call void %77(%struct.basic_block_def* %call230, %struct.basic_block_def* %75) #6, !dbg !8879
  %78 = load void (%struct.basic_block_def*, %struct.basic_block_def*)*, void (%struct.basic_block_def*, %struct.basic_block_def*)** @sched_init_only_bb, align 8, !dbg !8880
  %79 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8881
  %cfg232 = getelementptr inbounds %struct.function, %struct.function* %79, i64 0, i32 1, !dbg !8881
  %80 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg232, align 8, !dbg !8881
  %x_exit_block_ptr233 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %80, i64 0, i32 1, !dbg !8881
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr233, align 8, !dbg !8881
  call void %78(%struct.basic_block_def* %rec.0, %struct.basic_block_def* %81) #6, !dbg !8880
  %il234 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %rec.0, i64 0, i32 7, !dbg !8882
  %rtl235 = bitcast %union.basic_block_il_dependent* %il234 to %struct.rtl_bb_info**, !dbg !8882
  %82 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl235, align 8, !dbg !8882
  %end_236 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %82, i64 0, i32 1, !dbg !8882
  %83 = load %struct.rtx_def*, %struct.rtx_def** %end_236, align 8, !dbg !8882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %83, metadata !8751, metadata !DIExpression()), !dbg !8876
  call fastcc void @haifa_init_insn(%struct.rtx_def* %83) #7, !dbg !8883
  br label %if.end237, !dbg !8884

if.end237:                                        ; preds = %if.end220, %if.then226
  %84 = bitcast %struct._sd_iterator* %tmp238 to i8*, !dbg !8885
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #8, !dbg !8885
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp238, %struct.rtx_def* %insn, i32 3) #7, !dbg !8885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %84, i64 32, i1 false), !dbg !8885
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #8, !dbg !8885
  %con = getelementptr inbounds %struct._dep, %struct._dep* %_new_dep, i64 0, i32 1, !dbg !8886
  br i1 %tobool5, label %if.end237.split.us, label %if.end237.if.end237.split_crit_edge, !dbg !8885

if.end237.if.end237.split_crit_edge:              ; preds = %if.end237
  br label %for.cond239, !dbg !8885

if.end237.split.us:                               ; preds = %if.end237
  br label %for.cond239.us, !dbg !8885

for.cond239.us:                                   ; preds = %for.inc263.us, %if.end237.split.us
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8733, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call240.us = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8889
  %tobool241.us = icmp eq i8 %call240.us, 0, !dbg !8885
  br i1 %tobool241.us, label %for.end264.us-lcssa.us, label %for.body242.us, !dbg !8885

for.body242.us:                                   ; preds = %for.cond239.us
  %85 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8890
  call void @llvm.dbg.value(metadata %struct._dep* %85, metadata !8733, metadata !DIExpression()), !dbg !8763
  %pro244.us = getelementptr inbounds %struct._dep, %struct._dep* %85, i64 0, i32 0, !dbg !8890
  %86 = load %struct.rtx_def*, %struct.rtx_def** %pro244.us, align 8, !dbg !8890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %86, metadata !8752, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct._dep* %85, metadata !8733, metadata !DIExpression()), !dbg !8763
  %status245.us = getelementptr inbounds %struct._dep, %struct._dep* %85, i64 0, i32 3, !dbg !8892
  %87 = load i32, i32* %status245.us, align 4, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %87, metadata !8756, metadata !DIExpression()), !dbg !8891
  %and246.us = and i32 %87, 258111, !dbg !8893
  %tobool247.us = icmp eq i32 %and246.us, 0, !dbg !8893
  br i1 %tobool247.us, label %if.end255.us, label %if.then248.us, !dbg !8895

if.then248.us:                                    ; preds = %for.body242.us
  %and254.us = and i32 %87, -258112, !dbg !8896
  call void @llvm.dbg.value(metadata i32 %and254.us, metadata !8756, metadata !DIExpression()), !dbg !8891
  br label %if.end255.us, !dbg !8898

if.end255.us:                                     ; preds = %if.then248.us, %for.body242.us
  %ds.0.us = phi i32 [ %and254.us, %if.then248.us ], [ %87, %for.body242.us ], !dbg !8891
  call void @llvm.dbg.value(metadata i32 %ds.0.us, metadata !8756, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct._dep* %85, metadata !8733, metadata !DIExpression()), !dbg !8763
  %type.us = getelementptr inbounds %struct._dep, %struct._dep* %85, i64 0, i32 2, !dbg !8899
  %88 = load i32, i32* %type.us, align 8, !dbg !8899
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @init_dep_1(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %86, %struct.rtx_def* %check.0, i32 %88, i32 %ds.0.us) #6, !dbg !8900
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8901
  %89 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8902
  %cfg257.us = getelementptr inbounds %struct.function, %struct.function* %89, i64 0, i32 1, !dbg !8902
  %90 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg257.us, align 8, !dbg !8902
  %x_exit_block_ptr258.us = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %90, i64 0, i32 1, !dbg !8902
  %91 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr258.us, align 8, !dbg !8902
  %cmp259.us = icmp eq %struct.basic_block_def* %rec.0, %91, !dbg !8903
  br i1 %cmp259.us, label %for.inc263.us, label %if.then261.us, !dbg !8904

if.then261.us:                                    ; preds = %if.end255.us
  store %struct.rtx_def* %twin.0, %struct.rtx_def** %con, align 8, !dbg !8905
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8906
  br label %for.inc263.us, !dbg !8907

for.inc263.us:                                    ; preds = %if.then261.us, %if.end255.us
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !8889
  br label %for.cond239.us, !dbg !8889, !llvm.loop !8908

for.end264.us-lcssa.us:                           ; preds = %for.cond239.us
  br label %for.end264, !dbg !8910

for.cond239:                                      ; preds = %for.inc263, %if.end237.if.end237.split_crit_edge
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8733, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call240 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8889
  %tobool241 = icmp eq i8 %call240, 0, !dbg !8885
  br i1 %tobool241, label %for.end264.us-lcssa, label %for.body242, !dbg !8885

for.body242:                                      ; preds = %for.cond239
  %92 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8890
  call void @llvm.dbg.value(metadata %struct._dep* %92, metadata !8733, metadata !DIExpression()), !dbg !8763
  %pro244 = getelementptr inbounds %struct._dep, %struct._dep* %92, i64 0, i32 0, !dbg !8890
  %93 = load %struct.rtx_def*, %struct.rtx_def** %pro244, align 8, !dbg !8890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %93, metadata !8752, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct._dep* %92, metadata !8733, metadata !DIExpression()), !dbg !8763
  %status245 = getelementptr inbounds %struct._dep, %struct._dep* %92, i64 0, i32 3, !dbg !8892
  %94 = load i32, i32* %status245, align 4, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %94, metadata !8756, metadata !DIExpression()), !dbg !8891
  %and246 = and i32 %94, 258111, !dbg !8893
  %tobool247 = icmp eq i32 %and246, 0, !dbg !8893
  br i1 %tobool247, label %if.end255, label %if.then248, !dbg !8895

if.then248:                                       ; preds = %for.body242
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4602, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8912
  %and254 = and i32 %94, -258112, !dbg !8896
  call void @llvm.dbg.value(metadata i32 %and254, metadata !8756, metadata !DIExpression()), !dbg !8891
  %.pre1 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8899
  br label %if.end255, !dbg !8898

if.end255:                                        ; preds = %for.body242, %if.then248
  %95 = phi %struct._dep* [ %.pre1, %if.then248 ], [ %92, %for.body242 ], !dbg !8899
  %ds.0 = phi i32 [ %and254, %if.then248 ], [ %94, %for.body242 ], !dbg !8891
  call void @llvm.dbg.value(metadata i32 %ds.0, metadata !8756, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct._dep* %95, metadata !8733, metadata !DIExpression()), !dbg !8763
  %type = getelementptr inbounds %struct._dep, %struct._dep* %95, i64 0, i32 2, !dbg !8899
  %96 = load i32, i32* %type, align 8, !dbg !8899
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @init_dep_1(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %93, %struct.rtx_def* %check.0, i32 %96, i32 %ds.0) #6, !dbg !8900
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8901
  %97 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8902
  %cfg257 = getelementptr inbounds %struct.function, %struct.function* %97, i64 0, i32 1, !dbg !8902
  %98 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg257, align 8, !dbg !8902
  %x_exit_block_ptr258 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %98, i64 0, i32 1, !dbg !8902
  %99 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr258, align 8, !dbg !8902
  %cmp259 = icmp eq %struct.basic_block_def* %rec.0, %99, !dbg !8903
  br i1 %cmp259, label %for.inc263, label %if.then261, !dbg !8904

if.then261:                                       ; preds = %if.end255
  store %struct.rtx_def* %twin.0, %struct.rtx_def** %con, align 8, !dbg !8905
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8906
  br label %for.inc263, !dbg !8907

for.inc263:                                       ; preds = %if.end255, %if.then261
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !8889
  br label %for.cond239, !dbg !8889, !llvm.loop !8908

for.end264.us-lcssa:                              ; preds = %for.cond239
  br label %for.end264, !dbg !8910

for.end264:                                       ; preds = %for.end264.us-lcssa.us, %for.end264.us-lcssa
  %100 = bitcast %struct._sd_iterator* %tmp265 to i8*, !dbg !8910
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #8, !dbg !8910
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp265, %struct.rtx_def* %insn, i32 2) #7, !dbg !8910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %100, i64 32, i1 false), !dbg !8910
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #8, !dbg !8910
  br i1 %tobool5, label %for.end264.for.end264.split_crit_edge, label %for.end264.split.us, !dbg !8913

for.end264.for.end264.split_crit_edge:            ; preds = %for.end264
  br label %for.cond266, !dbg !8913

for.end264.split.us:                              ; preds = %for.end264
  br label %for.cond266.us, !dbg !8913

for.cond266.us:                                   ; preds = %for.body269.us, %for.end264.split.us
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8733, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call267.us = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8914
  %tobool268.us = icmp eq i8 %call267.us, 0, !dbg !8916
  br i1 %tobool268.us, label %for.end279.us-lcssa.us, label %for.body269.us, !dbg !8916

for.body269.us:                                   ; preds = %for.cond266.us
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_delete_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #6, !dbg !8917
  br label %for.cond266.us, !dbg !8920, !llvm.loop !8921

for.end279.us-lcssa.us:                           ; preds = %for.cond266.us
  br label %for.end279, !dbg !8923

for.cond266:                                      ; preds = %if.end278, %for.end264.for.end264.split_crit_edge
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8733, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call267 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8914
  %tobool268 = icmp eq i8 %call267, 0, !dbg !8916
  br i1 %tobool268, label %for.end279.us-lcssa, label %for.body269, !dbg !8916

for.body269:                                      ; preds = %for.cond266
  %101 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !8924
  call void @llvm.dbg.value(metadata %struct._dep* %101, metadata !8733, metadata !DIExpression()), !dbg !8763
  %status270 = getelementptr inbounds %struct._dep, %struct._dep* %101, i64 0, i32 3, !dbg !8924
  %102 = load i32, i32* %status270, align 4, !dbg !8924
  %and271 = and i32 %102, 258111, !dbg !8925
  %tobool272 = icmp eq i32 %and271, 0, !dbg !8925
  br i1 %tobool272, label %if.else277, label %if.then276, !dbg !8926

if.then276:                                       ; preds = %for.body269
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_delete_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #6, !dbg !8917
  br label %if.end278, !dbg !8917

if.else277:                                       ; preds = %for.body269
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !8927
  br label %if.end278

if.end278:                                        ; preds = %if.else277, %if.then276
  br label %for.cond266, !dbg !8920, !llvm.loop !8921

for.end279.us-lcssa:                              ; preds = %for.cond266
  br label %for.end279, !dbg !8923

for.end279:                                       ; preds = %for.end279.us-lcssa.us, %for.end279.us-lcssa
  call void @llvm.dbg.value(metadata i32 0, metadata !8731, metadata !DIExpression()), !dbg !8763
  %103 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8923
  %base282 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %103, i64 0, i32 0, !dbg !8923
  %104 = load i32, i32* %rt_int, align 8, !dbg !8923
  %call290 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base282, i32 %104) #7, !dbg !8923
  %done_spec = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call290, i64 0, i32 9, !dbg !8923
  %105 = load i32, i32* %done_spec, align 4, !dbg !8923
  %tobool291 = icmp eq i32 %105, 0, !dbg !8923
  br i1 %tobool291, label %cond.end294, label %cond.true292, !dbg !8923

cond.true292:                                     ; preds = %for.end279
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4635, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !8923
  br label %cond.end294, !dbg !8923

cond.end294:                                      ; preds = %for.end279, %cond.true292
  %106 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8928
  %base351 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %106, i64 0, i32 0, !dbg !8928
  %107 = load i32, i32* %rt_int, align 8, !dbg !8928
  %call359 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base351, i32 %107) #7, !dbg !8928
  br i1 %tobool5, label %cond.end302, label %cond.end353, !dbg !8929

cond.end302:                                      ; preds = %cond.end294
  %todo_spec309 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call359, i64 0, i32 8, !dbg !8930
  %108 = load i32, i32* %todo_spec309, align 8, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %108, metadata !8757, metadata !DIExpression()), !dbg !8931
  %and310 = and i32 %108, 258111, !dbg !8932
  %109 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8933
  %base313 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %109, i64 0, i32 0, !dbg !8933
  %110 = load i32, i32* %rt_int, align 8, !dbg !8933
  %call321 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base313, i32 %110) #7, !dbg !8933
  %done_spec322 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call321, i64 0, i32 9, !dbg !8933
  store i32 %and310, i32* %done_spec322, align 4, !dbg !8934
  %111 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8935
  %base326 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %111, i64 0, i32 0, !dbg !8935
  %112 = load i32, i32* %rt_int107, align 8, !dbg !8935
  %call334 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base326, i32 %112) #7, !dbg !8935
  %check_spec335 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call334, i64 0, i32 10, !dbg !8935
  store i32 %and310, i32* %check_spec335, align 8, !dbg !8936
  %and336 = and i32 %108, 63, !dbg !8937
  %tobool337 = icmp eq i32 %and336, 0, !dbg !8937
  br i1 %tobool337, label %if.end341, label %if.then338, !dbg !8939

if.then338:                                       ; preds = %cond.end302
  %call339 = call i32 @get_dep_weak(i32 %108, i32 63) #6, !dbg !8940
  %call340 = call i32 @set_dep_weak(i32 0, i32 4032, i32 %call339) #6, !dbg !8941
  call void @llvm.dbg.value(metadata i32 %call340, metadata !8731, metadata !DIExpression()), !dbg !8763
  br label %if.end341, !dbg !8942

if.end341:                                        ; preds = %cond.end302, %if.then338
  %fs.0 = phi i32 [ %call340, %if.then338 ], [ 0, %cond.end302 ], !dbg !8763
  call void @llvm.dbg.value(metadata i32 %fs.0, metadata !8731, metadata !DIExpression()), !dbg !8763
  %and342 = and i32 %108, 258048, !dbg !8943
  %tobool343 = icmp eq i32 %and342, 0, !dbg !8943
  br i1 %tobool343, label %if.end373, label %if.then344, !dbg !8945

if.then344:                                       ; preds = %if.end341
  %call345 = call i32 @get_dep_weak(i32 %108, i32 258048) #6, !dbg !8946
  %call346 = call i32 @set_dep_weak(i32 %fs.0, i32 16515072, i32 %call345) #6, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %call346, metadata !8731, metadata !DIExpression()), !dbg !8763
  br label %if.end373, !dbg !8948

cond.end353:                                      ; preds = %cond.end294
  %check_spec360 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call359, i64 0, i32 10, !dbg !8949
  %113 = load i32, i32* %check_spec360, align 8, !dbg !8949
  %114 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8950
  %base363 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %114, i64 0, i32 0, !dbg !8950
  %115 = load i32, i32* %rt_int107, align 8, !dbg !8950
  %call371 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base363, i32 %115) #7, !dbg !8950
  %check_spec372 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call371, i64 0, i32 10, !dbg !8950
  store i32 %113, i32* %check_spec372, align 8, !dbg !8951
  br label %if.end373

if.end373:                                        ; preds = %if.end341, %if.then344, %cond.end353
  %fs.2 = phi i32 [ 0, %cond.end353 ], [ %call346, %if.then344 ], [ %fs.0, %if.end341 ], !dbg !8763
  call void @llvm.dbg.value(metadata i32 %fs.2, metadata !8731, metadata !DIExpression()), !dbg !8763
  call fastcc void @process_insn_forw_deps_be_in_spec(%struct.rtx_def* %insn, %struct.rtx_def* %twin.0, i32 %fs.2) #7, !dbg !8952
  %116 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8953
  %cfg375 = getelementptr inbounds %struct.function, %struct.function* %116, i64 0, i32 1, !dbg !8953
  %117 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg375, align 8, !dbg !8953
  %x_exit_block_ptr376 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %117, i64 0, i32 1, !dbg !8953
  %118 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr376, align 8, !dbg !8953
  %cmp377 = icmp eq %struct.basic_block_def* %rec.0, %118, !dbg !8955
  br i1 %cmp377, label %if.else411, label %if.then379, !dbg !8956

if.then379:                                       ; preds = %if.end373
  br i1 %tobool5, label %if.then381, label %if.else382, !dbg !8957

if.then381:                                       ; preds = %if.then379
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @init_dep(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %insn, %struct.rtx_def* %check.0, i32 0) #6, !dbg !8959
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8962
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @init_dep(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %insn, %struct.rtx_def* %twin.0, i32 11) #6, !dbg !8963
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8964
  br label %if.end410, !dbg !8965

if.else382:                                       ; preds = %if.then379
  %119 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !8966
  %dump383 = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %119, i64 0, i32 1, !dbg !8969
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %dump383, align 8, !dbg !8969
  %tobool384 = icmp eq %struct._IO_FILE* %120, null, !dbg !8966
  br i1 %tobool384, label %if.end390, label %if.then385, !dbg !8970

if.then385:                                       ; preds = %if.else382
  %121 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !8971
  %print_insn387 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %121, i64 0, i32 5, !dbg !8972
  %122 = load i8* (%struct.rtx_def*, i32)*, i8* (%struct.rtx_def*, i32)** %print_insn387, align 8, !dbg !8972
  %call388 = call i8* %122(%struct.rtx_def* %insn, i32 0) #6, !dbg !8973
  %call389 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %120, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.52, i64 0, i64 0), i8* %call388) #6, !dbg !8974
  br label %if.end390, !dbg !8974

if.end390:                                        ; preds = %if.else382, %if.then385
  %123 = bitcast %struct._sd_iterator* %tmp391 to i8*, !dbg !8975
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %123) #8, !dbg !8975
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp391, %struct.rtx_def* %insn, i32 15) #7, !dbg !8975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %123, i64 32, i1 false), !dbg !8975
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %123) #8, !dbg !8975
  br label %while.cond, !dbg !8977

while.cond:                                       ; preds = %while.body, %if.end390
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !8733, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  %call392 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !8978
  %tobool393 = icmp eq i8 %call392, 0, !dbg !8977
  br i1 %tobool393, label %while.end, label %while.body, !dbg !8977

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_delete_dep(%struct._sd_iterator* nonnull byval(%struct._sd_iterator) align 8 %sd_it) #6, !dbg !8979
  br label %while.cond, !dbg !8977, !llvm.loop !8980

while.end:                                        ; preds = %while.cond
  %124 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8982
  %base396 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %124, i64 0, i32 0, !dbg !8982
  %125 = load i32, i32* %rt_int, align 8, !dbg !8982
  %call404 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base396, i32 %125) #7, !dbg !8982
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call404, i64 0, i32 4, !dbg !8982
  %126 = load i32, i32* %queue_index, align 8, !dbg !8982
  %cmp405 = icmp eq i32 %126, -2, !dbg !8984
  br i1 %cmp405, label %if.end409, label %if.then407, !dbg !8985

if.then407:                                       ; preds = %while.end
  %call408 = call i32 @try_ready(%struct.rtx_def* %check.0) #7, !dbg !8986
  br label %if.end409, !dbg !8986

if.end409:                                        ; preds = %while.end, %if.then407
  call fastcc void @sched_remove_insn(%struct.rtx_def* %insn) #7, !dbg !8987
  br label %if.end410

if.end410:                                        ; preds = %if.end409, %if.then381
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @init_dep(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %check.0, %struct.rtx_def* %twin.0, i32 12) #6, !dbg !8988
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8989
  br label %if.end412, !dbg !8990

if.else411:                                       ; preds = %if.end373
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @init_dep_1(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %insn, %struct.rtx_def* %check.0, i32 0, i32 50331648) #6, !dbg !8991
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !8734, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !8993
  br label %if.end412

if.end412:                                        ; preds = %if.else411, %if.end410
  br i1 %tobool5, label %if.then414, label %if.end415, !dbg !8994

if.then414:                                       ; preds = %if.end412
  %127 = bitcast %struct.VEC_rtx_heap** %priorities_roots to i8*, !dbg !8995
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #8, !dbg !8995
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* null, metadata !8760, metadata !DIExpression()), !dbg !8996
  store %struct.VEC_rtx_heap* null, %struct.VEC_rtx_heap** %priorities_roots, align 8, !dbg !8997
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %priorities_roots, metadata !8760, metadata !DIExpression(DW_OP_deref)), !dbg !8996
  call fastcc void @clear_priorities(%struct.rtx_def* %twin.0, %struct.VEC_rtx_heap** nonnull %priorities_roots) #7, !dbg !8998
  %128 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %priorities_roots, align 8, !dbg !8999
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* %128, metadata !8760, metadata !DIExpression()), !dbg !8996
  call fastcc void @calc_priorities(%struct.VEC_rtx_heap* %128) #7, !dbg !9000
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %priorities_roots, metadata !8760, metadata !DIExpression(DW_OP_deref)), !dbg !8996
  call fastcc void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** nonnull %priorities_roots) #7, !dbg !9001
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #8, !dbg !9002
  br label %if.end415, !dbg !9003

if.end415:                                        ; preds = %if.end412, %if.then414
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !9004
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9004
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !9004
  ret void, !dbg !9004
}

declare dso_local %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9005 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_deps_insn_data_def_base* %vec_, metadata !9029, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9030, metadata !DIExpression()), !dbg !9031
  br label %land.end, !dbg !9032

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !9032
  %arrayidx = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9032
  ret %struct._haifa_deps_insn_data* %arrayidx, !dbg !9032
}

declare dso_local void @sd_copy_back_deps(%struct.rtx_def*, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @init_dep_1(%struct._dep*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local i32 @set_dep_weak(i32, i32, i32) local_unnamed_addr #2

declare dso_local i32 @get_dep_weak(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @process_insn_forw_deps_be_in_spec(%struct.rtx_def* %insn, %struct.rtx_def* %twin, i32 %fs) unnamed_addr #5 !dbg !9033 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %_new_dep = alloca %struct._dep, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9037, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata %struct.rtx_def* %twin, metadata !9038, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i32 %fs, metadata !9039, metadata !DIExpression()), !dbg !9057
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !9058
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !9058
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !9059
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9059
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !9060
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !9060
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 4) #7, !dbg !9060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !9060
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !9060
  %tobool1 = icmp eq i32 %fs, 0, !dbg !9061
  %3 = bitcast %struct._dep* %_new_dep to i8*, !dbg !9062
  br i1 %tobool1, label %entry.entry.split_crit_edge, label %entry.split.us, !dbg !9060

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !9060

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !9060

for.cond.us:                                      ; preds = %if.end18.us, %entry.split.us
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !9040, metadata !DIExpression(DW_OP_deref)), !dbg !9057
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !9041, metadata !DIExpression(DW_OP_deref)), !dbg !9057
  %call.us = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !9063
  %tobool.us = icmp eq i8 %call.us, 0, !dbg !9060
  br i1 %tobool.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !9060

for.body.us:                                      ; preds = %for.cond.us
  %4 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !9064
  call void @llvm.dbg.value(metadata %struct._dep* %4, metadata !9041, metadata !DIExpression()), !dbg !9057
  %con.us = getelementptr inbounds %struct._dep, %struct._dep* %4, i64 0, i32 1, !dbg !9064
  %5 = load %struct.rtx_def*, %struct.rtx_def** %con.us, align 8, !dbg !9064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !9046, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata %struct._dep* %4, metadata !9041, metadata !DIExpression()), !dbg !9057
  %status.us = getelementptr inbounds %struct._dep, %struct._dep* %4, i64 0, i32 3, !dbg !9066
  %6 = load i32, i32* %status.us, align 4, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %6, metadata !9042, metadata !DIExpression()), !dbg !9065
  %and.us = and i32 %6, 117440512, !dbg !9067
  %cmp.us = icmp eq i32 %and.us, 16777216, !dbg !9068
  br i1 %cmp.us, label %if.then.us, label %if.end18.us, !dbg !9069

if.then.us:                                       ; preds = %for.body.us
  %and2.us = and i32 %6, 16519104, !dbg !9070
  %tobool3.us = icmp eq i32 %and2.us, 0, !dbg !9070
  br i1 %tobool3.us, label %cond.end.us, label %cond.true.us, !dbg !9070

cond.true.us:                                     ; preds = %if.then.us
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 4026, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !9070
  br label %cond.end.us, !dbg !9070

cond.end.us:                                      ; preds = %cond.true.us, %if.then.us
  %and4.us = and i32 %6, 258111, !dbg !9071
  %tobool5.us = icmp eq i32 %and4.us, 0, !dbg !9071
  br i1 %tobool5.us, label %if.else.us, label %if.then6.us, !dbg !9072

if.then6.us:                                      ; preds = %cond.end.us
  %call7.us = call i32 @ds_weak(i32 %6) #6, !dbg !9073
  %call8.us = call i32 @ds_weak(i32 %fs) #6, !dbg !9074
  %cmp9.us = icmp sgt i32 %call7.us, %call8.us, !dbg !9075
  br i1 %cmp9.us, label %if.end18.us, label %if.then10.us, !dbg !9076

if.then10.us:                                     ; preds = %if.then6.us
  %and11.us = and i32 %6, -258112, !dbg !9077
  %or.us = or i32 %and11.us, %fs, !dbg !9078
  call void @llvm.dbg.value(metadata i32 %or.us, metadata !9047, metadata !DIExpression()), !dbg !9079
  %call12.us = call zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %5, i32 %or.us) #6, !dbg !9080
  %tobool13.us = icmp eq i8 %call12.us, 0, !dbg !9080
  %spec.select.us = select i1 %tobool13.us, i32 %6, i32 %or.us, !dbg !9082
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !9042, metadata !DIExpression()), !dbg !9065
  br label %if.end18.us, !dbg !9083

if.else.us:                                       ; preds = %cond.end.us
  %or16.us = or i32 %6, %fs, !dbg !9084
  call void @llvm.dbg.value(metadata i32 %or16.us, metadata !9042, metadata !DIExpression()), !dbg !9065
  br label %if.end18.us

if.end18.us:                                      ; preds = %if.else.us, %if.then10.us, %if.then6.us, %for.body.us
  %ds.3.us = phi i32 [ %6, %for.body.us ], [ %or16.us, %if.else.us ], [ %spec.select.us, %if.then10.us ], [ %6, %if.then6.us ], !dbg !9065
  call void @llvm.dbg.value(metadata i32 %ds.3.us, metadata !9042, metadata !DIExpression()), !dbg !9065
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9085
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !9056, metadata !DIExpression()), !dbg !9062
  %7 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !9086
  call void @llvm.dbg.value(metadata %struct._dep* %7, metadata !9041, metadata !DIExpression()), !dbg !9057
  %type.us = getelementptr inbounds %struct._dep, %struct._dep* %7, i64 0, i32 2, !dbg !9086
  %8 = load i32, i32* %type.us, align 8, !dbg !9086
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !9054, metadata !DIExpression(DW_OP_deref)), !dbg !9062
  call void @init_dep_1(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %twin, %struct.rtx_def* %5, i32 %8, i32 %ds.3.us) #6, !dbg !9087
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !9054, metadata !DIExpression(DW_OP_deref)), !dbg !9062
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !9088
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9089
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !9040, metadata !DIExpression(DW_OP_deref)), !dbg !9057
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !9063
  br label %for.cond.us, !dbg !9063, !llvm.loop !9090

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !9092

for.cond:                                         ; preds = %for.body, %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !9040, metadata !DIExpression(DW_OP_deref)), !dbg !9057
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !9041, metadata !DIExpression(DW_OP_deref)), !dbg !9057
  %call = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !9063
  %tobool = icmp eq i8 %call, 0, !dbg !9060
  br i1 %tobool, label %for.end.us-lcssa, label %for.body, !dbg !9060

for.body:                                         ; preds = %for.cond
  %9 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !9064
  call void @llvm.dbg.value(metadata %struct._dep* %9, metadata !9041, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !9046, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata %struct._dep* %9, metadata !9041, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i32 undef, metadata !9042, metadata !DIExpression()), !dbg !9065
  %status = getelementptr inbounds %struct._dep, %struct._dep* %9, i64 0, i32 3, !dbg !9066
  %10 = load i32, i32* %status, align 4, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %10, metadata !9042, metadata !DIExpression()), !dbg !9065
  %con = getelementptr inbounds %struct._dep, %struct._dep* %9, i64 0, i32 1, !dbg !9064
  %11 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !9064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !9046, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %10, metadata !9042, metadata !DIExpression()), !dbg !9065
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9085
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !9056, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %struct._dep* %9, metadata !9041, metadata !DIExpression()), !dbg !9057
  %type = getelementptr inbounds %struct._dep, %struct._dep* %9, i64 0, i32 2, !dbg !9086
  %12 = load i32, i32* %type, align 8, !dbg !9086
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !9054, metadata !DIExpression(DW_OP_deref)), !dbg !9062
  call void @init_dep_1(%struct._dep* nonnull %_new_dep, %struct.rtx_def* %twin, %struct.rtx_def* %11, i32 %12, i32 %10) #6, !dbg !9087
  call void @llvm.dbg.value(metadata %struct._dep* %_new_dep, metadata !9054, metadata !DIExpression(DW_OP_deref)), !dbg !9062
  call void @sd_add_dep(%struct._dep* nonnull %_new_dep, i8 zeroext 0) #6, !dbg !9088
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !9089
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !9040, metadata !DIExpression(DW_OP_deref)), !dbg !9057
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !9063
  br label %for.cond, !dbg !9063, !llvm.loop !9090

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !9092

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9092
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !9092
  ret void, !dbg !9092
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sched_remove_insn(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !9093 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9095, metadata !DIExpression()), !dbg !9096
  tail call void @sd_finish_insn(%struct.rtx_def* %insn) #6, !dbg !9097
  tail call fastcc void @change_queue_index(%struct.rtx_def* %insn, i32 -2) #7, !dbg !9098
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !9099
  %add_remove_insn = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i64 0, i32 14, !dbg !9100
  %1 = load void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)** %add_remove_insn, align 8, !dbg !9100
  tail call void %1(%struct.rtx_def* %insn, i32 1) #6, !dbg !9099
  tail call void @remove_insn(%struct.rtx_def* %insn) #6, !dbg !9101
  ret void, !dbg !9102
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_priorities(%struct.rtx_def* %insn, %struct.VEC_rtx_heap** %roots_ptr) unnamed_addr #5 !dbg !9103 {
entry:
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9108, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %roots_ptr, metadata !9109, metadata !DIExpression()), !dbg !9117
  %0 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !9118
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !9118
  %1 = bitcast %struct._dep** %dep to i8*, !dbg !9119
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9119
  call void @llvm.dbg.value(metadata i8 1, metadata !9112, metadata !DIExpression()), !dbg !9117
  %2 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9120
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %2, i64 0, i32 0, !dbg !9120
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9120
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9120
  %3 = load i32, i32* %rt_int, align 8, !dbg !9120
  %call = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base, i32 %3) #7, !dbg !9120
  %queue_index = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i64 0, i32 4, !dbg !9120
  %4 = load i32, i32* %queue_index, align 8, !dbg !9120
  %cmp = icmp eq i32 %4, -3, !dbg !9120
  br i1 %cmp, label %cond.true1, label %cond.end3, !dbg !9120

cond.true1:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 5061, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !9120
  br label %cond.end3, !dbg !9120

cond.end3:                                        ; preds = %entry, %cond.true1
  %5 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !9121
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8, !dbg !9121
  call fastcc void @sd_iterator_start(%struct._sd_iterator* nonnull sret %tmp, %struct.rtx_def* %insn, i32 3) #7, !dbg !9121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 32, i1 false), !dbg !9121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8, !dbg !9121
  br label %for.cond, !dbg !9121

for.cond:                                         ; preds = %for.inc, %cond.end3
  %insn_is_root_p.0 = phi i8 [ 1, %cond.end3 ], [ %insn_is_root_p.2, %for.inc ], !dbg !9117
  call void @llvm.dbg.value(metadata i8 %insn_is_root_p.0, metadata !9112, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !9110, metadata !DIExpression(DW_OP_deref)), !dbg !9117
  call void @llvm.dbg.value(metadata %struct._dep** %dep, metadata !9111, metadata !DIExpression(DW_OP_deref)), !dbg !9117
  %call5 = call fastcc zeroext i8 @sd_iterator_cond(%struct._sd_iterator* nonnull %sd_it, %struct._dep** nonnull %dep) #7, !dbg !9122
  %tobool6 = icmp eq i8 %call5, 0, !dbg !9121
  br i1 %tobool6, label %for.end, label %for.body, !dbg !9121

for.body:                                         ; preds = %for.cond
  %6 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !9123
  call void @llvm.dbg.value(metadata %struct._dep* %6, metadata !9111, metadata !DIExpression()), !dbg !9117
  %pro7 = getelementptr inbounds %struct._dep, %struct._dep* %6, i64 0, i32 0, !dbg !9123
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pro7, align 8, !dbg !9123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !9113, metadata !DIExpression()), !dbg !9124
  %8 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9125
  %base10 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %8, i64 0, i32 0, !dbg !9125
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9125
  %rt_int17 = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !9125
  %9 = load i32, i32* %rt_int17, align 8, !dbg !9125
  %call18 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base10, i32 %9) #7, !dbg !9125
  %priority_status = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call18, i64 0, i32 7, !dbg !9125
  %10 = load i8, i8* %priority_status, align 1, !dbg !9125
  %cmp19 = icmp sgt i8 %10, -1, !dbg !9127
  br i1 %cmp19, label %land.lhs.true, label %for.inc, !dbg !9128

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9129
  %base23 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %11, i64 0, i32 0, !dbg !9129
  %12 = load i32, i32* %rt_int, align 8, !dbg !9129
  %call31 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base23, i32 %12) #7, !dbg !9129
  %queue_index32 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call31, i64 0, i32 4, !dbg !9129
  %13 = load i32, i32* %queue_index32, align 8, !dbg !9129
  %cmp33 = icmp eq i32 %13, -3, !dbg !9130
  br i1 %cmp33, label %for.inc, label %if.then, !dbg !9131

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !9132
  call void @llvm.dbg.value(metadata %struct._dep* %14, metadata !9111, metadata !DIExpression()), !dbg !9117
  %call35 = call fastcc zeroext i8 @contributes_to_priority_p(%struct._dep* %14) #7, !dbg !9135
  %tobool36 = icmp eq i8 %call35, 0, !dbg !9135
  %spec.select = select i1 %tobool36, i8 %insn_is_root_p.0, i8 0, !dbg !9136
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !9112, metadata !DIExpression()), !dbg !9117
  %15 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9137
  %base40 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %15, i64 0, i32 0, !dbg !9137
  %16 = load i32, i32* %rt_int17, align 8, !dbg !9137
  %call48 = call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %base40, i32 %16) #7, !dbg !9137
  %priority_status49 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call48, i64 0, i32 7, !dbg !9137
  store i8 -1, i8* %priority_status49, align 1, !dbg !9138
  call fastcc void @clear_priorities(%struct.rtx_def* %7, %struct.VEC_rtx_heap** %roots_ptr) #7, !dbg !9139
  br label %for.inc, !dbg !9140

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %insn_is_root_p.2 = phi i8 [ %spec.select, %if.then ], [ %insn_is_root_p.0, %land.lhs.true ], [ %insn_is_root_p.0, %for.body ], !dbg !9117
  call void @llvm.dbg.value(metadata i8 %insn_is_root_p.2, metadata !9112, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata %struct._sd_iterator* %sd_it, metadata !9110, metadata !DIExpression(DW_OP_deref)), !dbg !9117
  call fastcc void @sd_iterator_next(%struct._sd_iterator* nonnull %sd_it) #7, !dbg !9122
  br label %for.cond, !dbg !9122, !llvm.loop !9141

for.end:                                          ; preds = %for.cond
  %insn_is_root_p.0.lcssa = phi i8 [ %insn_is_root_p.0, %for.cond ], !dbg !9117
  call void @llvm.dbg.value(metadata i8 %insn_is_root_p.0.lcssa, metadata !9112, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata i8 %insn_is_root_p.0.lcssa, metadata !9112, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata i8 %insn_is_root_p.0.lcssa, metadata !9112, metadata !DIExpression()), !dbg !9117
  %tobool51 = icmp eq i8 %insn_is_root_p.0.lcssa, 0, !dbg !9143
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !9145

if.then52:                                        ; preds = %for.end
  %call53 = call fastcc %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** %roots_ptr, %struct.rtx_def* %insn) #7, !dbg !9146
  br label %if.end54, !dbg !9146

if.end54:                                         ; preds = %for.end, %if.then52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9147
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !9147
  ret void, !dbg !9147
}

; Function Attrs: nounwind uwtable
define internal fastcc void @calc_priorities(%struct.VEC_rtx_heap* %roots) unnamed_addr #5 !dbg !9148 {
entry:
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap* %roots, metadata !9152, metadata !DIExpression()), !dbg !9155
  %0 = bitcast %struct.rtx_def** %insn to i8*, !dbg !9156
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9156
  call void @llvm.dbg.value(metadata i32 0, metadata !9153, metadata !DIExpression()), !dbg !9155
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %roots, i64 0, i32 0, !dbg !9157
  br label %for.cond, !dbg !9160

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !9161
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9153, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !9154, metadata !DIExpression(DW_OP_deref)), !dbg !9155
  %call = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %base, i32 %i.0, %struct.rtx_def** nonnull %insn) #7, !dbg !9162
  %tobool1 = icmp eq i32 %call, 0, !dbg !9163
  br i1 %tobool1, label %for.end, label %for.body, !dbg !9163

for.body:                                         ; preds = %for.cond
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !9154, metadata !DIExpression()), !dbg !9155
  %call2 = call fastcc i32 @priority(%struct.rtx_def* %1) #7, !dbg !9165
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9153, metadata !DIExpression()), !dbg !9155
  br label %for.cond, !dbg !9167, !llvm.loop !9168

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9170
  ret void, !dbg !9170
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** %vec_) unnamed_addr #0 !dbg !9171 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %vec_, metadata !9176, metadata !DIExpression()), !dbg !9177
  %0 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !9178
  %tobool = icmp eq %struct.VEC_rtx_heap* %0, null, !dbg !9178
  br i1 %tobool, label %if.end, label %if.then, !dbg !9180

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_rtx_heap* %0 to i8*, !dbg !9180
  tail call void @free(i8* nonnull %1) #6, !dbg !9178
  br label %if.end, !dbg !9178

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_rtx_heap* null, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !9180
  ret void, !dbg !9180
}

declare dso_local void @sd_finish_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !9181 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %vec_, metadata !9185, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !9186, metadata !DIExpression()), !dbg !9187
  %call = tail call fastcc i32 @VEC_rtx_heap_reserve(%struct.VEC_rtx_heap** %vec_, i32 1) #7, !dbg !9188
  %0 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !9188
  %tobool = icmp eq %struct.VEC_rtx_heap* %0, null, !dbg !9188
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9188

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %0, i64 0, i32 0, !dbg !9188
  br label %cond.end, !dbg !9188

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9188
  %call1 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %cond, %struct.rtx_def* %obj_) #7, !dbg !9188
  ret %struct.rtx_def** %call1, !dbg !9188
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_heap_reserve(%struct.VEC_rtx_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9189 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_heap** %vec_, metadata !9193, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i32 1, metadata !9194, metadata !DIExpression()), !dbg !9196
  %0 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %vec_, align 8, !dbg !9197
  %tobool = icmp eq %struct.VEC_rtx_heap* %0, null, !dbg !9197
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9197

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %0, i64 0, i32 0, !dbg !9197
  br label %cond.end, !dbg !9197

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9197
  %call = tail call fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 1) #7, !dbg !9197
  %tobool1 = icmp eq i32 %call, 0, !dbg !9197
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9195, metadata !DIExpression()), !dbg !9196
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9197

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_rtx_heap** %vec_ to i8**, !dbg !9198
  %2 = load i8*, i8** %1, align 8, !dbg !9198
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !9198
  store i8* %call3, i8** %1, align 8, !dbg !9198
  br label %if.end, !dbg !9198

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9197
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !9200 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !9205, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !9206, metadata !DIExpression()), !dbg !9208
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !9209
  %0 = load i32, i32* %num1, align 8, !dbg !9209
  %inc = add i32 %0, 1, !dbg !9209
  store i32 %inc, i32* %num1, align 8, !dbg !9209
  %idxprom = zext i32 %0 to i64, !dbg !9209
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !9207, metadata !DIExpression()), !dbg !9208
  store %struct.rtx_def* %obj_, %struct.rtx_def** %arrayidx, align 8, !dbg !9209
  ret %struct.rtx_def** %arrayidx, !dbg !9209
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9210 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !9214, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.value(metadata i32 1, metadata !9215, metadata !DIExpression()), !dbg !9216
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !9217
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9217

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 1, !dbg !9217
  %0 = load i32, i32* %alloc, align 4, !dbg !9217
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !9217
  %1 = load i32, i32* %num, align 8, !dbg !9217
  %cmp1 = icmp ne i32 %0, %1, !dbg !9217
  %phitmp = zext i1 %cmp1 to i32, !dbg !9217
  br label %cond.end, !dbg !9217

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9217

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9217
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_insn(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !9218 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !9223
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !9223
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9223

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !9223
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !9223
  br label %cond.end, !dbg !9223

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9223
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !9223
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !9224
  %conv3 = zext i1 %cmp to i8, !dbg !9225
  ret i8 %conv3, !dbg !9226
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !9227 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !9232
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !9232
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9232

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !9232
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !9232
  br label %cond.end, !dbg !9232

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9232
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !9232
  ret %struct.edge_def* %call2, !dbg !9233
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !9234 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !9239
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9239

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !9239
  br label %cond.end, !dbg !9239

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !9240
  ret %struct.VEC_edge_gc* %0, !dbg !9241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9242 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !9246, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9247, metadata !DIExpression()), !dbg !9248
  br label %land.end, !dbg !9249

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !9249
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9249
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !9249
  ret %struct.edge_def* %0, !dbg !9249
}

declare dso_local %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @add_bb_to_loop(%struct.basic_block_def*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9250 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !9256, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.value(metadata i32 0, metadata !9257, metadata !DIExpression()), !dbg !9258
  br label %land.end, !dbg !9259

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 0, !dbg !9259
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !9259
  ret %struct.loop* %0, !dbg !9259
}

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_safe_grow_cleared(%struct.VEC_int_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !9260 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** @sched_luids, metadata !9264, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 %size_, metadata !9265, metadata !DIExpression()), !dbg !9267
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9268
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !9268
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9268

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !9268
  br label %cond.end, !dbg !9268

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9268
  %call = tail call fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %cond) #7, !dbg !9268
  call void @llvm.dbg.value(metadata i32 %call, metadata !9266, metadata !DIExpression()), !dbg !9267
  tail call fastcc void @VEC_int_heap_safe_grow(%struct.VEC_int_heap** nonnull @sched_luids, i32 %size_) #7, !dbg !9268
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9268
  %tobool1 = icmp eq %struct.VEC_int_heap* %1, null, !dbg !9268
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !9268

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !9268
  br label %cond.end5, !dbg !9268

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !9268
  %call7 = tail call fastcc i32* @VEC_int_base_address(%struct.VEC_int_base* %cond6) #7, !dbg !9268
  %idxprom = sext i32 %call to i64, !dbg !9268
  %arrayidx = getelementptr inbounds i32, i32* %call7, i64 %idxprom, !dbg !9268
  %2 = bitcast i32* %arrayidx to i8*, !dbg !9268
  %sub = sub nsw i32 %size_, %call, !dbg !9268
  %conv = sext i32 %sub to i64, !dbg !9268
  %mul = shl nsw i64 %conv, 2, !dbg !9268
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !9268
  ret void, !dbg !9268
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %vec_) unnamed_addr #0 !dbg !9269 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !9273, metadata !DIExpression()), !dbg !9274
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !9275
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9275

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !9275
  %0 = load i32, i32* %num, align 4, !dbg !9275
  br label %cond.end, !dbg !9275

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !9275
  ret i32 %cond, !dbg !9275
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_safe_grow(%struct.VEC_int_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !9276 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** @sched_luids, metadata !9278, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i32 %size_, metadata !9279, metadata !DIExpression()), !dbg !9280
  %cmp = icmp sgt i32 %size_, -1, !dbg !9281
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9281

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9281
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !9281
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9281

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !9281
  br label %cond.end, !dbg !9281

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !9281
  %call = tail call fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %cond) #7, !dbg !9281
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9281
  %tobool2 = icmp eq %struct.VEC_int_heap* %1, null, !dbg !9281
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !9281

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, i32 0, !dbg !9281
  %2 = load i32, i32* %num, align 4, !dbg !9281
  br label %cond.end11, !dbg !9281

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !9281
  %sub = sub nsw i32 %size_, %cond12, !dbg !9281
  %call13 = tail call fastcc i32 @VEC_int_heap_reserve_exact(%struct.VEC_int_heap** nonnull @sched_luids, i32 %sub) #7, !dbg !9281
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9281
  %num20 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i64 0, i32 0, i32 0, !dbg !9281
  store i32 %size_, i32* %num20, align 4, !dbg !9281
  ret void, !dbg !9281
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_address(%struct.VEC_int_base* %vec_) unnamed_addr #0 !dbg !9282 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !9287, metadata !DIExpression()), !dbg !9288
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !9289
  %arraydecay = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 0, !dbg !9289
  %cond = select i1 %tobool, i32* null, i32* %arraydecay, !dbg !9289
  ret i32* %cond, !dbg !9289
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_heap_reserve_exact(%struct.VEC_int_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9290 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** @sched_luids, metadata !9294, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9295, metadata !DIExpression()), !dbg !9297
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9298
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !9298
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9298

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !9298
  br label %cond.end, !dbg !9298

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9298
  %call = tail call fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %cond, i32 %alloc_) #7, !dbg !9298
  %tobool1 = icmp eq i32 %call, 0, !dbg !9298
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9298
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9296, metadata !DIExpression()), !dbg !9297
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9298

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_int_heap** @sched_luids to i8**), align 8, !dbg !9299
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 4) #6, !dbg !9299
  store i8* %call3, i8** bitcast (%struct.VEC_int_heap** @sched_luids to i8**), align 8, !dbg !9299
  br label %if.end, !dbg !9299

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9298
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9301 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !9305, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9306, metadata !DIExpression()), !dbg !9307
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !9308
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9308

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 1, !dbg !9308
  %0 = load i32, i32* %alloc, align 4, !dbg !9308
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !9308
  %1 = load i32, i32* %num, align 4, !dbg !9308
  %sub = sub i32 %0, %1, !dbg !9308
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !9308
  br label %cond.end, !dbg !9308

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !9308
  br label %cond.end, !dbg !9308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !9308
  ret i32 %cond, !dbg !9308
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_replace(%struct.VEC_int_base* %vec_, i32 %ix_, i32 %obj_) unnamed_addr #0 !dbg !9309 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !9313, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9314, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !9315, metadata !DIExpression()), !dbg !9317
  %idxprom = zext i32 %ix_ to i64, !dbg !9318
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9318
  %0 = load i32, i32* %arrayidx, align 4, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %0, metadata !9316, metadata !DIExpression()), !dbg !9317
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !9318
  ret i32 %0, !dbg !9318
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_haifa_insn_data_def_base_length(%struct.VEC_haifa_insn_data_def_base* %vec_) unnamed_addr #0 !dbg !9319 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !9325, metadata !DIExpression()), !dbg !9326
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_base* %vec_, null, !dbg !9327
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9327

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 0, !dbg !9327
  %0 = load i32, i32* %num, align 8, !dbg !9327
  br label %cond.end, !dbg !9327

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !9327
  ret i32 %cond, !dbg !9327
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_haifa_insn_data_def_base_space(%struct.VEC_haifa_insn_data_def_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9328 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !9332, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9333, metadata !DIExpression()), !dbg !9334
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_base* %vec_, null, !dbg !9335
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9335

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 1, !dbg !9335
  %0 = load i32, i32* %alloc, align 4, !dbg !9335
  %num = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 0, !dbg !9335
  %1 = load i32, i32* %num, align 8, !dbg !9335
  %sub = sub i32 %0, %1, !dbg !9335
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !9335
  br label %cond.end, !dbg !9335

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !9335
  br label %cond.end, !dbg !9335

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !9335
  ret i32 %cond, !dbg !9335
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_haifa_insn_data_def_heap_safe_grow_cleared(%struct.VEC_haifa_insn_data_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !9336 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_heap** @h_i_d, metadata !9340, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 %size_, metadata !9341, metadata !DIExpression()), !dbg !9343
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9344
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_heap* %0, null, !dbg !9344
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9344

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !9344
  br label %cond.end, !dbg !9344

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_haifa_insn_data_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9344
  %call = tail call fastcc i32 @VEC_haifa_insn_data_def_base_length(%struct.VEC_haifa_insn_data_def_base* %cond) #7, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %call, metadata !9342, metadata !DIExpression()), !dbg !9343
  tail call fastcc void @VEC_haifa_insn_data_def_heap_safe_grow(%struct.VEC_haifa_insn_data_def_heap** nonnull @h_i_d, i32 %size_) #7, !dbg !9344
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9344
  %tobool1 = icmp eq %struct.VEC_haifa_insn_data_def_heap* %1, null, !dbg !9344
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !9344

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, !dbg !9344
  br label %cond.end5, !dbg !9344

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_haifa_insn_data_def_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !9344
  %call7 = tail call fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_address(%struct.VEC_haifa_insn_data_def_base* %cond6) #7, !dbg !9344
  %idxprom = sext i32 %call to i64, !dbg !9344
  %arrayidx = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call7, i64 %idxprom, !dbg !9344
  %2 = bitcast %struct._haifa_insn_data* %arrayidx to i8*, !dbg !9344
  %sub = sub nsw i32 %size_, %call, !dbg !9344
  %conv = sext i32 %sub to i64, !dbg !9344
  %mul = mul nsw i64 %conv, 96, !dbg !9344
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !9344
  ret void, !dbg !9344
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_haifa_insn_data_def_heap_safe_grow(%struct.VEC_haifa_insn_data_def_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !9345 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_heap** @h_i_d, metadata !9347, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i32 %size_, metadata !9348, metadata !DIExpression()), !dbg !9349
  %cmp = icmp sgt i32 %size_, -1, !dbg !9350
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9350

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9350
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_heap* %0, null, !dbg !9350
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9350

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !9350
  br label %cond.end, !dbg !9350

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_haifa_insn_data_def_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !9350
  %call = tail call fastcc i32 @VEC_haifa_insn_data_def_base_length(%struct.VEC_haifa_insn_data_def_base* %cond) #7, !dbg !9350
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9350
  %tobool2 = icmp eq %struct.VEC_haifa_insn_data_def_heap* %1, null, !dbg !9350
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !9350

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i64 0, i32 0, i32 0, !dbg !9350
  %2 = load i32, i32* %num, align 8, !dbg !9350
  br label %cond.end11, !dbg !9350

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !9350
  %sub = sub nsw i32 %size_, %cond12, !dbg !9350
  %call13 = tail call fastcc i32 @VEC_haifa_insn_data_def_heap_reserve_exact(%struct.VEC_haifa_insn_data_def_heap** nonnull @h_i_d, i32 %sub) #7, !dbg !9350
  %3 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9350
  %num20 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %3, i64 0, i32 0, i32 0, !dbg !9350
  store i32 %size_, i32* %num20, align 8, !dbg !9350
  ret void, !dbg !9350
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_address(%struct.VEC_haifa_insn_data_def_base* %vec_) unnamed_addr #0 !dbg !9351 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_base* %vec_, metadata !9355, metadata !DIExpression()), !dbg !9356
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_base* %vec_, null, !dbg !9357
  %arraydecay = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %vec_, i64 0, i32 2, i64 0, !dbg !9357
  %cond = select i1 %tobool, %struct._haifa_insn_data* null, %struct._haifa_insn_data* %arraydecay, !dbg !9357
  ret %struct._haifa_insn_data* %cond, !dbg !9357
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_haifa_insn_data_def_heap_reserve_exact(%struct.VEC_haifa_insn_data_def_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9358 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_haifa_insn_data_def_heap** @h_i_d, metadata !9362, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9363, metadata !DIExpression()), !dbg !9365
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9366
  %tobool = icmp eq %struct.VEC_haifa_insn_data_def_heap* %0, null, !dbg !9366
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9366

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %0, i64 0, i32 0, !dbg !9366
  br label %cond.end, !dbg !9366

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_haifa_insn_data_def_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9366
  %call = tail call fastcc i32 @VEC_haifa_insn_data_def_base_space(%struct.VEC_haifa_insn_data_def_base* %cond, i32 %alloc_) #7, !dbg !9366
  %tobool1 = icmp eq i32 %call, 0, !dbg !9366
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9364, metadata !DIExpression()), !dbg !9365
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9366

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_haifa_insn_data_def_heap** @h_i_d to i8**), align 8, !dbg !9367
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %1, i32 %alloc_, i64 8, i64 96) #6, !dbg !9367
  store i8* %call3, i8** bitcast (%struct.VEC_haifa_insn_data_def_heap** @h_i_d to i8**), align 8, !dbg !9367
  br label %if.end, !dbg !9367

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9366
}

declare dso_local void @sd_init_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @extend_dependency_caches(i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2291, !2292, !2293}
!llvm.ident = !{!2294}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "sched_verbose", scope: !2, file: !3, line: 170, type: !631, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !628, globals: !1959, nameTableKind: None)
!3 = !DIFile(filename: "haifa-sched.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !150, !154, !160, !165, !170, !189, !196, !203, !397, !405, !440, !582, !598}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !142, line: 31, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !142, line: 91, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153}
!152 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !155, line: 363, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !155, line: 355, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sched_pass_id_t", file: !398, line: 37, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./sched-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403, !404}
!400 = !DIEnumerator(name: "SCHED_PASS_UNKNOWN", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "SCHED_RGN_PASS", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "SCHED_EBB_PASS", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "SCHED_SMS_PASS", value: 3, isUnsigned: true)
!404 = !DIEnumerator(name: "SCHED_SEL_PASS", value: 4, isUnsigned: true)
!405 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !406, line: 836, baseType: !7, size: 32, elements: !407)
!406 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!407 = !{!408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439}
!408 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!409 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!410 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!411 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!412 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!413 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!414 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!415 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!416 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!417 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!418 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!419 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!420 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!421 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!422 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!423 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!424 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!425 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!426 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!427 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!428 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!429 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!430 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!431 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!432 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!433 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!434 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!435 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!436 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!437 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!438 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!439 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !406, line: 45, baseType: !7, size: 32, elements: !441)
!441 = !{!442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581}
!442 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!443 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!444 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!445 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!446 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!447 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!448 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!449 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!450 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!451 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!452 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!453 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!454 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!455 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!456 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!457 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!458 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!459 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!460 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!461 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!462 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!463 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!464 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!465 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!466 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!467 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!468 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!469 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!470 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!471 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!472 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!473 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!474 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!475 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!476 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!477 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!478 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!479 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!480 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!481 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!482 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!483 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!484 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!485 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!486 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!487 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!488 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!489 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!490 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!491 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!492 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!493 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!494 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!495 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!496 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!497 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!498 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!499 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!500 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!501 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!502 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!503 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!504 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!505 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!506 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!507 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!508 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!509 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!510 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!511 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!512 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!513 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!514 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!515 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!516 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!517 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!518 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!519 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!520 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!521 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!522 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!523 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!524 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!525 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!526 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!527 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!528 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!529 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!530 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!531 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!532 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!533 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!534 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!535 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!536 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!537 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!538 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!539 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!540 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!541 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!542 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!543 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!544 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!545 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!546 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!547 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!548 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!549 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!550 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!551 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!552 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!553 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!554 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!555 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!556 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!557 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!558 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!559 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!560 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!561 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!562 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!563 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!564 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!565 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!566 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!567 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!568 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!569 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!570 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!571 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!572 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!573 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!574 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!575 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!576 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!577 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!578 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!579 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!580 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!581 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_note", file: !406, line: 956, baseType: !7, size: 32, elements: !583)
!583 = !{!584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597}
!584 = !DIEnumerator(name: "NOTE_INSN_DELETED", value: 0, isUnsigned: true)
!585 = !DIEnumerator(name: "NOTE_INSN_DELETED_LABEL", value: 1, isUnsigned: true)
!586 = !DIEnumerator(name: "NOTE_INSN_BLOCK_BEG", value: 2, isUnsigned: true)
!587 = !DIEnumerator(name: "NOTE_INSN_BLOCK_END", value: 3, isUnsigned: true)
!588 = !DIEnumerator(name: "NOTE_INSN_FUNCTION_BEG", value: 4, isUnsigned: true)
!589 = !DIEnumerator(name: "NOTE_INSN_PROLOGUE_END", value: 5, isUnsigned: true)
!590 = !DIEnumerator(name: "NOTE_INSN_EPILOGUE_BEG", value: 6, isUnsigned: true)
!591 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_BEG", value: 7, isUnsigned: true)
!592 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_END", value: 8, isUnsigned: true)
!593 = !DIEnumerator(name: "NOTE_INSN_VAR_LOCATION", value: 9, isUnsigned: true)
!594 = !DIEnumerator(name: "NOTE_INSN_BASIC_BLOCK", value: 10, isUnsigned: true)
!595 = !DIEnumerator(name: "NOTE_INSN_SWITCH_TEXT_SECTIONS", value: 11, isUnsigned: true)
!596 = !DIEnumerator(name: "NOTE_INSN_CFA_RESTORE_STATE", value: 12, isUnsigned: true)
!597 = !DIEnumerator(name: "NOTE_INSN_MAX", value: 13, isUnsigned: true)
!598 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !166, line: 1188, baseType: !7, size: 32, elements: !599)
!599 = !{!600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627}
!600 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!601 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!602 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!603 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!604 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!605 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!606 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!607 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!608 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!609 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!610 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!611 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!612 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!613 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!614 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!615 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!616 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!617 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!618 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!619 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!620 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!621 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!622 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!623 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!624 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!625 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!626 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!627 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!628 = !{!629, !630, !631, !632, !635, !636, !638, !5, !440, !405, !582, !1864, !1865, !1866, !1867, !633, !1868, !1877, !7, !1879, !1881, !1886, !1172, !1891, !1903}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!631 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !639, line: 50, baseType: !640)
!639 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !406, line: 240, size: 384, elements: !642)
!642 = !{!643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !641, file: !406, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !641, file: !406, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !641, file: !406, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !641, file: !406, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !641, file: !406, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !641, file: !406, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !641, file: !406, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !641, file: !406, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !641, file: !406, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !641, file: !406, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !641, file: !406, line: 321, baseType: !654, size: 320, offset: 64)
!654 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !406, line: 315, size: 320, elements: !655)
!655 = !{!656, !1799, !1801, !1862, !1863}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !654, file: !406, line: 316, baseType: !657, size: 64)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 64, elements: !673)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !406, line: 183, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !406, line: 166, size: 64, elements: !660)
!660 = !{!661, !662, !663, !664, !665, !675, !676, !688, !691, !753, !1777, !1778, !1789, !1796}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !659, file: !406, line: 168, baseType: !631, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !659, file: !406, line: 169, baseType: !7, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !659, file: !406, line: 170, baseType: !636, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !659, file: !406, line: 171, baseType: !638, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !659, file: !406, line: 172, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !639, line: 53, baseType: !667)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !406, line: 359, size: 128, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !668, file: !406, line: 360, baseType: !631, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !668, file: !406, line: 361, baseType: !672, size: 64, offset: 64)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 64, elements: !673)
!673 = !{!674}
!674 = !DISubrange(count: 1)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !659, file: !406, line: 173, baseType: !5, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !659, file: !406, line: 174, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !406, line: 133, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !406, line: 115, size: 32, elements: !679)
!679 = !{!680, !681, !682, !683, !684, !685, !686, !687}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !678, file: !406, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !678, file: !406, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !678, file: !406, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !678, file: !406, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !678, file: !406, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !678, file: !406, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !678, file: !406, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !678, file: !406, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !659, file: !406, line: 175, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !406, line: 175, flags: DIFlagFwdDecl)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !659, file: !406, line: 176, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !694, line: 75, size: 256, elements: !695)
!694 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!695 = !{!696, !711, !712, !713}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !693, file: !694, line: 76, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !694, line: 68, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !694, line: 63, size: 320, elements: !700)
!700 = !{!701, !703, !704, !705}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !699, file: !694, line: 64, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !699, file: !694, line: 65, baseType: !702, size: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !699, file: !694, line: 66, baseType: !7, size: 32, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !699, file: !694, line: 67, baseType: !706, size: 128, offset: 192)
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 128, elements: !709)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !694, line: 29, baseType: !708)
!708 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!709 = !{!710}
!710 = !DISubrange(count: 2)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !693, file: !694, line: 77, baseType: !697, size: 64, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !693, file: !694, line: 78, baseType: !7, size: 32, offset: 128)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !693, file: !694, line: 79, baseType: !714, size: 64, offset: 192)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !694, line: 49, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !694, line: 45, size: 832, elements: !717)
!717 = !{!718, !719, !720}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !716, file: !694, line: 46, baseType: !702, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !716, file: !694, line: 47, baseType: !692, size: 64, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !716, file: !694, line: 48, baseType: !721, size: 704, offset: 128)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !722, line: 164, size: 704, elements: !723)
!722 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!723 = !{!724, !726, !736, !737, !738, !739, !740, !741, !745, !749, !750, !751, !752}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !721, file: !722, line: 166, baseType: !725, size: 64)
!725 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !721, file: !722, line: 167, baseType: !727, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !722, line: 157, size: 192, elements: !729)
!729 = !{!730, !731, !732}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !728, file: !722, line: 159, baseType: !633, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !728, file: !722, line: 160, baseType: !727, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !728, file: !722, line: 161, baseType: !733, size: 32, offset: 128)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 32, elements: !734)
!734 = !{!735}
!735 = !DISubrange(count: 4)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !721, file: !722, line: 168, baseType: !633, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !721, file: !722, line: 169, baseType: !633, size: 64, offset: 192)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !721, file: !722, line: 170, baseType: !633, size: 64, offset: 256)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !721, file: !722, line: 171, baseType: !725, size: 64, offset: 320)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !721, file: !722, line: 172, baseType: !631, size: 32, offset: 384)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !721, file: !722, line: 176, baseType: !742, size: 64, offset: 448)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!727, !635, !725}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !721, file: !722, line: 177, baseType: !746, size: 64, offset: 512)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{null, !635, !727}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !721, file: !722, line: 178, baseType: !635, size: 64, offset: 576)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !721, file: !722, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !721, file: !722, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !721, file: !722, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !659, file: !406, line: 177, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !639, line: 56, baseType: !755)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !757)
!757 = !{!758, !791, !797, !808, !827, !838, !843, !850, !856, !869, !881, !919, !924, !952, !960, !961, !966, !975, !981, !986, !990, !994, !1416, !1465, !1471, !1477, !1484, !1507, !1521, !1538, !1550, !1572, !1587, !1759}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !756, file: !171, line: 3372, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !760)
!760 = !{!761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !759, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !759, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !759, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !759, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !759, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !759, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !759, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !759, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !759, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !759, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !759, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !759, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !759, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !759, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !759, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !759, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !759, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !759, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !759, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !759, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !759, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !759, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !759, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !759, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !759, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !759, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !759, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !759, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !759, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !759, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !756, file: !171, line: 3373, baseType: !792, size: 192)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !793)
!793 = !{!794, !795, !796}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !792, file: !171, line: 403, baseType: !759, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !792, file: !171, line: 404, baseType: !754, size: 64, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !792, file: !171, line: 405, baseType: !754, size: 64, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !756, file: !171, line: 3374, baseType: !798, size: 320)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !799)
!799 = !{!800, !801}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !798, file: !171, line: 1385, baseType: !792, size: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !798, file: !171, line: 1386, baseType: !802, size: 128, offset: 192)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !803, line: 58, baseType: !804)
!803 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !803, line: 54, size: 128, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !804, file: !803, line: 56, baseType: !708, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !804, file: !803, line: 57, baseType: !725, size: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !756, file: !171, line: 3375, baseType: !809, size: 256)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !810)
!810 = !{!811, !812}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !809, file: !171, line: 1398, baseType: !792, size: 192)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !809, file: !171, line: 1399, baseType: !813, size: 64, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !815, line: 52, size: 256, elements: !816)
!815 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!816 = !{!817, !818, !819, !820, !821, !822, !823}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !814, file: !815, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !814, file: !815, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !814, file: !815, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !814, file: !815, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !814, file: !815, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !814, file: !815, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !814, file: !815, line: 62, baseType: !824, size: 192, offset: 64)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 192, elements: !825)
!825 = !{!826}
!826 = !DISubrange(count: 3)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !756, file: !171, line: 3376, baseType: !828, size: 256)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !829)
!829 = !{!830, !831}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !828, file: !171, line: 1409, baseType: !792, size: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !828, file: !171, line: 1410, baseType: !832, size: 64, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !834, line: 27, size: 192, elements: !835)
!834 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!835 = !{!836, !837}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !833, file: !834, line: 29, baseType: !802, size: 128)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !833, file: !834, line: 30, baseType: !5, size: 32, offset: 128)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !756, file: !171, line: 3377, baseType: !839, size: 256)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !840)
!840 = !{!841, !842}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !839, file: !171, line: 1438, baseType: !792, size: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !839, file: !171, line: 1439, baseType: !754, size: 64, offset: 192)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !756, file: !171, line: 3378, baseType: !844, size: 256)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !845)
!845 = !{!846, !847, !848}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !844, file: !171, line: 1419, baseType: !792, size: 192)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !844, file: !171, line: 1420, baseType: !631, size: 32, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !844, file: !171, line: 1421, baseType: !849, size: 8, offset: 224)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 8, elements: !673)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !756, file: !171, line: 3379, baseType: !851, size: 320)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !852)
!852 = !{!853, !854, !855}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !851, file: !171, line: 1429, baseType: !792, size: 192)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !851, file: !171, line: 1430, baseType: !754, size: 64, offset: 192)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !851, file: !171, line: 1431, baseType: !754, size: 64, offset: 256)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !756, file: !171, line: 3380, baseType: !857, size: 320)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !858)
!858 = !{!859, !860}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !857, file: !171, line: 1461, baseType: !792, size: 192)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !857, file: !171, line: 1462, baseType: !861, size: 128, offset: 192)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !862, line: 31, size: 128, elements: !863)
!862 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!863 = !{!864, !867, !868}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !861, file: !862, line: 32, baseType: !865, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !861, file: !862, line: 33, baseType: !7, size: 32, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !861, file: !862, line: 34, baseType: !7, size: 32, offset: 96)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !756, file: !171, line: 3381, baseType: !870, size: 384)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !871)
!871 = !{!872, !873, !878, !879, !880}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !870, file: !171, line: 2508, baseType: !792, size: 192)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !870, file: !171, line: 2509, baseType: !874, size: 32, offset: 192)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !875, line: 58, baseType: !876)
!875 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !877, line: 44, baseType: !7)
!877 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!878 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !870, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !870, file: !171, line: 2511, baseType: !754, size: 64, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !870, file: !171, line: 2512, baseType: !754, size: 64, offset: 320)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !756, file: !171, line: 3382, baseType: !882, size: 896)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !882, file: !171, line: 2653, baseType: !870, size: 384)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !882, file: !171, line: 2654, baseType: !754, size: 64, offset: 384)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !882, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !882, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !882, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !882, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !882, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !882, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !882, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !882, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !882, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !882, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !882, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !882, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !882, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !882, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !882, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !882, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !882, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !882, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !882, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !882, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !882, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !882, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !882, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !882, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !882, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !882, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !882, file: !171, line: 2705, baseType: !754, size: 64, offset: 576)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !882, file: !171, line: 2706, baseType: !754, size: 64, offset: 640)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !882, file: !171, line: 2707, baseType: !754, size: 64, offset: 704)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !882, file: !171, line: 2708, baseType: !754, size: 64, offset: 768)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !882, file: !171, line: 2711, baseType: !917, size: 64, offset: 832)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !756, file: !171, line: 3383, baseType: !920, size: 960)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !921)
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !920, file: !171, line: 2757, baseType: !882, size: 896)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !920, file: !171, line: 2758, baseType: !638, size: 64, offset: 896)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !756, file: !171, line: 3384, baseType: !925, size: 1472)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !926)
!926 = !{!927, !948, !949, !950, !951}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !925, file: !171, line: 3115, baseType: !928, size: 1216)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !929)
!929 = !{!930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !928, file: !171, line: 2985, baseType: !920, size: 960)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !928, file: !171, line: 2986, baseType: !754, size: 64, offset: 960)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !928, file: !171, line: 2987, baseType: !754, size: 64, offset: 1024)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !928, file: !171, line: 2988, baseType: !754, size: 64, offset: 1088)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !928, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !928, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !928, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !928, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !928, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !928, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !928, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !928, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !928, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !928, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !928, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !928, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !928, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !928, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !925, file: !171, line: 3117, baseType: !754, size: 64, offset: 1216)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !925, file: !171, line: 3119, baseType: !754, size: 64, offset: 1280)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !925, file: !171, line: 3121, baseType: !754, size: 64, offset: 1344)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !925, file: !171, line: 3123, baseType: !754, size: 64, offset: 1408)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !756, file: !171, line: 3385, baseType: !953, size: 1088)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !954)
!954 = !{!955, !956, !957}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !953, file: !171, line: 2875, baseType: !920, size: 960)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !953, file: !171, line: 2876, baseType: !638, size: 64, offset: 960)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !953, file: !171, line: 2877, baseType: !958, size: 64, offset: 1024)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !171, line: 2856, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !756, file: !171, line: 3386, baseType: !928, size: 1216)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !756, file: !171, line: 3387, baseType: !962, size: 1280)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !963)
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !962, file: !171, line: 3094, baseType: !928, size: 1216)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !962, file: !171, line: 3095, baseType: !958, size: 64, offset: 1216)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !756, file: !171, line: 3388, baseType: !967, size: 1216)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !967, file: !171, line: 2825, baseType: !882, size: 896)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !967, file: !171, line: 2827, baseType: !754, size: 64, offset: 896)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !967, file: !171, line: 2828, baseType: !754, size: 64, offset: 960)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !967, file: !171, line: 2829, baseType: !754, size: 64, offset: 1024)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !967, file: !171, line: 2830, baseType: !754, size: 64, offset: 1088)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !967, file: !171, line: 2831, baseType: !754, size: 64, offset: 1152)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !756, file: !171, line: 3389, baseType: !976, size: 1024)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !977)
!977 = !{!978, !979, !980}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !976, file: !171, line: 2851, baseType: !920, size: 960)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !976, file: !171, line: 2852, baseType: !631, size: 32, offset: 960)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !976, file: !171, line: 2853, baseType: !631, size: 32, offset: 992)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !756, file: !171, line: 3390, baseType: !982, size: 1024)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !982, file: !171, line: 2858, baseType: !920, size: 960)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !982, file: !171, line: 2859, baseType: !958, size: 64, offset: 960)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !756, file: !171, line: 3391, baseType: !987, size: 960)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !988)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !987, file: !171, line: 2863, baseType: !920, size: 960)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !756, file: !171, line: 3392, baseType: !991, size: 1472)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !992)
!992 = !{!993}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !991, file: !171, line: 3305, baseType: !925, size: 1472)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !756, file: !171, line: 3393, baseType: !995, size: 1792)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !996)
!996 = !{!997, !998, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !995, file: !171, line: 3249, baseType: !925, size: 1472)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !995, file: !171, line: 3251, baseType: !999, size: 64, offset: 1472)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1001, line: 463, size: 1152, elements: !1002)
!1001 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1002 = !{!1003, !1167, !1327, !1328, !1331, !1339, !1340, !1341, !1342, !1343, !1344, !1368, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1000, file: !1001, line: 464, baseType: !1004, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1006)
!1006 = !{!1007, !1056, !1069, !1083, !1135, !1148}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1005, file: !135, line: 197, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1015, !1016, !1017, !1044, !1053, !1054, !1055}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1010, file: !135, line: 119, baseType: !1009, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1010, file: !135, line: 122, baseType: !1009, size: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1010, file: !135, line: 123, baseType: !1009, size: 64, offset: 128)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1010, file: !135, line: 126, baseType: !631, size: 32, offset: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1010, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1010, file: !135, line: 165, baseType: !1018, size: 192, offset: 256)
!1018 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1019)
!1019 = !{!1020, !1033, !1039}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1018, file: !135, line: 137, baseType: !1021, size: 128)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1022)
!1022 = !{!1023, !1032}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1021, file: !135, line: 135, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1031}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1025, file: !135, line: 96, baseType: !1024, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1025, file: !135, line: 97, baseType: !1024, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1025, file: !135, line: 101, baseType: !754, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1025, file: !135, line: 106, baseType: !754, size: 64, offset: 192)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1025, file: !135, line: 111, baseType: !754, size: 64, offset: 256)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1021, file: !135, line: 136, baseType: !1024, size: 64, offset: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1018, file: !135, line: 151, baseType: !1034, size: 192)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1035)
!1035 = !{!1036, !1037, !1038}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1034, file: !135, line: 141, baseType: !754, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1034, file: !135, line: 145, baseType: !754, size: 64, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1034, file: !135, line: 150, baseType: !631, size: 32, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1018, file: !135, line: 164, baseType: !1040, size: 128)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1040, file: !135, line: 161, baseType: !754, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1040, file: !135, line: 163, baseType: !874, size: 32, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1010, file: !135, line: 168, baseType: !1045, size: 64, offset: 448)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1051, !1052}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1046, file: !135, line: 70, baseType: !1045, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1046, file: !135, line: 73, baseType: !1009, size: 64, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1046, file: !135, line: 78, baseType: !754, size: 64, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1046, file: !135, line: 85, baseType: !638, size: 64, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1046, file: !135, line: 88, baseType: !631, size: 32, offset: 256)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1010, file: !135, line: 173, baseType: !638, size: 64, offset: 512)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1010, file: !135, line: 173, baseType: !638, size: 64, offset: 576)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1010, file: !135, line: 177, baseType: !630, size: 8, offset: 640)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1005, file: !135, line: 200, baseType: !1057, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1060)
!1060 = !{!1061}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1059, file: !135, line: 185, baseType: !1062, size: 128)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1064)
!1064 = !{!1065, !1066, !1067}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1063, file: !135, line: 184, baseType: !7, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1063, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1063, file: !135, line: 184, baseType: !1068, size: 64, offset: 64)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 64, elements: !673)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1005, file: !135, line: 203, baseType: !1070, size: 64, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1073)
!1073 = !{!1074}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1072, file: !135, line: 189, baseType: !1075, size: 128)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1077)
!1077 = !{!1078, !1079, !1080}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1076, file: !135, line: 188, baseType: !7, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1076, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1076, file: !135, line: 188, baseType: !1081, size: 64, offset: 64)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1082, size: 64, elements: !673)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1045)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1005, file: !135, line: 207, baseType: !1084, size: 64, offset: 192)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1085, line: 144, baseType: !1086)
!1085 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1085, line: 100, size: 896, elements: !1088)
!1088 = !{!1089, !1097, !1102, !1107, !1109, !1112, !1113, !1114, !1115, !1116, !1121, !1123, !1124, !1129, !1134}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1087, file: !1085, line: 102, baseType: !1090, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1085, line: 52, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!1094, !1095}
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1085, line: 47, baseType: !7)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1087, file: !1085, line: 105, baseType: !1098, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1085, line: 59, baseType: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!631, !1095, !1095}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1087, file: !1085, line: 108, baseType: !1103, size: 64, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1085, line: 63, baseType: !1104)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{null, !635}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1087, file: !1085, line: 111, baseType: !1108, size: 64, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1087, file: !1085, line: 114, baseType: !1110, size: 64, offset: 256)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1111, line: 46, baseType: !708)
!1111 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1087, file: !1085, line: 117, baseType: !1110, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1087, file: !1085, line: 120, baseType: !1110, size: 64, offset: 384)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1087, file: !1085, line: 124, baseType: !7, size: 32, offset: 448)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1087, file: !1085, line: 128, baseType: !7, size: 32, offset: 480)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1087, file: !1085, line: 131, baseType: !1117, size: 64, offset: 512)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1085, line: 75, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!635, !1110, !1110}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1087, file: !1085, line: 132, baseType: !1122, size: 64, offset: 576)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1085, line: 78, baseType: !1104)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1087, file: !1085, line: 135, baseType: !635, size: 64, offset: 640)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1087, file: !1085, line: 136, baseType: !1125, size: 64, offset: 704)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1085, line: 82, baseType: !1126)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!635, !635, !1110, !1110}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1087, file: !1085, line: 137, baseType: !1130, size: 64, offset: 768)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1085, line: 83, baseType: !1131)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{null, !635, !635}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1087, file: !1085, line: 141, baseType: !7, size: 32, offset: 832)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1005, file: !135, line: 211, baseType: !1136, size: 64, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1139)
!1139 = !{!1140}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1138, file: !171, line: 183, baseType: !1141, size: 128)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1143)
!1143 = !{!1144, !1145, !1146}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1142, file: !171, line: 182, baseType: !7, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1142, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1142, file: !171, line: 182, baseType: !1147, size: 64, offset: 64)
!1147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !754, size: 64, elements: !673)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1005, file: !135, line: 220, baseType: !1149, size: 64, offset: 320)
!1149 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1150)
!1150 = !{!1151, !1152}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1149, file: !135, line: 218, baseType: !1136, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1149, file: !135, line: 219, baseType: !1153, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1155, line: 29, baseType: !1156)
!1155 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1155, line: 29, size: 96, elements: !1157)
!1157 = !{!1158}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1156, file: !1155, line: 29, baseType: !1159, size: 96)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1155, line: 27, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1155, line: 27, size: 96, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1160, file: !1155, line: 27, baseType: !7, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1160, file: !1155, line: 27, baseType: !7, size: 32, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1160, file: !1155, line: 27, baseType: !1165, size: 8, offset: 64)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 8, elements: !673)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1155, line: 26, baseType: !630)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1000, file: !1001, line: 467, baseType: !1168, size: 64, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !155, line: 374, size: 640, elements: !1170)
!1170 = !{!1171, !1302, !1303, !1316, !1317, !1318, !1319, !1320, !1321, !1323, !1325, !1326}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1169, file: !155, line: 377, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !639, line: 111, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !155, line: 217, size: 832, elements: !1175)
!1175 = !{!1176, !1211, !1212, !1213, !1272, !1276, !1277, !1278, !1296, !1297, !1298, !1299, !1300, !1301}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1174, file: !155, line: 219, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !155, line: 151, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !155, line: 151, size: 128, elements: !1180)
!1180 = !{!1181}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1179, file: !155, line: 151, baseType: !1182, size: 128)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !155, line: 150, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !155, line: 150, size: 128, elements: !1184)
!1184 = !{!1185, !1186, !1187}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1183, file: !155, line: 150, baseType: !7, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1183, file: !155, line: 150, baseType: !7, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1183, file: !155, line: 150, baseType: !1188, size: 64, offset: 64)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1189, size: 64, elements: !673)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !639, line: 108, baseType: !1190)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !155, line: 122, size: 512, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1203, !1204, !1205, !1206, !1207, !1208, !1209}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1191, file: !155, line: 124, baseType: !1173, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1191, file: !155, line: 125, baseType: !1173, size: 64, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1191, file: !155, line: 131, baseType: !1196, size: 64, offset: 128)
!1196 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !155, line: 128, size: 64, elements: !1197)
!1197 = !{!1198, !1202}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1196, file: !155, line: 129, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !639, line: 66, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !639, line: 65, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1196, file: !155, line: 130, baseType: !638, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1191, file: !155, line: 134, baseType: !635, size: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1191, file: !155, line: 137, baseType: !754, size: 64, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1191, file: !155, line: 138, baseType: !874, size: 32, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1191, file: !155, line: 142, baseType: !7, size: 32, offset: 352)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !155, line: 144, baseType: !631, size: 32, offset: 384)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1191, file: !155, line: 145, baseType: !631, size: 32, offset: 416)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1191, file: !155, line: 146, baseType: !1210, size: 64, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !155, line: 119, baseType: !725)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1174, file: !155, line: 220, baseType: !1177, size: 64, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1174, file: !155, line: 223, baseType: !635, size: 64, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1174, file: !155, line: 226, baseType: !1214, size: 64, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 100, size: 1216, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1226, !1227, !1228, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1262, !1270, !1271}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1215, file: !142, line: 102, baseType: !631, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1215, file: !142, line: 105, baseType: !7, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1215, file: !142, line: 108, baseType: !1173, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1215, file: !142, line: 111, baseType: !1173, size: 64, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1215, file: !142, line: 114, baseType: !1222, size: 64, offset: 192)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !142, line: 41, size: 64, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1222, file: !142, line: 42, baseType: !141, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1222, file: !142, line: 43, baseType: !7, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1215, file: !142, line: 117, baseType: !7, size: 32, offset: 256)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1215, file: !142, line: 120, baseType: !7, size: 32, offset: 288)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1215, file: !142, line: 123, baseType: !1229, size: 64, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !142, line: 87, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !142, line: 87, size: 128, elements: !1232)
!1232 = !{!1233}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1231, file: !142, line: 87, baseType: !1234, size: 128)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !142, line: 85, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !142, line: 85, size: 128, elements: !1236)
!1236 = !{!1237, !1238, !1239}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1235, file: !142, line: 85, baseType: !7, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1235, file: !142, line: 85, baseType: !7, size: 32, offset: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1235, file: !142, line: 85, baseType: !1240, size: 64, offset: 64)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1241, size: 64, elements: !673)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !142, line: 84, baseType: !1214)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1215, file: !142, line: 126, baseType: !1214, size: 64, offset: 384)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1215, file: !142, line: 129, baseType: !1214, size: 64, offset: 448)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1215, file: !142, line: 132, baseType: !635, size: 64, offset: 512)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1215, file: !142, line: 139, baseType: !754, size: 64, offset: 576)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1215, file: !142, line: 143, baseType: !802, size: 128, offset: 640)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1215, file: !142, line: 146, baseType: !802, size: 128, offset: 768)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1215, file: !142, line: 148, baseType: !630, size: 8, offset: 896)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1215, file: !142, line: 149, baseType: !630, size: 8, offset: 904)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1215, file: !142, line: 153, baseType: !150, size: 32, offset: 928)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1215, file: !142, line: 156, baseType: !1252, size: 64, offset: 960)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !142, line: 48, size: 320, elements: !1254)
!1254 = !{!1255, !1259, !1260, !1261}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1253, file: !142, line: 50, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !639, line: 58, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !639, line: 57, flags: DIFlagFwdDecl)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1253, file: !142, line: 59, baseType: !802, size: 128, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1253, file: !142, line: 64, baseType: !630, size: 8, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !142, line: 67, baseType: !1252, size: 64, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1215, file: !142, line: 159, baseType: !1263, size: 64, offset: 1024)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !142, line: 72, size: 256, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1264, file: !142, line: 74, baseType: !1190, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1264, file: !142, line: 77, baseType: !1263, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1264, file: !142, line: 78, baseType: !1263, size: 64, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1264, file: !142, line: 81, baseType: !1263, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1215, file: !142, line: 162, baseType: !630, size: 8, offset: 1088)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1215, file: !142, line: 166, baseType: !754, size: 64, offset: 1152)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1174, file: !155, line: 229, baseType: !1273, size: 128, offset: 256)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1274, size: 128, elements: !709)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !155, line: 229, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1174, file: !155, line: 232, baseType: !1173, size: 64, offset: 384)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1174, file: !155, line: 233, baseType: !1173, size: 64, offset: 448)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1174, file: !155, line: 238, baseType: !1279, size: 64, offset: 512)
!1279 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !155, line: 235, size: 64, elements: !1280)
!1280 = !{!1281, !1287}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1279, file: !155, line: 236, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !155, line: 273, size: 128, elements: !1284)
!1284 = !{!1285, !1286}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1283, file: !155, line: 275, baseType: !1199, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1283, file: !155, line: 278, baseType: !1199, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1279, file: !155, line: 237, baseType: !1288, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !155, line: 259, size: 320, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294, !1295}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1289, file: !155, line: 261, baseType: !638, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1289, file: !155, line: 262, baseType: !638, size: 64, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1289, file: !155, line: 266, baseType: !638, size: 64, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1289, file: !155, line: 267, baseType: !638, size: 64, offset: 192)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1289, file: !155, line: 270, baseType: !631, size: 32, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1174, file: !155, line: 241, baseType: !1210, size: 64, offset: 576)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1174, file: !155, line: 244, baseType: !631, size: 32, offset: 640)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1174, file: !155, line: 247, baseType: !631, size: 32, offset: 672)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1174, file: !155, line: 250, baseType: !631, size: 32, offset: 704)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1174, file: !155, line: 253, baseType: !631, size: 32, offset: 736)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1174, file: !155, line: 256, baseType: !631, size: 32, offset: 768)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1169, file: !155, line: 378, baseType: !1172, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1169, file: !155, line: 381, baseType: !1304, size: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !155, line: 282, baseType: !1306)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !155, line: 282, size: 128, elements: !1307)
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1306, file: !155, line: 282, baseType: !1309, size: 128)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !155, line: 281, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !155, line: 281, size: 128, elements: !1311)
!1311 = !{!1312, !1313, !1314}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1310, file: !155, line: 281, baseType: !7, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1310, file: !155, line: 281, baseType: !7, size: 32, offset: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1310, file: !155, line: 281, baseType: !1315, size: 64, offset: 64)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1172, size: 64, elements: !673)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1169, file: !155, line: 384, baseType: !631, size: 32, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1169, file: !155, line: 387, baseType: !631, size: 32, offset: 224)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1169, file: !155, line: 390, baseType: !631, size: 32, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1169, file: !155, line: 394, baseType: !1304, size: 64, offset: 320)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1169, file: !155, line: 396, baseType: !154, size: 32, offset: 384)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1169, file: !155, line: 399, baseType: !1322, size: 64, offset: 416)
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !709)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1169, file: !155, line: 402, baseType: !1324, size: 64, offset: 480)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !709)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1169, file: !155, line: 406, baseType: !631, size: 32, offset: 544)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1169, file: !155, line: 409, baseType: !631, size: 32, offset: 576)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1000, file: !1001, line: 470, baseType: !1200, size: 64, offset: 128)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1000, file: !1001, line: 473, baseType: !1329, size: 64, offset: 192)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1001, line: 166, flags: DIFlagFwdDecl)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1000, file: !1001, line: 476, baseType: !1332, size: 64, offset: 256)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !142, line: 187, size: 256, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1333, file: !142, line: 189, baseType: !631, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1333, file: !142, line: 192, baseType: !1229, size: 64, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1333, file: !142, line: 197, baseType: !1084, size: 64, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1333, file: !142, line: 200, baseType: !1214, size: 64, offset: 192)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1000, file: !1001, line: 479, baseType: !1084, size: 64, offset: 320)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1000, file: !1001, line: 484, baseType: !754, size: 64, offset: 384)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1000, file: !1001, line: 488, baseType: !754, size: 64, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1000, file: !1001, line: 493, baseType: !754, size: 64, offset: 512)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1000, file: !1001, line: 496, baseType: !754, size: 64, offset: 576)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1000, file: !1001, line: 501, baseType: !1345, size: 64, offset: 640)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1347)
!1347 = !{!1348, !1351, !1352, !1353, !1354, !1356, !1357, !1362, !1363, !1364, !1365, !1366, !1367}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1346, file: !166, line: 2356, baseType: !1349, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1346, file: !166, line: 2357, baseType: !636, size: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1346, file: !166, line: 2358, baseType: !631, size: 32, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1346, file: !166, line: 2359, baseType: !631, size: 32, offset: 160)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1346, file: !166, line: 2360, baseType: !1355, size: 128, offset: 192)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 128, elements: !734)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1346, file: !166, line: 2364, baseType: !631, size: 32, offset: 320)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1346, file: !166, line: 2367, baseType: !1358, size: 128, offset: 384)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1359)
!1359 = !{!1360, !1361}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1358, file: !166, line: 2351, baseType: !638, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1358, file: !166, line: 2352, baseType: !725, size: 64, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1346, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1346, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1346, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1346, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1346, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1346, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1000, file: !1001, line: 504, baseType: !1369, size: 64, offset: 704)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1001, line: 504, flags: DIFlagFwdDecl)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1000, file: !1001, line: 507, baseType: !1084, size: 64, offset: 768)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1000, file: !1001, line: 510, baseType: !631, size: 32, offset: 832)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1000, file: !1001, line: 513, baseType: !631, size: 32, offset: 864)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1000, file: !1001, line: 516, baseType: !874, size: 32, offset: 896)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1000, file: !1001, line: 519, baseType: !874, size: 32, offset: 928)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1000, file: !1001, line: 522, baseType: !7, size: 32, offset: 960)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1000, file: !1001, line: 523, baseType: !7, size: 32, offset: 992)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1000, file: !1001, line: 528, baseType: !636, size: 64, offset: 1024)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1000, file: !1001, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1000, file: !1001, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1000, file: !1001, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1000, file: !1001, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1000, file: !1001, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1000, file: !1001, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1000, file: !1001, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1000, file: !1001, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1000, file: !1001, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1000, file: !1001, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1000, file: !1001, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1000, file: !1001, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1000, file: !1001, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1000, file: !1001, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1000, file: !1001, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1000, file: !1001, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !995, file: !171, line: 3254, baseType: !754, size: 64, offset: 1536)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !995, file: !171, line: 3257, baseType: !754, size: 64, offset: 1600)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !995, file: !171, line: 3258, baseType: !754, size: 64, offset: 1664)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !995, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !995, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !995, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !995, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !995, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !995, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !995, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !995, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !995, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !995, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !995, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !995, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !995, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !995, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !995, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !995, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !995, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !995, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !756, file: !171, line: 3394, baseType: !1417, size: 1344)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1418)
!1418 = !{!1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1444, !1445, !1446, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1417, file: !171, line: 2280, baseType: !792, size: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1417, file: !171, line: 2281, baseType: !754, size: 64, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1417, file: !171, line: 2282, baseType: !754, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1417, file: !171, line: 2283, baseType: !754, size: 64, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1417, file: !171, line: 2284, baseType: !754, size: 64, offset: 384)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1417, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1417, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1417, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1417, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1417, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1417, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1417, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1417, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1417, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1417, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1417, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1417, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1417, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1417, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1417, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1417, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1417, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1417, file: !171, line: 2306, baseType: !1442, size: 32, offset: 544)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1443, line: 31, baseType: !631)
!1443 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1417, file: !171, line: 2307, baseType: !754, size: 64, offset: 576)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1417, file: !171, line: 2308, baseType: !754, size: 64, offset: 640)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1417, file: !171, line: 2314, baseType: !1447, size: 64, offset: 704)
!1447 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !1448)
!1448 = !{!1449, !1450, !1451}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1447, file: !171, line: 2310, baseType: !631, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1447, file: !171, line: 2311, baseType: !636, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1447, file: !171, line: 2312, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1417, file: !171, line: 2315, baseType: !754, size: 64, offset: 768)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1417, file: !171, line: 2316, baseType: !754, size: 64, offset: 832)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1417, file: !171, line: 2317, baseType: !754, size: 64, offset: 896)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1417, file: !171, line: 2318, baseType: !754, size: 64, offset: 960)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1417, file: !171, line: 2319, baseType: !754, size: 64, offset: 1024)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1417, file: !171, line: 2320, baseType: !754, size: 64, offset: 1088)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1417, file: !171, line: 2321, baseType: !754, size: 64, offset: 1152)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1417, file: !171, line: 2322, baseType: !754, size: 64, offset: 1216)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1417, file: !171, line: 2324, baseType: !1463, size: 64, offset: 1280)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !756, file: !171, line: 3395, baseType: !1466, size: 320)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !1467)
!1467 = !{!1468, !1469, !1470}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1466, file: !171, line: 1470, baseType: !792, size: 192)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1466, file: !171, line: 1471, baseType: !754, size: 64, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1466, file: !171, line: 1472, baseType: !754, size: 64, offset: 256)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !756, file: !171, line: 3396, baseType: !1472, size: 320)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !1473)
!1473 = !{!1474, !1475, !1476}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1472, file: !171, line: 1483, baseType: !792, size: 192)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1472, file: !171, line: 1484, baseType: !631, size: 32, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1472, file: !171, line: 1485, baseType: !1147, size: 64, offset: 256)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !756, file: !171, line: 3397, baseType: !1478, size: 384)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1478, file: !171, line: 1830, baseType: !792, size: 192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1478, file: !171, line: 1831, baseType: !874, size: 32, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1478, file: !171, line: 1832, baseType: !754, size: 64, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1478, file: !171, line: 1835, baseType: !1147, size: 64, offset: 320)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !756, file: !171, line: 3398, baseType: !1485, size: 704)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491, !1494}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1485, file: !171, line: 1899, baseType: !792, size: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1485, file: !171, line: 1902, baseType: !754, size: 64, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1485, file: !171, line: 1905, baseType: !1256, size: 64, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1485, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1485, file: !171, line: 1911, baseType: !1492, size: 64, offset: 384)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !171, line: 1876, flags: DIFlagFwdDecl)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1485, file: !171, line: 1914, baseType: !1495, size: 256, offset: 448)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1496)
!1496 = !{!1497, !1499, !1500, !1505}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1495, file: !171, line: 1884, baseType: !1498, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1495, file: !171, line: 1885, baseType: !1498, size: 64, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1495, file: !171, line: 1891, baseType: !1501, size: 64, offset: 128)
!1501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1495, file: !171, line: 1891, size: 64, elements: !1502)
!1502 = !{!1503, !1504}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1501, file: !171, line: 1891, baseType: !1256, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1501, file: !171, line: 1891, baseType: !754, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1495, file: !171, line: 1892, baseType: !1506, size: 64, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !756, file: !171, line: 3399, baseType: !1508, size: 704)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !1509)
!1509 = !{!1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1508, file: !171, line: 2009, baseType: !792, size: 192)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1508, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1508, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1508, file: !171, line: 2014, baseType: !874, size: 32, offset: 224)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1508, file: !171, line: 2016, baseType: !754, size: 64, offset: 256)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1508, file: !171, line: 2017, baseType: !1136, size: 64, offset: 320)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1508, file: !171, line: 2019, baseType: !754, size: 64, offset: 384)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1508, file: !171, line: 2020, baseType: !754, size: 64, offset: 448)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1508, file: !171, line: 2021, baseType: !754, size: 64, offset: 512)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1508, file: !171, line: 2022, baseType: !754, size: 64, offset: 576)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1508, file: !171, line: 2023, baseType: !754, size: 64, offset: 640)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !756, file: !171, line: 3400, baseType: !1522, size: 832)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1522, file: !171, line: 2431, baseType: !792, size: 192)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1522, file: !171, line: 2433, baseType: !754, size: 64, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1522, file: !171, line: 2434, baseType: !754, size: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1522, file: !171, line: 2435, baseType: !754, size: 64, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1522, file: !171, line: 2436, baseType: !754, size: 64, offset: 384)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1522, file: !171, line: 2437, baseType: !1136, size: 64, offset: 448)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1522, file: !171, line: 2438, baseType: !754, size: 64, offset: 512)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1522, file: !171, line: 2440, baseType: !754, size: 64, offset: 576)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1522, file: !171, line: 2441, baseType: !754, size: 64, offset: 640)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1522, file: !171, line: 2443, baseType: !1534, size: 128, offset: 704)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !1535)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !1536)
!1536 = !{!1537}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1535, file: !171, line: 182, baseType: !1141, size: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !756, file: !171, line: 3401, baseType: !1539, size: 320)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !1540)
!1540 = !{!1541, !1542, !1549}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1539, file: !171, line: 3329, baseType: !792, size: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1539, file: !171, line: 3330, baseType: !1543, size: 64, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !1545)
!1545 = !{!1546, !1547, !1548}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1544, file: !171, line: 3322, baseType: !1543, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1544, file: !171, line: 3323, baseType: !1543, size: 64, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1544, file: !171, line: 3324, baseType: !754, size: 64, offset: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1539, file: !171, line: 3331, baseType: !1543, size: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !756, file: !171, line: 3402, baseType: !1551, size: 256)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !1552)
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1551, file: !171, line: 1541, baseType: !792, size: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1551, file: !171, line: 1542, baseType: !1555, size: 64, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !1558)
!1558 = !{!1559}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1557, file: !171, line: 1538, baseType: !1560, size: 192)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !1562)
!1562 = !{!1563, !1564, !1565}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1561, file: !171, line: 1537, baseType: !7, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1561, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1561, file: !171, line: 1537, baseType: !1566, size: 128, offset: 64)
!1566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1567, size: 128, elements: !673)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !1569)
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1568, file: !171, line: 1533, baseType: !754, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1568, file: !171, line: 1534, baseType: !754, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !756, file: !171, line: 3403, baseType: !1573, size: 512)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1584, !1585, !1586}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1573, file: !171, line: 1939, baseType: !792, size: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1573, file: !171, line: 1940, baseType: !874, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1573, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1573, file: !171, line: 1946, baseType: !1579, size: 32, offset: 256)
!1579 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !1580)
!1580 = !{!1581, !1582, !1583}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1579, file: !171, line: 1943, baseType: !189, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1579, file: !171, line: 1944, baseType: !196, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1579, file: !171, line: 1945, baseType: !203, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1573, file: !171, line: 1950, baseType: !1199, size: 64, offset: 320)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1573, file: !171, line: 1951, baseType: !1199, size: 64, offset: 384)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1573, file: !171, line: 1953, baseType: !1147, size: 64, offset: 448)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !756, file: !171, line: 3404, baseType: !1588, size: 1664)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1588, file: !171, line: 3338, baseType: !792, size: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1588, file: !171, line: 3341, baseType: !1592, size: 1472, offset: 192)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1593, line: 410, size: 1472, elements: !1594)
!1593 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1592, file: !1593, line: 412, baseType: !631, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1592, file: !1593, line: 413, baseType: !631, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1592, file: !1593, line: 414, baseType: !631, size: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1592, file: !1593, line: 415, baseType: !631, size: 32, offset: 96)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1592, file: !1593, line: 416, baseType: !631, size: 32, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1592, file: !1593, line: 417, baseType: !631, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1592, file: !1593, line: 418, baseType: !630, size: 8, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1592, file: !1593, line: 419, baseType: !630, size: 8, offset: 200)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1592, file: !1593, line: 420, baseType: !1604, size: 8, offset: 208)
!1604 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1592, file: !1593, line: 421, baseType: !1604, size: 8, offset: 216)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1592, file: !1593, line: 422, baseType: !1604, size: 8, offset: 224)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1592, file: !1593, line: 423, baseType: !1604, size: 8, offset: 232)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1592, file: !1593, line: 424, baseType: !1604, size: 8, offset: 240)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1592, file: !1593, line: 425, baseType: !1604, size: 8, offset: 248)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1592, file: !1593, line: 426, baseType: !1604, size: 8, offset: 256)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1592, file: !1593, line: 427, baseType: !1604, size: 8, offset: 264)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1592, file: !1593, line: 428, baseType: !1604, size: 8, offset: 272)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1592, file: !1593, line: 429, baseType: !1604, size: 8, offset: 280)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1592, file: !1593, line: 430, baseType: !1604, size: 8, offset: 288)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1592, file: !1593, line: 431, baseType: !1604, size: 8, offset: 296)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1592, file: !1593, line: 432, baseType: !1604, size: 8, offset: 304)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1592, file: !1593, line: 433, baseType: !1604, size: 8, offset: 312)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1592, file: !1593, line: 434, baseType: !1604, size: 8, offset: 320)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1592, file: !1593, line: 435, baseType: !1604, size: 8, offset: 328)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1592, file: !1593, line: 436, baseType: !1604, size: 8, offset: 336)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1592, file: !1593, line: 437, baseType: !1604, size: 8, offset: 344)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1592, file: !1593, line: 438, baseType: !1604, size: 8, offset: 352)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1592, file: !1593, line: 439, baseType: !1604, size: 8, offset: 360)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1592, file: !1593, line: 440, baseType: !1604, size: 8, offset: 368)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1592, file: !1593, line: 441, baseType: !1604, size: 8, offset: 376)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1592, file: !1593, line: 442, baseType: !1604, size: 8, offset: 384)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1592, file: !1593, line: 443, baseType: !1604, size: 8, offset: 392)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1592, file: !1593, line: 444, baseType: !1604, size: 8, offset: 400)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1592, file: !1593, line: 445, baseType: !1604, size: 8, offset: 408)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1592, file: !1593, line: 446, baseType: !1604, size: 8, offset: 416)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1592, file: !1593, line: 447, baseType: !1604, size: 8, offset: 424)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1592, file: !1593, line: 448, baseType: !1604, size: 8, offset: 432)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1592, file: !1593, line: 449, baseType: !1604, size: 8, offset: 440)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1592, file: !1593, line: 450, baseType: !1604, size: 8, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1592, file: !1593, line: 451, baseType: !1604, size: 8, offset: 456)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1592, file: !1593, line: 452, baseType: !1604, size: 8, offset: 464)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1592, file: !1593, line: 453, baseType: !1604, size: 8, offset: 472)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1592, file: !1593, line: 454, baseType: !1604, size: 8, offset: 480)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1592, file: !1593, line: 455, baseType: !1604, size: 8, offset: 488)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1592, file: !1593, line: 456, baseType: !1604, size: 8, offset: 496)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1592, file: !1593, line: 457, baseType: !1604, size: 8, offset: 504)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1592, file: !1593, line: 458, baseType: !1604, size: 8, offset: 512)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1592, file: !1593, line: 459, baseType: !1604, size: 8, offset: 520)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1592, file: !1593, line: 460, baseType: !1604, size: 8, offset: 528)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1592, file: !1593, line: 461, baseType: !1604, size: 8, offset: 536)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1592, file: !1593, line: 462, baseType: !1604, size: 8, offset: 544)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1592, file: !1593, line: 463, baseType: !1604, size: 8, offset: 552)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1592, file: !1593, line: 464, baseType: !1604, size: 8, offset: 560)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1592, file: !1593, line: 465, baseType: !1604, size: 8, offset: 568)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1592, file: !1593, line: 466, baseType: !1604, size: 8, offset: 576)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1592, file: !1593, line: 467, baseType: !1604, size: 8, offset: 584)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1592, file: !1593, line: 468, baseType: !1604, size: 8, offset: 592)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1592, file: !1593, line: 469, baseType: !1604, size: 8, offset: 600)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1592, file: !1593, line: 470, baseType: !1604, size: 8, offset: 608)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1592, file: !1593, line: 471, baseType: !1604, size: 8, offset: 616)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1592, file: !1593, line: 472, baseType: !1604, size: 8, offset: 624)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1592, file: !1593, line: 473, baseType: !1604, size: 8, offset: 632)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1592, file: !1593, line: 474, baseType: !1604, size: 8, offset: 640)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1592, file: !1593, line: 475, baseType: !1604, size: 8, offset: 648)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1592, file: !1593, line: 476, baseType: !1604, size: 8, offset: 656)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1592, file: !1593, line: 477, baseType: !1604, size: 8, offset: 664)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1592, file: !1593, line: 478, baseType: !1604, size: 8, offset: 672)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1592, file: !1593, line: 479, baseType: !1604, size: 8, offset: 680)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1592, file: !1593, line: 480, baseType: !1604, size: 8, offset: 688)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1592, file: !1593, line: 481, baseType: !1604, size: 8, offset: 696)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1592, file: !1593, line: 482, baseType: !1604, size: 8, offset: 704)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1592, file: !1593, line: 483, baseType: !1604, size: 8, offset: 712)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1592, file: !1593, line: 484, baseType: !1604, size: 8, offset: 720)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1592, file: !1593, line: 485, baseType: !1604, size: 8, offset: 728)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1592, file: !1593, line: 486, baseType: !1604, size: 8, offset: 736)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1592, file: !1593, line: 487, baseType: !1604, size: 8, offset: 744)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1592, file: !1593, line: 488, baseType: !1604, size: 8, offset: 752)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1592, file: !1593, line: 489, baseType: !1604, size: 8, offset: 760)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1592, file: !1593, line: 490, baseType: !1604, size: 8, offset: 768)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1592, file: !1593, line: 491, baseType: !1604, size: 8, offset: 776)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1592, file: !1593, line: 492, baseType: !1604, size: 8, offset: 784)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1592, file: !1593, line: 493, baseType: !1604, size: 8, offset: 792)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1592, file: !1593, line: 494, baseType: !1604, size: 8, offset: 800)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1592, file: !1593, line: 495, baseType: !1604, size: 8, offset: 808)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1592, file: !1593, line: 496, baseType: !1604, size: 8, offset: 816)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1592, file: !1593, line: 497, baseType: !1604, size: 8, offset: 824)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1592, file: !1593, line: 498, baseType: !1604, size: 8, offset: 832)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1592, file: !1593, line: 499, baseType: !1604, size: 8, offset: 840)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1592, file: !1593, line: 500, baseType: !1604, size: 8, offset: 848)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1592, file: !1593, line: 501, baseType: !1604, size: 8, offset: 856)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1592, file: !1593, line: 502, baseType: !1604, size: 8, offset: 864)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1592, file: !1593, line: 503, baseType: !1604, size: 8, offset: 872)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1592, file: !1593, line: 504, baseType: !1604, size: 8, offset: 880)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1592, file: !1593, line: 505, baseType: !1604, size: 8, offset: 888)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1592, file: !1593, line: 506, baseType: !1604, size: 8, offset: 896)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1592, file: !1593, line: 507, baseType: !1604, size: 8, offset: 904)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1592, file: !1593, line: 508, baseType: !1604, size: 8, offset: 912)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1592, file: !1593, line: 509, baseType: !1604, size: 8, offset: 920)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1592, file: !1593, line: 510, baseType: !1604, size: 8, offset: 928)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1592, file: !1593, line: 511, baseType: !1604, size: 8, offset: 936)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1592, file: !1593, line: 512, baseType: !1604, size: 8, offset: 944)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1592, file: !1593, line: 513, baseType: !1604, size: 8, offset: 952)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1592, file: !1593, line: 514, baseType: !1604, size: 8, offset: 960)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1592, file: !1593, line: 515, baseType: !1604, size: 8, offset: 968)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1592, file: !1593, line: 516, baseType: !1604, size: 8, offset: 976)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1592, file: !1593, line: 517, baseType: !1604, size: 8, offset: 984)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1592, file: !1593, line: 518, baseType: !1604, size: 8, offset: 992)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1592, file: !1593, line: 519, baseType: !1604, size: 8, offset: 1000)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1592, file: !1593, line: 520, baseType: !1604, size: 8, offset: 1008)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1592, file: !1593, line: 521, baseType: !1604, size: 8, offset: 1016)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1592, file: !1593, line: 522, baseType: !1604, size: 8, offset: 1024)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1592, file: !1593, line: 523, baseType: !1604, size: 8, offset: 1032)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1592, file: !1593, line: 524, baseType: !1604, size: 8, offset: 1040)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1592, file: !1593, line: 525, baseType: !1604, size: 8, offset: 1048)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1592, file: !1593, line: 526, baseType: !1604, size: 8, offset: 1056)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1592, file: !1593, line: 527, baseType: !1604, size: 8, offset: 1064)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1592, file: !1593, line: 528, baseType: !1604, size: 8, offset: 1072)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1592, file: !1593, line: 529, baseType: !1604, size: 8, offset: 1080)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1592, file: !1593, line: 530, baseType: !1604, size: 8, offset: 1088)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1592, file: !1593, line: 531, baseType: !1604, size: 8, offset: 1096)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1592, file: !1593, line: 532, baseType: !1604, size: 8, offset: 1104)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1592, file: !1593, line: 533, baseType: !1604, size: 8, offset: 1112)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1592, file: !1593, line: 534, baseType: !1604, size: 8, offset: 1120)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1592, file: !1593, line: 535, baseType: !1604, size: 8, offset: 1128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1592, file: !1593, line: 536, baseType: !1604, size: 8, offset: 1136)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1592, file: !1593, line: 537, baseType: !1604, size: 8, offset: 1144)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1592, file: !1593, line: 538, baseType: !1604, size: 8, offset: 1152)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1592, file: !1593, line: 539, baseType: !1604, size: 8, offset: 1160)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1592, file: !1593, line: 540, baseType: !1604, size: 8, offset: 1168)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1592, file: !1593, line: 541, baseType: !1604, size: 8, offset: 1176)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1592, file: !1593, line: 542, baseType: !1604, size: 8, offset: 1184)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1592, file: !1593, line: 543, baseType: !1604, size: 8, offset: 1192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1592, file: !1593, line: 544, baseType: !1604, size: 8, offset: 1200)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1592, file: !1593, line: 545, baseType: !1604, size: 8, offset: 1208)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1592, file: !1593, line: 546, baseType: !1604, size: 8, offset: 1216)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1592, file: !1593, line: 547, baseType: !1604, size: 8, offset: 1224)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1592, file: !1593, line: 548, baseType: !1604, size: 8, offset: 1232)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1592, file: !1593, line: 549, baseType: !1604, size: 8, offset: 1240)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1592, file: !1593, line: 550, baseType: !1604, size: 8, offset: 1248)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1592, file: !1593, line: 551, baseType: !1604, size: 8, offset: 1256)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1592, file: !1593, line: 552, baseType: !1604, size: 8, offset: 1264)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1592, file: !1593, line: 553, baseType: !1604, size: 8, offset: 1272)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1592, file: !1593, line: 554, baseType: !1604, size: 8, offset: 1280)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1592, file: !1593, line: 555, baseType: !1604, size: 8, offset: 1288)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1592, file: !1593, line: 556, baseType: !1604, size: 8, offset: 1296)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1592, file: !1593, line: 557, baseType: !1604, size: 8, offset: 1304)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1592, file: !1593, line: 558, baseType: !1604, size: 8, offset: 1312)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1592, file: !1593, line: 559, baseType: !1604, size: 8, offset: 1320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1592, file: !1593, line: 560, baseType: !1604, size: 8, offset: 1328)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1592, file: !1593, line: 561, baseType: !1604, size: 8, offset: 1336)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1592, file: !1593, line: 562, baseType: !1604, size: 8, offset: 1344)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1592, file: !1593, line: 563, baseType: !1604, size: 8, offset: 1352)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1592, file: !1593, line: 564, baseType: !1604, size: 8, offset: 1360)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1592, file: !1593, line: 565, baseType: !1604, size: 8, offset: 1368)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1592, file: !1593, line: 566, baseType: !1604, size: 8, offset: 1376)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1592, file: !1593, line: 567, baseType: !1604, size: 8, offset: 1384)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1592, file: !1593, line: 568, baseType: !1604, size: 8, offset: 1392)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1592, file: !1593, line: 569, baseType: !1604, size: 8, offset: 1400)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1592, file: !1593, line: 570, baseType: !1604, size: 8, offset: 1408)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1592, file: !1593, line: 571, baseType: !1604, size: 8, offset: 1416)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1592, file: !1593, line: 572, baseType: !1604, size: 8, offset: 1424)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1592, file: !1593, line: 573, baseType: !1604, size: 8, offset: 1432)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1592, file: !1593, line: 574, baseType: !1604, size: 8, offset: 1440)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !756, file: !171, line: 3405, baseType: !1760, size: 384)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1760, file: !171, line: 3353, baseType: !792, size: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1760, file: !171, line: 3356, baseType: !1764, size: 192, offset: 192)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1593, line: 578, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1764, file: !1593, line: 580, baseType: !631, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1764, file: !1593, line: 581, baseType: !631, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1764, file: !1593, line: 582, baseType: !631, size: 32, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1764, file: !1593, line: 583, baseType: !631, size: 32, offset: 96)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1764, file: !1593, line: 584, baseType: !630, size: 8, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1764, file: !1593, line: 585, baseType: !630, size: 8, offset: 136)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1764, file: !1593, line: 586, baseType: !630, size: 8, offset: 144)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1764, file: !1593, line: 587, baseType: !630, size: 8, offset: 152)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1764, file: !1593, line: 588, baseType: !630, size: 8, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1764, file: !1593, line: 589, baseType: !630, size: 8, offset: 168)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1764, file: !1593, line: 590, baseType: !630, size: 8, offset: 176)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !659, file: !406, line: 178, baseType: !1173, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !659, file: !406, line: 179, baseType: !1779, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !406, line: 150, baseType: !1781)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !406, line: 142, size: 320, elements: !1782)
!1782 = !{!1783, !1784, !1785, !1786, !1787, !1788}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1781, file: !406, line: 144, baseType: !754, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1781, file: !406, line: 145, baseType: !638, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1781, file: !406, line: 146, baseType: !638, size: 64, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1781, file: !406, line: 147, baseType: !1442, size: 32, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1781, file: !406, line: 148, baseType: !7, size: 32, offset: 224)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1781, file: !406, line: 149, baseType: !630, size: 8, offset: 256)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !659, file: !406, line: 180, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !406, line: 162, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !406, line: 159, size: 128, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1792, file: !406, line: 160, baseType: !754, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1792, file: !406, line: 161, baseType: !725, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !659, file: !406, line: 181, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !406, line: 181, flags: DIFlagFwdDecl)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !654, file: !406, line: 317, baseType: !1800, size: 64)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 64, elements: !673)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !654, file: !406, line: 318, baseType: !1802, size: 320)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !406, line: 188, size: 320, elements: !1803)
!1803 = !{!1804, !1806, !1861}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1802, file: !406, line: 190, baseType: !1805, size: 192)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 192, elements: !825)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1802, file: !406, line: 193, baseType: !1807, size: 64, offset: 192)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !406, line: 206, size: 320, elements: !1809)
!1809 = !{!1810, !1846, !1847, !1848, !1860}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1808, file: !406, line: 208, baseType: !1811, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !639, line: 62, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1814, line: 538, size: 256, elements: !1815)
!1814 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1815 = !{!1816, !1820, !1826, !1837}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1813, file: !1814, line: 539, baseType: !1817, size: 32)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1814, line: 482, size: 32, elements: !1818)
!1818 = !{!1819}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1817, file: !1814, line: 484, baseType: !7, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1813, file: !1814, line: 540, baseType: !1821, size: 192)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1814, line: 488, size: 192, elements: !1822)
!1822 = !{!1823, !1824, !1825}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1821, file: !1814, line: 489, baseType: !1817, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1821, file: !1814, line: 492, baseType: !636, size: 64, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1821, file: !1814, line: 496, baseType: !754, size: 64, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1813, file: !1814, line: 541, baseType: !1827, size: 256)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1814, line: 504, size: 256, elements: !1828)
!1828 = !{!1829, !1830, !1835, !1836}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1827, file: !1814, line: 505, baseType: !1817, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1827, file: !1814, line: 509, baseType: !1831, size: 64, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1814, line: 501, baseType: !1832)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{null, !1095}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1827, file: !1814, line: 510, baseType: !1095, size: 64, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1827, file: !1814, line: 513, baseType: !1811, size: 64, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1813, file: !1814, line: 542, baseType: !1838, size: 128)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1814, line: 530, size: 128, elements: !1839)
!1839 = !{!1840, !1841}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1838, file: !1814, line: 531, baseType: !1817, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1838, file: !1814, line: 534, baseType: !1842, size: 64, offset: 64)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1814, line: 525, baseType: !1843)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!630, !754, !636, !708, !708}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1808, file: !406, line: 211, baseType: !7, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1808, file: !406, line: 214, baseType: !725, size: 64, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1808, file: !406, line: 224, baseType: !1849, size: 64, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !406, line: 202, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !406, line: 202, size: 128, elements: !1852)
!1852 = !{!1853}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1851, file: !406, line: 202, baseType: !1854, size: 128)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !406, line: 200, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !406, line: 200, size: 128, elements: !1856)
!1856 = !{!1857, !1858, !1859}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1855, file: !406, line: 200, baseType: !7, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1855, file: !406, line: 200, baseType: !7, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1855, file: !406, line: 200, baseType: !672, size: 64, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1808, file: !406, line: 234, baseType: !1849, size: 64, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1802, file: !406, line: 197, baseType: !725, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !654, file: !406, line: 319, baseType: !814, size: 256)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !654, file: !406, line: 320, baseType: !833, size: 192)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !398, line: 218, baseType: !631)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !639, line: 47, baseType: !692)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "choice_entry", file: !3, line: 2388, size: 192, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1869, file: !3, line: 2391, baseType: !631, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "rest", scope: !1869, file: !3, line: 2393, baseType: !631, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1869, file: !3, line: 2395, baseType: !631, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1869, file: !3, line: 2397, baseType: !1875, size: 64, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "state_t", file: !1876, line: 158, baseType: !635)
!1876 = !DIFile(filename: "./insn-attr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1880, line: 42, baseType: !708)
!1880 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !155, line: 283, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !155, line: 283, size: 128, elements: !1884)
!1884 = !{!1885}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1883, file: !155, line: 283, baseType: !1309, size: 128)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_heap", file: !406, line: 201, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_heap", file: !406, line: 201, size: 128, elements: !1889)
!1889 = !{!1890}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1888, file: !406, line: 201, baseType: !1854, size: 128)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1155, line: 32, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1155, line: 32, size: 96, elements: !1894)
!1894 = !{!1895}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1893, file: !1155, line: 32, baseType: !1896, size: 96)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1155, line: 31, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1155, line: 31, size: 96, elements: !1898)
!1898 = !{!1899, !1900, !1901}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1897, file: !1155, line: 31, baseType: !7, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1897, file: !1155, line: 31, baseType: !7, size: 32, offset: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1897, file: !1155, line: 31, baseType: !1902, size: 32, offset: 64)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 32, elements: !673)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_insn_data_def_heap", file: !398, line: 826, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_insn_data_def_heap", file: !398, line: 826, size: 832, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1905, file: !398, line: 826, baseType: !1908, size: 832)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_insn_data_def_base", file: !398, line: 825, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_insn_data_def_base", file: !398, line: 825, size: 832, elements: !1910)
!1910 = !{!1911, !1912, !1913}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1909, file: !398, line: 825, baseType: !7, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1909, file: !398, line: 825, baseType: !7, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1909, file: !398, line: 825, baseType: !1914, size: 768, offset: 64)
!1914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1915, size: 768, elements: !673)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_insn_data_def", file: !398, line: 822, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_insn_data", file: !398, line: 751, size: 768, elements: !1917)
!1917 = !{!1918, !1919, !1920, !1921, !1922, !1923, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1941, !1943, !1951, !1958}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !1916, file: !398, line: 758, baseType: !631, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1916, file: !398, line: 761, baseType: !631, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !1916, file: !398, line: 765, baseType: !631, size: 32, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "inter_tick", scope: !1916, file: !398, line: 769, baseType: !631, size: 32, offset: 96)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !1916, file: !398, line: 772, baseType: !631, size: 32, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !1916, file: !398, line: 774, baseType: !1924, size: 16, offset: 160)
!1924 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "fed_by_spec_load", scope: !1916, file: !398, line: 778, baseType: !7, size: 1, offset: 176, flags: DIFlagBitField, extraData: i64 176)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "is_load_insn", scope: !1916, file: !398, line: 779, baseType: !7, size: 1, offset: 177, flags: DIFlagBitField, extraData: i64 176)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "priority_status", scope: !1916, file: !398, line: 784, baseType: !1604, size: 8, offset: 184)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "todo_spec", scope: !1916, file: !398, line: 787, baseType: !1865, size: 32, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "done_spec", scope: !1916, file: !398, line: 790, baseType: !1865, size: 32, offset: 224)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "check_spec", scope: !1916, file: !398, line: 793, baseType: !1865, size: 32, offset: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_block", scope: !1916, file: !398, line: 796, baseType: !1172, size: 64, offset: 320)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pat", scope: !1916, file: !398, line: 799, baseType: !638, size: 64, offset: 384)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !1916, file: !398, line: 804, baseType: !1934, size: 64, offset: 448)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_pressure_data", file: !398, line: 711, size: 32, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1940}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "clobber_increase", scope: !1935, file: !398, line: 714, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "set_increase", scope: !1935, file: !398, line: 717, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "unused_set_increase", scope: !1935, file: !398, line: 720, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !1935, file: !398, line: 722, baseType: !631, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_pressure", scope: !1916, file: !398, line: 810, baseType: !1942, size: 64, offset: 512)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "reg_use_list", scope: !1916, file: !398, line: 813, baseType: !1944, size: 64, offset: 576)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_use_data", file: !398, line: 726, size: 256, elements: !1946)
!1946 = !{!1947, !1948, !1949, !1950}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !1945, file: !398, line: 729, baseType: !631, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1945, file: !398, line: 731, baseType: !638, size: 64, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_use", scope: !1945, file: !398, line: 733, baseType: !1944, size: 64, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_use", scope: !1945, file: !398, line: 735, baseType: !1944, size: 64, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set_list", scope: !1916, file: !398, line: 816, baseType: !1952, size: 64, offset: 640)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_set_data", file: !398, line: 741, size: 192, elements: !1954)
!1954 = !{!1955, !1956, !1957}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !1953, file: !398, line: 744, baseType: !631, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1953, file: !398, line: 746, baseType: !638, size: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_set", scope: !1953, file: !398, line: 748, baseType: !1952, size: 64, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure_excess_cost_change", scope: !1916, file: !398, line: 819, baseType: !631, size: 32, offset: 704)
!1959 = !{!0, !1960, !2013, !2025, !2027, !2029, !2038, !2060, !2062, !2064, !2066, !2068, !2071, !2073, !2075, !2077, !2079, !2081, !2083, !2085, !2087, !2089, !2091, !2093, !2095, !2097, !2099, !2118, !2120, !2125, !2130, !2177, !2179, !2181, !2183, !2185, !2187, !2189, !2191, !2193, !2195, !2197, !2199, !2201, !2220, !2222, !2234, !2236, !2238, !2240, !2242, !2245, !2247, !2286, !2288}
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "sched_dump", scope: !2, file: !3, line: 174, type: !1962, isLocal: false, isDefinition: true)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1964, line: 7, baseType: !1965)
!1964 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1966, line: 49, size: 1728, elements: !1967)
!1966 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1983, !1985, !1986, !1987, !1990, !1992, !1993, !1994, !1997, !1999, !2002, !2005, !2006, !2007, !2008, !2009}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1965, file: !1966, line: 51, baseType: !631, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1965, file: !1966, line: 54, baseType: !633, size: 64, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1965, file: !1966, line: 55, baseType: !633, size: 64, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1965, file: !1966, line: 56, baseType: !633, size: 64, offset: 192)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1965, file: !1966, line: 57, baseType: !633, size: 64, offset: 256)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1965, file: !1966, line: 58, baseType: !633, size: 64, offset: 320)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1965, file: !1966, line: 59, baseType: !633, size: 64, offset: 384)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1965, file: !1966, line: 60, baseType: !633, size: 64, offset: 448)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1965, file: !1966, line: 61, baseType: !633, size: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1965, file: !1966, line: 64, baseType: !633, size: 64, offset: 576)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1965, file: !1966, line: 65, baseType: !633, size: 64, offset: 640)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1965, file: !1966, line: 66, baseType: !633, size: 64, offset: 704)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1965, file: !1966, line: 68, baseType: !1981, size: 64, offset: 768)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1966, line: 36, flags: DIFlagFwdDecl)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1965, file: !1966, line: 70, baseType: !1984, size: 64, offset: 832)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1965, file: !1966, line: 72, baseType: !631, size: 32, offset: 896)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1965, file: !1966, line: 73, baseType: !631, size: 32, offset: 928)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1965, file: !1966, line: 74, baseType: !1988, size: 64, offset: 960)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1989, line: 152, baseType: !725)
!1989 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1965, file: !1966, line: 77, baseType: !1991, size: 16, offset: 1024)
!1991 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1965, file: !1966, line: 78, baseType: !1604, size: 8, offset: 1040)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1965, file: !1966, line: 79, baseType: !849, size: 8, offset: 1048)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1965, file: !1966, line: 81, baseType: !1995, size: 64, offset: 1088)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1966, line: 43, baseType: null)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1965, file: !1966, line: 89, baseType: !1998, size: 64, offset: 1152)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1989, line: 153, baseType: !725)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1965, file: !1966, line: 91, baseType: !2000, size: 64, offset: 1216)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1966, line: 37, flags: DIFlagFwdDecl)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1965, file: !1966, line: 92, baseType: !2003, size: 64, offset: 1280)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1966, line: 38, flags: DIFlagFwdDecl)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1965, file: !1966, line: 93, baseType: !1984, size: 64, offset: 1344)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1965, file: !1966, line: 94, baseType: !635, size: 64, offset: 1408)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1965, file: !1966, line: 95, baseType: !1110, size: 64, offset: 1472)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1965, file: !1966, line: 96, baseType: !631, size: 32, offset: 1536)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1965, file: !1966, line: 98, baseType: !2010, size: 160, offset: 1568)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 160, elements: !2011)
!2011 = !{!2012}
!2012 = !DISubrange(count: 20)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "spec_info", scope: !2, file: !3, line: 212, type: !2015, isLocal: false, isDefinition: true)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_info_t", file: !398, line: 646, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spec_info_def", file: !398, line: 626, size: 256, elements: !2018)
!2018 = !{!2019, !2020, !2021, !2023, !2024}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2017, file: !398, line: 630, baseType: !631, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !2017, file: !398, line: 633, baseType: !1962, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "data_weakness_cutoff", scope: !2017, file: !398, line: 637, baseType: !2022, size: 32, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "dw_t", file: !398, line: 221, baseType: !631)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "control_weakness_cutoff", scope: !2017, file: !398, line: 641, baseType: !631, size: 32, offset: 160)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2017, file: !398, line: 644, baseType: !631, size: 32, offset: 192)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "adding_bb_to_current_region_p", scope: !2, file: !3, line: 237, type: !630, isLocal: false, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "ready_try", scope: !2, file: !3, line: 311, type: !633, isLocal: false, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "ready", scope: !2, file: !3, line: 314, type: !2031, isLocal: false, isDefinition: true)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ready_list", file: !398, line: 186, size: 192, elements: !2032)
!2032 = !{!2033, !2034, !2035, !2036, !2037}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2031, file: !398, line: 188, baseType: !1864, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "veclen", scope: !2031, file: !398, line: 189, baseType: !631, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2031, file: !398, line: 190, baseType: !631, size: 32, offset: 96)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "n_ready", scope: !2031, file: !398, line: 191, baseType: !631, size: 32, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "n_debug", scope: !2031, file: !398, line: 192, baseType: !631, size: 32, offset: 160)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "haifa_common_sched_info", scope: !2, file: !3, line: 339, type: !2040, isLocal: false, isDefinition: true)
!2040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "common_sched_info_def", file: !398, line: 81, size: 320, elements: !2042)
!2042 = !{!2043, !2047, !2051, !2055, !2059}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fix_recovery_cfg", scope: !2041, file: !398, line: 89, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{null, !631, !631, !631}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "add_block", scope: !2041, file: !398, line: 96, baseType: !2048, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null, !1172, !1172}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_number_of_insns", scope: !2041, file: !398, line: 99, baseType: !2052, size: 64, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!631, !1172}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "luid_for_non_insn", scope: !2041, file: !398, line: 105, baseType: !2056, size: 64, offset: 192)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!631, !638}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "sched_pass_id", scope: !2041, file: !398, line: 108, baseType: !397, size: 32, offset: 256)
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "sched_luids", scope: !2, file: !3, line: 351, type: !1891, isLocal: false, isDefinition: true)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "sched_max_luid", scope: !2, file: !3, line: 354, type: !631, isLocal: false, isDefinition: true)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "h_i_d", scope: !2, file: !3, line: 357, type: !1903, isLocal: false, isDefinition: true)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "issue_rate", scope: !2, file: !3, line: 158, type: !631, isLocal: false, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "common_sched_info", scope: !2, file: !3, line: 190, type: !2070, isLocal: false, isDefinition: true)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "note_list", scope: !2, file: !3, line: 207, type: !638, isLocal: false, isDefinition: true)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "spec_info_var", scope: !2, file: !3, line: 209, type: !2017, isLocal: true, isDefinition: true)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "haifa_recovery_bb_recently_added_p", scope: !2, file: !3, line: 216, type: !630, isLocal: true, isDefinition: true)
!2077 = !DIGlobalVariableExpression(var: !2078, expr: !DIExpression())
!2078 = distinct !DIGlobalVariable(name: "haifa_recovery_bb_ever_added_p", scope: !2, file: !3, line: 221, type: !630, isLocal: false, isDefinition: true)
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "nr_begin_data", scope: !2, file: !3, line: 224, type: !631, isLocal: true, isDefinition: true)
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "nr_be_in_data", scope: !2, file: !3, line: 224, type: !631, isLocal: true, isDefinition: true)
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(name: "nr_begin_control", scope: !2, file: !3, line: 224, type: !631, isLocal: true, isDefinition: true)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "nr_be_in_control", scope: !2, file: !3, line: 224, type: !631, isLocal: true, isDefinition: true)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "before_recovery", scope: !2, file: !3, line: 230, type: !1172, isLocal: true, isDefinition: true)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(name: "after_recovery", scope: !2, file: !3, line: 234, type: !1172, isLocal: false, isDefinition: true)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "insn_queue", scope: !2, file: !3, line: 284, type: !1864, isLocal: true, isDefinition: true)
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(name: "curr_state", scope: !2, file: !3, line: 303, type: !1875, isLocal: false, isDefinition: true)
!2095 = !DIGlobalVariableExpression(var: !2096, expr: !DIExpression())
!2096 = distinct !DIGlobalVariable(name: "dfa_state_size", scope: !2, file: !3, line: 307, type: !1110, isLocal: false, isDefinition: true)
!2097 = !DIGlobalVariableExpression(var: !2098, expr: !DIExpression())
!2098 = distinct !DIGlobalVariable(name: "clock_var", scope: !2, file: !3, line: 320, type: !631, isLocal: true, isDefinition: true)
!2099 = !DIGlobalVariableExpression(var: !2100, expr: !DIExpression())
!2100 = distinct !DIGlobalVariable(name: "sched_scan_info", scope: !2, file: !3, line: 348, type: !2101, isLocal: false, isDefinition: true)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2103)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_scan_info_def", file: !398, line: 44, size: 256, elements: !2104)
!2104 = !{!2105, !2109, !2113, !2114}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "extend_bb", scope: !2103, file: !398, line: 49, baseType: !2106, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{null}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "init_bb", scope: !2103, file: !398, line: 53, baseType: !2110, size: 64, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{null, !1172}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "extend_insn", scope: !2103, file: !398, line: 58, baseType: !2106, size: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "init_insn", scope: !2103, file: !398, line: 62, baseType: !2115, size: 64, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{null, !638}
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "sched_init_only_bb", scope: !2, file: !3, line: 359, type: !2048, isLocal: false, isDefinition: true)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(name: "sched_split_block", scope: !2, file: !3, line: 363, type: !2122, isLocal: false, isDefinition: true)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!1172, !1172, !638}
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "sched_create_empty_bb", scope: !2, file: !3, line: 366, type: !2127, isLocal: false, isDefinition: true)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!1172, !1172}
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "current_sched_info", scope: !2, file: !3, line: 581, type: !2132, isLocal: false, isDefinition: true)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "haifa_sched_info", file: !398, line: 556, size: 1088, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2141, !2145, !2149, !2156, !2157, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2171, !2175, !2176}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "init_ready_list", scope: !2133, file: !398, line: 560, baseType: !2106, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "can_schedule_ready_p", scope: !2133, file: !398, line: 563, baseType: !2056, size: 64, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_more_p", scope: !2133, file: !398, line: 565, baseType: !2138, size: 64, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!631}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "new_ready", scope: !2133, file: !398, line: 571, baseType: !2142, size: 64, offset: 192)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!1865, !638, !1865}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "rank", scope: !2133, file: !398, line: 575, baseType: !2146, size: 64, offset: 256)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!631, !638, !638}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "print_insn", scope: !2133, file: !398, line: 580, baseType: !2150, size: 64, offset: 320)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!636, !2153, !631}
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !639, line: 51, baseType: !2154)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "contributes_to_priority", scope: !2133, file: !398, line: 583, baseType: !2146, size: 64, offset: 384)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "insn_finishes_block_p", scope: !2133, file: !398, line: 587, baseType: !2158, size: 64, offset: 448)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!630, !638}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "prev_head", scope: !2133, file: !398, line: 590, baseType: !638, size: 64, offset: 512)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "next_tail", scope: !2133, file: !398, line: 590, baseType: !638, size: 64, offset: 576)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2133, file: !398, line: 594, baseType: !638, size: 64, offset: 640)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2133, file: !398, line: 594, baseType: !638, size: 64, offset: 704)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "queue_must_finish_empty", scope: !2133, file: !398, line: 597, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "sched_max_insns_priority", scope: !2133, file: !398, line: 600, baseType: !631, size: 32, offset: 800)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "add_remove_insn", scope: !2133, file: !398, line: 606, baseType: !2168, size: 64, offset: 832)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{null, !638, !631}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "begin_schedule_ready", scope: !2133, file: !398, line: 611, baseType: !2172, size: 64, offset: 896)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{null, !638, !638}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "advance_target_bb", scope: !2133, file: !398, line: 617, baseType: !2122, size: 64, offset: 960)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2133, file: !398, line: 621, baseType: !7, size: 32, offset: 1024)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "sched_pressure_p", scope: !2, file: !3, line: 592, type: !630, isLocal: false, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "sched_regno_cover_class", scope: !2, file: !3, line: 596, type: !1866, isLocal: false, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "curr_reg_live", scope: !2, file: !3, line: 606, type: !1867, isLocal: true, isDefinition: true)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "saved_reg_live", scope: !2, file: !3, line: 609, type: !1867, isLocal: true, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "region_ref_regs", scope: !2, file: !3, line: 612, type: !1867, isLocal: true, isDefinition: true)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "last_scheduled_insn", scope: !2, file: !3, line: 799, type: !638, isLocal: true, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "last_clock_var", scope: !2, file: !3, line: 1566, type: !631, isLocal: true, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "choice_stack", scope: !2, file: !3, line: 2402, type: !1868, isLocal: true, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "cycle_issued_insns", scope: !2, file: !3, line: 2407, type: !631, isLocal: false, isDefinition: true)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "dfa_lookahead", scope: !2, file: !3, line: 2410, type: !631, isLocal: false, isDefinition: true)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "max_lookahead_tries", scope: !2, file: !3, line: 2421, type: !631, isLocal: true, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "sched_verbose_param", scope: !2, file: !3, line: 169, type: !631, isLocal: true, isDefinition: true)
!2201 = !DIGlobalVariableExpression(var: !2202, expr: !DIExpression())
!2202 = distinct !DIGlobalVariable(name: "death", scope: !2203, file: !3, line: 1133, type: !2217, isLocal: true, isDefinition: true)
!2203 = distinct !DISubprogram(name: "setup_insn_reg_pressure_info", scope: !3, file: !3, line: 1124, type: !2116, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2204 = !{!2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2205 = !DILocalVariable(name: "insn", arg: 1, scope: !2203, file: !3, line: 1124, type: !638)
!2206 = !DILocalVariable(name: "i", scope: !2203, file: !3, line: 1126, type: !631)
!2207 = !DILocalVariable(name: "change", scope: !2203, file: !3, line: 1126, type: !631)
!2208 = !DILocalVariable(name: "before", scope: !2203, file: !3, line: 1126, type: !631)
!2209 = !DILocalVariable(name: "after", scope: !2203, file: !3, line: 1126, type: !631)
!2210 = !DILocalVariable(name: "hard_regno", scope: !2203, file: !3, line: 1126, type: !631)
!2211 = !DILocalVariable(name: "excess_cost_change", scope: !2203, file: !3, line: 1127, type: !631)
!2212 = !DILocalVariable(name: "mode", scope: !2203, file: !3, line: 1128, type: !5)
!2213 = !DILocalVariable(name: "cl", scope: !2203, file: !3, line: 1129, type: !598)
!2214 = !DILocalVariable(name: "pressure_info", scope: !2203, file: !3, line: 1130, type: !1934)
!2215 = !DILocalVariable(name: "max_reg_pressure", scope: !2203, file: !3, line: 1131, type: !1942)
!2216 = !DILocalVariable(name: "use", scope: !2203, file: !3, line: 1132, type: !1944)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 864, elements: !2218)
!2218 = !{!2219}
!2219 = !DISubrange(count: 27)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "curr_reg_pressure", scope: !2, file: !3, line: 600, type: !2217, isLocal: true, isDefinition: true)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "max_reg_pressure", scope: !2224, file: !3, line: 1591, type: !2217, isLocal: true, isDefinition: true)
!2224 = distinct !DISubprogram(name: "setup_insn_max_reg_pressure", scope: !3, file: !3, line: 1586, type: !2225, scopeLine: 1587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2227)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{null, !638, !630}
!2227 = !{!2228, !2229, !2230, !2231, !2232, !2233}
!2228 = !DILocalVariable(name: "after", arg: 1, scope: !2224, file: !3, line: 1586, type: !638)
!2229 = !DILocalVariable(name: "update_p", arg: 2, scope: !2224, file: !3, line: 1586, type: !630)
!2230 = !DILocalVariable(name: "i", scope: !2224, file: !3, line: 1588, type: !631)
!2231 = !DILocalVariable(name: "p", scope: !2224, file: !3, line: 1588, type: !631)
!2232 = !DILocalVariable(name: "eq_p", scope: !2224, file: !3, line: 1589, type: !630)
!2233 = !DILocalVariable(name: "insn", scope: !2224, file: !3, line: 1590, type: !638)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "saved_reg_pressure", scope: !2, file: !3, line: 603, type: !2217, isLocal: true, isDefinition: true)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "cached_first_cycle_multipass_dfa_lookahead", scope: !2, file: !3, line: 2426, type: !631, isLocal: true, isDefinition: true)
!2238 = !DIGlobalVariableExpression(var: !2239, expr: !DIExpression())
!2239 = distinct !DIGlobalVariable(name: "q_ptr", scope: !2, file: !3, line: 285, type: !631, isLocal: true, isDefinition: true)
!2240 = !DIGlobalVariableExpression(var: !2241, expr: !DIExpression())
!2241 = distinct !DIGlobalVariable(name: "q_size", scope: !2, file: !3, line: 286, type: !631, isLocal: true, isDefinition: true)
!2242 = !DIGlobalVariableExpression(var: !2243, expr: !DIExpression())
!2243 = distinct !DIGlobalVariable(name: "readyp", scope: !2, file: !3, line: 317, type: !2244, isLocal: true, isDefinition: true)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "cached_issue_rate", scope: !2, file: !3, line: 2430, type: !631, isLocal: true, isDefinition: true)
!2247 = !DIGlobalVariableExpression(var: !2248, expr: !DIExpression())
!2248 = distinct !DIGlobalVariable(name: "null_link", scope: !2249, file: !398, line: 1430, type: !2260, isLocal: true, isDefinition: true)
!2249 = distinct !DISubprogram(name: "sd_iterator_start", scope: !398, file: !398, line: 1427, type: !2250, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2282)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{!2252, !638, !2256}
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_iterator_def", file: !398, line: 1414, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sd_iterator", file: !398, line: 1395, size: 256, elements: !2254)
!2254 = !{!2255, !2257, !2258, !2281}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2253, file: !398, line: 1398, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_list_types_def", file: !398, line: 1390, baseType: !631)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2253, file: !398, line: 1401, baseType: !638, size: 64, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "linkp", scope: !2253, file: !398, line: 1408, baseType: !2259, size: 64, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_link_t", file: !398, line: 280, baseType: !2261)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_link", file: !398, line: 265, size: 192, elements: !2263)
!2263 = !{!2264, !2278, !2279}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2262, file: !398, line: 268, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_node_t", file: !398, line: 261, baseType: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_node", file: !398, line: 405, size: 576, elements: !2268)
!2268 = !{!2269, !2270, !2277}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2267, file: !398, line: 408, baseType: !2262, size: 192)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "dep", scope: !2267, file: !398, line: 411, baseType: !2271, size: 192, offset: 192)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep", file: !398, line: 227, size: 192, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "pro", scope: !2271, file: !398, line: 230, baseType: !638, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !2271, file: !398, line: 233, baseType: !638, size: 64, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2271, file: !398, line: 237, baseType: !405, size: 32, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2271, file: !398, line: 241, baseType: !1865, size: 32, offset: 160)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "forw", scope: !2267, file: !398, line: 414, baseType: !2262, size: 192, offset: 384)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2262, file: !398, line: 271, baseType: !2261, size: 64, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "prev_nextp", scope: !2262, file: !398, line: 278, baseType: !2280, size: 64, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_p", scope: !2253, file: !398, line: 1411, baseType: !630, size: 8, offset: 192)
!2282 = !{!2283, !2284, !2285}
!2283 = !DILocalVariable(name: "insn", arg: 1, scope: !2249, file: !398, line: 1427, type: !638)
!2284 = !DILocalVariable(name: "types", arg: 2, scope: !2249, file: !398, line: 1427, type: !2256)
!2285 = !DILocalVariable(name: "i", scope: !2249, file: !398, line: 1432, type: !2252)
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(name: "sched_ready_n_insns", scope: !2, file: !3, line: 3923, type: !631, isLocal: true, isDefinition: true)
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(name: "bb_header", scope: !2, file: !3, line: 227, type: !1864, isLocal: true, isDefinition: true)
!2290 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2291 = !{i32 2, !"Dwarf Version", i32 4}
!2292 = !{i32 2, !"Debug Info Version", i32 3}
!2293 = !{i32 1, !"wchar_size", i32 4}
!2294 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2295 = distinct !DISubprogram(name: "vprintf", scope: !2296, file: !2296, line: 39, type: !2297, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2307)
!2296 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!631, !2299, !2300}
!2299 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !636)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2306}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2301, file: !3, baseType: !7, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2301, file: !3, baseType: !7, size: 32, offset: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2301, file: !3, baseType: !635, size: 64, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2301, file: !3, baseType: !635, size: 64, offset: 128)
!2307 = !{!2308, !2309}
!2308 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2295, file: !2296, line: 39, type: !2299)
!2309 = !DILocalVariable(name: "__arg", arg: 2, scope: !2295, file: !2296, line: 39, type: !2300)
!2310 = !DILocation(line: 0, scope: !2295)
!2311 = !DILocation(line: 41, column: 20, scope: !2295)
!2312 = !DILocation(line: 41, column: 10, scope: !2295)
!2313 = !DILocation(line: 41, column: 3, scope: !2295)
!2314 = distinct !DISubprogram(name: "getchar", scope: !2296, file: !2296, line: 47, type: !2139, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2315 = !{}
!2316 = !DILocation(line: 49, column: 16, scope: !2314)
!2317 = !DILocation(line: 49, column: 10, scope: !2314)
!2318 = !DILocation(line: 49, column: 3, scope: !2314)
!2319 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2296, file: !2296, line: 56, type: !2320, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2322)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{!631, !1962}
!2322 = !{!2323}
!2323 = !DILocalVariable(name: "__fp", arg: 1, scope: !2319, file: !2296, line: 56, type: !1962)
!2324 = !DILocation(line: 0, scope: !2319)
!2325 = !DILocation(line: 58, column: 10, scope: !2319)
!2326 = !DILocation(line: 58, column: 3, scope: !2319)
!2327 = distinct !DISubprogram(name: "getc_unlocked", scope: !2296, file: !2296, line: 66, type: !2320, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2328)
!2328 = !{!2329}
!2329 = !DILocalVariable(name: "__fp", arg: 1, scope: !2327, file: !2296, line: 66, type: !1962)
!2330 = !DILocation(line: 0, scope: !2327)
!2331 = !DILocation(line: 68, column: 10, scope: !2327)
!2332 = !DILocation(line: 68, column: 3, scope: !2327)
!2333 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2296, file: !2296, line: 73, type: !2139, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2334 = !DILocation(line: 75, column: 10, scope: !2333)
!2335 = !DILocation(line: 75, column: 3, scope: !2333)
!2336 = distinct !DISubprogram(name: "putchar", scope: !2296, file: !2296, line: 82, type: !2337, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2339)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!631, !631}
!2339 = !{!2340}
!2340 = !DILocalVariable(name: "__c", arg: 1, scope: !2336, file: !2296, line: 82, type: !631)
!2341 = !DILocation(line: 0, scope: !2336)
!2342 = !DILocation(line: 84, column: 21, scope: !2336)
!2343 = !DILocation(line: 84, column: 10, scope: !2336)
!2344 = !DILocation(line: 84, column: 3, scope: !2336)
!2345 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2296, file: !2296, line: 91, type: !2346, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2348)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!631, !631, !1962}
!2348 = !{!2349, !2350}
!2349 = !DILocalVariable(name: "__c", arg: 1, scope: !2345, file: !2296, line: 91, type: !631)
!2350 = !DILocalVariable(name: "__stream", arg: 2, scope: !2345, file: !2296, line: 91, type: !1962)
!2351 = !DILocation(line: 0, scope: !2345)
!2352 = !DILocation(line: 93, column: 10, scope: !2345)
!2353 = !DILocation(line: 93, column: 3, scope: !2345)
!2354 = distinct !DISubprogram(name: "putc_unlocked", scope: !2296, file: !2296, line: 101, type: !2346, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2355)
!2355 = !{!2356, !2357}
!2356 = !DILocalVariable(name: "__c", arg: 1, scope: !2354, file: !2296, line: 101, type: !631)
!2357 = !DILocalVariable(name: "__stream", arg: 2, scope: !2354, file: !2296, line: 101, type: !1962)
!2358 = !DILocation(line: 0, scope: !2354)
!2359 = !DILocation(line: 103, column: 10, scope: !2354)
!2360 = !DILocation(line: 103, column: 3, scope: !2354)
!2361 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2296, file: !2296, line: 108, type: !2337, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2362)
!2362 = !{!2363}
!2363 = !DILocalVariable(name: "__c", arg: 1, scope: !2361, file: !2296, line: 108, type: !631)
!2364 = !DILocation(line: 0, scope: !2361)
!2365 = !DILocation(line: 110, column: 10, scope: !2361)
!2366 = !DILocation(line: 110, column: 3, scope: !2361)
!2367 = distinct !DISubprogram(name: "getline", scope: !2296, file: !2296, line: 118, type: !2368, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2372)
!2368 = !DISubroutineType(types: !2369)
!2369 = !{!2370, !632, !2371, !1962}
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1989, line: 193, baseType: !725)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!2372 = !{!2373, !2374, !2375}
!2373 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2367, file: !2296, line: 118, type: !632)
!2374 = !DILocalVariable(name: "__n", arg: 2, scope: !2367, file: !2296, line: 118, type: !2371)
!2375 = !DILocalVariable(name: "__stream", arg: 3, scope: !2367, file: !2296, line: 118, type: !1962)
!2376 = !DILocation(line: 0, scope: !2367)
!2377 = !DILocation(line: 120, column: 10, scope: !2367)
!2378 = !DILocation(line: 120, column: 3, scope: !2367)
!2379 = distinct !DISubprogram(name: "feof_unlocked", scope: !2296, file: !2296, line: 128, type: !2320, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2380)
!2380 = !{!2381}
!2381 = !DILocalVariable(name: "__stream", arg: 1, scope: !2379, file: !2296, line: 128, type: !1962)
!2382 = !DILocation(line: 0, scope: !2379)
!2383 = !DILocation(line: 130, column: 10, scope: !2379)
!2384 = !DILocation(line: 130, column: 3, scope: !2379)
!2385 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2296, file: !2296, line: 135, type: !2320, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2386)
!2386 = !{!2387}
!2387 = !DILocalVariable(name: "__stream", arg: 1, scope: !2385, file: !2296, line: 135, type: !1962)
!2388 = !DILocation(line: 0, scope: !2385)
!2389 = !DILocation(line: 137, column: 10, scope: !2385)
!2390 = !DILocation(line: 137, column: 3, scope: !2385)
!2391 = distinct !DISubprogram(name: "tolower", scope: !2392, file: !2392, line: 207, type: !2337, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2393)
!2392 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2393 = !{!2394}
!2394 = !DILocalVariable(name: "__c", arg: 1, scope: !2391, file: !2392, line: 207, type: !631)
!2395 = !DILocation(line: 0, scope: !2391)
!2396 = !DILocation(line: 209, column: 22, scope: !2391)
!2397 = !DILocation(line: 209, column: 39, scope: !2391)
!2398 = !DILocation(line: 209, column: 38, scope: !2391)
!2399 = !DILocation(line: 209, column: 37, scope: !2391)
!2400 = !DILocation(line: 209, column: 10, scope: !2391)
!2401 = !DILocation(line: 209, column: 3, scope: !2391)
!2402 = distinct !DISubprogram(name: "toupper", scope: !2392, file: !2392, line: 213, type: !2337, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2403)
!2403 = !{!2404}
!2404 = !DILocalVariable(name: "__c", arg: 1, scope: !2402, file: !2392, line: 213, type: !631)
!2405 = !DILocation(line: 0, scope: !2402)
!2406 = !DILocation(line: 215, column: 22, scope: !2402)
!2407 = !DILocation(line: 215, column: 39, scope: !2402)
!2408 = !DILocation(line: 215, column: 38, scope: !2402)
!2409 = !DILocation(line: 215, column: 37, scope: !2402)
!2410 = !DILocation(line: 215, column: 10, scope: !2402)
!2411 = !DILocation(line: 215, column: 3, scope: !2402)
!2412 = distinct !DISubprogram(name: "atoi", scope: !2413, file: !2413, line: 361, type: !2414, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2416)
!2413 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!631, !636}
!2416 = !{!2417}
!2417 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2412, file: !2413, line: 361, type: !636)
!2418 = !DILocation(line: 0, scope: !2412)
!2419 = !DILocation(line: 363, column: 16, scope: !2412)
!2420 = !DILocation(line: 363, column: 10, scope: !2412)
!2421 = !DILocation(line: 363, column: 3, scope: !2412)
!2422 = distinct !DISubprogram(name: "atol", scope: !2413, file: !2413, line: 366, type: !2423, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2425)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!725, !636}
!2425 = !{!2426}
!2426 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2422, file: !2413, line: 366, type: !636)
!2427 = !DILocation(line: 0, scope: !2422)
!2428 = !DILocation(line: 368, column: 10, scope: !2422)
!2429 = !DILocation(line: 368, column: 3, scope: !2422)
!2430 = distinct !DISubprogram(name: "atoll", scope: !2413, file: !2413, line: 373, type: !2431, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2434)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!2433, !636}
!2433 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2434 = !{!2435}
!2435 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2430, file: !2413, line: 373, type: !636)
!2436 = !DILocation(line: 0, scope: !2430)
!2437 = !DILocation(line: 375, column: 10, scope: !2430)
!2438 = !DILocation(line: 375, column: 3, scope: !2430)
!2439 = distinct !DISubprogram(name: "bsearch", scope: !2440, file: !2440, line: 20, type: !2441, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2444)
!2440 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!635, !1095, !1095, !1110, !1110, !2443}
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2413, line: 808, baseType: !1099)
!2444 = !{!2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454}
!2445 = !DILocalVariable(name: "__key", arg: 1, scope: !2439, file: !2440, line: 20, type: !1095)
!2446 = !DILocalVariable(name: "__base", arg: 2, scope: !2439, file: !2440, line: 20, type: !1095)
!2447 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2439, file: !2440, line: 20, type: !1110)
!2448 = !DILocalVariable(name: "__size", arg: 4, scope: !2439, file: !2440, line: 20, type: !1110)
!2449 = !DILocalVariable(name: "__compar", arg: 5, scope: !2439, file: !2440, line: 21, type: !2443)
!2450 = !DILocalVariable(name: "__l", scope: !2439, file: !2440, line: 23, type: !1110)
!2451 = !DILocalVariable(name: "__u", scope: !2439, file: !2440, line: 23, type: !1110)
!2452 = !DILocalVariable(name: "__idx", scope: !2439, file: !2440, line: 23, type: !1110)
!2453 = !DILocalVariable(name: "__p", scope: !2439, file: !2440, line: 24, type: !1095)
!2454 = !DILocalVariable(name: "__comparison", scope: !2439, file: !2440, line: 25, type: !631)
!2455 = !DILocation(line: 0, scope: !2439)
!2456 = !DILocation(line: 29, column: 3, scope: !2439)
!2457 = !DILocation(line: 27, column: 7, scope: !2439)
!2458 = !DILocation(line: 29, column: 14, scope: !2439)
!2459 = !DILocation(line: 31, column: 20, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2439, file: !2440, line: 30, column: 5)
!2461 = !DILocation(line: 31, column: 27, scope: !2460)
!2462 = !DILocation(line: 32, column: 56, scope: !2460)
!2463 = !DILocation(line: 32, column: 47, scope: !2460)
!2464 = !DILocation(line: 33, column: 22, scope: !2460)
!2465 = !DILocation(line: 34, column: 24, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2460, file: !2440, line: 34, column: 11)
!2467 = !DILocation(line: 34, column: 11, scope: !2460)
!2468 = !DILocation(line: 36, column: 29, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2466, file: !2440, line: 36, column: 16)
!2470 = !DILocation(line: 36, column: 16, scope: !2466)
!2471 = !DILocation(line: 37, column: 14, scope: !2469)
!2472 = distinct !{!2472, !2456, !2473}
!2473 = !DILocation(line: 40, column: 5, scope: !2439)
!2474 = !DILocation(line: 43, column: 1, scope: !2439)
!2475 = distinct !DISubprogram(name: "atof", scope: !2476, file: !2476, line: 25, type: !2477, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2480)
!2476 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!2479, !636}
!2479 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2480 = !{!2481}
!2481 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2475, file: !2476, line: 25, type: !636)
!2482 = !DILocation(line: 0, scope: !2475)
!2483 = !DILocation(line: 27, column: 10, scope: !2475)
!2484 = !DILocation(line: 27, column: 3, scope: !2475)
!2485 = distinct !DISubprogram(name: "strtoimax", scope: !2486, file: !2486, line: 324, type: !2487, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2493)
!2486 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!2489, !2299, !2492, !631}
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2490, line: 101, baseType: !2491)
!2490 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1989, line: 72, baseType: !725)
!2492 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !632)
!2493 = !{!2494, !2495, !2496}
!2494 = !DILocalVariable(name: "nptr", arg: 1, scope: !2485, file: !2486, line: 324, type: !2299)
!2495 = !DILocalVariable(name: "endptr", arg: 2, scope: !2485, file: !2486, line: 324, type: !2492)
!2496 = !DILocalVariable(name: "base", arg: 3, scope: !2485, file: !2486, line: 324, type: !631)
!2497 = !DILocation(line: 0, scope: !2485)
!2498 = !DILocation(line: 327, column: 10, scope: !2485)
!2499 = !DILocation(line: 327, column: 3, scope: !2485)
!2500 = distinct !DISubprogram(name: "strtoumax", scope: !2486, file: !2486, line: 336, type: !2501, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2505)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!2503, !2299, !2492, !631}
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2490, line: 102, baseType: !2504)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1989, line: 73, baseType: !708)
!2505 = !{!2506, !2507, !2508}
!2506 = !DILocalVariable(name: "nptr", arg: 1, scope: !2500, file: !2486, line: 336, type: !2299)
!2507 = !DILocalVariable(name: "endptr", arg: 2, scope: !2500, file: !2486, line: 336, type: !2492)
!2508 = !DILocalVariable(name: "base", arg: 3, scope: !2500, file: !2486, line: 336, type: !631)
!2509 = !DILocation(line: 0, scope: !2500)
!2510 = !DILocation(line: 339, column: 10, scope: !2500)
!2511 = !DILocation(line: 339, column: 3, scope: !2500)
!2512 = distinct !DISubprogram(name: "wcstoimax", scope: !2486, file: !2486, line: 348, type: !2513, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2522)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!2489, !2515, !2519, !631}
!2515 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2516)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2518)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2486, line: 34, baseType: !631)
!2519 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2520)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2522 = !{!2523, !2524, !2525}
!2523 = !DILocalVariable(name: "nptr", arg: 1, scope: !2512, file: !2486, line: 348, type: !2515)
!2524 = !DILocalVariable(name: "endptr", arg: 2, scope: !2512, file: !2486, line: 348, type: !2519)
!2525 = !DILocalVariable(name: "base", arg: 3, scope: !2512, file: !2486, line: 348, type: !631)
!2526 = !DILocation(line: 0, scope: !2512)
!2527 = !DILocation(line: 351, column: 10, scope: !2512)
!2528 = !DILocation(line: 351, column: 3, scope: !2512)
!2529 = distinct !DISubprogram(name: "wcstoumax", scope: !2486, file: !2486, line: 362, type: !2530, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2532)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{!2503, !2515, !2519, !631}
!2532 = !{!2533, !2534, !2535}
!2533 = !DILocalVariable(name: "nptr", arg: 1, scope: !2529, file: !2486, line: 362, type: !2515)
!2534 = !DILocalVariable(name: "endptr", arg: 2, scope: !2529, file: !2486, line: 362, type: !2519)
!2535 = !DILocalVariable(name: "base", arg: 3, scope: !2529, file: !2486, line: 362, type: !631)
!2536 = !DILocation(line: 0, scope: !2529)
!2537 = !DILocation(line: 365, column: 10, scope: !2529)
!2538 = !DILocation(line: 365, column: 3, scope: !2529)
!2539 = distinct !DISubprogram(name: "stat", scope: !2540, file: !2540, line: 453, type: !2541, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2578)
!2540 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!631, !636, !2543}
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2545, line: 46, size: 1152, elements: !2546)
!2545 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2546 = !{!2547, !2549, !2551, !2553, !2555, !2557, !2559, !2560, !2561, !2562, !2564, !2566, !2574, !2575, !2576}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2544, file: !2545, line: 48, baseType: !2548, size: 64)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1989, line: 145, baseType: !708)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2544, file: !2545, line: 53, baseType: !2550, size: 64, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1989, line: 148, baseType: !708)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2544, file: !2545, line: 61, baseType: !2552, size: 64, offset: 128)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1989, line: 151, baseType: !708)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2544, file: !2545, line: 62, baseType: !2554, size: 32, offset: 192)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1989, line: 150, baseType: !7)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2544, file: !2545, line: 64, baseType: !2556, size: 32, offset: 224)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1989, line: 146, baseType: !7)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2544, file: !2545, line: 65, baseType: !2558, size: 32, offset: 256)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1989, line: 147, baseType: !7)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2544, file: !2545, line: 67, baseType: !631, size: 32, offset: 288)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2544, file: !2545, line: 69, baseType: !2548, size: 64, offset: 320)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2544, file: !2545, line: 74, baseType: !1988, size: 64, offset: 384)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2544, file: !2545, line: 78, baseType: !2563, size: 64, offset: 448)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1989, line: 174, baseType: !725)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2544, file: !2545, line: 80, baseType: !2565, size: 64, offset: 512)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1989, line: 179, baseType: !725)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2544, file: !2545, line: 91, baseType: !2567, size: 128, offset: 576)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2568, line: 10, size: 128, elements: !2569)
!2568 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2569 = !{!2570, !2572}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2567, file: !2568, line: 12, baseType: !2571, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1989, line: 160, baseType: !725)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2567, file: !2568, line: 16, baseType: !2573, size: 64, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1989, line: 196, baseType: !725)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2544, file: !2545, line: 92, baseType: !2567, size: 128, offset: 704)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2544, file: !2545, line: 93, baseType: !2567, size: 128, offset: 832)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2544, file: !2545, line: 106, baseType: !2577, size: 192, offset: 960)
!2577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2573, size: 192, elements: !825)
!2578 = !{!2579, !2580}
!2579 = !DILocalVariable(name: "__path", arg: 1, scope: !2539, file: !2540, line: 453, type: !636)
!2580 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2539, file: !2540, line: 453, type: !2543)
!2581 = !DILocation(line: 0, scope: !2539)
!2582 = !DILocation(line: 455, column: 10, scope: !2539)
!2583 = !DILocation(line: 455, column: 3, scope: !2539)
!2584 = distinct !DISubprogram(name: "lstat", scope: !2540, file: !2540, line: 460, type: !2541, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2585)
!2585 = !{!2586, !2587}
!2586 = !DILocalVariable(name: "__path", arg: 1, scope: !2584, file: !2540, line: 460, type: !636)
!2587 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2584, file: !2540, line: 460, type: !2543)
!2588 = !DILocation(line: 0, scope: !2584)
!2589 = !DILocation(line: 462, column: 10, scope: !2584)
!2590 = !DILocation(line: 462, column: 3, scope: !2584)
!2591 = distinct !DISubprogram(name: "fstat", scope: !2540, file: !2540, line: 467, type: !2592, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2594)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!631, !631, !2543}
!2594 = !{!2595, !2596}
!2595 = !DILocalVariable(name: "__fd", arg: 1, scope: !2591, file: !2540, line: 467, type: !631)
!2596 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2591, file: !2540, line: 467, type: !2543)
!2597 = !DILocation(line: 0, scope: !2591)
!2598 = !DILocation(line: 469, column: 10, scope: !2591)
!2599 = !DILocation(line: 469, column: 3, scope: !2591)
!2600 = distinct !DISubprogram(name: "fstatat", scope: !2540, file: !2540, line: 474, type: !2601, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2603)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!631, !631, !636, !2543, !631}
!2603 = !{!2604, !2605, !2606, !2607}
!2604 = !DILocalVariable(name: "__fd", arg: 1, scope: !2600, file: !2540, line: 474, type: !631)
!2605 = !DILocalVariable(name: "__filename", arg: 2, scope: !2600, file: !2540, line: 474, type: !636)
!2606 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2600, file: !2540, line: 474, type: !2543)
!2607 = !DILocalVariable(name: "__flag", arg: 4, scope: !2600, file: !2540, line: 474, type: !631)
!2608 = !DILocation(line: 0, scope: !2600)
!2609 = !DILocation(line: 477, column: 10, scope: !2600)
!2610 = !DILocation(line: 477, column: 3, scope: !2600)
!2611 = distinct !DISubprogram(name: "mknod", scope: !2540, file: !2540, line: 483, type: !2612, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2614)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!631, !636, !2554, !2548}
!2614 = !{!2615, !2616, !2617}
!2615 = !DILocalVariable(name: "__path", arg: 1, scope: !2611, file: !2540, line: 483, type: !636)
!2616 = !DILocalVariable(name: "__mode", arg: 2, scope: !2611, file: !2540, line: 483, type: !2554)
!2617 = !DILocalVariable(name: "__dev", arg: 3, scope: !2611, file: !2540, line: 483, type: !2548)
!2618 = !DILocation(line: 0, scope: !2611)
!2619 = !DILocation(line: 485, column: 10, scope: !2611)
!2620 = !DILocation(line: 485, column: 3, scope: !2611)
!2621 = distinct !DISubprogram(name: "mknodat", scope: !2540, file: !2540, line: 491, type: !2622, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!631, !631, !636, !2554, !2548}
!2624 = !{!2625, !2626, !2627, !2628}
!2625 = !DILocalVariable(name: "__fd", arg: 1, scope: !2621, file: !2540, line: 491, type: !631)
!2626 = !DILocalVariable(name: "__path", arg: 2, scope: !2621, file: !2540, line: 491, type: !636)
!2627 = !DILocalVariable(name: "__mode", arg: 3, scope: !2621, file: !2540, line: 491, type: !2554)
!2628 = !DILocalVariable(name: "__dev", arg: 4, scope: !2621, file: !2540, line: 491, type: !2548)
!2629 = !DILocation(line: 0, scope: !2621)
!2630 = !DILocation(line: 494, column: 10, scope: !2621)
!2631 = !DILocation(line: 494, column: 3, scope: !2621)
!2632 = distinct !DISubprogram(name: "stat64", scope: !2540, file: !2540, line: 502, type: !2633, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2655)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!631, !636, !2635}
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2545, line: 119, size: 1152, elements: !2637)
!2637 = !{!2638, !2639, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2651, !2652, !2653, !2654}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2636, file: !2545, line: 121, baseType: !2548, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2636, file: !2545, line: 123, baseType: !2640, size: 64, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1989, line: 149, baseType: !708)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2636, file: !2545, line: 124, baseType: !2552, size: 64, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2636, file: !2545, line: 125, baseType: !2554, size: 32, offset: 192)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2636, file: !2545, line: 132, baseType: !2556, size: 32, offset: 224)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2636, file: !2545, line: 133, baseType: !2558, size: 32, offset: 256)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2636, file: !2545, line: 135, baseType: !631, size: 32, offset: 288)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2636, file: !2545, line: 136, baseType: !2548, size: 64, offset: 320)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2636, file: !2545, line: 137, baseType: !1988, size: 64, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2636, file: !2545, line: 143, baseType: !2563, size: 64, offset: 448)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2636, file: !2545, line: 144, baseType: !2650, size: 64, offset: 512)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1989, line: 180, baseType: !725)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2636, file: !2545, line: 152, baseType: !2567, size: 128, offset: 576)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2636, file: !2545, line: 153, baseType: !2567, size: 128, offset: 704)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2636, file: !2545, line: 154, baseType: !2567, size: 128, offset: 832)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2636, file: !2545, line: 164, baseType: !2577, size: 192, offset: 960)
!2655 = !{!2656, !2657}
!2656 = !DILocalVariable(name: "__path", arg: 1, scope: !2632, file: !2540, line: 502, type: !636)
!2657 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2632, file: !2540, line: 502, type: !2635)
!2658 = !DILocation(line: 0, scope: !2632)
!2659 = !DILocation(line: 504, column: 10, scope: !2632)
!2660 = !DILocation(line: 504, column: 3, scope: !2632)
!2661 = distinct !DISubprogram(name: "lstat64", scope: !2540, file: !2540, line: 509, type: !2633, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2662)
!2662 = !{!2663, !2664}
!2663 = !DILocalVariable(name: "__path", arg: 1, scope: !2661, file: !2540, line: 509, type: !636)
!2664 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2661, file: !2540, line: 509, type: !2635)
!2665 = !DILocation(line: 0, scope: !2661)
!2666 = !DILocation(line: 511, column: 10, scope: !2661)
!2667 = !DILocation(line: 511, column: 3, scope: !2661)
!2668 = distinct !DISubprogram(name: "fstat64", scope: !2540, file: !2540, line: 516, type: !2669, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2671)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{!631, !631, !2635}
!2671 = !{!2672, !2673}
!2672 = !DILocalVariable(name: "__fd", arg: 1, scope: !2668, file: !2540, line: 516, type: !631)
!2673 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2668, file: !2540, line: 516, type: !2635)
!2674 = !DILocation(line: 0, scope: !2668)
!2675 = !DILocation(line: 518, column: 10, scope: !2668)
!2676 = !DILocation(line: 518, column: 3, scope: !2668)
!2677 = distinct !DISubprogram(name: "fstatat64", scope: !2540, file: !2540, line: 523, type: !2678, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2680)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{!631, !631, !636, !2635, !631}
!2680 = !{!2681, !2682, !2683, !2684}
!2681 = !DILocalVariable(name: "__fd", arg: 1, scope: !2677, file: !2540, line: 523, type: !631)
!2682 = !DILocalVariable(name: "__filename", arg: 2, scope: !2677, file: !2540, line: 523, type: !636)
!2683 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2677, file: !2540, line: 523, type: !2635)
!2684 = !DILocalVariable(name: "__flag", arg: 4, scope: !2677, file: !2540, line: 523, type: !631)
!2685 = !DILocation(line: 0, scope: !2677)
!2686 = !DILocation(line: 526, column: 10, scope: !2677)
!2687 = !DILocation(line: 526, column: 3, scope: !2677)
!2688 = distinct !DISubprogram(name: "fix_sched_param", scope: !3, file: !3, line: 180, type: !2689, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2691)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{null, !636, !636}
!2691 = !{!2692, !2693}
!2692 = !DILocalVariable(name: "param", arg: 1, scope: !2688, file: !3, line: 180, type: !636)
!2693 = !DILocalVariable(name: "val", arg: 2, scope: !2688, file: !3, line: 180, type: !636)
!2694 = !DILocation(line: 0, scope: !2688)
!2695 = !DILocation(line: 182, column: 8, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 182, column: 7)
!2697 = !DILocation(line: 182, column: 7, scope: !2688)
!2698 = !DILocation(line: 183, column: 27, scope: !2696)
!2699 = !DILocation(line: 183, column: 25, scope: !2696)
!2700 = !DILocation(line: 183, column: 5, scope: !2696)
!2701 = !DILocation(line: 185, column: 5, scope: !2696)
!2702 = !DILocation(line: 186, column: 1, scope: !2688)
!2703 = distinct !DISubprogram(name: "haifa_luid_for_non_insn", scope: !3, file: !3, line: 3982, type: !2057, scopeLine: 3983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2704)
!2704 = !{!2705}
!2705 = !DILocalVariable(name: "x", arg: 1, scope: !2703, file: !3, line: 3982, type: !638)
!2706 = !DILocation(line: 0, scope: !2703)
!2707 = !DILocation(line: 3984, column: 3, scope: !2703)
!2708 = !DILocation(line: 3986, column: 3, scope: !2703)
!2709 = distinct !DISubprogram(name: "haifa_classify_insn", scope: !3, file: !3, line: 499, type: !2710, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2712)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!631, !2153}
!2712 = !{!2713}
!2713 = !DILocalVariable(name: "insn", arg: 1, scope: !2709, file: !3, line: 499, type: !2153)
!2714 = !DILocation(line: 0, scope: !2709)
!2715 = !DILocation(line: 501, column: 30, scope: !2709)
!2716 = !DILocation(line: 501, column: 10, scope: !2709)
!2717 = !DILocation(line: 501, column: 3, scope: !2709)
!2718 = distinct !DISubprogram(name: "haifa_classify_rtx", scope: !3, file: !3, line: 443, type: !2710, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2727}
!2720 = !DILocalVariable(name: "x", arg: 1, scope: !2718, file: !3, line: 443, type: !2153)
!2721 = !DILocalVariable(name: "tmp_class", scope: !2718, file: !3, line: 445, type: !631)
!2722 = !DILocalVariable(name: "insn_class", scope: !2718, file: !3, line: 446, type: !631)
!2723 = !DILocalVariable(name: "code", scope: !2718, file: !3, line: 447, type: !440)
!2724 = !DILocalVariable(name: "i", scope: !2725, file: !3, line: 451, type: !631)
!2725 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 450, column: 5)
!2726 = distinct !DILexicalBlock(scope: !2718, file: !3, line: 449, column: 7)
!2727 = !DILocalVariable(name: "len", scope: !2725, file: !3, line: 451, type: !631)
!2728 = !DILocation(line: 0, scope: !2718)
!2729 = !DILocation(line: 449, column: 7, scope: !2726)
!2730 = !DILocation(line: 449, column: 20, scope: !2726)
!2731 = !DILocation(line: 449, column: 7, scope: !2718)
!2732 = !DILocation(line: 451, column: 20, scope: !2725)
!2733 = !DILocation(line: 0, scope: !2725)
!2734 = !DILocation(line: 453, column: 12, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 453, column: 7)
!2736 = !DILocation(line: 0, scope: !2735)
!2737 = !DILocation(line: 453, column: 27, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 453, column: 7)
!2739 = !DILocation(line: 453, column: 7, scope: !2735)
!2740 = !DILocation(line: 455, column: 36, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 454, column: 2)
!2742 = !DILocation(line: 455, column: 16, scope: !2741)
!2743 = !DILocation(line: 456, column: 17, scope: !2741)
!2744 = !DILocation(line: 457, column: 33, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 457, column: 8)
!2746 = !DILocation(line: 453, column: 7, scope: !2738)
!2747 = distinct !{!2747, !2739, !2748}
!2748 = !DILocation(line: 459, column: 2, scope: !2735)
!2749 = !DILocation(line: 464, column: 7, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 462, column: 5)
!2751 = !DILocation(line: 468, column: 30, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 465, column: 2)
!2753 = !DILocation(line: 468, column: 16, scope: !2752)
!2754 = !DILocation(line: 469, column: 4, scope: !2752)
!2755 = !DILocation(line: 472, column: 30, scope: !2752)
!2756 = !DILocation(line: 472, column: 16, scope: !2752)
!2757 = !DILocation(line: 473, column: 18, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2752, file: !3, line: 473, column: 8)
!2759 = !DILocation(line: 473, column: 8, scope: !2752)
!2760 = !DILocation(line: 477, column: 6, scope: !2752)
!2761 = !DILocation(line: 481, column: 36, scope: !2752)
!2762 = !DILocation(line: 481, column: 16, scope: !2752)
!2763 = !DILocation(line: 482, column: 18, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2752, file: !3, line: 482, column: 8)
!2765 = !DILocation(line: 482, column: 8, scope: !2752)
!2766 = !DILocation(line: 484, column: 16, scope: !2752)
!2767 = !DILocation(line: 491, column: 2, scope: !2752)
!2768 = !DILocation(line: 495, column: 3, scope: !2718)
!2769 = !DILocation(line: 0, scope: !2726)
!2770 = distinct !DISubprogram(name: "sched_init_region_reg_pressure_info", scope: !3, file: !3, line: 618, type: !2107, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2771 = !DILocation(line: 620, column: 17, scope: !2770)
!2772 = !DILocation(line: 620, column: 3, scope: !2770)
!2773 = !DILocation(line: 621, column: 1, scope: !2770)
!2774 = distinct !DISubprogram(name: "insn_cost", scope: !3, file: !3, line: 809, type: !2057, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2775)
!2775 = !{!2776, !2777}
!2776 = !DILocalVariable(name: "insn", arg: 1, scope: !2774, file: !3, line: 809, type: !638)
!2777 = !DILocalVariable(name: "cost", scope: !2774, file: !3, line: 811, type: !631)
!2778 = !DILocation(line: 0, scope: !2774)
!2779 = !DILocation(line: 813, column: 7, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 813, column: 7)
!2781 = !DILocation(line: 813, column: 7, scope: !2774)
!2782 = !DILocation(line: 815, column: 11, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2784, file: !3, line: 815, column: 11)
!2784 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 814, column: 5)
!2785 = !DILocation(line: 815, column: 33, scope: !2783)
!2786 = !DILocation(line: 815, column: 11, scope: !2784)
!2787 = !DILocation(line: 818, column: 14, scope: !2784)
!2788 = !DILocation(line: 819, column: 11, scope: !2784)
!2789 = !DILocation(line: 822, column: 7, scope: !2784)
!2790 = !DILocation(line: 825, column: 10, scope: !2774)
!2791 = !DILocation(line: 827, column: 12, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 827, column: 7)
!2793 = !DILocation(line: 827, column: 7, scope: !2774)
!2794 = !DILocation(line: 833, column: 11, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !3, line: 833, column: 11)
!2796 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 828, column: 5)
!2797 = !DILocation(line: 833, column: 33, scope: !2795)
!2798 = !DILocation(line: 833, column: 11, scope: !2796)
!2799 = !DILocation(line: 835, column: 4, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 834, column: 2)
!2801 = !DILocation(line: 835, column: 21, scope: !2800)
!2802 = !DILocation(line: 836, column: 4, scope: !2800)
!2803 = !DILocation(line: 840, column: 11, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 839, column: 2)
!2805 = !DILocation(line: 841, column: 8, scope: !2804)
!2806 = !DILocation(line: 844, column: 23, scope: !2804)
!2807 = !DILocation(line: 844, column: 4, scope: !2804)
!2808 = !DILocation(line: 844, column: 21, scope: !2804)
!2809 = !DILocation(line: 846, column: 5, scope: !2796)
!2810 = !DILocation(line: 849, column: 1, scope: !2774)
!2811 = distinct !DISubprogram(name: "sel_sched_p", scope: !398, file: !398, line: 117, type: !2812, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!630}
!2814 = !DILocation(line: 119, column: 10, scope: !2811)
!2815 = !DILocation(line: 119, column: 29, scope: !2811)
!2816 = !DILocation(line: 119, column: 43, scope: !2811)
!2817 = !DILocation(line: 119, column: 3, scope: !2811)
!2818 = distinct !DISubprogram(name: "recog_memoized", scope: !2819, file: !2819, line: 150, type: !2057, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2820)
!2819 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2820 = !{!2821}
!2821 = !DILocalVariable(name: "insn", arg: 1, scope: !2818, file: !2819, line: 150, type: !638)
!2822 = !DILocation(line: 0, scope: !2818)
!2823 = !DILocation(line: 152, column: 7, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2818, file: !2819, line: 152, column: 7)
!2825 = !DILocation(line: 152, column: 24, scope: !2824)
!2826 = !DILocation(line: 152, column: 7, scope: !2818)
!2827 = !DILocation(line: 153, column: 31, scope: !2824)
!2828 = !DILocation(line: 153, column: 24, scope: !2824)
!2829 = !DILocation(line: 153, column: 22, scope: !2824)
!2830 = !DILocation(line: 153, column: 5, scope: !2824)
!2831 = !DILocation(line: 154, column: 10, scope: !2818)
!2832 = !DILocation(line: 154, column: 3, scope: !2818)
!2833 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_index", scope: !398, file: !398, line: 825, type: !2834, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2838)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!2836, !2837, !7}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!2838 = !{!2839, !2840}
!2839 = !DILocalVariable(name: "vec_", arg: 1, scope: !2833, file: !398, line: 825, type: !2837)
!2840 = !DILocalVariable(name: "ix_", arg: 2, scope: !2833, file: !398, line: 825, type: !7)
!2841 = !DILocation(line: 0, scope: !2833)
!2842 = !DILocation(line: 825, column: 1, scope: !2833)
!2843 = distinct !DISubprogram(name: "dep_cost_1", scope: !3, file: !3, line: 856, type: !2844, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2849)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!631, !2846, !2022}
!2846 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_t", file: !398, line: 245, baseType: !2847)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_def", file: !398, line: 244, baseType: !2271)
!2849 = !{!2850, !2851, !2852, !2853, !2854, !2855, !2858}
!2850 = !DILocalVariable(name: "link", arg: 1, scope: !2843, file: !3, line: 856, type: !2846)
!2851 = !DILocalVariable(name: "dw", arg: 2, scope: !2843, file: !3, line: 856, type: !2022)
!2852 = !DILocalVariable(name: "insn", scope: !2843, file: !3, line: 858, type: !638)
!2853 = !DILocalVariable(name: "used", scope: !2843, file: !3, line: 859, type: !638)
!2854 = !DILocalVariable(name: "cost", scope: !2843, file: !3, line: 860, type: !631)
!2855 = !DILocalVariable(name: "dep_type", scope: !2856, file: !3, line: 873, type: !405)
!2856 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 872, column: 5)
!2857 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 866, column: 7)
!2858 = !DILocalVariable(name: "dep_cost_rtx_link", scope: !2859, file: !3, line: 900, type: !638)
!2859 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 897, column: 2)
!2860 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 896, column: 16)
!2861 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 893, column: 11)
!2862 = !DILocation(line: 0, scope: !2843)
!2863 = !DILocation(line: 858, column: 14, scope: !2843)
!2864 = !DILocation(line: 859, column: 14, scope: !2843)
!2865 = !DILocation(line: 866, column: 7, scope: !2857)
!2866 = !DILocation(line: 866, column: 29, scope: !2857)
!2867 = !DILocation(line: 866, column: 7, scope: !2843)
!2868 = !DILocation(line: 869, column: 7, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 867, column: 5)
!2870 = !DILocation(line: 870, column: 5, scope: !2869)
!2871 = !DILocation(line: 873, column: 32, scope: !2856)
!2872 = !DILocation(line: 0, scope: !2856)
!2873 = !DILocation(line: 875, column: 14, scope: !2856)
!2874 = !DILocation(line: 877, column: 11, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 877, column: 11)
!2876 = !DILocation(line: 877, column: 28, scope: !2875)
!2877 = !DILocation(line: 877, column: 11, scope: !2856)
!2878 = !DILocation(line: 879, column: 8, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 878, column: 2)
!2880 = !DILocation(line: 883, column: 16, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2882, file: !3, line: 882, column: 6)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 881, column: 13)
!2883 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 879, column: 8)
!2884 = !DILocation(line: 884, column: 11, scope: !2881)
!2885 = !DILocation(line: 884, column: 9, scope: !2881)
!2886 = !DILocation(line: 885, column: 12, scope: !2881)
!2887 = !DILocation(line: 887, column: 6, scope: !2881)
!2888 = !DILocation(line: 888, column: 13, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2882, file: !3, line: 888, column: 13)
!2890 = !DILocation(line: 888, column: 13, scope: !2882)
!2891 = !DILocation(line: 889, column: 13, scope: !2889)
!2892 = !DILocation(line: 889, column: 6, scope: !2889)
!2893 = !DILocation(line: 893, column: 25, scope: !2861)
!2894 = !DILocation(line: 893, column: 11, scope: !2861)
!2895 = !DILocation(line: 893, column: 11, scope: !2856)
!2896 = !DILocation(line: 894, column: 9, scope: !2861)
!2897 = !DILocation(line: 894, column: 2, scope: !2861)
!2898 = !DILocation(line: 896, column: 30, scope: !2860)
!2899 = !DILocation(line: 896, column: 42, scope: !2860)
!2900 = !DILocation(line: 896, column: 16, scope: !2861)
!2901 = !DILocation(line: 900, column: 28, scope: !2859)
!2902 = !DILocation(line: 0, scope: !2859)
!2903 = !DILocation(line: 904, column: 4, scope: !2859)
!2904 = !DILocation(line: 904, column: 32, scope: !2859)
!2905 = !DILocation(line: 907, column: 4, scope: !2859)
!2906 = !DILocation(line: 909, column: 25, scope: !2859)
!2907 = !DILocation(line: 909, column: 11, scope: !2859)
!2908 = !DILocation(line: 912, column: 4, scope: !2859)
!2909 = !DILocation(line: 913, column: 2, scope: !2859)
!2910 = !DILocation(line: 0, scope: !2861)
!2911 = !DILocation(line: 915, column: 11, scope: !2856)
!2912 = !DILocation(line: 0, scope: !2857)
!2913 = !DILocation(line: 919, column: 3, scope: !2843)
!2914 = distinct !DISubprogram(name: "dep_cost", scope: !3, file: !3, line: 926, type: !2915, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2917)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!631, !2846}
!2917 = !{!2918}
!2918 = !DILocalVariable(name: "link", arg: 1, scope: !2914, file: !3, line: 926, type: !2846)
!2919 = !DILocation(line: 0, scope: !2914)
!2920 = !DILocation(line: 928, column: 10, scope: !2914)
!2921 = !DILocation(line: 928, column: 3, scope: !2914)
!2922 = distinct !DISubprogram(name: "increase_insn_priority", scope: !3, file: !3, line: 934, type: !2169, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2923)
!2923 = !{!2924, !2925}
!2924 = !DILocalVariable(name: "insn", arg: 1, scope: !2922, file: !3, line: 934, type: !638)
!2925 = !DILocalVariable(name: "amount", arg: 2, scope: !2922, file: !3, line: 934, type: !631)
!2926 = !DILocation(line: 0, scope: !2922)
!2927 = !DILocation(line: 936, column: 8, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 936, column: 7)
!2929 = !DILocation(line: 936, column: 7, scope: !2922)
!2930 = !DILocation(line: 939, column: 11, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 939, column: 11)
!2932 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 937, column: 5)
!2933 = !DILocation(line: 939, column: 11, scope: !2932)
!2934 = !DILocation(line: 940, column: 4, scope: !2931)
!2935 = !DILocation(line: 940, column: 25, scope: !2931)
!2936 = !DILocation(line: 946, column: 7, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 943, column: 5)
!2938 = !DILocation(line: 948, column: 1, scope: !2922)
!2939 = distinct !DISubprogram(name: "ready_lastpos", scope: !3, file: !3, line: 1377, type: !2940, scopeLine: 1378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2942)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!1864, !2244}
!2942 = !{!2943}
!2943 = !DILocalVariable(name: "ready", arg: 1, scope: !2939, file: !3, line: 1377, type: !2244)
!2944 = !DILocation(line: 0, scope: !2939)
!2945 = !DILocation(line: 1379, column: 3, scope: !2939)
!2946 = !DILocation(line: 1380, column: 45, scope: !2939)
!2947 = !DILocation(line: 1380, column: 17, scope: !2939)
!2948 = !DILocation(line: 1380, column: 30, scope: !2939)
!2949 = !DILocation(line: 1380, column: 21, scope: !2939)
!2950 = !DILocation(line: 1380, column: 36, scope: !2939)
!2951 = !DILocation(line: 1380, column: 53, scope: !2939)
!2952 = !DILocation(line: 1380, column: 3, scope: !2939)
!2953 = distinct !DISubprogram(name: "ready_element", scope: !3, file: !3, line: 1454, type: !2954, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2956)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!638, !2244, !631}
!2956 = !{!2957, !2958}
!2957 = !DILocalVariable(name: "ready", arg: 1, scope: !2953, file: !3, line: 1454, type: !2244)
!2958 = !DILocalVariable(name: "index", arg: 2, scope: !2953, file: !3, line: 1454, type: !631)
!2959 = !DILocation(line: 0, scope: !2953)
!2960 = !DILocation(line: 1456, column: 3, scope: !2953)
!2961 = !DILocation(line: 1458, column: 17, scope: !2953)
!2962 = !DILocation(line: 1458, column: 28, scope: !2953)
!2963 = !DILocation(line: 1458, column: 34, scope: !2953)
!2964 = !DILocation(line: 1458, column: 10, scope: !2953)
!2965 = !DILocation(line: 1458, column: 3, scope: !2953)
!2966 = distinct !DISubprogram(name: "ready_sort", scope: !3, file: !3, line: 1503, type: !2967, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2969)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{null, !2244}
!2969 = !{!2970, !2971, !2972}
!2970 = !DILocalVariable(name: "ready", arg: 1, scope: !2966, file: !3, line: 1503, type: !2244)
!2971 = !DILocalVariable(name: "i", scope: !2966, file: !3, line: 1505, type: !631)
!2972 = !DILocalVariable(name: "first", scope: !2966, file: !3, line: 1506, type: !1864)
!2973 = !DILocation(line: 0, scope: !2966)
!2974 = !DILocation(line: 1506, column: 16, scope: !2966)
!2975 = !DILocation(line: 1508, column: 7, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1508, column: 7)
!2977 = !DILocation(line: 1508, column: 7, scope: !2966)
!2978 = !DILocation(line: 0, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 1513, column: 3)
!2980 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1513, column: 3)
!2981 = !DILocation(line: 1513, column: 3, scope: !2979)
!2982 = !DILocation(line: 0, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 1510, column: 7)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 1510, column: 7)
!2985 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1509, column: 5)
!2986 = !DILocation(line: 1510, column: 7, scope: !2984)
!2987 = !DILocation(line: 0, scope: !2984)
!2988 = !DILocation(line: 1510, column: 30, scope: !2983)
!2989 = !DILocation(line: 1510, column: 21, scope: !2983)
!2990 = !DILocation(line: 1511, column: 32, scope: !2983)
!2991 = !DILocation(line: 1511, column: 2, scope: !2983)
!2992 = !DILocation(line: 1510, column: 40, scope: !2983)
!2993 = !DILocation(line: 1510, column: 7, scope: !2983)
!2994 = distinct !{!2994, !2986, !2995}
!2995 = !DILocation(line: 1511, column: 40, scope: !2984)
!2996 = !DILocation(line: 1513, column: 3, scope: !2980)
!2997 = !DILocation(line: 1513, column: 3, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 1513, column: 3)
!2999 = !DILocation(line: 1514, column: 1, scope: !2966)
!3000 = !DILocation(line: 0, scope: !2203)
!3001 = !DILocation(line: 0, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 1136, column: 3)
!3003 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1136, column: 3)
!3004 = !DILocation(line: 1136, column: 8, scope: !3003)
!3005 = !DILocation(line: 0, scope: !3003)
!3006 = !DILocation(line: 1136, column: 17, scope: !3002)
!3007 = !DILocation(line: 1136, column: 3, scope: !3003)
!3008 = !DILocation(line: 1137, column: 11, scope: !3002)
!3009 = !DILocation(line: 1137, column: 5, scope: !3002)
!3010 = !DILocation(line: 1137, column: 35, scope: !3002)
!3011 = !DILocation(line: 1136, column: 46, scope: !3002)
!3012 = !DILocation(line: 1136, column: 3, scope: !3002)
!3013 = distinct !{!3013, !3007, !3014}
!3014 = !DILocation(line: 1137, column: 37, scope: !3003)
!3015 = !DILocation(line: 1138, column: 14, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1138, column: 3)
!3017 = !DILocation(line: 1138, column: 8, scope: !3016)
!3018 = !DILocation(line: 0, scope: !3016)
!3019 = !DILocation(line: 1138, column: 44, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 1138, column: 3)
!3021 = !DILocation(line: 1138, column: 3, scope: !3016)
!3022 = !DILocation(line: 1139, column: 9, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 1139, column: 9)
!3024 = !DILocation(line: 1139, column: 9, scope: !3020)
!3025 = !DILocation(line: 1141, column: 7, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 1140, column: 7)
!3027 = !DILocation(line: 1141, column: 36, scope: !3026)
!3028 = !DILocation(line: 1142, column: 17, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 1142, column: 6)
!3030 = !DILocation(line: 0, scope: !3029)
!3031 = !DILocation(line: 1142, column: 6, scope: !3026)
!3032 = !DILocation(line: 1143, column: 4, scope: !3029)
!3033 = !DILocation(line: 1143, column: 13, scope: !3029)
!3034 = !DILocation(line: 1145, column: 41, scope: !3029)
!3035 = !DILocation(line: 1145, column: 17, scope: !3029)
!3036 = !DILocation(line: 1145, column: 4, scope: !3029)
!3037 = !DILocation(line: 1145, column: 14, scope: !3029)
!3038 = !DILocation(line: 1138, column: 64, scope: !3020)
!3039 = !DILocation(line: 1138, column: 3, scope: !3020)
!3040 = distinct !{!3040, !3021, !3041}
!3041 = !DILocation(line: 1146, column: 7, scope: !3016)
!3042 = !DILocation(line: 1147, column: 19, scope: !2203)
!3043 = !DILocation(line: 1148, column: 22, scope: !2203)
!3044 = !DILocation(line: 1149, column: 3, scope: !2203)
!3045 = !DILocation(line: 1150, column: 8, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1150, column: 3)
!3047 = !DILocation(line: 1150, column: 19, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 1150, column: 3)
!3049 = !DILocation(line: 1150, column: 17, scope: !3048)
!3050 = !DILocation(line: 1150, column: 3, scope: !3046)
!3051 = !DILocation(line: 1152, column: 12, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 1151, column: 5)
!3053 = !DILocation(line: 1153, column: 7, scope: !3052)
!3054 = !DILocation(line: 1154, column: 39, scope: !3052)
!3055 = !DILocation(line: 1154, column: 54, scope: !3052)
!3056 = !DILocation(line: 1154, column: 52, scope: !3052)
!3057 = !DILocation(line: 1155, column: 16, scope: !3052)
!3058 = !DILocation(line: 1156, column: 15, scope: !3052)
!3059 = !DILocation(line: 1158, column: 20, scope: !3052)
!3060 = !DILocation(line: 1159, column: 7, scope: !3052)
!3061 = !DILocation(line: 1160, column: 14, scope: !3052)
!3062 = !DILocation(line: 1161, column: 37, scope: !3052)
!3063 = !DILocation(line: 1162, column: 12, scope: !3052)
!3064 = !DILocation(line: 1163, column: 7, scope: !3052)
!3065 = !DILocation(line: 1163, column: 5, scope: !3052)
!3066 = !DILocation(line: 1162, column: 9, scope: !3052)
!3067 = !DILocation(line: 1161, column: 26, scope: !3052)
!3068 = !DILocation(line: 1150, column: 46, scope: !3048)
!3069 = !DILocation(line: 1150, column: 3, scope: !3048)
!3070 = distinct !{!3070, !3050, !3071}
!3071 = !DILocation(line: 1164, column: 5, scope: !3046)
!3072 = !DILocation(line: 1165, column: 3, scope: !2203)
!3073 = !DILocation(line: 1165, column: 47, scope: !2203)
!3074 = !DILocation(line: 1166, column: 1, scope: !2203)
!3075 = distinct !DISubprogram(name: "swap_sort", scope: !3, file: !3, line: 1323, type: !3076, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3078)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{null, !1864, !631}
!3078 = !{!3079, !3080, !3081, !3082}
!3079 = !DILocalVariable(name: "a", arg: 1, scope: !3075, file: !3, line: 1323, type: !1864)
!3080 = !DILocalVariable(name: "n", arg: 2, scope: !3075, file: !3, line: 1323, type: !631)
!3081 = !DILocalVariable(name: "insn", scope: !3075, file: !3, line: 1325, type: !638)
!3082 = !DILocalVariable(name: "i", scope: !3075, file: !3, line: 1326, type: !631)
!3083 = !DILocation(line: 0, scope: !3075)
!3084 = !DILocation(line: 1325, column: 3, scope: !3075)
!3085 = !DILocation(line: 1325, column: 14, scope: !3075)
!3086 = !DILocation(line: 1325, column: 7, scope: !3075)
!3087 = !DILocation(line: 1328, column: 3, scope: !3075)
!3088 = !DILocation(line: 1328, column: 12, scope: !3075)
!3089 = !DILocation(line: 1328, column: 17, scope: !3075)
!3090 = !DILocation(line: 1328, column: 41, scope: !3075)
!3091 = !DILocation(line: 1328, column: 39, scope: !3075)
!3092 = !DILocation(line: 1328, column: 20, scope: !3075)
!3093 = !DILocation(line: 1328, column: 53, scope: !3075)
!3094 = !DILocation(line: 1330, column: 18, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 1329, column: 5)
!3096 = !DILocation(line: 1330, column: 11, scope: !3095)
!3097 = !DILocation(line: 1330, column: 7, scope: !3095)
!3098 = !DILocation(line: 1330, column: 16, scope: !3095)
!3099 = !DILocation(line: 1331, column: 9, scope: !3095)
!3100 = distinct !{!3100, !3087, !3101}
!3101 = !DILocation(line: 1332, column: 5, scope: !3075)
!3102 = !DILocation(line: 1333, column: 14, scope: !3075)
!3103 = !DILocation(line: 1333, column: 3, scope: !3075)
!3104 = !DILocation(line: 1333, column: 12, scope: !3075)
!3105 = !DILocation(line: 1334, column: 1, scope: !3075)
!3106 = distinct !DISubprogram(name: "rank_for_schedule", scope: !3, file: !3, line: 1173, type: !1100, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3107)
!3107 = !{!3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3121, !3124, !3125, !3126, !3127, !3128, !3131}
!3108 = !DILocalVariable(name: "x", arg: 1, scope: !3106, file: !3, line: 1173, type: !1095)
!3109 = !DILocalVariable(name: "y", arg: 2, scope: !3106, file: !3, line: 1173, type: !1095)
!3110 = !DILocalVariable(name: "tmp", scope: !3106, file: !3, line: 1175, type: !638)
!3111 = !DILocalVariable(name: "tmp2", scope: !3106, file: !3, line: 1176, type: !638)
!3112 = !DILocalVariable(name: "last", scope: !3106, file: !3, line: 1177, type: !638)
!3113 = !DILocalVariable(name: "tmp_class", scope: !3106, file: !3, line: 1178, type: !631)
!3114 = !DILocalVariable(name: "tmp2_class", scope: !3106, file: !3, line: 1178, type: !631)
!3115 = !DILocalVariable(name: "val", scope: !3106, file: !3, line: 1179, type: !631)
!3116 = !DILocalVariable(name: "priority_val", scope: !3106, file: !3, line: 1179, type: !631)
!3117 = !DILocalVariable(name: "info_val", scope: !3106, file: !3, line: 1179, type: !631)
!3118 = !DILocalVariable(name: "diff", scope: !3119, file: !3, line: 1200, type: !631)
!3119 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 1199, column: 5)
!3120 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1198, column: 7)
!3121 = !DILocalVariable(name: "ds1", scope: !3122, file: !3, line: 1233, type: !1865)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 1232, column: 5)
!3123 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1231, column: 7)
!3124 = !DILocalVariable(name: "ds2", scope: !3122, file: !3, line: 1233, type: !1865)
!3125 = !DILocalVariable(name: "dw1", scope: !3122, file: !3, line: 1234, type: !2022)
!3126 = !DILocalVariable(name: "dw2", scope: !3122, file: !3, line: 1234, type: !2022)
!3127 = !DILocalVariable(name: "dw", scope: !3122, file: !3, line: 1235, type: !631)
!3128 = !DILocalVariable(name: "dep1", scope: !3129, file: !3, line: 1273, type: !2846)
!3129 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 1272, column: 5)
!3130 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1271, column: 7)
!3131 = !DILocalVariable(name: "dep2", scope: !3129, file: !3, line: 1274, type: !2846)
!3132 = !DILocation(line: 0, scope: !3106)
!3133 = !DILocation(line: 1175, column: 14, scope: !3106)
!3134 = !DILocation(line: 1175, column: 13, scope: !3106)
!3135 = !DILocation(line: 1176, column: 15, scope: !3106)
!3136 = !DILocation(line: 1176, column: 14, scope: !3106)
!3137 = !DILocation(line: 1181, column: 7, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1181, column: 7)
!3139 = !DILocation(line: 1181, column: 7, scope: !3106)
!3140 = !DILocation(line: 1184, column: 11, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 1184, column: 11)
!3142 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 1182, column: 5)
!3143 = !DILocation(line: 1184, column: 30, scope: !3141)
!3144 = !DILocation(line: 0, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 1186, column: 16)
!3146 = !DILocation(line: 1186, column: 16, scope: !3145)
!3147 = !DILocation(line: 1184, column: 34, scope: !3141)
!3148 = !DILocation(line: 1184, column: 11, scope: !3142)
!3149 = !DILocation(line: 1186, column: 16, scope: !3141)
!3150 = !DILocation(line: 1191, column: 7, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1191, column: 7)
!3152 = !DILocation(line: 1191, column: 34, scope: !3151)
!3153 = !DILocation(line: 1192, column: 7, scope: !3151)
!3154 = !DILocation(line: 1192, column: 30, scope: !3151)
!3155 = !DILocation(line: 1192, column: 27, scope: !3151)
!3156 = !DILocation(line: 1191, column: 7, scope: !3106)
!3157 = !DILocation(line: 1193, column: 12, scope: !3151)
!3158 = !DILocation(line: 1193, column: 5, scope: !3151)
!3159 = !DILocation(line: 1196, column: 3, scope: !3106)
!3160 = !DILocation(line: 1198, column: 7, scope: !3120)
!3161 = !DILocation(line: 1198, column: 7, scope: !3106)
!3162 = !DILocation(line: 1204, column: 20, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 1204, column: 11)
!3164 = !DILocation(line: 1205, column: 9, scope: !3163)
!3165 = !DILocation(line: 1205, column: 27, scope: !3163)
!3166 = !DILocation(line: 1205, column: 25, scope: !3163)
!3167 = !DILocation(line: 1206, column: 11, scope: !3163)
!3168 = !DILocation(line: 1206, column: 29, scope: !3163)
!3169 = !DILocation(line: 1206, column: 27, scope: !3163)
!3170 = !DILocation(line: 1205, column: 6, scope: !3163)
!3171 = !DILocation(line: 1207, column: 8, scope: !3163)
!3172 = !DILocation(line: 1207, column: 6, scope: !3163)
!3173 = !DILocation(line: 1208, column: 9, scope: !3163)
!3174 = !DILocation(line: 1208, column: 28, scope: !3163)
!3175 = !DILocation(line: 1208, column: 26, scope: !3163)
!3176 = !DILocation(line: 1209, column: 11, scope: !3163)
!3177 = !DILocation(line: 1209, column: 30, scope: !3163)
!3178 = !DILocation(line: 1209, column: 28, scope: !3163)
!3179 = !DILocation(line: 1208, column: 6, scope: !3163)
!3180 = !DILocation(line: 0, scope: !3119)
!3181 = !DILocation(line: 1209, column: 47, scope: !3163)
!3182 = !DILocation(line: 1214, column: 7, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1214, column: 7)
!3184 = !DILocation(line: 1215, column: 7, scope: !3183)
!3185 = !DILocation(line: 1215, column: 11, scope: !3183)
!3186 = !DILocation(line: 1215, column: 30, scope: !3183)
!3187 = !DILocation(line: 1215, column: 28, scope: !3183)
!3188 = !DILocation(line: 1215, column: 40, scope: !3183)
!3189 = !DILocation(line: 1215, column: 43, scope: !3183)
!3190 = !DILocation(line: 1215, column: 61, scope: !3183)
!3191 = !DILocation(line: 1215, column: 59, scope: !3183)
!3192 = !DILocation(line: 1214, column: 7, scope: !3106)
!3193 = !DILocation(line: 1217, column: 11, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1217, column: 11)
!3195 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 1216, column: 5)
!3196 = !DILocation(line: 1217, column: 30, scope: !3194)
!3197 = !DILocation(line: 1217, column: 27, scope: !3194)
!3198 = !DILocation(line: 1217, column: 11, scope: !3195)
!3199 = !DILocation(line: 1219, column: 16, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 1219, column: 16)
!3201 = !DILocation(line: 1219, column: 36, scope: !3200)
!3202 = !DILocation(line: 1219, column: 33, scope: !3200)
!3203 = !DILocation(line: 1219, column: 16, scope: !3194)
!3204 = !DILocation(line: 1222, column: 9, scope: !3200)
!3205 = !DILocation(line: 1222, column: 27, scope: !3200)
!3206 = !DILocation(line: 1222, column: 25, scope: !3200)
!3207 = !DILocation(line: 1222, column: 2, scope: !3200)
!3208 = !DILocation(line: 1225, column: 18, scope: !3106)
!3209 = !DILocation(line: 1225, column: 41, scope: !3106)
!3210 = !DILocation(line: 1225, column: 39, scope: !3106)
!3211 = !DILocation(line: 1227, column: 7, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1227, column: 7)
!3213 = !DILocation(line: 1227, column: 45, scope: !3212)
!3214 = !DILocation(line: 1227, column: 42, scope: !3212)
!3215 = !DILocation(line: 1231, column: 7, scope: !3123)
!3216 = !DILocation(line: 1231, column: 41, scope: !3123)
!3217 = !DILocation(line: 1231, column: 38, scope: !3123)
!3218 = !DILocation(line: 1237, column: 13, scope: !3122)
!3219 = !DILocation(line: 1237, column: 29, scope: !3122)
!3220 = !DILocation(line: 0, scope: !3122)
!3221 = !DILocation(line: 1238, column: 11, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1238, column: 11)
!3223 = !DILocation(line: 1238, column: 11, scope: !3122)
!3224 = !DILocation(line: 1239, column: 8, scope: !3222)
!3225 = !DILocation(line: 1239, column: 2, scope: !3222)
!3226 = !DILocation(line: 0, scope: !3222)
!3227 = !DILocation(line: 1243, column: 13, scope: !3122)
!3228 = !DILocation(line: 1243, column: 30, scope: !3122)
!3229 = !DILocation(line: 1244, column: 11, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1244, column: 11)
!3231 = !DILocation(line: 1244, column: 11, scope: !3122)
!3232 = !DILocation(line: 1245, column: 8, scope: !3230)
!3233 = !DILocation(line: 1245, column: 2, scope: !3230)
!3234 = !DILocation(line: 0, scope: !3230)
!3235 = !DILocation(line: 1249, column: 16, scope: !3122)
!3236 = !DILocation(line: 1250, column: 34, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1250, column: 11)
!3238 = !DILocation(line: 1254, column: 16, scope: !3106)
!3239 = !DILocation(line: 1254, column: 36, scope: !3106)
!3240 = !DILocation(line: 1254, column: 14, scope: !3106)
!3241 = !DILocation(line: 1255, column: 6, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1255, column: 6)
!3243 = !DILocation(line: 1255, column: 35, scope: !3242)
!3244 = !DILocation(line: 1255, column: 32, scope: !3242)
!3245 = !DILocation(line: 1258, column: 7, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1258, column: 7)
!3247 = !DILocation(line: 1258, column: 7, scope: !3106)
!3248 = !DILocation(line: 1260, column: 14, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1259, column: 5)
!3250 = !DILocation(line: 1262, column: 11, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 1262, column: 11)
!3252 = !DILocation(line: 1262, column: 31, scope: !3251)
!3253 = !DILocation(line: 1262, column: 42, scope: !3251)
!3254 = !DILocation(line: 1262, column: 62, scope: !3251)
!3255 = !DILocation(line: 1262, column: 39, scope: !3251)
!3256 = !DILocation(line: 1262, column: 11, scope: !3249)
!3257 = !DILocation(line: 1263, column: 2, scope: !3251)
!3258 = !DILocation(line: 0, scope: !3249)
!3259 = !DILocation(line: 1264, column: 11, scope: !3251)
!3260 = !DILocation(line: 1265, column: 10, scope: !3251)
!3261 = !DILocation(line: 1266, column: 9, scope: !3251)
!3262 = !DILocation(line: 1266, column: 17, scope: !3251)
!3263 = !DILocation(line: 1264, column: 4, scope: !3251)
!3264 = distinct !{!3264, !3257, !3265}
!3265 = !DILocation(line: 1266, column: 49, scope: !3251)
!3266 = !DILocation(line: 1271, column: 7, scope: !3130)
!3267 = !DILocation(line: 1271, column: 38, scope: !3130)
!3268 = !DILocation(line: 1271, column: 41, scope: !3130)
!3269 = !DILocation(line: 1271, column: 7, scope: !3106)
!3270 = !DILocation(line: 1281, column: 14, scope: !3129)
!3271 = !DILocation(line: 0, scope: !3129)
!3272 = !DILocation(line: 1283, column: 16, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 1283, column: 11)
!3274 = !DILocation(line: 1283, column: 24, scope: !3273)
!3275 = !DILocation(line: 1283, column: 27, scope: !3273)
!3276 = !DILocation(line: 1283, column: 43, scope: !3273)
!3277 = !DILocation(line: 1283, column: 11, scope: !3129)
!3278 = !DILocation(line: 1286, column: 9, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1286, column: 9)
!3280 = !DILocation(line: 1286, column: 25, scope: !3279)
!3281 = !DILocation(line: 0, scope: !3273)
!3282 = !DILocation(line: 1291, column: 14, scope: !3129)
!3283 = !DILocation(line: 1293, column: 16, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 1293, column: 11)
!3285 = !DILocation(line: 1293, column: 24, scope: !3284)
!3286 = !DILocation(line: 1293, column: 27, scope: !3284)
!3287 = !DILocation(line: 1293, column: 44, scope: !3284)
!3288 = !DILocation(line: 1293, column: 11, scope: !3129)
!3289 = !DILocation(line: 1296, column: 9, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 1296, column: 9)
!3291 = !DILocation(line: 1296, column: 25, scope: !3290)
!3292 = !DILocation(line: 0, scope: !3284)
!3293 = !DILocation(line: 1301, column: 29, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 1301, column: 11)
!3295 = !DILocation(line: 1301, column: 16, scope: !3294)
!3296 = !DILocation(line: 0, scope: !3130)
!3297 = !DILocation(line: 1309, column: 10, scope: !3106)
!3298 = !DILocation(line: 1309, column: 33, scope: !3106)
!3299 = !DILocation(line: 1309, column: 31, scope: !3106)
!3300 = !DILocation(line: 1311, column: 7, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1311, column: 7)
!3302 = !DILocation(line: 1311, column: 45, scope: !3301)
!3303 = !DILocation(line: 1311, column: 38, scope: !3301)
!3304 = !DILocation(line: 1317, column: 10, scope: !3106)
!3305 = !DILocation(line: 1317, column: 28, scope: !3106)
!3306 = !DILocation(line: 1317, column: 26, scope: !3106)
!3307 = !DILocation(line: 1317, column: 3, scope: !3106)
!3308 = !DILocation(line: 1318, column: 1, scope: !3106)
!3309 = distinct !DISubprogram(name: "advance_state", scope: !3, file: !3, line: 1537, type: !3310, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3312)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{null, !1875}
!3312 = !{!3313}
!3313 = !DILocalVariable(name: "state", arg: 1, scope: !3309, file: !3, line: 1537, type: !1875)
!3314 = !DILocation(line: 0, scope: !3309)
!3315 = !DILocation(line: 1539, column: 21, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1539, column: 7)
!3317 = !DILocation(line: 1539, column: 7, scope: !3316)
!3318 = !DILocation(line: 1539, column: 7, scope: !3309)
!3319 = !DILocation(line: 1540, column: 5, scope: !3316)
!3320 = !DILocation(line: 1542, column: 21, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1542, column: 7)
!3322 = !DILocation(line: 1542, column: 7, scope: !3321)
!3323 = !DILocation(line: 1542, column: 7, scope: !3309)
!3324 = !DILocation(line: 1544, column: 9, scope: !3321)
!3325 = !DILocation(line: 1543, column: 5, scope: !3321)
!3326 = !DILocation(line: 1546, column: 3, scope: !3309)
!3327 = !DILocation(line: 1548, column: 21, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1548, column: 7)
!3329 = !DILocation(line: 1548, column: 7, scope: !3328)
!3330 = !DILocation(line: 1548, column: 7, scope: !3309)
!3331 = !DILocation(line: 1550, column: 9, scope: !3328)
!3332 = !DILocation(line: 1549, column: 5, scope: !3328)
!3333 = !DILocation(line: 1552, column: 21, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1552, column: 7)
!3335 = !DILocation(line: 1552, column: 7, scope: !3334)
!3336 = !DILocation(line: 1552, column: 7, scope: !3309)
!3337 = !DILocation(line: 1553, column: 5, scope: !3334)
!3338 = !DILocation(line: 1554, column: 1, scope: !3309)
!3339 = distinct !DISubprogram(name: "sched_setup_bb_reg_pressure_info", scope: !3, file: !3, line: 1648, type: !3340, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3342)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{null, !1172, !638}
!3342 = !{!3343, !3344}
!3343 = !DILocalVariable(name: "bb", arg: 1, scope: !3339, file: !3, line: 1648, type: !1172)
!3344 = !DILocalVariable(name: "after", arg: 2, scope: !3339, file: !3, line: 1648, type: !638)
!3345 = !DILocation(line: 0, scope: !3339)
!3346 = !DILocation(line: 1650, column: 3, scope: !3339)
!3347 = !DILocation(line: 1651, column: 3, scope: !3339)
!3348 = !DILocation(line: 1652, column: 3, scope: !3339)
!3349 = !DILocation(line: 1653, column: 1, scope: !3339)
!3350 = distinct !DISubprogram(name: "initiate_bb_reg_pressure_info", scope: !3, file: !3, line: 714, type: !2111, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3351)
!3351 = !{!3352, !3353, !3354, !3355}
!3352 = !DILocalVariable(name: "bb", arg: 1, scope: !3350, file: !3, line: 714, type: !1172)
!3353 = !DILocalVariable(name: "i", scope: !3350, file: !3, line: 716, type: !7)
!3354 = !DILocalVariable(name: "insn", scope: !3350, file: !3, line: 717, type: !638)
!3355 = !DILocalVariable(name: "regno", scope: !3356, file: !3, line: 728, type: !7)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 727, column: 7)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 726, column: 5)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 726, column: 5)
!3359 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 725, column: 7)
!3360 = !DILocation(line: 0, scope: !3350)
!3361 = !DILocation(line: 719, column: 7, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 719, column: 7)
!3363 = !DILocation(line: 719, column: 25, scope: !3362)
!3364 = !DILocation(line: 719, column: 7, scope: !3350)
!3365 = !DILocation(line: 720, column: 5, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 720, column: 5)
!3367 = !DILocation(line: 0, scope: !3366)
!3368 = !DILocation(line: 720, column: 5, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 720, column: 5)
!3370 = !DILocation(line: 721, column: 11, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 721, column: 11)
!3372 = !DILocation(line: 721, column: 11, scope: !3369)
!3373 = !DILocation(line: 722, column: 18, scope: !3371)
!3374 = !DILocation(line: 722, column: 2, scope: !3371)
!3375 = distinct !{!3375, !3365, !3376}
!3376 = !DILocation(line: 722, column: 32, scope: !3366)
!3377 = !DILocation(line: 723, column: 31, scope: !3350)
!3378 = !DILocation(line: 723, column: 3, scope: !3350)
!3379 = !DILocation(line: 725, column: 7, scope: !3359)
!3380 = !DILocation(line: 725, column: 7, scope: !3350)
!3381 = !DILocation(line: 726, column: 5, scope: !3358)
!3382 = !DILocation(line: 0, scope: !3358)
!3383 = !DILocation(line: 728, column: 23, scope: !3356)
!3384 = !DILocation(line: 730, column: 6, scope: !3356)
!3385 = !DILocation(line: 732, column: 22, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 732, column: 6)
!3387 = !DILocation(line: 732, column: 8, scope: !3386)
!3388 = !DILocation(line: 732, column: 6, scope: !3356)
!3389 = !DILocation(line: 733, column: 4, scope: !3386)
!3390 = !DILocation(line: 726, column: 19, scope: !3357)
!3391 = !DILocation(line: 726, column: 5, scope: !3357)
!3392 = distinct !{!3392, !3381, !3393}
!3393 = !DILocation(line: 734, column: 7, scope: !3358)
!3394 = !DILocation(line: 736, column: 1, scope: !3350)
!3395 = !DILocation(line: 0, scope: !2224)
!3396 = !DILocation(line: 1593, column: 3, scope: !2224)
!3397 = !DILocation(line: 0, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1594, column: 3)
!3399 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 1594, column: 3)
!3400 = !DILocation(line: 1594, column: 8, scope: !3399)
!3401 = !DILocation(line: 0, scope: !3399)
!3402 = !DILocation(line: 1594, column: 17, scope: !3398)
!3403 = !DILocation(line: 1594, column: 3, scope: !3399)
!3404 = !DILocation(line: 1596, column: 27, scope: !3398)
!3405 = !DILocation(line: 1596, column: 9, scope: !3398)
!3406 = !DILocation(line: 1595, column: 5, scope: !3398)
!3407 = !DILocation(line: 1596, column: 7, scope: !3398)
!3408 = !DILocation(line: 1594, column: 46, scope: !3398)
!3409 = !DILocation(line: 1594, column: 3, scope: !3398)
!3410 = distinct !{!3410, !3403, !3411}
!3411 = !DILocation(line: 1596, column: 49, scope: !3399)
!3412 = !DILocation(line: 0, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1597, column: 3)
!3414 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 1597, column: 3)
!3415 = !DILocation(line: 0, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1613, column: 6)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1601, column: 7)
!3418 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 1600, column: 9)
!3419 = !DILocation(line: 1597, column: 8, scope: !3414)
!3420 = !DILocation(line: 0, scope: !3414)
!3421 = !DILocation(line: 1598, column: 13, scope: !3413)
!3422 = !DILocation(line: 1598, column: 25, scope: !3413)
!3423 = !DILocation(line: 1598, column: 28, scope: !3413)
!3424 = !DILocation(line: 1598, column: 53, scope: !3413)
!3425 = !DILocation(line: 1598, column: 50, scope: !3413)
!3426 = !DILocation(line: 1597, column: 3, scope: !3414)
!3427 = !DILocation(line: 1600, column: 9, scope: !3418)
!3428 = !DILocation(line: 1600, column: 9, scope: !3413)
!3429 = !DILocation(line: 1603, column: 18, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 1603, column: 2)
!3431 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1603, column: 2)
!3432 = !DILocation(line: 0, scope: !3417)
!3433 = !DILocation(line: 1603, column: 16, scope: !3430)
!3434 = !DILocation(line: 1603, column: 2, scope: !3431)
!3435 = !DILocation(line: 1613, column: 18, scope: !3416)
!3436 = !DILocation(line: 1613, column: 15, scope: !3416)
!3437 = !DILocation(line: 1615, column: 2, scope: !3417)
!3438 = !DILocation(line: 0, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 1616, column: 2)
!3440 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 1616, column: 2)
!3441 = !DILocation(line: 1616, column: 7, scope: !3440)
!3442 = !DILocation(line: 0, scope: !3440)
!3443 = !DILocation(line: 1616, column: 16, scope: !3439)
!3444 = !DILocation(line: 1616, column: 2, scope: !3440)
!3445 = !DILocation(line: 1617, column: 25, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 1617, column: 8)
!3447 = !DILocation(line: 1617, column: 8, scope: !3446)
!3448 = !DILocation(line: 1618, column: 10, scope: !3446)
!3449 = !DILocation(line: 1618, column: 8, scope: !3446)
!3450 = !DILocation(line: 1617, column: 8, scope: !3439)
!3451 = !DILocation(line: 1620, column: 8, scope: !3446)
!3452 = !DILocation(line: 1619, column: 6, scope: !3446)
!3453 = !DILocation(line: 1616, column: 45, scope: !3439)
!3454 = !DILocation(line: 1616, column: 2, scope: !3439)
!3455 = distinct !{!3455, !3444, !3456}
!3456 = !DILocation(line: 1620, column: 50, scope: !3440)
!3457 = !DILocation(line: 1605, column: 27, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 1604, column: 4)
!3459 = !DILocation(line: 1605, column: 10, scope: !3458)
!3460 = !DILocation(line: 1606, column: 10, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 1606, column: 10)
!3462 = !DILocation(line: 1606, column: 42, scope: !3461)
!3463 = !DILocation(line: 1606, column: 10, scope: !3458)
!3464 = !DILocation(line: 1610, column: 24, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 1607, column: 8)
!3466 = !DILocation(line: 1610, column: 7, scope: !3465)
!3467 = !DILocation(line: 1609, column: 3, scope: !3465)
!3468 = !DILocation(line: 1610, column: 5, scope: !3465)
!3469 = !DILocation(line: 1611, column: 8, scope: !3465)
!3470 = !DILocation(line: 1603, column: 45, scope: !3430)
!3471 = !DILocation(line: 1603, column: 2, scope: !3430)
!3472 = distinct !{!3472, !3434, !3473}
!3473 = !DILocation(line: 1612, column: 4, scope: !3431)
!3474 = !DILocation(line: 1597, column: 3, scope: !3413)
!3475 = distinct !{!3475, !3426, !3476}
!3476 = !DILocation(line: 1621, column: 7, scope: !3414)
!3477 = !DILocation(line: 0, scope: !3461)
!3478 = !DILocation(line: 1622, column: 3, scope: !2224)
!3479 = !DILocation(line: 1623, column: 1, scope: !2224)
!3480 = distinct !DISubprogram(name: "concat_note_lists", scope: !3, file: !3, line: 1818, type: !3481, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3483)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{null, !638, !1864}
!3483 = !{!3484, !3485, !3486}
!3484 = !DILocalVariable(name: "from_end", arg: 1, scope: !3480, file: !3, line: 1818, type: !638)
!3485 = !DILocalVariable(name: "to_endp", arg: 2, scope: !3480, file: !3, line: 1818, type: !1864)
!3486 = !DILocalVariable(name: "from_start", scope: !3480, file: !3, line: 1820, type: !638)
!3487 = !DILocation(line: 0, scope: !3480)
!3488 = !DILocation(line: 1823, column: 16, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 1823, column: 7)
!3490 = !DILocation(line: 1823, column: 7, scope: !3480)
!3491 = !DILocation(line: 1827, column: 7, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 1827, column: 7)
!3493 = !DILocation(line: 1827, column: 16, scope: !3492)
!3494 = !DILocation(line: 1827, column: 7, scope: !3480)
!3495 = !DILocation(line: 1834, column: 3, scope: !3480)
!3496 = !DILocation(line: 1829, column: 16, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 1828, column: 5)
!3498 = !DILocation(line: 1830, column: 7, scope: !3497)
!3499 = !DILocation(line: 1834, column: 10, scope: !3480)
!3500 = !DILocation(line: 1834, column: 33, scope: !3480)
!3501 = distinct !{!3501, !3495, !3502}
!3502 = !DILocation(line: 1835, column: 18, scope: !3480)
!3503 = !DILocation(line: 1837, column: 26, scope: !3480)
!3504 = !DILocation(line: 1838, column: 3, scope: !3480)
!3505 = !DILocation(line: 1838, column: 24, scope: !3480)
!3506 = !DILocation(line: 1839, column: 12, scope: !3480)
!3507 = !DILocation(line: 1840, column: 1, scope: !3480)
!3508 = distinct !DISubprogram(name: "remove_notes", scope: !3, file: !3, line: 1845, type: !2173, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3509)
!3509 = !{!3510, !3511, !3512, !3513, !3514}
!3510 = !DILocalVariable(name: "head", arg: 1, scope: !3508, file: !3, line: 1845, type: !638)
!3511 = !DILocalVariable(name: "tail", arg: 2, scope: !3508, file: !3, line: 1845, type: !638)
!3512 = !DILocalVariable(name: "next_tail", scope: !3508, file: !3, line: 1847, type: !638)
!3513 = !DILocalVariable(name: "insn", scope: !3508, file: !3, line: 1847, type: !638)
!3514 = !DILocalVariable(name: "next", scope: !3508, file: !3, line: 1847, type: !638)
!3515 = !DILocation(line: 0, scope: !3508)
!3516 = !DILocation(line: 1849, column: 13, scope: !3508)
!3517 = !DILocation(line: 1850, column: 12, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 1850, column: 7)
!3519 = !DILocation(line: 1850, column: 20, scope: !3518)
!3520 = !DILocation(line: 1850, column: 24, scope: !3518)
!3521 = !DILocation(line: 1850, column: 7, scope: !3508)
!3522 = !DILocation(line: 1853, column: 15, scope: !3508)
!3523 = !DILocation(line: 1854, column: 8, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 1854, column: 3)
!3525 = !DILocation(line: 0, scope: !3524)
!3526 = !DILocation(line: 1854, column: 26, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1854, column: 3)
!3528 = !DILocation(line: 1854, column: 3, scope: !3524)
!3529 = !DILocation(line: 1856, column: 14, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 1855, column: 5)
!3531 = !DILocation(line: 1857, column: 12, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1857, column: 11)
!3533 = !DILocation(line: 1857, column: 11, scope: !3530)
!3534 = !DILocation(line: 1860, column: 15, scope: !3530)
!3535 = !DILocation(line: 1860, column: 7, scope: !3530)
!3536 = !DILocation(line: 1866, column: 13, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 1866, column: 8)
!3538 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1861, column: 2)
!3539 = !DILocation(line: 1866, column: 8, scope: !3538)
!3540 = !DILocation(line: 1868, column: 8, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 1867, column: 6)
!3542 = !DILocation(line: 1870, column: 8, scope: !3541)
!3543 = !DILocation(line: 1869, column: 8, scope: !3541)
!3544 = !DILocation(line: 1871, column: 8, scope: !3541)
!3545 = !DILocation(line: 1876, column: 4, scope: !3538)
!3546 = !DILocation(line: 1879, column: 23, scope: !3538)
!3547 = !DILocation(line: 1879, column: 4, scope: !3538)
!3548 = !DILocation(line: 1879, column: 21, scope: !3538)
!3549 = !DILocation(line: 1880, column: 21, scope: !3538)
!3550 = !DILocation(line: 1881, column: 8, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 1881, column: 8)
!3552 = !DILocation(line: 1881, column: 8, scope: !3538)
!3553 = !DILocation(line: 1882, column: 6, scope: !3551)
!3554 = !DILocation(line: 1882, column: 28, scope: !3551)
!3555 = !DILocation(line: 1883, column: 14, scope: !3538)
!3556 = !DILocation(line: 1884, column: 4, scope: !3538)
!3557 = !DILocation(line: 1887, column: 7, scope: !3530)
!3558 = !DILocation(line: 1854, column: 3, scope: !3527)
!3559 = distinct !{!3559, !3528, !3560}
!3560 = !DILocation(line: 1888, column: 5, scope: !3524)
!3561 = !DILocation(line: 1889, column: 1, scope: !3508)
!3562 = distinct !DISubprogram(name: "get_ebb_head_tail", scope: !3, file: !3, line: 1895, type: !3563, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3565)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{null, !1172, !1172, !1864, !1864}
!3565 = !{!3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573}
!3566 = !DILocalVariable(name: "beg", arg: 1, scope: !3562, file: !3, line: 1895, type: !1172)
!3567 = !DILocalVariable(name: "end", arg: 2, scope: !3562, file: !3, line: 1895, type: !1172)
!3568 = !DILocalVariable(name: "headp", arg: 3, scope: !3562, file: !3, line: 1895, type: !1864)
!3569 = !DILocalVariable(name: "tailp", arg: 4, scope: !3562, file: !3, line: 1895, type: !1864)
!3570 = !DILocalVariable(name: "beg_head", scope: !3562, file: !3, line: 1897, type: !638)
!3571 = !DILocalVariable(name: "beg_tail", scope: !3562, file: !3, line: 1898, type: !638)
!3572 = !DILocalVariable(name: "end_head", scope: !3562, file: !3, line: 1899, type: !638)
!3573 = !DILocalVariable(name: "end_tail", scope: !3562, file: !3, line: 1900, type: !638)
!3574 = !DILocation(line: 0, scope: !3562)
!3575 = !DILocation(line: 1897, column: 18, scope: !3562)
!3576 = !DILocation(line: 1898, column: 18, scope: !3562)
!3577 = !DILocation(line: 1899, column: 18, scope: !3562)
!3578 = !DILocation(line: 1900, column: 18, scope: !3562)
!3579 = !DILocation(line: 1905, column: 7, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1905, column: 7)
!3581 = !DILocation(line: 1905, column: 7, scope: !3562)
!3582 = !DILocation(line: 1906, column: 16, scope: !3580)
!3583 = !DILocation(line: 1906, column: 5, scope: !3580)
!3584 = !DILocation(line: 1908, column: 3, scope: !3562)
!3585 = !DILocation(line: 1908, column: 19, scope: !3562)
!3586 = !DILocation(line: 1909, column: 9, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1909, column: 9)
!3588 = !DILocation(line: 1909, column: 27, scope: !3587)
!3589 = !DILocation(line: 1909, column: 30, scope: !3587)
!3590 = !DILocation(line: 1909, column: 9, scope: !3562)
!3591 = !DILocation(line: 1910, column: 18, scope: !3587)
!3592 = distinct !{!3592, !3584, !3593}
!3593 = !DILocation(line: 1912, column: 7, scope: !3562)
!3594 = !DILocation(line: 1914, column: 10, scope: !3562)
!3595 = !DILocation(line: 1916, column: 11, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1916, column: 7)
!3597 = !DILocation(line: 1916, column: 7, scope: !3562)
!3598 = !DILocation(line: 1918, column: 12, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 1918, column: 12)
!3600 = !DILocation(line: 1918, column: 12, scope: !3596)
!3601 = !DILocation(line: 1919, column: 16, scope: !3599)
!3602 = !DILocation(line: 1919, column: 5, scope: !3599)
!3603 = !DILocation(line: 0, scope: !3596)
!3604 = !DILocation(line: 1921, column: 3, scope: !3562)
!3605 = !DILocation(line: 1921, column: 19, scope: !3562)
!3606 = !DILocation(line: 1922, column: 9, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1922, column: 9)
!3608 = !DILocation(line: 1922, column: 27, scope: !3607)
!3609 = !DILocation(line: 1922, column: 30, scope: !3607)
!3610 = !DILocation(line: 1922, column: 9, scope: !3562)
!3611 = !DILocation(line: 1923, column: 18, scope: !3607)
!3612 = distinct !{!3612, !3604, !3613}
!3613 = !DILocation(line: 1925, column: 7, scope: !3562)
!3614 = !DILocation(line: 1927, column: 10, scope: !3562)
!3615 = !DILocation(line: 1928, column: 1, scope: !3562)
!3616 = distinct !DISubprogram(name: "no_real_insns_p", scope: !3, file: !3, line: 1933, type: !3617, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3619)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{!631, !2153, !2153}
!3619 = !{!3620, !3621}
!3620 = !DILocalVariable(name: "head", arg: 1, scope: !3616, file: !3, line: 1933, type: !2153)
!3621 = !DILocalVariable(name: "tail", arg: 2, scope: !3616, file: !3, line: 1933, type: !2153)
!3622 = !DILocation(line: 0, scope: !3616)
!3623 = !DILocation(line: 1935, column: 3, scope: !3616)
!3624 = !DILocation(line: 1935, column: 15, scope: !3616)
!3625 = !DILocation(line: 1937, column: 12, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 1937, column: 11)
!3627 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 1936, column: 5)
!3628 = !DILocation(line: 1937, column: 26, scope: !3626)
!3629 = !DILocation(line: 1937, column: 30, scope: !3626)
!3630 = !DILocation(line: 1938, column: 4, scope: !3626)
!3631 = !DILocation(line: 1938, column: 8, scope: !3626)
!3632 = !DILocation(line: 1937, column: 11, scope: !3627)
!3633 = !DILocation(line: 1940, column: 14, scope: !3627)
!3634 = distinct !{!3634, !3623, !3635}
!3635 = !DILocation(line: 1941, column: 5, scope: !3616)
!3636 = !DILocation(line: 1943, column: 1, scope: !3616)
!3637 = distinct !DISubprogram(name: "restore_other_notes", scope: !3, file: !3, line: 1948, type: !3638, scopeLine: 1949, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3640)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!638, !638, !1172}
!3640 = !{!3641, !3642, !3643}
!3641 = !DILocalVariable(name: "head", arg: 1, scope: !3637, file: !3, line: 1948, type: !638)
!3642 = !DILocalVariable(name: "head_bb", arg: 2, scope: !3637, file: !3, line: 1948, type: !1172)
!3643 = !DILocalVariable(name: "note_head", scope: !3644, file: !3, line: 1952, type: !638)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 1951, column: 5)
!3645 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 1950, column: 7)
!3646 = !DILocation(line: 0, scope: !3637)
!3647 = !DILocation(line: 1950, column: 7, scope: !3645)
!3648 = !DILocation(line: 1950, column: 17, scope: !3645)
!3649 = !DILocation(line: 1950, column: 7, scope: !3637)
!3650 = !DILocation(line: 0, scope: !3644)
!3651 = !DILocation(line: 1954, column: 11, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 1954, column: 11)
!3653 = !DILocation(line: 1954, column: 11, scope: !3644)
!3654 = !DILocation(line: 1955, column: 12, scope: !3652)
!3655 = !DILocation(line: 1955, column: 2, scope: !3652)
!3656 = !DILocation(line: 1957, column: 9, scope: !3652)
!3657 = !DILocation(line: 1959, column: 7, scope: !3644)
!3658 = !DILocation(line: 1959, column: 14, scope: !3644)
!3659 = distinct !{!3659, !3657, !3660}
!3660 = !DILocation(line: 1963, column: 2, scope: !3644)
!3661 = !DILocation(line: 1967, column: 31, scope: !3644)
!3662 = !DILocation(line: 1967, column: 29, scope: !3644)
!3663 = !DILocation(line: 1968, column: 7, scope: !3644)
!3664 = !DILocation(line: 1968, column: 36, scope: !3644)
!3665 = !DILocation(line: 1969, column: 26, scope: !3644)
!3666 = !DILocation(line: 1969, column: 24, scope: !3644)
!3667 = !DILocation(line: 1970, column: 7, scope: !3644)
!3668 = !DILocation(line: 1970, column: 29, scope: !3644)
!3669 = !DILocation(line: 1972, column: 11, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 1972, column: 11)
!3671 = !DILocation(line: 1972, column: 33, scope: !3670)
!3672 = !DILocation(line: 1972, column: 11, scope: !3644)
!3673 = !DILocation(line: 1973, column: 2, scope: !3670)
!3674 = !DILocation(line: 1973, column: 19, scope: !3670)
!3675 = !DILocation(line: 1978, column: 3, scope: !3637)
!3676 = distinct !DISubprogram(name: "bb_note", scope: !3, file: !3, line: 5124, type: !3677, scopeLine: 5125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3679)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!638, !1172}
!3679 = !{!3680, !3681}
!3680 = !DILocalVariable(name: "bb", arg: 1, scope: !3676, file: !3, line: 5124, type: !1172)
!3681 = !DILocalVariable(name: "note", scope: !3676, file: !3, line: 5126, type: !638)
!3682 = !DILocation(line: 0, scope: !3676)
!3683 = !DILocation(line: 5128, column: 10, scope: !3676)
!3684 = !DILocation(line: 5129, column: 7, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 5129, column: 7)
!3686 = !DILocation(line: 5129, column: 7, scope: !3676)
!3687 = !DILocation(line: 5130, column: 12, scope: !3685)
!3688 = !DILocation(line: 5132, column: 3, scope: !3676)
!3689 = !DILocation(line: 5130, column: 5, scope: !3685)
!3690 = !DILocation(line: 5133, column: 3, scope: !3676)
!3691 = distinct !DISubprogram(name: "reemit_notes", scope: !3, file: !3, line: 2269, type: !2116, scopeLine: 2270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3692 = !{!3693, !3694, !3695, !3696}
!3693 = !DILocalVariable(name: "insn", arg: 1, scope: !3691, file: !3, line: 2269, type: !638)
!3694 = !DILocalVariable(name: "note", scope: !3691, file: !3, line: 2271, type: !638)
!3695 = !DILocalVariable(name: "last", scope: !3691, file: !3, line: 2271, type: !638)
!3696 = !DILocalVariable(name: "note_type", scope: !3697, file: !3, line: 2277, type: !582)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 2276, column: 2)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 2275, column: 11)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 2274, column: 5)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 2273, column: 3)
!3701 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2273, column: 3)
!3702 = !DILocation(line: 0, scope: !3691)
!3703 = !DILocation(line: 2273, column: 15, scope: !3701)
!3704 = !DILocation(line: 2273, column: 8, scope: !3701)
!3705 = !DILocation(line: 0, scope: !3701)
!3706 = !DILocation(line: 2273, column: 3, scope: !3701)
!3707 = !DILocation(line: 2275, column: 11, scope: !3698)
!3708 = !DILocation(line: 2275, column: 32, scope: !3698)
!3709 = !DILocation(line: 2275, column: 11, scope: !3699)
!3710 = !DILocation(line: 2277, column: 48, scope: !3697)
!3711 = !DILocation(line: 2277, column: 31, scope: !3697)
!3712 = !DILocation(line: 0, scope: !3697)
!3713 = !DILocation(line: 2279, column: 11, scope: !3697)
!3714 = !DILocation(line: 2280, column: 4, scope: !3697)
!3715 = !DILocation(line: 2281, column: 2, scope: !3697)
!3716 = !DILocation(line: 2273, column: 46, scope: !3700)
!3717 = !DILocation(line: 2273, column: 3, scope: !3700)
!3718 = distinct !{!3718, !3706, !3719}
!3719 = !DILocation(line: 2282, column: 5, scope: !3701)
!3720 = !DILocation(line: 2283, column: 1, scope: !3691)
!3721 = distinct !DISubprogram(name: "max_issue", scope: !3, file: !3, line: 2448, type: !3722, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3724)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!631, !2244, !631, !1875, !1942}
!3724 = !{!3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739}
!3725 = !DILocalVariable(name: "ready", arg: 1, scope: !3721, file: !3, line: 2448, type: !2244)
!3726 = !DILocalVariable(name: "privileged_n", arg: 2, scope: !3721, file: !3, line: 2448, type: !631)
!3727 = !DILocalVariable(name: "state", arg: 3, scope: !3721, file: !3, line: 2448, type: !1875)
!3728 = !DILocalVariable(name: "index", arg: 4, scope: !3721, file: !3, line: 2449, type: !1942)
!3729 = !DILocalVariable(name: "n", scope: !3721, file: !3, line: 2451, type: !631)
!3730 = !DILocalVariable(name: "i", scope: !3721, file: !3, line: 2451, type: !631)
!3731 = !DILocalVariable(name: "all", scope: !3721, file: !3, line: 2451, type: !631)
!3732 = !DILocalVariable(name: "n_ready", scope: !3721, file: !3, line: 2451, type: !631)
!3733 = !DILocalVariable(name: "best", scope: !3721, file: !3, line: 2451, type: !631)
!3734 = !DILocalVariable(name: "delay", scope: !3721, file: !3, line: 2451, type: !631)
!3735 = !DILocalVariable(name: "tries_num", scope: !3721, file: !3, line: 2451, type: !631)
!3736 = !DILocalVariable(name: "max_points", scope: !3721, file: !3, line: 2451, type: !631)
!3737 = !DILocalVariable(name: "more_issue", scope: !3721, file: !3, line: 2452, type: !631)
!3738 = !DILocalVariable(name: "top", scope: !3721, file: !3, line: 2453, type: !1868)
!3739 = !DILocalVariable(name: "insn", scope: !3721, file: !3, line: 2454, type: !638)
!3740 = !DILocation(line: 0, scope: !3721)
!3741 = !DILocation(line: 2456, column: 20, scope: !3721)
!3742 = !DILocation(line: 2457, column: 3, scope: !3721)
!3743 = !DILocation(line: 2461, column: 53, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 2461, column: 7)
!3745 = !DILocation(line: 2461, column: 7, scope: !3744)
!3746 = !DILocation(line: 2461, column: 50, scope: !3744)
!3747 = !DILocation(line: 2461, column: 7, scope: !3721)
!3748 = !DILocation(line: 2471, column: 16, scope: !3721)
!3749 = !DILocation(line: 2463, column: 50, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 2462, column: 5)
!3751 = !DILocation(line: 2464, column: 27, scope: !3750)
!3752 = !DILocation(line: 0, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 2465, column: 7)
!3754 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 2465, column: 7)
!3755 = !DILocation(line: 2465, column: 12, scope: !3754)
!3756 = !DILocation(line: 0, scope: !3754)
!3757 = !DILocation(line: 2465, column: 21, scope: !3753)
!3758 = !DILocation(line: 2465, column: 7, scope: !3754)
!3759 = !DILocation(line: 2466, column: 22, scope: !3753)
!3760 = !DILocation(line: 2465, column: 36, scope: !3753)
!3761 = !DILocation(line: 2465, column: 7, scope: !3753)
!3762 = distinct !{!3762, !3758, !3763}
!3763 = !DILocation(line: 2466, column: 25, scope: !3754)
!3764 = !DILocation(line: 2471, column: 29, scope: !3721)
!3765 = !DILocation(line: 2471, column: 27, scope: !3721)
!3766 = !DILocation(line: 0, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 2482, column: 9)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 2481, column: 3)
!3769 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 2481, column: 3)
!3770 = !DILocation(line: 2481, column: 8, scope: !3769)
!3771 = !DILocation(line: 0, scope: !3769)
!3772 = !DILocation(line: 2470, column: 14, scope: !3721)
!3773 = !DILocation(line: 2471, column: 14, scope: !3721)
!3774 = !DILocation(line: 2481, column: 17, scope: !3768)
!3775 = !DILocation(line: 2481, column: 3, scope: !3769)
!3776 = !DILocation(line: 2482, column: 10, scope: !3767)
!3777 = !DILocation(line: 2482, column: 9, scope: !3768)
!3778 = !DILocation(line: 2484, column: 19, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 2484, column: 6)
!3780 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 2483, column: 7)
!3781 = !DILocation(line: 2484, column: 6, scope: !3780)
!3782 = !DILocation(line: 2484, column: 16, scope: !3779)
!3783 = !DILocation(line: 2485, column: 15, scope: !3779)
!3784 = !DILocation(line: 2488, column: 7, scope: !3780)
!3785 = !DILocation(line: 2481, column: 29, scope: !3768)
!3786 = !DILocation(line: 2481, column: 3, scope: !3768)
!3787 = distinct !{!3787, !3775, !3788}
!3788 = !DILocation(line: 2488, column: 7, scope: !3769)
!3789 = !DILocation(line: 2493, column: 9, scope: !3721)
!3790 = !DILocation(line: 2496, column: 16, scope: !3721)
!3791 = !DILocation(line: 2496, column: 30, scope: !3721)
!3792 = !DILocation(line: 2496, column: 3, scope: !3721)
!3793 = !DILocation(line: 2497, column: 15, scope: !3721)
!3794 = !DILocation(line: 2497, column: 8, scope: !3721)
!3795 = !DILocation(line: 2497, column: 13, scope: !3721)
!3796 = !DILocation(line: 2498, column: 8, scope: !3721)
!3797 = !DILocation(line: 2498, column: 10, scope: !3721)
!3798 = !DILocation(line: 0, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 2502, column: 9)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 2501, column: 3)
!3801 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 2501, column: 3)
!3802 = !DILocation(line: 2501, column: 8, scope: !3801)
!3803 = !DILocation(line: 2501, column: 12, scope: !3801)
!3804 = !DILocation(line: 2501, column: 23, scope: !3800)
!3805 = !DILocation(line: 2501, column: 3, scope: !3801)
!3806 = !DILocation(line: 0, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 2524, column: 12)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 2523, column: 6)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 2522, column: 8)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 2515, column: 2)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 2512, column: 4)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 2509, column: 5)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 2508, column: 3)
!3814 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 2508, column: 3)
!3815 = !DILocation(line: 2508, column: 3, scope: !3814)
!3816 = !DILocation(line: 2502, column: 10, scope: !3799)
!3817 = !DILocation(line: 2502, column: 9, scope: !3800)
!3818 = !DILocation(line: 2501, column: 35, scope: !3800)
!3819 = !DILocation(line: 2501, column: 3, scope: !3800)
!3820 = distinct !{!3820, !3805, !3821}
!3821 = !DILocation(line: 2503, column: 10, scope: !3801)
!3822 = !DILocation(line: 2512, column: 9, scope: !3811)
!3823 = !DILocation(line: 2507, column: 13, scope: !3721)
!3824 = !DILocation(line: 2512, column: 14, scope: !3811)
!3825 = !DILocation(line: 2514, column: 9, scope: !3811)
!3826 = !DILocation(line: 2514, column: 4, scope: !3811)
!3827 = !DILocation(line: 2517, column: 4, scope: !3810)
!3828 = !DILocation(line: 2519, column: 15, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 2519, column: 8)
!3830 = !DILocation(line: 2519, column: 12, scope: !3829)
!3831 = !DILocation(line: 2519, column: 8, scope: !3810)
!3832 = !DILocation(line: 2522, column: 8, scope: !3809)
!3833 = !DILocation(line: 2522, column: 19, scope: !3809)
!3834 = !DILocation(line: 2522, column: 13, scope: !3809)
!3835 = !DILocation(line: 2522, column: 8, scope: !3810)
!3836 = !DILocation(line: 2524, column: 12, scope: !3808)
!3837 = !DILocation(line: 0, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 2525, column: 3)
!3839 = !DILocation(line: 2528, column: 5, scope: !3838)
!3840 = !DILocation(line: 2528, column: 12, scope: !3838)
!3841 = !DILocation(line: 2528, column: 14, scope: !3838)
!3842 = !DILocation(line: 2528, column: 28, scope: !3838)
!3843 = !DILocation(line: 2528, column: 18, scope: !3838)
!3844 = !DILocation(line: 2528, column: 17, scope: !3838)
!3845 = distinct !{!3845, !3839, !3846}
!3846 = !DILocation(line: 2528, column: 33, scope: !3838)
!3847 = !DILocation(line: 2532, column: 18, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 2532, column: 5)
!3849 = !DILocation(line: 2534, column: 5, scope: !3848)
!3850 = !DILocation(line: 2534, column: 8, scope: !3848)
!3851 = !DILocation(line: 2532, column: 5, scope: !3808)
!3852 = !DILocation(line: 2537, column: 12, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 2536, column: 3)
!3854 = !DILocation(line: 2540, column: 31, scope: !3853)
!3855 = !DILocation(line: 2540, column: 12, scope: !3853)
!3856 = !DILocation(line: 2541, column: 14, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 2541, column: 9)
!3858 = !DILocation(line: 2541, column: 16, scope: !3857)
!3859 = !DILocation(line: 2541, column: 38, scope: !3857)
!3860 = !DILocation(line: 2541, column: 30, scope: !3857)
!3861 = !DILocation(line: 2548, column: 13, scope: !3810)
!3862 = !DILocation(line: 2551, column: 4, scope: !3810)
!3863 = !DILocation(line: 2551, column: 18, scope: !3810)
!3864 = !DILocation(line: 2552, column: 7, scope: !3810)
!3865 = !DILocation(line: 2553, column: 24, scope: !3810)
!3866 = !DILocation(line: 2553, column: 31, scope: !3810)
!3867 = !DILocation(line: 2553, column: 4, scope: !3810)
!3868 = !DILocation(line: 2554, column: 2, scope: !3810)
!3869 = !DILocation(line: 2555, column: 17, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 2555, column: 16)
!3871 = !DILocation(line: 2555, column: 16, scope: !3811)
!3872 = !DILocation(line: 2557, column: 13, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2556, column: 2)
!3874 = !DILocation(line: 2558, column: 20, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2558, column: 8)
!3876 = !DILocation(line: 2558, column: 18, scope: !3875)
!3877 = !DILocation(line: 2558, column: 8, scope: !3873)
!3878 = !DILocation(line: 2560, column: 11, scope: !3873)
!3879 = !DILocation(line: 2561, column: 12, scope: !3873)
!3880 = !DILocation(line: 2562, column: 14, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2562, column: 8)
!3882 = !DILocation(line: 2562, column: 8, scope: !3873)
!3883 = !DILocation(line: 2564, column: 12, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 2564, column: 12)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 2563, column: 6)
!3886 = !DILocation(line: 2565, column: 5, scope: !3884)
!3887 = !DILocation(line: 2565, column: 8, scope: !3884)
!3888 = !DILocation(line: 2564, column: 12, scope: !3885)
!3889 = !DILocation(line: 2568, column: 3, scope: !3884)
!3890 = !DILocation(line: 2570, column: 12, scope: !3884)
!3891 = !DILocation(line: 0, scope: !3884)
!3892 = !DILocation(line: 2572, column: 17, scope: !3885)
!3893 = !DILocation(line: 2573, column: 25, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 2573, column: 12)
!3895 = !DILocation(line: 2573, column: 39, scope: !3894)
!3896 = !DILocation(line: 2573, column: 12, scope: !3894)
!3897 = !DILocation(line: 2573, column: 55, scope: !3894)
!3898 = !DILocation(line: 2573, column: 12, scope: !3885)
!3899 = !DILocation(line: 2577, column: 11, scope: !3885)
!3900 = !DILocation(line: 2579, column: 20, scope: !3885)
!3901 = !DILocation(line: 2579, column: 13, scope: !3885)
!3902 = !DILocation(line: 2579, column: 18, scope: !3885)
!3903 = !DILocation(line: 2580, column: 13, scope: !3885)
!3904 = !DILocation(line: 2580, column: 19, scope: !3885)
!3905 = !DILocation(line: 2581, column: 13, scope: !3885)
!3906 = !DILocation(line: 2581, column: 15, scope: !3885)
!3907 = !DILocation(line: 2582, column: 21, scope: !3885)
!3908 = !DILocation(line: 2582, column: 35, scope: !3885)
!3909 = !DILocation(line: 2582, column: 8, scope: !3885)
!3910 = !DILocation(line: 2584, column: 8, scope: !3885)
!3911 = !DILocation(line: 2584, column: 22, scope: !3885)
!3912 = !DILocation(line: 2586, column: 6, scope: !3885)
!3913 = !DILocation(line: 2590, column: 8, scope: !3812)
!3914 = !DILocation(line: 0, scope: !3811)
!3915 = !DILocation(line: 2508, column: 3, scope: !3813)
!3916 = distinct !{!3916, !3815, !3917}
!3917 = !DILocation(line: 2591, column: 5, scope: !3814)
!3918 = !DILocation(line: 2594, column: 18, scope: !3721)
!3919 = !DILocation(line: 2594, column: 32, scope: !3721)
!3920 = !DILocation(line: 2594, column: 39, scope: !3721)
!3921 = !DILocation(line: 2594, column: 3, scope: !3721)
!3922 = !DILocation(line: 2596, column: 3, scope: !3721)
!3923 = distinct !DISubprogram(name: "insn_finishes_cycle_p", scope: !3, file: !3, line: 2372, type: !2159, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3924)
!3924 = !{!3925}
!3925 = !DILocalVariable(name: "insn", arg: 1, scope: !3923, file: !3, line: 2372, type: !638)
!3926 = !DILocation(line: 0, scope: !3923)
!3927 = !DILocation(line: 2374, column: 7, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 2374, column: 7)
!3929 = !DILocation(line: 2374, column: 7, scope: !3923)
!3930 = !DILocation(line: 2380, column: 7, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 2380, column: 7)
!3932 = !DILocation(line: 2380, column: 27, scope: !3931)
!3933 = !DILocation(line: 2381, column: 7, scope: !3931)
!3934 = !DILocation(line: 2381, column: 10, scope: !3931)
!3935 = !DILocation(line: 2380, column: 7, scope: !3923)
!3936 = !DILocation(line: 2384, column: 3, scope: !3923)
!3937 = !DILocation(line: 2385, column: 1, scope: !3923)
!3938 = distinct !DISubprogram(name: "schedule_block", scope: !3, file: !3, line: 2760, type: !3939, scopeLine: 2761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3942)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{null, !3941}
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!3942 = !{!3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3959, !3961, !3969, !3971, !3975, !3976, !3977, !3980, !3985, !3992, !3998, !4003}
!3943 = !DILocalVariable(name: "target_bb", arg: 1, scope: !3938, file: !3, line: 2760, type: !3941)
!3944 = !DILocalVariable(name: "i", scope: !3938, file: !3, line: 2762, type: !631)
!3945 = !DILocalVariable(name: "first_cycle_insn_p", scope: !3938, file: !3, line: 2762, type: !631)
!3946 = !DILocalVariable(name: "can_issue_more", scope: !3938, file: !3, line: 2763, type: !631)
!3947 = !DILocalVariable(name: "temp_state", scope: !3938, file: !3, line: 2764, type: !1875)
!3948 = !DILocalVariable(name: "sort_p", scope: !3938, file: !3, line: 2765, type: !631)
!3949 = !DILocalVariable(name: "advance", scope: !3938, file: !3, line: 2765, type: !631)
!3950 = !DILocalVariable(name: "start_clock_var", scope: !3938, file: !3, line: 2765, type: !631)
!3951 = !DILocalVariable(name: "prev_head", scope: !3938, file: !3, line: 2768, type: !638)
!3952 = !DILocalVariable(name: "next_tail", scope: !3938, file: !3, line: 2769, type: !638)
!3953 = !DILocalVariable(name: "head", scope: !3938, file: !3, line: 2770, type: !638)
!3954 = !DILocalVariable(name: "tail", scope: !3938, file: !3, line: 2771, type: !638)
!3955 = !DILocalVariable(name: "skip_insn", scope: !3956, file: !3, line: 2849, type: !638)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 2848, column: 7)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 2828, column: 5)
!3958 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 2826, column: 7)
!3959 = !DILocalVariable(name: "insn", scope: !3960, file: !3, line: 2858, type: !638)
!3960 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2857, column: 4)
!3961 = !DILocalVariable(name: "x", scope: !3962, file: !3, line: 2927, type: !638)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 2926, column: 3)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 2925, column: 12)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 2921, column: 6)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 2920, column: 8)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 2919, column: 2)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 2918, column: 11)
!3968 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 2878, column: 5)
!3969 = !DILocalVariable(name: "insn", scope: !3970, file: !3, line: 2939, type: !638)
!3970 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 2938, column: 6)
!3971 = !DILocalVariable(name: "insn", scope: !3972, file: !3, line: 2972, type: !638)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 2971, column: 2)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 2970, column: 7)
!3974 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 2970, column: 7)
!3975 = !DILocalVariable(name: "cost", scope: !3972, file: !3, line: 2973, type: !631)
!3976 = !DILocalVariable(name: "asm_p", scope: !3972, file: !3, line: 2974, type: !630)
!3977 = !DILocalVariable(name: "res", scope: !3978, file: !3, line: 3008, type: !631)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 3007, column: 6)
!3979 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3006, column: 8)
!3980 = !DILocalVariable(name: "x", scope: !3981, file: !3, line: 3119, type: !638)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 3118, column: 3)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 3117, column: 12)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 3113, column: 6)
!3984 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3106, column: 8)
!3985 = !DILocalVariable(name: "x", scope: !3986, file: !3, line: 3180, type: !638)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 3179, column: 7)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3178, column: 9)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 3174, column: 3)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 3173, column: 12)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 3172, column: 6)
!3991 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3170, column: 8)
!3992 = !DILocalVariable(name: "x", scope: !3993, file: !3, line: 3235, type: !638)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 3234, column: 2)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 3233, column: 7)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 3233, column: 7)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 3231, column: 5)
!3997 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3226, column: 7)
!3998 = !DILocalVariable(name: "link", scope: !3999, file: !3, line: 3245, type: !638)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 3244, column: 4)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 3243, column: 2)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 3243, column: 2)
!4002 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 3242, column: 11)
!4003 = !DILocalVariable(name: "x", scope: !4004, file: !3, line: 3248, type: !638)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 3247, column: 8)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 3246, column: 6)
!4006 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 3246, column: 6)
!4007 = !DILocation(line: 0, scope: !3938)
!4008 = !DILocation(line: 2765, column: 3, scope: !3938)
!4009 = !DILocation(line: 2768, column: 19, scope: !3938)
!4010 = !DILocation(line: 2768, column: 39, scope: !3938)
!4011 = !DILocation(line: 2769, column: 39, scope: !3938)
!4012 = !DILocation(line: 2770, column: 14, scope: !3938)
!4013 = !DILocation(line: 2771, column: 14, scope: !3938)
!4014 = !DILocation(line: 2780, column: 3, scope: !3938)
!4015 = !DILocation(line: 2782, column: 38, scope: !3938)
!4016 = !DILocation(line: 2785, column: 7, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 2785, column: 7)
!4018 = !DILocation(line: 2785, column: 7, scope: !3938)
!4019 = !DILocation(line: 2786, column: 31, scope: !4017)
!4020 = !DILocation(line: 2786, column: 5, scope: !4017)
!4021 = !DILocation(line: 2788, column: 16, scope: !3938)
!4022 = !DILocation(line: 2788, column: 3, scope: !3938)
!4023 = !DILocation(line: 2791, column: 23, scope: !3938)
!4024 = !DILocation(line: 2791, column: 30, scope: !3938)
!4025 = !DILocation(line: 2791, column: 15, scope: !3938)
!4026 = !DILocation(line: 2792, column: 17, scope: !3938)
!4027 = !DILocation(line: 2793, column: 17, scope: !3938)
!4028 = !DILocation(line: 2796, column: 16, scope: !3938)
!4029 = !DILocation(line: 2798, column: 21, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 2798, column: 7)
!4031 = !DILocation(line: 2798, column: 7, scope: !4030)
!4032 = !DILocation(line: 2798, column: 7, scope: !3938)
!4033 = !DILocation(line: 2799, column: 28, scope: !4030)
!4034 = !DILocation(line: 2799, column: 40, scope: !4030)
!4035 = !DILocation(line: 2799, column: 5, scope: !4030)
!4036 = !DILocation(line: 2802, column: 23, scope: !3938)
!4037 = !DILocation(line: 2804, column: 3, scope: !3938)
!4038 = !DILocation(line: 2810, column: 9, scope: !3938)
!4039 = !DILocation(line: 2811, column: 10, scope: !3938)
!4040 = !DILocation(line: 2813, column: 16, scope: !3938)
!4041 = !DILocation(line: 2813, column: 14, scope: !3938)
!4042 = !DILocation(line: 2814, column: 11, scope: !3938)
!4043 = !DILocation(line: 2814, column: 53, scope: !3938)
!4044 = !DILocation(line: 2814, column: 3, scope: !3938)
!4045 = !DILocation(line: 2817, column: 13, scope: !3938)
!4046 = !DILocation(line: 2821, column: 5, scope: !3938)
!4047 = !DILocation(line: 2821, column: 25, scope: !3938)
!4048 = !DILocation(line: 2821, column: 3, scope: !3938)
!4049 = !DILocation(line: 2826, column: 8, scope: !3958)
!4050 = !DILocation(line: 2827, column: 7, scope: !3958)
!4051 = !DILocation(line: 2827, column: 16, scope: !3958)
!4052 = !DILocation(line: 2827, column: 32, scope: !3958)
!4053 = !DILocation(line: 2827, column: 24, scope: !3958)
!4054 = !DILocation(line: 2827, column: 42, scope: !3958)
!4055 = !DILocation(line: 2827, column: 40, scope: !3958)
!4056 = !DILocation(line: 2826, column: 7, scope: !3938)
!4057 = !DILocation(line: 2829, column: 7, scope: !3957)
!4058 = !DILocation(line: 2833, column: 16, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 2833, column: 7)
!4060 = !DILocation(line: 2833, column: 46, scope: !4059)
!4061 = !DILocation(line: 2833, column: 38, scope: !4059)
!4062 = !DILocation(line: 2833, column: 12, scope: !4059)
!4063 = !DILocation(line: 0, scope: !4059)
!4064 = !DILocation(line: 2833, column: 65, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 2833, column: 7)
!4066 = !DILocation(line: 2833, column: 57, scope: !4065)
!4067 = !DILocation(line: 2833, column: 7, scope: !4059)
!4068 = !DILocation(line: 2834, column: 7, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 2834, column: 6)
!4070 = !DILocation(line: 2834, column: 6, scope: !4065)
!4071 = !DILocation(line: 2833, column: 75, scope: !4065)
!4072 = !DILocation(line: 2833, column: 7, scope: !4065)
!4073 = distinct !{!4073, !4067, !4074}
!4074 = !DILocation(line: 2835, column: 4, scope: !4059)
!4075 = !DILocation(line: 2837, column: 11, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 2837, column: 11)
!4077 = !DILocation(line: 2837, column: 25, scope: !4076)
!4078 = !DILocation(line: 2837, column: 11, scope: !3957)
!4079 = !DILocation(line: 2839, column: 13, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 2838, column: 2)
!4081 = !DILocation(line: 2840, column: 53, scope: !4080)
!4082 = !DILocation(line: 2839, column: 4, scope: !4080)
!4083 = !DILocation(line: 2841, column: 13, scope: !4080)
!4084 = !DILocation(line: 2841, column: 4, scope: !4080)
!4085 = !DILocation(line: 2843, column: 2, scope: !4080)
!4086 = !DILocation(line: 2851, column: 6, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2851, column: 6)
!4088 = !DILocation(line: 2851, column: 27, scope: !4087)
!4089 = !DILocation(line: 2851, column: 6, scope: !3956)
!4090 = !DILocation(line: 2852, column: 35, scope: !4087)
!4091 = !DILocation(line: 2852, column: 16, scope: !4087)
!4092 = !DILocation(line: 0, scope: !3956)
!4093 = !DILocation(line: 2852, column: 4, scope: !4087)
!4094 = !DILocation(line: 0, scope: !4087)
!4095 = !DILocation(line: 2856, column: 2, scope: !3956)
!4096 = !DILocation(line: 2856, column: 19, scope: !3956)
!4097 = !DILocation(line: 2856, column: 11, scope: !3956)
!4098 = !DILocation(line: 2860, column: 13, scope: !3960)
!4099 = !DILocation(line: 0, scope: !3960)
!4100 = !DILocation(line: 2862, column: 15, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 2862, column: 10)
!4102 = !DILocation(line: 2862, column: 10, scope: !3960)
!4103 = !DILocation(line: 2863, column: 8, scope: !4101)
!4104 = distinct !{!4104, !4095, !4105}
!4105 = !DILocation(line: 2864, column: 4, scope: !3956)
!4106 = !DILocation(line: 2869, column: 21, scope: !3938)
!4107 = !DILocation(line: 2869, column: 3, scope: !3938)
!4108 = !DILocation(line: 2871, column: 18, scope: !3938)
!4109 = !DILocation(line: 2875, column: 10, scope: !3938)
!4110 = !DILocation(line: 0, scope: !3972)
!4111 = !DILocation(line: 0, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 3083, column: 13)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 3081, column: 6)
!4114 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3080, column: 8)
!4115 = !DILocation(line: 2877, column: 3, scope: !3938)
!4116 = !DILocation(line: 0, scope: !3968)
!4117 = !DILocation(line: 2877, column: 12, scope: !3938)
!4118 = !DILocation(line: 2877, column: 32, scope: !3938)
!4119 = !DILocation(line: 2877, column: 10, scope: !3938)
!4120 = !DILocation(line: 2881, column: 22, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 2880, column: 2)
!4122 = !DILocation(line: 2879, column: 7, scope: !3968)
!4123 = !DILocation(line: 2883, column: 13, scope: !4121)
!4124 = !DILocation(line: 2885, column: 4, scope: !4121)
!4125 = !DILocation(line: 2891, column: 4, scope: !4121)
!4126 = !DILocation(line: 2893, column: 4, scope: !4121)
!4127 = !DILocation(line: 2895, column: 8, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 2895, column: 8)
!4129 = !DILocation(line: 2895, column: 22, scope: !4128)
!4130 = !DILocation(line: 2895, column: 8, scope: !4121)
!4131 = !DILocation(line: 2897, column: 17, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 2896, column: 6)
!4133 = !DILocation(line: 2897, column: 8, scope: !4132)
!4134 = !DILocation(line: 2898, column: 8, scope: !4132)
!4135 = !DILocation(line: 2899, column: 6, scope: !4132)
!4136 = !DILocation(line: 2900, column: 15, scope: !4121)
!4137 = !DILocation(line: 2900, column: 12, scope: !4121)
!4138 = !DILocation(line: 2902, column: 22, scope: !3968)
!4139 = !DILocation(line: 2901, column: 2, scope: !4121)
!4140 = distinct !{!4140, !4122, !4141}
!4141 = !DILocation(line: 2902, column: 25, scope: !3968)
!4142 = !DILocation(line: 2904, column: 11, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 2904, column: 11)
!4144 = !DILocation(line: 2904, column: 11, scope: !3968)
!4145 = !DILocation(line: 2907, column: 4, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 2905, column: 2)
!4147 = !DILocation(line: 2909, column: 8, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4146, file: !3, line: 2909, column: 8)
!4149 = !DILocation(line: 2909, column: 22, scope: !4148)
!4150 = !DILocation(line: 2909, column: 8, scope: !4146)
!4151 = !DILocation(line: 2911, column: 17, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 2910, column: 6)
!4153 = !DILocation(line: 2911, column: 8, scope: !4152)
!4154 = !DILocation(line: 2912, column: 8, scope: !4152)
!4155 = !DILocation(line: 2913, column: 6, scope: !4152)
!4156 = !DILocation(line: 2918, column: 17, scope: !3967)
!4157 = !DILocation(line: 2918, column: 11, scope: !3967)
!4158 = !DILocation(line: 2918, column: 25, scope: !3967)
!4159 = !DILocation(line: 2918, column: 28, scope: !3967)
!4160 = !DILocation(line: 2918, column: 11, scope: !3968)
!4161 = !DILocation(line: 2920, column: 29, scope: !3965)
!4162 = !DILocation(line: 2920, column: 8, scope: !3965)
!4163 = !DILocation(line: 2920, column: 8, scope: !3966)
!4164 = !DILocation(line: 2922, column: 21, scope: !3964)
!4165 = !DILocation(line: 2922, column: 41, scope: !3964)
!4166 = !DILocation(line: 2923, column: 4, scope: !3964)
!4167 = !DILocation(line: 2922, column: 19, scope: !3964)
!4168 = !DILocation(line: 2925, column: 12, scope: !3963)
!4169 = !DILocation(line: 2925, column: 12, scope: !3964)
!4170 = !DILocation(line: 2929, column: 25, scope: !3962)
!4171 = !DILocation(line: 2929, column: 9, scope: !3962)
!4172 = !DILocation(line: 0, scope: !3962)
!4173 = !DILocation(line: 2930, column: 5, scope: !3962)
!4174 = !DILocation(line: 2931, column: 31, scope: !3962)
!4175 = !DILocation(line: 2931, column: 5, scope: !3962)
!4176 = !DILocation(line: 2934, column: 39, scope: !3964)
!4177 = !DILocation(line: 2932, column: 3, scope: !3962)
!4178 = !DILocation(line: 2934, column: 30, scope: !3964)
!4179 = !DILocation(line: 2934, column: 28, scope: !3964)
!4180 = !DILocation(line: 2935, column: 6, scope: !3964)
!4181 = !DILocation(line: 2937, column: 4, scope: !3966)
!4182 = !DILocation(line: 2937, column: 17, scope: !3966)
!4183 = !DILocation(line: 2937, column: 11, scope: !3966)
!4184 = !DILocation(line: 2937, column: 25, scope: !3966)
!4185 = !DILocation(line: 2937, column: 28, scope: !3966)
!4186 = !DILocation(line: 2952, column: 15, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 2952, column: 8)
!4188 = !DILocation(line: 2939, column: 19, scope: !3970)
!4189 = !DILocation(line: 0, scope: !3970)
!4190 = !DILocation(line: 2940, column: 8, scope: !3970)
!4191 = !DILocation(line: 2941, column: 10, scope: !3970)
!4192 = !DILocation(line: 2941, column: 30, scope: !3970)
!4193 = !DILocation(line: 2942, column: 11, scope: !3970)
!4194 = !DILocation(line: 2941, column: 8, scope: !3970)
!4195 = !DILocation(line: 2943, column: 25, scope: !3970)
!4196 = !DILocation(line: 2944, column: 5, scope: !3970)
!4197 = !DILocation(line: 2944, column: 25, scope: !3970)
!4198 = !DILocation(line: 2943, column: 8, scope: !3970)
!4199 = !DILocation(line: 2945, column: 28, scope: !3970)
!4200 = !DILocation(line: 2946, column: 18, scope: !3970)
!4201 = !DILocation(line: 2947, column: 8, scope: !3970)
!4202 = !DILocation(line: 2948, column: 18, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 2948, column: 12)
!4204 = !DILocation(line: 2948, column: 26, scope: !4203)
!4205 = !DILocation(line: 2948, column: 12, scope: !3970)
!4206 = !DILocation(line: 2949, column: 3, scope: !4203)
!4207 = distinct !{!4207, !4181, !4208}
!4208 = !DILocation(line: 2950, column: 6, scope: !3966)
!4209 = !DILocation(line: 2952, column: 9, scope: !4187)
!4210 = !DILocation(line: 2952, column: 8, scope: !3966)
!4211 = distinct !{!4211, !4115, !4212}
!4212 = !DILocation(line: 3217, column: 5, scope: !3938)
!4213 = !DILocation(line: 2958, column: 11, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 2958, column: 11)
!4215 = !DILocation(line: 2958, column: 35, scope: !4214)
!4216 = !DILocation(line: 2958, column: 21, scope: !4214)
!4217 = !DILocation(line: 2958, column: 18, scope: !4214)
!4218 = !DILocation(line: 2959, column: 14, scope: !4214)
!4219 = !DILocation(line: 2959, column: 22, scope: !4214)
!4220 = !DILocation(line: 2960, column: 8, scope: !4214)
!4221 = !DILocation(line: 2960, column: 12, scope: !4214)
!4222 = !DILocation(line: 2958, column: 11, scope: !3968)
!4223 = !DILocation(line: 2962, column: 18, scope: !4214)
!4224 = !DILocation(line: 2962, column: 27, scope: !4214)
!4225 = !DILocation(line: 2962, column: 39, scope: !4214)
!4226 = !DILocation(line: 2963, column: 6, scope: !4214)
!4227 = !DILocation(line: 2964, column: 22, scope: !4214)
!4228 = !DILocation(line: 2962, column: 4, scope: !4214)
!4229 = !DILocation(line: 2961, column: 2, scope: !4214)
!4230 = !DILocation(line: 2966, column: 19, scope: !4214)
!4231 = !DILocation(line: 0, scope: !4214)
!4232 = !DILocation(line: 2969, column: 26, scope: !3968)
!4233 = !DILocation(line: 2970, column: 7, scope: !3968)
!4234 = !DILocation(line: 2961, column: 17, scope: !4214)
!4235 = !DILocation(line: 2968, column: 26, scope: !3968)
!4236 = !DILocation(line: 2972, column: 4, scope: !3972)
!4237 = !DILocation(line: 2976, column: 8, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 2976, column: 8)
!4239 = !DILocation(line: 2976, column: 22, scope: !4238)
!4240 = !DILocation(line: 2976, column: 8, scope: !3972)
!4241 = !DILocation(line: 2978, column: 17, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2977, column: 6)
!4243 = !DILocation(line: 2979, column: 10, scope: !4242)
!4244 = !DILocation(line: 2978, column: 8, scope: !4242)
!4245 = !DILocation(line: 2980, column: 8, scope: !4242)
!4246 = !DILocation(line: 2981, column: 12, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 2981, column: 12)
!4248 = !DILocation(line: 2981, column: 12, scope: !4242)
!4249 = !DILocation(line: 2982, column: 3, scope: !4247)
!4250 = !DILocation(line: 2985, column: 14, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 2985, column: 8)
!4252 = !DILocation(line: 2985, column: 22, scope: !4251)
!4253 = !DILocation(line: 2986, column: 11, scope: !4251)
!4254 = !DILocation(line: 2986, column: 8, scope: !4251)
!4255 = !DILocation(line: 2987, column: 11, scope: !4251)
!4256 = !DILocation(line: 2992, column: 12, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 2992, column: 12)
!4258 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 2988, column: 6)
!4259 = !DILocation(line: 2992, column: 26, scope: !4257)
!4260 = !DILocation(line: 2992, column: 12, scope: !4258)
!4261 = !DILocation(line: 2993, column: 12, scope: !4257)
!4262 = !DILocation(line: 2993, column: 3, scope: !4257)
!4263 = !DILocation(line: 2994, column: 28, scope: !4258)
!4264 = !DILocation(line: 2994, column: 40, scope: !4258)
!4265 = !DILocation(line: 2994, column: 8, scope: !4258)
!4266 = !DILocation(line: 2995, column: 12, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 2995, column: 12)
!4268 = !DILocation(line: 2995, column: 12, scope: !4258)
!4269 = !DILocation(line: 2996, column: 3, scope: !4267)
!4270 = !DILocation(line: 2999, column: 14, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 2999, column: 8)
!4272 = !DILocation(line: 2999, column: 22, scope: !4271)
!4273 = !DILocation(line: 3000, column: 8, scope: !4271)
!4274 = !DILocation(line: 3001, column: 30, scope: !4271)
!4275 = !DILocation(line: 3001, column: 11, scope: !4271)
!4276 = !DILocation(line: 3002, column: 8, scope: !4271)
!4277 = !DILocation(line: 3002, column: 14, scope: !4271)
!4278 = !DILocation(line: 3002, column: 34, scope: !4271)
!4279 = !DILocation(line: 3002, column: 12, scope: !4271)
!4280 = !DILocation(line: 2999, column: 8, scope: !3972)
!4281 = !DILocation(line: 3006, column: 8, scope: !3979)
!4282 = !DILocation(line: 3006, column: 8, scope: !3972)
!4283 = !DILocation(line: 3010, column: 13, scope: !3978)
!4284 = !DILocation(line: 3011, column: 14, scope: !3978)
!4285 = !DILocation(line: 0, scope: !3978)
!4286 = !DILocation(line: 3013, column: 16, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 3013, column: 12)
!4288 = !DILocation(line: 3013, column: 12, scope: !3978)
!4289 = !DILocation(line: 3016, column: 16, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 3016, column: 12)
!4291 = !DILocation(line: 3016, column: 12, scope: !3978)
!4292 = distinct !{!4292, !4293, !4294}
!4293 = !DILocation(line: 2970, column: 7, scope: !3974)
!4294 = !DILocation(line: 3216, column: 2, scope: !3974)
!4295 = !DILocation(line: 3020, column: 8, scope: !3978)
!4296 = !DILocation(line: 3023, column: 13, scope: !3979)
!4297 = !DILocation(line: 3023, column: 11, scope: !3979)
!4298 = !DILocation(line: 3025, column: 8, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3025, column: 8)
!4300 = !DILocation(line: 3025, column: 25, scope: !4299)
!4301 = !DILocation(line: 3025, column: 28, scope: !4299)
!4302 = !DILocation(line: 3025, column: 47, scope: !4299)
!4303 = !DILocation(line: 3025, column: 45, scope: !4299)
!4304 = !DILocation(line: 3025, column: 8, scope: !3972)
!4305 = !DILocation(line: 3027, column: 27, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3026, column: 6)
!4307 = !DILocation(line: 3027, column: 8, scope: !4306)
!4308 = !DILocation(line: 3029, column: 8, scope: !4306)
!4309 = !DILocation(line: 3032, column: 22, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3032, column: 8)
!4311 = !DILocation(line: 3032, column: 8, scope: !4310)
!4312 = !DILocation(line: 3033, column: 8, scope: !4310)
!4313 = !DILocation(line: 3033, column: 40, scope: !4310)
!4314 = !DILocation(line: 3033, column: 52, scope: !4310)
!4315 = !DILocation(line: 3034, column: 12, scope: !4310)
!4316 = !DILocation(line: 3034, column: 18, scope: !4310)
!4317 = !DILocation(line: 3035, column: 12, scope: !4310)
!4318 = !DILocation(line: 3033, column: 11, scope: !4310)
!4319 = !DILocation(line: 3032, column: 8, scope: !3972)
!4320 = !DILocation(line: 3048, column: 27, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 3047, column: 6)
!4322 = !DILocation(line: 3048, column: 8, scope: !4321)
!4323 = !DILocation(line: 3049, column: 15, scope: !4321)
!4324 = !DILocation(line: 3052, column: 11, scope: !3972)
!4325 = !DILocation(line: 3053, column: 24, scope: !3972)
!4326 = !DILocation(line: 3053, column: 36, scope: !3972)
!4327 = !DILocation(line: 3053, column: 4, scope: !3972)
!4328 = !DILocation(line: 3054, column: 24, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3054, column: 8)
!4330 = !DILocation(line: 3054, column: 8, scope: !4329)
!4331 = !DILocation(line: 3054, column: 30, scope: !4329)
!4332 = !DILocation(line: 3054, column: 8, scope: !3972)
!4333 = !DILocation(line: 3056, column: 17, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3055, column: 6)
!4335 = !DILocation(line: 3056, column: 43, scope: !4334)
!4336 = !DILocation(line: 3057, column: 10, scope: !4334)
!4337 = !DILocation(line: 3057, column: 13, scope: !4334)
!4338 = !DILocation(line: 3057, column: 44, scope: !4334)
!4339 = !DILocation(line: 3058, column: 13, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 3058, column: 12)
!4341 = !DILocation(line: 3058, column: 32, scope: !4340)
!4342 = !DILocation(line: 3069, column: 13, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3069, column: 13)
!4344 = !DILocation(line: 3069, column: 13, scope: !4329)
!4345 = !DILocation(line: 3073, column: 45, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 3072, column: 6)
!4347 = !DILocation(line: 3073, column: 15, scope: !4346)
!4348 = !DILocation(line: 3074, column: 17, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 3074, column: 12)
!4350 = !DILocation(line: 3074, column: 12, scope: !4346)
!4351 = !DILocation(line: 0, scope: !4329)
!4352 = !DILocation(line: 3080, column: 13, scope: !4114)
!4353 = !DILocation(line: 3080, column: 8, scope: !3972)
!4354 = !DILocation(line: 3082, column: 20, scope: !4113)
!4355 = !DILocation(line: 3082, column: 8, scope: !4113)
!4356 = !DILocation(line: 3083, column: 13, scope: !4112)
!4357 = !DILocation(line: 0, scope: !4113)
!4358 = !DILocation(line: 3092, column: 8, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3092, column: 8)
!4360 = !DILocation(line: 3092, column: 28, scope: !4359)
!4361 = !DILocation(line: 3093, column: 8, scope: !4359)
!4362 = !DILocation(line: 3093, column: 58, scope: !4359)
!4363 = !DILocation(line: 3093, column: 13, scope: !4359)
!4364 = !DILocation(line: 3092, column: 8, scope: !3972)
!4365 = !DILocation(line: 3097, column: 28, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 3096, column: 6)
!4367 = !DILocation(line: 3097, column: 45, scope: !4366)
!4368 = !DILocation(line: 3097, column: 61, scope: !4366)
!4369 = !DILocation(line: 3097, column: 8, scope: !4366)
!4370 = !DILocation(line: 3097, column: 25, scope: !4366)
!4371 = !DILocation(line: 3098, column: 8, scope: !4366)
!4372 = !DILocation(line: 3103, column: 15, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3103, column: 15)
!4374 = !DILocation(line: 3103, column: 32, scope: !4373)
!4375 = !DILocation(line: 3103, column: 15, scope: !3972)
!4376 = !DILocation(line: 3104, column: 37, scope: !4373)
!4377 = !DILocation(line: 3104, column: 13, scope: !4373)
!4378 = !DILocation(line: 3106, column: 29, scope: !3984)
!4379 = !DILocation(line: 3106, column: 8, scope: !3984)
!4380 = !DILocation(line: 3112, column: 8, scope: !3984)
!4381 = !DILocation(line: 3112, column: 11, scope: !3984)
!4382 = !DILocation(line: 3112, column: 31, scope: !3984)
!4383 = !DILocation(line: 3112, column: 50, scope: !3984)
!4384 = !DILocation(line: 3112, column: 62, scope: !3984)
!4385 = !DILocation(line: 3106, column: 8, scope: !3972)
!4386 = !DILocation(line: 3131, column: 14, scope: !3972)
!4387 = !DILocation(line: 3114, column: 21, scope: !3983)
!4388 = !DILocation(line: 3114, column: 41, scope: !3983)
!4389 = !DILocation(line: 3115, column: 4, scope: !3983)
!4390 = !DILocation(line: 3114, column: 19, scope: !3983)
!4391 = !DILocation(line: 3117, column: 12, scope: !3982)
!4392 = !DILocation(line: 3117, column: 12, scope: !3983)
!4393 = !DILocation(line: 3121, column: 25, scope: !3981)
!4394 = !DILocation(line: 3121, column: 9, scope: !3981)
!4395 = !DILocation(line: 0, scope: !3981)
!4396 = !DILocation(line: 3122, column: 5, scope: !3981)
!4397 = !DILocation(line: 3123, column: 31, scope: !3981)
!4398 = !DILocation(line: 3123, column: 5, scope: !3981)
!4399 = !DILocation(line: 3126, column: 39, scope: !3983)
!4400 = !DILocation(line: 3124, column: 3, scope: !3981)
!4401 = !DILocation(line: 3126, column: 30, scope: !3983)
!4402 = !DILocation(line: 3126, column: 28, scope: !3983)
!4403 = !DILocation(line: 3127, column: 6, scope: !3983)
!4404 = !DILocation(line: 3130, column: 6, scope: !3972)
!4405 = !DILocation(line: 3130, column: 26, scope: !3972)
!4406 = !DILocation(line: 3130, column: 49, scope: !3972)
!4407 = !DILocation(line: 3130, column: 4, scope: !3972)
!4408 = !DILocation(line: 3133, column: 15, scope: !3972)
!4409 = !DILocation(line: 3133, column: 21, scope: !3972)
!4410 = !DILocation(line: 3133, column: 42, scope: !3972)
!4411 = !DILocation(line: 3133, column: 62, scope: !3972)
!4412 = !DILocation(line: 3133, column: 4, scope: !3972)
!4413 = !DILocation(line: 3134, column: 18, scope: !3972)
!4414 = !DILocation(line: 3134, column: 4, scope: !3972)
!4415 = !DILocation(line: 3135, column: 26, scope: !3972)
!4416 = !DILocation(line: 3135, column: 24, scope: !3972)
!4417 = !DILocation(line: 3137, column: 16, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3137, column: 8)
!4419 = !DILocation(line: 3137, column: 40, scope: !4418)
!4420 = !DILocation(line: 3137, column: 8, scope: !4418)
!4421 = !DILocation(line: 3137, column: 56, scope: !4418)
!4422 = !DILocation(line: 3137, column: 8, scope: !3972)
!4423 = !DILocation(line: 3139, column: 33, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 3138, column: 13)
!4425 = !DILocation(line: 3140, column: 23, scope: !4424)
!4426 = !DILocation(line: 3140, column: 47, scope: !4424)
!4427 = !DILocation(line: 3140, column: 15, scope: !4424)
!4428 = !DILocation(line: 3141, column: 13, scope: !4424)
!4429 = !DILocation(line: 3143, column: 22, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3143, column: 8)
!4431 = !DILocation(line: 3143, column: 8, scope: !4430)
!4432 = !DILocation(line: 3143, column: 8, scope: !3972)
!4433 = !DILocation(line: 3145, column: 38, scope: !4430)
!4434 = !DILocation(line: 3145, column: 50, scope: !4430)
!4435 = !DILocation(line: 3146, column: 10, scope: !4430)
!4436 = !DILocation(line: 3145, column: 8, scope: !4430)
!4437 = !DILocation(line: 3152, column: 29, scope: !3972)
!4438 = !DILocation(line: 3144, column: 6, scope: !4430)
!4439 = !DILocation(line: 3149, column: 13, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 3149, column: 13)
!4441 = !DILocation(line: 3149, column: 39, scope: !4440)
!4442 = !DILocation(line: 3150, column: 6, scope: !4440)
!4443 = !DILocation(line: 3150, column: 35, scope: !4440)
!4444 = !DILocation(line: 3149, column: 13, scope: !4430)
!4445 = !DILocation(line: 0, scope: !4430)
!4446 = !DILocation(line: 3152, column: 14, scope: !3972)
!4447 = !DILocation(line: 3155, column: 16, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3155, column: 8)
!4449 = !DILocation(line: 3155, column: 24, scope: !4448)
!4450 = !DILocation(line: 3155, column: 21, scope: !4448)
!4451 = !DILocation(line: 3157, column: 16, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3157, column: 8)
!4453 = !DILocation(line: 3157, column: 8, scope: !3972)
!4454 = !DILocation(line: 3165, column: 14, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3165, column: 8)
!4456 = !DILocation(line: 3165, column: 22, scope: !4455)
!4457 = !DILocation(line: 3165, column: 8, scope: !3972)
!4458 = !DILocation(line: 3166, column: 6, scope: !4455)
!4459 = !DILocation(line: 3170, column: 14, scope: !3991)
!4460 = !DILocation(line: 3170, column: 8, scope: !3991)
!4461 = !DILocation(line: 3170, column: 22, scope: !3991)
!4462 = !DILocation(line: 3170, column: 25, scope: !3991)
!4463 = !DILocation(line: 3171, column: 8, scope: !3991)
!4464 = !DILocation(line: 3171, column: 13, scope: !3991)
!4465 = !DILocation(line: 3171, column: 33, scope: !3991)
!4466 = !DILocation(line: 3171, column: 11, scope: !3991)
!4467 = !DILocation(line: 3170, column: 8, scope: !3972)
!4468 = !DILocation(line: 3173, column: 33, scope: !3989)
!4469 = !DILocation(line: 3173, column: 12, scope: !3989)
!4470 = !DILocation(line: 3173, column: 12, scope: !3990)
!4471 = !DILocation(line: 3175, column: 18, scope: !3988)
!4472 = !DILocation(line: 3175, column: 38, scope: !3988)
!4473 = !DILocation(line: 3176, column: 8, scope: !3988)
!4474 = !DILocation(line: 3175, column: 16, scope: !3988)
!4475 = !DILocation(line: 3178, column: 9, scope: !3987)
!4476 = !DILocation(line: 3178, column: 9, scope: !3988)
!4477 = !DILocation(line: 3182, column: 29, scope: !3986)
!4478 = !DILocation(line: 3182, column: 13, scope: !3986)
!4479 = !DILocation(line: 0, scope: !3986)
!4480 = !DILocation(line: 3183, column: 9, scope: !3986)
!4481 = !DILocation(line: 3184, column: 35, scope: !3986)
!4482 = !DILocation(line: 3184, column: 9, scope: !3986)
!4483 = !DILocation(line: 3187, column: 36, scope: !3988)
!4484 = !DILocation(line: 3185, column: 7, scope: !3986)
!4485 = !DILocation(line: 3187, column: 27, scope: !3988)
!4486 = !DILocation(line: 3187, column: 25, scope: !3988)
!4487 = !DILocation(line: 3188, column: 3, scope: !3988)
!4488 = !DILocation(line: 3190, column: 9, scope: !3990)
!4489 = !DILocation(line: 3190, column: 22, scope: !3990)
!4490 = !DILocation(line: 3190, column: 16, scope: !3990)
!4491 = !DILocation(line: 3190, column: 30, scope: !3990)
!4492 = !DILocation(line: 3190, column: 33, scope: !3990)
!4493 = !DILocation(line: 3192, column: 12, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 3191, column: 3)
!4495 = !DILocation(line: 3192, column: 10, scope: !4494)
!4496 = !DILocation(line: 3193, column: 5, scope: !4494)
!4497 = !DILocation(line: 3195, column: 8, scope: !4494)
!4498 = !DILocation(line: 3194, column: 7, scope: !4494)
!4499 = !DILocation(line: 3194, column: 27, scope: !4494)
!4500 = !DILocation(line: 3195, column: 14, scope: !4494)
!4501 = !DILocation(line: 3194, column: 5, scope: !4494)
!4502 = !DILocation(line: 3196, column: 16, scope: !4494)
!4503 = !DILocation(line: 3196, column: 22, scope: !4494)
!4504 = !DILocation(line: 3197, column: 9, scope: !4494)
!4505 = !DILocation(line: 3197, column: 29, scope: !4494)
!4506 = !DILocation(line: 3196, column: 5, scope: !4494)
!4507 = !DILocation(line: 3198, column: 30, scope: !4494)
!4508 = !DILocation(line: 3198, column: 15, scope: !4494)
!4509 = !DILocation(line: 3199, column: 27, scope: !4494)
!4510 = !DILocation(line: 3199, column: 25, scope: !4494)
!4511 = !DILocation(line: 3200, column: 5, scope: !4494)
!4512 = !DILocation(line: 3201, column: 15, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 3201, column: 9)
!4514 = !DILocation(line: 3201, column: 23, scope: !4513)
!4515 = !DILocation(line: 3201, column: 9, scope: !4494)
!4516 = !DILocation(line: 3202, column: 7, scope: !4513)
!4517 = distinct !{!4517, !4488, !4518}
!4518 = !DILocation(line: 3203, column: 3, scope: !3990)
!4519 = !DILocation(line: 3206, column: 22, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 3206, column: 8)
!4521 = !DILocation(line: 3156, column: 14, scope: !4448)
!4522 = !DILocation(line: 3206, column: 8, scope: !4520)
!4523 = !DILocation(line: 3207, column: 8, scope: !4520)
!4524 = !DILocation(line: 3207, column: 18, scope: !4520)
!4525 = !DILocation(line: 3207, column: 26, scope: !4520)
!4526 = !DILocation(line: 3208, column: 5, scope: !4520)
!4527 = !DILocation(line: 3208, column: 9, scope: !4520)
!4528 = !DILocation(line: 3206, column: 8, scope: !3972)
!4529 = !DILocation(line: 3211, column: 17, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 3209, column: 6)
!4531 = !DILocation(line: 3212, column: 12, scope: !4530)
!4532 = !DILocation(line: 3211, column: 27, scope: !4530)
!4533 = !DILocation(line: 3211, column: 39, scope: !4530)
!4534 = !DILocation(line: 3212, column: 6, scope: !4530)
!4535 = !DILocation(line: 3213, column: 8, scope: !4530)
!4536 = !DILocation(line: 3214, column: 22, scope: !4530)
!4537 = !DILocation(line: 3211, column: 3, scope: !4530)
!4538 = !DILocation(line: 3215, column: 6, scope: !4530)
!4539 = !DILocation(line: 3216, column: 2, scope: !3973)
!4540 = !DILocation(line: 3220, column: 7, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3220, column: 7)
!4542 = !DILocation(line: 3220, column: 7, scope: !3938)
!4543 = !DILocation(line: 3222, column: 16, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 3221, column: 5)
!4545 = !DILocation(line: 3222, column: 7, scope: !4544)
!4546 = !DILocation(line: 3223, column: 7, scope: !4544)
!4547 = !DILocation(line: 3224, column: 5, scope: !4544)
!4548 = !DILocation(line: 3226, column: 7, scope: !3997)
!4549 = !DILocation(line: 3226, column: 27, scope: !3997)
!4550 = !DILocation(line: 3226, column: 7, scope: !3938)
!4551 = !DILocation(line: 3229, column: 5, scope: !3997)
!4552 = !DILocation(line: 3233, column: 22, scope: !3995)
!4553 = !DILocation(line: 3233, column: 12, scope: !3995)
!4554 = !DILocation(line: 0, scope: !3995)
!4555 = !DILocation(line: 3233, column: 37, scope: !3994)
!4556 = !DILocation(line: 3233, column: 7, scope: !3995)
!4557 = !DILocation(line: 3237, column: 8, scope: !3993)
!4558 = !DILocation(line: 0, scope: !3993)
!4559 = !DILocation(line: 3238, column: 4, scope: !3993)
!4560 = !DILocation(line: 3238, column: 20, scope: !3993)
!4561 = !DILocation(line: 3239, column: 21, scope: !3993)
!4562 = !DILocation(line: 3239, column: 35, scope: !3993)
!4563 = !DILocation(line: 3239, column: 51, scope: !3993)
!4564 = !DILocation(line: 3239, column: 4, scope: !3993)
!4565 = !DILocation(line: 3239, column: 18, scope: !3993)
!4566 = !DILocation(line: 3233, column: 7, scope: !3994)
!4567 = distinct !{!4567, !4556, !4568}
!4568 = !DILocation(line: 3240, column: 2, scope: !3995)
!4569 = !DILocation(line: 3242, column: 11, scope: !4002)
!4570 = !DILocation(line: 3242, column: 11, scope: !3996)
!4571 = !DILocation(line: 3243, column: 2, scope: !4001)
!4572 = !DILocation(line: 0, scope: !4001)
!4573 = !DILocation(line: 3243, column: 16, scope: !4000)
!4574 = !DILocation(line: 3246, column: 18, scope: !4006)
!4575 = !DILocation(line: 3246, column: 11, scope: !4006)
!4576 = !DILocation(line: 0, scope: !4006)
!4577 = !DILocation(line: 0, scope: !3999)
!4578 = !DILocation(line: 3246, column: 6, scope: !4006)
!4579 = !DILocation(line: 3250, column: 7, scope: !4004)
!4580 = !DILocation(line: 0, scope: !4004)
!4581 = !DILocation(line: 3251, column: 3, scope: !4004)
!4582 = !DILocation(line: 3251, column: 19, scope: !4004)
!4583 = !DILocation(line: 3252, column: 20, scope: !4004)
!4584 = !DILocation(line: 3252, column: 34, scope: !4004)
!4585 = !DILocation(line: 3252, column: 50, scope: !4004)
!4586 = !DILocation(line: 3252, column: 3, scope: !4004)
!4587 = !DILocation(line: 3252, column: 17, scope: !4004)
!4588 = !DILocation(line: 3246, column: 46, scope: !4005)
!4589 = !DILocation(line: 3246, column: 6, scope: !4005)
!4590 = distinct !{!4590, !4578, !4591}
!4591 = !DILocation(line: 3253, column: 8, scope: !4006)
!4592 = !DILocation(line: 3254, column: 28, scope: !3999)
!4593 = !DILocation(line: 3254, column: 6, scope: !3999)
!4594 = !DILocation(line: 3243, column: 42, scope: !4000)
!4595 = !DILocation(line: 3243, column: 2, scope: !4000)
!4596 = distinct !{!4596, !4571, !4597}
!4597 = !DILocation(line: 3255, column: 4, scope: !4001)
!4598 = !DILocation(line: 3258, column: 7, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3258, column: 7)
!4600 = !DILocation(line: 3258, column: 7, scope: !3938)
!4601 = !DILocation(line: 3259, column: 14, scope: !4599)
!4602 = !DILocation(line: 3259, column: 52, scope: !4599)
!4603 = !DILocation(line: 3259, column: 5, scope: !4599)
!4604 = !DILocation(line: 3261, column: 8, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3261, column: 7)
!4606 = !DILocation(line: 3261, column: 28, scope: !4605)
!4607 = !DILocation(line: 3262, column: 7, scope: !4605)
!4608 = !DILocation(line: 3262, column: 10, scope: !4605)
!4609 = !DILocation(line: 3261, column: 7, scope: !3938)
!4610 = !DILocation(line: 3270, column: 23, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 3263, column: 5)
!4612 = !DILocation(line: 3270, column: 46, scope: !4611)
!4613 = !DILocation(line: 3270, column: 7, scope: !4611)
!4614 = !DILocation(line: 3271, column: 5, scope: !4611)
!4615 = !DILocation(line: 3273, column: 21, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3273, column: 7)
!4617 = !DILocation(line: 3273, column: 7, scope: !4616)
!4618 = !DILocation(line: 3273, column: 7, scope: !3938)
!4619 = !DILocation(line: 3275, column: 32, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 3274, column: 5)
!4621 = !DILocation(line: 3275, column: 44, scope: !4620)
!4622 = !DILocation(line: 3275, column: 7, scope: !4620)
!4623 = !DILocation(line: 3280, column: 7, scope: !4620)
!4624 = !DILocation(line: 3281, column: 5, scope: !4620)
!4625 = !DILocation(line: 3283, column: 7, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 3283, column: 7)
!4627 = !DILocation(line: 3283, column: 7, scope: !3938)
!4628 = !DILocation(line: 3284, column: 14, scope: !4626)
!4629 = !DILocation(line: 3285, column: 7, scope: !4626)
!4630 = !DILocation(line: 3285, column: 24, scope: !4626)
!4631 = !DILocation(line: 3284, column: 5, scope: !4626)
!4632 = !DILocation(line: 3288, column: 10, scope: !3938)
!4633 = !DILocation(line: 3289, column: 10, scope: !3938)
!4634 = !DILocation(line: 3291, column: 10, scope: !3938)
!4635 = !DILocation(line: 3293, column: 3, scope: !3938)
!4636 = !DILocation(line: 3293, column: 23, scope: !3938)
!4637 = !DILocation(line: 3293, column: 28, scope: !3938)
!4638 = !DILocation(line: 3294, column: 23, scope: !3938)
!4639 = !DILocation(line: 3294, column: 28, scope: !3938)
!4640 = !DILocation(line: 3295, column: 1, scope: !3938)
!4641 = distinct !DISubprogram(name: "dump_new_block_header", scope: !3, file: !3, line: 4849, type: !4642, scopeLine: 4850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4644)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{null, !631, !1172, !638, !638}
!4644 = !{!4645, !4646, !4647, !4648}
!4645 = !DILocalVariable(name: "i", arg: 1, scope: !4641, file: !3, line: 4849, type: !631)
!4646 = !DILocalVariable(name: "bb", arg: 2, scope: !4641, file: !3, line: 4849, type: !1172)
!4647 = !DILocalVariable(name: "head", arg: 3, scope: !4641, file: !3, line: 4849, type: !638)
!4648 = !DILocalVariable(name: "tail", arg: 4, scope: !4641, file: !3, line: 4849, type: !638)
!4649 = !DILocation(line: 0, scope: !4641)
!4650 = !DILocation(line: 4851, column: 8, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 4851, column: 7)
!4652 = !DILocation(line: 0, scope: !4651)
!4653 = !DILocation(line: 4851, column: 7, scope: !4641)
!4654 = !DILocation(line: 4852, column: 5, scope: !4651)
!4655 = !DILocation(line: 4855, column: 5, scope: !4651)
!4656 = !DILocation(line: 4857, column: 12, scope: !4641)
!4657 = !DILocation(line: 4859, column: 9, scope: !4641)
!4658 = !DILocation(line: 4859, column: 16, scope: !4641)
!4659 = !DILocation(line: 4859, column: 33, scope: !4641)
!4660 = !DILocation(line: 4860, column: 6, scope: !4641)
!4661 = !DILocation(line: 4857, column: 3, scope: !4641)
!4662 = !DILocation(line: 4861, column: 12, scope: !4641)
!4663 = !DILocation(line: 4861, column: 3, scope: !4641)
!4664 = !DILocation(line: 4863, column: 12, scope: !4641)
!4665 = !DILocation(line: 4863, column: 3, scope: !4641)
!4666 = !DILocation(line: 4864, column: 1, scope: !4641)
!4667 = distinct !DISubprogram(name: "ready_remove", scope: !3, file: !3, line: 1466, type: !2954, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4668)
!4668 = !{!4669, !4670, !4671, !4672}
!4669 = !DILocalVariable(name: "ready", arg: 1, scope: !4667, file: !3, line: 1466, type: !2244)
!4670 = !DILocalVariable(name: "index", arg: 2, scope: !4667, file: !3, line: 1466, type: !631)
!4671 = !DILocalVariable(name: "t", scope: !4667, file: !3, line: 1468, type: !638)
!4672 = !DILocalVariable(name: "i", scope: !4667, file: !3, line: 1469, type: !631)
!4673 = !DILocation(line: 0, scope: !4667)
!4674 = !DILocation(line: 1471, column: 13, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1471, column: 7)
!4676 = !DILocation(line: 1471, column: 7, scope: !4667)
!4677 = !DILocation(line: 1472, column: 12, scope: !4675)
!4678 = !DILocation(line: 1472, column: 5, scope: !4675)
!4679 = !DILocation(line: 1473, column: 3, scope: !4667)
!4680 = !DILocation(line: 1475, column: 17, scope: !4667)
!4681 = !DILocation(line: 1474, column: 14, scope: !4667)
!4682 = !DILocation(line: 1474, column: 25, scope: !4667)
!4683 = !DILocation(line: 1474, column: 31, scope: !4667)
!4684 = !DILocation(line: 1474, column: 7, scope: !4667)
!4685 = !DILocation(line: 1476, column: 7, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1476, column: 7)
!4687 = !DILocation(line: 1476, column: 7, scope: !4667)
!4688 = !DILocation(line: 1477, column: 19, scope: !4686)
!4689 = !DILocation(line: 1477, column: 5, scope: !4686)
!4690 = !DILocation(line: 1478, column: 8, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1478, column: 3)
!4692 = !DILocation(line: 1478, column: 30, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 1478, column: 3)
!4694 = !DILocation(line: 0, scope: !4691)
!4695 = !DILocation(line: 1478, column: 21, scope: !4693)
!4696 = !DILocation(line: 1478, column: 3, scope: !4691)
!4697 = !DILocation(line: 1479, column: 43, scope: !4693)
!4698 = !DILocation(line: 1479, column: 54, scope: !4693)
!4699 = !DILocation(line: 1479, column: 64, scope: !4693)
!4700 = !DILocation(line: 1479, column: 36, scope: !4693)
!4701 = !DILocation(line: 1479, column: 29, scope: !4693)
!4702 = !DILocation(line: 1479, column: 5, scope: !4693)
!4703 = !DILocation(line: 1479, column: 34, scope: !4693)
!4704 = !DILocation(line: 1478, column: 40, scope: !4693)
!4705 = !DILocation(line: 1478, column: 3, scope: !4693)
!4706 = distinct !{!4706, !4696, !4707}
!4707 = !DILocation(line: 1479, column: 67, scope: !4691)
!4708 = !DILocation(line: 1480, column: 3, scope: !4667)
!4709 = !DILocation(line: 1480, column: 19, scope: !4667)
!4710 = !DILocation(line: 1481, column: 3, scope: !4667)
!4711 = !DILocation(line: 1482, column: 1, scope: !4667)
!4712 = distinct !DISubprogram(name: "queue_insn", scope: !3, file: !3, line: 1341, type: !2169, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4713)
!4713 = !{!4714, !4715, !4716, !4717}
!4714 = !DILocalVariable(name: "insn", arg: 1, scope: !4712, file: !3, line: 1341, type: !638)
!4715 = !DILocalVariable(name: "n_cycles", arg: 2, scope: !4712, file: !3, line: 1341, type: !631)
!4716 = !DILocalVariable(name: "next_q", scope: !4712, file: !3, line: 1343, type: !631)
!4717 = !DILocalVariable(name: "link", scope: !4712, file: !3, line: 1344, type: !638)
!4718 = !DILocation(line: 0, scope: !4712)
!4719 = !DILocation(line: 1343, column: 16, scope: !4712)
!4720 = !DILocation(line: 1344, column: 37, scope: !4712)
!4721 = !DILocation(line: 1344, column: 14, scope: !4712)
!4722 = !DILocation(line: 1346, column: 3, scope: !4712)
!4723 = !DILocation(line: 1347, column: 3, scope: !4712)
!4724 = !DILocation(line: 1349, column: 3, scope: !4712)
!4725 = !DILocation(line: 1349, column: 22, scope: !4712)
!4726 = !DILocation(line: 1350, column: 10, scope: !4712)
!4727 = !DILocation(line: 1352, column: 7, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 1352, column: 7)
!4729 = !DILocation(line: 1352, column: 21, scope: !4728)
!4730 = !DILocation(line: 1352, column: 7, scope: !4712)
!4731 = !DILocation(line: 1354, column: 16, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 1353, column: 5)
!4733 = !DILocation(line: 1355, column: 11, scope: !4732)
!4734 = !DILocation(line: 1355, column: 31, scope: !4732)
!4735 = !DILocation(line: 1355, column: 9, scope: !4732)
!4736 = !DILocation(line: 1354, column: 7, scope: !4732)
!4737 = !DILocation(line: 1357, column: 16, scope: !4732)
!4738 = !DILocation(line: 1357, column: 7, scope: !4732)
!4739 = !DILocation(line: 1358, column: 5, scope: !4732)
!4740 = !DILocation(line: 1360, column: 3, scope: !4712)
!4741 = !DILocation(line: 1360, column: 22, scope: !4712)
!4742 = !DILocation(line: 1361, column: 1, scope: !4712)
!4743 = distinct !DISubprogram(name: "restore_bb_notes", scope: !3, file: !3, line: 4919, type: !2111, scopeLine: 4920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4744)
!4744 = !{!4745, !4746, !4748, !4749, !4750}
!4745 = !DILocalVariable(name: "first", arg: 1, scope: !4743, file: !3, line: 4919, type: !1172)
!4746 = !DILocalVariable(name: "prev", scope: !4747, file: !3, line: 4931, type: !638)
!4747 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 4930, column: 5)
!4748 = !DILocalVariable(name: "label", scope: !4747, file: !3, line: 4931, type: !638)
!4749 = !DILocalVariable(name: "note", scope: !4747, file: !3, line: 4931, type: !638)
!4750 = !DILocalVariable(name: "next", scope: !4747, file: !3, line: 4931, type: !638)
!4751 = !DILocation(line: 0, scope: !4743)
!4752 = !DILocation(line: 4921, column: 8, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 4921, column: 7)
!4754 = !DILocation(line: 4921, column: 7, scope: !4743)
!4755 = !DILocation(line: 4928, column: 3, scope: !4743)
!4756 = !DILocation(line: 4928, column: 19, scope: !4743)
!4757 = !DILocation(line: 4928, column: 16, scope: !4743)
!4758 = !DILocation(line: 4929, column: 3, scope: !4743)
!4759 = !DILocation(line: 4929, column: 6, scope: !4743)
!4760 = !DILocation(line: 4929, column: 23, scope: !4743)
!4761 = !DILocation(line: 4933, column: 32, scope: !4747)
!4762 = !DILocation(line: 4933, column: 15, scope: !4747)
!4763 = !DILocation(line: 0, scope: !4747)
!4764 = !DILocation(line: 4934, column: 14, scope: !4747)
!4765 = !DILocation(line: 4935, column: 14, scope: !4747)
!4766 = !DILocation(line: 4937, column: 11, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 4937, column: 11)
!4768 = !DILocation(line: 4937, column: 11, scope: !4747)
!4769 = !DILocation(line: 4938, column: 9, scope: !4767)
!4770 = !DILocation(line: 4941, column: 7, scope: !4747)
!4771 = !DILocation(line: 4938, column: 2, scope: !4767)
!4772 = !DILocation(line: 0, scope: !4767)
!4773 = !DILocation(line: 4943, column: 7, scope: !4747)
!4774 = !DILocation(line: 4943, column: 24, scope: !4747)
!4775 = !DILocation(line: 4943, column: 31, scope: !4747)
!4776 = !DILocation(line: 4945, column: 24, scope: !4747)
!4777 = !DILocation(line: 4946, column: 7, scope: !4747)
!4778 = !DILocation(line: 4946, column: 24, scope: !4747)
!4779 = !DILocation(line: 4947, column: 7, scope: !4747)
!4780 = !DILocation(line: 4947, column: 24, scope: !4747)
!4781 = distinct !{!4781, !4755, !4782}
!4782 = !DILocation(line: 4950, column: 5, scope: !4743)
!4783 = !DILocation(line: 4952, column: 9, scope: !4743)
!4784 = !DILocation(line: 4952, column: 3, scope: !4743)
!4785 = !DILocation(line: 4953, column: 13, scope: !4743)
!4786 = !DILocation(line: 4954, column: 1, scope: !4743)
!4787 = distinct !DISubprogram(name: "advance_one_cycle", scope: !3, file: !3, line: 1558, type: !2107, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!4788 = !DILocation(line: 1560, column: 18, scope: !4787)
!4789 = !DILocation(line: 1560, column: 3, scope: !4787)
!4790 = !DILocation(line: 1561, column: 7, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 1561, column: 7)
!4792 = !DILocation(line: 1561, column: 21, scope: !4791)
!4793 = !DILocation(line: 1561, column: 7, scope: !4787)
!4794 = !DILocation(line: 1562, column: 14, scope: !4791)
!4795 = !DILocation(line: 1562, column: 5, scope: !4791)
!4796 = !DILocation(line: 1563, column: 1, scope: !4787)
!4797 = distinct !DISubprogram(name: "queue_to_ready", scope: !3, file: !3, line: 1984, type: !2967, scopeLine: 1985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4798)
!4798 = !{!4799, !4800, !4801, !4802, !4803}
!4799 = !DILocalVariable(name: "ready", arg: 1, scope: !4797, file: !3, line: 1984, type: !2244)
!4800 = !DILocalVariable(name: "insn", scope: !4797, file: !3, line: 1986, type: !638)
!4801 = !DILocalVariable(name: "link", scope: !4797, file: !3, line: 1987, type: !638)
!4802 = !DILocalVariable(name: "skip_insn", scope: !4797, file: !3, line: 1988, type: !638)
!4803 = !DILocalVariable(name: "stalls", scope: !4804, file: !3, line: 2038, type: !631)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 2037, column: 5)
!4805 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 2036, column: 7)
!4806 = !DILocation(line: 0, scope: !4797)
!4807 = !DILocation(line: 1990, column: 11, scope: !4797)
!4808 = !DILocation(line: 1990, column: 9, scope: !4797)
!4809 = !DILocation(line: 1992, column: 7, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 1992, column: 7)
!4811 = !DILocation(line: 1992, column: 28, scope: !4810)
!4812 = !DILocation(line: 1992, column: 7, scope: !4797)
!4813 = !DILocation(line: 1996, column: 38, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 1993, column: 5)
!4815 = !DILocation(line: 1996, column: 19, scope: !4814)
!4816 = !DILocation(line: 1997, column: 7, scope: !4814)
!4817 = !DILocation(line: 0, scope: !4814)
!4818 = !DILocation(line: 1997, column: 14, scope: !4814)
!4819 = !DILocation(line: 1997, column: 24, scope: !4814)
!4820 = !DILocation(line: 1997, column: 27, scope: !4814)
!4821 = !DILocation(line: 1998, column: 14, scope: !4814)
!4822 = distinct !{!4822, !4816, !4823}
!4823 = !DILocation(line: 1998, column: 42, scope: !4814)
!4824 = !DILocation(line: 2005, column: 15, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 2005, column: 3)
!4826 = !DILocation(line: 0, scope: !4810)
!4827 = !DILocation(line: 2005, column: 26, scope: !4825)
!4828 = !DILocation(line: 2005, column: 8, scope: !4825)
!4829 = !DILocation(line: 0, scope: !4825)
!4830 = !DILocation(line: 2005, column: 3, scope: !4825)
!4831 = !DILocation(line: 2007, column: 14, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2006, column: 5)
!4833 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 2005, column: 3)
!4834 = !DILocation(line: 2008, column: 14, scope: !4832)
!4835 = !DILocation(line: 2010, column: 11, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2010, column: 11)
!4837 = !DILocation(line: 2010, column: 25, scope: !4836)
!4838 = !DILocation(line: 2010, column: 11, scope: !4832)
!4839 = !DILocation(line: 2011, column: 11, scope: !4836)
!4840 = !DILocation(line: 2012, column: 6, scope: !4836)
!4841 = !DILocation(line: 2012, column: 26, scope: !4836)
!4842 = !DILocation(line: 2012, column: 4, scope: !4836)
!4843 = !DILocation(line: 2011, column: 2, scope: !4836)
!4844 = !DILocation(line: 2016, column: 12, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2016, column: 11)
!4846 = !DILocation(line: 2017, column: 4, scope: !4845)
!4847 = !DILocation(line: 2017, column: 14, scope: !4845)
!4848 = !DILocation(line: 2017, column: 31, scope: !4845)
!4849 = !DILocation(line: 2017, column: 22, scope: !4845)
!4850 = !DILocation(line: 2017, column: 41, scope: !4845)
!4851 = !DILocation(line: 2017, column: 39, scope: !4845)
!4852 = !DILocation(line: 2018, column: 4, scope: !4845)
!4853 = !DILocation(line: 2018, column: 8, scope: !4845)
!4854 = !DILocation(line: 2019, column: 12, scope: !4845)
!4855 = !DILocation(line: 2019, column: 4, scope: !4845)
!4856 = !DILocation(line: 2021, column: 8, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2021, column: 8)
!4858 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2020, column: 2)
!4859 = !DILocation(line: 2021, column: 22, scope: !4857)
!4860 = !DILocation(line: 2021, column: 8, scope: !4858)
!4861 = !DILocation(line: 2022, column: 15, scope: !4857)
!4862 = !DILocation(line: 2022, column: 6, scope: !4857)
!4863 = !DILocation(line: 2023, column: 4, scope: !4858)
!4864 = !DILocation(line: 2024, column: 2, scope: !4858)
!4865 = !DILocation(line: 2027, column: 4, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2026, column: 2)
!4867 = !DILocation(line: 2028, column: 8, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 2028, column: 8)
!4869 = !DILocation(line: 2028, column: 22, scope: !4868)
!4870 = !DILocation(line: 2028, column: 8, scope: !4866)
!4871 = !DILocation(line: 2029, column: 15, scope: !4868)
!4872 = !DILocation(line: 2029, column: 6, scope: !4868)
!4873 = !DILocation(line: 2005, column: 47, scope: !4833)
!4874 = !DILocation(line: 2005, column: 3, scope: !4833)
!4875 = distinct !{!4875, !4830, !4876}
!4876 = !DILocation(line: 2031, column: 5, scope: !4825)
!4877 = !DILocation(line: 2032, column: 25, scope: !4797)
!4878 = !DILocation(line: 2032, column: 36, scope: !4797)
!4879 = !DILocation(line: 2032, column: 3, scope: !4797)
!4880 = !DILocation(line: 2036, column: 14, scope: !4805)
!4881 = !DILocation(line: 2036, column: 22, scope: !4805)
!4882 = !DILocation(line: 2036, column: 7, scope: !4797)
!4883 = !DILocation(line: 2040, column: 7, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2040, column: 7)
!4885 = !DILocation(line: 0, scope: !4884)
!4886 = !DILocation(line: 0, scope: !4804)
!4887 = !DILocation(line: 2040, column: 31, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 2040, column: 7)
!4889 = !DILocation(line: 2042, column: 16, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 2042, column: 8)
!4891 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 2041, column: 2)
!4892 = !DILocation(line: 2042, column: 27, scope: !4890)
!4893 = !DILocation(line: 2042, column: 14, scope: !4890)
!4894 = !DILocation(line: 2042, column: 8, scope: !4891)
!4895 = !DILocation(line: 2044, column: 8, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2044, column: 8)
!4897 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 2043, column: 6)
!4898 = !DILocation(line: 0, scope: !4890)
!4899 = !DILocation(line: 2046, column: 12, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 2045, column: 3)
!4901 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2044, column: 8)
!4902 = !DILocation(line: 2047, column: 12, scope: !4900)
!4903 = !DILocation(line: 2049, column: 9, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2049, column: 9)
!4905 = !DILocation(line: 2049, column: 23, scope: !4904)
!4906 = !DILocation(line: 2049, column: 9, scope: !4900)
!4907 = !DILocation(line: 2050, column: 16, scope: !4904)
!4908 = !DILocation(line: 2051, column: 11, scope: !4904)
!4909 = !DILocation(line: 2051, column: 31, scope: !4904)
!4910 = !DILocation(line: 2051, column: 9, scope: !4904)
!4911 = !DILocation(line: 2050, column: 7, scope: !4904)
!4912 = !DILocation(line: 2053, column: 5, scope: !4900)
!4913 = !DILocation(line: 2054, column: 9, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2054, column: 9)
!4915 = !DILocation(line: 2054, column: 23, scope: !4914)
!4916 = !DILocation(line: 2054, column: 9, scope: !4900)
!4917 = !DILocation(line: 2055, column: 16, scope: !4914)
!4918 = !DILocation(line: 2055, column: 7, scope: !4914)
!4919 = !DILocation(line: 2044, column: 28, scope: !4901)
!4920 = !DILocation(line: 2044, column: 8, scope: !4901)
!4921 = distinct !{!4921, !4895, !4922}
!4922 = !DILocation(line: 2056, column: 3, scope: !4896)
!4923 = !DILocation(line: 2057, column: 30, scope: !4897)
!4924 = !DILocation(line: 2057, column: 41, scope: !4897)
!4925 = !DILocation(line: 2057, column: 8, scope: !4897)
!4926 = !DILocation(line: 2059, column: 8, scope: !4897)
!4927 = !DILocation(line: 2061, column: 8, scope: !4897)
!4928 = !DILocation(line: 2064, column: 4, scope: !4891)
!4929 = !DILocation(line: 2040, column: 62, scope: !4888)
!4930 = !DILocation(line: 2040, column: 7, scope: !4888)
!4931 = distinct !{!4931, !4883, !4932}
!4932 = !DILocation(line: 2065, column: 2, scope: !4884)
!4933 = !DILocation(line: 2067, column: 15, scope: !4804)
!4934 = !DILocation(line: 2067, column: 13, scope: !4804)
!4935 = !DILocation(line: 2068, column: 17, scope: !4804)
!4936 = !DILocation(line: 2069, column: 5, scope: !4804)
!4937 = !DILocation(line: 2070, column: 1, scope: !4797)
!4938 = distinct !DISubprogram(name: "debug_ready_list", scope: !3, file: !3, line: 2237, type: !2967, scopeLine: 2238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4939)
!4939 = !{!4940, !4941, !4942}
!4940 = !DILocalVariable(name: "ready", arg: 1, scope: !4938, file: !3, line: 2237, type: !2244)
!4941 = !DILocalVariable(name: "p", scope: !4938, file: !3, line: 2239, type: !1864)
!4942 = !DILocalVariable(name: "i", scope: !4938, file: !3, line: 2240, type: !631)
!4943 = !DILocation(line: 0, scope: !4938)
!4944 = !DILocation(line: 2242, column: 14, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 2242, column: 7)
!4946 = !DILocation(line: 2242, column: 22, scope: !4945)
!4947 = !DILocation(line: 2242, column: 7, scope: !4938)
!4948 = !DILocation(line: 2244, column: 16, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 2243, column: 5)
!4950 = !DILocation(line: 2244, column: 7, scope: !4949)
!4951 = !DILocation(line: 2245, column: 7, scope: !4949)
!4952 = !DILocation(line: 2248, column: 7, scope: !4938)
!4953 = !DILocation(line: 2249, column: 8, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 2249, column: 3)
!4955 = !DILocation(line: 0, scope: !4954)
!4956 = !DILocation(line: 2249, column: 26, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2249, column: 3)
!4958 = !DILocation(line: 2249, column: 17, scope: !4957)
!4959 = !DILocation(line: 2249, column: 3, scope: !4954)
!4960 = !DILocation(line: 2252, column: 11, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 2250, column: 5)
!4962 = !DILocation(line: 2252, column: 31, scope: !4961)
!4963 = !DILocation(line: 2252, column: 44, scope: !4961)
!4964 = !DILocation(line: 2252, column: 9, scope: !4961)
!4965 = !DILocation(line: 2253, column: 9, scope: !4961)
!4966 = !DILocation(line: 2251, column: 7, scope: !4961)
!4967 = !DILocation(line: 2254, column: 11, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 2254, column: 11)
!4969 = !DILocation(line: 2254, column: 11, scope: !4961)
!4970 = !DILocation(line: 2255, column: 11, scope: !4968)
!4971 = !DILocation(line: 2256, column: 4, scope: !4968)
!4972 = !DILocation(line: 2255, column: 2, scope: !4968)
!4973 = !DILocation(line: 2257, column: 11, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 2257, column: 11)
!4975 = !DILocation(line: 2257, column: 30, scope: !4974)
!4976 = !DILocation(line: 2257, column: 28, scope: !4974)
!4977 = !DILocation(line: 2257, column: 11, scope: !4961)
!4978 = !DILocation(line: 2258, column: 11, scope: !4974)
!4979 = !DILocation(line: 2258, column: 36, scope: !4974)
!4980 = !DILocation(line: 2258, column: 55, scope: !4974)
!4981 = !DILocation(line: 2258, column: 53, scope: !4974)
!4982 = !DILocation(line: 2258, column: 2, scope: !4974)
!4983 = !DILocation(line: 2259, column: 11, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 2259, column: 11)
!4985 = !DILocation(line: 2259, column: 11, scope: !4961)
!4986 = !DILocation(line: 2260, column: 11, scope: !4984)
!4987 = !DILocation(line: 2260, column: 2, scope: !4984)
!4988 = !DILocation(line: 2249, column: 36, scope: !4957)
!4989 = !DILocation(line: 2249, column: 3, scope: !4957)
!4990 = distinct !{!4990, !4959, !4991}
!4991 = !DILocation(line: 2261, column: 5, scope: !4954)
!4992 = !DILocation(line: 2262, column: 3, scope: !4938)
!4993 = !DILocation(line: 2263, column: 1, scope: !4938)
!4994 = distinct !DISubprogram(name: "ready_remove_first", scope: !3, file: !3, line: 1426, type: !4995, scopeLine: 1427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4997)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{!638, !2244}
!4997 = !{!4998, !4999}
!4998 = !DILocalVariable(name: "ready", arg: 1, scope: !4994, file: !3, line: 1426, type: !2244)
!4999 = !DILocalVariable(name: "t", scope: !4994, file: !3, line: 1428, type: !638)
!5000 = !DILocation(line: 0, scope: !4994)
!5001 = !DILocation(line: 1430, column: 3, scope: !4994)
!5002 = !DILocation(line: 1432, column: 17, scope: !4994)
!5003 = !DILocation(line: 1431, column: 14, scope: !4994)
!5004 = !DILocation(line: 1431, column: 30, scope: !4994)
!5005 = !DILocation(line: 1431, column: 7, scope: !4994)
!5006 = !DILocation(line: 1433, column: 7, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1433, column: 7)
!5008 = !DILocation(line: 1433, column: 7, scope: !4994)
!5009 = !DILocation(line: 1434, column: 19, scope: !5007)
!5010 = !DILocation(line: 1434, column: 5, scope: !5007)
!5011 = !DILocation(line: 1436, column: 22, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1436, column: 7)
!5013 = !DILocation(line: 1436, column: 7, scope: !4994)
!5014 = !DILocation(line: 1437, column: 27, scope: !5012)
!5015 = !DILocation(line: 1437, column: 34, scope: !5012)
!5016 = !DILocation(line: 1437, column: 18, scope: !5012)
!5017 = !DILocation(line: 1437, column: 5, scope: !5012)
!5018 = !DILocation(line: 1439, column: 3, scope: !4994)
!5019 = !DILocation(line: 1440, column: 3, scope: !4994)
!5020 = !DILocation(line: 1440, column: 19, scope: !4994)
!5021 = !DILocation(line: 1442, column: 3, scope: !4994)
!5022 = distinct !DISubprogram(name: "move_insn", scope: !3, file: !3, line: 2287, type: !5023, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5025)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{null, !638, !638, !638}
!5025 = !{!5026, !5027, !5028, !5029, !5032, !5033}
!5026 = !DILocalVariable(name: "insn", arg: 1, scope: !5022, file: !3, line: 2287, type: !638)
!5027 = !DILocalVariable(name: "last", arg: 2, scope: !5022, file: !3, line: 2287, type: !638)
!5028 = !DILocalVariable(name: "nt", arg: 3, scope: !5022, file: !3, line: 2287, type: !638)
!5029 = !DILocalVariable(name: "bb", scope: !5030, file: !3, line: 2291, type: !1172)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 2290, column: 5)
!5031 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 2289, column: 7)
!5032 = !DILocalVariable(name: "note", scope: !5030, file: !3, line: 2292, type: !638)
!5033 = !DILocalVariable(name: "jump_p", scope: !5030, file: !3, line: 2293, type: !631)
!5034 = !DILocation(line: 0, scope: !5022)
!5035 = !DILocation(line: 2289, column: 7, scope: !5031)
!5036 = !DILocation(line: 2289, column: 24, scope: !5031)
!5037 = !DILocation(line: 2289, column: 7, scope: !5022)
!5038 = !DILocation(line: 0, scope: !5030)
!5039 = !DILocation(line: 2295, column: 12, scope: !5030)
!5040 = !DILocation(line: 2298, column: 7, scope: !5030)
!5041 = !DILocation(line: 2300, column: 11, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 2300, column: 11)
!5043 = !DILocation(line: 2300, column: 23, scope: !5042)
!5044 = !DILocation(line: 2300, column: 11, scope: !5030)
!5045 = !DILocation(line: 2305, column: 13, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 2303, column: 2)
!5047 = !DILocation(line: 2307, column: 4, scope: !5046)
!5048 = !DILocation(line: 2313, column: 4, scope: !5046)
!5049 = !DILocation(line: 0, scope: !5046)
!5050 = !DILocation(line: 2315, column: 18, scope: !5046)
!5051 = !DILocation(line: 2315, column: 4, scope: !5046)
!5052 = !DILocation(line: 2315, column: 16, scope: !5046)
!5053 = !DILocation(line: 2318, column: 7, scope: !5030)
!5054 = !DILocation(line: 2316, column: 2, scope: !5046)
!5055 = !DILocation(line: 2320, column: 11, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 2320, column: 11)
!5057 = !DILocation(line: 2320, column: 11, scope: !5030)
!5058 = !DILocation(line: 2323, column: 4, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 2322, column: 2)
!5060 = !DILocation(line: 2326, column: 4, scope: !5059)
!5061 = !DILocation(line: 0, scope: !5059)
!5062 = !DILocation(line: 2326, column: 11, scope: !5059)
!5063 = !DILocation(line: 2326, column: 40, scope: !5059)
!5064 = !DILocation(line: 2326, column: 32, scope: !5059)
!5065 = distinct !{!5065, !5060, !5066}
!5066 = !DILocation(line: 2327, column: 13, scope: !5059)
!5067 = !DILocation(line: 2329, column: 13, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 2329, column: 8)
!5069 = !DILocation(line: 2330, column: 8, scope: !5068)
!5070 = !DILocation(line: 2330, column: 12, scope: !5068)
!5071 = !DILocation(line: 2331, column: 5, scope: !5068)
!5072 = !DILocation(line: 2331, column: 8, scope: !5068)
!5073 = !DILocation(line: 2329, column: 8, scope: !5059)
!5074 = !DILocation(line: 2332, column: 13, scope: !5068)
!5075 = !DILocation(line: 2332, column: 6, scope: !5068)
!5076 = !DILocation(line: 2334, column: 4, scope: !5059)
!5077 = !DILocation(line: 0, scope: !5056)
!5078 = !DILocation(line: 2339, column: 38, scope: !5030)
!5079 = !DILocation(line: 2339, column: 7, scope: !5030)
!5080 = !DILocation(line: 2339, column: 36, scope: !5030)
!5081 = !DILocation(line: 2340, column: 38, scope: !5030)
!5082 = !DILocation(line: 2340, column: 7, scope: !5030)
!5083 = !DILocation(line: 2340, column: 36, scope: !5030)
!5084 = !DILocation(line: 2342, column: 26, scope: !5030)
!5085 = !DILocation(line: 2342, column: 24, scope: !5030)
!5086 = !DILocation(line: 2343, column: 7, scope: !5030)
!5087 = !DILocation(line: 2343, column: 36, scope: !5030)
!5088 = !DILocation(line: 2345, column: 24, scope: !5030)
!5089 = !DILocation(line: 2346, column: 24, scope: !5030)
!5090 = !DILocation(line: 2348, column: 12, scope: !5030)
!5091 = !DILocation(line: 2350, column: 11, scope: !5030)
!5092 = !DILocation(line: 2352, column: 4, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 2351, column: 2)
!5094 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 2350, column: 11)
!5095 = !DILocation(line: 2354, column: 8, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 2354, column: 8)
!5097 = !DILocation(line: 2354, column: 30, scope: !5096)
!5098 = !DILocation(line: 2354, column: 8, scope: !5093)
!5099 = !DILocation(line: 2355, column: 6, scope: !5096)
!5100 = !DILocation(line: 2357, column: 4, scope: !5093)
!5101 = !DILocation(line: 2360, column: 7, scope: !5030)
!5102 = !DILocation(line: 2363, column: 11, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 2363, column: 11)
!5104 = !DILocation(line: 2363, column: 23, scope: !5103)
!5105 = !DILocation(line: 2363, column: 11, scope: !5030)
!5106 = !DILocation(line: 2364, column: 14, scope: !5103)
!5107 = !DILocation(line: 2364, column: 2, scope: !5103)
!5108 = !DILocation(line: 2367, column: 3, scope: !5022)
!5109 = !DILocation(line: 2367, column: 24, scope: !5022)
!5110 = !DILocation(line: 2368, column: 1, scope: !5022)
!5111 = distinct !DISubprogram(name: "schedule_insn", scope: !3, file: !3, line: 1662, type: !2057, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5112)
!5112 = !{!5113, !5114, !5115, !5116, !5117, !5118, !5121, !5125, !5130, !5134}
!5113 = !DILocalVariable(name: "insn", arg: 1, scope: !5111, file: !3, line: 1662, type: !638)
!5114 = !DILocalVariable(name: "sd_it", scope: !5111, file: !3, line: 1664, type: !2252)
!5115 = !DILocalVariable(name: "dep", scope: !5111, file: !3, line: 1665, type: !2846)
!5116 = !DILocalVariable(name: "i", scope: !5111, file: !3, line: 1666, type: !631)
!5117 = !DILocalVariable(name: "advance", scope: !5111, file: !3, line: 1667, type: !631)
!5118 = !DILocalVariable(name: "pressure_info", scope: !5119, file: !3, line: 1671, type: !1934)
!5119 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 1670, column: 5)
!5120 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1669, column: 7)
!5121 = !DILocalVariable(name: "buf", scope: !5119, file: !3, line: 1672, type: !5122)
!5122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 16384, elements: !5123)
!5123 = !{!5124}
!5124 = !DISubrange(count: 2048)
!5125 = !DILocalVariable(name: "dbg", scope: !5126, file: !3, line: 1706, type: !638)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 1705, column: 7)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1703, column: 5)
!5128 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 1703, column: 5)
!5129 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1702, column: 7)
!5130 = !DILocalVariable(name: "next", scope: !5131, file: !3, line: 1751, type: !638)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1750, column: 5)
!5132 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 1748, column: 3)
!5133 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1748, column: 3)
!5134 = !DILocalVariable(name: "effective_cost", scope: !5135, file: !3, line: 1766, type: !631)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1765, column: 2)
!5136 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1764, column: 11)
!5137 = !DILocation(line: 0, scope: !5111)
!5138 = !DILocation(line: 1664, column: 3, scope: !5111)
!5139 = !DILocation(line: 1665, column: 3, scope: !5111)
!5140 = !DILocation(line: 1669, column: 7, scope: !5120)
!5141 = !DILocation(line: 1669, column: 21, scope: !5120)
!5142 = !DILocation(line: 1669, column: 7, scope: !5111)
!5143 = !DILocation(line: 1672, column: 7, scope: !5119)
!5144 = !DILocation(line: 1672, column: 12, scope: !5119)
!5145 = !DILocation(line: 1674, column: 7, scope: !5119)
!5146 = !DILocation(line: 1675, column: 7, scope: !5119)
!5147 = !DILocation(line: 1675, column: 15, scope: !5119)
!5148 = !DILocation(line: 1676, column: 16, scope: !5119)
!5149 = !DILocation(line: 1676, column: 49, scope: !5119)
!5150 = !DILocation(line: 1676, column: 7, scope: !5119)
!5151 = !DILocation(line: 1678, column: 11, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 1678, column: 11)
!5153 = !DILocation(line: 1678, column: 33, scope: !5152)
!5154 = !DILocation(line: 0, scope: !5152)
!5155 = !DILocation(line: 1678, column: 11, scope: !5119)
!5156 = !DILocation(line: 1679, column: 2, scope: !5152)
!5157 = !DILocation(line: 1681, column: 2, scope: !5152)
!5158 = !DILocation(line: 1682, column: 23, scope: !5119)
!5159 = !DILocation(line: 0, scope: !5119)
!5160 = !DILocation(line: 1683, column: 25, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 1683, column: 11)
!5162 = !DILocation(line: 1683, column: 11, scope: !5119)
!5163 = !DILocation(line: 1685, column: 16, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 1684, column: 2)
!5165 = !DILocation(line: 1685, column: 4, scope: !5164)
!5166 = !DILocation(line: 1686, column: 9, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 1686, column: 4)
!5168 = !DILocation(line: 0, scope: !5167)
!5169 = !DILocation(line: 1686, column: 20, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 1686, column: 4)
!5171 = !DILocation(line: 1686, column: 18, scope: !5170)
!5172 = !DILocation(line: 1686, column: 4, scope: !5167)
!5173 = !DILocation(line: 1687, column: 15, scope: !5170)
!5174 = !DILocation(line: 1688, column: 24, scope: !5170)
!5175 = !DILocation(line: 1688, column: 8, scope: !5170)
!5176 = !DILocation(line: 1689, column: 25, scope: !5170)
!5177 = !DILocation(line: 1689, column: 56, scope: !5170)
!5178 = !DILocation(line: 1687, column: 6, scope: !5170)
!5179 = !DILocation(line: 1686, column: 47, scope: !5170)
!5180 = !DILocation(line: 1686, column: 4, scope: !5170)
!5181 = distinct !{!5181, !5172, !5182}
!5182 = !DILocation(line: 1689, column: 62, scope: !5167)
!5183 = !DILocation(line: 1691, column: 20, scope: !5119)
!5184 = !DILocation(line: 1691, column: 7, scope: !5119)
!5185 = !DILocation(line: 1692, column: 5, scope: !5120)
!5186 = !DILocation(line: 1692, column: 5, scope: !5119)
!5187 = !DILocation(line: 1694, column: 7, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1694, column: 7)
!5189 = !DILocation(line: 1694, column: 7, scope: !5111)
!5190 = !DILocation(line: 1695, column: 5, scope: !5188)
!5191 = !DILocation(line: 1699, column: 3, scope: !5111)
!5192 = !DILocation(line: 1702, column: 7, scope: !5129)
!5193 = !DILocation(line: 1702, column: 28, scope: !5129)
!5194 = !DILocation(line: 1702, column: 32, scope: !5129)
!5195 = !DILocation(line: 1702, column: 7, scope: !5111)
!5196 = !DILocation(line: 1703, column: 18, scope: !5128)
!5197 = !DILocation(line: 1703, column: 10, scope: !5128)
!5198 = !DILocation(line: 1704, column: 3, scope: !5127)
!5199 = !DILocation(line: 1703, column: 5, scope: !5128)
!5200 = !DILocation(line: 1706, column: 12, scope: !5126)
!5201 = !DILocation(line: 0, scope: !5126)
!5202 = !DILocation(line: 1708, column: 2, scope: !5126)
!5203 = !DILocation(line: 1710, column: 6, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 1710, column: 6)
!5205 = !DILocation(line: 1710, column: 20, scope: !5204)
!5206 = !DILocation(line: 1710, column: 6, scope: !5126)
!5207 = !DILocation(line: 1711, column: 13, scope: !5204)
!5208 = !DILocation(line: 1712, column: 6, scope: !5204)
!5209 = !DILocation(line: 1711, column: 4, scope: !5204)
!5210 = !DILocation(line: 1725, column: 32, scope: !5126)
!5211 = !DILocation(line: 1725, column: 2, scope: !5126)
!5212 = !DILocation(line: 1725, column: 30, scope: !5126)
!5213 = !DILocation(line: 1726, column: 2, scope: !5126)
!5214 = !DILocation(line: 1731, column: 2, scope: !5126)
!5215 = !DILocation(line: 1703, column: 5, scope: !5127)
!5216 = distinct !{!5216, !5199, !5217}
!5217 = !DILocation(line: 1732, column: 7, scope: !5128)
!5218 = !DILocation(line: 1734, column: 3, scope: !5111)
!5219 = !DILocation(line: 1735, column: 3, scope: !5111)
!5220 = !DILocation(line: 1735, column: 22, scope: !5111)
!5221 = !DILocation(line: 1737, column: 3, scope: !5111)
!5222 = !DILocation(line: 1738, column: 7, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1738, column: 7)
!5224 = !DILocation(line: 1738, column: 26, scope: !5223)
!5225 = !DILocation(line: 1738, column: 24, scope: !5223)
!5226 = !DILocation(line: 1741, column: 5, scope: !5223)
!5227 = !DILocation(line: 1738, column: 7, scope: !5111)
!5228 = !DILocation(line: 1745, column: 22, scope: !5111)
!5229 = !DILocation(line: 1745, column: 3, scope: !5111)
!5230 = !DILocation(line: 1745, column: 20, scope: !5111)
!5231 = !DILocation(line: 1748, column: 16, scope: !5133)
!5232 = !DILocation(line: 0, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1761, column: 11)
!5234 = !DILocation(line: 1748, column: 8, scope: !5133)
!5235 = !DILocation(line: 1667, column: 7, scope: !5111)
!5236 = !DILocation(line: 1749, column: 8, scope: !5132)
!5237 = !DILocation(line: 1748, column: 3, scope: !5133)
!5238 = !DILocation(line: 1751, column: 18, scope: !5131)
!5239 = !DILocation(line: 0, scope: !5131)
!5240 = !DILocation(line: 1756, column: 7, scope: !5131)
!5241 = !DILocation(line: 1761, column: 11, scope: !5233)
!5242 = !DILocation(line: 1761, column: 31, scope: !5233)
!5243 = !DILocation(line: 1761, column: 35, scope: !5233)
!5244 = !DILocation(line: 1761, column: 11, scope: !5131)
!5245 = distinct !{!5245, !5237, !5246}
!5246 = !DILocation(line: 1782, column: 5, scope: !5133)
!5247 = !DILocation(line: 1764, column: 12, scope: !5136)
!5248 = !DILocation(line: 1764, column: 11, scope: !5131)
!5249 = !DILocation(line: 1768, column: 21, scope: !5135)
!5250 = !DILocation(line: 0, scope: !5135)
!5251 = !DILocation(line: 1770, column: 23, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 1770, column: 8)
!5253 = !DILocation(line: 1771, column: 8, scope: !5252)
!5254 = !DILocation(line: 1771, column: 11, scope: !5252)
!5255 = !DILocation(line: 1772, column: 19, scope: !5252)
!5256 = !DILocation(line: 1772, column: 8, scope: !5252)
!5257 = !DILocation(line: 1779, column: 4, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1778, column: 2)
!5259 = !DILocation(line: 1780, column: 23, scope: !5258)
!5260 = !DILocation(line: 1780, column: 4, scope: !5258)
!5261 = !DILocation(line: 1801, column: 7, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 1801, column: 7)
!5263 = !DILocation(line: 1801, column: 18, scope: !5262)
!5264 = !DILocation(line: 1802, column: 7, scope: !5262)
!5265 = !DILocation(line: 1802, column: 10, scope: !5262)
!5266 = !DILocation(line: 1802, column: 36, scope: !5262)
!5267 = !DILocation(line: 1803, column: 7, scope: !5262)
!5268 = !DILocation(line: 1803, column: 36, scope: !5262)
!5269 = !DILocation(line: 1804, column: 7, scope: !5262)
!5270 = !DILocation(line: 1804, column: 11, scope: !5262)
!5271 = !DILocation(line: 1801, column: 7, scope: !5111)
!5272 = !DILocation(line: 1806, column: 11, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 1806, column: 11)
!5274 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1805, column: 5)
!5275 = !DILocation(line: 1806, column: 11, scope: !5274)
!5276 = !DILocation(line: 1807, column: 2, scope: !5273)
!5277 = !DILocation(line: 1808, column: 24, scope: !5274)
!5278 = !DILocation(line: 1808, column: 22, scope: !5274)
!5279 = !DILocation(line: 1809, column: 5, scope: !5274)
!5280 = !DILocation(line: 1812, column: 1, scope: !5111)
!5281 = !DILocation(line: 1811, column: 3, scope: !5111)
!5282 = distinct !DISubprogram(name: "print_curr_reg_pressure", scope: !3, file: !3, line: 778, type: !2107, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5283)
!5283 = !{!5284, !5285}
!5284 = !DILocalVariable(name: "i", scope: !5282, file: !3, line: 780, type: !631)
!5285 = !DILocalVariable(name: "cl", scope: !5282, file: !3, line: 781, type: !598)
!5286 = !DILocation(line: 783, column: 12, scope: !5282)
!5287 = !DILocation(line: 783, column: 3, scope: !5282)
!5288 = !DILocation(line: 0, scope: !5282)
!5289 = !DILocation(line: 784, column: 8, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 784, column: 3)
!5291 = !DILocation(line: 0, scope: !5290)
!5292 = !DILocation(line: 784, column: 19, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 784, column: 3)
!5294 = !DILocation(line: 784, column: 17, scope: !5293)
!5295 = !DILocation(line: 784, column: 3, scope: !5290)
!5296 = !DILocation(line: 786, column: 12, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 785, column: 5)
!5298 = !DILocation(line: 787, column: 7, scope: !5297)
!5299 = !DILocation(line: 789, column: 9, scope: !5297)
!5300 = !DILocation(line: 790, column: 9, scope: !5297)
!5301 = !DILocation(line: 788, column: 16, scope: !5297)
!5302 = !DILocation(line: 788, column: 43, scope: !5297)
!5303 = !DILocation(line: 790, column: 33, scope: !5297)
!5304 = !DILocation(line: 790, column: 31, scope: !5297)
!5305 = !DILocation(line: 788, column: 7, scope: !5297)
!5306 = !DILocation(line: 784, column: 46, scope: !5293)
!5307 = !DILocation(line: 784, column: 3, scope: !5293)
!5308 = distinct !{!5308, !5295, !5309}
!5309 = !DILocation(line: 791, column: 5, scope: !5290)
!5310 = !DILocation(line: 792, column: 12, scope: !5282)
!5311 = !DILocation(line: 792, column: 3, scope: !5282)
!5312 = !DILocation(line: 793, column: 1, scope: !5282)
!5313 = distinct !DISubprogram(name: "early_queue_to_ready", scope: !3, file: !3, line: 2137, type: !5314, scopeLine: 2138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5316)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!631, !1875, !2244}
!5316 = !{!5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327}
!5317 = !DILocalVariable(name: "state", arg: 1, scope: !5313, file: !3, line: 2137, type: !1875)
!5318 = !DILocalVariable(name: "ready", arg: 2, scope: !5313, file: !3, line: 2137, type: !2244)
!5319 = !DILocalVariable(name: "insn", scope: !5313, file: !3, line: 2139, type: !638)
!5320 = !DILocalVariable(name: "link", scope: !5313, file: !3, line: 2140, type: !638)
!5321 = !DILocalVariable(name: "next_link", scope: !5313, file: !3, line: 2141, type: !638)
!5322 = !DILocalVariable(name: "prev_link", scope: !5313, file: !3, line: 2142, type: !638)
!5323 = !DILocalVariable(name: "move_to_ready", scope: !5313, file: !3, line: 2143, type: !630)
!5324 = !DILocalVariable(name: "cost", scope: !5313, file: !3, line: 2144, type: !631)
!5325 = !DILocalVariable(name: "temp_state", scope: !5313, file: !3, line: 2145, type: !1875)
!5326 = !DILocalVariable(name: "stalls", scope: !5313, file: !3, line: 2146, type: !631)
!5327 = !DILocalVariable(name: "insns_removed", scope: !5313, file: !3, line: 2147, type: !631)
!5328 = !DILocation(line: 0, scope: !5313)
!5329 = !DILocation(line: 2145, column: 24, scope: !5313)
!5330 = !DILocation(line: 2163, column: 9, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2163, column: 7)
!5332 = !DILocation(line: 2163, column: 7, scope: !5313)
!5333 = !DILocation(line: 0, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 2166, column: 3)
!5335 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2166, column: 3)
!5336 = !DILocation(line: 2166, column: 3, scope: !5335)
!5337 = !DILocation(line: 0, scope: !5335)
!5338 = !DILocation(line: 2147, column: 7, scope: !5313)
!5339 = !DILocation(line: 2166, column: 27, scope: !5334)
!5340 = !DILocation(line: 2168, column: 19, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 2168, column: 11)
!5342 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 2167, column: 5)
!5343 = !DILocation(line: 2168, column: 30, scope: !5341)
!5344 = !DILocation(line: 2168, column: 17, scope: !5341)
!5345 = !DILocation(line: 2168, column: 11, scope: !5342)
!5346 = !DILocation(line: 2170, column: 8, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 2170, column: 8)
!5348 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 2169, column: 2)
!5349 = !DILocation(line: 2170, column: 22, scope: !5347)
!5350 = !DILocation(line: 2170, column: 8, scope: !5348)
!5351 = !DILocation(line: 2171, column: 15, scope: !5347)
!5352 = !DILocation(line: 2171, column: 6, scope: !5347)
!5353 = !DILocation(line: 2174, column: 4, scope: !5348)
!5354 = !DILocation(line: 0, scope: !5348)
!5355 = !DILocation(line: 0, scope: !5341)
!5356 = !DILocation(line: 2176, column: 20, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 2175, column: 6)
!5358 = !DILocation(line: 2177, column: 15, scope: !5357)
!5359 = !DILocation(line: 2178, column: 12, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2178, column: 12)
!5361 = !DILocation(line: 2178, column: 20, scope: !5360)
!5362 = !DILocation(line: 2178, column: 34, scope: !5360)
!5363 = !DILocation(line: 2178, column: 17, scope: !5360)
!5364 = !DILocation(line: 2179, column: 21, scope: !5360)
!5365 = !DILocation(line: 2179, column: 3, scope: !5360)
!5366 = !DILocation(line: 2181, column: 35, scope: !5357)
!5367 = !DILocation(line: 2181, column: 8, scope: !5357)
!5368 = !DILocation(line: 2182, column: 12, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2182, column: 12)
!5370 = !DILocation(line: 2182, column: 34, scope: !5369)
!5371 = !DILocation(line: 2182, column: 12, scope: !5357)
!5372 = !DILocation(line: 2187, column: 10, scope: !5369)
!5373 = !DILocation(line: 0, scope: !5369)
!5374 = !DILocation(line: 2189, column: 12, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2189, column: 12)
!5376 = !DILocation(line: 2189, column: 26, scope: !5375)
!5377 = !DILocation(line: 2189, column: 12, scope: !5357)
!5378 = !DILocation(line: 2190, column: 12, scope: !5375)
!5379 = !DILocation(line: 2190, column: 3, scope: !5375)
!5380 = !DILocation(line: 2193, column: 17, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2193, column: 12)
!5382 = !DILocation(line: 2193, column: 12, scope: !5357)
!5383 = !DILocation(line: 2195, column: 21, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 2194, column: 3)
!5385 = !DILocation(line: 2196, column: 23, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 2196, column: 9)
!5387 = !DILocation(line: 2196, column: 9, scope: !5384)
!5388 = !DILocation(line: 2199, column: 16, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 2197, column: 7)
!5390 = !DILocation(line: 2200, column: 9, scope: !5389)
!5391 = !DILocation(line: 2202, column: 13, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 2202, column: 13)
!5393 = !DILocation(line: 2202, column: 13, scope: !5389)
!5394 = !DILocation(line: 2203, column: 4, scope: !5392)
!5395 = !DILocation(line: 2203, column: 24, scope: !5392)
!5396 = !DILocation(line: 2205, column: 4, scope: !5392)
!5397 = !DILocation(line: 2205, column: 15, scope: !5392)
!5398 = !DILocation(line: 2205, column: 45, scope: !5392)
!5399 = !DILocation(line: 2207, column: 9, scope: !5389)
!5400 = !DILocation(line: 2209, column: 13, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 2209, column: 13)
!5402 = !DILocation(line: 2209, column: 27, scope: !5401)
!5403 = !DILocation(line: 2209, column: 13, scope: !5389)
!5404 = !DILocation(line: 2210, column: 13, scope: !5401)
!5405 = !DILocation(line: 2211, column: 8, scope: !5401)
!5406 = !DILocation(line: 2211, column: 28, scope: !5401)
!5407 = !DILocation(line: 2211, column: 6, scope: !5401)
!5408 = !DILocation(line: 2210, column: 4, scope: !5401)
!5409 = !DILocation(line: 2213, column: 22, scope: !5389)
!5410 = !DILocation(line: 2214, column: 30, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 2214, column: 13)
!5412 = !DILocation(line: 2214, column: 27, scope: !5411)
!5413 = !DILocation(line: 2214, column: 13, scope: !5389)
!5414 = !DILocation(line: 0, scope: !5357)
!5415 = !DILocation(line: 2221, column: 26, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2221, column: 12)
!5417 = !DILocation(line: 2221, column: 12, scope: !5357)
!5418 = distinct !{!5418, !5353, !5419}
!5419 = !DILocation(line: 2225, column: 6, scope: !5348)
!5420 = !DILocation(line: 2166, column: 58, scope: !5334)
!5421 = !DILocation(line: 2166, column: 3, scope: !5334)
!5422 = distinct !{!5422, !5336, !5423}
!5423 = !DILocation(line: 2228, column: 5, scope: !5335)
!5424 = !DILocation(line: 2231, column: 1, scope: !5313)
!5425 = distinct !DISubprogram(name: "choose_ready", scope: !3, file: !3, line: 2607, type: !5426, scopeLine: 2608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5428)
!5426 = !DISubroutineType(types: !5427)
!5427 = !{!631, !2244, !1864}
!5428 = !{!5429, !5430, !5431, !5432, !5435, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5450}
!5429 = !DILocalVariable(name: "ready", arg: 1, scope: !5425, file: !3, line: 2607, type: !2244)
!5430 = !DILocalVariable(name: "insn_ptr", arg: 2, scope: !5425, file: !3, line: 2607, type: !1864)
!5431 = !DILocalVariable(name: "lookahead", scope: !5425, file: !3, line: 2609, type: !631)
!5432 = !DILocalVariable(name: "insn", scope: !5433, file: !3, line: 2613, type: !638)
!5433 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 2612, column: 5)
!5434 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 2611, column: 7)
!5435 = !DILocalVariable(name: "index", scope: !5436, file: !3, line: 2642, type: !631)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 2640, column: 5)
!5437 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 2633, column: 7)
!5438 = !DILocalVariable(name: "i", scope: !5436, file: !3, line: 2642, type: !631)
!5439 = !DILocalVariable(name: "n", scope: !5436, file: !3, line: 2642, type: !631)
!5440 = !DILocalVariable(name: "insn", scope: !5436, file: !3, line: 2643, type: !638)
!5441 = !DILocalVariable(name: "try_data", scope: !5436, file: !3, line: 2644, type: !631)
!5442 = !DILocalVariable(name: "try_control", scope: !5436, file: !3, line: 2644, type: !631)
!5443 = !DILocalVariable(name: "ts", scope: !5436, file: !3, line: 2645, type: !1865)
!5444 = !DILocalVariable(name: "x", scope: !5445, file: !3, line: 2660, type: !638)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 2659, column: 6)
!5446 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2658, column: 4)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 2658, column: 4)
!5448 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 2657, column: 2)
!5449 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2654, column: 11)
!5450 = !DILocalVariable(name: "s", scope: !5445, file: !3, line: 2661, type: !1865)
!5451 = !DILocation(line: 0, scope: !5425)
!5452 = !DILocation(line: 2611, column: 7, scope: !5434)
!5453 = !DILocation(line: 2611, column: 28, scope: !5434)
!5454 = !DILocation(line: 2611, column: 7, scope: !5425)
!5455 = !DILocation(line: 2615, column: 33, scope: !5433)
!5456 = !DILocation(line: 2615, column: 14, scope: !5433)
!5457 = !DILocation(line: 0, scope: !5433)
!5458 = !DILocation(line: 2617, column: 11, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 2617, column: 11)
!5460 = !DILocation(line: 2617, column: 30, scope: !5459)
!5461 = !DILocation(line: 2617, column: 11, scope: !5433)
!5462 = !DILocation(line: 2620, column: 4, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 2619, column: 2)
!5464 = !DILocation(line: 2621, column: 14, scope: !5463)
!5465 = !DILocation(line: 2622, column: 4, scope: !5463)
!5466 = !DILocation(line: 2631, column: 21, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 2631, column: 7)
!5468 = !DILocation(line: 2631, column: 7, scope: !5467)
!5469 = !DILocation(line: 2631, column: 7, scope: !5425)
!5470 = !DILocation(line: 2632, column: 17, scope: !5467)
!5471 = !DILocation(line: 2632, column: 5, scope: !5467)
!5472 = !DILocation(line: 2633, column: 22, scope: !5437)
!5473 = !DILocation(line: 2633, column: 25, scope: !5437)
!5474 = !DILocation(line: 2634, column: 7, scope: !5437)
!5475 = !DILocation(line: 2634, column: 10, scope: !5437)
!5476 = !DILocation(line: 2633, column: 7, scope: !5425)
!5477 = !DILocation(line: 2636, column: 19, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 2635, column: 5)
!5479 = !DILocation(line: 2636, column: 17, scope: !5478)
!5480 = !DILocation(line: 2637, column: 7, scope: !5478)
!5481 = !DILocation(line: 2642, column: 7, scope: !5436)
!5482 = !DILocation(line: 0, scope: !5436)
!5483 = !DILocation(line: 2642, column: 11, scope: !5436)
!5484 = !DILocation(line: 2647, column: 14, scope: !5436)
!5485 = !DILocation(line: 2648, column: 11, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2648, column: 11)
!5487 = !DILocation(line: 2648, column: 28, scope: !5486)
!5488 = !DILocation(line: 2648, column: 11, scope: !5436)
!5489 = !DILocation(line: 2650, column: 16, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 2649, column: 2)
!5491 = !DILocation(line: 2650, column: 14, scope: !5490)
!5492 = !DILocation(line: 2651, column: 4, scope: !5490)
!5493 = !DILocation(line: 2654, column: 11, scope: !5449)
!5494 = !DILocation(line: 2655, column: 4, scope: !5449)
!5495 = !DILocation(line: 2655, column: 18, scope: !5449)
!5496 = !DILocation(line: 2655, column: 24, scope: !5449)
!5497 = !DILocation(line: 2654, column: 11, scope: !5436)
!5498 = !DILocation(line: 2658, column: 27, scope: !5447)
!5499 = !DILocation(line: 2658, column: 9, scope: !5447)
!5500 = !DILocation(line: 0, scope: !5447)
!5501 = !DILocation(line: 2644, column: 11, scope: !5436)
!5502 = !DILocation(line: 2644, column: 25, scope: !5436)
!5503 = !DILocation(line: 2658, column: 38, scope: !5446)
!5504 = !DILocation(line: 2658, column: 4, scope: !5447)
!5505 = !DILocation(line: 2663, column: 12, scope: !5445)
!5506 = !DILocation(line: 0, scope: !5445)
!5507 = !DILocation(line: 2664, column: 12, scope: !5445)
!5508 = !DILocation(line: 2666, column: 12, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 2666, column: 12)
!5510 = !DILocation(line: 2666, column: 23, scope: !5509)
!5511 = !DILocation(line: 2666, column: 29, scope: !5509)
!5512 = !DILocation(line: 2667, column: 12, scope: !5509)
!5513 = !DILocation(line: 2667, column: 5, scope: !5509)
!5514 = !DILocation(line: 2675, column: 29, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 2675, column: 12)
!5516 = !DILocation(line: 2670, column: 28, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 2670, column: 9)
!5518 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 2668, column: 3)
!5519 = !DILocation(line: 2671, column: 13, scope: !5517)
!5520 = !DILocation(line: 2671, column: 9, scope: !5517)
!5521 = !DILocation(line: 2676, column: 12, scope: !5515)
!5522 = !DILocation(line: 2676, column: 5, scope: !5515)
!5523 = !DILocation(line: 2679, column: 28, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 2679, column: 9)
!5525 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 2677, column: 3)
!5526 = !DILocation(line: 2679, column: 56, scope: !5524)
!5527 = !DILocation(line: 2679, column: 52, scope: !5524)
!5528 = !DILocation(line: 2682, column: 6, scope: !5446)
!5529 = !DILocation(line: 2658, column: 44, scope: !5446)
!5530 = !DILocation(line: 2658, column: 4, scope: !5446)
!5531 = distinct !{!5531, !5504, !5532}
!5532 = !DILocation(line: 2682, column: 6, scope: !5447)
!5533 = !DILocation(line: 2685, column: 12, scope: !5436)
!5534 = !DILocation(line: 2686, column: 15, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2686, column: 11)
!5536 = !DILocation(line: 2687, column: 4, scope: !5535)
!5537 = !DILocation(line: 2687, column: 11, scope: !5535)
!5538 = !DILocation(line: 2687, column: 27, scope: !5535)
!5539 = !DILocation(line: 2687, column: 20, scope: !5535)
!5540 = !DILocation(line: 2688, column: 14, scope: !5535)
!5541 = !DILocation(line: 2688, column: 33, scope: !5535)
!5542 = !DILocation(line: 2688, column: 26, scope: !5535)
!5543 = !DILocation(line: 2689, column: 26, scope: !5535)
!5544 = !DILocation(line: 2689, column: 12, scope: !5535)
!5545 = !DILocation(line: 2690, column: 5, scope: !5535)
!5546 = !DILocation(line: 2690, column: 9, scope: !5535)
!5547 = !DILocation(line: 2686, column: 11, scope: !5436)
!5548 = !DILocation(line: 2695, column: 4, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 2694, column: 2)
!5550 = !DILocation(line: 2696, column: 4, scope: !5549)
!5551 = !DILocation(line: 2699, column: 7, scope: !5436)
!5552 = !DILocation(line: 2699, column: 20, scope: !5436)
!5553 = !DILocation(line: 0, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 2702, column: 2)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 2701, column: 7)
!5556 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2701, column: 7)
!5557 = !DILocation(line: 2701, column: 12, scope: !5556)
!5558 = !DILocation(line: 0, scope: !5556)
!5559 = !DILocation(line: 2701, column: 30, scope: !5555)
!5560 = !DILocation(line: 2701, column: 21, scope: !5555)
!5561 = !DILocation(line: 2701, column: 7, scope: !5556)
!5562 = !DILocation(line: 2703, column: 11, scope: !5554)
!5563 = !DILocation(line: 2706, column: 24, scope: !5554)
!5564 = !DILocation(line: 2706, column: 41, scope: !5554)
!5565 = !DILocation(line: 2707, column: 16, scope: !5554)
!5566 = !DILocation(line: 2707, column: 33, scope: !5554)
!5567 = !DILocation(line: 2707, column: 37, scope: !5554)
!5568 = !DILocation(line: 2707, column: 54, scope: !5554)
!5569 = !DILocation(line: 2706, column: 8, scope: !5554)
!5570 = !DILocation(line: 2705, column: 4, scope: !5554)
!5571 = !DILocation(line: 2706, column: 6, scope: !5554)
!5572 = !DILocation(line: 2701, column: 40, scope: !5555)
!5573 = !DILocation(line: 2701, column: 7, scope: !5555)
!5574 = distinct !{!5574, !5561, !5575}
!5575 = !DILocation(line: 2708, column: 2, scope: !5556)
!5576 = !DILocation(line: 0, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 2711, column: 7)
!5578 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2711, column: 7)
!5579 = !DILocation(line: 2711, column: 7, scope: !5578)
!5580 = !DILocation(line: 2711, column: 30, scope: !5577)
!5581 = !DILocation(line: 2711, column: 21, scope: !5577)
!5582 = !DILocation(line: 2712, column: 7, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2712, column: 6)
!5584 = !DILocation(line: 2712, column: 6, scope: !5577)
!5585 = !DILocation(line: 2714, column: 13, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 2713, column: 4)
!5587 = !DILocation(line: 2728, column: 4, scope: !5586)
!5588 = !DILocation(line: 2728, column: 21, scope: !5586)
!5589 = !DILocation(line: 2729, column: 4, scope: !5586)
!5590 = !DILocation(line: 2729, column: 22, scope: !5586)
!5591 = !DILocation(line: 2729, column: 8, scope: !5586)
!5592 = !DILocation(line: 2730, column: 8, scope: !5586)
!5593 = !DILocation(line: 2730, column: 12, scope: !5586)
!5594 = !DILocation(line: 2730, column: 11, scope: !5586)
!5595 = !DILocation(line: 2726, column: 10, scope: !5586)
!5596 = !DILocation(line: 2725, column: 6, scope: !5586)
!5597 = !DILocation(line: 2726, column: 8, scope: !5586)
!5598 = !DILocation(line: 2732, column: 4, scope: !5586)
!5599 = !DILocation(line: 2711, column: 40, scope: !5577)
!5600 = !DILocation(line: 2711, column: 7, scope: !5577)
!5601 = distinct !{!5601, !5579, !5602}
!5602 = !DILocation(line: 2732, column: 4, scope: !5578)
!5603 = !DILocation(line: 2734, column: 32, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2734, column: 11)
!5605 = !DILocation(line: 2734, column: 11, scope: !5604)
!5606 = !DILocation(line: 2734, column: 52, scope: !5604)
!5607 = !DILocation(line: 2734, column: 11, scope: !5436)
!5608 = !DILocation(line: 2736, column: 16, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 2735, column: 2)
!5610 = !DILocation(line: 2736, column: 14, scope: !5609)
!5611 = !DILocation(line: 2737, column: 8, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 2737, column: 8)
!5613 = !DILocation(line: 2737, column: 22, scope: !5612)
!5614 = !DILocation(line: 2737, column: 8, scope: !5609)
!5615 = !DILocation(line: 2738, column: 15, scope: !5612)
!5616 = !DILocation(line: 2739, column: 24, scope: !5612)
!5617 = !DILocation(line: 2739, column: 44, scope: !5612)
!5618 = !DILocation(line: 2739, column: 22, scope: !5612)
!5619 = !DILocation(line: 2738, column: 6, scope: !5612)
!5620 = !DILocation(line: 2744, column: 8, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 2744, column: 8)
!5622 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 2743, column: 2)
!5623 = !DILocation(line: 2744, column: 22, scope: !5621)
!5624 = !DILocation(line: 2744, column: 8, scope: !5622)
!5625 = !DILocation(line: 2745, column: 15, scope: !5621)
!5626 = !DILocation(line: 2746, column: 10, scope: !5621)
!5627 = !DILocation(line: 2746, column: 30, scope: !5621)
!5628 = !DILocation(line: 2747, column: 31, scope: !5621)
!5629 = !DILocation(line: 2747, column: 9, scope: !5621)
!5630 = !DILocation(line: 2746, column: 8, scope: !5621)
!5631 = !DILocation(line: 2745, column: 6, scope: !5621)
!5632 = !DILocation(line: 2749, column: 37, scope: !5622)
!5633 = !DILocation(line: 2749, column: 16, scope: !5622)
!5634 = !DILocation(line: 2749, column: 14, scope: !5622)
!5635 = !DILocation(line: 2750, column: 4, scope: !5622)
!5636 = !DILocation(line: 2752, column: 5, scope: !5437)
!5637 = !DILocation(line: 2753, column: 1, scope: !5425)
!5638 = distinct !DISubprogram(name: "ready_add", scope: !3, file: !3, line: 1387, type: !5639, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5641)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{null, !2244, !638, !630}
!5641 = !{!5642, !5643, !5644}
!5642 = !DILocalVariable(name: "ready", arg: 1, scope: !5638, file: !3, line: 1387, type: !2244)
!5643 = !DILocalVariable(name: "insn", arg: 2, scope: !5638, file: !3, line: 1387, type: !638)
!5644 = !DILocalVariable(name: "first_p", arg: 3, scope: !5638, file: !3, line: 1387, type: !630)
!5645 = !DILocation(line: 0, scope: !5638)
!5646 = !DILocation(line: 1389, column: 8, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1389, column: 7)
!5648 = !DILocation(line: 0, scope: !5647)
!5649 = !DILocation(line: 1389, column: 7, scope: !5638)
!5650 = !DILocation(line: 1391, column: 34, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1391, column: 11)
!5652 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1390, column: 5)
!5653 = !DILocation(line: 1391, column: 24, scope: !5651)
!5654 = !DILocation(line: 1391, column: 11, scope: !5652)
!5655 = !DILocation(line: 1393, column: 20, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1392, column: 2)
!5657 = !DILocation(line: 1393, column: 33, scope: !5656)
!5658 = !DILocation(line: 1393, column: 24, scope: !5656)
!5659 = !DILocation(line: 1393, column: 40, scope: !5656)
!5660 = !DILocation(line: 1393, column: 13, scope: !5656)
!5661 = !DILocation(line: 1394, column: 6, scope: !5656)
!5662 = !DILocation(line: 1395, column: 13, scope: !5656)
!5663 = !DILocation(line: 1395, column: 6, scope: !5656)
!5664 = !DILocation(line: 1395, column: 21, scope: !5656)
!5665 = !DILocation(line: 1393, column: 4, scope: !5656)
!5666 = !DILocation(line: 1396, column: 26, scope: !5656)
!5667 = !DILocation(line: 1396, column: 33, scope: !5656)
!5668 = !DILocation(line: 1396, column: 17, scope: !5656)
!5669 = !DILocation(line: 1398, column: 40, scope: !5652)
!5670 = !DILocation(line: 1397, column: 2, scope: !5656)
!5671 = !DILocation(line: 1398, column: 25, scope: !5652)
!5672 = !DILocation(line: 1398, column: 14, scope: !5652)
!5673 = !DILocation(line: 1398, column: 31, scope: !5652)
!5674 = !DILocation(line: 1398, column: 7, scope: !5652)
!5675 = !DILocation(line: 1398, column: 49, scope: !5652)
!5676 = !DILocation(line: 1399, column: 5, scope: !5652)
!5677 = !DILocation(line: 1402, column: 34, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1402, column: 11)
!5679 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1401, column: 5)
!5680 = !DILocation(line: 1402, column: 41, scope: !5678)
!5681 = !DILocation(line: 1402, column: 24, scope: !5678)
!5682 = !DILocation(line: 1402, column: 11, scope: !5679)
!5683 = !DILocation(line: 1404, column: 15, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1404, column: 8)
!5685 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 1403, column: 2)
!5686 = !DILocation(line: 1404, column: 8, scope: !5684)
!5687 = !DILocation(line: 1404, column: 8, scope: !5685)
!5688 = !DILocation(line: 1406, column: 22, scope: !5684)
!5689 = !DILocation(line: 1406, column: 26, scope: !5684)
!5690 = !DILocation(line: 1406, column: 42, scope: !5684)
!5691 = !DILocation(line: 1406, column: 59, scope: !5684)
!5692 = !DILocation(line: 1406, column: 15, scope: !5684)
!5693 = !DILocation(line: 1407, column: 8, scope: !5684)
!5694 = !DILocation(line: 1408, column: 15, scope: !5684)
!5695 = !DILocation(line: 1408, column: 8, scope: !5684)
!5696 = !DILocation(line: 1408, column: 23, scope: !5684)
!5697 = !DILocation(line: 1406, column: 6, scope: !5684)
!5698 = !DILocation(line: 1409, column: 26, scope: !5685)
!5699 = !DILocation(line: 1409, column: 33, scope: !5685)
!5700 = !DILocation(line: 1409, column: 17, scope: !5685)
!5701 = !DILocation(line: 1410, column: 2, scope: !5685)
!5702 = !DILocation(line: 1411, column: 18, scope: !5679)
!5703 = !DILocation(line: 1411, column: 14, scope: !5679)
!5704 = !DILocation(line: 1411, column: 7, scope: !5679)
!5705 = !DILocation(line: 1411, column: 36, scope: !5679)
!5706 = !DILocation(line: 1414, column: 17, scope: !5638)
!5707 = !DILocation(line: 1415, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1415, column: 7)
!5709 = !DILocation(line: 1415, column: 7, scope: !5638)
!5710 = !DILocation(line: 1416, column: 19, scope: !5708)
!5711 = !DILocation(line: 1416, column: 5, scope: !5708)
!5712 = !DILocation(line: 1418, column: 3, scope: !5638)
!5713 = !DILocation(line: 1419, column: 3, scope: !5638)
!5714 = !DILocation(line: 1419, column: 22, scope: !5638)
!5715 = !DILocation(line: 1420, column: 1, scope: !5638)
!5716 = distinct !DISubprogram(name: "generate_recovery_code", scope: !3, file: !3, line: 3991, type: !2116, scopeLine: 3992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5717)
!5717 = !{!5718}
!5718 = !DILocalVariable(name: "insn", arg: 1, scope: !5716, file: !3, line: 3991, type: !638)
!5719 = !DILocation(line: 0, scope: !5716)
!5720 = !DILocation(line: 3993, column: 7, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 3993, column: 7)
!5722 = !DILocation(line: 3993, column: 24, scope: !5721)
!5723 = !DILocation(line: 3993, column: 7, scope: !5716)
!5724 = !DILocation(line: 3994, column: 5, scope: !5721)
!5725 = !DILocation(line: 3999, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 3999, column: 7)
!5727 = !DILocation(line: 3999, column: 24, scope: !5726)
!5728 = !DILocation(line: 3999, column: 7, scope: !5716)
!5729 = !DILocation(line: 4000, column: 5, scope: !5726)
!5730 = !DILocation(line: 4001, column: 1, scope: !5716)
!5731 = distinct !DISubprogram(name: "fix_inter_tick", scope: !3, file: !3, line: 3581, type: !2173, scopeLine: 3582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5732)
!5732 = !{!5733, !5734, !5735, !5737, !5738, !5744, !5745, !5746}
!5733 = !DILocalVariable(name: "head", arg: 1, scope: !5731, file: !3, line: 3581, type: !638)
!5734 = !DILocalVariable(name: "tail", arg: 2, scope: !5731, file: !3, line: 3581, type: !638)
!5735 = !DILocalVariable(name: "processed", scope: !5731, file: !3, line: 3584, type: !5736)
!5736 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !694, line: 84, baseType: !693)
!5737 = !DILocalVariable(name: "next_clock", scope: !5731, file: !3, line: 3589, type: !631)
!5738 = !DILocalVariable(name: "tick", scope: !5739, file: !3, line: 3600, type: !631)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 3599, column: 2)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 3598, column: 11)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 3597, column: 5)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 3596, column: 3)
!5743 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 3596, column: 3)
!5744 = !DILocalVariable(name: "sd_it", scope: !5739, file: !3, line: 3601, type: !2252)
!5745 = !DILocalVariable(name: "dep", scope: !5739, file: !3, line: 3602, type: !2846)
!5746 = !DILocalVariable(name: "next", scope: !5747, file: !3, line: 3621, type: !638)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 3620, column: 6)
!5748 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 3619, column: 4)
!5749 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 3619, column: 4)
!5750 = !DILocation(line: 0, scope: !5731)
!5751 = !DILocation(line: 3584, column: 3, scope: !5731)
!5752 = !DILocation(line: 3589, column: 20, scope: !5731)
!5753 = !DILocation(line: 3589, column: 30, scope: !5731)
!5754 = !DILocation(line: 3591, column: 3, scope: !5731)
!5755 = !DILocation(line: 3596, column: 15, scope: !5743)
!5756 = !DILocation(line: 0, scope: !5739)
!5757 = !DILocation(line: 0, scope: !5749)
!5758 = !DILocation(line: 0, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 3626, column: 12)
!5760 = !DILocation(line: 3596, column: 8, scope: !5743)
!5761 = !DILocation(line: 3596, column: 38, scope: !5742)
!5762 = !DILocation(line: 3596, column: 3, scope: !5743)
!5763 = !DILocation(line: 3598, column: 11, scope: !5740)
!5764 = !DILocation(line: 3598, column: 11, scope: !5741)
!5765 = !DILocation(line: 3601, column: 4, scope: !5739)
!5766 = !DILocation(line: 3602, column: 4, scope: !5739)
!5767 = !DILocation(line: 3604, column: 11, scope: !5739)
!5768 = !DILocation(line: 3605, column: 4, scope: !5739)
!5769 = !DILocation(line: 3608, column: 35, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 3608, column: 8)
!5771 = !DILocation(line: 3608, column: 9, scope: !5770)
!5772 = !DILocation(line: 3608, column: 8, scope: !5739)
!5773 = !DILocation(line: 3610, column: 36, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 3609, column: 6)
!5775 = !DILocation(line: 3610, column: 8, scope: !5774)
!5776 = !DILocation(line: 3611, column: 13, scope: !5774)
!5777 = !DILocation(line: 3613, column: 17, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 3613, column: 12)
!5779 = !DILocation(line: 3613, column: 12, scope: !5774)
!5780 = !DILocation(line: 3616, column: 8, scope: !5774)
!5781 = !DILocation(line: 3616, column: 25, scope: !5774)
!5782 = !DILocation(line: 3617, column: 6, scope: !5774)
!5783 = !DILocation(line: 3619, column: 4, scope: !5749)
!5784 = !DILocation(line: 3619, column: 4, scope: !5748)
!5785 = !DILocation(line: 3623, column: 15, scope: !5747)
!5786 = !DILocation(line: 0, scope: !5747)
!5787 = !DILocation(line: 3624, column: 15, scope: !5747)
!5788 = !DILocation(line: 3626, column: 17, scope: !5759)
!5789 = !DILocation(line: 3630, column: 5, scope: !5759)
!5790 = !DILocation(line: 3630, column: 35, scope: !5759)
!5791 = !DILocation(line: 3630, column: 9, scope: !5759)
!5792 = !DILocation(line: 3626, column: 12, scope: !5747)
!5793 = !DILocation(line: 3632, column: 33, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3631, column: 3)
!5795 = !DILocation(line: 3632, column: 5, scope: !5794)
!5796 = !DILocation(line: 3633, column: 10, scope: !5794)
!5797 = !DILocation(line: 3635, column: 14, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 3635, column: 9)
!5799 = !DILocation(line: 3635, column: 9, scope: !5794)
!5800 = !DILocation(line: 3638, column: 16, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 3638, column: 9)
!5802 = !DILocation(line: 3638, column: 14, scope: !5801)
!5803 = !DILocation(line: 0, scope: !5801)
!5804 = !DILocation(line: 3638, column: 9, scope: !5794)
!5805 = !DILocation(line: 3639, column: 25, scope: !5801)
!5806 = !DILocation(line: 3639, column: 7, scope: !5801)
!5807 = !DILocation(line: 3641, column: 14, scope: !5801)
!5808 = !DILocation(line: 0, scope: !5794)
!5809 = !DILocation(line: 3643, column: 5, scope: !5794)
!5810 = !DILocation(line: 3643, column: 22, scope: !5794)
!5811 = !DILocation(line: 3644, column: 3, scope: !5794)
!5812 = distinct !{!5812, !5783, !5813}
!5813 = !DILocation(line: 3645, column: 6, scope: !5749)
!5814 = !DILocation(line: 3646, column: 2, scope: !5740)
!5815 = !DILocation(line: 3646, column: 2, scope: !5739)
!5816 = !DILocation(line: 3596, column: 54, scope: !5742)
!5817 = !DILocation(line: 3596, column: 3, scope: !5742)
!5818 = distinct !{!5818, !5762, !5819}
!5819 = !DILocation(line: 3647, column: 5, scope: !5743)
!5820 = !DILocation(line: 3648, column: 3, scope: !5731)
!5821 = !DILocation(line: 3649, column: 1, scope: !5731)
!5822 = distinct !DISubprogram(name: "sched_init_luids", scope: !3, file: !3, line: 5388, type: !5823, scopeLine: 5389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5827)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{null, !5825, !1172, !5826, !638}
!5825 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_vec_t", file: !398, line: 40, baseType: !1881)
!5826 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_vec_t", file: !398, line: 41, baseType: !1886)
!5827 = !{!5828, !5829, !5830, !5831, !5832}
!5828 = !DILocalVariable(name: "bbs", arg: 1, scope: !5822, file: !3, line: 5388, type: !5825)
!5829 = !DILocalVariable(name: "bb", arg: 2, scope: !5822, file: !3, line: 5388, type: !1172)
!5830 = !DILocalVariable(name: "insns", arg: 3, scope: !5822, file: !3, line: 5388, type: !5826)
!5831 = !DILocalVariable(name: "insn", arg: 4, scope: !5822, file: !3, line: 5388, type: !638)
!5832 = !DILocalVariable(name: "ssi", scope: !5822, file: !3, line: 5390, type: !2102)
!5833 = !DILocation(line: 0, scope: !5822)
!5834 = !DILocation(line: 5390, column: 3, scope: !5822)
!5835 = !DILocation(line: 5390, column: 36, scope: !5822)
!5836 = !DILocation(line: 5398, column: 3, scope: !5822)
!5837 = !DILocation(line: 5399, column: 1, scope: !5822)
!5838 = distinct !DISubprogram(name: "set_priorities", scope: !3, file: !3, line: 3300, type: !2147, scopeLine: 3301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5839)
!5839 = !{!5840, !5841, !5842, !5843, !5844, !5845}
!5840 = !DILocalVariable(name: "head", arg: 1, scope: !5838, file: !3, line: 3300, type: !638)
!5841 = !DILocalVariable(name: "tail", arg: 2, scope: !5838, file: !3, line: 3300, type: !638)
!5842 = !DILocalVariable(name: "insn", scope: !5838, file: !3, line: 3302, type: !638)
!5843 = !DILocalVariable(name: "n_insn", scope: !5838, file: !3, line: 3303, type: !631)
!5844 = !DILocalVariable(name: "sched_max_insns_priority", scope: !5838, file: !3, line: 3304, type: !631)
!5845 = !DILocalVariable(name: "prev_head", scope: !5838, file: !3, line: 3306, type: !638)
!5846 = !DILocation(line: 0, scope: !5838)
!5847 = !DILocation(line: 3305, column: 2, scope: !5838)
!5848 = !DILocation(line: 3305, column: 22, scope: !5838)
!5849 = !DILocation(line: 3308, column: 12, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 3308, column: 7)
!5851 = !DILocation(line: 3308, column: 20, scope: !5850)
!5852 = !DILocation(line: 3308, column: 26, scope: !5850)
!5853 = !DILocation(line: 3308, column: 40, scope: !5850)
!5854 = !DILocation(line: 3308, column: 43, scope: !5850)
!5855 = !DILocation(line: 3308, column: 7, scope: !5838)
!5856 = !DILocation(line: 3309, column: 5, scope: !5850)
!5857 = !DILocation(line: 3313, column: 15, scope: !5838)
!5858 = !DILocation(line: 3314, column: 8, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 3314, column: 3)
!5860 = !DILocation(line: 0, scope: !5859)
!5861 = !DILocation(line: 3314, column: 26, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5859, file: !3, line: 3314, column: 3)
!5863 = !DILocation(line: 3314, column: 3, scope: !5859)
!5864 = !DILocation(line: 3316, column: 12, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 3316, column: 11)
!5866 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 3315, column: 5)
!5867 = !DILocation(line: 3316, column: 11, scope: !5866)
!5868 = !DILocation(line: 3319, column: 13, scope: !5866)
!5869 = !DILocation(line: 3320, column: 14, scope: !5866)
!5870 = !DILocation(line: 3322, column: 7, scope: !5866)
!5871 = !DILocation(line: 3324, column: 34, scope: !5866)
!5872 = !DILocation(line: 3314, column: 47, scope: !5862)
!5873 = !DILocation(line: 3314, column: 3, scope: !5862)
!5874 = distinct !{!5874, !5863, !5875}
!5875 = !DILocation(line: 3326, column: 5, scope: !5859)
!5876 = !DILocation(line: 3328, column: 3, scope: !5838)
!5877 = !DILocation(line: 3328, column: 23, scope: !5838)
!5878 = !DILocation(line: 3328, column: 48, scope: !5838)
!5879 = !DILocation(line: 3330, column: 3, scope: !5838)
!5880 = distinct !DISubprogram(name: "priority", scope: !3, file: !3, line: 1004, type: !2057, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5881)
!5881 = !{!5882, !5883, !5886, !5889, !5890, !5891, !5893, !5894, !5898, !5899, !5902, !5905}
!5882 = !DILocalVariable(name: "insn", arg: 1, scope: !5880, file: !3, line: 1004, type: !638)
!5883 = !DILocalVariable(name: "this_priority", scope: !5884, file: !3, line: 1014, type: !631)
!5884 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 1013, column: 5)
!5885 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 1012, column: 7)
!5886 = !DILocalVariable(name: "prev_first", scope: !5887, file: !3, line: 1024, type: !638)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 1023, column: 2)
!5888 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1016, column: 11)
!5889 = !DILocalVariable(name: "twin", scope: !5887, file: !3, line: 1024, type: !638)
!5890 = !DILocalVariable(name: "rec", scope: !5887, file: !3, line: 1025, type: !1172)
!5891 = !DILocalVariable(name: "sd_it", scope: !5892, file: !3, line: 1048, type: !2252)
!5892 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1047, column: 6)
!5893 = !DILocalVariable(name: "dep", scope: !5892, file: !3, line: 1049, type: !2846)
!5894 = !DILocalVariable(name: "next", scope: !5895, file: !3, line: 1053, type: !638)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1052, column: 3)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1051, column: 8)
!5897 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1051, column: 8)
!5898 = !DILocalVariable(name: "next_priority", scope: !5895, file: !3, line: 1054, type: !631)
!5899 = !DILocalVariable(name: "cost", scope: !5900, file: !3, line: 1060, type: !631)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 1059, column: 7)
!5901 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1058, column: 9)
!5902 = !DILocalVariable(name: "_dep1", scope: !5903, file: !3, line: 1069, type: !2271)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1068, column: 4)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1065, column: 13)
!5905 = !DILocalVariable(name: "dep1", scope: !5903, file: !3, line: 1069, type: !5906)
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!5907 = !DILocation(line: 0, scope: !5880)
!5908 = !DILocation(line: 1006, column: 9, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 1006, column: 7)
!5910 = !DILocation(line: 1006, column: 7, scope: !5880)
!5911 = !DILocation(line: 1010, column: 3, scope: !5880)
!5912 = !DILocation(line: 1012, column: 8, scope: !5885)
!5913 = !DILocation(line: 1012, column: 7, scope: !5880)
!5914 = !DILocation(line: 0, scope: !5884)
!5915 = !DILocation(line: 1016, column: 11, scope: !5888)
!5916 = !DILocation(line: 1016, column: 32, scope: !5888)
!5917 = !DILocation(line: 1016, column: 11, scope: !5884)
!5918 = !DILocation(line: 1021, column: 18, scope: !5888)
!5919 = !DILocation(line: 1021, column: 2, scope: !5888)
!5920 = !DILocation(line: 1034, column: 10, scope: !5887)
!5921 = !DILocation(line: 1034, column: 34, scope: !5887)
!5922 = !DILocation(line: 0, scope: !5887)
!5923 = !DILocation(line: 1035, column: 9, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1035, column: 8)
!5925 = !DILocation(line: 1035, column: 13, scope: !5924)
!5926 = !DILocation(line: 1035, column: 23, scope: !5924)
!5927 = !DILocation(line: 1035, column: 20, scope: !5924)
!5928 = !DILocation(line: 1035, column: 8, scope: !5887)
!5929 = !DILocation(line: 1037, column: 21, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1036, column: 6)
!5931 = !DILocation(line: 1039, column: 6, scope: !5930)
!5932 = !DILocation(line: 1042, column: 21, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1041, column: 6)
!5934 = !DILocation(line: 1043, column: 15, scope: !5933)
!5935 = !DILocation(line: 0, scope: !5924)
!5936 = !DILocation(line: 0, scope: !5892)
!5937 = !DILocation(line: 0, scope: !5897)
!5938 = !DILocation(line: 0, scope: !5903)
!5939 = !DILocation(line: 1046, column: 4, scope: !5887)
!5940 = !DILocation(line: 1014, column: 11, scope: !5884)
!5941 = !DILocation(line: 1048, column: 8, scope: !5892)
!5942 = !DILocation(line: 1049, column: 8, scope: !5892)
!5943 = !DILocation(line: 1051, column: 8, scope: !5897)
!5944 = !DILocation(line: 0, scope: !5904)
!5945 = !DILocation(line: 1051, column: 8, scope: !5896)
!5946 = !DILocation(line: 1056, column: 12, scope: !5895)
!5947 = !DILocation(line: 0, scope: !5895)
!5948 = !DILocation(line: 1058, column: 9, scope: !5901)
!5949 = !DILocation(line: 1058, column: 31, scope: !5901)
!5950 = !DILocation(line: 1058, column: 9, scope: !5895)
!5951 = !DILocation(line: 1062, column: 14, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1062, column: 13)
!5953 = !DILocation(line: 1062, column: 13, scope: !5900)
!5954 = !DILocation(line: 1066, column: 21, scope: !5904)
!5955 = !DILocation(line: 1066, column: 11, scope: !5904)
!5956 = !DILocation(line: 0, scope: !5900)
!5957 = !DILocation(line: 1076, column: 32, scope: !5900)
!5958 = !DILocation(line: 1076, column: 30, scope: !5900)
!5959 = !DILocation(line: 1078, column: 27, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1078, column: 13)
!5961 = !DILocation(line: 1078, column: 13, scope: !5900)
!5962 = !DILocation(line: 1080, column: 7, scope: !5901)
!5963 = !DILocation(line: 1081, column: 3, scope: !5896)
!5964 = !DILocation(line: 1079, column: 18, scope: !5960)
!5965 = distinct !{!5965, !5943, !5966}
!5966 = !DILocation(line: 1081, column: 3, scope: !5897)
!5967 = !DILocation(line: 1083, column: 15, scope: !5892)
!5968 = !DILocation(line: 1069, column: 6, scope: !5903)
!5969 = !DILocation(line: 1071, column: 6, scope: !5903)
!5970 = !DILocation(line: 1073, column: 13, scope: !5903)
!5971 = !DILocation(line: 1074, column: 4, scope: !5904)
!5972 = !DILocation(line: 1084, column: 6, scope: !5887)
!5973 = !DILocation(line: 1085, column: 16, scope: !5887)
!5974 = !DILocation(line: 1084, column: 6, scope: !5892)
!5975 = distinct !{!5975, !5939, !5976}
!5976 = !DILocation(line: 1085, column: 29, scope: !5887)
!5977 = !DILocation(line: 1088, column: 25, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1088, column: 11)
!5979 = !DILocation(line: 1088, column: 11, scope: !5884)
!5980 = !DILocation(line: 1090, column: 4, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 1089, column: 2)
!5982 = !DILocation(line: 1092, column: 20, scope: !5981)
!5983 = !DILocation(line: 1093, column: 2, scope: !5981)
!5984 = !DILocation(line: 1095, column: 7, scope: !5884)
!5985 = !DILocation(line: 1095, column: 28, scope: !5884)
!5986 = !DILocation(line: 1096, column: 7, scope: !5884)
!5987 = !DILocation(line: 1096, column: 35, scope: !5884)
!5988 = !DILocation(line: 1097, column: 5, scope: !5884)
!5989 = !DILocation(line: 1099, column: 10, scope: !5880)
!5990 = !DILocation(line: 1099, column: 3, scope: !5880)
!5991 = !DILocation(line: 1100, column: 1, scope: !5880)
!5992 = distinct !DISubprogram(name: "setup_sched_dump", scope: !3, file: !3, line: 3337, type: !2107, scopeLine: 3338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!5993 = !DILocation(line: 3339, column: 19, scope: !5992)
!5994 = !DILocation(line: 3340, column: 27, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 3340, column: 7)
!5996 = !DILocation(line: 3340, column: 35, scope: !5995)
!5997 = !DILocation(line: 3340, column: 32, scope: !5995)
!5998 = !DILocation(line: 0, scope: !5995)
!5999 = !DILocation(line: 3342, column: 38, scope: !5992)
!6000 = !DILocation(line: 3342, column: 44, scope: !5992)
!6001 = !DILocation(line: 3342, column: 14, scope: !5992)
!6002 = !DILocation(line: 3344, column: 1, scope: !5992)
!6003 = distinct !DISubprogram(name: "sched_init", scope: !3, file: !3, line: 3351, type: !2107, scopeLine: 3352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6004)
!6004 = !{!6005, !6008}
!6005 = !DILocalVariable(name: "i", scope: !6006, file: !3, line: 3440, type: !631)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 3439, column: 5)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3438, column: 7)
!6008 = !DILocalVariable(name: "max_regno", scope: !6006, file: !3, line: 3440, type: !631)
!6009 = !DILocation(line: 3358, column: 23, scope: !6003)
!6010 = !DILocation(line: 3358, column: 48, scope: !6003)
!6011 = !DILocation(line: 3358, column: 43, scope: !6003)
!6012 = !DILocation(line: 3359, column: 12, scope: !6003)
!6013 = !DILocation(line: 3359, column: 31, scope: !6003)
!6014 = !DILocation(line: 3359, column: 45, scope: !6003)
!6015 = !DILocation(line: 3358, column: 20, scope: !6003)
!6016 = !DILocation(line: 3360, column: 7, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3360, column: 7)
!6018 = !DILocation(line: 3360, column: 7, scope: !6003)
!6019 = !DILocation(line: 3361, column: 5, scope: !6017)
!6020 = !DILocation(line: 3364, column: 21, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3364, column: 7)
!6022 = !DILocation(line: 3364, column: 7, scope: !6021)
!6023 = !DILocation(line: 3364, column: 7, scope: !6003)
!6024 = !DILocation(line: 3366, column: 17, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 3365, column: 5)
!6026 = !DILocation(line: 3367, column: 7, scope: !6025)
!6027 = !DILocation(line: 3369, column: 11, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 3369, column: 11)
!6029 = !DILocation(line: 3369, column: 22, scope: !6028)
!6030 = !DILocation(line: 3369, column: 27, scope: !6028)
!6031 = !DILocation(line: 3369, column: 11, scope: !6025)
!6032 = !DILocation(line: 3372, column: 14, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 3370, column: 9)
!6034 = !DILocation(line: 3372, column: 57, scope: !6033)
!6035 = !DILocation(line: 3372, column: 73, scope: !6033)
!6036 = !DILocation(line: 3371, column: 22, scope: !6033)
!6037 = !DILocation(line: 3371, column: 43, scope: !6033)
!6038 = !DILocation(line: 3374, column: 14, scope: !6033)
!6039 = !DILocation(line: 3375, column: 34, scope: !6033)
!6040 = !DILocation(line: 3373, column: 22, scope: !6033)
!6041 = !DILocation(line: 3373, column: 46, scope: !6033)
!6042 = !DILocation(line: 3376, column: 9, scope: !6033)
!6043 = !DILocation(line: 3379, column: 12, scope: !6028)
!6044 = !DILocation(line: 3384, column: 15, scope: !6021)
!6045 = !DILocation(line: 3387, column: 21, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3387, column: 7)
!6047 = !DILocation(line: 3387, column: 7, scope: !6046)
!6048 = !DILocation(line: 3387, column: 7, scope: !6003)
!6049 = !DILocation(line: 3388, column: 18, scope: !6046)
!6050 = !DILocation(line: 3388, column: 5, scope: !6046)
!6051 = !DILocation(line: 0, scope: !6046)
!6052 = !DILocation(line: 3392, column: 7, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3392, column: 7)
!6054 = !DILocation(line: 3392, column: 25, scope: !6053)
!6055 = !DILocation(line: 3392, column: 7, scope: !6003)
!6056 = !DILocation(line: 3394, column: 25, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 3393, column: 5)
!6058 = !DILocation(line: 3396, column: 50, scope: !6057)
!6059 = !DILocation(line: 3397, column: 5, scope: !6057)
!6060 = !DILocation(line: 3399, column: 21, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3399, column: 7)
!6062 = !DILocation(line: 3399, column: 7, scope: !6061)
!6063 = !DILocation(line: 3399, column: 7, scope: !6003)
!6064 = !DILocation(line: 3400, column: 21, scope: !6061)
!6065 = !DILocation(line: 3400, column: 5, scope: !6061)
!6066 = !DILocation(line: 0, scope: !6061)
!6067 = !DILocation(line: 3404, column: 21, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3404, column: 7)
!6069 = !DILocation(line: 3404, column: 7, scope: !6068)
!6070 = !DILocation(line: 3404, column: 7, scope: !6003)
!6071 = !DILocation(line: 3405, column: 5, scope: !6068)
!6072 = !DILocation(line: 3407, column: 21, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3407, column: 7)
!6074 = !DILocation(line: 3407, column: 7, scope: !6073)
!6075 = !DILocation(line: 3407, column: 7, scope: !6003)
!6076 = !DILocation(line: 3408, column: 5, scope: !6073)
!6077 = !DILocation(line: 3410, column: 3, scope: !6003)
!6078 = !DILocation(line: 3411, column: 20, scope: !6003)
!6079 = !DILocation(line: 3411, column: 18, scope: !6003)
!6080 = !DILocation(line: 3413, column: 3, scope: !6003)
!6081 = !DILocation(line: 3415, column: 3, scope: !6003)
!6082 = !DILocation(line: 3416, column: 3, scope: !6003)
!6083 = !DILocation(line: 3419, column: 7, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3419, column: 7)
!6085 = !DILocation(line: 3419, column: 26, scope: !6084)
!6086 = !DILocation(line: 3419, column: 40, scope: !6084)
!6087 = !DILocation(line: 3419, column: 7, scope: !6003)
!6088 = !DILocation(line: 3421, column: 7, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 3420, column: 5)
!6090 = !DILocation(line: 3422, column: 7, scope: !6089)
!6091 = !DILocation(line: 3423, column: 5, scope: !6089)
!6092 = !DILocation(line: 3425, column: 3, scope: !6003)
!6093 = !DILocation(line: 3429, column: 7, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3429, column: 7)
!6095 = !DILocation(line: 3429, column: 7, scope: !6003)
!6096 = !DILocation(line: 3430, column: 5, scope: !6094)
!6097 = !DILocation(line: 3432, column: 3, scope: !6003)
!6098 = !DILocation(line: 3434, column: 21, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 3434, column: 7)
!6100 = !DILocation(line: 3434, column: 7, scope: !6099)
!6101 = !DILocation(line: 3434, column: 7, scope: !6003)
!6102 = !DILocation(line: 3435, column: 35, scope: !6099)
!6103 = !DILocation(line: 3435, column: 47, scope: !6099)
!6104 = !DILocation(line: 3436, column: 7, scope: !6099)
!6105 = !DILocation(line: 3436, column: 22, scope: !6099)
!6106 = !DILocation(line: 3435, column: 5, scope: !6099)
!6107 = !DILocation(line: 3438, column: 7, scope: !6007)
!6108 = !DILocation(line: 3438, column: 7, scope: !6003)
!6109 = !DILocation(line: 3440, column: 26, scope: !6006)
!6110 = !DILocation(line: 0, scope: !6006)
!6111 = !DILocation(line: 3442, column: 31, scope: !6006)
!6112 = !DILocation(line: 3442, column: 7, scope: !6006)
!6113 = !DILocation(line: 3444, column: 32, scope: !6006)
!6114 = !DILocation(line: 3444, column: 42, scope: !6006)
!6115 = !DILocation(line: 3444, column: 23, scope: !6006)
!6116 = !DILocation(line: 3444, column: 2, scope: !6006)
!6117 = !DILocation(line: 3445, column: 12, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 3445, column: 7)
!6119 = !DILocation(line: 0, scope: !6118)
!6120 = !DILocation(line: 3445, column: 21, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 3445, column: 7)
!6122 = !DILocation(line: 3445, column: 7, scope: !6118)
!6123 = !DILocation(line: 3447, column: 9, scope: !6121)
!6124 = !DILocation(line: 3447, column: 7, scope: !6121)
!6125 = !DILocation(line: 3448, column: 29, scope: !6121)
!6126 = !DILocation(line: 3448, column: 9, scope: !6121)
!6127 = !DILocation(line: 3449, column: 9, scope: !6121)
!6128 = !DILocation(line: 3446, column: 2, scope: !6121)
!6129 = !DILocation(line: 3447, column: 4, scope: !6121)
!6130 = !DILocation(line: 3445, column: 35, scope: !6121)
!6131 = !DILocation(line: 3445, column: 7, scope: !6121)
!6132 = distinct !{!6132, !6122, !6133}
!6133 = !DILocation(line: 3449, column: 28, scope: !6118)
!6134 = !DILocation(line: 3450, column: 23, scope: !6006)
!6135 = !DILocation(line: 3450, column: 21, scope: !6006)
!6136 = !DILocation(line: 3451, column: 24, scope: !6006)
!6137 = !DILocation(line: 3451, column: 22, scope: !6006)
!6138 = !DILocation(line: 3452, column: 25, scope: !6006)
!6139 = !DILocation(line: 3452, column: 23, scope: !6006)
!6140 = !DILocation(line: 3453, column: 5, scope: !6006)
!6141 = !DILocation(line: 3455, column: 25, scope: !6003)
!6142 = !DILocation(line: 3455, column: 16, scope: !6003)
!6143 = !DILocation(line: 3455, column: 14, scope: !6003)
!6144 = !DILocation(line: 3456, column: 1, scope: !6003)
!6145 = distinct !DISubprogram(name: "haifa_sched_init", scope: !3, file: !3, line: 3462, type: !2107, scopeLine: 3463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6146)
!6146 = !{!6147, !6149}
!6147 = !DILocalVariable(name: "bbs", scope: !6148, file: !3, line: 3476, type: !5825)
!6148 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 3475, column: 3)
!6149 = !DILocalVariable(name: "bb", scope: !6148, file: !3, line: 3477, type: !1172)
!6150 = !DILocation(line: 3464, column: 3, scope: !6145)
!6151 = !DILocation(line: 3465, column: 3, scope: !6145)
!6152 = !DILocation(line: 3467, column: 7, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 3467, column: 7)
!6154 = !DILocation(line: 3467, column: 17, scope: !6153)
!6155 = !DILocation(line: 3467, column: 7, scope: !6145)
!6156 = !DILocation(line: 3469, column: 7, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 3468, column: 5)
!6158 = !DILocation(line: 3469, column: 24, scope: !6157)
!6159 = !DILocation(line: 3469, column: 38, scope: !6157)
!6160 = !DILocation(line: 3470, column: 43, scope: !6157)
!6161 = !DILocation(line: 3471, column: 5, scope: !6157)
!6162 = !DILocation(line: 3476, column: 5, scope: !6148)
!6163 = !DILocation(line: 3476, column: 20, scope: !6148)
!6164 = !DILocation(line: 0, scope: !6148)
!6165 = !DILocation(line: 3476, column: 14, scope: !6148)
!6166 = !DILocation(line: 3479, column: 5, scope: !6148)
!6167 = !DILocation(line: 3481, column: 5, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 3481, column: 5)
!6169 = !DILocation(line: 0, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 3481, column: 5)
!6171 = !DILocation(line: 3481, column: 5, scope: !6170)
!6172 = !DILocation(line: 0, scope: !6168)
!6173 = !DILocation(line: 3482, column: 7, scope: !6170)
!6174 = distinct !{!6174, !6167, !6175}
!6175 = !DILocation(line: 3482, column: 7, scope: !6168)
!6176 = !DILocation(line: 3483, column: 5, scope: !6148)
!6177 = !DILocation(line: 3484, column: 5, scope: !6148)
!6178 = !DILocation(line: 3485, column: 5, scope: !6148)
!6179 = !DILocation(line: 3486, column: 5, scope: !6148)
!6180 = !DILocation(line: 3488, column: 5, scope: !6148)
!6181 = !DILocation(line: 3489, column: 3, scope: !6145)
!6182 = !DILocation(line: 3491, column: 22, scope: !6145)
!6183 = !DILocation(line: 3492, column: 21, scope: !6145)
!6184 = !DILocation(line: 3493, column: 25, scope: !6145)
!6185 = !DILocation(line: 3494, column: 34, scope: !6145)
!6186 = !DILocation(line: 3503, column: 71, scope: !6145)
!6187 = !DILocation(line: 3503, column: 52, scope: !6145)
!6188 = !DILocation(line: 3503, column: 36, scope: !6145)
!6189 = !DILocation(line: 3503, column: 17, scope: !6145)
!6190 = !DILocation(line: 3504, column: 19, scope: !6145)
!6191 = !DILocation(line: 3505, column: 18, scope: !6145)
!6192 = !DILocation(line: 3506, column: 1, scope: !6145)
!6193 = distinct !DISubprogram(name: "VEC_basic_block_heap_alloc", scope: !155, file: !155, line: 283, type: !6194, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6196)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!1881, !631}
!6196 = !{!6197}
!6197 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6193, file: !155, line: 283, type: !631)
!6198 = !DILocation(line: 0, scope: !6193)
!6199 = !DILocation(line: 283, column: 1, scope: !6193)
!6200 = distinct !DISubprogram(name: "sched_init_bbs", scope: !3, file: !3, line: 4285, type: !2107, scopeLine: 4286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!6201 = !DILocation(line: 4287, column: 3, scope: !6200)
!6202 = !DILocation(line: 4288, column: 1, scope: !6200)
!6203 = distinct !DISubprogram(name: "VEC_basic_block_base_quick_push", scope: !155, file: !155, line: 281, type: !6204, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6207)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!3941, !6206, !1172}
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!6207 = !{!6208, !6209, !6210}
!6208 = !DILocalVariable(name: "vec_", arg: 1, scope: !6203, file: !155, line: 281, type: !6206)
!6209 = !DILocalVariable(name: "obj_", arg: 2, scope: !6203, file: !155, line: 281, type: !1172)
!6210 = !DILocalVariable(name: "slot_", scope: !6203, file: !155, line: 281, type: !3941)
!6211 = !DILocation(line: 0, scope: !6203)
!6212 = !DILocation(line: 281, column: 1, scope: !6203)
!6213 = distinct !DISubprogram(name: "sched_extend_target", scope: !3, file: !3, line: 5418, type: !2107, scopeLine: 5419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!6214 = !DILocation(line: 5420, column: 21, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 5420, column: 7)
!6216 = !DILocation(line: 5420, column: 7, scope: !6215)
!6217 = !DILocation(line: 5420, column: 7, scope: !6213)
!6218 = !DILocation(line: 5421, column: 5, scope: !6215)
!6219 = !DILocation(line: 5422, column: 1, scope: !6213)
!6220 = distinct !DISubprogram(name: "haifa_init_h_i_d", scope: !3, file: !3, line: 5457, type: !5823, scopeLine: 5458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6221)
!6221 = !{!6222, !6223, !6224, !6225, !6226}
!6222 = !DILocalVariable(name: "bbs", arg: 1, scope: !6220, file: !3, line: 5457, type: !5825)
!6223 = !DILocalVariable(name: "bb", arg: 2, scope: !6220, file: !3, line: 5457, type: !1172)
!6224 = !DILocalVariable(name: "insns", arg: 3, scope: !6220, file: !3, line: 5457, type: !5826)
!6225 = !DILocalVariable(name: "insn", arg: 4, scope: !6220, file: !3, line: 5457, type: !638)
!6226 = !DILocalVariable(name: "ssi", scope: !6220, file: !3, line: 5459, type: !2102)
!6227 = !DILocation(line: 0, scope: !6220)
!6228 = !DILocation(line: 5459, column: 3, scope: !6220)
!6229 = !DILocation(line: 5459, column: 36, scope: !6220)
!6230 = !DILocation(line: 5467, column: 3, scope: !6220)
!6231 = !DILocation(line: 5468, column: 1, scope: !6220)
!6232 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !155, file: !155, line: 283, type: !6233, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6236)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{null, !6235}
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!6236 = !{!6237}
!6237 = !DILocalVariable(name: "vec_", arg: 1, scope: !6232, file: !155, line: 283, type: !6235)
!6238 = !DILocation(line: 0, scope: !6232)
!6239 = !DILocation(line: 283, column: 1, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6232, file: !155, line: 283, column: 1)
!6241 = !DILocation(line: 283, column: 1, scope: !6232)
!6242 = distinct !DISubprogram(name: "haifa_init_only_bb", scope: !3, file: !3, line: 5513, type: !2049, scopeLine: 5514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6243)
!6243 = !{!6244, !6245}
!6244 = !DILocalVariable(name: "bb", arg: 1, scope: !6242, file: !3, line: 5513, type: !1172)
!6245 = !DILocalVariable(name: "after", arg: 2, scope: !6242, file: !3, line: 5513, type: !1172)
!6246 = !DILocation(line: 0, scope: !6242)
!6247 = !DILocation(line: 5515, column: 3, scope: !6242)
!6248 = !DILocation(line: 5517, column: 3, scope: !6242)
!6249 = !DILocation(line: 5519, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 5519, column: 7)
!6251 = !DILocation(line: 5519, column: 26, scope: !6250)
!6252 = !DILocation(line: 5519, column: 7, scope: !6242)
!6253 = !DILocation(line: 5521, column: 5, scope: !6250)
!6254 = !DILocation(line: 5522, column: 1, scope: !6242)
!6255 = distinct !DISubprogram(name: "sched_split_block_1", scope: !3, file: !3, line: 5526, type: !2123, scopeLine: 5527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6256)
!6256 = !{!6257, !6258, !6259}
!6257 = !DILocalVariable(name: "first_bb", arg: 1, scope: !6255, file: !3, line: 5526, type: !1172)
!6258 = !DILocalVariable(name: "after", arg: 2, scope: !6255, file: !3, line: 5526, type: !638)
!6259 = !DILocalVariable(name: "e", scope: !6255, file: !3, line: 5528, type: !1189)
!6260 = !DILocation(line: 0, scope: !6255)
!6261 = !DILocation(line: 5530, column: 30, scope: !6255)
!6262 = !DILocation(line: 5530, column: 7, scope: !6255)
!6263 = !DILocation(line: 5531, column: 3, scope: !6255)
!6264 = !DILocation(line: 5536, column: 13, scope: !6255)
!6265 = !DILocation(line: 5536, column: 3, scope: !6255)
!6266 = distinct !DISubprogram(name: "sched_create_empty_bb_1", scope: !3, file: !3, line: 5541, type: !2128, scopeLine: 5542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6267)
!6267 = !{!6268}
!6268 = !DILocalVariable(name: "after", arg: 1, scope: !6266, file: !3, line: 5541, type: !1172)
!6269 = !DILocation(line: 0, scope: !6266)
!6270 = !DILocation(line: 5543, column: 10, scope: !6266)
!6271 = !DILocation(line: 5543, column: 3, scope: !6266)
!6272 = distinct !DISubprogram(name: "haifa_sched_finish", scope: !3, file: !3, line: 3510, type: !2107, scopeLine: 3511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6273)
!6273 = !{!6274}
!6274 = !DILocalVariable(name: "c", scope: !6275, file: !3, line: 3518, type: !634)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 3517, column: 5)
!6276 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 3516, column: 7)
!6277 = !DILocation(line: 3512, column: 25, scope: !6272)
!6278 = !DILocation(line: 3513, column: 21, scope: !6272)
!6279 = !DILocation(line: 3514, column: 22, scope: !6272)
!6280 = !DILocation(line: 3516, column: 7, scope: !6276)
!6281 = !DILocation(line: 3516, column: 17, scope: !6276)
!6282 = !DILocation(line: 3516, column: 31, scope: !6276)
!6283 = !DILocation(line: 3516, column: 20, scope: !6276)
!6284 = !DILocation(line: 3516, column: 7, scope: !6272)
!6285 = !DILocation(line: 3518, column: 16, scope: !6275)
!6286 = !DILocation(line: 3521, column: 21, scope: !6275)
!6287 = !DILocation(line: 3520, column: 7, scope: !6275)
!6288 = !DILocation(line: 3523, column: 16, scope: !6275)
!6289 = !DILocation(line: 3523, column: 27, scope: !6275)
!6290 = !DILocation(line: 3525, column: 16, scope: !6275)
!6291 = !DILocation(line: 3525, column: 19, scope: !6275)
!6292 = !DILocation(line: 3523, column: 7, scope: !6275)
!6293 = !DILocation(line: 3526, column: 16, scope: !6275)
!6294 = !DILocation(line: 3526, column: 27, scope: !6275)
!6295 = !DILocation(line: 3528, column: 19, scope: !6275)
!6296 = !DILocation(line: 3526, column: 7, scope: !6275)
!6297 = !DILocation(line: 3529, column: 16, scope: !6275)
!6298 = !DILocation(line: 3529, column: 27, scope: !6275)
!6299 = !DILocation(line: 3531, column: 19, scope: !6275)
!6300 = !DILocation(line: 3529, column: 7, scope: !6275)
!6301 = !DILocation(line: 3532, column: 16, scope: !6275)
!6302 = !DILocation(line: 3532, column: 27, scope: !6275)
!6303 = !DILocation(line: 3534, column: 19, scope: !6275)
!6304 = !DILocation(line: 3532, column: 7, scope: !6275)
!6305 = !DILocation(line: 3535, column: 5, scope: !6275)
!6306 = !DILocation(line: 3539, column: 3, scope: !6272)
!6307 = !DILocation(line: 3540, column: 3, scope: !6272)
!6308 = !DILocation(line: 3541, column: 22, scope: !6272)
!6309 = !DILocation(line: 3542, column: 3, scope: !6272)
!6310 = !DILocation(line: 3543, column: 1, scope: !6272)
!6311 = distinct !DISubprogram(name: "sched_finish_luids", scope: !3, file: !3, line: 5403, type: !2107, scopeLine: 5404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!6312 = !DILocation(line: 5405, column: 3, scope: !6311)
!6313 = !DILocation(line: 5406, column: 18, scope: !6311)
!6314 = !DILocation(line: 5407, column: 1, scope: !6311)
!6315 = distinct !DISubprogram(name: "sched_finish", scope: !3, file: !3, line: 3549, type: !2107, scopeLine: 3550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!6316 = !DILocation(line: 3551, column: 3, scope: !6315)
!6317 = !DILocation(line: 3552, column: 7, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 3552, column: 7)
!6319 = !DILocation(line: 3552, column: 7, scope: !6315)
!6320 = !DILocation(line: 3554, column: 13, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3553, column: 5)
!6322 = !DILocation(line: 3554, column: 7, scope: !6321)
!6323 = !DILocation(line: 3555, column: 7, scope: !6321)
!6324 = !DILocation(line: 3556, column: 7, scope: !6321)
!6325 = !DILocation(line: 3557, column: 7, scope: !6321)
!6326 = !DILocation(line: 3558, column: 5, scope: !6321)
!6327 = !DILocation(line: 3559, column: 9, scope: !6315)
!6328 = !DILocation(line: 3559, column: 3, scope: !6315)
!6329 = !DILocation(line: 3561, column: 21, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 3561, column: 7)
!6331 = !DILocation(line: 3561, column: 7, scope: !6330)
!6332 = !DILocation(line: 3561, column: 7, scope: !6315)
!6333 = !DILocation(line: 3562, column: 37, scope: !6330)
!6334 = !DILocation(line: 3562, column: 49, scope: !6330)
!6335 = !DILocation(line: 3562, column: 5, scope: !6330)
!6336 = !DILocation(line: 3564, column: 3, scope: !6315)
!6337 = !DILocation(line: 3566, column: 3, scope: !6315)
!6338 = !DILocation(line: 3568, column: 3, scope: !6315)
!6339 = !DILocation(line: 3575, column: 1, scope: !6315)
!6340 = distinct !DISubprogram(name: "haifa_finish_h_i_d", scope: !3, file: !3, line: 5472, type: !2107, scopeLine: 5473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6341)
!6341 = !{!6342, !6343, !6345, !6346}
!6342 = !DILocalVariable(name: "i", scope: !6340, file: !3, line: 5474, type: !631)
!6343 = !DILocalVariable(name: "data", scope: !6340, file: !3, line: 5475, type: !6344)
!6344 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_insn_data_t", file: !398, line: 823, baseType: !2836)
!6345 = !DILocalVariable(name: "use", scope: !6340, file: !3, line: 5476, type: !1944)
!6346 = !DILocalVariable(name: "next", scope: !6340, file: !3, line: 5476, type: !1944)
!6347 = !DILocation(line: 5475, column: 3, scope: !6340)
!6348 = !DILocation(line: 0, scope: !6340)
!6349 = !DILocation(line: 5478, column: 8, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 5478, column: 3)
!6351 = !DILocation(line: 0, scope: !6350)
!6352 = !DILocation(line: 5478, column: 15, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 5478, column: 3)
!6354 = !DILocation(line: 5478, column: 3, scope: !6350)
!6355 = !DILocation(line: 5480, column: 11, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 5480, column: 11)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 5479, column: 5)
!6358 = !DILocation(line: 5480, column: 17, scope: !6356)
!6359 = !DILocation(line: 5480, column: 30, scope: !6356)
!6360 = !DILocation(line: 5480, column: 11, scope: !6357)
!6361 = !DILocation(line: 5481, column: 2, scope: !6356)
!6362 = !DILocation(line: 5482, column: 18, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 5482, column: 7)
!6364 = !DILocation(line: 5482, column: 24, scope: !6363)
!6365 = !DILocation(line: 5482, column: 12, scope: !6363)
!6366 = !DILocation(line: 0, scope: !6363)
!6367 = !DILocation(line: 5482, column: 42, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 5482, column: 7)
!6369 = !DILocation(line: 5482, column: 7, scope: !6363)
!6370 = !DILocation(line: 5484, column: 16, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 5483, column: 2)
!6372 = !DILocation(line: 5485, column: 4, scope: !6371)
!6373 = !DILocation(line: 5482, column: 7, scope: !6368)
!6374 = distinct !{!6374, !6369, !6375}
!6375 = !DILocation(line: 5486, column: 2, scope: !6363)
!6376 = !DILocation(line: 5478, column: 67, scope: !6353)
!6377 = !DILocation(line: 5478, column: 3, scope: !6353)
!6378 = distinct !{!6378, !6354, !6379}
!6379 = !DILocation(line: 5487, column: 5, scope: !6350)
!6380 = !DILocation(line: 5488, column: 3, scope: !6340)
!6381 = !DILocation(line: 5489, column: 1, scope: !6340)
!6382 = distinct !DISubprogram(name: "try_ready", scope: !3, file: !3, line: 3660, type: !2057, scopeLine: 3661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6383)
!6383 = !{!6384, !6385, !6386, !6388, !6393, !6394, !6395, !6399, !6402, !6403}
!6384 = !DILocalVariable(name: "next", arg: 1, scope: !6382, file: !3, line: 3660, type: !638)
!6385 = !DILocalVariable(name: "old_ts", scope: !6382, file: !3, line: 3662, type: !1865)
!6386 = !DILocalVariable(name: "ts", scope: !6382, file: !3, line: 3662, type: !6387)
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!6388 = !DILocalVariable(name: "sd_it", scope: !6389, file: !3, line: 3693, type: !2252)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 3692, column: 2)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 3688, column: 11)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 3682, column: 5)
!6392 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 3671, column: 7)
!6393 = !DILocalVariable(name: "dep", scope: !6389, file: !3, line: 3694, type: !2846)
!6394 = !DILocalVariable(name: "first_p", scope: !6389, file: !3, line: 3695, type: !630)
!6395 = !DILocalVariable(name: "ds", scope: !6396, file: !3, line: 3699, type: !1865)
!6396 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 3698, column: 6)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 3697, column: 4)
!6398 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3697, column: 4)
!6399 = !DILocalVariable(name: "res", scope: !6400, file: !3, line: 3744, type: !631)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 3743, column: 5)
!6401 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 3739, column: 7)
!6402 = !DILocalVariable(name: "new_pat", scope: !6400, file: !3, line: 3745, type: !638)
!6403 = !DILocalVariable(name: "s", scope: !6404, file: !3, line: 3810, type: !631)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 3809, column: 5)
!6405 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 3808, column: 7)
!6406 = !DILocation(line: 0, scope: !6382)
!6407 = !DILocation(line: 3664, column: 9, scope: !6382)
!6408 = !DILocation(line: 3665, column: 12, scope: !6382)
!6409 = !DILocation(line: 3667, column: 3, scope: !6382)
!6410 = !DILocation(line: 3671, column: 7, scope: !6392)
!6411 = !DILocation(line: 0, scope: !6392)
!6412 = !DILocation(line: 3671, column: 7, scope: !6382)
!6413 = !DILocation(line: 3675, column: 11, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 3673, column: 5)
!6415 = !DILocation(line: 3677, column: 11, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 3677, column: 11)
!6417 = !DILocation(line: 3677, column: 31, scope: !6416)
!6418 = !DILocation(line: 3677, column: 37, scope: !6416)
!6419 = !DILocation(line: 3677, column: 11, scope: !6414)
!6420 = !DILocation(line: 3679, column: 6, scope: !6416)
!6421 = !DILocation(line: 3679, column: 2, scope: !6416)
!6422 = !DILocation(line: 3686, column: 11, scope: !6391)
!6423 = !DILocation(line: 3688, column: 11, scope: !6390)
!6424 = !DILocation(line: 3688, column: 11, scope: !6391)
!6425 = !DILocation(line: 3693, column: 4, scope: !6389)
!6426 = !DILocation(line: 3694, column: 4, scope: !6389)
!6427 = !DILocation(line: 0, scope: !6389)
!6428 = !DILocation(line: 3697, column: 4, scope: !6398)
!6429 = !DILocation(line: 0, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3701, column: 12)
!6431 = !DILocation(line: 3697, column: 4, scope: !6397)
!6432 = !DILocation(line: 3699, column: 18, scope: !6396)
!6433 = !DILocation(line: 3699, column: 35, scope: !6396)
!6434 = !DILocation(line: 0, scope: !6396)
!6435 = !DILocation(line: 3701, column: 12, scope: !6430)
!6436 = !DILocation(line: 3702, column: 5, scope: !6430)
!6437 = !DILocation(line: 3702, column: 9, scope: !6430)
!6438 = !DILocation(line: 3701, column: 12, scope: !6396)
!6439 = !DILocation(line: 3705, column: 12, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3705, column: 12)
!6441 = !DILocation(line: 3705, column: 12, scope: !6396)
!6442 = !DILocation(line: 3709, column: 9, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 3706, column: 3)
!6444 = !DILocation(line: 3710, column: 3, scope: !6443)
!6445 = !DILocation(line: 3712, column: 19, scope: !6440)
!6446 = !DILocation(line: 3712, column: 9, scope: !6440)
!6447 = !DILocation(line: 3712, column: 7, scope: !6440)
!6448 = distinct !{!6448, !6428, !6449}
!6449 = !DILocation(line: 3713, column: 6, scope: !6398)
!6450 = !DILocation(line: 3715, column: 17, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3715, column: 8)
!6452 = !DILocation(line: 3715, column: 8, scope: !6451)
!6453 = !DILocation(line: 3715, column: 24, scope: !6451)
!6454 = !DILocation(line: 3715, column: 35, scope: !6451)
!6455 = !DILocation(line: 3715, column: 22, scope: !6451)
!6456 = !DILocation(line: 3715, column: 8, scope: !6389)
!6457 = !DILocation(line: 3717, column: 13, scope: !6451)
!6458 = !DILocation(line: 3717, column: 17, scope: !6451)
!6459 = !DILocation(line: 3717, column: 33, scope: !6451)
!6460 = !DILocation(line: 3717, column: 10, scope: !6451)
!6461 = !DILocation(line: 3717, column: 6, scope: !6451)
!6462 = !DILocation(line: 3718, column: 2, scope: !6390)
!6463 = !DILocation(line: 3723, column: 7, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 3723, column: 7)
!6465 = !DILocation(line: 3718, column: 2, scope: !6389)
!6466 = !DILocation(line: 3720, column: 6, scope: !6390)
!6467 = !DILocation(line: 3723, column: 11, scope: !6464)
!6468 = !DILocation(line: 3723, column: 7, scope: !6382)
!6469 = !DILocation(line: 3724, column: 5, scope: !6464)
!6470 = !DILocation(line: 3726, column: 12, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 3726, column: 12)
!6472 = !DILocation(line: 3726, column: 32, scope: !6471)
!6473 = !DILocation(line: 3726, column: 12, scope: !6464)
!6474 = !DILocation(line: 3727, column: 11, scope: !6471)
!6475 = !DILocation(line: 3727, column: 9, scope: !6471)
!6476 = !DILocation(line: 3727, column: 5, scope: !6471)
!6477 = !DILocation(line: 3739, column: 8, scope: !6401)
!6478 = !DILocation(line: 3739, column: 12, scope: !6401)
!6479 = !DILocation(line: 3742, column: 7, scope: !6401)
!6480 = !DILocation(line: 3742, column: 14, scope: !6401)
!6481 = !DILocation(line: 3739, column: 7, scope: !6382)
!6482 = !DILocation(line: 3745, column: 7, scope: !6400)
!6483 = !DILocation(line: 3747, column: 7, scope: !6400)
!6484 = !DILocation(line: 3749, column: 41, scope: !6400)
!6485 = !DILocation(line: 0, scope: !6400)
!6486 = !DILocation(line: 3749, column: 13, scope: !6400)
!6487 = !DILocation(line: 3751, column: 7, scope: !6400)
!6488 = !DILocation(line: 3757, column: 11, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 3752, column: 2)
!6490 = !DILocation(line: 3757, column: 15, scope: !6489)
!6491 = !DILocation(line: 3757, column: 31, scope: !6489)
!6492 = !DILocation(line: 3757, column: 8, scope: !6489)
!6493 = !DILocation(line: 3758, column: 4, scope: !6489)
!6494 = !DILocation(line: 3763, column: 9, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 3763, column: 8)
!6496 = !DILocation(line: 3763, column: 8, scope: !6489)
!6497 = !DILocation(line: 3764, column: 24, scope: !6495)
!6498 = !DILocation(line: 3764, column: 6, scope: !6495)
!6499 = !DILocation(line: 3764, column: 22, scope: !6495)
!6500 = !DILocation(line: 3768, column: 9, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 3768, column: 8)
!6502 = !DILocation(line: 3768, column: 8, scope: !6489)
!6503 = !DILocation(line: 3771, column: 24, scope: !6501)
!6504 = !DILocation(line: 3771, column: 6, scope: !6501)
!6505 = !DILocation(line: 3771, column: 22, scope: !6501)
!6506 = !DILocation(line: 3773, column: 32, scope: !6489)
!6507 = !DILocation(line: 3773, column: 4, scope: !6489)
!6508 = !DILocation(line: 3774, column: 4, scope: !6489)
!6509 = !DILocation(line: 3777, column: 4, scope: !6489)
!6510 = !DILocation(line: 3778, column: 2, scope: !6489)
!6511 = !DILocation(line: 3779, column: 5, scope: !6401)
!6512 = !DILocation(line: 3779, column: 5, scope: !6400)
!6513 = !DILocation(line: 3785, column: 3, scope: !6382)
!6514 = !DILocation(line: 3788, column: 7, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 3788, column: 7)
!6516 = !DILocation(line: 3788, column: 11, scope: !6515)
!6517 = !DILocation(line: 3788, column: 7, scope: !6382)
!6518 = !DILocation(line: 3795, column: 7, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 3789, column: 5)
!6520 = !DILocation(line: 3796, column: 7, scope: !6519)
!6521 = !DILocation(line: 3798, column: 18, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 3798, column: 12)
!6523 = !DILocation(line: 3798, column: 32, scope: !6522)
!6524 = !DILocation(line: 3798, column: 35, scope: !6522)
!6525 = !DILocation(line: 3798, column: 51, scope: !6522)
!6526 = !DILocation(line: 3798, column: 55, scope: !6522)
!6527 = !DILocation(line: 3798, column: 12, scope: !6515)
!6528 = !DILocation(line: 3804, column: 35, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 3803, column: 5)
!6530 = !DILocation(line: 3804, column: 7, scope: !6529)
!6531 = !DILocation(line: 3805, column: 7, scope: !6529)
!6532 = !DILocation(line: 3805, column: 23, scope: !6529)
!6533 = !DILocation(line: 3806, column: 5, scope: !6529)
!6534 = !DILocation(line: 3808, column: 7, scope: !6405)
!6535 = !DILocation(line: 3808, column: 21, scope: !6405)
!6536 = !DILocation(line: 3808, column: 7, scope: !6382)
!6537 = !DILocation(line: 3810, column: 15, scope: !6404)
!6538 = !DILocation(line: 0, scope: !6404)
!6539 = !DILocation(line: 3812, column: 16, scope: !6404)
!6540 = !DILocation(line: 3813, column: 18, scope: !6404)
!6541 = !DILocation(line: 3813, column: 38, scope: !6404)
!6542 = !DILocation(line: 3813, column: 16, scope: !6404)
!6543 = !DILocation(line: 3812, column: 7, scope: !6404)
!6544 = !DILocation(line: 3815, column: 11, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 3815, column: 11)
!6546 = !DILocation(line: 3815, column: 21, scope: !6545)
!6547 = !DILocation(line: 3815, column: 35, scope: !6545)
!6548 = !DILocation(line: 3815, column: 24, scope: !6545)
!6549 = !DILocation(line: 3815, column: 11, scope: !6404)
!6550 = !DILocation(line: 3817, column: 17, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 3817, column: 15)
!6552 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 3816, column: 9)
!6553 = !DILocation(line: 3817, column: 15, scope: !6552)
!6554 = !DILocation(line: 3818, column: 13, scope: !6551)
!6555 = !DILocation(line: 3819, column: 17, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 3819, column: 15)
!6557 = !DILocation(line: 3819, column: 15, scope: !6552)
!6558 = !DILocation(line: 3820, column: 22, scope: !6556)
!6559 = !DILocation(line: 3820, column: 33, scope: !6556)
!6560 = !DILocation(line: 3820, column: 13, scope: !6556)
!6561 = !DILocation(line: 3821, column: 17, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 3821, column: 15)
!6563 = !DILocation(line: 3821, column: 15, scope: !6552)
!6564 = !DILocation(line: 3822, column: 22, scope: !6562)
!6565 = !DILocation(line: 3822, column: 33, scope: !6562)
!6566 = !DILocation(line: 3822, column: 13, scope: !6562)
!6567 = !DILocation(line: 3825, column: 16, scope: !6404)
!6568 = !DILocation(line: 3825, column: 7, scope: !6404)
!6569 = !DILocation(line: 3826, column: 5, scope: !6404)
!6570 = !DILocation(line: 3828, column: 3, scope: !6382)
!6571 = !DILocation(line: 3830, column: 10, scope: !6382)
!6572 = !DILocation(line: 3830, column: 3, scope: !6382)
!6573 = !DILocation(line: 3831, column: 1, scope: !6382)
!6574 = !DILocation(line: 0, scope: !2249)
!6575 = !DILocation(line: 1432, column: 19, scope: !2249)
!6576 = !DILocation(line: 1434, column: 5, scope: !2249)
!6577 = !DILocation(line: 1434, column: 11, scope: !2249)
!6578 = !DILocation(line: 1435, column: 5, scope: !2249)
!6579 = !DILocation(line: 1435, column: 10, scope: !2249)
!6580 = !DILocation(line: 1436, column: 5, scope: !2249)
!6581 = !DILocation(line: 1436, column: 11, scope: !2249)
!6582 = !DILocation(line: 1439, column: 5, scope: !2249)
!6583 = !DILocation(line: 1439, column: 16, scope: !2249)
!6584 = !DILocation(line: 1441, column: 3, scope: !2249)
!6585 = distinct !DISubprogram(name: "sd_iterator_cond", scope: !398, file: !398, line: 1446, type: !6586, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6590)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{!630, !6588, !6589}
!6588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!6589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!6590 = !{!6591, !6592, !6593, !6594, !6597}
!6591 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !6585, file: !398, line: 1446, type: !6588)
!6592 = !DILocalVariable(name: "dep_ptr", arg: 2, scope: !6585, file: !398, line: 1446, type: !6589)
!6593 = !DILocalVariable(name: "link", scope: !6585, file: !398, line: 1448, type: !2260)
!6594 = !DILocalVariable(name: "types", scope: !6595, file: !398, line: 1457, type: !2256)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !398, line: 1456, column: 5)
!6596 = distinct !DILexicalBlock(scope: !6585, file: !398, line: 1450, column: 7)
!6597 = !DILocalVariable(name: "list", scope: !6598, file: !398, line: 1462, type: !6600)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !398, line: 1461, column: 2)
!6599 = distinct !DILexicalBlock(scope: !6595, file: !398, line: 1459, column: 11)
!6600 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_list_t", file: !398, line: 305, baseType: !6601)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 64)
!6602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_deps_list", file: !398, line: 297, size: 128, elements: !6603)
!6603 = !{!6604, !6605}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6602, file: !398, line: 300, baseType: !2260, size: 64)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "n_links", scope: !6602, file: !398, line: 303, baseType: !631, size: 32, offset: 64)
!6606 = !DILocation(line: 0, scope: !6585)
!6607 = !DILocation(line: 1448, column: 30, scope: !6585)
!6608 = !DILocation(line: 1448, column: 21, scope: !6585)
!6609 = !DILocation(line: 1450, column: 12, scope: !6596)
!6610 = !DILocation(line: 1450, column: 7, scope: !6585)
!6611 = !DILocation(line: 1452, column: 18, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6596, file: !398, line: 1451, column: 5)
!6613 = !DILocation(line: 1452, column: 16, scope: !6612)
!6614 = !DILocation(line: 1453, column: 7, scope: !6612)
!6615 = !DILocation(line: 1457, column: 41, scope: !6595)
!6616 = !DILocation(line: 0, scope: !6595)
!6617 = !DILocation(line: 1459, column: 17, scope: !6599)
!6618 = !DILocation(line: 1459, column: 11, scope: !6595)
!6619 = !DILocation(line: 1462, column: 4, scope: !6598)
!6620 = !DILocation(line: 1464, column: 26, scope: !6598)
!6621 = !DILocation(line: 1465, column: 36, scope: !6598)
!6622 = !DILocation(line: 0, scope: !6598)
!6623 = !DILocation(line: 1464, column: 4, scope: !6598)
!6624 = !DILocation(line: 1467, column: 21, scope: !6598)
!6625 = !DILocation(line: 1467, column: 18, scope: !6598)
!6626 = !DILocation(line: 1469, column: 8, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6598, file: !398, line: 1469, column: 8)
!6628 = !DILocation(line: 1469, column: 8, scope: !6598)
!6629 = !DILocation(line: 1470, column: 13, scope: !6627)
!6630 = !DILocation(line: 1470, column: 6, scope: !6627)
!6631 = !DILocation(line: 1471, column: 2, scope: !6599)
!6632 = !DILocation(line: 1473, column: 16, scope: !6595)
!6633 = !DILocation(line: 1474, column: 7, scope: !6595)
!6634 = !DILocation(line: 0, scope: !6596)
!6635 = !DILocation(line: 1476, column: 1, scope: !6585)
!6636 = distinct !DISubprogram(name: "sd_iterator_next", scope: !398, file: !398, line: 1480, type: !6637, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6639)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{null, !6588}
!6639 = !{!6640}
!6640 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !6636, file: !398, line: 1480, type: !6588)
!6641 = !DILocation(line: 0, scope: !6636)
!6642 = !DILocation(line: 1482, column: 20, scope: !6636)
!6643 = !DILocation(line: 1482, column: 17, scope: !6636)
!6644 = !DILocation(line: 1483, column: 1, scope: !6636)
!6645 = distinct !DISubprogram(name: "haifa_speculate_insn", scope: !3, file: !3, line: 4833, type: !6646, scopeLine: 4834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6648)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{!631, !638, !1865, !1864}
!6648 = !{!6649, !6650, !6651}
!6649 = !DILocalVariable(name: "insn", arg: 1, scope: !6645, file: !3, line: 4833, type: !638)
!6650 = !DILocalVariable(name: "request", arg: 2, scope: !6645, file: !3, line: 4833, type: !1865)
!6651 = !DILocalVariable(name: "new_pat", arg: 3, scope: !6645, file: !3, line: 4833, type: !1864)
!6652 = !DILocation(line: 0, scope: !6645)
!6653 = !DILocation(line: 4835, column: 3, scope: !6645)
!6654 = !DILocation(line: 4838, column: 7, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 4838, column: 7)
!6656 = !DILocation(line: 4839, column: 7, scope: !6655)
!6657 = !DILocation(line: 4839, column: 10, scope: !6655)
!6658 = !DILocation(line: 4838, column: 7, scope: !6645)
!6659 = !DILocation(line: 4842, column: 10, scope: !6645)
!6660 = !DILocation(line: 4842, column: 3, scope: !6645)
!6661 = !DILocation(line: 4843, column: 1, scope: !6645)
!6662 = distinct !DISubprogram(name: "haifa_change_pattern", scope: !3, file: !3, line: 4801, type: !2173, scopeLine: 4802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6663)
!6663 = !{!6664, !6665}
!6664 = !DILocalVariable(name: "insn", arg: 1, scope: !6662, file: !3, line: 4801, type: !638)
!6665 = !DILocalVariable(name: "new_pat", arg: 2, scope: !6662, file: !3, line: 4801, type: !638)
!6666 = !DILocation(line: 0, scope: !6662)
!6667 = !DILocation(line: 4803, column: 3, scope: !6662)
!6668 = !DILocation(line: 4806, column: 3, scope: !6662)
!6669 = !DILocation(line: 4806, column: 20, scope: !6662)
!6670 = !DILocation(line: 4808, column: 22, scope: !6662)
!6671 = !DILocation(line: 4808, column: 3, scope: !6662)
!6672 = !DILocation(line: 4808, column: 20, scope: !6662)
!6673 = !DILocation(line: 4809, column: 1, scope: !6662)
!6674 = distinct !DISubprogram(name: "change_queue_index", scope: !3, file: !3, line: 3884, type: !2169, scopeLine: 3885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6675)
!6675 = !{!6676, !6677, !6678}
!6676 = !DILocalVariable(name: "next", arg: 1, scope: !6674, file: !3, line: 3884, type: !638)
!6677 = !DILocalVariable(name: "delay", arg: 2, scope: !6674, file: !3, line: 3884, type: !631)
!6678 = !DILocalVariable(name: "i", scope: !6674, file: !3, line: 3886, type: !631)
!6679 = !DILocation(line: 0, scope: !6674)
!6680 = !DILocation(line: 3886, column: 11, scope: !6674)
!6681 = !DILocation(line: 3888, column: 3, scope: !6674)
!6682 = !DILocation(line: 3890, column: 3, scope: !6674)
!6683 = !DILocation(line: 3892, column: 14, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 3892, column: 7)
!6685 = !DILocation(line: 3892, column: 18, scope: !6684)
!6686 = !DILocation(line: 3892, column: 21, scope: !6684)
!6687 = !DILocation(line: 3892, column: 49, scope: !6684)
!6688 = !DILocation(line: 3893, column: 7, scope: !6684)
!6689 = !DILocation(line: 3893, column: 17, scope: !6684)
!6690 = !DILocation(line: 3893, column: 30, scope: !6684)
!6691 = !DILocation(line: 3893, column: 21, scope: !6684)
!6692 = !DILocation(line: 3898, column: 9, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 3898, column: 7)
!6694 = !DILocation(line: 3898, column: 7, scope: !6674)
!6695 = !DILocation(line: 3899, column: 5, scope: !6693)
!6696 = !DILocation(line: 3900, column: 14, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 3900, column: 12)
!6698 = !DILocation(line: 3900, column: 12, scope: !6693)
!6699 = !DILocation(line: 3901, column: 5, scope: !6697)
!6700 = !DILocation(line: 3904, column: 13, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 3904, column: 7)
!6702 = !DILocation(line: 3904, column: 7, scope: !6674)
!6703 = !DILocation(line: 3905, column: 5, scope: !6701)
!6704 = !DILocation(line: 3906, column: 12, scope: !6701)
!6705 = !DILocation(line: 3907, column: 5, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 3906, column: 12)
!6707 = !DILocation(line: 3909, column: 7, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 3909, column: 7)
!6709 = !DILocation(line: 3909, column: 21, scope: !6708)
!6710 = !DILocation(line: 3909, column: 7, scope: !6674)
!6711 = !DILocation(line: 3911, column: 16, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 3910, column: 5)
!6713 = !DILocation(line: 3912, column: 11, scope: !6712)
!6714 = !DILocation(line: 3912, column: 31, scope: !6712)
!6715 = !DILocation(line: 3912, column: 9, scope: !6712)
!6716 = !DILocation(line: 3911, column: 7, scope: !6712)
!6717 = !DILocation(line: 3914, column: 11, scope: !6712)
!6718 = !DILocation(line: 3915, column: 11, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 3914, column: 11)
!6720 = !DILocation(line: 3915, column: 2, scope: !6719)
!6721 = !DILocation(line: 0, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 3916, column: 16)
!6723 = !DILocation(line: 3916, column: 16, scope: !6719)
!6724 = !DILocation(line: 3917, column: 2, scope: !6722)
!6725 = !DILocation(line: 3919, column: 2, scope: !6722)
!6726 = !DILocation(line: 3921, column: 1, scope: !6674)
!6727 = distinct !DISubprogram(name: "adjust_priority", scope: !3, file: !3, line: 1521, type: !2116, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6728)
!6728 = !{!6729}
!6729 = !DILocalVariable(name: "prev", arg: 1, scope: !6727, file: !3, line: 1521, type: !638)
!6730 = !DILocation(line: 0, scope: !6727)
!6731 = !DILocation(line: 1530, column: 21, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 1530, column: 7)
!6733 = !DILocation(line: 1530, column: 7, scope: !6732)
!6734 = !DILocation(line: 1530, column: 7, scope: !6727)
!6735 = !DILocation(line: 1532, column: 44, scope: !6732)
!6736 = !DILocation(line: 1532, column: 7, scope: !6732)
!6737 = !DILocation(line: 1531, column: 5, scope: !6732)
!6738 = !DILocation(line: 1531, column: 26, scope: !6732)
!6739 = !DILocation(line: 1533, column: 1, scope: !6727)
!6740 = distinct !DISubprogram(name: "fix_tick_ready", scope: !3, file: !3, line: 3835, type: !2057, scopeLine: 3836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6741)
!6741 = !{!6742, !6743, !6744, !6745, !6748, !6749, !6750, !6754}
!6742 = !DILocalVariable(name: "next", arg: 1, scope: !6740, file: !3, line: 3835, type: !638)
!6743 = !DILocalVariable(name: "tick", scope: !6740, file: !3, line: 3837, type: !631)
!6744 = !DILocalVariable(name: "delay", scope: !6740, file: !3, line: 3837, type: !631)
!6745 = !DILocalVariable(name: "full_p", scope: !6746, file: !3, line: 3841, type: !631)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 3840, column: 5)
!6747 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 3839, column: 7)
!6748 = !DILocalVariable(name: "sd_it", scope: !6746, file: !3, line: 3842, type: !2252)
!6749 = !DILocalVariable(name: "dep", scope: !6746, file: !3, line: 3843, type: !2846)
!6750 = !DILocalVariable(name: "pro", scope: !6751, file: !3, line: 3853, type: !638)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 3852, column: 9)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 3851, column: 7)
!6753 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 3851, column: 7)
!6754 = !DILocalVariable(name: "tick1", scope: !6751, file: !3, line: 3854, type: !631)
!6755 = !DILocation(line: 0, scope: !6740)
!6756 = !DILocation(line: 3839, column: 8, scope: !6747)
!6757 = !DILocation(line: 3839, column: 7, scope: !6740)
!6758 = !DILocation(line: 3842, column: 7, scope: !6746)
!6759 = !DILocation(line: 3843, column: 7, scope: !6746)
!6760 = !DILocation(line: 3845, column: 14, scope: !6746)
!6761 = !DILocation(line: 3849, column: 25, scope: !6746)
!6762 = !DILocation(line: 3849, column: 22, scope: !6746)
!6763 = !DILocation(line: 0, scope: !6746)
!6764 = !DILocation(line: 3851, column: 7, scope: !6753)
!6765 = !DILocation(line: 0, scope: !6751)
!6766 = !DILocation(line: 3851, column: 7, scope: !6752)
!6767 = !DILocation(line: 3853, column: 21, scope: !6751)
!6768 = !DILocation(line: 3856, column: 4, scope: !6751)
!6769 = !DILocation(line: 3858, column: 19, scope: !6751)
!6770 = !DILocation(line: 3858, column: 47, scope: !6751)
!6771 = !DILocation(line: 3858, column: 37, scope: !6751)
!6772 = !DILocation(line: 3858, column: 35, scope: !6751)
!6773 = !DILocation(line: 3859, column: 21, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 3859, column: 15)
!6775 = !DILocation(line: 3859, column: 15, scope: !6751)
!6776 = distinct !{!6776, !6764, !6777}
!6777 = !DILocation(line: 3864, column: 9, scope: !6753)
!6778 = !DILocation(line: 3865, column: 5, scope: !6747)
!6779 = !DILocation(line: 3865, column: 5, scope: !6746)
!6780 = !DILocation(line: 0, scope: !6747)
!6781 = !DILocation(line: 3869, column: 3, scope: !6740)
!6782 = !DILocation(line: 3869, column: 20, scope: !6740)
!6783 = !DILocation(line: 3871, column: 18, scope: !6740)
!6784 = !DILocation(line: 3871, column: 16, scope: !6740)
!6785 = !DILocation(line: 3872, column: 13, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 3872, column: 7)
!6787 = !DILocation(line: 3872, column: 18, scope: !6786)
!6788 = !DILocation(line: 3872, column: 21, scope: !6786)
!6789 = !DILocation(line: 3872, column: 7, scope: !6740)
!6790 = !DILocation(line: 3873, column: 5, scope: !6786)
!6791 = !DILocation(line: 3875, column: 3, scope: !6740)
!6792 = !DILocation(line: 3877, column: 3, scope: !6740)
!6793 = distinct !DISubprogram(name: "sched_extend_ready_list", scope: !3, file: !3, line: 3927, type: !6794, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6796)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{null, !631}
!6796 = !{!6797, !6798}
!6797 = !DILocalVariable(name: "new_sched_ready_n_insns", arg: 1, scope: !6793, file: !3, line: 3927, type: !631)
!6798 = !DILocalVariable(name: "i", scope: !6793, file: !3, line: 3929, type: !631)
!6799 = !DILocation(line: 0, scope: !6793)
!6800 = !DILocation(line: 3931, column: 7, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 3931, column: 7)
!6802 = !DILocation(line: 3931, column: 27, scope: !6801)
!6803 = !DILocation(line: 3931, column: 7, scope: !6793)
!6804 = !DILocation(line: 3936, column: 27, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 3934, column: 5)
!6806 = !DILocation(line: 3937, column: 5, scope: !6805)
!6807 = !DILocation(line: 3939, column: 29, scope: !6801)
!6808 = !DILocation(line: 3941, column: 44, scope: !6793)
!6809 = !DILocation(line: 3941, column: 42, scope: !6793)
!6810 = !DILocation(line: 3941, column: 16, scope: !6793)
!6811 = !DILocation(line: 3942, column: 15, scope: !6793)
!6812 = !DILocation(line: 3942, column: 13, scope: !6793)
!6813 = !DILocation(line: 3944, column: 3, scope: !6793)
!6814 = !DILocation(line: 3947, column: 35, scope: !6793)
!6815 = !DILocation(line: 3946, column: 35, scope: !6793)
!6816 = !DILocation(line: 3946, column: 46, scope: !6793)
!6817 = !DILocation(line: 3946, column: 24, scope: !6793)
!6818 = !DILocation(line: 3946, column: 13, scope: !6793)
!6819 = !DILocation(line: 3951, column: 18, scope: !6793)
!6820 = !DILocation(line: 3951, column: 16, scope: !6793)
!6821 = !DILocation(line: 3954, column: 3, scope: !6793)
!6822 = !DILocation(line: 3954, column: 12, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 3954, column: 3)
!6824 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 3954, column: 3)
!6825 = !DILocation(line: 3954, column: 3, scope: !6824)
!6826 = !DILocation(line: 3955, column: 38, scope: !6823)
!6827 = !DILocation(line: 3955, column: 29, scope: !6823)
!6828 = !DILocation(line: 3955, column: 5, scope: !6823)
!6829 = !DILocation(line: 3955, column: 21, scope: !6823)
!6830 = !DILocation(line: 3955, column: 27, scope: !6823)
!6831 = !DILocation(line: 3954, column: 41, scope: !6823)
!6832 = !DILocation(line: 3954, column: 3, scope: !6823)
!6833 = distinct !{!6833, !6825, !6834}
!6834 = !DILocation(line: 3955, column: 52, scope: !6824)
!6835 = !DILocation(line: 3957, column: 23, scope: !6793)
!6836 = !DILocation(line: 3958, column: 1, scope: !6793)
!6837 = distinct !DISubprogram(name: "xrecalloc", scope: !3, file: !3, line: 4220, type: !6838, scopeLine: 4221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6840)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{!635, !635, !1110, !1110, !1110}
!6840 = !{!6841, !6842, !6843, !6844}
!6841 = !DILocalVariable(name: "p", arg: 1, scope: !6837, file: !3, line: 4220, type: !635)
!6842 = !DILocalVariable(name: "new_nmemb", arg: 2, scope: !6837, file: !3, line: 4220, type: !1110)
!6843 = !DILocalVariable(name: "old_nmemb", arg: 3, scope: !6837, file: !3, line: 4220, type: !1110)
!6844 = !DILocalVariable(name: "size", arg: 4, scope: !6837, file: !3, line: 4220, type: !1110)
!6845 = !DILocation(line: 0, scope: !6837)
!6846 = !DILocation(line: 4222, column: 3, scope: !6837)
!6847 = !DILocation(line: 4223, column: 7, scope: !6837)
!6848 = !DILocation(line: 4224, column: 36, scope: !6837)
!6849 = !DILocation(line: 4224, column: 24, scope: !6837)
!6850 = !DILocation(line: 4224, column: 58, scope: !6837)
!6851 = !DILocation(line: 4224, column: 71, scope: !6837)
!6852 = !DILocation(line: 4224, column: 3, scope: !6837)
!6853 = !DILocation(line: 4225, column: 3, scope: !6837)
!6854 = distinct !DISubprogram(name: "sched_finish_ready_list", scope: !3, file: !3, line: 3962, type: !2107, scopeLine: 3963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6855)
!6855 = !{!6856}
!6856 = !DILocalVariable(name: "i", scope: !6854, file: !3, line: 3964, type: !631)
!6857 = !DILocation(line: 3966, column: 15, scope: !6854)
!6858 = !DILocation(line: 3966, column: 3, scope: !6854)
!6859 = !DILocation(line: 3967, column: 13, scope: !6854)
!6860 = !DILocation(line: 3968, column: 16, scope: !6854)
!6861 = !DILocation(line: 3970, column: 9, scope: !6854)
!6862 = !DILocation(line: 3970, column: 3, scope: !6854)
!6863 = !DILocation(line: 3971, column: 13, scope: !6854)
!6864 = !DILocation(line: 0, scope: !6854)
!6865 = !DILocation(line: 3973, column: 8, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 3973, column: 3)
!6867 = !DILocation(line: 0, scope: !6866)
!6868 = !DILocation(line: 3973, column: 20, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 3973, column: 3)
!6870 = !DILocation(line: 3973, column: 17, scope: !6869)
!6871 = !DILocation(line: 3973, column: 3, scope: !6866)
!6872 = !DILocation(line: 3974, column: 28, scope: !6869)
!6873 = !DILocation(line: 3974, column: 5, scope: !6869)
!6874 = !DILocation(line: 3973, column: 42, scope: !6869)
!6875 = !DILocation(line: 3973, column: 3, scope: !6869)
!6876 = distinct !{!6876, !6871, !6877}
!6877 = !DILocation(line: 3974, column: 33, scope: !6866)
!6878 = !DILocation(line: 3975, column: 9, scope: !6854)
!6879 = !DILocation(line: 3975, column: 3, scope: !6854)
!6880 = !DILocation(line: 3976, column: 16, scope: !6854)
!6881 = !DILocation(line: 3978, column: 23, scope: !6854)
!6882 = !DILocation(line: 3979, column: 1, scope: !6854)
!6883 = distinct !DISubprogram(name: "find_fallthru_edge", scope: !3, file: !3, line: 4231, type: !6884, scopeLine: 4232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6886)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!1189, !1172}
!6886 = !{!6887, !6888, !6889, !6896}
!6887 = !DILocalVariable(name: "pred", arg: 1, scope: !6883, file: !3, line: 4231, type: !1172)
!6888 = !DILocalVariable(name: "e", scope: !6883, file: !3, line: 4233, type: !1189)
!6889 = !DILocalVariable(name: "ei", scope: !6883, file: !3, line: 4234, type: !6890)
!6890 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !155, line: 682, baseType: !6891)
!6891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !155, line: 679, size: 128, elements: !6892)
!6892 = !{!6893, !6894}
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6891, file: !155, line: 680, baseType: !7, size: 32)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !6891, file: !155, line: 681, baseType: !6895, size: 64, offset: 64)
!6895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!6896 = !DILocalVariable(name: "succ", scope: !6883, file: !3, line: 4235, type: !1172)
!6897 = !DILocation(line: 0, scope: !6883)
!6898 = !DILocation(line: 4233, column: 3, scope: !6883)
!6899 = !DILocation(line: 4234, column: 3, scope: !6883)
!6900 = !DILocation(line: 4237, column: 16, scope: !6883)
!6901 = !DILocation(line: 4238, column: 3, scope: !6883)
!6902 = !DILocation(line: 4240, column: 7, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 4240, column: 7)
!6904 = !DILocation(line: 4240, column: 35, scope: !6903)
!6905 = !DILocation(line: 4240, column: 32, scope: !6903)
!6906 = !DILocation(line: 4240, column: 7, scope: !6883)
!6907 = !DILocation(line: 4242, column: 7, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 4242, column: 7)
!6909 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 4241, column: 5)
!6910 = !DILocation(line: 0, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 4242, column: 7)
!6912 = !DILocation(line: 4242, column: 7, scope: !6911)
!6913 = !DILocation(line: 4243, column: 6, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 4243, column: 6)
!6915 = !DILocation(line: 4243, column: 9, scope: !6914)
!6916 = !DILocation(line: 4243, column: 15, scope: !6914)
!6917 = !DILocation(line: 4243, column: 6, scope: !6911)
!6918 = !DILocation(line: 4245, column: 6, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 4244, column: 4)
!6920 = !DILocation(line: 4246, column: 13, scope: !6919)
!6921 = !DILocation(line: 4246, column: 6, scope: !6919)
!6922 = distinct !{!6922, !6907, !6923}
!6923 = !DILocation(line: 4247, column: 4, scope: !6908)
!6924 = !DILocation(line: 4251, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 4251, column: 7)
!6926 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 4250, column: 5)
!6927 = !DILocation(line: 0, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 4251, column: 7)
!6929 = !DILocation(line: 4251, column: 7, scope: !6928)
!6930 = !DILocation(line: 4252, column: 6, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 4252, column: 6)
!6932 = !DILocation(line: 4252, column: 9, scope: !6931)
!6933 = !DILocation(line: 4252, column: 15, scope: !6931)
!6934 = !DILocation(line: 4252, column: 6, scope: !6928)
!6935 = !DILocation(line: 4254, column: 6, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 4253, column: 4)
!6937 = !DILocation(line: 4255, column: 13, scope: !6936)
!6938 = !DILocation(line: 4255, column: 6, scope: !6936)
!6939 = distinct !{!6939, !6924, !6940}
!6940 = !DILocation(line: 4256, column: 4, scope: !6925)
!6941 = !DILocation(line: 4260, column: 1, scope: !6883)
!6942 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !155, file: !155, line: 150, type: !6943, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6947)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!7, !6945}
!6945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6946, size: 64)
!6946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!6947 = !{!6948}
!6948 = !DILocalVariable(name: "vec_", arg: 1, scope: !6942, file: !155, line: 150, type: !6945)
!6949 = !DILocation(line: 0, scope: !6942)
!6950 = !DILocation(line: 150, column: 1, scope: !6942)
!6951 = distinct !DISubprogram(name: "ei_start_1", scope: !155, file: !155, line: 696, type: !6952, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6954)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{!6890, !6895}
!6954 = !{!6955, !6956}
!6955 = !DILocalVariable(name: "ev", arg: 1, scope: !6951, file: !155, line: 696, type: !6895)
!6956 = !DILocalVariable(name: "i", scope: !6951, file: !155, line: 698, type: !6890)
!6957 = !DILocation(line: 0, scope: !6951)
!6958 = !DILocation(line: 700, column: 5, scope: !6951)
!6959 = !DILocation(line: 700, column: 11, scope: !6951)
!6960 = !DILocation(line: 701, column: 5, scope: !6951)
!6961 = !DILocation(line: 701, column: 15, scope: !6951)
!6962 = !DILocation(line: 703, column: 3, scope: !6951)
!6963 = distinct !DISubprogram(name: "ei_cond", scope: !155, file: !155, line: 771, type: !6964, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6967)
!6964 = !DISubroutineType(types: !6965)
!6965 = !{!630, !6890, !6966}
!6966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!6967 = !{!6968, !6969}
!6968 = !DILocalVariable(name: "ei", arg: 1, scope: !6963, file: !155, line: 771, type: !6890)
!6969 = !DILocalVariable(name: "p", arg: 2, scope: !6963, file: !155, line: 771, type: !6966)
!6970 = !DILocation(line: 0, scope: !6963)
!6971 = !DILocation(line: 773, column: 8, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6963, file: !155, line: 773, column: 7)
!6973 = !DILocation(line: 773, column: 7, scope: !6963)
!6974 = !DILocation(line: 775, column: 12, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6972, file: !155, line: 774, column: 5)
!6976 = !DILocation(line: 776, column: 7, scope: !6975)
!6977 = !DILocation(line: 781, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6972, file: !155, line: 779, column: 5)
!6979 = !DILocation(line: 0, scope: !6972)
!6980 = !DILocation(line: 783, column: 1, scope: !6963)
!6981 = distinct !DISubprogram(name: "ei_next", scope: !155, file: !155, line: 736, type: !6982, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6985)
!6982 = !DISubroutineType(types: !6983)
!6983 = !{null, !6984}
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6985 = !{!6986}
!6986 = !DILocalVariable(name: "i", arg: 1, scope: !6981, file: !155, line: 736, type: !6984)
!6987 = !DILocation(line: 0, scope: !6981)
!6988 = !DILocation(line: 738, column: 3, scope: !6981)
!6989 = !DILocation(line: 739, column: 11, scope: !6981)
!6990 = !DILocation(line: 740, column: 1, scope: !6981)
!6991 = distinct !DISubprogram(name: "sched_extend_bb", scope: !3, file: !3, line: 4264, type: !2107, scopeLine: 4265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6992)
!6992 = !{!6993, !6994}
!6993 = !DILocalVariable(name: "insn", scope: !6991, file: !3, line: 4266, type: !638)
!6994 = !DILocalVariable(name: "note", scope: !6995, file: !3, line: 4276, type: !638)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4275, column: 5)
!6996 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 4270, column: 7)
!6997 = !DILocation(line: 4269, column: 10, scope: !6991)
!6998 = !DILocation(line: 0, scope: !6991)
!6999 = !DILocation(line: 4270, column: 7, scope: !6996)
!7000 = !DILocation(line: 4270, column: 24, scope: !6996)
!7001 = !DILocation(line: 4271, column: 7, scope: !6996)
!7002 = !DILocation(line: 4271, column: 12, scope: !6996)
!7003 = !DILocation(line: 4272, column: 4, scope: !6996)
!7004 = !DILocation(line: 4272, column: 8, scope: !6996)
!7005 = !DILocation(line: 4274, column: 4, scope: !6996)
!7006 = !DILocation(line: 4274, column: 8, scope: !6996)
!7007 = !DILocation(line: 4270, column: 7, scope: !6991)
!7008 = !DILocation(line: 4276, column: 18, scope: !6995)
!7009 = !DILocation(line: 0, scope: !6995)
!7010 = !DILocation(line: 4278, column: 7, scope: !6995)
!7011 = !DILocation(line: 4279, column: 7, scope: !6995)
!7012 = !DILocation(line: 4279, column: 40, scope: !6995)
!7013 = !DILocation(line: 4280, column: 5, scope: !6995)
!7014 = !DILocation(line: 4281, column: 1, scope: !6991)
!7015 = distinct !DISubprogram(name: "sched_create_recovery_block", scope: !3, file: !3, line: 4370, type: !7016, scopeLine: 4371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7018)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{!1172, !3941}
!7018 = !{!7019, !7020, !7021, !7022, !7023}
!7019 = !DILocalVariable(name: "before_recovery_ptr", arg: 1, scope: !7015, file: !3, line: 4370, type: !3941)
!7020 = !DILocalVariable(name: "label", scope: !7015, file: !3, line: 4372, type: !638)
!7021 = !DILocalVariable(name: "barrier", scope: !7015, file: !3, line: 4373, type: !638)
!7022 = !DILocalVariable(name: "rec", scope: !7015, file: !3, line: 4374, type: !1172)
!7023 = !DILocalVariable(name: "bb_", scope: !7024, file: !3, line: 4392, type: !1172)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 4392, column: 5)
!7025 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 4391, column: 7)
!7026 = !DILocation(line: 0, scope: !7015)
!7027 = !DILocation(line: 4376, column: 38, scope: !7015)
!7028 = !DILocation(line: 4377, column: 34, scope: !7015)
!7029 = !DILocation(line: 4379, column: 3, scope: !7015)
!7030 = !DILocation(line: 4381, column: 31, scope: !7015)
!7031 = !DILocation(line: 4381, column: 13, scope: !7015)
!7032 = !DILocation(line: 4382, column: 3, scope: !7015)
!7033 = !DILocation(line: 4384, column: 29, scope: !7015)
!7034 = !DILocation(line: 4384, column: 11, scope: !7015)
!7035 = !DILocation(line: 4386, column: 29, scope: !7015)
!7036 = !DILocation(line: 4386, column: 43, scope: !7015)
!7037 = !DILocation(line: 4386, column: 9, scope: !7015)
!7038 = !DILocation(line: 4389, column: 23, scope: !7015)
!7039 = !DILocation(line: 4389, column: 3, scope: !7015)
!7040 = !DILocation(line: 4391, column: 7, scope: !7025)
!7041 = !DILocation(line: 4391, column: 38, scope: !7025)
!7042 = !DILocation(line: 4391, column: 7, scope: !7015)
!7043 = !DILocation(line: 0, scope: !7024)
!7044 = !DILocation(line: 4392, column: 5, scope: !7024)
!7045 = !DILocation(line: 4394, column: 7, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 4394, column: 7)
!7047 = !DILocation(line: 4394, column: 21, scope: !7046)
!7048 = !DILocation(line: 4394, column: 24, scope: !7046)
!7049 = !DILocation(line: 4394, column: 35, scope: !7046)
!7050 = !DILocation(line: 4394, column: 7, scope: !7015)
!7051 = !DILocation(line: 4396, column: 19, scope: !7046)
!7052 = !DILocation(line: 4395, column: 5, scope: !7046)
!7053 = !DILocation(line: 4398, column: 3, scope: !7015)
!7054 = distinct !DISubprogram(name: "init_before_recovery", scope: !3, file: !3, line: 4292, type: !3939, scopeLine: 4293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7055)
!7055 = !{!7056, !7057, !7058, !7059, !7062, !7063, !7064, !7065, !7067}
!7056 = !DILocalVariable(name: "before_recovery_ptr", arg: 1, scope: !7054, file: !3, line: 4292, type: !3941)
!7057 = !DILocalVariable(name: "last", scope: !7054, file: !3, line: 4294, type: !1172)
!7058 = !DILocalVariable(name: "e", scope: !7054, file: !3, line: 4295, type: !1189)
!7059 = !DILocalVariable(name: "single", scope: !7060, file: !3, line: 4308, type: !1172)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 4301, column: 5)
!7061 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 4300, column: 7)
!7062 = !DILocalVariable(name: "empty", scope: !7060, file: !3, line: 4308, type: !1172)
!7063 = !DILocalVariable(name: "x", scope: !7060, file: !3, line: 4309, type: !638)
!7064 = !DILocalVariable(name: "label", scope: !7060, file: !3, line: 4309, type: !638)
!7065 = !DILocalVariable(name: "bb_", scope: !7066, file: !3, line: 4332, type: !1172)
!7066 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 4332, column: 7)
!7067 = !DILocalVariable(name: "bb_", scope: !7068, file: !3, line: 4333, type: !1172)
!7068 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 4333, column: 7)
!7069 = !DILocation(line: 0, scope: !7054)
!7070 = !DILocation(line: 4297, column: 10, scope: !7054)
!7071 = !DILocation(line: 4297, column: 26, scope: !7054)
!7072 = !DILocation(line: 4298, column: 7, scope: !7054)
!7073 = !DILocation(line: 4300, column: 7, scope: !7061)
!7074 = !DILocation(line: 4300, column: 7, scope: !7054)
!7075 = !DILocation(line: 4313, column: 19, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 4313, column: 11)
!7077 = !DILocation(line: 4313, column: 16, scope: !7076)
!7078 = !DILocation(line: 4313, column: 11, scope: !7060)
!7079 = !DILocation(line: 4316, column: 37, scope: !7060)
!7080 = !DILocation(line: 4318, column: 16, scope: !7060)
!7081 = !DILocation(line: 0, scope: !7060)
!7082 = !DILocation(line: 4319, column: 15, scope: !7060)
!7083 = !DILocation(line: 4322, column: 11, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 4322, column: 11)
!7085 = !DILocation(line: 4322, column: 25, scope: !7084)
!7086 = !DILocation(line: 4322, column: 11, scope: !7060)
!7087 = !DILocation(line: 4324, column: 28, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 4323, column: 2)
!7089 = !DILocation(line: 4324, column: 4, scope: !7088)
!7090 = !DILocation(line: 4325, column: 27, scope: !7088)
!7091 = !DILocation(line: 4325, column: 4, scope: !7088)
!7092 = !DILocation(line: 4326, column: 2, scope: !7088)
!7093 = !DILocation(line: 4328, column: 29, scope: !7060)
!7094 = !DILocation(line: 4328, column: 15, scope: !7060)
!7095 = !DILocation(line: 4328, column: 21, scope: !7060)
!7096 = !DILocation(line: 4329, column: 28, scope: !7060)
!7097 = !DILocation(line: 4329, column: 14, scope: !7060)
!7098 = !DILocation(line: 4329, column: 20, scope: !7060)
!7099 = !DILocation(line: 4330, column: 33, scope: !7060)
!7100 = !DILocation(line: 4330, column: 15, scope: !7060)
!7101 = !DILocation(line: 4330, column: 25, scope: !7060)
!7102 = !DILocation(line: 4331, column: 32, scope: !7060)
!7103 = !DILocation(line: 4331, column: 14, scope: !7060)
!7104 = !DILocation(line: 4331, column: 24, scope: !7060)
!7105 = !DILocation(line: 0, scope: !7066)
!7106 = !DILocation(line: 4332, column: 7, scope: !7066)
!7107 = !DILocation(line: 0, scope: !7068)
!7108 = !DILocation(line: 4333, column: 7, scope: !7068)
!7109 = !DILocation(line: 4335, column: 7, scope: !7060)
!7110 = !DILocation(line: 4336, column: 7, scope: !7060)
!7111 = !DILocation(line: 4337, column: 37, scope: !7060)
!7112 = !DILocation(line: 4337, column: 7, scope: !7060)
!7113 = !DILocation(line: 4340, column: 15, scope: !7060)
!7114 = !DILocation(line: 4341, column: 33, scope: !7060)
!7115 = !DILocation(line: 4341, column: 51, scope: !7060)
!7116 = !DILocation(line: 4341, column: 11, scope: !7060)
!7117 = !DILocation(line: 4342, column: 7, scope: !7060)
!7118 = !DILocation(line: 4342, column: 22, scope: !7060)
!7119 = !DILocation(line: 4343, column: 7, scope: !7060)
!7120 = !DILocation(line: 4343, column: 26, scope: !7060)
!7121 = !DILocation(line: 4344, column: 7, scope: !7060)
!7122 = !DILocation(line: 4346, column: 7, scope: !7060)
!7123 = !DILocation(line: 4348, column: 7, scope: !7060)
!7124 = !DILocation(line: 4349, column: 7, scope: !7060)
!7125 = !DILocation(line: 4350, column: 7, scope: !7060)
!7126 = !DILocation(line: 4352, column: 37, scope: !7060)
!7127 = !DILocation(line: 4353, column: 23, scope: !7060)
!7128 = !DILocation(line: 4354, column: 22, scope: !7060)
!7129 = !DILocation(line: 4356, column: 11, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 4356, column: 11)
!7131 = !DILocation(line: 4356, column: 11, scope: !7060)
!7132 = !DILocation(line: 4357, column: 30, scope: !7130)
!7133 = !DILocation(line: 4357, column: 9, scope: !7130)
!7134 = !DILocation(line: 4359, column: 11, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 4359, column: 11)
!7136 = !DILocation(line: 4359, column: 25, scope: !7135)
!7137 = !DILocation(line: 4359, column: 30, scope: !7135)
!7138 = !DILocation(line: 4359, column: 33, scope: !7135)
!7139 = !DILocation(line: 4359, column: 44, scope: !7135)
!7140 = !DILocation(line: 4359, column: 11, scope: !7060)
!7141 = !DILocation(line: 4362, column: 24, scope: !7135)
!7142 = !DILocation(line: 4362, column: 39, scope: !7135)
!7143 = !DILocation(line: 4362, column: 53, scope: !7135)
!7144 = !DILocation(line: 4360, column: 9, scope: !7135)
!7145 = !DILocation(line: 4365, column: 21, scope: !7061)
!7146 = !DILocation(line: 4366, column: 1, scope: !7054)
!7147 = distinct !DISubprogram(name: "sched_create_recovery_edges", scope: !3, file: !3, line: 4404, type: !7148, scopeLine: 4406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7150)
!7148 = !DISubroutineType(types: !7149)
!7149 = !{null, !1172, !1172, !1172}
!7150 = !{!7151, !7152, !7153, !7154, !7155, !7156}
!7151 = !DILocalVariable(name: "first_bb", arg: 1, scope: !7147, file: !3, line: 4404, type: !1172)
!7152 = !DILocalVariable(name: "rec", arg: 2, scope: !7147, file: !3, line: 4404, type: !1172)
!7153 = !DILocalVariable(name: "second_bb", arg: 3, scope: !7147, file: !3, line: 4405, type: !1172)
!7154 = !DILocalVariable(name: "label", scope: !7147, file: !3, line: 4407, type: !638)
!7155 = !DILocalVariable(name: "jump", scope: !7147, file: !3, line: 4408, type: !638)
!7156 = !DILocalVariable(name: "edge_flags", scope: !7147, file: !3, line: 4409, type: !631)
!7157 = !DILocation(line: 0, scope: !7147)
!7158 = !DILocation(line: 4413, column: 7, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 4413, column: 7)
!7160 = !DILocation(line: 4413, column: 34, scope: !7159)
!7161 = !DILocation(line: 4413, column: 31, scope: !7159)
!7162 = !DILocation(line: 4419, column: 3, scope: !7147)
!7163 = !DILocation(line: 4420, column: 11, scope: !7147)
!7164 = !DILocation(line: 4421, column: 32, scope: !7147)
!7165 = !DILocation(line: 4421, column: 50, scope: !7147)
!7166 = !DILocation(line: 4421, column: 10, scope: !7147)
!7167 = !DILocation(line: 4422, column: 3, scope: !7147)
!7168 = !DILocation(line: 4422, column: 21, scope: !7147)
!7169 = !DILocation(line: 4423, column: 3, scope: !7147)
!7170 = !DILocation(line: 4423, column: 22, scope: !7147)
!7171 = !DILocation(line: 4425, column: 7, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 4425, column: 7)
!7173 = !DILocation(line: 4425, column: 35, scope: !7172)
!7174 = !DILocation(line: 4425, column: 32, scope: !7172)
!7175 = !DILocation(line: 4425, column: 7, scope: !7147)
!7176 = !DILocation(line: 4429, column: 11, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4429, column: 11)
!7178 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 4427, column: 5)
!7179 = !DILocation(line: 4430, column: 4, scope: !7177)
!7180 = !DILocation(line: 4430, column: 15, scope: !7177)
!7181 = !DILocation(line: 4430, column: 7, scope: !7177)
!7182 = !DILocation(line: 4429, column: 11, scope: !7178)
!7183 = !DILocation(line: 4434, column: 4, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 4431, column: 2)
!7185 = !DILocation(line: 4435, column: 2, scope: !7184)
!7186 = !DILocation(line: 0, scope: !7172)
!7187 = !DILocation(line: 4441, column: 3, scope: !7147)
!7188 = !DILocation(line: 4442, column: 1, scope: !7147)
!7189 = distinct !DISubprogram(name: "sched_change_pattern", scope: !3, file: !3, line: 4789, type: !2173, scopeLine: 4790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7190)
!7190 = !{!7191, !7192, !7193}
!7191 = !DILocalVariable(name: "insn", arg: 1, scope: !7189, file: !3, line: 4789, type: !638)
!7192 = !DILocalVariable(name: "new_pat", arg: 2, scope: !7189, file: !3, line: 4789, type: !638)
!7193 = !DILocalVariable(name: "t", scope: !7189, file: !3, line: 4791, type: !631)
!7194 = !DILocation(line: 0, scope: !7189)
!7195 = !DILocation(line: 4793, column: 31, scope: !7189)
!7196 = !DILocation(line: 4793, column: 7, scope: !7189)
!7197 = !DILocation(line: 4794, column: 3, scope: !7189)
!7198 = !DILocation(line: 4795, column: 3, scope: !7189)
!7199 = !DILocation(line: 4796, column: 1, scope: !7189)
!7200 = distinct !DISubprogram(name: "sched_speculate_insn", scope: !3, file: !3, line: 4816, type: !6646, scopeLine: 4817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7201)
!7201 = !{!7202, !7203, !7204}
!7202 = !DILocalVariable(name: "insn", arg: 1, scope: !7200, file: !3, line: 4816, type: !638)
!7203 = !DILocalVariable(name: "request", arg: 2, scope: !7200, file: !3, line: 4816, type: !1865)
!7204 = !DILocalVariable(name: "new_pat", arg: 3, scope: !7200, file: !3, line: 4816, type: !1864)
!7205 = !DILocation(line: 0, scope: !7200)
!7206 = !DILocation(line: 4818, column: 3, scope: !7200)
!7207 = !DILocation(line: 4822, column: 18, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 4822, column: 7)
!7209 = !DILocation(line: 4822, column: 29, scope: !7208)
!7210 = !DILocation(line: 4822, column: 16, scope: !7208)
!7211 = !DILocation(line: 4822, column: 35, scope: !7208)
!7212 = !DILocation(line: 4822, column: 7, scope: !7200)
!7213 = !DILocation(line: 4825, column: 15, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 4825, column: 7)
!7215 = !DILocation(line: 4826, column: 20, scope: !7214)
!7216 = !DILocation(line: 4826, column: 7, scope: !7214)
!7217 = !DILocation(line: 4829, column: 24, scope: !7200)
!7218 = !DILocation(line: 4829, column: 10, scope: !7200)
!7219 = !DILocation(line: 4829, column: 3, scope: !7200)
!7220 = !DILocation(line: 4830, column: 1, scope: !7200)
!7221 = distinct !DISubprogram(name: "unlink_bb_notes", scope: !3, file: !3, line: 4875, type: !2049, scopeLine: 4876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7222)
!7222 = !{!7223, !7224, !7225, !7227, !7228, !7229}
!7223 = !DILocalVariable(name: "first", arg: 1, scope: !7221, file: !3, line: 4875, type: !1172)
!7224 = !DILocalVariable(name: "last", arg: 2, scope: !7221, file: !3, line: 4875, type: !1172)
!7225 = !DILocalVariable(name: "prev", scope: !7226, file: !3, line: 4890, type: !638)
!7226 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4889, column: 5)
!7227 = !DILocalVariable(name: "label", scope: !7226, file: !3, line: 4890, type: !638)
!7228 = !DILocalVariable(name: "note", scope: !7226, file: !3, line: 4890, type: !638)
!7229 = !DILocalVariable(name: "next", scope: !7226, file: !3, line: 4890, type: !638)
!7230 = !DILocation(line: 0, scope: !7221)
!7231 = !DILocation(line: 4878, column: 13, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4878, column: 7)
!7233 = !DILocation(line: 4878, column: 7, scope: !7221)
!7234 = !DILocation(line: 4881, column: 15, scope: !7221)
!7235 = !DILocation(line: 4881, column: 13, scope: !7221)
!7236 = !DILocation(line: 4884, column: 13, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4884, column: 7)
!7238 = !DILocation(line: 4884, column: 24, scope: !7237)
!7239 = !DILocation(line: 4884, column: 21, scope: !7237)
!7240 = !DILocation(line: 4884, column: 7, scope: !7221)
!7241 = !DILocation(line: 4885, column: 30, scope: !7237)
!7242 = !DILocation(line: 4885, column: 5, scope: !7237)
!7243 = !DILocation(line: 4885, column: 37, scope: !7237)
!7244 = !DILocation(line: 4887, column: 18, scope: !7221)
!7245 = !DILocation(line: 4888, column: 3, scope: !7221)
!7246 = !DILocation(line: 4892, column: 15, scope: !7226)
!7247 = !DILocation(line: 0, scope: !7226)
!7248 = !DILocation(line: 4893, column: 11, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 4893, column: 11)
!7250 = !DILocation(line: 4893, column: 11, scope: !7226)
!7251 = !DILocation(line: 4894, column: 9, scope: !7249)
!7252 = !DILocation(line: 4897, column: 7, scope: !7226)
!7253 = !DILocation(line: 4894, column: 2, scope: !7249)
!7254 = !DILocation(line: 0, scope: !7249)
!7255 = !DILocation(line: 4899, column: 14, scope: !7226)
!7256 = !DILocation(line: 4900, column: 14, scope: !7226)
!7257 = !DILocation(line: 4901, column: 7, scope: !7226)
!7258 = !DILocation(line: 4903, column: 7, scope: !7226)
!7259 = !DILocation(line: 4903, column: 24, scope: !7226)
!7260 = !DILocation(line: 4904, column: 7, scope: !7226)
!7261 = !DILocation(line: 4904, column: 24, scope: !7226)
!7262 = !DILocation(line: 4906, column: 7, scope: !7226)
!7263 = !DILocation(line: 4906, column: 23, scope: !7226)
!7264 = !DILocation(line: 4906, column: 30, scope: !7226)
!7265 = !DILocation(line: 4908, column: 16, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 4908, column: 11)
!7267 = !DILocation(line: 4908, column: 11, scope: !7226)
!7268 = !DILocation(line: 4911, column: 20, scope: !7226)
!7269 = !DILocation(line: 4912, column: 5, scope: !7221)
!7270 = !DILocation(line: 4914, column: 1, scope: !7221)
!7271 = distinct !DISubprogram(name: "sched_scan", scope: !3, file: !3, line: 5307, type: !7272, scopeLine: 5309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7274)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{null, !2101, !5825, !1172, !5826, !638}
!7274 = !{!7275, !7276, !7277, !7278, !7279, !7280, !7285, !7286, !7289, !7290, !7293}
!7275 = !DILocalVariable(name: "ssi", arg: 1, scope: !7271, file: !3, line: 5307, type: !2101)
!7276 = !DILocalVariable(name: "bbs", arg: 2, scope: !7271, file: !3, line: 5308, type: !5825)
!7277 = !DILocalVariable(name: "bb", arg: 3, scope: !7271, file: !3, line: 5308, type: !1172)
!7278 = !DILocalVariable(name: "insns", arg: 4, scope: !7271, file: !3, line: 5308, type: !5826)
!7279 = !DILocalVariable(name: "insn", arg: 5, scope: !7271, file: !3, line: 5308, type: !638)
!7280 = !DILocalVariable(name: "i", scope: !7281, file: !3, line: 5318, type: !7)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 5317, column: 2)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 5316, column: 11)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 5313, column: 5)
!7284 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 5312, column: 7)
!7285 = !DILocalVariable(name: "x", scope: !7281, file: !3, line: 5319, type: !1172)
!7286 = !DILocalVariable(name: "i", scope: !7287, file: !3, line: 5333, type: !7)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 5332, column: 5)
!7288 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 5331, column: 7)
!7289 = !DILocalVariable(name: "x", scope: !7287, file: !3, line: 5334, type: !1172)
!7290 = !DILocalVariable(name: "i", scope: !7291, file: !3, line: 5345, type: !7)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 5344, column: 5)
!7292 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 5343, column: 7)
!7293 = !DILocalVariable(name: "x", scope: !7291, file: !3, line: 5346, type: !638)
!7294 = !DILocation(line: 0, scope: !7271)
!7295 = !DILocation(line: 5310, column: 19, scope: !7271)
!7296 = !DILocation(line: 5312, column: 11, scope: !7284)
!7297 = !DILocation(line: 5312, column: 25, scope: !7284)
!7298 = !DILocation(line: 5312, column: 19, scope: !7284)
!7299 = !DILocation(line: 5314, column: 7, scope: !7283)
!7300 = !DILocation(line: 5316, column: 15, scope: !7282)
!7301 = !DILocation(line: 5316, column: 11, scope: !7283)
!7302 = !DILocation(line: 5319, column: 4, scope: !7281)
!7303 = !DILocation(line: 0, scope: !7281)
!7304 = !DILocation(line: 0, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 5321, column: 4)
!7306 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 5321, column: 4)
!7307 = !DILocation(line: 5321, column: 9, scope: !7306)
!7308 = !DILocation(line: 0, scope: !7306)
!7309 = !DILocation(line: 5321, column: 16, scope: !7305)
!7310 = !DILocation(line: 5321, column: 4, scope: !7306)
!7311 = !DILocation(line: 5322, column: 15, scope: !7305)
!7312 = !DILocation(line: 5322, column: 6, scope: !7305)
!7313 = !DILocation(line: 5321, column: 55, scope: !7305)
!7314 = !DILocation(line: 5321, column: 4, scope: !7305)
!7315 = distinct !{!7315, !7310, !7316}
!7316 = !DILocation(line: 5322, column: 16, scope: !7306)
!7317 = !DILocation(line: 5323, column: 2, scope: !7282)
!7318 = !DILocation(line: 5323, column: 2, scope: !7281)
!7319 = !DILocation(line: 5325, column: 14, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 5325, column: 11)
!7321 = !DILocation(line: 5325, column: 11, scope: !7283)
!7322 = !DILocation(line: 5326, column: 2, scope: !7320)
!7323 = !DILocation(line: 5329, column: 3, scope: !7271)
!7324 = !DILocation(line: 5331, column: 11, scope: !7288)
!7325 = !DILocation(line: 5331, column: 7, scope: !7271)
!7326 = !DILocation(line: 5334, column: 7, scope: !7287)
!7327 = !DILocation(line: 0, scope: !7287)
!7328 = !DILocation(line: 0, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 5336, column: 7)
!7330 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 5336, column: 7)
!7331 = !DILocation(line: 5336, column: 12, scope: !7330)
!7332 = !DILocation(line: 0, scope: !7330)
!7333 = !DILocation(line: 5336, column: 19, scope: !7329)
!7334 = !DILocation(line: 5336, column: 7, scope: !7330)
!7335 = !DILocation(line: 5337, column: 20, scope: !7329)
!7336 = !DILocation(line: 5337, column: 2, scope: !7329)
!7337 = !DILocation(line: 5336, column: 58, scope: !7329)
!7338 = !DILocation(line: 5336, column: 7, scope: !7329)
!7339 = distinct !{!7339, !7334, !7340}
!7340 = !DILocation(line: 5337, column: 21, scope: !7330)
!7341 = !DILocation(line: 5338, column: 5, scope: !7288)
!7342 = !DILocation(line: 5338, column: 5, scope: !7287)
!7343 = !DILocation(line: 5340, column: 10, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 5340, column: 7)
!7345 = !DILocation(line: 5340, column: 7, scope: !7271)
!7346 = !DILocation(line: 5341, column: 5, scope: !7344)
!7347 = !DILocation(line: 5343, column: 13, scope: !7292)
!7348 = !DILocation(line: 5343, column: 7, scope: !7271)
!7349 = !DILocation(line: 5346, column: 7, scope: !7291)
!7350 = !DILocation(line: 0, scope: !7291)
!7351 = !DILocation(line: 0, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 5348, column: 7)
!7353 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 5348, column: 7)
!7354 = !DILocation(line: 5348, column: 12, scope: !7353)
!7355 = !DILocation(line: 0, scope: !7353)
!7356 = !DILocation(line: 5348, column: 19, scope: !7352)
!7357 = !DILocation(line: 5348, column: 7, scope: !7353)
!7358 = !DILocation(line: 5349, column: 13, scope: !7352)
!7359 = !DILocation(line: 5349, column: 2, scope: !7352)
!7360 = !DILocation(line: 5348, column: 52, scope: !7352)
!7361 = !DILocation(line: 5348, column: 7, scope: !7352)
!7362 = distinct !{!7362, !7357, !7363}
!7363 = !DILocation(line: 5349, column: 14, scope: !7353)
!7364 = !DILocation(line: 5350, column: 5, scope: !7292)
!7365 = !DILocation(line: 5350, column: 5, scope: !7291)
!7366 = !DILocation(line: 5352, column: 12, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 5352, column: 7)
!7368 = !DILocation(line: 5352, column: 7, scope: !7271)
!7369 = !DILocation(line: 5353, column: 5, scope: !7367)
!7370 = !DILocation(line: 5354, column: 1, scope: !7271)
!7371 = distinct !DISubprogram(name: "extend_bb", scope: !3, file: !3, line: 5263, type: !2107, scopeLine: 5264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!7372 = !DILocation(line: 5265, column: 7, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 5265, column: 7)
!7374 = !DILocation(line: 5265, column: 24, scope: !7373)
!7375 = !DILocation(line: 5265, column: 7, scope: !7371)
!7376 = !DILocation(line: 5266, column: 5, scope: !7373)
!7377 = !DILocation(line: 5267, column: 1, scope: !7371)
!7378 = distinct !DISubprogram(name: "VEC_basic_block_base_iterate", scope: !155, file: !155, line: 281, type: !7379, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7383)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{!631, !7381, !7, !3941}
!7381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7382, size: 64)
!7382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1309)
!7383 = !{!7384, !7385, !7386}
!7384 = !DILocalVariable(name: "vec_", arg: 1, scope: !7378, file: !155, line: 281, type: !7381)
!7385 = !DILocalVariable(name: "ix_", arg: 2, scope: !7378, file: !155, line: 281, type: !7)
!7386 = !DILocalVariable(name: "ptr", arg: 3, scope: !7378, file: !155, line: 281, type: !3941)
!7387 = !DILocation(line: 0, scope: !7378)
!7388 = !DILocation(line: 281, column: 1, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7378, file: !155, line: 281, column: 1)
!7390 = !DILocation(line: 281, column: 1, scope: !7378)
!7391 = !DILocation(line: 281, column: 1, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7389, file: !155, line: 281, column: 1)
!7393 = !DILocation(line: 281, column: 1, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7389, file: !155, line: 281, column: 1)
!7395 = !DILocation(line: 0, scope: !7389)
!7396 = distinct !DISubprogram(name: "init_bb", scope: !3, file: !3, line: 5271, type: !2111, scopeLine: 5272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7397)
!7397 = !{!7398}
!7398 = !DILocalVariable(name: "bb", arg: 1, scope: !7396, file: !3, line: 5271, type: !1172)
!7399 = !DILocation(line: 0, scope: !7396)
!7400 = !DILocation(line: 5273, column: 7, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 5273, column: 7)
!7402 = !DILocation(line: 5273, column: 24, scope: !7401)
!7403 = !DILocation(line: 5273, column: 7, scope: !7396)
!7404 = !DILocation(line: 5274, column: 5, scope: !7401)
!7405 = !DILocation(line: 5275, column: 1, scope: !7396)
!7406 = distinct !DISubprogram(name: "extend_insn", scope: !3, file: !3, line: 5279, type: !2107, scopeLine: 5280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!7407 = !DILocation(line: 5281, column: 7, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 5281, column: 7)
!7409 = !DILocation(line: 5281, column: 24, scope: !7408)
!7410 = !DILocation(line: 5281, column: 7, scope: !7406)
!7411 = !DILocation(line: 5282, column: 5, scope: !7408)
!7412 = !DILocation(line: 5283, column: 1, scope: !7406)
!7413 = distinct !DISubprogram(name: "init_insns_in_bb", scope: !3, file: !3, line: 5295, type: !2111, scopeLine: 5296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7414)
!7414 = !{!7415, !7416}
!7415 = !DILocalVariable(name: "bb", arg: 1, scope: !7413, file: !3, line: 5295, type: !1172)
!7416 = !DILocalVariable(name: "insn", scope: !7413, file: !3, line: 5297, type: !638)
!7417 = !DILocation(line: 0, scope: !7413)
!7418 = !DILocation(line: 5299, column: 3, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 5299, column: 3)
!7420 = !DILocation(line: 0, scope: !7419)
!7421 = !DILocation(line: 5299, column: 3, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 5299, column: 3)
!7423 = !DILocation(line: 5300, column: 5, scope: !7422)
!7424 = distinct !{!7424, !7418, !7425}
!7425 = !DILocation(line: 5300, column: 20, scope: !7419)
!7426 = !DILocation(line: 5301, column: 1, scope: !7413)
!7427 = distinct !DISubprogram(name: "VEC_rtx_base_iterate", scope: !406, file: !406, line: 200, type: !7428, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7432)
!7428 = !DISubroutineType(types: !7429)
!7429 = !{!631, !7430, !7, !1864}
!7430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7431, size: 64)
!7431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!7432 = !{!7433, !7434, !7435}
!7433 = !DILocalVariable(name: "vec_", arg: 1, scope: !7427, file: !406, line: 200, type: !7430)
!7434 = !DILocalVariable(name: "ix_", arg: 2, scope: !7427, file: !406, line: 200, type: !7)
!7435 = !DILocalVariable(name: "ptr", arg: 3, scope: !7427, file: !406, line: 200, type: !1864)
!7436 = !DILocation(line: 0, scope: !7427)
!7437 = !DILocation(line: 200, column: 1, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7427, file: !406, line: 200, column: 1)
!7439 = !DILocation(line: 200, column: 1, scope: !7427)
!7440 = !DILocation(line: 200, column: 1, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7438, file: !406, line: 200, column: 1)
!7442 = !DILocation(line: 200, column: 1, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7438, file: !406, line: 200, column: 1)
!7444 = !DILocation(line: 0, scope: !7438)
!7445 = distinct !DISubprogram(name: "init_insn", scope: !3, file: !3, line: 5287, type: !2116, scopeLine: 5288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7446)
!7446 = !{!7447}
!7447 = !DILocalVariable(name: "insn", arg: 1, scope: !7445, file: !3, line: 5287, type: !638)
!7448 = !DILocation(line: 0, scope: !7445)
!7449 = !DILocation(line: 5289, column: 7, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 5289, column: 7)
!7451 = !DILocation(line: 5289, column: 24, scope: !7450)
!7452 = !DILocation(line: 5289, column: 7, scope: !7445)
!7453 = !DILocation(line: 5290, column: 5, scope: !7450)
!7454 = !DILocation(line: 5291, column: 1, scope: !7445)
!7455 = distinct !DISubprogram(name: "luids_extend_insn", scope: !3, file: !3, line: 5359, type: !2107, scopeLine: 5360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7456)
!7456 = !{!7457}
!7457 = !DILocalVariable(name: "new_luids_max_uid", scope: !7455, file: !3, line: 5361, type: !631)
!7458 = !DILocation(line: 5361, column: 27, scope: !7455)
!7459 = !DILocation(line: 5361, column: 42, scope: !7455)
!7460 = !DILocation(line: 0, scope: !7455)
!7461 = !DILocation(line: 5363, column: 3, scope: !7455)
!7462 = !DILocation(line: 5364, column: 1, scope: !7455)
!7463 = distinct !DISubprogram(name: "luids_init_insn", scope: !3, file: !3, line: 5368, type: !2116, scopeLine: 5369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7464)
!7464 = !{!7465, !7466, !7467}
!7465 = !DILocalVariable(name: "insn", arg: 1, scope: !7463, file: !3, line: 5368, type: !638)
!7466 = !DILocalVariable(name: "i", scope: !7463, file: !3, line: 5370, type: !631)
!7467 = !DILocalVariable(name: "luid", scope: !7463, file: !3, line: 5371, type: !631)
!7468 = !DILocation(line: 0, scope: !7463)
!7469 = !DILocation(line: 5370, column: 11, scope: !7463)
!7470 = !DILocation(line: 5370, column: 31, scope: !7463)
!7471 = !DILocation(line: 5370, column: 50, scope: !7463)
!7472 = !DILocation(line: 5373, column: 9, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 5373, column: 7)
!7474 = !DILocation(line: 5373, column: 7, scope: !7463)
!7475 = !DILocation(line: 5375, column: 14, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 5374, column: 5)
!7477 = !DILocation(line: 5376, column: 22, scope: !7476)
!7478 = !DILocation(line: 5377, column: 5, scope: !7476)
!7479 = !DILocation(line: 0, scope: !7473)
!7480 = !DILocation(line: 5381, column: 3, scope: !7463)
!7481 = !DILocation(line: 5382, column: 1, scope: !7463)
!7482 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1155, file: !1155, line: 32, type: !7483, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7486)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{null, !7485}
!7485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!7486 = !{!7487}
!7487 = !DILocalVariable(name: "vec_", arg: 1, scope: !7482, file: !1155, line: 32, type: !7485)
!7488 = !DILocation(line: 0, scope: !7482)
!7489 = !DILocation(line: 32, column: 1, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7482, file: !1155, line: 32, column: 1)
!7491 = !DILocation(line: 32, column: 1, scope: !7482)
!7492 = distinct !DISubprogram(name: "insn_luid", scope: !3, file: !3, line: 5411, type: !2057, scopeLine: 5412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7493)
!7493 = !{!7494}
!7494 = !DILocalVariable(name: "insn", arg: 1, scope: !7492, file: !3, line: 5411, type: !638)
!7495 = !DILocation(line: 0, scope: !7492)
!7496 = !DILocation(line: 5413, column: 10, scope: !7492)
!7497 = !DILocation(line: 5413, column: 3, scope: !7492)
!7498 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1155, file: !1155, line: 31, type: !7499, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7503)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!631, !7501, !7}
!7501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7502, size: 64)
!7502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1896)
!7503 = !{!7504, !7505}
!7504 = !DILocalVariable(name: "vec_", arg: 1, scope: !7498, file: !1155, line: 31, type: !7501)
!7505 = !DILocalVariable(name: "ix_", arg: 2, scope: !7498, file: !1155, line: 31, type: !7)
!7506 = !DILocation(line: 0, scope: !7498)
!7507 = !DILocation(line: 31, column: 1, scope: !7498)
!7508 = distinct !DISubprogram(name: "extend_h_i_d", scope: !3, file: !3, line: 5427, type: !2107, scopeLine: 5428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7509)
!7509 = !{!7510}
!7510 = !DILocalVariable(name: "reserve", scope: !7508, file: !3, line: 5429, type: !631)
!7511 = !DILocation(line: 5429, column: 18, scope: !7508)
!7512 = !DILocation(line: 5429, column: 33, scope: !7508)
!7513 = !DILocation(line: 5430, column: 20, scope: !7508)
!7514 = !DILocation(line: 5430, column: 18, scope: !7508)
!7515 = !DILocation(line: 0, scope: !7508)
!7516 = !DILocation(line: 5431, column: 15, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 5431, column: 7)
!7518 = !DILocation(line: 5432, column: 7, scope: !7517)
!7519 = !DILocation(line: 5432, column: 12, scope: !7517)
!7520 = !DILocation(line: 5431, column: 7, scope: !7508)
!7521 = !DILocation(line: 5434, column: 7, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 5433, column: 5)
!7523 = !DILocation(line: 5436, column: 7, scope: !7522)
!7524 = !DILocation(line: 5437, column: 5, scope: !7522)
!7525 = !DILocation(line: 5438, column: 1, scope: !7508)
!7526 = distinct !DISubprogram(name: "init_h_i_d", scope: !3, file: !3, line: 5443, type: !2116, scopeLine: 5444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7527)
!7527 = !{!7528}
!7528 = !DILocalVariable(name: "insn", arg: 1, scope: !7526, file: !3, line: 5443, type: !638)
!7529 = !DILocation(line: 0, scope: !7526)
!7530 = !DILocation(line: 5445, column: 7, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 5445, column: 7)
!7532 = !DILocation(line: 5445, column: 24, scope: !7531)
!7533 = !DILocation(line: 5445, column: 7, scope: !7526)
!7534 = !DILocation(line: 5447, column: 7, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 5446, column: 5)
!7536 = !DILocation(line: 5447, column: 24, scope: !7535)
!7537 = !DILocation(line: 5448, column: 7, scope: !7535)
!7538 = !DILocation(line: 5448, column: 26, scope: !7535)
!7539 = !DILocation(line: 5449, column: 26, scope: !7535)
!7540 = !DILocation(line: 5449, column: 7, scope: !7535)
!7541 = !DILocation(line: 5449, column: 24, scope: !7535)
!7542 = !DILocation(line: 5450, column: 7, scope: !7535)
!7543 = !DILocation(line: 5450, column: 25, scope: !7535)
!7544 = !DILocation(line: 5451, column: 7, scope: !7535)
!7545 = !DILocation(line: 5451, column: 24, scope: !7535)
!7546 = !DILocation(line: 5452, column: 5, scope: !7535)
!7547 = !DILocation(line: 5453, column: 1, scope: !7526)
!7548 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_iterate", scope: !398, file: !398, line: 825, type: !7549, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7552)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!631, !2837, !7, !7551}
!7551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!7552 = !{!7553, !7554, !7555}
!7553 = !DILocalVariable(name: "vec_", arg: 1, scope: !7548, file: !398, line: 825, type: !2837)
!7554 = !DILocalVariable(name: "ix_", arg: 2, scope: !7548, file: !398, line: 825, type: !7)
!7555 = !DILocalVariable(name: "ptr", arg: 3, scope: !7548, file: !398, line: 825, type: !7551)
!7556 = !DILocation(line: 0, scope: !7548)
!7557 = !DILocation(line: 825, column: 1, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7548, file: !398, line: 825, column: 1)
!7559 = !DILocation(line: 825, column: 1, scope: !7548)
!7560 = !DILocation(line: 825, column: 1, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7558, file: !398, line: 825, column: 1)
!7562 = !DILocation(line: 825, column: 1, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7558, file: !398, line: 825, column: 1)
!7564 = !DILocation(line: 0, scope: !7558)
!7565 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_heap_free", scope: !398, file: !398, line: 826, type: !7566, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7569)
!7566 = !DISubroutineType(types: !7567)
!7567 = !{null, !7568}
!7568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!7569 = !{!7570}
!7570 = !DILocalVariable(name: "vec_", arg: 1, scope: !7565, file: !398, line: 826, type: !7568)
!7571 = !DILocation(line: 0, scope: !7565)
!7572 = !DILocation(line: 826, column: 1, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7565, file: !398, line: 826, column: 1)
!7574 = !DILocation(line: 826, column: 1, scope: !7565)
!7575 = distinct !DISubprogram(name: "sched_emit_insn", scope: !3, file: !3, line: 5549, type: !7576, scopeLine: 5550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7578)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!638, !638}
!7578 = !{!7579, !7580}
!7579 = !DILocalVariable(name: "pat", arg: 1, scope: !7575, file: !3, line: 5549, type: !638)
!7580 = !DILocalVariable(name: "insn", scope: !7575, file: !3, line: 5551, type: !638)
!7581 = !DILocation(line: 0, scope: !7575)
!7582 = !DILocation(line: 5551, column: 36, scope: !7575)
!7583 = !DILocation(line: 5551, column: 14, scope: !7575)
!7584 = !DILocation(line: 5552, column: 23, scope: !7575)
!7585 = !DILocation(line: 5553, column: 3, scope: !7575)
!7586 = !DILocation(line: 5554, column: 3, scope: !7575)
!7587 = distinct !DISubprogram(name: "haifa_init_insn", scope: !3, file: !3, line: 5493, type: !2116, scopeLine: 5494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7588)
!7588 = !{!7589}
!7589 = !DILocalVariable(name: "insn", arg: 1, scope: !7587, file: !3, line: 5493, type: !638)
!7590 = !DILocation(line: 0, scope: !7587)
!7591 = !DILocation(line: 5495, column: 3, scope: !7587)
!7592 = !DILocation(line: 5497, column: 3, scope: !7587)
!7593 = !DILocation(line: 5498, column: 3, scope: !7587)
!7594 = !DILocation(line: 5499, column: 3, scope: !7587)
!7595 = !DILocation(line: 5500, column: 3, scope: !7587)
!7596 = !DILocation(line: 5502, column: 7, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 5502, column: 7)
!7598 = !DILocation(line: 5502, column: 7, scope: !7587)
!7599 = !DILocation(line: 5504, column: 7, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 5503, column: 5)
!7601 = !DILocation(line: 5507, column: 7, scope: !7600)
!7602 = !DILocation(line: 5508, column: 5, scope: !7600)
!7603 = !DILocation(line: 5509, column: 1, scope: !7587)
!7604 = distinct !DISubprogram(name: "may_trap_exp", scope: !3, file: !3, line: 369, type: !7605, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7607)
!7605 = !DISubroutineType(types: !7606)
!7606 = !{!631, !2153, !631}
!7607 = !{!7608, !7609, !7610, !7611, !7614, !7615, !7616, !7622, !7625}
!7608 = !DILocalVariable(name: "x", arg: 1, scope: !7604, file: !3, line: 369, type: !2153)
!7609 = !DILocalVariable(name: "is_store", arg: 2, scope: !7604, file: !3, line: 369, type: !631)
!7610 = !DILocalVariable(name: "code", scope: !7604, file: !3, line: 371, type: !440)
!7611 = !DILocalVariable(name: "fmt", scope: !7612, file: !3, line: 399, type: !636)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 398, column: 5)
!7613 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 383, column: 7)
!7614 = !DILocalVariable(name: "i", scope: !7612, file: !3, line: 400, type: !631)
!7615 = !DILocalVariable(name: "insn_class", scope: !7612, file: !3, line: 400, type: !631)
!7616 = !DILocalVariable(name: "tmp_class", scope: !7617, file: !3, line: 411, type: !631)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 410, column: 6)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 409, column: 8)
!7619 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 408, column: 2)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 407, column: 7)
!7621 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 407, column: 7)
!7622 = !DILocalVariable(name: "j", scope: !7623, file: !3, line: 416, type: !631)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 415, column: 6)
!7624 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 414, column: 13)
!7625 = !DILocalVariable(name: "tmp_class", scope: !7626, file: !3, line: 419, type: !631)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 418, column: 3)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 417, column: 8)
!7628 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 417, column: 8)
!7629 = !DILocation(line: 0, scope: !7604)
!7630 = !DILocation(line: 373, column: 9, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 373, column: 7)
!7632 = !DILocation(line: 373, column: 7, scope: !7604)
!7633 = !DILocation(line: 375, column: 10, scope: !7604)
!7634 = !DILocation(line: 376, column: 7, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 376, column: 7)
!7636 = !DILocation(line: 376, column: 7, scope: !7604)
!7637 = !DILocation(line: 378, column: 23, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 378, column: 11)
!7639 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 377, column: 5)
!7640 = !DILocation(line: 378, column: 26, scope: !7638)
!7641 = !DILocation(line: 378, column: 11, scope: !7639)
!7642 = !DILocation(line: 381, column: 2, scope: !7638)
!7643 = !DILocation(line: 383, column: 7, scope: !7604)
!7644 = !DILocation(line: 386, column: 11, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 386, column: 11)
!7646 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 384, column: 5)
!7647 = !DILocation(line: 386, column: 11, scope: !7646)
!7648 = !DILocation(line: 389, column: 12, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 389, column: 11)
!7650 = !DILocation(line: 389, column: 11, scope: !7646)
!7651 = !DILocation(line: 392, column: 11, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 392, column: 11)
!7653 = !DILocation(line: 392, column: 11, scope: !7646)
!7654 = !DILocation(line: 395, column: 7, scope: !7646)
!7655 = !DILocation(line: 0, scope: !7612)
!7656 = !DILocation(line: 403, column: 11, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 403, column: 11)
!7658 = !DILocation(line: 403, column: 11, scope: !7612)
!7659 = !DILocation(line: 406, column: 13, scope: !7612)
!7660 = !DILocation(line: 407, column: 16, scope: !7621)
!7661 = !DILocation(line: 0, scope: !7626)
!7662 = !DILocation(line: 407, column: 12, scope: !7621)
!7663 = !DILocation(line: 0, scope: !7621)
!7664 = !DILocation(line: 407, column: 45, scope: !7620)
!7665 = !DILocation(line: 407, column: 7, scope: !7621)
!7666 = !DILocation(line: 409, column: 8, scope: !7618)
!7667 = !DILocation(line: 409, column: 15, scope: !7618)
!7668 = !DILocation(line: 409, column: 8, scope: !7619)
!7669 = !DILocation(line: 411, column: 38, scope: !7617)
!7670 = !DILocation(line: 411, column: 24, scope: !7617)
!7671 = !DILocation(line: 0, scope: !7617)
!7672 = !DILocation(line: 412, column: 21, scope: !7617)
!7673 = !DILocation(line: 413, column: 6, scope: !7617)
!7674 = !DILocation(line: 414, column: 20, scope: !7624)
!7675 = !DILocation(line: 414, column: 13, scope: !7618)
!7676 = !DILocation(line: 419, column: 35, scope: !7626)
!7677 = !DILocation(line: 417, column: 8, scope: !7628)
!7678 = !DILocation(line: 0, scope: !7623)
!7679 = !DILocation(line: 417, column: 24, scope: !7627)
!7680 = !DILocation(line: 417, column: 22, scope: !7627)
!7681 = !DILocation(line: 419, column: 21, scope: !7626)
!7682 = !DILocation(line: 420, column: 18, scope: !7626)
!7683 = !DILocation(line: 421, column: 34, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 421, column: 9)
!7685 = !DILocation(line: 417, column: 41, scope: !7627)
!7686 = !DILocation(line: 417, column: 8, scope: !7627)
!7687 = distinct !{!7687, !7677, !7688}
!7688 = !DILocation(line: 423, column: 3, scope: !7628)
!7689 = !DILocation(line: 425, column: 33, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 425, column: 8)
!7691 = !DILocation(line: 0, scope: !7618)
!7692 = !DILocation(line: 407, column: 7, scope: !7620)
!7693 = distinct !{!7693, !7665, !7694}
!7694 = !DILocation(line: 427, column: 2, scope: !7621)
!7695 = !DILocation(line: 430, column: 1, scope: !7604)
!7696 = distinct !DISubprogram(name: "dying_use_p", scope: !3, file: !3, line: 764, type: !7697, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7699)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!630, !1944}
!7699 = !{!7700, !7701}
!7700 = !DILocalVariable(name: "use", arg: 1, scope: !7696, file: !3, line: 764, type: !1944)
!7701 = !DILocalVariable(name: "next", scope: !7696, file: !3, line: 766, type: !1944)
!7702 = !DILocation(line: 0, scope: !7696)
!7703 = !DILocation(line: 768, column: 8, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 768, column: 3)
!7705 = !DILocation(line: 0, scope: !7704)
!7706 = !DILocation(line: 768, column: 41, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 768, column: 3)
!7708 = !DILocation(line: 768, column: 3, scope: !7704)
!7709 = !DILocation(line: 769, column: 9, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 769, column: 9)
!7711 = !DILocation(line: 770, column: 2, scope: !7710)
!7712 = !DILocation(line: 770, column: 5, scope: !7710)
!7713 = !DILocation(line: 770, column: 30, scope: !7710)
!7714 = !DILocation(line: 769, column: 9, scope: !7707)
!7715 = !DILocation(line: 768, column: 3, scope: !7707)
!7716 = distinct !{!7716, !7708, !7717}
!7717 = !DILocation(line: 771, column: 14, scope: !7704)
!7718 = !DILocation(line: 773, column: 1, scope: !7696)
!7719 = distinct !DISubprogram(name: "dep_list_size", scope: !3, file: !3, line: 980, type: !2057, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7720)
!7720 = !{!7721, !7722, !7723, !7724, !7725}
!7721 = !DILocalVariable(name: "insn", arg: 1, scope: !7719, file: !3, line: 980, type: !638)
!7722 = !DILocalVariable(name: "sd_it", scope: !7719, file: !3, line: 982, type: !2252)
!7723 = !DILocalVariable(name: "dep", scope: !7719, file: !3, line: 983, type: !2846)
!7724 = !DILocalVariable(name: "dbgcount", scope: !7719, file: !3, line: 984, type: !631)
!7725 = !DILocalVariable(name: "nodbgcount", scope: !7719, file: !3, line: 984, type: !631)
!7726 = !DILocation(line: 0, scope: !7719)
!7727 = !DILocation(line: 982, column: 3, scope: !7719)
!7728 = !DILocation(line: 983, column: 3, scope: !7719)
!7729 = !DILocation(line: 986, column: 8, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 986, column: 7)
!7731 = !DILocation(line: 986, column: 7, scope: !7719)
!7732 = !DILocation(line: 987, column: 12, scope: !7730)
!7733 = !DILocation(line: 987, column: 5, scope: !7730)
!7734 = !DILocation(line: 989, column: 3, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 989, column: 3)
!7736 = !DILocation(line: 984, column: 21, scope: !7719)
!7737 = !DILocation(line: 989, column: 3, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 989, column: 3)
!7739 = !DILocation(line: 991, column: 11, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 991, column: 11)
!7741 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 990, column: 5)
!7742 = !DILocation(line: 991, column: 11, scope: !7741)
!7743 = !DILocation(line: 992, column: 10, scope: !7740)
!7744 = !DILocation(line: 992, column: 2, scope: !7740)
!7745 = !DILocation(line: 993, column: 17, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 993, column: 16)
!7747 = !DILocation(line: 993, column: 16, scope: !7740)
!7748 = distinct !{!7748, !7734, !7749}
!7749 = !DILocation(line: 995, column: 5, scope: !7735)
!7750 = !DILocation(line: 997, column: 3, scope: !7719)
!7751 = !DILocation(line: 1000, column: 1, scope: !7719)
!7752 = distinct !DISubprogram(name: "setup_ref_regs", scope: !3, file: !3, line: 684, type: !2116, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7753)
!7753 = !{!7754, !7755, !7756, !7757, !7758, !7760}
!7754 = !DILocalVariable(name: "x", arg: 1, scope: !7752, file: !3, line: 684, type: !638)
!7755 = !DILocalVariable(name: "i", scope: !7752, file: !3, line: 686, type: !631)
!7756 = !DILocalVariable(name: "j", scope: !7752, file: !3, line: 686, type: !631)
!7757 = !DILocalVariable(name: "regno", scope: !7752, file: !3, line: 686, type: !631)
!7758 = !DILocalVariable(name: "code", scope: !7752, file: !3, line: 687, type: !7759)
!7759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !440)
!7760 = !DILocalVariable(name: "fmt", scope: !7752, file: !3, line: 688, type: !636)
!7761 = !DILocation(line: 0, scope: !7752)
!7762 = !DILocation(line: 687, column: 25, scope: !7752)
!7763 = !DILocation(line: 690, column: 7, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 690, column: 7)
!7765 = !DILocation(line: 690, column: 7, scope: !7752)
!7766 = !DILocation(line: 692, column: 15, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 691, column: 5)
!7768 = !DILocation(line: 693, column: 17, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 693, column: 11)
!7770 = !DILocation(line: 693, column: 11, scope: !7767)
!7771 = !DILocation(line: 694, column: 18, scope: !7769)
!7772 = !DILocation(line: 694, column: 35, scope: !7769)
!7773 = !DILocation(line: 694, column: 2, scope: !7769)
!7774 = !DILocation(line: 696, column: 11, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 696, column: 2)
!7776 = !DILocation(line: 696, column: 35, scope: !7775)
!7777 = !DILocation(line: 696, column: 7, scope: !7775)
!7778 = !DILocation(line: 0, scope: !7775)
!7779 = !DILocation(line: 696, column: 56, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 696, column: 2)
!7781 = !DILocation(line: 696, column: 2, scope: !7775)
!7782 = !DILocation(line: 697, column: 20, scope: !7780)
!7783 = !DILocation(line: 697, column: 43, scope: !7780)
!7784 = !DILocation(line: 697, column: 4, scope: !7780)
!7785 = !DILocation(line: 696, column: 2, scope: !7780)
!7786 = distinct !{!7786, !7781, !7787}
!7787 = !DILocation(line: 697, column: 46, scope: !7775)
!7788 = !DILocation(line: 700, column: 9, scope: !7752)
!7789 = !DILocation(line: 701, column: 12, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 701, column: 3)
!7791 = !DILocation(line: 0, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 706, column: 2)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 706, column: 2)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 705, column: 7)
!7795 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 704, column: 14)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 702, column: 9)
!7797 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 701, column: 3)
!7798 = !DILocation(line: 701, column: 8, scope: !7790)
!7799 = !DILocation(line: 0, scope: !7790)
!7800 = !DILocation(line: 701, column: 41, scope: !7797)
!7801 = !DILocation(line: 701, column: 3, scope: !7790)
!7802 = !DILocation(line: 702, column: 9, scope: !7796)
!7803 = !DILocation(line: 702, column: 16, scope: !7796)
!7804 = !DILocation(line: 702, column: 9, scope: !7797)
!7805 = !DILocation(line: 703, column: 23, scope: !7796)
!7806 = !DILocation(line: 703, column: 7, scope: !7796)
!7807 = !DILocation(line: 704, column: 21, scope: !7795)
!7808 = !DILocation(line: 704, column: 14, scope: !7796)
!7809 = !DILocation(line: 706, column: 2, scope: !7793)
!7810 = !DILocation(line: 0, scope: !7793)
!7811 = !DILocation(line: 706, column: 18, scope: !7792)
!7812 = !DILocation(line: 706, column: 16, scope: !7792)
!7813 = !DILocation(line: 707, column: 20, scope: !7792)
!7814 = !DILocation(line: 707, column: 4, scope: !7792)
!7815 = !DILocation(line: 706, column: 35, scope: !7792)
!7816 = !DILocation(line: 706, column: 2, scope: !7792)
!7817 = distinct !{!7817, !7809, !7818}
!7818 = !DILocation(line: 707, column: 37, scope: !7793)
!7819 = !DILocation(line: 701, column: 3, scope: !7797)
!7820 = distinct !{!7820, !7801, !7821}
!7821 = !DILocation(line: 708, column: 7, scope: !7790)
!7822 = !DILocation(line: 709, column: 1, scope: !7752)
!7823 = distinct !DISubprogram(name: "initiate_reg_pressure_info", scope: !3, file: !3, line: 668, type: !7824, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7826)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{null, !1867}
!7826 = !{!7827, !7828, !7829, !7830}
!7827 = !DILocalVariable(name: "live", arg: 1, scope: !7823, file: !3, line: 668, type: !1867)
!7828 = !DILocalVariable(name: "i", scope: !7823, file: !3, line: 670, type: !631)
!7829 = !DILocalVariable(name: "j", scope: !7823, file: !3, line: 671, type: !7)
!7830 = !DILocalVariable(name: "bi", scope: !7823, file: !3, line: 672, type: !7831)
!7831 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !694, line: 218, baseType: !7832)
!7832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !694, line: 203, size: 256, elements: !7833)
!7833 = !{!7834, !7835, !7836, !7837}
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !7832, file: !694, line: 206, baseType: !697, size: 64)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !7832, file: !694, line: 209, baseType: !697, size: 64, offset: 64)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !7832, file: !694, line: 212, baseType: !7, size: 32, offset: 128)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !7832, file: !694, line: 217, baseType: !707, size: 64, offset: 192)
!7838 = !DILocation(line: 0, scope: !7823)
!7839 = !DILocation(line: 671, column: 3, scope: !7823)
!7840 = !DILocation(line: 672, column: 3, scope: !7823)
!7841 = !DILocation(line: 0, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 674, column: 3)
!7843 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 674, column: 3)
!7844 = !DILocation(line: 674, column: 8, scope: !7843)
!7845 = !DILocation(line: 0, scope: !7843)
!7846 = !DILocation(line: 674, column: 17, scope: !7842)
!7847 = !DILocation(line: 674, column: 3, scope: !7843)
!7848 = !DILocation(line: 675, column: 23, scope: !7842)
!7849 = !DILocation(line: 675, column: 5, scope: !7842)
!7850 = !DILocation(line: 675, column: 47, scope: !7842)
!7851 = !DILocation(line: 674, column: 46, scope: !7842)
!7852 = !DILocation(line: 674, column: 3, scope: !7842)
!7853 = distinct !{!7853, !7847, !7854}
!7854 = !DILocation(line: 675, column: 49, scope: !7843)
!7855 = !DILocation(line: 676, column: 17, scope: !7823)
!7856 = !DILocation(line: 676, column: 3, scope: !7823)
!7857 = !DILocation(line: 677, column: 3, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 677, column: 3)
!7859 = !DILocation(line: 677, column: 3, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 677, column: 3)
!7861 = !DILocation(line: 678, column: 9, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 678, column: 9)
!7863 = !DILocation(line: 678, column: 27, scope: !7862)
!7864 = !DILocation(line: 678, column: 32, scope: !7862)
!7865 = !DILocation(line: 678, column: 49, scope: !7862)
!7866 = !DILocation(line: 678, column: 66, scope: !7862)
!7867 = !DILocation(line: 678, column: 35, scope: !7862)
!7868 = !DILocation(line: 678, column: 9, scope: !7860)
!7869 = !DILocation(line: 679, column: 34, scope: !7862)
!7870 = !DILocation(line: 679, column: 7, scope: !7862)
!7871 = distinct !{!7871, !7857, !7872}
!7872 = !DILocation(line: 679, column: 41, scope: !7858)
!7873 = !DILocation(line: 680, column: 1, scope: !7823)
!7874 = distinct !DISubprogram(name: "bb_has_eh_pred", scope: !155, file: !155, line: 973, type: !7875, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7877)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!630, !1172}
!7877 = !{!7878, !7879, !7880}
!7878 = !DILocalVariable(name: "bb", arg: 1, scope: !7874, file: !155, line: 973, type: !1172)
!7879 = !DILocalVariable(name: "e", scope: !7874, file: !155, line: 975, type: !1189)
!7880 = !DILocalVariable(name: "ei", scope: !7874, file: !155, line: 976, type: !6890)
!7881 = !DILocation(line: 0, scope: !7874)
!7882 = !DILocation(line: 975, column: 3, scope: !7874)
!7883 = !DILocation(line: 976, column: 3, scope: !7874)
!7884 = !DILocation(line: 978, column: 3, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7874, file: !155, line: 978, column: 3)
!7886 = !DILocation(line: 0, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7885, file: !155, line: 978, column: 3)
!7888 = !DILocation(line: 978, column: 3, scope: !7887)
!7889 = !DILocation(line: 980, column: 11, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !155, line: 980, column: 11)
!7891 = distinct !DILexicalBlock(scope: !7887, file: !155, line: 979, column: 5)
!7892 = !DILocation(line: 980, column: 14, scope: !7890)
!7893 = !DILocation(line: 980, column: 20, scope: !7890)
!7894 = !DILocation(line: 980, column: 11, scope: !7891)
!7895 = distinct !{!7895, !7884, !7896}
!7896 = !DILocation(line: 982, column: 5, scope: !7885)
!7897 = !DILocation(line: 984, column: 1, scope: !7874)
!7898 = distinct !DISubprogram(name: "mark_regno_birth_or_death", scope: !3, file: !3, line: 626, type: !7899, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7901)
!7899 = !DISubroutineType(types: !7900)
!7900 = !{null, !631, !630}
!7901 = !{!7902, !7903, !7904}
!7902 = !DILocalVariable(name: "regno", arg: 1, scope: !7898, file: !3, line: 626, type: !631)
!7903 = !DILocalVariable(name: "birth_p", arg: 2, scope: !7898, file: !3, line: 626, type: !630)
!7904 = !DILocalVariable(name: "cover_class", scope: !7898, file: !3, line: 628, type: !598)
!7905 = !DILocation(line: 0, scope: !7898)
!7906 = !DILocation(line: 630, column: 17, scope: !7898)
!7907 = !DILocation(line: 631, column: 13, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 631, column: 7)
!7909 = !DILocation(line: 0, scope: !7908)
!7910 = !DILocation(line: 631, column: 7, scope: !7898)
!7911 = !DILocation(line: 633, column: 11, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 632, column: 5)
!7913 = !DILocation(line: 635, column: 8, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 635, column: 8)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 634, column: 2)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 633, column: 11)
!7917 = !DILocation(line: 0, scope: !7914)
!7918 = !DILocation(line: 635, column: 8, scope: !7915)
!7919 = !DILocation(line: 637, column: 8, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 636, column: 6)
!7921 = !DILocation(line: 639, column: 6, scope: !7920)
!7922 = !DILocation(line: 639, column: 39, scope: !7920)
!7923 = !DILocation(line: 638, column: 8, scope: !7920)
!7924 = !DILocation(line: 639, column: 3, scope: !7920)
!7925 = !DILocation(line: 640, column: 6, scope: !7920)
!7926 = !DILocation(line: 643, column: 8, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 642, column: 6)
!7928 = !DILocation(line: 645, column: 6, scope: !7927)
!7929 = !DILocation(line: 645, column: 39, scope: !7927)
!7930 = !DILocation(line: 644, column: 8, scope: !7927)
!7931 = !DILocation(line: 645, column: 3, scope: !7927)
!7932 = !DILocation(line: 650, column: 5, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 649, column: 12)
!7934 = !DILocation(line: 650, column: 10, scope: !7933)
!7935 = !DILocation(line: 649, column: 12, scope: !7908)
!7936 = !DILocation(line: 652, column: 11, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 652, column: 11)
!7938 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 651, column: 5)
!7939 = !DILocation(line: 0, scope: !7937)
!7940 = !DILocation(line: 652, column: 11, scope: !7938)
!7941 = !DILocation(line: 654, column: 4, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 653, column: 2)
!7943 = !DILocation(line: 655, column: 4, scope: !7942)
!7944 = !DILocation(line: 655, column: 34, scope: !7942)
!7945 = !DILocation(line: 656, column: 2, scope: !7942)
!7946 = !DILocation(line: 659, column: 4, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 658, column: 2)
!7948 = !DILocation(line: 660, column: 4, scope: !7947)
!7949 = !DILocation(line: 660, column: 34, scope: !7947)
!7950 = !DILocation(line: 663, column: 1, scope: !7898)
!7951 = distinct !DISubprogram(name: "rhs_regno", scope: !406, file: !406, line: 1051, type: !7952, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!7, !2153}
!7954 = !{!7955}
!7955 = !DILocalVariable(name: "x", arg: 1, scope: !7951, file: !406, line: 1051, type: !2153)
!7956 = !DILocation(line: 0, scope: !7951)
!7957 = !DILocation(line: 1053, column: 10, scope: !7951)
!7958 = !DILocation(line: 1053, column: 3, scope: !7951)
!7959 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !694, file: !694, line: 224, type: !7960, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7967)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{null, !7962, !7963, !7, !7966}
!7962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7831, size: 64)
!7963 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !639, line: 48, baseType: !7964)
!7964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7965, size: 64)
!7965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!7966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7967 = !{!7968, !7969, !7970, !7971}
!7968 = !DILocalVariable(name: "bi", arg: 1, scope: !7959, file: !694, line: 224, type: !7962)
!7969 = !DILocalVariable(name: "map", arg: 2, scope: !7959, file: !694, line: 224, type: !7963)
!7970 = !DILocalVariable(name: "start_bit", arg: 3, scope: !7959, file: !694, line: 225, type: !7)
!7971 = !DILocalVariable(name: "bit_no", arg: 4, scope: !7959, file: !694, line: 225, type: !7966)
!7972 = !DILocation(line: 0, scope: !7959)
!7973 = !DILocation(line: 227, column: 19, scope: !7959)
!7974 = !DILocation(line: 227, column: 12, scope: !7959)
!7975 = !DILocation(line: 228, column: 7, scope: !7959)
!7976 = !DILocation(line: 228, column: 12, scope: !7959)
!7977 = !DILocation(line: 0, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !694, line: 233, column: 11)
!7979 = distinct !DILexicalBlock(scope: !7959, file: !694, line: 232, column: 5)
!7980 = !DILocation(line: 231, column: 3, scope: !7959)
!7981 = !DILocation(line: 233, column: 12, scope: !7978)
!7982 = !DILocation(line: 233, column: 11, scope: !7979)
!7983 = !DILocation(line: 235, column: 13, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7978, file: !694, line: 234, column: 2)
!7985 = !DILocation(line: 236, column: 4, scope: !7984)
!7986 = !DILocation(line: 239, column: 11, scope: !7979)
!7987 = distinct !{!7987, !7980, !7988}
!7988 = !DILocation(line: 242, column: 5, scope: !7959)
!7989 = !DILocation(line: 245, column: 11, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7959, file: !694, line: 245, column: 7)
!7991 = !DILocation(line: 245, column: 17, scope: !7990)
!7992 = !DILocation(line: 245, column: 22, scope: !7990)
!7993 = !DILocation(line: 245, column: 7, scope: !7959)
!7994 = !DILocation(line: 246, column: 27, scope: !7990)
!7995 = !DILocation(line: 246, column: 32, scope: !7990)
!7996 = !DILocation(line: 246, column: 5, scope: !7990)
!7997 = !DILocation(line: 249, column: 7, scope: !7959)
!7998 = !DILocation(line: 249, column: 15, scope: !7959)
!7999 = !DILocation(line: 250, column: 14, scope: !7959)
!8000 = !DILocation(line: 251, column: 7, scope: !7959)
!8001 = !DILocation(line: 251, column: 12, scope: !7959)
!8002 = !DILocation(line: 257, column: 16, scope: !7959)
!8003 = !DILocation(line: 257, column: 13, scope: !7959)
!8004 = !DILocation(line: 259, column: 11, scope: !7959)
!8005 = !DILocation(line: 260, column: 1, scope: !7959)
!8006 = distinct !DISubprogram(name: "bmp_iter_set", scope: !694, file: !694, line: 393, type: !8007, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8009)
!8007 = !DISubroutineType(types: !8008)
!8008 = !{!630, !7962, !7966}
!8009 = !{!8010, !8011, !8012}
!8010 = !DILocalVariable(name: "bi", arg: 1, scope: !8006, file: !694, line: 393, type: !7962)
!8011 = !DILocalVariable(name: "bit_no", arg: 2, scope: !8006, file: !694, line: 393, type: !7966)
!8012 = !DILabel(scope: !8013, name: "next_bit", file: !694, line: 398)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !694, line: 397, column: 5)
!8014 = distinct !DILexicalBlock(scope: !8006, file: !694, line: 396, column: 7)
!8015 = !DILocation(line: 0, scope: !8006)
!8016 = !DILocation(line: 396, column: 11, scope: !8014)
!8017 = !DILocation(line: 396, column: 7, scope: !8014)
!8018 = !DILocation(line: 396, column: 7, scope: !8006)
!8019 = !DILocation(line: 419, column: 15, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !694, line: 418, column: 2)
!8021 = distinct !DILexicalBlock(scope: !8006, file: !694, line: 415, column: 5)
!8022 = !DILocation(line: 399, column: 7, scope: !8013)
!8023 = !DILocation(line: 398, column: 5, scope: !8013)
!8024 = !DILocation(line: 399, column: 20, scope: !8013)
!8025 = !DILocation(line: 399, column: 25, scope: !8013)
!8026 = !DILocation(line: 399, column: 14, scope: !8013)
!8027 = !DILocation(line: 401, column: 13, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8013, file: !694, line: 400, column: 2)
!8029 = !DILocation(line: 402, column: 12, scope: !8028)
!8030 = distinct !{!8030, !8022, !8031}
!8031 = !DILocation(line: 403, column: 2, scope: !8013)
!8032 = !DILocation(line: 410, column: 15, scope: !8006)
!8033 = !DILocation(line: 410, column: 42, scope: !8006)
!8034 = !DILocation(line: 411, column: 26, scope: !8006)
!8035 = !DILocation(line: 410, column: 11, scope: !8006)
!8036 = !DILocation(line: 412, column: 7, scope: !8006)
!8037 = !DILocation(line: 412, column: 14, scope: !8006)
!8038 = !DILocation(line: 0, scope: !8021)
!8039 = !DILocation(line: 414, column: 3, scope: !8006)
!8040 = !DILocation(line: 417, column: 7, scope: !8021)
!8041 = !DILocation(line: 417, column: 18, scope: !8021)
!8042 = !DILocation(line: 417, column: 26, scope: !8021)
!8043 = !DILocation(line: 419, column: 13, scope: !8020)
!8044 = !DILocation(line: 420, column: 8, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8020, file: !694, line: 420, column: 8)
!8046 = !DILocation(line: 420, column: 8, scope: !8020)
!8047 = !DILocation(line: 422, column: 12, scope: !8020)
!8048 = !DILocation(line: 423, column: 15, scope: !8020)
!8049 = distinct !{!8049, !8040, !8050}
!8050 = !DILocation(line: 424, column: 2, scope: !8021)
!8051 = !DILocation(line: 427, column: 28, scope: !8021)
!8052 = !DILocation(line: 427, column: 16, scope: !8021)
!8053 = !DILocation(line: 428, column: 12, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8021, file: !694, line: 428, column: 11)
!8055 = !DILocation(line: 428, column: 11, scope: !8021)
!8056 = !DILocation(line: 430, column: 27, scope: !8021)
!8057 = !DILocation(line: 430, column: 32, scope: !8021)
!8058 = !DILocation(line: 430, column: 15, scope: !8021)
!8059 = !DILocation(line: 431, column: 19, scope: !8021)
!8060 = distinct !{!8060, !8039, !8061}
!8061 = !DILocation(line: 432, column: 5, scope: !8006)
!8062 = !DILocation(line: 433, column: 1, scope: !8006)
!8063 = distinct !DISubprogram(name: "bmp_iter_next", scope: !694, file: !694, line: 382, type: !8064, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8066)
!8064 = !DISubroutineType(types: !8065)
!8065 = !{null, !7962, !7966}
!8066 = !{!8067, !8068}
!8067 = !DILocalVariable(name: "bi", arg: 1, scope: !8063, file: !694, line: 382, type: !7962)
!8068 = !DILocalVariable(name: "bit_no", arg: 2, scope: !8063, file: !694, line: 382, type: !7966)
!8069 = !DILocation(line: 0, scope: !8063)
!8070 = !DILocation(line: 384, column: 7, scope: !8063)
!8071 = !DILocation(line: 384, column: 12, scope: !8063)
!8072 = !DILocation(line: 385, column: 11, scope: !8063)
!8073 = !DILocation(line: 386, column: 1, scope: !8063)
!8074 = distinct !DISubprogram(name: "save_reg_pressure", scope: !3, file: !3, line: 740, type: !2107, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8075)
!8075 = !{!8076}
!8076 = !DILocalVariable(name: "i", scope: !8074, file: !3, line: 742, type: !631)
!8077 = !DILocation(line: 0, scope: !8074)
!8078 = !DILocation(line: 0, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 744, column: 3)
!8080 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 744, column: 3)
!8081 = !DILocation(line: 744, column: 8, scope: !8080)
!8082 = !DILocation(line: 0, scope: !8080)
!8083 = !DILocation(line: 744, column: 17, scope: !8079)
!8084 = !DILocation(line: 744, column: 3, scope: !8080)
!8085 = !DILocation(line: 746, column: 27, scope: !8079)
!8086 = !DILocation(line: 746, column: 9, scope: !8079)
!8087 = !DILocation(line: 745, column: 5, scope: !8079)
!8088 = !DILocation(line: 746, column: 7, scope: !8079)
!8089 = !DILocation(line: 744, column: 46, scope: !8079)
!8090 = !DILocation(line: 744, column: 3, scope: !8079)
!8091 = distinct !{!8091, !8084, !8092}
!8092 = !DILocation(line: 746, column: 49, scope: !8080)
!8093 = !DILocation(line: 747, column: 16, scope: !8074)
!8094 = !DILocation(line: 747, column: 32, scope: !8074)
!8095 = !DILocation(line: 747, column: 3, scope: !8074)
!8096 = !DILocation(line: 748, column: 1, scope: !8074)
!8097 = distinct !DISubprogram(name: "update_register_pressure", scope: !3, file: !3, line: 1570, type: !2116, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8098)
!8098 = !{!8099, !8100, !8101}
!8099 = !DILocalVariable(name: "insn", arg: 1, scope: !8097, file: !3, line: 1570, type: !638)
!8100 = !DILocalVariable(name: "use", scope: !8097, file: !3, line: 1572, type: !1944)
!8101 = !DILocalVariable(name: "set", scope: !8097, file: !3, line: 1573, type: !1952)
!8102 = !DILocation(line: 0, scope: !8097)
!8103 = !DILocation(line: 1575, column: 14, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 1575, column: 3)
!8105 = !DILocation(line: 1575, column: 8, scope: !8104)
!8106 = !DILocation(line: 0, scope: !8104)
!8107 = !DILocation(line: 1575, column: 44, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 1575, column: 3)
!8109 = !DILocation(line: 1575, column: 3, scope: !8104)
!8110 = !DILocation(line: 1576, column: 9, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 1576, column: 9)
!8112 = !DILocation(line: 1576, column: 27, scope: !8111)
!8113 = !DILocation(line: 1576, column: 44, scope: !8111)
!8114 = !DILocation(line: 1576, column: 64, scope: !8111)
!8115 = !DILocation(line: 1576, column: 30, scope: !8111)
!8116 = !DILocation(line: 1576, column: 9, scope: !8108)
!8117 = !DILocation(line: 1577, column: 39, scope: !8111)
!8118 = !DILocation(line: 1577, column: 7, scope: !8111)
!8119 = !DILocation(line: 1575, column: 64, scope: !8108)
!8120 = !DILocation(line: 1575, column: 3, scope: !8108)
!8121 = distinct !{!8121, !8109, !8122}
!8122 = !DILocation(line: 1577, column: 51, scope: !8104)
!8123 = !DILocation(line: 1578, column: 14, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 1578, column: 3)
!8125 = !DILocation(line: 1578, column: 8, scope: !8124)
!8126 = !DILocation(line: 0, scope: !8124)
!8127 = !DILocation(line: 1578, column: 44, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 1578, column: 3)
!8129 = !DILocation(line: 1578, column: 3, scope: !8124)
!8130 = !DILocation(line: 1579, column: 37, scope: !8128)
!8131 = !DILocation(line: 1579, column: 5, scope: !8128)
!8132 = !DILocation(line: 1578, column: 64, scope: !8128)
!8133 = !DILocation(line: 1578, column: 3, scope: !8128)
!8134 = distinct !{!8134, !8129, !8135}
!8135 = !DILocation(line: 1579, column: 48, scope: !8124)
!8136 = !DILocation(line: 1580, column: 1, scope: !8097)
!8137 = distinct !DISubprogram(name: "restore_reg_pressure", scope: !3, file: !3, line: 752, type: !2107, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8138)
!8138 = !{!8139}
!8139 = !DILocalVariable(name: "i", scope: !8137, file: !3, line: 754, type: !631)
!8140 = !DILocation(line: 0, scope: !8137)
!8141 = !DILocation(line: 0, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 756, column: 3)
!8143 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 756, column: 3)
!8144 = !DILocation(line: 756, column: 8, scope: !8143)
!8145 = !DILocation(line: 0, scope: !8143)
!8146 = !DILocation(line: 756, column: 17, scope: !8142)
!8147 = !DILocation(line: 756, column: 3, scope: !8143)
!8148 = !DILocation(line: 758, column: 28, scope: !8142)
!8149 = !DILocation(line: 758, column: 9, scope: !8142)
!8150 = !DILocation(line: 757, column: 5, scope: !8142)
!8151 = !DILocation(line: 758, column: 7, scope: !8142)
!8152 = !DILocation(line: 756, column: 46, scope: !8142)
!8153 = !DILocation(line: 756, column: 3, scope: !8142)
!8154 = distinct !{!8154, !8147, !8155}
!8155 = !DILocation(line: 758, column: 50, scope: !8143)
!8156 = !DILocation(line: 759, column: 16, scope: !8137)
!8157 = !DILocation(line: 759, column: 31, scope: !8137)
!8158 = !DILocation(line: 759, column: 3, scope: !8137)
!8159 = !DILocation(line: 760, column: 1, scope: !8137)
!8160 = distinct !DISubprogram(name: "fix_jump_move", scope: !3, file: !3, line: 4960, type: !2116, scopeLine: 4961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8161)
!8161 = !{!8162, !8163, !8164, !8165}
!8162 = !DILocalVariable(name: "jump", arg: 1, scope: !8160, file: !3, line: 4960, type: !638)
!8163 = !DILocalVariable(name: "bb", scope: !8160, file: !3, line: 4962, type: !1172)
!8164 = !DILocalVariable(name: "jump_bb", scope: !8160, file: !3, line: 4962, type: !1172)
!8165 = !DILocalVariable(name: "jump_bb_next", scope: !8160, file: !3, line: 4962, type: !1172)
!8166 = !DILocation(line: 0, scope: !8160)
!8167 = !DILocation(line: 4964, column: 8, scope: !8160)
!8168 = !DILocation(line: 4965, column: 13, scope: !8160)
!8169 = !DILocation(line: 4966, column: 27, scope: !8160)
!8170 = !DILocation(line: 4968, column: 3, scope: !8160)
!8171 = !DILocation(line: 4971, column: 8, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 4971, column: 7)
!8173 = !DILocation(line: 4971, column: 7, scope: !8160)
!8174 = !DILocation(line: 4973, column: 5, scope: !8172)
!8175 = !DILocation(line: 4973, column: 22, scope: !8172)
!8176 = !DILocation(line: 4975, column: 7, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 4975, column: 7)
!8178 = !DILocation(line: 4975, column: 22, scope: !8177)
!8179 = !DILocation(line: 4975, column: 19, scope: !8177)
!8180 = !DILocation(line: 4975, column: 7, scope: !8160)
!8181 = !DILocation(line: 4978, column: 5, scope: !8177)
!8182 = !DILocation(line: 4978, column: 27, scope: !8177)
!8183 = !DILocation(line: 4981, column: 29, scope: !8177)
!8184 = !DILocation(line: 4981, column: 5, scope: !8177)
!8185 = !DILocation(line: 4981, column: 27, scope: !8177)
!8186 = !DILocation(line: 4984, column: 17, scope: !8160)
!8187 = !DILocation(line: 4984, column: 3, scope: !8160)
!8188 = !DILocation(line: 4984, column: 15, scope: !8160)
!8189 = !DILocation(line: 4986, column: 3, scope: !8160)
!8190 = !DILocation(line: 4987, column: 1, scope: !8160)
!8191 = distinct !DISubprogram(name: "move_block_after_check", scope: !3, file: !3, line: 4991, type: !2116, scopeLine: 4992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8192)
!8192 = !{!8193, !8194, !8195, !8196, !8197}
!8193 = !DILocalVariable(name: "jump", arg: 1, scope: !8191, file: !3, line: 4991, type: !638)
!8194 = !DILocalVariable(name: "bb", scope: !8191, file: !3, line: 4993, type: !1172)
!8195 = !DILocalVariable(name: "jump_bb", scope: !8191, file: !3, line: 4993, type: !1172)
!8196 = !DILocalVariable(name: "jump_bb_next", scope: !8191, file: !3, line: 4993, type: !1172)
!8197 = !DILocalVariable(name: "t", scope: !8191, file: !3, line: 4994, type: !1177)
!8198 = !DILocation(line: 0, scope: !8191)
!8199 = !DILocation(line: 4994, column: 3, scope: !8191)
!8200 = !DILocation(line: 4996, column: 8, scope: !8191)
!8201 = !DILocation(line: 4997, column: 13, scope: !8191)
!8202 = !DILocation(line: 4998, column: 27, scope: !8191)
!8203 = !DILocation(line: 5000, column: 3, scope: !8191)
!8204 = !DILocation(line: 5002, column: 3, scope: !8191)
!8205 = !DILocation(line: 5005, column: 3, scope: !8191)
!8206 = !DILocation(line: 5006, column: 3, scope: !8191)
!8207 = !DILocation(line: 5008, column: 11, scope: !8191)
!8208 = !DILocation(line: 5008, column: 5, scope: !8191)
!8209 = !DILocation(line: 5009, column: 13, scope: !8191)
!8210 = !DILocation(line: 5010, column: 26, scope: !8191)
!8211 = !DILocation(line: 5010, column: 3, scope: !8191)
!8212 = !DILocation(line: 5011, column: 31, scope: !8191)
!8213 = !DILocation(line: 5011, column: 3, scope: !8191)
!8214 = !DILocation(line: 5012, column: 3, scope: !8191)
!8215 = !DILocation(line: 5014, column: 3, scope: !8191)
!8216 = !DILocation(line: 5016, column: 3, scope: !8191)
!8217 = !DILocation(line: 5016, column: 22, scope: !8191)
!8218 = !DILocation(line: 5017, column: 10, scope: !8191)
!8219 = !DILocation(line: 5017, column: 26, scope: !8191)
!8220 = !DILocation(line: 5017, column: 47, scope: !8191)
!8221 = !DILocation(line: 5018, column: 1, scope: !8191)
!8222 = distinct !DISubprogram(name: "move_succs", scope: !3, file: !3, line: 5024, type: !8223, scopeLine: 5025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8225)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{null, !6895, !1172}
!8225 = !{!8226, !8227, !8228, !8229}
!8226 = !DILocalVariable(name: "succsp", arg: 1, scope: !8222, file: !3, line: 5024, type: !6895)
!8227 = !DILocalVariable(name: "to", arg: 2, scope: !8222, file: !3, line: 5024, type: !1172)
!8228 = !DILocalVariable(name: "e", scope: !8222, file: !3, line: 5026, type: !1189)
!8229 = !DILocalVariable(name: "ei", scope: !8222, file: !3, line: 5027, type: !6890)
!8230 = !DILocation(line: 0, scope: !8222)
!8231 = !DILocation(line: 5026, column: 3, scope: !8222)
!8232 = !DILocation(line: 5027, column: 3, scope: !8222)
!8233 = !DILocation(line: 5029, column: 3, scope: !8222)
!8234 = !DILocation(line: 5031, column: 15, scope: !8222)
!8235 = !DILocation(line: 5031, column: 13, scope: !8222)
!8236 = !DILocation(line: 5033, column: 3, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 5033, column: 3)
!8238 = !DILocation(line: 0, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 5033, column: 3)
!8240 = !DILocation(line: 5033, column: 3, scope: !8239)
!8241 = !DILocation(line: 5034, column: 5, scope: !8239)
!8242 = !DILocation(line: 5034, column: 8, scope: !8239)
!8243 = !DILocation(line: 5034, column: 12, scope: !8239)
!8244 = distinct !{!8244, !8236, !8245}
!8245 = !DILocation(line: 5034, column: 14, scope: !8237)
!8246 = !DILocation(line: 5036, column: 11, scope: !8222)
!8247 = !DILocation(line: 5037, column: 1, scope: !8222)
!8248 = distinct !DISubprogram(name: "update_reg_and_insn_max_reg_pressure", scope: !3, file: !3, line: 1629, type: !2116, scopeLine: 1630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8249)
!8249 = !{!8250, !8251, !8252}
!8250 = !DILocalVariable(name: "insn", arg: 1, scope: !8248, file: !3, line: 1629, type: !638)
!8251 = !DILocalVariable(name: "i", scope: !8248, file: !3, line: 1631, type: !631)
!8252 = !DILocalVariable(name: "before", scope: !8248, file: !3, line: 1632, type: !2217)
!8253 = !DILocation(line: 0, scope: !8248)
!8254 = !DILocation(line: 1632, column: 3, scope: !8248)
!8255 = !DILocation(line: 1632, column: 7, scope: !8248)
!8256 = !DILocation(line: 0, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1634, column: 3)
!8258 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 1634, column: 3)
!8259 = !DILocation(line: 1634, column: 8, scope: !8258)
!8260 = !DILocation(line: 0, scope: !8258)
!8261 = !DILocation(line: 1634, column: 17, scope: !8257)
!8262 = !DILocation(line: 1634, column: 3, scope: !8258)
!8263 = !DILocation(line: 1635, column: 35, scope: !8257)
!8264 = !DILocation(line: 1635, column: 17, scope: !8257)
!8265 = !DILocation(line: 1635, column: 5, scope: !8257)
!8266 = !DILocation(line: 1635, column: 15, scope: !8257)
!8267 = !DILocation(line: 1634, column: 46, scope: !8257)
!8268 = !DILocation(line: 1634, column: 3, scope: !8257)
!8269 = distinct !{!8269, !8262, !8270}
!8270 = !DILocation(line: 1635, column: 57, scope: !8258)
!8271 = !DILocation(line: 1636, column: 3, scope: !8248)
!8272 = !DILocation(line: 0, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1637, column: 3)
!8274 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 1637, column: 3)
!8275 = !DILocation(line: 1637, column: 8, scope: !8274)
!8276 = !DILocation(line: 0, scope: !8274)
!8277 = !DILocation(line: 1637, column: 17, scope: !8273)
!8278 = !DILocation(line: 1637, column: 3, scope: !8274)
!8279 = !DILocation(line: 1638, column: 27, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 1638, column: 9)
!8281 = !DILocation(line: 1638, column: 9, scope: !8280)
!8282 = !DILocation(line: 1638, column: 54, scope: !8280)
!8283 = !DILocation(line: 1638, column: 51, scope: !8280)
!8284 = !DILocation(line: 1638, column: 9, scope: !8273)
!8285 = !DILocation(line: 1637, column: 46, scope: !8273)
!8286 = !DILocation(line: 1637, column: 3, scope: !8273)
!8287 = distinct !{!8287, !8278, !8288}
!8288 = !DILocation(line: 1639, column: 7, scope: !8274)
!8289 = !DILocation(line: 1640, column: 7, scope: !8248)
!8290 = !DILocation(line: 1641, column: 5, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 1640, column: 7)
!8292 = !DILocation(line: 1642, column: 1, scope: !8248)
!8293 = distinct !DISubprogram(name: "fix_recovery_deps", scope: !3, file: !3, line: 4722, type: !2111, scopeLine: 4723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8294)
!8294 = !{!8295, !8296, !8297, !8298, !8299, !8300, !8301, !8302, !8304, !8305}
!8295 = !DILocalVariable(name: "rec", arg: 1, scope: !8293, file: !3, line: 4722, type: !1172)
!8296 = !DILocalVariable(name: "note", scope: !8293, file: !3, line: 4724, type: !638)
!8297 = !DILocalVariable(name: "insn", scope: !8293, file: !3, line: 4724, type: !638)
!8298 = !DILocalVariable(name: "jump", scope: !8293, file: !3, line: 4724, type: !638)
!8299 = !DILocalVariable(name: "ready_list", scope: !8293, file: !3, line: 4724, type: !638)
!8300 = !DILocalVariable(name: "in_ready", scope: !8293, file: !3, line: 4725, type: !5736)
!8301 = !DILocalVariable(name: "link", scope: !8293, file: !3, line: 4726, type: !638)
!8302 = !DILocalVariable(name: "sd_it", scope: !8303, file: !3, line: 4739, type: !2252)
!8303 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 4738, column: 5)
!8304 = !DILocalVariable(name: "dep", scope: !8303, file: !3, line: 4740, type: !2846)
!8305 = !DILocalVariable(name: "consumer", scope: !8306, file: !3, line: 4745, type: !638)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 4744, column: 2)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 4742, column: 7)
!8308 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 4742, column: 7)
!8309 = !DILocation(line: 0, scope: !8293)
!8310 = !DILocation(line: 4724, column: 3, scope: !8293)
!8311 = !DILocation(line: 4724, column: 25, scope: !8293)
!8312 = !DILocation(line: 4725, column: 3, scope: !8293)
!8313 = !DILocation(line: 4728, column: 3, scope: !8293)
!8314 = !DILocation(line: 4731, column: 10, scope: !8293)
!8315 = !DILocation(line: 4732, column: 3, scope: !8293)
!8316 = !DILocation(line: 4733, column: 10, scope: !8293)
!8317 = !DILocation(line: 4734, column: 3, scope: !8293)
!8318 = !DILocation(line: 4735, column: 10, scope: !8293)
!8319 = !DILocation(line: 0, scope: !8303)
!8320 = !DILocation(line: 0, scope: !8308)
!8321 = !DILocation(line: 4737, column: 3, scope: !8293)
!8322 = !DILocation(line: 4739, column: 7, scope: !8303)
!8323 = !DILocation(line: 4740, column: 7, scope: !8303)
!8324 = !DILocation(line: 4742, column: 20, scope: !8308)
!8325 = !DILocation(line: 4742, column: 12, scope: !8308)
!8326 = !DILocation(line: 4743, column: 5, scope: !8307)
!8327 = !DILocation(line: 4742, column: 7, scope: !8308)
!8328 = !DILocation(line: 4745, column: 19, scope: !8306)
!8329 = !DILocation(line: 0, scope: !8306)
!8330 = !DILocation(line: 4747, column: 8, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 4747, column: 8)
!8332 = !DILocation(line: 4747, column: 34, scope: !8331)
!8333 = !DILocation(line: 4747, column: 8, scope: !8306)
!8334 = !DILocation(line: 4749, column: 8, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 4748, column: 6)
!8336 = !DILocation(line: 4751, column: 38, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 4751, column: 12)
!8338 = !DILocation(line: 4751, column: 13, scope: !8337)
!8339 = !DILocation(line: 4751, column: 12, scope: !8335)
!8340 = !DILocation(line: 4753, column: 45, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 4752, column: 3)
!8342 = !DILocation(line: 4753, column: 18, scope: !8341)
!8343 = !DILocation(line: 4753, column: 16, scope: !8341)
!8344 = !DILocation(line: 4754, column: 32, scope: !8341)
!8345 = !DILocation(line: 4754, column: 5, scope: !8341)
!8346 = !DILocation(line: 4755, column: 3, scope: !8341)
!8347 = !DILocation(line: 4759, column: 8, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 4758, column: 6)
!8349 = !DILocation(line: 4761, column: 8, scope: !8348)
!8350 = !DILocation(line: 4742, column: 7, scope: !8307)
!8351 = distinct !{!8351, !8327, !8352}
!8352 = !DILocation(line: 4763, column: 2, scope: !8308)
!8353 = !DILocation(line: 4765, column: 14, scope: !8303)
!8354 = !DILocation(line: 4766, column: 5, scope: !8293)
!8355 = !DILocation(line: 4767, column: 15, scope: !8293)
!8356 = !DILocation(line: 4766, column: 5, scope: !8303)
!8357 = distinct !{!8357, !8321, !8358}
!8358 = !DILocation(line: 4767, column: 22, scope: !8293)
!8359 = !DILocation(line: 4769, column: 3, scope: !8293)
!8360 = !DILocation(line: 4772, column: 8, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 4772, column: 3)
!8362 = !DILocation(line: 0, scope: !8361)
!8363 = !DILocation(line: 4772, column: 3, scope: !8361)
!8364 = !DILocation(line: 4773, column: 16, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 4772, column: 3)
!8366 = !DILocation(line: 4773, column: 5, scope: !8365)
!8367 = !DILocation(line: 4772, column: 40, scope: !8365)
!8368 = !DILocation(line: 4772, column: 3, scope: !8365)
!8369 = distinct !{!8369, !8363, !8370}
!8370 = !DILocation(line: 4773, column: 30, scope: !8361)
!8371 = !DILocation(line: 4774, column: 3, scope: !8293)
!8372 = !DILocation(line: 4777, column: 10, scope: !8293)
!8373 = !DILocation(line: 4778, column: 10, scope: !8293)
!8374 = !DILocation(line: 4780, column: 3, scope: !8293)
!8375 = !DILocation(line: 4781, column: 10, scope: !8293)
!8376 = !DILocation(line: 4783, column: 3, scope: !8293)
!8377 = !DILocation(line: 4784, column: 3, scope: !8293)
!8378 = !DILocation(line: 4785, column: 1, scope: !8293)
!8379 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !694, file: !694, line: 165, type: !8380, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8382)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !1867, !714}
!8382 = !{!8383, !8384}
!8383 = !DILocalVariable(name: "head", arg: 1, scope: !8379, file: !694, line: 165, type: !1867)
!8384 = !DILocalVariable(name: "obstack", arg: 2, scope: !8379, file: !694, line: 165, type: !714)
!8385 = !DILocation(line: 0, scope: !8379)
!8386 = !DILocation(line: 167, column: 23, scope: !8379)
!8387 = !DILocation(line: 167, column: 31, scope: !8379)
!8388 = !DILocation(line: 167, column: 9, scope: !8379)
!8389 = !DILocation(line: 167, column: 15, scope: !8379)
!8390 = !DILocation(line: 168, column: 9, scope: !8379)
!8391 = !DILocation(line: 168, column: 17, scope: !8379)
!8392 = !DILocation(line: 172, column: 1, scope: !8379)
!8393 = distinct !DISubprogram(name: "add_jump_dependencies", scope: !3, file: !3, line: 5101, type: !2173, scopeLine: 5102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8394)
!8394 = !{!8395, !8396, !8397, !8401}
!8395 = !DILocalVariable(name: "insn", arg: 1, scope: !8393, file: !3, line: 5101, type: !638)
!8396 = !DILocalVariable(name: "jump", arg: 2, scope: !8393, file: !3, line: 5101, type: !638)
!8397 = !DILocalVariable(name: "_new_dep", scope: !8398, file: !3, line: 5111, type: !2848)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 5110, column: 2)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 5109, column: 11)
!8400 = distinct !DILexicalBlock(scope: !8393, file: !3, line: 5104, column: 5)
!8401 = !DILocalVariable(name: "new_dep", scope: !8398, file: !3, line: 5111, type: !2847)
!8402 = !DILocation(line: 0, scope: !8393)
!8403 = !DILocation(line: 0, scope: !8398)
!8404 = !DILocation(line: 5103, column: 3, scope: !8393)
!8405 = !DILocation(line: 5105, column: 14, scope: !8400)
!8406 = !DILocation(line: 5106, column: 16, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 5106, column: 11)
!8408 = !DILocation(line: 5106, column: 11, scope: !8400)
!8409 = !DILocation(line: 5109, column: 11, scope: !8399)
!8410 = !DILocation(line: 5109, column: 32, scope: !8399)
!8411 = !DILocation(line: 5109, column: 11, scope: !8400)
!8412 = !DILocation(line: 5111, column: 4, scope: !8398)
!8413 = !DILocation(line: 5113, column: 4, scope: !8398)
!8414 = !DILocation(line: 5114, column: 4, scope: !8398)
!8415 = !DILocation(line: 5115, column: 2, scope: !8399)
!8416 = !DILocation(line: 5115, column: 2, scope: !8398)
!8417 = !DILocation(line: 5116, column: 5, scope: !8400)
!8418 = !DILocation(line: 5119, column: 3, scope: !8393)
!8419 = !DILocation(line: 5120, column: 1, scope: !8393)
!8420 = distinct !DISubprogram(name: "ok_for_early_queue_removal", scope: !3, file: !3, line: 2084, type: !2159, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8421)
!8421 = !{!8422, !8423, !8424, !8425, !8434}
!8422 = !DILocalVariable(name: "insn", arg: 1, scope: !8420, file: !3, line: 2084, type: !638)
!8423 = !DILocalVariable(name: "n_cycles", scope: !8420, file: !3, line: 2086, type: !631)
!8424 = !DILocalVariable(name: "prev_insn", scope: !8420, file: !3, line: 2087, type: !638)
!8425 = !DILocalVariable(name: "cost", scope: !8426, file: !3, line: 2095, type: !631)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 2094, column: 6)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 2093, column: 4)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2093, column: 4)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 2092, column: 2)
!8430 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2091, column: 7)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 2091, column: 7)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 2090, column: 5)
!8433 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 2089, column: 7)
!8434 = !DILocalVariable(name: "dep", scope: !8435, file: !3, line: 2105, type: !2846)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 2104, column: 3)
!8436 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2103, column: 12)
!8437 = !DILocation(line: 0, scope: !8420)
!8438 = !DILocation(line: 2089, column: 21, scope: !8433)
!8439 = !DILocation(line: 2089, column: 7, scope: !8433)
!8440 = !DILocation(line: 2089, column: 7, scope: !8420)
!8441 = !DILocation(line: 2091, column: 23, scope: !8431)
!8442 = !DILocation(line: 2091, column: 12, scope: !8431)
!8443 = !DILocation(line: 0, scope: !8431)
!8444 = !DILocation(line: 2091, column: 7, scope: !8431)
!8445 = !DILocation(line: 2093, column: 4, scope: !8428)
!8446 = !DILocation(line: 2097, column: 25, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2097, column: 12)
!8448 = !DILocation(line: 2097, column: 45, scope: !8447)
!8449 = !DILocation(line: 2097, column: 22, scope: !8447)
!8450 = !DILocation(line: 2097, column: 12, scope: !8426)
!8451 = !DILocation(line: 2103, column: 13, scope: !8436)
!8452 = !DILocation(line: 2103, column: 12, scope: !8426)
!8453 = !DILocation(line: 2107, column: 11, scope: !8435)
!8454 = !DILocation(line: 0, scope: !8435)
!8455 = !DILocation(line: 2109, column: 13, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 2109, column: 9)
!8457 = !DILocation(line: 2109, column: 9, scope: !8435)
!8458 = !DILocation(line: 2111, column: 16, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 2110, column: 7)
!8460 = !DILocation(line: 0, scope: !8426)
!8461 = !DILocation(line: 2113, column: 27, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2113, column: 13)
!8463 = !DILocation(line: 2114, column: 5, scope: !8462)
!8464 = !DILocation(line: 2114, column: 34, scope: !8462)
!8465 = !DILocation(line: 2113, column: 13, scope: !8462)
!8466 = !DILocation(line: 2113, column: 13, scope: !8459)
!8467 = !DILocation(line: 2117, column: 3, scope: !8436)
!8468 = !DILocation(line: 2119, column: 12, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2119, column: 12)
!8470 = !DILocation(line: 2119, column: 33, scope: !8469)
!8471 = !DILocation(line: 0, scope: !8427)
!8472 = !DILocation(line: 2093, column: 35, scope: !8427)
!8473 = !DILocation(line: 2093, column: 4, scope: !8427)
!8474 = distinct !{!8474, !8445, !8475}
!8475 = !DILocation(line: 2121, column: 6, scope: !8428)
!8476 = !DILocation(line: 2123, column: 9, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2123, column: 8)
!8478 = !DILocation(line: 2123, column: 8, scope: !8429)
!8479 = !DILocation(line: 2125, column: 16, scope: !8429)
!8480 = !DILocation(line: 2091, column: 71, scope: !8430)
!8481 = !DILocation(line: 2091, column: 7, scope: !8430)
!8482 = distinct !{!8482, !8444, !8483}
!8483 = !DILocation(line: 2126, column: 2, scope: !8431)
!8484 = !DILocation(line: 2130, column: 1, scope: !8420)
!8485 = distinct !DISubprogram(name: "ready_remove_insn", scope: !3, file: !3, line: 1486, type: !2116, scopeLine: 1487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8486)
!8486 = !{!8487, !8488}
!8487 = !DILocalVariable(name: "insn", arg: 1, scope: !8485, file: !3, line: 1486, type: !638)
!8488 = !DILocalVariable(name: "i", scope: !8485, file: !3, line: 1488, type: !631)
!8489 = !DILocation(line: 0, scope: !8485)
!8490 = !DILocation(line: 1490, column: 8, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 1490, column: 3)
!8492 = !DILocation(line: 0, scope: !8491)
!8493 = !DILocation(line: 1490, column: 27, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1490, column: 3)
!8495 = !DILocation(line: 1490, column: 17, scope: !8494)
!8496 = !DILocation(line: 1490, column: 3, scope: !8491)
!8497 = !DILocation(line: 1491, column: 9, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 1491, column: 9)
!8499 = !DILocation(line: 1491, column: 35, scope: !8498)
!8500 = !DILocation(line: 1491, column: 9, scope: !8494)
!8501 = !DILocation(line: 1493, column: 9, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 1492, column: 7)
!8503 = !DILocation(line: 1494, column: 9, scope: !8502)
!8504 = !DILocation(line: 1490, column: 37, scope: !8494)
!8505 = !DILocation(line: 1490, column: 3, scope: !8494)
!8506 = distinct !{!8506, !8496, !8507}
!8507 = !DILocation(line: 1495, column: 7, scope: !8491)
!8508 = !DILocation(line: 1496, column: 3, scope: !8485)
!8509 = !DILocation(line: 1497, column: 1, scope: !8485)
!8510 = distinct !DISubprogram(name: "contributes_to_priority_p", scope: !3, file: !3, line: 952, type: !8511, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8513)
!8511 = !DISubroutineType(types: !8512)
!8512 = !{!630, !2846}
!8513 = !{!8514}
!8514 = !DILocalVariable(name: "dep", arg: 1, scope: !8510, file: !3, line: 952, type: !2846)
!8515 = !DILocation(line: 0, scope: !8510)
!8516 = !DILocation(line: 954, column: 7, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 954, column: 7)
!8518 = !DILocation(line: 955, column: 7, scope: !8517)
!8519 = !DILocation(line: 955, column: 10, scope: !8517)
!8520 = !DILocation(line: 954, column: 7, scope: !8510)
!8521 = !DILocation(line: 959, column: 8, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 959, column: 7)
!8523 = !DILocation(line: 959, column: 28, scope: !8522)
!8524 = !DILocation(line: 959, column: 7, scope: !8510)
!8525 = !DILocation(line: 969, column: 7, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 969, column: 7)
!8527 = !DILocation(line: 969, column: 24, scope: !8526)
!8528 = !DILocation(line: 970, column: 7, scope: !8526)
!8529 = !DILocation(line: 970, column: 12, scope: !8526)
!8530 = !DILocation(line: 970, column: 23, scope: !8526)
!8531 = !DILocation(line: 970, column: 29, scope: !8526)
!8532 = !DILocation(line: 971, column: 7, scope: !8526)
!8533 = !DILocation(line: 971, column: 11, scope: !8526)
!8534 = !DILocation(line: 971, column: 28, scope: !8526)
!8535 = !DILocation(line: 969, column: 7, scope: !8510)
!8536 = !DILocation(line: 974, column: 3, scope: !8510)
!8537 = !DILocation(line: 975, column: 1, scope: !8510)
!8538 = distinct !DISubprogram(name: "queue_remove", scope: !3, file: !3, line: 1365, type: !2116, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8539)
!8539 = !{!8540}
!8540 = !DILocalVariable(name: "insn", arg: 1, scope: !8538, file: !3, line: 1365, type: !638)
!8541 = !DILocation(line: 0, scope: !8538)
!8542 = !DILocation(line: 1367, column: 3, scope: !8538)
!8543 = !DILocation(line: 1368, column: 38, scope: !8538)
!8544 = !DILocation(line: 1368, column: 49, scope: !8538)
!8545 = !DILocation(line: 1368, column: 3, scope: !8538)
!8546 = !DILocation(line: 1369, column: 9, scope: !8538)
!8547 = !DILocation(line: 1370, column: 3, scope: !8538)
!8548 = !DILocation(line: 1370, column: 22, scope: !8538)
!8549 = !DILocation(line: 1371, column: 1, scope: !8538)
!8550 = distinct !DISubprogram(name: "begin_speculative_block", scope: !3, file: !3, line: 4066, type: !2116, scopeLine: 4067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8551)
!8551 = !{!8552}
!8552 = !DILocalVariable(name: "insn", arg: 1, scope: !8550, file: !3, line: 4066, type: !638)
!8553 = !DILocation(line: 0, scope: !8550)
!8554 = !DILocation(line: 4068, column: 7, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 4068, column: 7)
!8556 = !DILocation(line: 4068, column: 24, scope: !8555)
!8557 = !DILocation(line: 4068, column: 7, scope: !8550)
!8558 = !DILocation(line: 4069, column: 18, scope: !8555)
!8559 = !DILocation(line: 4069, column: 5, scope: !8555)
!8560 = !DILocation(line: 4070, column: 7, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 4070, column: 7)
!8562 = !DILocation(line: 4070, column: 24, scope: !8561)
!8563 = !DILocation(line: 4070, column: 7, scope: !8550)
!8564 = !DILocation(line: 4071, column: 21, scope: !8561)
!8565 = !DILocation(line: 4071, column: 5, scope: !8561)
!8566 = !DILocation(line: 4073, column: 3, scope: !8550)
!8567 = !DILocation(line: 4075, column: 3, scope: !8550)
!8568 = !DILocation(line: 4075, column: 20, scope: !8550)
!8569 = !DILocation(line: 4076, column: 1, scope: !8550)
!8570 = distinct !DISubprogram(name: "add_to_speculative_block", scope: !3, file: !3, line: 4082, type: !2116, scopeLine: 4083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8571)
!8571 = !{!8572, !8573, !8574, !8575, !8576, !8577, !8579, !8583, !8585, !8586, !8587, !8591, !8594, !8595, !8599, !8601, !8603}
!8572 = !DILocalVariable(name: "insn", arg: 1, scope: !8570, file: !3, line: 4082, type: !638)
!8573 = !DILocalVariable(name: "ts", scope: !8570, file: !3, line: 4084, type: !1865)
!8574 = !DILocalVariable(name: "sd_it", scope: !8570, file: !3, line: 4085, type: !2252)
!8575 = !DILocalVariable(name: "dep", scope: !8570, file: !3, line: 4086, type: !2846)
!8576 = !DILocalVariable(name: "twins", scope: !8570, file: !3, line: 4087, type: !638)
!8577 = !DILocalVariable(name: "priorities_roots", scope: !8570, file: !3, line: 4088, type: !8578)
!8578 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_vec_t", file: !398, line: 42, baseType: !1886)
!8579 = !DILocalVariable(name: "check", scope: !8580, file: !3, line: 4107, type: !638)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4106, column: 5)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 4104, column: 3)
!8582 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4104, column: 3)
!8583 = !DILocalVariable(name: "check", scope: !8584, file: !3, line: 4126, type: !638)
!8584 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4125, column: 5)
!8585 = !DILocalVariable(name: "twin", scope: !8584, file: !3, line: 4126, type: !638)
!8586 = !DILocalVariable(name: "rec", scope: !8584, file: !3, line: 4127, type: !1172)
!8587 = !DILocalVariable(name: "pro", scope: !8588, file: !3, line: 4163, type: !638)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 4162, column: 2)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 4161, column: 7)
!8590 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 4161, column: 7)
!8591 = !DILocalVariable(name: "_new_dep", scope: !8592, file: !3, line: 4172, type: !2848)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 4171, column: 6)
!8593 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 4170, column: 8)
!8594 = !DILocalVariable(name: "new_dep", scope: !8592, file: !3, line: 4172, type: !2847)
!8595 = !DILocalVariable(name: "pro", scope: !8596, file: !3, line: 4185, type: !638)
!8596 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 4184, column: 2)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 4182, column: 7)
!8598 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 4182, column: 7)
!8599 = !DILocalVariable(name: "twin", scope: !8600, file: !3, line: 4198, type: !638)
!8600 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4197, column: 5)
!8601 = !DILocalVariable(name: "_new_dep", scope: !8602, file: !3, line: 4203, type: !2848)
!8602 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 4202, column: 7)
!8603 = !DILocalVariable(name: "new_dep", scope: !8602, file: !3, line: 4203, type: !2847)
!8604 = !DILocation(line: 0, scope: !8570)
!8605 = !DILocation(line: 4085, column: 3, scope: !8570)
!8606 = !DILocation(line: 4086, column: 3, scope: !8570)
!8607 = !DILocation(line: 4088, column: 3, scope: !8570)
!8608 = !DILocation(line: 4090, column: 8, scope: !8570)
!8609 = !DILocation(line: 4091, column: 3, scope: !8570)
!8610 = !DILocation(line: 4093, column: 10, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4093, column: 7)
!8612 = !DILocation(line: 4093, column: 7, scope: !8570)
!8613 = !DILocation(line: 4094, column: 18, scope: !8611)
!8614 = !DILocation(line: 4094, column: 5, scope: !8611)
!8615 = !DILocation(line: 4095, column: 10, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 4095, column: 7)
!8617 = !DILocation(line: 4095, column: 7, scope: !8570)
!8618 = !DILocation(line: 4096, column: 21, scope: !8616)
!8619 = !DILocation(line: 4096, column: 5, scope: !8616)
!8620 = !DILocation(line: 4098, column: 3, scope: !8570)
!8621 = !DILocation(line: 4098, column: 20, scope: !8570)
!8622 = !DILocation(line: 4099, column: 3, scope: !8570)
!8623 = !DILocation(line: 4101, column: 3, scope: !8570)
!8624 = !DILocation(line: 4101, column: 20, scope: !8570)
!8625 = !DILocation(line: 4104, column: 16, scope: !8582)
!8626 = !DILocation(line: 0, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 4110, column: 2)
!8628 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 4109, column: 11)
!8629 = !DILocation(line: 4104, column: 8, scope: !8582)
!8630 = !DILocation(line: 4105, column: 8, scope: !8581)
!8631 = !DILocation(line: 4104, column: 3, scope: !8582)
!8632 = !DILocation(line: 4107, column: 19, scope: !8580)
!8633 = !DILocation(line: 0, scope: !8580)
!8634 = !DILocation(line: 4109, column: 11, scope: !8628)
!8635 = !DILocation(line: 4109, column: 11, scope: !8580)
!8636 = !DILocation(line: 4111, column: 4, scope: !8627)
!8637 = !DILocation(line: 4114, column: 12, scope: !8627)
!8638 = !DILocation(line: 4115, column: 2, scope: !8627)
!8639 = !DILocation(line: 4118, column: 2, scope: !8628)
!8640 = !DILocation(line: 4104, column: 3, scope: !8581)
!8641 = distinct !{!8641, !8631, !8642}
!8642 = !DILocation(line: 4119, column: 5, scope: !8582)
!8643 = !DILocation(line: 4121, column: 20, scope: !8570)
!8644 = !DILocation(line: 4122, column: 3, scope: !8570)
!8645 = !DILocation(line: 0, scope: !8584)
!8646 = !DILocation(line: 0, scope: !8590)
!8647 = !DILocation(line: 0, scope: !8592)
!8648 = !DILocation(line: 0, scope: !8598)
!8649 = !DILocation(line: 4124, column: 3, scope: !8570)
!8650 = !DILocation(line: 4130, column: 15, scope: !8584)
!8651 = !DILocation(line: 4131, column: 12, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 4131, column: 11)
!8653 = !DILocation(line: 4131, column: 11, scope: !8584)
!8654 = !DILocation(line: 4135, column: 7, scope: !8584)
!8655 = !DILocation(line: 4139, column: 15, scope: !8584)
!8656 = !DILocation(line: 4141, column: 7, scope: !8584)
!8657 = !DILocation(line: 4144, column: 13, scope: !8584)
!8658 = !DILocation(line: 4146, column: 43, scope: !8584)
!8659 = !DILocation(line: 4146, column: 32, scope: !8584)
!8660 = !DILocation(line: 4146, column: 60, scope: !8584)
!8661 = !DILocation(line: 4146, column: 14, scope: !8584)
!8662 = !DILocation(line: 4147, column: 7, scope: !8584)
!8663 = !DILocation(line: 4149, column: 7, scope: !8584)
!8664 = !DILocation(line: 4151, column: 11, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 4151, column: 11)
!8666 = !DILocation(line: 4151, column: 25, scope: !8665)
!8667 = !DILocation(line: 4151, column: 28, scope: !8665)
!8668 = !DILocation(line: 4151, column: 39, scope: !8665)
!8669 = !DILocation(line: 4151, column: 11, scope: !8584)
!8670 = !DILocation(line: 4155, column: 18, scope: !8665)
!8671 = !DILocation(line: 4155, column: 40, scope: !8665)
!8672 = !DILocation(line: 4154, column: 9, scope: !8665)
!8673 = !DILocation(line: 4157, column: 15, scope: !8584)
!8674 = !DILocation(line: 4161, column: 7, scope: !8590)
!8675 = !DILocation(line: 4161, column: 7, scope: !8589)
!8676 = !DILocation(line: 4163, column: 14, scope: !8588)
!8677 = !DILocation(line: 0, scope: !8588)
!8678 = !DILocation(line: 4165, column: 4, scope: !8588)
!8679 = !DILocation(line: 4170, column: 8, scope: !8593)
!8680 = !DILocation(line: 4170, column: 29, scope: !8593)
!8681 = !DILocation(line: 4170, column: 8, scope: !8588)
!8682 = !DILocation(line: 4172, column: 8, scope: !8592)
!8683 = !DILocation(line: 4174, column: 8, scope: !8592)
!8684 = !DILocation(line: 4175, column: 8, scope: !8592)
!8685 = !DILocation(line: 4176, column: 6, scope: !8593)
!8686 = !DILocation(line: 4176, column: 6, scope: !8592)
!8687 = distinct !{!8687, !8674, !8688}
!8688 = !DILocation(line: 4177, column: 2, scope: !8590)
!8689 = !DILocation(line: 4179, column: 7, scope: !8584)
!8690 = !DILocation(line: 4182, column: 20, scope: !8598)
!8691 = !DILocation(line: 4182, column: 12, scope: !8598)
!8692 = !DILocation(line: 4183, column: 5, scope: !8597)
!8693 = !DILocation(line: 4182, column: 7, scope: !8598)
!8694 = !DILocation(line: 4185, column: 14, scope: !8596)
!8695 = !DILocation(line: 0, scope: !8596)
!8696 = !DILocation(line: 4187, column: 8, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 4187, column: 8)
!8698 = !DILocation(line: 4187, column: 29, scope: !8697)
!8699 = !DILocation(line: 4187, column: 8, scope: !8596)
!8700 = !DILocation(line: 4188, column: 6, scope: !8697)
!8701 = !DILocation(line: 4190, column: 6, scope: !8697)
!8702 = !DILocation(line: 4182, column: 7, scope: !8597)
!8703 = distinct !{!8703, !8693, !8704}
!8704 = !DILocation(line: 4191, column: 2, scope: !8598)
!8705 = distinct !{!8705, !8649, !8706}
!8706 = !DILocation(line: 4192, column: 5, scope: !8570)
!8707 = !DILocation(line: 0, scope: !8602)
!8708 = !DILocation(line: 4196, column: 3, scope: !8570)
!8709 = !DILocation(line: 4200, column: 14, scope: !8600)
!8710 = !DILocation(line: 0, scope: !8600)
!8711 = !DILocation(line: 4203, column: 2, scope: !8602)
!8712 = !DILocation(line: 4205, column: 2, scope: !8602)
!8713 = !DILocation(line: 4206, column: 2, scope: !8602)
!8714 = !DILocation(line: 4207, column: 7, scope: !8600)
!8715 = !DILocation(line: 4209, column: 14, scope: !8600)
!8716 = !DILocation(line: 4210, column: 7, scope: !8600)
!8717 = distinct !{!8717, !8708, !8718}
!8718 = !DILocation(line: 4212, column: 5, scope: !8570)
!8719 = !DILocation(line: 4214, column: 20, scope: !8570)
!8720 = !DILocation(line: 4214, column: 3, scope: !8570)
!8721 = !DILocation(line: 4215, column: 3, scope: !8570)
!8722 = !DILocation(line: 4216, column: 1, scope: !8570)
!8723 = distinct !DISubprogram(name: "create_check_block_twin", scope: !3, file: !3, line: 4447, type: !2225, scopeLine: 4448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8724)
!8724 = !{!8725, !8726, !8727, !8728, !8729, !8730, !8731, !8732, !8733, !8734, !8735, !8736, !8737, !8740, !8741, !8746, !8747, !8750, !8751, !8752, !8756, !8757, !8760}
!8725 = !DILocalVariable(name: "insn", arg: 1, scope: !8723, file: !3, line: 4447, type: !638)
!8726 = !DILocalVariable(name: "mutate_p", arg: 2, scope: !8723, file: !3, line: 4447, type: !630)
!8727 = !DILocalVariable(name: "rec", scope: !8723, file: !3, line: 4449, type: !1172)
!8728 = !DILocalVariable(name: "label", scope: !8723, file: !3, line: 4450, type: !638)
!8729 = !DILocalVariable(name: "check", scope: !8723, file: !3, line: 4450, type: !638)
!8730 = !DILocalVariable(name: "twin", scope: !8723, file: !3, line: 4450, type: !638)
!8731 = !DILocalVariable(name: "fs", scope: !8723, file: !3, line: 4451, type: !1865)
!8732 = !DILocalVariable(name: "sd_it", scope: !8723, file: !3, line: 4452, type: !2252)
!8733 = !DILocalVariable(name: "dep", scope: !8723, file: !3, line: 4453, type: !2846)
!8734 = !DILocalVariable(name: "_new_dep", scope: !8723, file: !3, line: 4454, type: !2848)
!8735 = !DILocalVariable(name: "new_dep", scope: !8723, file: !3, line: 4454, type: !2847)
!8736 = !DILocalVariable(name: "todo_spec", scope: !8723, file: !3, line: 4455, type: !1865)
!8737 = !DILocalVariable(name: "sd_it", scope: !8738, file: !3, line: 4521, type: !2252)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 4520, column: 5)
!8739 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4519, column: 7)
!8740 = !DILocalVariable(name: "dep", scope: !8738, file: !3, line: 4522, type: !2846)
!8741 = !DILocalVariable(name: "_dep2", scope: !8742, file: !3, line: 4527, type: !2271)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 4526, column: 4)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 4525, column: 6)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 4524, column: 7)
!8745 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 4524, column: 7)
!8746 = !DILocalVariable(name: "dep2", scope: !8742, file: !3, line: 4527, type: !5906)
!8747 = !DILocalVariable(name: "first_bb", scope: !8748, file: !3, line: 4559, type: !1172)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 4558, column: 5)
!8749 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4556, column: 7)
!8750 = !DILocalVariable(name: "second_bb", scope: !8748, file: !3, line: 4559, type: !1172)
!8751 = !DILocalVariable(name: "jump", scope: !8748, file: !3, line: 4560, type: !638)
!8752 = !DILocalVariable(name: "pro", scope: !8753, file: !3, line: 4580, type: !638)
!8753 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 4579, column: 5)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 4578, column: 3)
!8755 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4578, column: 3)
!8756 = !DILocalVariable(name: "ds", scope: !8753, file: !3, line: 4581, type: !1865)
!8757 = !DILocalVariable(name: "ts", scope: !8758, file: !3, line: 4639, type: !1865)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 4638, column: 5)
!8759 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4637, column: 7)
!8760 = !DILocalVariable(name: "priorities_roots", scope: !8761, file: !3, line: 4710, type: !8578)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 4709, column: 5)
!8762 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4706, column: 7)
!8763 = !DILocation(line: 0, scope: !8723)
!8764 = !DILocation(line: 4452, column: 3, scope: !8723)
!8765 = !DILocation(line: 4453, column: 3, scope: !8723)
!8766 = !DILocation(line: 4454, column: 3, scope: !8723)
!8767 = !DILocation(line: 4457, column: 3, scope: !8723)
!8768 = !DILocation(line: 4459, column: 8, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4459, column: 7)
!8770 = !DILocation(line: 0, scope: !8769)
!8771 = !DILocation(line: 4459, column: 7, scope: !8723)
!8772 = !DILocation(line: 4460, column: 17, scope: !8769)
!8773 = !DILocation(line: 4460, column: 5, scope: !8769)
!8774 = !DILocation(line: 4463, column: 7, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 4462, column: 5)
!8776 = !DILocation(line: 4466, column: 19, scope: !8775)
!8777 = !DILocation(line: 4469, column: 13, scope: !8723)
!8778 = !DILocation(line: 4472, column: 16, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4472, column: 7)
!8780 = !DILocation(line: 4472, column: 33, scope: !8779)
!8781 = !DILocation(line: 4472, column: 19, scope: !8779)
!8782 = !DILocation(line: 4472, column: 7, scope: !8723)
!8783 = !DILocation(line: 4474, column: 13, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 4473, column: 5)
!8785 = !DILocation(line: 4475, column: 15, scope: !8784)
!8786 = !DILocation(line: 4476, column: 5, scope: !8784)
!8787 = !DILocation(line: 4479, column: 13, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 4478, column: 5)
!8789 = !DILocation(line: 0, scope: !8779)
!8790 = !DILocation(line: 4484, column: 25, scope: !8723)
!8791 = !DILocation(line: 4484, column: 11, scope: !8723)
!8792 = !DILocation(line: 4486, column: 14, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4486, column: 7)
!8794 = !DILocation(line: 4486, column: 11, scope: !8793)
!8795 = !DILocation(line: 4486, column: 7, scope: !8723)
!8796 = !DILocation(line: 4492, column: 15, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 4487, column: 5)
!8798 = !DILocation(line: 4493, column: 7, scope: !8797)
!8799 = !DILocation(line: 4493, column: 26, scope: !8797)
!8800 = !DILocation(line: 4494, column: 7, scope: !8797)
!8801 = !DILocation(line: 4494, column: 26, scope: !8797)
!8802 = !DILocation(line: 4495, column: 5, scope: !8797)
!8803 = !DILocation(line: 4497, column: 13, scope: !8793)
!8804 = !DILocation(line: 0, scope: !8793)
!8805 = !DILocation(line: 4500, column: 3, scope: !8723)
!8806 = !DILocation(line: 4503, column: 3, scope: !8723)
!8807 = !DILocation(line: 4504, column: 28, scope: !8723)
!8808 = !DILocation(line: 4504, column: 48, scope: !8723)
!8809 = !DILocation(line: 4504, column: 3, scope: !8723)
!8810 = !DILocation(line: 4506, column: 7, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4506, column: 7)
!8812 = !DILocation(line: 4506, column: 27, scope: !8811)
!8813 = !DILocation(line: 4506, column: 7, scope: !8723)
!8814 = !DILocation(line: 4507, column: 5, scope: !8811)
!8815 = !DILocation(line: 4509, column: 3, scope: !8723)
!8816 = !DILocation(line: 4509, column: 26, scope: !8723)
!8817 = !DILocation(line: 4511, column: 7, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4511, column: 7)
!8819 = !DILocation(line: 4511, column: 21, scope: !8818)
!8820 = !DILocation(line: 4511, column: 24, scope: !8818)
!8821 = !DILocation(line: 4511, column: 35, scope: !8818)
!8822 = !DILocation(line: 4511, column: 7, scope: !8723)
!8823 = !DILocation(line: 4513, column: 16, scope: !8818)
!8824 = !DILocation(line: 4513, column: 36, scope: !8818)
!8825 = !DILocation(line: 4513, column: 14, scope: !8818)
!8826 = !DILocation(line: 4512, column: 5, scope: !8818)
!8827 = !DILocation(line: 4515, column: 3, scope: !8723)
!8828 = !DILocation(line: 4519, column: 14, scope: !8739)
!8829 = !DILocation(line: 4519, column: 11, scope: !8739)
!8830 = !DILocation(line: 4519, column: 7, scope: !8723)
!8831 = !DILocation(line: 4521, column: 7, scope: !8738)
!8832 = !DILocation(line: 4522, column: 7, scope: !8738)
!8833 = !DILocation(line: 4524, column: 7, scope: !8745)
!8834 = !DILocation(line: 0, scope: !8742)
!8835 = !DILocation(line: 0, scope: !8738)
!8836 = !DILocation(line: 4524, column: 7, scope: !8744)
!8837 = !DILocation(line: 4525, column: 7, scope: !8743)
!8838 = !DILocation(line: 4525, column: 24, scope: !8743)
!8839 = !DILocation(line: 4525, column: 38, scope: !8743)
!8840 = !DILocation(line: 4525, column: 6, scope: !8744)
!8841 = !DILocation(line: 4527, column: 6, scope: !8742)
!8842 = !DILocation(line: 4529, column: 22, scope: !8742)
!8843 = !DILocation(line: 4529, column: 6, scope: !8742)
!8844 = !DILocation(line: 4531, column: 6, scope: !8742)
!8845 = !DILocation(line: 4532, column: 4, scope: !8743)
!8846 = !DILocation(line: 4532, column: 4, scope: !8742)
!8847 = distinct !{!8847, !8833, !8848}
!8848 = !DILocation(line: 4532, column: 4, scope: !8745)
!8849 = !DILocation(line: 4534, column: 31, scope: !8738)
!8850 = !DILocation(line: 4534, column: 48, scope: !8738)
!8851 = !DILocation(line: 4534, column: 14, scope: !8738)
!8852 = !DILocation(line: 4535, column: 7, scope: !8738)
!8853 = !DILocation(line: 4537, column: 11, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 4537, column: 11)
!8855 = !DILocation(line: 4537, column: 25, scope: !8854)
!8856 = !DILocation(line: 4537, column: 28, scope: !8854)
!8857 = !DILocation(line: 4537, column: 39, scope: !8854)
!8858 = !DILocation(line: 4537, column: 11, scope: !8738)
!8859 = !DILocation(line: 4541, column: 4, scope: !8854)
!8860 = !DILocation(line: 4541, column: 26, scope: !8854)
!8861 = !DILocation(line: 4540, column: 2, scope: !8854)
!8862 = !DILocation(line: 4542, column: 5, scope: !8739)
!8863 = !DILocation(line: 4542, column: 5, scope: !8738)
!8864 = !DILocation(line: 4545, column: 26, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 4544, column: 5)
!8866 = !DILocation(line: 4545, column: 7, scope: !8865)
!8867 = !DILocation(line: 4545, column: 24, scope: !8865)
!8868 = !DILocation(line: 4546, column: 7, scope: !8865)
!8869 = !DILocation(line: 4546, column: 32, scope: !8865)
!8870 = !DILocation(line: 0, scope: !8739)
!8871 = !DILocation(line: 4554, column: 3, scope: !8723)
!8872 = !DILocation(line: 4556, column: 14, scope: !8749)
!8873 = !DILocation(line: 4556, column: 11, scope: !8749)
!8874 = !DILocation(line: 4556, column: 7, scope: !8723)
!8875 = !DILocation(line: 4562, column: 18, scope: !8748)
!8876 = !DILocation(line: 0, scope: !8748)
!8877 = !DILocation(line: 4563, column: 19, scope: !8748)
!8878 = !DILocation(line: 4565, column: 7, scope: !8748)
!8879 = !DILocation(line: 4567, column: 7, scope: !8748)
!8880 = !DILocation(line: 4568, column: 7, scope: !8748)
!8881 = !DILocation(line: 4568, column: 32, scope: !8748)
!8882 = !DILocation(line: 4570, column: 14, scope: !8748)
!8883 = !DILocation(line: 4571, column: 7, scope: !8748)
!8884 = !DILocation(line: 4572, column: 5, scope: !8748)
!8885 = !DILocation(line: 4578, column: 3, scope: !8755)
!8886 = !DILocation(line: 0, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 4610, column: 2)
!8888 = distinct !DILexicalBlock(scope: !8753, file: !3, line: 4609, column: 11)
!8889 = !DILocation(line: 4578, column: 3, scope: !8754)
!8890 = !DILocation(line: 4580, column: 17, scope: !8753)
!8891 = !DILocation(line: 0, scope: !8753)
!8892 = !DILocation(line: 4598, column: 12, scope: !8753)
!8893 = !DILocation(line: 4600, column: 14, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8753, file: !3, line: 4600, column: 11)
!8895 = !DILocation(line: 4600, column: 11, scope: !8753)
!8896 = !DILocation(line: 4603, column: 7, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 4601, column: 2)
!8898 = !DILocation(line: 4604, column: 2, scope: !8897)
!8899 = !DILocation(line: 4606, column: 40, scope: !8753)
!8900 = !DILocation(line: 4606, column: 7, scope: !8753)
!8901 = !DILocation(line: 4607, column: 7, scope: !8753)
!8902 = !DILocation(line: 4609, column: 18, scope: !8888)
!8903 = !DILocation(line: 4609, column: 15, scope: !8888)
!8904 = !DILocation(line: 4609, column: 11, scope: !8753)
!8905 = !DILocation(line: 4611, column: 22, scope: !8887)
!8906 = !DILocation(line: 4612, column: 4, scope: !8887)
!8907 = !DILocation(line: 4613, column: 2, scope: !8887)
!8908 = distinct !{!8908, !8885, !8909}
!8909 = !DILocation(line: 4614, column: 5, scope: !8755)
!8910 = !DILocation(line: 4617, column: 16, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4617, column: 3)
!8912 = !DILocation(line: 4602, column: 4, scope: !8897)
!8913 = !DILocation(line: 4617, column: 8, scope: !8911)
!8914 = !DILocation(line: 4618, column: 8, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 4617, column: 3)
!8916 = !DILocation(line: 4617, column: 3, scope: !8911)
!8917 = !DILocation(line: 4624, column: 2, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 4620, column: 11)
!8919 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 4619, column: 5)
!8920 = !DILocation(line: 4617, column: 3, scope: !8915)
!8921 = distinct !{!8921, !8916, !8922}
!8922 = !DILocation(line: 4627, column: 5, scope: !8911)
!8923 = !DILocation(line: 4635, column: 3, scope: !8723)
!8924 = !DILocation(line: 4620, column: 12, scope: !8918)
!8925 = !DILocation(line: 4620, column: 29, scope: !8918)
!8926 = !DILocation(line: 4621, column: 4, scope: !8918)
!8927 = !DILocation(line: 4626, column: 2, scope: !8918)
!8928 = !DILocation(line: 0, scope: !8759)
!8929 = !DILocation(line: 4637, column: 7, scope: !8723)
!8930 = !DILocation(line: 4639, column: 17, scope: !8758)
!8931 = !DILocation(line: 0, scope: !8758)
!8932 = !DILocation(line: 4641, column: 29, scope: !8758)
!8933 = !DILocation(line: 4641, column: 7, scope: !8758)
!8934 = !DILocation(line: 4641, column: 24, scope: !8758)
!8935 = !DILocation(line: 4642, column: 7, scope: !8758)
!8936 = !DILocation(line: 4642, column: 26, scope: !8758)
!8937 = !DILocation(line: 4646, column: 14, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 4646, column: 11)
!8939 = !DILocation(line: 4646, column: 11, scope: !8758)
!8940 = !DILocation(line: 4647, column: 37, scope: !8938)
!8941 = !DILocation(line: 4647, column: 7, scope: !8938)
!8942 = !DILocation(line: 4647, column: 2, scope: !8938)
!8943 = !DILocation(line: 4648, column: 14, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 4648, column: 11)
!8945 = !DILocation(line: 4648, column: 11, scope: !8758)
!8946 = !DILocation(line: 4650, column: 7, scope: !8944)
!8947 = !DILocation(line: 4649, column: 7, scope: !8944)
!8948 = !DILocation(line: 4649, column: 2, scope: !8944)
!8949 = !DILocation(line: 4653, column: 26, scope: !8759)
!8950 = !DILocation(line: 4653, column: 5, scope: !8759)
!8951 = !DILocation(line: 4653, column: 24, scope: !8759)
!8952 = !DILocation(line: 4656, column: 3, scope: !8723)
!8953 = !DILocation(line: 4658, column: 14, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4658, column: 7)
!8955 = !DILocation(line: 4658, column: 11, scope: !8954)
!8956 = !DILocation(line: 4658, column: 7, scope: !8723)
!8957 = !DILocation(line: 4664, column: 11, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 4659, column: 5)
!8959 = !DILocation(line: 4666, column: 4, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 4665, column: 2)
!8961 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 4664, column: 11)
!8962 = !DILocation(line: 4667, column: 4, scope: !8960)
!8963 = !DILocation(line: 4669, column: 4, scope: !8960)
!8964 = !DILocation(line: 4670, column: 4, scope: !8960)
!8965 = !DILocation(line: 4671, column: 2, scope: !8960)
!8966 = !DILocation(line: 4674, column: 8, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 4674, column: 8)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 4673, column: 2)
!8969 = !DILocation(line: 4674, column: 19, scope: !8967)
!8970 = !DILocation(line: 4674, column: 8, scope: !8968)
!8971 = !DILocation(line: 4676, column: 10, scope: !8967)
!8972 = !DILocation(line: 4676, column: 30, scope: !8967)
!8973 = !DILocation(line: 4676, column: 8, scope: !8967)
!8974 = !DILocation(line: 4675, column: 6, scope: !8967)
!8975 = !DILocation(line: 4680, column: 14, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 4679, column: 4)
!8977 = !DILocation(line: 4683, column: 6, scope: !8976)
!8978 = !DILocation(line: 4683, column: 13, scope: !8976)
!8979 = !DILocation(line: 4684, column: 8, scope: !8976)
!8980 = distinct !{!8980, !8977, !8981}
!8981 = !DILocation(line: 4684, column: 28, scope: !8976)
!8982 = !DILocation(line: 4689, column: 8, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 4689, column: 8)
!8984 = !DILocation(line: 4689, column: 27, scope: !8983)
!8985 = !DILocation(line: 4689, column: 8, scope: !8968)
!8986 = !DILocation(line: 4690, column: 6, scope: !8983)
!8987 = !DILocation(line: 4694, column: 4, scope: !8968)
!8988 = !DILocation(line: 4697, column: 7, scope: !8958)
!8989 = !DILocation(line: 4698, column: 7, scope: !8958)
!8990 = !DILocation(line: 4699, column: 5, scope: !8958)
!8991 = !DILocation(line: 4702, column: 7, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 4701, column: 5)
!8993 = !DILocation(line: 4703, column: 7, scope: !8992)
!8994 = !DILocation(line: 4706, column: 7, scope: !8723)
!8995 = !DILocation(line: 4710, column: 7, scope: !8761)
!8996 = !DILocation(line: 0, scope: !8761)
!8997 = !DILocation(line: 4710, column: 17, scope: !8761)
!8998 = !DILocation(line: 4712, column: 7, scope: !8761)
!8999 = !DILocation(line: 4713, column: 24, scope: !8761)
!9000 = !DILocation(line: 4713, column: 7, scope: !8761)
!9001 = !DILocation(line: 4714, column: 7, scope: !8761)
!9002 = !DILocation(line: 4715, column: 5, scope: !8762)
!9003 = !DILocation(line: 4715, column: 5, scope: !8761)
!9004 = !DILocation(line: 4716, column: 1, scope: !8723)
!9005 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_index", scope: !398, file: !398, line: 846, type: !9006, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9028)
!9006 = !DISubroutineType(types: !9007)
!9007 = !{!9008, !9020, !7}
!9008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9009, size: 64)
!9009 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_deps_insn_data_def", file: !398, line: 843, baseType: !9010)
!9010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_deps_insn_data", file: !398, line: 663, size: 448, elements: !9011)
!9011 = !{!9012, !9013, !9014, !9015, !9016, !9017, !9018, !9019}
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "dep_count", scope: !9010, file: !398, line: 668, baseType: !631, size: 32)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "has_internal_dep", scope: !9010, file: !398, line: 672, baseType: !7, size: 32, offset: 32)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "hard_back_deps", scope: !9010, file: !398, line: 682, baseType: !6600, size: 64, offset: 64)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "spec_back_deps", scope: !9010, file: !398, line: 686, baseType: !6600, size: 64, offset: 128)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "forw_deps", scope: !9010, file: !398, line: 690, baseType: !6600, size: 64, offset: 192)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_back_deps", scope: !9010, file: !398, line: 694, baseType: !6600, size: 64, offset: 256)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_forw_deps", scope: !9010, file: !398, line: 699, baseType: !6600, size: 64, offset: 320)
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !9010, file: !398, line: 702, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!9020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9021, size: 64)
!9021 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_deps_insn_data_def_base", file: !398, line: 846, baseType: !9022)
!9022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_deps_insn_data_def_base", file: !398, line: 846, size: 512, elements: !9023)
!9023 = !{!9024, !9025, !9026}
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !9022, file: !398, line: 846, baseType: !7, size: 32)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !9022, file: !398, line: 846, baseType: !7, size: 32, offset: 32)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !9022, file: !398, line: 846, baseType: !9027, size: 448, offset: 64)
!9027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9009, size: 448, elements: !673)
!9028 = !{!9029, !9030}
!9029 = !DILocalVariable(name: "vec_", arg: 1, scope: !9005, file: !398, line: 846, type: !9020)
!9030 = !DILocalVariable(name: "ix_", arg: 2, scope: !9005, file: !398, line: 846, type: !7)
!9031 = !DILocation(line: 0, scope: !9005)
!9032 = !DILocation(line: 846, column: 1, scope: !9005)
!9033 = distinct !DISubprogram(name: "process_insn_forw_deps_be_in_spec", scope: !3, file: !3, line: 4007, type: !9034, scopeLine: 4008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9036)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{null, !638, !638, !1865}
!9036 = !{!9037, !9038, !9039, !9040, !9041, !9042, !9046, !9047, !9054, !9056}
!9037 = !DILocalVariable(name: "insn", arg: 1, scope: !9033, file: !3, line: 4007, type: !638)
!9038 = !DILocalVariable(name: "twin", arg: 2, scope: !9033, file: !3, line: 4007, type: !638)
!9039 = !DILocalVariable(name: "fs", arg: 3, scope: !9033, file: !3, line: 4007, type: !1865)
!9040 = !DILocalVariable(name: "sd_it", scope: !9033, file: !3, line: 4009, type: !2252)
!9041 = !DILocalVariable(name: "dep", scope: !9033, file: !3, line: 4010, type: !2846)
!9042 = !DILocalVariable(name: "ds", scope: !9043, file: !3, line: 4014, type: !1865)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 4013, column: 5)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 4012, column: 3)
!9045 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 4012, column: 3)
!9046 = !DILocalVariable(name: "consumer", scope: !9043, file: !3, line: 4015, type: !638)
!9047 = !DILocalVariable(name: "new_ds", scope: !9048, file: !3, line: 4039, type: !1865)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 4038, column: 3)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 4037, column: 5)
!9050 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 4032, column: 6)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 4029, column: 8)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 4025, column: 2)
!9053 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 4022, column: 4)
!9054 = !DILocalVariable(name: "_new_dep", scope: !9055, file: !3, line: 4056, type: !2848)
!9055 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 4055, column: 7)
!9056 = !DILocalVariable(name: "new_dep", scope: !9055, file: !3, line: 4056, type: !2847)
!9057 = !DILocation(line: 0, scope: !9033)
!9058 = !DILocation(line: 4009, column: 3, scope: !9033)
!9059 = !DILocation(line: 4010, column: 3, scope: !9033)
!9060 = !DILocation(line: 4012, column: 3, scope: !9045)
!9061 = !DILocation(line: 0, scope: !9053)
!9062 = !DILocation(line: 0, scope: !9055)
!9063 = !DILocation(line: 4012, column: 3, scope: !9044)
!9064 = !DILocation(line: 4017, column: 18, scope: !9043)
!9065 = !DILocation(line: 0, scope: !9043)
!9066 = !DILocation(line: 4019, column: 12, scope: !9043)
!9067 = !DILocation(line: 4024, column: 11, scope: !9053)
!9068 = !DILocation(line: 4024, column: 24, scope: !9053)
!9069 = !DILocation(line: 4024, column: 4, scope: !9053)
!9070 = !DILocation(line: 4026, column: 4, scope: !9052)
!9071 = !DILocation(line: 4029, column: 11, scope: !9051)
!9072 = !DILocation(line: 4029, column: 8, scope: !9052)
!9073 = !DILocation(line: 4037, column: 5, scope: !9049)
!9074 = !DILocation(line: 4037, column: 21, scope: !9049)
!9075 = !DILocation(line: 4037, column: 18, scope: !9049)
!9076 = !DILocation(line: 4037, column: 5, scope: !9050)
!9077 = !DILocation(line: 4041, column: 18, scope: !9048)
!9078 = !DILocation(line: 4041, column: 33, scope: !9048)
!9079 = !DILocation(line: 0, scope: !9048)
!9080 = !DILocation(line: 4044, column: 9, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 4044, column: 9)
!9082 = !DILocation(line: 4044, column: 9, scope: !9048)
!9083 = !DILocation(line: 4048, column: 3, scope: !9048)
!9084 = !DILocation(line: 4052, column: 9, scope: !9051)
!9085 = !DILocation(line: 4056, column: 2, scope: !9055)
!9086 = !DILocation(line: 4058, column: 39, scope: !9055)
!9087 = !DILocation(line: 4058, column: 2, scope: !9055)
!9088 = !DILocation(line: 4059, column: 2, scope: !9055)
!9089 = !DILocation(line: 4060, column: 7, scope: !9043)
!9090 = distinct !{!9090, !9060, !9091}
!9091 = !DILocation(line: 4061, column: 5, scope: !9045)
!9092 = !DILocation(line: 4062, column: 1, scope: !9033)
!9093 = distinct !DISubprogram(name: "sched_remove_insn", scope: !3, file: !3, line: 5042, type: !2116, scopeLine: 5043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9094)
!9094 = !{!9095}
!9095 = !DILocalVariable(name: "insn", arg: 1, scope: !9093, file: !3, line: 5042, type: !638)
!9096 = !DILocation(line: 0, scope: !9093)
!9097 = !DILocation(line: 5044, column: 3, scope: !9093)
!9098 = !DILocation(line: 5046, column: 3, scope: !9093)
!9099 = !DILocation(line: 5047, column: 3, scope: !9093)
!9100 = !DILocation(line: 5047, column: 23, scope: !9093)
!9101 = !DILocation(line: 5048, column: 3, scope: !9093)
!9102 = !DILocation(line: 5049, column: 1, scope: !9093)
!9103 = distinct !DISubprogram(name: "clear_priorities", scope: !3, file: !3, line: 5055, type: !9104, scopeLine: 5056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9107)
!9104 = !DISubroutineType(types: !9105)
!9105 = !{null, !638, !9106}
!9106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8578, size: 64)
!9107 = !{!9108, !9109, !9110, !9111, !9112, !9113}
!9108 = !DILocalVariable(name: "insn", arg: 1, scope: !9103, file: !3, line: 5055, type: !638)
!9109 = !DILocalVariable(name: "roots_ptr", arg: 2, scope: !9103, file: !3, line: 5055, type: !9106)
!9110 = !DILocalVariable(name: "sd_it", scope: !9103, file: !3, line: 5057, type: !2252)
!9111 = !DILocalVariable(name: "dep", scope: !9103, file: !3, line: 5058, type: !2846)
!9112 = !DILocalVariable(name: "insn_is_root_p", scope: !9103, file: !3, line: 5059, type: !630)
!9113 = !DILocalVariable(name: "pro", scope: !9114, file: !3, line: 5065, type: !638)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 5064, column: 5)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 5063, column: 3)
!9116 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 5063, column: 3)
!9117 = !DILocation(line: 0, scope: !9103)
!9118 = !DILocation(line: 5057, column: 3, scope: !9103)
!9119 = !DILocation(line: 5058, column: 3, scope: !9103)
!9120 = !DILocation(line: 5061, column: 3, scope: !9103)
!9121 = !DILocation(line: 5063, column: 3, scope: !9116)
!9122 = !DILocation(line: 5063, column: 3, scope: !9115)
!9123 = !DILocation(line: 5065, column: 17, scope: !9114)
!9124 = !DILocation(line: 0, scope: !9114)
!9125 = !DILocation(line: 5067, column: 11, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 5067, column: 11)
!9127 = !DILocation(line: 5067, column: 38, scope: !9126)
!9128 = !DILocation(line: 5068, column: 4, scope: !9126)
!9129 = !DILocation(line: 5068, column: 7, scope: !9126)
!9130 = !DILocation(line: 5068, column: 26, scope: !9126)
!9131 = !DILocation(line: 5067, column: 11, scope: !9114)
!9132 = !DILocation(line: 5072, column: 35, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 5072, column: 8)
!9134 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 5069, column: 2)
!9135 = !DILocation(line: 5072, column: 8, scope: !9133)
!9136 = !DILocation(line: 5072, column: 8, scope: !9134)
!9137 = !DILocation(line: 5075, column: 4, scope: !9134)
!9138 = !DILocation(line: 5075, column: 31, scope: !9134)
!9139 = !DILocation(line: 5076, column: 4, scope: !9134)
!9140 = !DILocation(line: 5077, column: 2, scope: !9134)
!9141 = distinct !{!9141, !9121, !9142}
!9142 = !DILocation(line: 5078, column: 5, scope: !9116)
!9143 = !DILocation(line: 5080, column: 7, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 5080, column: 7)
!9145 = !DILocation(line: 5080, column: 7, scope: !9103)
!9146 = !DILocation(line: 5081, column: 5, scope: !9144)
!9147 = !DILocation(line: 5082, column: 1, scope: !9103)
!9148 = distinct !DISubprogram(name: "calc_priorities", scope: !3, file: !3, line: 5088, type: !9149, scopeLine: 5089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9151)
!9149 = !DISubroutineType(types: !9150)
!9150 = !{null, !8578}
!9151 = !{!9152, !9153, !9154}
!9152 = !DILocalVariable(name: "roots", arg: 1, scope: !9148, file: !3, line: 5088, type: !8578)
!9153 = !DILocalVariable(name: "i", scope: !9148, file: !3, line: 5090, type: !631)
!9154 = !DILocalVariable(name: "insn", scope: !9148, file: !3, line: 5091, type: !638)
!9155 = !DILocation(line: 0, scope: !9148)
!9156 = !DILocation(line: 5091, column: 3, scope: !9148)
!9157 = !DILocation(line: 0, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 5093, column: 3)
!9159 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 5093, column: 3)
!9160 = !DILocation(line: 5093, column: 8, scope: !9159)
!9161 = !DILocation(line: 0, scope: !9159)
!9162 = !DILocation(line: 5093, column: 15, scope: !9158)
!9163 = !DILocation(line: 5093, column: 3, scope: !9159)
!9164 = !DILocation(line: 5094, column: 15, scope: !9158)
!9165 = !DILocation(line: 5094, column: 5, scope: !9158)
!9166 = !DILocation(line: 5093, column: 51, scope: !9158)
!9167 = !DILocation(line: 5093, column: 3, scope: !9158)
!9168 = distinct !{!9168, !9163, !9169}
!9169 = !DILocation(line: 5094, column: 19, scope: !9159)
!9170 = !DILocation(line: 5095, column: 1, scope: !9148)
!9171 = distinct !DISubprogram(name: "VEC_rtx_heap_free", scope: !406, file: !406, line: 201, type: !9172, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9175)
!9172 = !DISubroutineType(types: !9173)
!9173 = !{null, !9174}
!9174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!9175 = !{!9176}
!9176 = !DILocalVariable(name: "vec_", arg: 1, scope: !9171, file: !406, line: 201, type: !9174)
!9177 = !DILocation(line: 0, scope: !9171)
!9178 = !DILocation(line: 201, column: 1, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9171, file: !406, line: 201, column: 1)
!9180 = !DILocation(line: 201, column: 1, scope: !9171)
!9181 = distinct !DISubprogram(name: "VEC_rtx_heap_safe_push", scope: !406, file: !406, line: 201, type: !9182, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9184)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{!1864, !9174, !638}
!9184 = !{!9185, !9186}
!9185 = !DILocalVariable(name: "vec_", arg: 1, scope: !9181, file: !406, line: 201, type: !9174)
!9186 = !DILocalVariable(name: "obj_", arg: 2, scope: !9181, file: !406, line: 201, type: !638)
!9187 = !DILocation(line: 0, scope: !9181)
!9188 = !DILocation(line: 201, column: 1, scope: !9181)
!9189 = distinct !DISubprogram(name: "VEC_rtx_heap_reserve", scope: !406, file: !406, line: 201, type: !9190, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9192)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{!631, !9174, !631}
!9192 = !{!9193, !9194, !9195}
!9193 = !DILocalVariable(name: "vec_", arg: 1, scope: !9189, file: !406, line: 201, type: !9174)
!9194 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9189, file: !406, line: 201, type: !631)
!9195 = !DILocalVariable(name: "extend", scope: !9189, file: !406, line: 201, type: !631)
!9196 = !DILocation(line: 0, scope: !9189)
!9197 = !DILocation(line: 201, column: 1, scope: !9189)
!9198 = !DILocation(line: 201, column: 1, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9189, file: !406, line: 201, column: 1)
!9200 = distinct !DISubprogram(name: "VEC_rtx_base_quick_push", scope: !406, file: !406, line: 200, type: !9201, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9204)
!9201 = !DISubroutineType(types: !9202)
!9202 = !{!1864, !9203, !638}
!9203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!9204 = !{!9205, !9206, !9207}
!9205 = !DILocalVariable(name: "vec_", arg: 1, scope: !9200, file: !406, line: 200, type: !9203)
!9206 = !DILocalVariable(name: "obj_", arg: 2, scope: !9200, file: !406, line: 200, type: !638)
!9207 = !DILocalVariable(name: "slot_", scope: !9200, file: !406, line: 200, type: !1864)
!9208 = !DILocation(line: 0, scope: !9200)
!9209 = !DILocation(line: 200, column: 1, scope: !9200)
!9210 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !406, file: !406, line: 200, type: !9211, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9213)
!9211 = !DISubroutineType(types: !9212)
!9212 = !{!631, !9203, !631}
!9213 = !{!9214, !9215}
!9214 = !DILocalVariable(name: "vec_", arg: 1, scope: !9210, file: !406, line: 200, type: !9203)
!9215 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9210, file: !406, line: 200, type: !631)
!9216 = !DILocation(line: 0, scope: !9210)
!9217 = !DILocation(line: 200, column: 1, scope: !9210)
!9218 = distinct !DISubprogram(name: "ei_end_p", scope: !155, file: !155, line: 721, type: !9219, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9221)
!9219 = !DISubroutineType(types: !9220)
!9220 = !{!630, !6890}
!9221 = !{!9222}
!9222 = !DILocalVariable(name: "i", arg: 1, scope: !9218, file: !155, line: 721, type: !6890)
!9223 = !DILocation(line: 723, column: 22, scope: !9218)
!9224 = !DILocation(line: 723, column: 19, scope: !9218)
!9225 = !DILocation(line: 723, column: 10, scope: !9218)
!9226 = !DILocation(line: 723, column: 3, scope: !9218)
!9227 = distinct !DISubprogram(name: "ei_edge", scope: !155, file: !155, line: 752, type: !9228, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9230)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{!1189, !6890}
!9230 = !{!9231}
!9231 = !DILocalVariable(name: "i", arg: 1, scope: !9227, file: !155, line: 752, type: !6890)
!9232 = !DILocation(line: 754, column: 10, scope: !9227)
!9233 = !DILocation(line: 754, column: 3, scope: !9227)
!9234 = distinct !DISubprogram(name: "ei_container", scope: !155, file: !155, line: 685, type: !9235, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9237)
!9235 = !DISubroutineType(types: !9236)
!9236 = !{!1177, !6890}
!9237 = !{!9238}
!9238 = !DILocalVariable(name: "i", arg: 1, scope: !9234, file: !155, line: 685, type: !6890)
!9239 = !DILocation(line: 687, column: 3, scope: !9234)
!9240 = !DILocation(line: 688, column: 10, scope: !9234)
!9241 = !DILocation(line: 688, column: 3, scope: !9234)
!9242 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !155, file: !155, line: 150, type: !9243, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9245)
!9243 = !DISubroutineType(types: !9244)
!9244 = !{!1189, !6945, !7}
!9245 = !{!9246, !9247}
!9246 = !DILocalVariable(name: "vec_", arg: 1, scope: !9242, file: !155, line: 150, type: !6945)
!9247 = !DILocalVariable(name: "ix_", arg: 2, scope: !9242, file: !155, line: 150, type: !7)
!9248 = !DILocation(line: 0, scope: !9242)
!9249 = !DILocation(line: 150, column: 1, scope: !9242)
!9250 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !142, file: !142, line: 85, type: !9251, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9255)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{!1241, !9253, !7}
!9253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9254, size: 64)
!9254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!9255 = !{!9256, !9257}
!9256 = !DILocalVariable(name: "vec_", arg: 1, scope: !9250, file: !142, line: 85, type: !9253)
!9257 = !DILocalVariable(name: "ix_", arg: 2, scope: !9250, file: !142, line: 85, type: !7)
!9258 = !DILocation(line: 0, scope: !9250)
!9259 = !DILocation(line: 85, column: 1, scope: !9250)
!9260 = distinct !DISubprogram(name: "VEC_int_heap_safe_grow_cleared", scope: !1155, file: !1155, line: 32, type: !9261, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9263)
!9261 = !DISubroutineType(types: !9262)
!9262 = !{null, !7485, !631}
!9263 = !{!9264, !9265, !9266}
!9264 = !DILocalVariable(name: "vec_", arg: 1, scope: !9260, file: !1155, line: 32, type: !7485)
!9265 = !DILocalVariable(name: "size_", arg: 2, scope: !9260, file: !1155, line: 32, type: !631)
!9266 = !DILocalVariable(name: "oldsize", scope: !9260, file: !1155, line: 32, type: !631)
!9267 = !DILocation(line: 0, scope: !9260)
!9268 = !DILocation(line: 32, column: 1, scope: !9260)
!9269 = distinct !DISubprogram(name: "VEC_int_base_length", scope: !1155, file: !1155, line: 31, type: !9270, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9272)
!9270 = !DISubroutineType(types: !9271)
!9271 = !{!7, !7501}
!9272 = !{!9273}
!9273 = !DILocalVariable(name: "vec_", arg: 1, scope: !9269, file: !1155, line: 31, type: !7501)
!9274 = !DILocation(line: 0, scope: !9269)
!9275 = !DILocation(line: 31, column: 1, scope: !9269)
!9276 = distinct !DISubprogram(name: "VEC_int_heap_safe_grow", scope: !1155, file: !1155, line: 32, type: !9261, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9277)
!9277 = !{!9278, !9279}
!9278 = !DILocalVariable(name: "vec_", arg: 1, scope: !9276, file: !1155, line: 32, type: !7485)
!9279 = !DILocalVariable(name: "size_", arg: 2, scope: !9276, file: !1155, line: 32, type: !631)
!9280 = !DILocation(line: 0, scope: !9276)
!9281 = !DILocation(line: 32, column: 1, scope: !9276)
!9282 = distinct !DISubprogram(name: "VEC_int_base_address", scope: !1155, file: !1155, line: 31, type: !9283, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9286)
!9283 = !DISubroutineType(types: !9284)
!9284 = !{!1942, !9285}
!9285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!9286 = !{!9287}
!9287 = !DILocalVariable(name: "vec_", arg: 1, scope: !9282, file: !1155, line: 31, type: !9285)
!9288 = !DILocation(line: 0, scope: !9282)
!9289 = !DILocation(line: 31, column: 1, scope: !9282)
!9290 = distinct !DISubprogram(name: "VEC_int_heap_reserve_exact", scope: !1155, file: !1155, line: 32, type: !9291, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9293)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{!631, !7485, !631}
!9293 = !{!9294, !9295, !9296}
!9294 = !DILocalVariable(name: "vec_", arg: 1, scope: !9290, file: !1155, line: 32, type: !7485)
!9295 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9290, file: !1155, line: 32, type: !631)
!9296 = !DILocalVariable(name: "extend", scope: !9290, file: !1155, line: 32, type: !631)
!9297 = !DILocation(line: 0, scope: !9290)
!9298 = !DILocation(line: 32, column: 1, scope: !9290)
!9299 = !DILocation(line: 32, column: 1, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9290, file: !1155, line: 32, column: 1)
!9301 = distinct !DISubprogram(name: "VEC_int_base_space", scope: !1155, file: !1155, line: 31, type: !9302, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9304)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!631, !9285, !631}
!9304 = !{!9305, !9306}
!9305 = !DILocalVariable(name: "vec_", arg: 1, scope: !9301, file: !1155, line: 31, type: !9285)
!9306 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9301, file: !1155, line: 31, type: !631)
!9307 = !DILocation(line: 0, scope: !9301)
!9308 = !DILocation(line: 31, column: 1, scope: !9301)
!9309 = distinct !DISubprogram(name: "VEC_int_base_replace", scope: !1155, file: !1155, line: 31, type: !9310, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9312)
!9310 = !DISubroutineType(types: !9311)
!9311 = !{!631, !9285, !7, !631}
!9312 = !{!9313, !9314, !9315, !9316}
!9313 = !DILocalVariable(name: "vec_", arg: 1, scope: !9309, file: !1155, line: 31, type: !9285)
!9314 = !DILocalVariable(name: "ix_", arg: 2, scope: !9309, file: !1155, line: 31, type: !7)
!9315 = !DILocalVariable(name: "obj_", arg: 3, scope: !9309, file: !1155, line: 31, type: !631)
!9316 = !DILocalVariable(name: "old_obj_", scope: !9309, file: !1155, line: 31, type: !631)
!9317 = !DILocation(line: 0, scope: !9309)
!9318 = !DILocation(line: 31, column: 1, scope: !9309)
!9319 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_length", scope: !398, file: !398, line: 825, type: !9320, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9324)
!9320 = !DISubroutineType(types: !9321)
!9321 = !{!7, !9322}
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 64)
!9323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1908)
!9324 = !{!9325}
!9325 = !DILocalVariable(name: "vec_", arg: 1, scope: !9319, file: !398, line: 825, type: !9322)
!9326 = !DILocation(line: 0, scope: !9319)
!9327 = !DILocation(line: 825, column: 1, scope: !9319)
!9328 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_space", scope: !398, file: !398, line: 825, type: !9329, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9331)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!631, !2837, !631}
!9331 = !{!9332, !9333}
!9332 = !DILocalVariable(name: "vec_", arg: 1, scope: !9328, file: !398, line: 825, type: !2837)
!9333 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9328, file: !398, line: 825, type: !631)
!9334 = !DILocation(line: 0, scope: !9328)
!9335 = !DILocation(line: 825, column: 1, scope: !9328)
!9336 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_heap_safe_grow_cleared", scope: !398, file: !398, line: 826, type: !9337, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9339)
!9337 = !DISubroutineType(types: !9338)
!9338 = !{null, !7568, !631}
!9339 = !{!9340, !9341, !9342}
!9340 = !DILocalVariable(name: "vec_", arg: 1, scope: !9336, file: !398, line: 826, type: !7568)
!9341 = !DILocalVariable(name: "size_", arg: 2, scope: !9336, file: !398, line: 826, type: !631)
!9342 = !DILocalVariable(name: "oldsize", scope: !9336, file: !398, line: 826, type: !631)
!9343 = !DILocation(line: 0, scope: !9336)
!9344 = !DILocation(line: 826, column: 1, scope: !9336)
!9345 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_heap_safe_grow", scope: !398, file: !398, line: 826, type: !9337, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9346)
!9346 = !{!9347, !9348}
!9347 = !DILocalVariable(name: "vec_", arg: 1, scope: !9345, file: !398, line: 826, type: !7568)
!9348 = !DILocalVariable(name: "size_", arg: 2, scope: !9345, file: !398, line: 826, type: !631)
!9349 = !DILocation(line: 0, scope: !9345)
!9350 = !DILocation(line: 826, column: 1, scope: !9345)
!9351 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_address", scope: !398, file: !398, line: 825, type: !9352, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9354)
!9352 = !DISubroutineType(types: !9353)
!9353 = !{!2836, !2837}
!9354 = !{!9355}
!9355 = !DILocalVariable(name: "vec_", arg: 1, scope: !9351, file: !398, line: 825, type: !2837)
!9356 = !DILocation(line: 0, scope: !9351)
!9357 = !DILocation(line: 825, column: 1, scope: !9351)
!9358 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_heap_reserve_exact", scope: !398, file: !398, line: 826, type: !9359, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9361)
!9359 = !DISubroutineType(types: !9360)
!9360 = !{!631, !7568, !631}
!9361 = !{!9362, !9363, !9364}
!9362 = !DILocalVariable(name: "vec_", arg: 1, scope: !9358, file: !398, line: 826, type: !7568)
!9363 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9358, file: !398, line: 826, type: !631)
!9364 = !DILocalVariable(name: "extend", scope: !9358, file: !398, line: 826, type: !631)
!9365 = !DILocation(line: 0, scope: !9358)
!9366 = !DILocation(line: 826, column: 1, scope: !9358)
!9367 = !DILocation(line: 826, column: 1, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9358, file: !398, line: 826, column: 1)
