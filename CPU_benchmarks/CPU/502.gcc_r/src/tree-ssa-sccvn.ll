; ModuleID = 'tree-ssa-sccvn.bc'
source_filename = "tree-ssa-sccvn.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.VEC_vn_ssa_aux_t_heap = type { %struct.VEC_vn_ssa_aux_t_base }
%struct.VEC_vn_ssa_aux_t_base = type { i32, i32, [1 x %struct.vn_ssa_aux*] }
%struct.vn_ssa_aux = type { %union.tree_node*, %union.tree_node*, i32, i32, i32, i8 }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_vn_reference_op_s_heap = type { %struct.VEC_vn_reference_op_s_base }
%struct.VEC_vn_reference_op_s_base = type { i32, i32, [1 x %struct.vn_reference_op_struct] }
%struct.vn_reference_op_struct = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.vn_tables_s = type { %struct.htab*, %struct.htab*, %struct.htab*, %struct.obstack, %struct.alloc_pool_def*, %struct.alloc_pool_def* }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.vn_constant_s = type { i32, i32, %union.tree_node* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.vn_reference_s = type { i32, i32, %union.tree_node*, i32, %union.tree_node*, %struct.VEC_vn_reference_op_s_heap*, %union.tree_node* }
%struct.tree_field_decl = type { %struct.tree_decl_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.ao_ref_s = type { %union.tree_node*, %union.tree_node*, i64, i64, i64, i32, i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.vn_nary_op_s = type { i32, i32, i32, %union.tree_node*, %union.tree_node*, [4 x %union.tree_node*] }
%struct.VEC_ssa_op_iter_heap = type { %struct.VEC_ssa_op_iter_base }
%struct.VEC_ssa_op_iter_base = type { i32, i32, [1 x %struct.ssa_operand_iterator_d] }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.htab_iterator = type { %struct.htab*, i8**, i8** }
%struct.vn_phi_s = type { i32, i32, %struct.VEC_tree_heap*, %struct.basic_block_def*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@vn_ssa_aux_table = internal global %struct.VEC_vn_ssa_aux_t_heap* null, align 8, !dbg !0
@.str = private unnamed_addr constant [17 x i8] c"tree-ssa-sccvn.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@vn_ssa_aux_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !2025
@VN_TOP = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !2017
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@constant_to_value_id = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2004
@constant_value_ids = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2006
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@may_insert = internal unnamed_addr global i8 0, align 1, !dbg !2023
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@shared_lookup_references = internal global %struct.VEC_vn_reference_op_s_heap* null, align 8, !dbg !2027
@current_info = internal unnamed_addr global %struct.vn_tables_s* null, align 8, !dbg !2013
@optimistic_info = internal unnamed_addr global %struct.vn_tables_s* null, align 8, !dbg !2011
@valid_info = internal unnamed_addr global %struct.vn_tables_s* null, align 8, !dbg !2008
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@shared_lookup_phiargs = internal global %struct.VEC_tree_heap* null, align 8, !dbg !2029
@rpo_numbers = internal unnamed_addr global i32* null, align 8, !dbg !2015
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@sccstack = internal global %struct.VEC_tree_heap* null, align 8, !dbg !2021
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [16 x i8] c"Value numbers:\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@next_value_id = internal unnamed_addr global i32 0, align 4, !dbg !2019
@flag_trapping_math = external dso_local local_unnamed_addr global i32, align 4
@flag_finite_math_only = external dso_local local_unnamed_addr global i32, align 4
@flag_signaling_nans = external dso_local local_unnamed_addr global i32, align 4
@flag_trapv = external dso_local local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@last_vuse_ptr = internal unnamed_addr global %union.tree_node** null, align 8, !dbg !2031
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@next_dfs_num = internal unnamed_addr global i32 0, align 4, !dbg !2033
@.str.6 = private unnamed_addr constant [7 x i8] c"vn_top\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"VN phis\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"VN references\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.9 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.10 = private unnamed_addr constant [63 x i8] c"WARNING: Giving up with SCCVN due to SCC size %u exceeding %u\0A\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"SCC consists of: \00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"SCC iterations\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"Value numbering \00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c" stmt = \00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"RHS \00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c" simplified to \00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c" has constants %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"Setting value number of \00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c" (changed)\0A\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"No store match\0A\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"Value numbering store \00", align 1
@.str.24 = private unnamed_addr constant [76 x i8] c"Store matched earlier value,value numbering store vdefs to matching vuses.\0A\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"Inserting name \00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c" for expression \00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2039 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2052, metadata !DIExpression()), !dbg !2054
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2053, metadata !DIExpression()), !dbg !2054
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2055
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2056
  ret i32 %call, !dbg !2057
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2058 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2062
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2063
  ret i32 %call, !dbg !2064
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2065 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2119, metadata !DIExpression()), !dbg !2120
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2121
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2121
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2121
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2121
  %cmp = icmp uge i8* %0, %1, !dbg !2121
  %conv1 = zext i1 %cmp to i64, !dbg !2121
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2121
  %tobool = icmp eq i64 %expval, 0, !dbg !2121
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2121

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2121
  br label %cond.end, !dbg !2121

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2121
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2121
  %2 = load i8, i8* %0, align 1, !dbg !2121
  %conv3 = zext i8 %2 to i32, !dbg !2121
  br label %cond.end, !dbg !2121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2121
  ret i32 %cond, !dbg !2122
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2123 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2125, metadata !DIExpression()), !dbg !2126
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2127
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2127
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2127
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2127
  %cmp = icmp uge i8* %0, %1, !dbg !2127
  %conv1 = zext i1 %cmp to i64, !dbg !2127
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2127
  %tobool = icmp eq i64 %expval, 0, !dbg !2127
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2127

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2127
  br label %cond.end, !dbg !2127

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2127
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2127
  %2 = load i8, i8* %0, align 1, !dbg !2127
  %conv3 = zext i8 %2 to i32, !dbg !2127
  br label %cond.end, !dbg !2127

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2127
  ret i32 %cond, !dbg !2128
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2129 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2130
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2130
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2130
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2130
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2130
  %cmp = icmp uge i8* %1, %2, !dbg !2130
  %conv1 = zext i1 %cmp to i64, !dbg !2130
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2130
  %tobool = icmp eq i64 %expval, 0, !dbg !2130
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2130

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2130
  br label %cond.end, !dbg !2130

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2130
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2130
  %3 = load i8, i8* %1, align 1, !dbg !2130
  %conv3 = zext i8 %3 to i32, !dbg !2130
  br label %cond.end, !dbg !2130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2130
  ret i32 %cond, !dbg !2131
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2132 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2136, metadata !DIExpression()), !dbg !2137
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2138
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2139
  ret i32 %call, !dbg !2140
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2141 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2145, metadata !DIExpression()), !dbg !2147
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2146, metadata !DIExpression()), !dbg !2147
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2148
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2148
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2148
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2148
  %cmp = icmp uge i8* %0, %1, !dbg !2148
  %conv1 = zext i1 %cmp to i64, !dbg !2148
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2148
  %tobool = icmp eq i64 %expval, 0, !dbg !2148
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2148

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2148
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2148
  br label %cond.end, !dbg !2148

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2148
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2148
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2148
  store i8 %conv2, i8* %0, align 1, !dbg !2148
  %conv6 = and i32 %__c, 255, !dbg !2148
  br label %cond.end, !dbg !2148

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2148
  ret i32 %cond, !dbg !2149
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2150 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2152, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2153, metadata !DIExpression()), !dbg !2154
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2155
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2155
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2155
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2155
  %cmp = icmp uge i8* %0, %1, !dbg !2155
  %conv1 = zext i1 %cmp to i64, !dbg !2155
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2155
  %tobool = icmp eq i64 %expval, 0, !dbg !2155
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2155

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2155
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2155
  br label %cond.end, !dbg !2155

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2155
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2155
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2155
  store i8 %conv2, i8* %0, align 1, !dbg !2155
  %conv6 = and i32 %__c, 255, !dbg !2155
  br label %cond.end, !dbg !2155

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2155
  ret i32 %cond, !dbg !2156
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2157 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2159, metadata !DIExpression()), !dbg !2160
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2161
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2161
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2161
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2161
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2161
  %cmp = icmp uge i8* %1, %2, !dbg !2161
  %conv1 = zext i1 %cmp to i64, !dbg !2161
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2161
  %tobool = icmp eq i64 %expval, 0, !dbg !2161
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2161

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2161
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2161
  br label %cond.end, !dbg !2161

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2161
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2161
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2161
  store i8 %conv4, i8* %1, align 1, !dbg !2161
  %conv6 = and i32 %__c, 255, !dbg !2161
  br label %cond.end, !dbg !2161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2161
  ret i32 %cond, !dbg !2162
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2163 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2169, metadata !DIExpression()), !dbg !2172
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2170, metadata !DIExpression()), !dbg !2172
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2171, metadata !DIExpression()), !dbg !2172
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2173
  ret i64 %call, !dbg !2174
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2175 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2177, metadata !DIExpression()), !dbg !2178
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2179
  %0 = load i32, i32* %_flags, align 8, !dbg !2179
  %and = lshr i32 %0, 4, !dbg !2179
  %and.lobit = and i32 %and, 1, !dbg !2179
  ret i32 %and.lobit, !dbg !2180
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2181 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2183, metadata !DIExpression()), !dbg !2184
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2185
  %0 = load i32, i32* %_flags, align 8, !dbg !2185
  %and = lshr i32 %0, 5, !dbg !2185
  %and.lobit = and i32 %and, 1, !dbg !2185
  ret i32 %and.lobit, !dbg !2186
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2187 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2190, metadata !DIExpression()), !dbg !2191
  %__c.off = add i32 %__c, 128, !dbg !2192
  %0 = icmp ult i32 %__c.off, 384, !dbg !2192
  br i1 %0, label %cond.true, label %cond.end, !dbg !2192

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2193
  %1 = load i32*, i32** %call, align 8, !dbg !2194
  %idxprom = sext i32 %__c to i64, !dbg !2195
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2195
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2195
  br label %cond.end, !dbg !2196

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2196
  ret i32 %cond, !dbg !2197
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2198 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2200, metadata !DIExpression()), !dbg !2201
  %__c.off = add i32 %__c, 128, !dbg !2202
  %0 = icmp ult i32 %__c.off, 384, !dbg !2202
  br i1 %0, label %cond.true, label %cond.end, !dbg !2202

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2203
  %1 = load i32*, i32** %call, align 8, !dbg !2204
  %idxprom = sext i32 %__c to i64, !dbg !2205
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2205
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2205
  br label %cond.end, !dbg !2206

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2206
  ret i32 %cond, !dbg !2207
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2208 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2213, metadata !DIExpression()), !dbg !2214
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2215
  %conv = trunc i64 %call to i32, !dbg !2216
  ret i32 %conv, !dbg !2217
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2218 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2222, metadata !DIExpression()), !dbg !2223
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2224
  ret i64 %call, !dbg !2225
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2226 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2231, metadata !DIExpression()), !dbg !2232
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2233
  ret i64 %call, !dbg !2234
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2235 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2241, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2242, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2243, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2244, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2245, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i64 0, metadata !2246, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2247, metadata !DIExpression()), !dbg !2251
  br label %while.cond, !dbg !2252

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2253
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2251
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2247, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2246, metadata !DIExpression()), !dbg !2251
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2254
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2252

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2255
  %div = lshr i64 %add, 1, !dbg !2257
  call void @llvm.dbg.value(metadata i64 %div, metadata !2248, metadata !DIExpression()), !dbg !2251
  %mul = mul i64 %div, %__size, !dbg !2258
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2259
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2249, metadata !DIExpression()), !dbg !2251
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2260
  call void @llvm.dbg.value(metadata i32 %call, metadata !2250, metadata !DIExpression()), !dbg !2251
  %cmp1 = icmp slt i32 %call, 0, !dbg !2261
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2263

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2264
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2266

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2267
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2246, metadata !DIExpression()), !dbg !2251
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2251
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2251
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2247, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2246, metadata !DIExpression()), !dbg !2251
  br label %while.cond, !dbg !2252, !llvm.loop !2268

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2251
  ret i8* %retval.0, !dbg !2270
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2271 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2277, metadata !DIExpression()), !dbg !2278
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2279
  ret double %call, !dbg !2280
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2281 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2290, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2291, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.value(metadata i32 %base, metadata !2292, metadata !DIExpression()), !dbg !2293
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2294
  ret i64 %call, !dbg !2295
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2296 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2302, metadata !DIExpression()), !dbg !2305
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2303, metadata !DIExpression()), !dbg !2305
  call void @llvm.dbg.value(metadata i32 %base, metadata !2304, metadata !DIExpression()), !dbg !2305
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2306
  ret i64 %call, !dbg !2307
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2308 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2319, metadata !DIExpression()), !dbg !2322
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2320, metadata !DIExpression()), !dbg !2322
  call void @llvm.dbg.value(metadata i32 %base, metadata !2321, metadata !DIExpression()), !dbg !2322
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2323
  ret i64 %call, !dbg !2324
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2325 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2329, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2330, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.value(metadata i32 %base, metadata !2331, metadata !DIExpression()), !dbg !2332
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2333
  ret i64 %call, !dbg !2334
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2335 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2375, metadata !DIExpression()), !dbg !2377
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2376, metadata !DIExpression()), !dbg !2377
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2378
  ret i32 %call, !dbg !2379
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2380 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2382, metadata !DIExpression()), !dbg !2384
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2383, metadata !DIExpression()), !dbg !2384
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2385
  ret i32 %call, !dbg !2386
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2391, metadata !DIExpression()), !dbg !2393
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2392, metadata !DIExpression()), !dbg !2393
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2394
  ret i32 %call, !dbg !2395
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2396 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2400, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2401, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2402, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2403, metadata !DIExpression()), !dbg !2404
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2405
  ret i32 %call, !dbg !2406
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2407 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2411, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2412, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2413, metadata !DIExpression()), !dbg !2414
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2413, metadata !DIExpression(DW_OP_deref)), !dbg !2414
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2415
  ret i32 %call, !dbg !2416
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2417 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2421, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2422, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2423, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2424, metadata !DIExpression()), !dbg !2425
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2424, metadata !DIExpression(DW_OP_deref)), !dbg !2425
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2426
  ret i32 %call, !dbg !2427
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2428 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2452, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2453, metadata !DIExpression()), !dbg !2454
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2455
  ret i32 %call, !dbg !2456
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2457 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2459, metadata !DIExpression()), !dbg !2461
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2460, metadata !DIExpression()), !dbg !2461
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2462
  ret i32 %call, !dbg !2463
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2464 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2468, metadata !DIExpression()), !dbg !2470
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2469, metadata !DIExpression()), !dbg !2470
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2471
  ret i32 %call, !dbg !2472
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2473 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2477, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2478, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2479, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2480, metadata !DIExpression()), !dbg !2481
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2482
  ret i32 %call, !dbg !2483
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name) local_unnamed_addr #4 !dbg !2484 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !2488, metadata !DIExpression()), !dbg !2490
  %0 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !2491
  %base = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %0, i64 0, i32 0, !dbg !2491
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2491
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !2491
  %2 = load i32, i32* %1, align 8, !dbg !2491
  %call = tail call fastcc %struct.vn_ssa_aux* @VEC_vn_ssa_aux_t_base_index(%struct.VEC_vn_ssa_aux_t_base* %base, i32 %2) #7, !dbg !2491
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %call, metadata !2489, metadata !DIExpression()), !dbg !2490
  %tobool1 = icmp eq %struct.vn_ssa_aux* %call, null, !dbg !2492
  br i1 %tobool1, label %cond.true2, label %cond.end4, !dbg !2492

cond.true2:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2492
  br label %cond.end4, !dbg !2492

cond.end4:                                        ; preds = %entry, %cond.true2
  ret %struct.vn_ssa_aux* %call, !dbg !2493
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_ssa_aux* @VEC_vn_ssa_aux_t_base_index(%struct.VEC_vn_ssa_aux_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2494 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_base* %vec_, metadata !2500, metadata !DIExpression()), !dbg !2502
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2501, metadata !DIExpression()), !dbg !2502
  br label %land.end, !dbg !2503

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2503
  %arrayidx = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_base, %struct.VEC_vn_ssa_aux_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2503
  %0 = load %struct.vn_ssa_aux*, %struct.vn_ssa_aux** %arrayidx, align 8, !dbg !2503
  ret %struct.vn_ssa_aux* %0, !dbg !2503
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %name) local_unnamed_addr #4 !dbg !2504 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !2506, metadata !DIExpression()), !dbg !2508
  store i64 32, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 5), align 8, !dbg !2509
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 4) to i64*), align 8, !dbg !2509
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 3) to i64*), align 8, !dbg !2509
  %sub.ptr.sub = sub i64 %0, %1, !dbg !2509
  %cmp = icmp slt i64 %sub.ptr.sub, 32, !dbg !2509
  %2 = inttoptr i64 %1 to i8*, !dbg !2509
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2509

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @vn_ssa_aux_obstack, i32 32) #6, !dbg !2509
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 5), align 8, !dbg !2509
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 3), align 8, !dbg !2509
  br label %cond.end, !dbg !2509

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !2509
  %4 = phi i64 [ 32, %entry ], [ %.pre, %cond.true ], !dbg !2509
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !2509
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 3), align 8, !dbg !2509
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 2), align 8, !dbg !2509
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !2509
  %6 = ptrtoint i8* %5 to i64, !dbg !2509
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !2509
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !2509

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 10), align 8, !dbg !2509
  %bf.set = or i8 %bf.load, 2, !dbg !2509
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 10), align 8, !dbg !2509
  br label %cond.end5, !dbg !2509

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 5), align 8, !dbg !2509
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 6), align 8, !dbg !2509
  %conv11 = sext i32 %8 to i64, !dbg !2509
  %add = add nsw i64 %7, %conv11, !dbg !2509
  %neg = xor i32 %8, -1, !dbg !2509
  %conv12 = sext i32 %neg to i64, !dbg !2509
  %and = and i64 %add, %conv12, !dbg !2509
  %9 = inttoptr i64 %and to i8*, !dbg !2509
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 3), align 8, !dbg !2509
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 1) to i64*), align 8, !dbg !2509
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !2509
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 4) to i64*), align 8, !dbg !2509
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !2509
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !2509
  %12 = bitcast i8* %5 to %struct.vn_ssa_aux*, !dbg !2509
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !2509

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 3) to i64*), align 8, !dbg !2509
  br label %cond.end23, !dbg !2509

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !2509
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 2) to i64*), align 8, !dbg !2509
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %12, metadata !2507, metadata !DIExpression()), !dbg !2508
  %call = tail call i8* @memset(i8* %5, i32 0, i64 32) #6, !dbg !2510
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2511
  %14 = bitcast %union.tree_node** %version to i32*, !dbg !2511
  %15 = load i32, i32* %14, align 8, !dbg !2511
  %16 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !2513
  %base = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %16, i64 0, i32 0, !dbg !2513
  %call29 = tail call fastcc i32 @VEC_vn_ssa_aux_t_base_length(%struct.VEC_vn_ssa_aux_t_base* %base) #7, !dbg !2513
  %cmp30 = icmp ult i32 %15, %call29, !dbg !2514
  br i1 %cmp30, label %if.end, label %if.then, !dbg !2515

if.then:                                          ; preds = %cond.end23
  %17 = load i32, i32* %14, align 8, !dbg !2516
  %add34 = add i32 %17, 1, !dbg !2516
  tail call fastcc void @VEC_vn_ssa_aux_t_heap_safe_grow(%struct.VEC_vn_ssa_aux_t_heap** nonnull @vn_ssa_aux_table, i32 %add34) #7, !dbg !2516
  br label %if.end, !dbg !2516

if.end:                                           ; preds = %cond.end23, %if.then
  %18 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !2517
  %base37 = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %18, i64 0, i32 0, !dbg !2517
  %19 = load i32, i32* %14, align 8, !dbg !2517
  %call43 = tail call fastcc %struct.vn_ssa_aux* @VEC_vn_ssa_aux_t_base_replace(%struct.VEC_vn_ssa_aux_t_base* %base37, i32 %19, %struct.vn_ssa_aux* %12) #7, !dbg !2517
  ret %struct.vn_ssa_aux* %12, !dbg !2518
}

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #1

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_ssa_aux_t_base_length(%struct.VEC_vn_ssa_aux_t_base* %vec_) unnamed_addr #0 !dbg !2519 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_base* %vec_, metadata !2523, metadata !DIExpression()), !dbg !2524
  %tobool = icmp eq %struct.VEC_vn_ssa_aux_t_base* %vec_, null, !dbg !2525
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2525

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_base, %struct.VEC_vn_ssa_aux_t_base* %vec_, i64 0, i32 0, !dbg !2525
  %0 = load i32, i32* %num, align 8, !dbg !2525
  br label %cond.end, !dbg !2525

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2525
  ret i32 %cond, !dbg !2525
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_ssa_aux_t_heap_safe_grow(%struct.VEC_vn_ssa_aux_t_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !2526 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, metadata !2531, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.value(metadata i32 %size_, metadata !2532, metadata !DIExpression()), !dbg !2533
  %cmp = icmp sgt i32 %size_, -1, !dbg !2534
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2534

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !2534
  %tobool = icmp eq %struct.VEC_vn_ssa_aux_t_heap* %0, null, !dbg !2534
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2534

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %0, i64 0, i32 0, !dbg !2534
  br label %cond.end, !dbg !2534

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_vn_ssa_aux_t_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !2534
  %call = tail call fastcc i32 @VEC_vn_ssa_aux_t_base_length(%struct.VEC_vn_ssa_aux_t_base* %cond) #7, !dbg !2534
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !2534
  %tobool2 = icmp eq %struct.VEC_vn_ssa_aux_t_heap* %1, null, !dbg !2534
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !2534

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %1, i64 0, i32 0, i32 0, !dbg !2534
  %2 = load i32, i32* %num, align 8, !dbg !2534
  br label %cond.end11, !dbg !2534

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !2534
  %sub = sub nsw i32 %size_, %cond12, !dbg !2534
  %call13 = tail call fastcc i32 @VEC_vn_ssa_aux_t_heap_reserve_exact(%struct.VEC_vn_ssa_aux_t_heap** nonnull @vn_ssa_aux_table, i32 %sub) #7, !dbg !2534
  %3 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !2534
  %num20 = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %3, i64 0, i32 0, i32 0, !dbg !2534
  store i32 %size_, i32* %num20, align 8, !dbg !2534
  ret void, !dbg !2534
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_ssa_aux* @VEC_vn_ssa_aux_t_base_replace(%struct.VEC_vn_ssa_aux_t_base* %vec_, i32 %ix_, %struct.vn_ssa_aux* %obj_) unnamed_addr #0 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_base* %vec_, metadata !2540, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2541, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %obj_, metadata !2542, metadata !DIExpression()), !dbg !2544
  %idxprom = zext i32 %ix_ to i64, !dbg !2545
  %arrayidx = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_base, %struct.VEC_vn_ssa_aux_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2545
  %0 = load %struct.vn_ssa_aux*, %struct.vn_ssa_aux** %arrayidx, align 8, !dbg !2545
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %0, metadata !2543, metadata !DIExpression()), !dbg !2544
  store %struct.vn_ssa_aux* %obj_, %struct.vn_ssa_aux** %arrayidx, align 8, !dbg !2545
  ret %struct.vn_ssa_aux* %0, !dbg !2545
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vn_get_expr_for(%union.tree_node* %name) local_unnamed_addr #4 !dbg !2546 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !2550, metadata !DIExpression()), !dbg !2554
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name) #7, !dbg !2555
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %call, metadata !2551, metadata !DIExpression()), !dbg !2554
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2553, metadata !DIExpression()), !dbg !2554
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 0, !dbg !2556
  %0 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !2556
  %1 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !2558
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !2559
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2560

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2560
  %bf.load = load i64, i64* %2, align 8, !dbg !2561
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2563
  %cmp2 = icmp eq i64 %bf.cast1, 141, !dbg !2563
  br i1 %cmp2, label %if.end5, label %cleanup, !dbg !2564

if.end5:                                          ; preds = %if.end
  %call7 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %0) #7, !dbg !2565
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %call7, metadata !2551, metadata !DIExpression()), !dbg !2554
  %3 = bitcast %struct.vn_ssa_aux* %call7 to i64**, !dbg !2566
  %4 = load i64*, i64** %3, align 8, !dbg !2566
  %bf.load10 = load i64, i64* %4, align 8, !dbg !2566
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !2568
  %cmp13 = icmp eq i64 %bf.cast122, 141, !dbg !2568
  br i1 %cmp13, label %if.end16, label %if.then14, !dbg !2569

if.then14:                                        ; preds = %if.end5
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !2569
  br label %cleanup, !dbg !2570

if.end16:                                         ; preds = %if.end5
  %expr17 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call7, i64 0, i32 1, !dbg !2571
  %6 = load %union.tree_node*, %union.tree_node** %expr17, align 8, !dbg !2571
  %cmp18 = icmp eq %union.tree_node* %6, null, !dbg !2573
  br i1 %cmp18, label %if.end21, label %if.then19, !dbg !2574

if.then19:                                        ; preds = %if.end16
  br label %cleanup, !dbg !2575

if.end21:                                         ; preds = %if.end16
  %def_stmt23 = getelementptr inbounds i64, i64* %4, i64 4, !dbg !2576
  %7 = bitcast i64* %def_stmt23 to %union.gimple_statement_d**, !dbg !2576
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %7, align 8, !dbg !2576
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %8, metadata !2552, metadata !DIExpression()), !dbg !2554
  %call24 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %8) #7, !dbg !2577
  %tobool = icmp eq i8 %call24, 0, !dbg !2577
  br i1 %tobool, label %lor.lhs.false, label %if.then28, !dbg !2579

lor.lhs.false:                                    ; preds = %if.end21
  %call25 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %8) #7, !dbg !2580
  %cmp26 = icmp eq i32 %call25, 16, !dbg !2581
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !2582

if.then28:                                        ; preds = %if.end21, %lor.lhs.false
  %valnum29 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call7, i64 0, i32 0, !dbg !2583
  %9 = load %union.tree_node*, %union.tree_node** %valnum29, align 8, !dbg !2583
  br label %cleanup, !dbg !2584

if.end30:                                         ; preds = %lor.lhs.false
  %call31 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %8) #7, !dbg !2585
  %tobool32 = icmp eq i8 %call31, 0, !dbg !2585
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !2587

if.then33:                                        ; preds = %if.end30
  %valnum34 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call7, i64 0, i32 0, !dbg !2588
  %10 = load %union.tree_node*, %union.tree_node** %valnum34, align 8, !dbg !2588
  br label %cleanup, !dbg !2589

if.end35:                                         ; preds = %if.end30
  %call36 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !2590
  %idxprom = sext i32 %call36 to i64, !dbg !2590
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !2590
  %11 = load i32, i32* %arrayidx, align 4, !dbg !2590
  switch i32 %11, label %sw.epilog [
    i32 4, label %sw.bb
    i32 6, label %sw.bb62
    i32 7, label %sw.bb67
  ], !dbg !2591

sw.bb:                                            ; preds = %if.end35
  %call37 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !2592
  %cmp38 = icmp eq i32 %call37, 118, !dbg !2595
  br i1 %cmp38, label %land.lhs.true, label %lor.lhs.false40, !dbg !2596

lor.lhs.false40:                                  ; preds = %sw.bb
  %call41 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !2597
  %cmp42 = icmp eq i32 %call41, 43, !dbg !2598
  br i1 %cmp42, label %land.lhs.true, label %lor.lhs.false44, !dbg !2599

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  %call45 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !2600
  %cmp46 = icmp eq i32 %call45, 44, !dbg !2601
  br i1 %cmp46, label %land.lhs.true, label %sw.epilog, !dbg !2602

land.lhs.true:                                    ; preds = %lor.lhs.false44, %lor.lhs.false40, %sw.bb
  %call48 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %8) #7, !dbg !2603
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2603
  %bf.load50 = load i64, i64* %12, align 8, !dbg !2603
  %bf.cast523 = and i64 %bf.load50, 65535, !dbg !2604
  %cmp53 = icmp eq i64 %bf.cast523, 141, !dbg !2604
  br i1 %cmp53, label %if.then55, label %sw.epilog, !dbg !2605

if.then55:                                        ; preds = %land.lhs.true
  %call56 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !2606
  %call57 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %8) #7, !dbg !2606
  %call58 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %8) #7, !dbg !2606
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2606
  %13 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !2606
  %call60 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %call56, %union.tree_node* %call57, %union.tree_node* %13) #6, !dbg !2606
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !2553, metadata !DIExpression()), !dbg !2554
  br label %sw.epilog, !dbg !2607

sw.bb62:                                          ; preds = %if.end35
  %call63 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !2608
  %call64 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %8) #7, !dbg !2608
  %call65 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %8) #7, !dbg !2608
  %call66 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %call63, %union.tree_node* %call64, %union.tree_node* %call65) #6, !dbg !2608
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !2553, metadata !DIExpression()), !dbg !2554
  br label %sw.epilog, !dbg !2609

sw.bb67:                                          ; preds = %if.end35
  %call68 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !2610
  %call69 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %8) #7, !dbg !2610
  %call70 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %8) #7, !dbg !2610
  %call71 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %8) #7, !dbg !2610
  %call72 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %call68, %union.tree_node* %call69, %union.tree_node* %call70, %union.tree_node* %call71) #6, !dbg !2610
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !2553, metadata !DIExpression()), !dbg !2554
  br label %sw.epilog, !dbg !2611

sw.epilog:                                        ; preds = %if.end35, %lor.lhs.false44, %land.lhs.true, %if.then55, %sw.bb67, %sw.bb62
  %expr.1 = phi %union.tree_node* [ %call72, %sw.bb67 ], [ %call66, %sw.bb62 ], [ %call60, %if.then55 ], [ null, %land.lhs.true ], [ null, %lor.lhs.false44 ], [ null, %if.end35 ], !dbg !2554
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1, metadata !2553, metadata !DIExpression()), !dbg !2554
  %cmp73 = icmp eq %union.tree_node* %expr.1, null, !dbg !2612
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !2614

if.then75:                                        ; preds = %sw.epilog
  %valnum76 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call7, i64 0, i32 0, !dbg !2615
  %14 = load %union.tree_node*, %union.tree_node** %valnum76, align 8, !dbg !2615
  br label %cleanup, !dbg !2616

if.end77:                                         ; preds = %sw.epilog
  store %union.tree_node* %expr.1, %union.tree_node** %expr17, align 8, !dbg !2617
  br label %cleanup, !dbg !2618

cleanup:                                          ; preds = %if.end, %entry, %if.end77, %if.then75, %if.then33, %if.then28, %if.then19, %if.then14
  %retval.0 = phi %union.tree_node* [ %5, %if.then14 ], [ %6, %if.then19 ], [ %9, %if.then28 ], [ %14, %if.then75 ], [ %expr.1, %if.end77 ], [ %10, %if.then33 ], [ %name, %entry ], [ %0, %if.end ], !dbg !2554
  ret %union.tree_node* %retval.0, !dbg !2619
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2620 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2625, metadata !DIExpression()), !dbg !2626
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !2627
  %cmp = icmp eq i32 %call, 18, !dbg !2628
  %conv1 = zext i1 %cmp to i8, !dbg !2627
  ret i8 %conv1, !dbg !2629
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2630 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2634, metadata !DIExpression()), !dbg !2635
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !2636
  %bf.load = load i32, i32* %0, align 8, !dbg !2636
  %bf.clear = and i32 %bf.load, 255, !dbg !2636
  ret i32 %bf.clear, !dbg !2637
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2638 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2640, metadata !DIExpression()), !dbg !2641
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !2642
  %cmp = icmp eq i32 %call, 6, !dbg !2643
  %conv1 = zext i1 %cmp to i8, !dbg !2642
  ret i8 %conv1, !dbg !2644
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2645 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2649, metadata !DIExpression()), !dbg !2651
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !2652
  call void @llvm.dbg.value(metadata i32 %call, metadata !2650, metadata !DIExpression()), !dbg !2651
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !2653
  %cmp = icmp eq i32 %call1, 3, !dbg !2655
  br i1 %cmp, label %if.then, label %if.end, !dbg !2656

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !2657
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2657
  %bf.load = load i64, i64* %0, align 8, !dbg !2657
  %1 = trunc i64 %bf.load to i32, !dbg !2657
  %bf.cast = and i32 %1, 65535, !dbg !2657
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !2650, metadata !DIExpression()), !dbg !2651
  br label %if.end, !dbg !2658

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !2651
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !2650, metadata !DIExpression()), !dbg !2651
  ret i32 %code.0, !dbg !2659
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2660 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2664, metadata !DIExpression()), !dbg !2665
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !2666
  ret %union.tree_node* %call, !dbg !2667
}

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !2668 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2670, metadata !DIExpression()), !dbg !2675
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !2676
  call void @llvm.dbg.value(metadata i32 %call, metadata !2671, metadata !DIExpression()), !dbg !2675
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !2677

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !2678
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !2672, metadata !DIExpression()), !dbg !2680
  br label %cleanup, !dbg !2681

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !2682
  %cond = icmp eq i32 %call5, 66, !dbg !2683
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !2683

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !2684
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2684
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !2684
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2672, metadata !DIExpression()), !dbg !2680
  br label %cleanup, !dbg !2686

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !2687
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2687
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !2687
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !2672, metadata !DIExpression()), !dbg !2680
  br label %cleanup, !dbg !2688

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !2689
  br label %cleanup, !dbg !2691

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !2692
  br label %cleanup, !dbg !2693

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !2694
  ret %union.tree_node* %retval.0, !dbg !2695
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2696 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2698, metadata !DIExpression()), !dbg !2699
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !2700
  %cmp = icmp ugt i32 %call, 2, !dbg !2702
  br i1 %cmp, label %if.then, label %return, !dbg !2703

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !2704
  br label %return, !dbg !2705

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !2706
  ret %union.tree_node* %retval.0, !dbg !2707
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_constant_value_id(%union.tree_node* %constant) local_unnamed_addr #4 !dbg !2708 {
entry:
  %vc = alloca %struct.vn_constant_s, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %constant, metadata !2712, metadata !DIExpression()), !dbg !2715
  %0 = bitcast %struct.vn_constant_s* %vc to i8*, !dbg !2716
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2716
  %call = tail call fastcc i32 @vn_hash_constant_with_type(%union.tree_node* %constant) #7, !dbg !2717
  %hashcode = getelementptr inbounds %struct.vn_constant_s, %struct.vn_constant_s* %vc, i64 0, i32 1, !dbg !2718
  store i32 %call, i32* %hashcode, align 4, !dbg !2719
  %constant1 = getelementptr inbounds %struct.vn_constant_s, %struct.vn_constant_s* %vc, i64 0, i32 2, !dbg !2720
  store %union.tree_node* %constant, %union.tree_node** %constant1, align 8, !dbg !2721
  %1 = load %struct.htab*, %struct.htab** @constant_to_value_id, align 8, !dbg !2722
  %call3 = call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call, i32 0) #6, !dbg !2723
  call void @llvm.dbg.value(metadata i8** %call3, metadata !2713, metadata !DIExpression()), !dbg !2715
  %tobool = icmp eq i8** %call3, null, !dbg !2724
  br i1 %tobool, label %cleanup, label %if.then, !dbg !2726

if.then:                                          ; preds = %entry
  %2 = bitcast i8** %call3 to %struct.vn_constant_s**, !dbg !2727
  %3 = load %struct.vn_constant_s*, %struct.vn_constant_s** %2, align 8, !dbg !2727
  %value_id = getelementptr inbounds %struct.vn_constant_s, %struct.vn_constant_s* %3, i64 0, i32 0, !dbg !2728
  %4 = load i32, i32* %value_id, align 8, !dbg !2728
  br label %cleanup, !dbg !2729

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi i32 [ %4, %if.then ], [ 0, %entry ], !dbg !2715
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2730
  ret i32 %retval.0, !dbg !2730
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @vn_hash_constant_with_type(%union.tree_node* %constant) unnamed_addr #0 !dbg !2731 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %constant, metadata !2735, metadata !DIExpression()), !dbg !2737
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %constant, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2738
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !2738
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2736, metadata !DIExpression()), !dbg !2737
  %call = tail call i32 @iterative_hash_expr(%union.tree_node* %constant, i32 0) #6, !dbg !2739
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2740
  %bf.load = load i64, i64* %1, align 8, !dbg !2740
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2740
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !2740
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !2740

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 7, !dbg !2740
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !2740

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 8, !dbg !2740
  %phitmp = zext i1 %cmp11 to i32, !dbg !2740
  br label %lor.end, !dbg !2740

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i32 [ 1, %lor.lhs.false ], [ 1, %entry ], [ %phitmp, %lor.rhs ]
  %add = add i32 %call, %2, !dbg !2741
  br i1 %cmp, label %cond.true, label %lor.lhs.false17, !dbg !2742

lor.lhs.false17:                                  ; preds = %lor.end
  %cmp22 = icmp eq i64 %bf.cast1, 7, !dbg !2742
  br i1 %cmp22, label %cond.true, label %lor.lhs.false23, !dbg !2742

lor.lhs.false23:                                  ; preds = %lor.lhs.false17
  %cmp28 = icmp eq i64 %bf.cast1, 8, !dbg !2742
  br i1 %cmp28, label %cond.true, label %cond.end, !dbg !2742

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false17, %lor.end
  %type29 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !2743
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type29, i64 0, i32 6, !dbg !2743
  %bf.load30 = load i32, i32* %precision, align 4, !dbg !2743
  %bf.clear31 = and i32 %bf.load30, 1023, !dbg !2743
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !2744
  %3 = trunc i64 %bf.lshr to i32, !dbg !2744
  %bf.cast35 = and i32 %3, 1, !dbg !2744
  %add36 = add nuw nsw i32 %bf.clear31, %bf.cast35, !dbg !2745
  br label %cond.end, !dbg !2742

cond.end:                                         ; preds = %lor.lhs.false23, %cond.true
  %cond = phi i32 [ %add36, %cond.true ], [ 0, %lor.lhs.false23 ], !dbg !2742
  %add37 = add i32 %add, %cond, !dbg !2746
  ret i32 %add37, !dbg !2747
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @get_or_alloc_constant_value_id(%union.tree_node* %constant) local_unnamed_addr #4 !dbg !2748 {
entry:
  %vc = alloca %struct.vn_constant_s, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %constant, metadata !2750, metadata !DIExpression()), !dbg !2754
  %0 = bitcast %struct.vn_constant_s* %vc to i8*, !dbg !2755
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2755
  %call = tail call fastcc i32 @vn_hash_constant_with_type(%union.tree_node* %constant) #7, !dbg !2756
  %hashcode = getelementptr inbounds %struct.vn_constant_s, %struct.vn_constant_s* %vc, i64 0, i32 1, !dbg !2757
  store i32 %call, i32* %hashcode, align 4, !dbg !2758
  %constant1 = getelementptr inbounds %struct.vn_constant_s, %struct.vn_constant_s* %vc, i64 0, i32 2, !dbg !2759
  store %union.tree_node* %constant, %union.tree_node** %constant1, align 8, !dbg !2760
  %1 = load %struct.htab*, %struct.htab** @constant_to_value_id, align 8, !dbg !2761
  %call3 = call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call, i32 1) #6, !dbg !2762
  call void @llvm.dbg.value(metadata i8** %call3, metadata !2751, metadata !DIExpression()), !dbg !2754
  %2 = load i8*, i8** %call3, align 8, !dbg !2763
  %tobool = icmp eq i8* %2, null, !dbg !2763
  br i1 %tobool, label %if.end, label %if.then, !dbg !2765

if.then:                                          ; preds = %entry
  %value_id = bitcast i8* %2 to i32*, !dbg !2766
  br label %cleanup, !dbg !2767

if.end:                                           ; preds = %entry
  %call4 = call i8* @xmalloc(i64 16) #6, !dbg !2768
  call void @llvm.dbg.value(metadata i8* %call4, metadata !2753, metadata !DIExpression()), !dbg !2754
  %3 = load i32, i32* %hashcode, align 4, !dbg !2769
  %hashcode6 = getelementptr inbounds i8, i8* %call4, i64 4, !dbg !2770
  %4 = bitcast i8* %hashcode6 to i32*, !dbg !2770
  store i32 %3, i32* %4, align 4, !dbg !2771
  %constant7 = getelementptr inbounds i8, i8* %call4, i64 8, !dbg !2772
  %5 = bitcast i8* %constant7 to %union.tree_node**, !dbg !2772
  store %union.tree_node* %constant, %union.tree_node** %5, align 8, !dbg !2773
  %call8 = call i32 @get_next_value_id() #7, !dbg !2774
  %value_id9 = bitcast i8* %call4 to i32*, !dbg !2775
  store i32 %call8, i32* %value_id9, align 8, !dbg !2776
  store i8* %call4, i8** %call3, align 8, !dbg !2777
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @constant_value_ids, align 8, !dbg !2778
  %7 = load i32, i32* %value_id9, align 8, !dbg !2779
  %call11 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %7) #6, !dbg !2780
  br label %cleanup, !dbg !2781

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0.in = phi i32* [ %value_id, %if.then ], [ %value_id9, %if.end ]
  %retval.0 = load i32, i32* %retval.0.in, align 8, !dbg !2754
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2782
  ret i32 %retval.0, !dbg !2782
}

declare dso_local i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define dso_local i32 @get_next_value_id() local_unnamed_addr #4 !dbg !2783 {
entry:
  %0 = load i32, i32* @next_value_id, align 4, !dbg !2786
  %inc = add i32 %0, 1, !dbg !2786
  store i32 %inc, i32* @next_value_id, align 4, !dbg !2786
  ret i32 %0, !dbg !2787
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @value_id_constant_p(i32 %v) local_unnamed_addr #4 !dbg !2788 {
entry:
  call void @llvm.dbg.value(metadata i32 %v, metadata !2792, metadata !DIExpression()), !dbg !2793
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @constant_value_ids, align 8, !dbg !2794
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %v) #6, !dbg !2795
  %conv = trunc i32 %call to i8, !dbg !2795
  ret i8 %conv, !dbg !2796
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @vn_reference_compute_hash(%struct.vn_reference_s* %vr1) local_unnamed_addr #4 !dbg !2797 {
entry:
  %vro = alloca %struct.vn_reference_op_struct*, align 8
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr1, metadata !2802, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.value(metadata i32 0, metadata !2803, metadata !DIExpression()), !dbg !2808
  %0 = bitcast %struct.vn_reference_op_struct** %vro to i8*, !dbg !2809
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2809
  call void @llvm.dbg.value(metadata i32 0, metadata !2804, metadata !DIExpression()), !dbg !2808
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 5, !dbg !2810
  br label %for.cond, !dbg !2813

for.cond:                                         ; preds = %for.body, %entry
  %result.0 = phi i32 [ 0, %entry ], [ %call3, %for.body ], !dbg !2808
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2814
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2804, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !2803, metadata !DIExpression()), !dbg !2808
  %1 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !2815
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %1, null, !dbg !2815
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2815

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %1, i64 0, i32 0, !dbg !2815
  br label %cond.end, !dbg !2815

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !2815
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro, metadata !2805, metadata !DIExpression(DW_OP_deref)), !dbg !2808
  %call = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %cond, i32 %i.0, %struct.vn_reference_op_struct** nonnull %vro) #7, !dbg !2815
  %tobool2 = icmp eq i32 %call, 0, !dbg !2816
  br i1 %tobool2, label %for.end, label %for.body, !dbg !2816

for.body:                                         ; preds = %cond.end
  %2 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !2817
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %2, metadata !2805, metadata !DIExpression()), !dbg !2808
  %call3 = call fastcc i32 @vn_reference_op_compute_hash(%struct.vn_reference_op_struct* %2, i32 %result.0) #7, !dbg !2818
  call void @llvm.dbg.value(metadata i32 %call3, metadata !2803, metadata !DIExpression()), !dbg !2808
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2819
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2804, metadata !DIExpression()), !dbg !2808
  br label %for.cond, !dbg !2820, !llvm.loop !2821

for.end:                                          ; preds = %cond.end
  %result.0.lcssa = phi i32 [ %result.0, %cond.end ], !dbg !2808
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !2803, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !2803, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !2803, metadata !DIExpression()), !dbg !2808
  %vuse = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 2, !dbg !2823
  %3 = load %union.tree_node*, %union.tree_node** %vuse, align 8, !dbg !2823
  %tobool4 = icmp eq %union.tree_node* %3, null, !dbg !2825
  br i1 %tobool4, label %if.end, label %if.then, !dbg !2826

if.then:                                          ; preds = %for.end
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2827
  %4 = bitcast %union.tree_node** %version to i32*, !dbg !2827
  %5 = load i32, i32* %4, align 8, !dbg !2827
  %add = add i32 %result.0.lcssa, %5, !dbg !2828
  call void @llvm.dbg.value(metadata i32 %add, metadata !2803, metadata !DIExpression()), !dbg !2808
  br label %if.end, !dbg !2829

if.end:                                           ; preds = %for.end, %if.then
  %result.1 = phi i32 [ %add, %if.then ], [ %result.0.lcssa, %for.end ], !dbg !2808
  call void @llvm.dbg.value(metadata i32 %result.1, metadata !2803, metadata !DIExpression()), !dbg !2808
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2830
  ret i32 %result.1, !dbg !2831
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_, %struct.vn_reference_op_struct** %ptr) unnamed_addr #0 !dbg !2832 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !2838, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2839, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %ptr, metadata !2840, metadata !DIExpression()), !dbg !2841
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !2842
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2842

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !2842
  %0 = load i32, i32* %num, align 8, !dbg !2842
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2842
  br i1 %cmp, label %if.then, label %if.else, !dbg !2844

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2845
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2845
  br label %return, !dbg !2845

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2847

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.vn_reference_op_struct* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !2849
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2849
  store %struct.vn_reference_op_struct* %storemerge, %struct.vn_reference_op_struct** %ptr, align 8, !dbg !2849
  ret i32 %retval.0, !dbg !2844
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @vn_reference_op_compute_hash(%struct.vn_reference_op_struct* %vro1, i32 %result) unnamed_addr #4 !dbg !2850 {
entry:
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %vro1, metadata !2855, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %result, metadata !2856, metadata !DIExpression()), !dbg !2857
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %vro1, i64 0, i32 0, !dbg !2858
  %0 = load i32, i32* %opcode, align 8, !dbg !2858
  %call = tail call i32 @iterative_hash_hashval_t(i32 %0, i32 %result) #6, !dbg !2859
  call void @llvm.dbg.value(metadata i32 %call, metadata !2856, metadata !DIExpression()), !dbg !2857
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %vro1, i64 0, i32 2, !dbg !2860
  %1 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !2860
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !2862
  br i1 %tobool, label %if.end, label %if.then, !dbg !2863

if.then:                                          ; preds = %entry
  %call2 = tail call i32 @iterative_hash_expr(%union.tree_node* nonnull %1, i32 %call) #6, !dbg !2864
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2856, metadata !DIExpression()), !dbg !2857
  br label %if.end, !dbg !2865

if.end:                                           ; preds = %entry, %if.then
  %result.addr.0 = phi i32 [ %call2, %if.then ], [ %call, %entry ], !dbg !2857
  call void @llvm.dbg.value(metadata i32 %result.addr.0, metadata !2856, metadata !DIExpression()), !dbg !2857
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %vro1, i64 0, i32 3, !dbg !2866
  %2 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !2866
  %tobool3 = icmp eq %union.tree_node* %2, null, !dbg !2868
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !2869

if.then4:                                         ; preds = %if.end
  %call6 = tail call i32 @iterative_hash_expr(%union.tree_node* nonnull %2, i32 %result.addr.0) #6, !dbg !2870
  call void @llvm.dbg.value(metadata i32 %call6, metadata !2856, metadata !DIExpression()), !dbg !2857
  br label %if.end7, !dbg !2871

if.end7:                                          ; preds = %if.end, %if.then4
  %result.addr.1 = phi i32 [ %call6, %if.then4 ], [ %result.addr.0, %if.end ], !dbg !2857
  call void @llvm.dbg.value(metadata i32 %result.addr.1, metadata !2856, metadata !DIExpression()), !dbg !2857
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %vro1, i64 0, i32 4, !dbg !2872
  %3 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !2872
  %tobool8 = icmp eq %union.tree_node* %3, null, !dbg !2874
  br i1 %tobool8, label %if.end12, label %if.then9, !dbg !2875

if.then9:                                         ; preds = %if.end7
  %call11 = tail call i32 @iterative_hash_expr(%union.tree_node* nonnull %3, i32 %result.addr.1) #6, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %call11, metadata !2856, metadata !DIExpression()), !dbg !2857
  br label %if.end12, !dbg !2877

if.end12:                                         ; preds = %if.end7, %if.then9
  %result.addr.2 = phi i32 [ %call11, %if.then9 ], [ %result.addr.1, %if.end7 ], !dbg !2857
  call void @llvm.dbg.value(metadata i32 %result.addr.2, metadata !2856, metadata !DIExpression()), !dbg !2857
  ret i32 %result.addr.2, !dbg !2878
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vn_reference_eq(i8* %p1, i8* %p2) #4 !dbg !2879 {
entry:
  %vro = alloca %struct.vn_reference_op_struct*, align 8
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2881, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2882, metadata !DIExpression()), !dbg !2888
  %0 = bitcast %struct.vn_reference_op_struct** %vro to i8*, !dbg !2889
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2889
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2885, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2887, metadata !DIExpression()), !dbg !2888
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 4, !dbg !2890
  %1 = bitcast i8* %hashcode to i32*, !dbg !2890
  %2 = load i32, i32* %1, align 4, !dbg !2890
  %hashcode1 = getelementptr inbounds i8, i8* %p2, i64 4, !dbg !2892
  %3 = bitcast i8* %hashcode1 to i32*, !dbg !2892
  %4 = load i32, i32* %3, align 4, !dbg !2892
  %cmp = icmp eq i32 %2, %4, !dbg !2893
  br i1 %cmp, label %if.end, label %cleanup, !dbg !2894

if.end:                                           ; preds = %entry
  br i1 true, label %if.end6, label %if.end.cleanup_crit_edge, !dbg !2895

if.end.cleanup_crit_edge:                         ; preds = %if.end
  br label %cleanup, !dbg !2895

if.end6:                                          ; preds = %if.end
  %vuse = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !2896
  %5 = bitcast i8* %vuse to %union.tree_node**, !dbg !2896
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !2896
  %vuse7 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !2898
  %7 = bitcast i8* %vuse7 to %union.tree_node**, !dbg !2898
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !2898
  %cmp8 = icmp eq %union.tree_node* %6, %8, !dbg !2899
  br i1 %cmp8, label %if.end10, label %cleanup, !dbg !2900

if.end10:                                         ; preds = %if.end6
  %operands = getelementptr inbounds i8, i8* %p1, i64 32, !dbg !2901
  %9 = bitcast i8* %operands to %struct.VEC_vn_reference_op_s_heap**, !dbg !2901
  %10 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %9, align 8, !dbg !2901
  %operands11 = getelementptr inbounds i8, i8* %p2, i64 32, !dbg !2903
  %11 = bitcast i8* %operands11 to %struct.VEC_vn_reference_op_s_heap**, !dbg !2903
  %12 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %11, align 8, !dbg !2903
  %cmp12 = icmp eq %struct.VEC_vn_reference_op_s_heap* %10, %12, !dbg !2904
  br i1 %cmp12, label %cleanup, label %if.end14, !dbg !2905

if.end14:                                         ; preds = %if.end10
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %10, null, !dbg !2906
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2906

cond.true:                                        ; preds = %if.end14
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %10, i64 0, i32 0, !dbg !2906
  br label %cond.end, !dbg !2906

cond.end:                                         ; preds = %if.end14, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %if.end14 ], !dbg !2906
  %call = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond) #7, !dbg !2906
  %13 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %11, align 8, !dbg !2908
  %tobool18 = icmp eq %struct.VEC_vn_reference_op_s_heap* %13, null, !dbg !2908
  br i1 %tobool18, label %cond.end23, label %cond.true19, !dbg !2908

cond.true19:                                      ; preds = %cond.end
  %base21 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %13, i64 0, i32 0, !dbg !2908
  br label %cond.end23, !dbg !2908

cond.end23:                                       ; preds = %cond.end, %cond.true19
  %cond24 = phi %struct.VEC_vn_reference_op_s_base* [ %base21, %cond.true19 ], [ null, %cond.end ], !dbg !2908
  %call25 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond24) #7, !dbg !2908
  %cmp26 = icmp eq i32 %call, %call25, !dbg !2909
  br i1 %cmp26, label %for.cond.preheader, label %cleanup, !dbg !2910

for.cond.preheader:                               ; preds = %cond.end23
  %14 = bitcast %struct.vn_reference_op_struct** %vro to i8**, !dbg !2911
  br label %for.cond, !dbg !2915

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !2916
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2883, metadata !DIExpression()), !dbg !2888
  %15 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %9, align 8, !dbg !2917
  %tobool30 = icmp eq %struct.VEC_vn_reference_op_s_heap* %15, null, !dbg !2917
  br i1 %tobool30, label %cond.end35, label %cond.true31, !dbg !2917

cond.true31:                                      ; preds = %for.cond
  %base33 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %15, i64 0, i32 0, !dbg !2917
  br label %cond.end35, !dbg !2917

cond.end35:                                       ; preds = %for.cond, %cond.true31
  %cond36 = phi %struct.VEC_vn_reference_op_s_base* [ %base33, %cond.true31 ], [ null, %for.cond ], !dbg !2917
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro, metadata !2884, metadata !DIExpression(DW_OP_deref)), !dbg !2888
  %call37 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %cond36, i32 %i.0, %struct.vn_reference_op_struct** nonnull %vro) #7, !dbg !2917
  %tobool38 = icmp eq i32 %call37, 0, !dbg !2915
  br i1 %tobool38, label %cleanup.loopexit, label %for.body, !dbg !2915

for.body:                                         ; preds = %cond.end35
  %16 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %11, align 8, !dbg !2918
  %tobool40 = icmp eq %struct.VEC_vn_reference_op_s_heap* %16, null, !dbg !2918
  br i1 %tobool40, label %cond.end45, label %cond.true41, !dbg !2918

cond.true41:                                      ; preds = %for.body
  %base43 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %16, i64 0, i32 0, !dbg !2918
  br label %cond.end45, !dbg !2918

cond.end45:                                       ; preds = %for.body, %cond.true41
  %cond46 = phi %struct.VEC_vn_reference_op_s_base* [ %base43, %cond.true41 ], [ null, %for.body ], !dbg !2918
  %call47 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %cond46, i32 %i.0) #7, !dbg !2918
  %17 = bitcast %struct.vn_reference_op_struct* %call47 to i8*, !dbg !2918
  %18 = load i8*, i8** %14, align 8, !dbg !2919
  %call48 = call fastcc i32 @vn_reference_op_eq(i8* %17, i8* %18) #7, !dbg !2920
  %tobool49 = icmp eq i32 %call48, 0, !dbg !2920
  br i1 %tobool49, label %cleanup.loopexit, label %for.inc, !dbg !2921

for.inc:                                          ; preds = %cond.end45
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2922
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2883, metadata !DIExpression()), !dbg !2888
  br label %for.cond, !dbg !2923, !llvm.loop !2924

cleanup.loopexit:                                 ; preds = %cond.end35, %cond.end45
  %retval.0.ph = phi i32 [ 1, %cond.end35 ], [ 0, %cond.end45 ]
  br label %cleanup, !dbg !2926

cleanup:                                          ; preds = %if.end.cleanup_crit_edge, %cleanup.loopexit, %cond.end23, %if.end6, %entry, %if.end10
  %retval.0 = phi i32 [ 0, %entry ], [ undef, %if.end.cleanup_crit_edge ], [ 0, %if.end6 ], [ 1, %if.end10 ], [ 0, %cond.end23 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !2888
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2926
  ret i32 %retval.0, !dbg !2926
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %vec_) unnamed_addr #0 !dbg !2927 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !2933, metadata !DIExpression()), !dbg !2934
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !2935
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2935

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !2935
  %0 = load i32, i32* %num, align 8, !dbg !2935
  br label %cond.end, !dbg !2935

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2935
  ret i32 %cond, !dbg !2935
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @vn_reference_op_eq(i8* %p1, i8* %p2) unnamed_addr #4 !dbg !2936 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2938, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2939, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.value(metadata i8* %p1, metadata !2940, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.value(metadata i8* %p2, metadata !2942, metadata !DIExpression()), !dbg !2943
  %opcode = bitcast i8* %p1 to i32*, !dbg !2944
  %0 = load i32, i32* %opcode, align 8, !dbg !2944
  %opcode1 = bitcast i8* %p2 to i32*, !dbg !2945
  %1 = load i32, i32* %opcode1, align 8, !dbg !2945
  %cmp = icmp eq i32 %0, %1, !dbg !2946
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !2947

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !2948
  %2 = bitcast i8* %type to %union.tree_node**, !dbg !2948
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !2948
  %type2 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !2949
  %4 = bitcast i8* %type2 to %union.tree_node**, !dbg !2949
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !2949
  %call = tail call zeroext i8 @types_compatible_p(%union.tree_node* %3, %union.tree_node* %5) #6, !dbg !2950
  %tobool = icmp eq i8 %call, 0, !dbg !2950
  br i1 %tobool, label %land.end, label %land.lhs.true3, !dbg !2951

land.lhs.true3:                                   ; preds = %land.lhs.true
  %op0 = getelementptr inbounds i8, i8* %p1, i64 16, !dbg !2952
  %6 = bitcast i8* %op0 to %union.tree_node**, !dbg !2952
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !2952
  %op04 = getelementptr inbounds i8, i8* %p2, i64 16, !dbg !2953
  %8 = bitcast i8* %op04 to %union.tree_node**, !dbg !2953
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !2953
  %call5 = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %7, %union.tree_node* %9) #7, !dbg !2954
  %tobool7 = icmp eq i8 %call5, 0, !dbg !2954
  br i1 %tobool7, label %land.end, label %land.lhs.true8, !dbg !2955

land.lhs.true8:                                   ; preds = %land.lhs.true3
  %op1 = getelementptr inbounds i8, i8* %p1, i64 24, !dbg !2956
  %10 = bitcast i8* %op1 to %union.tree_node**, !dbg !2956
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !2956
  %op19 = getelementptr inbounds i8, i8* %p2, i64 24, !dbg !2957
  %12 = bitcast i8* %op19 to %union.tree_node**, !dbg !2957
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2957
  %call10 = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %11, %union.tree_node* %13) #7, !dbg !2958
  %tobool12 = icmp eq i8 %call10, 0, !dbg !2958
  br i1 %tobool12, label %land.end, label %land.rhs, !dbg !2959

land.rhs:                                         ; preds = %land.lhs.true8
  %op2 = getelementptr inbounds i8, i8* %p1, i64 32, !dbg !2960
  %14 = bitcast i8* %op2 to %union.tree_node**, !dbg !2960
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !2960
  %op213 = getelementptr inbounds i8, i8* %p2, i64 32, !dbg !2961
  %16 = bitcast i8* %op213 to %union.tree_node**, !dbg !2961
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !2961
  %call14 = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %15, %union.tree_node* %17) #7, !dbg !2962
  %tobool16 = icmp ne i8 %call14, 0, !dbg !2959
  %phitmp = zext i1 %tobool16 to i32
  br label %land.end

land.end:                                         ; preds = %land.lhs.true8, %land.lhs.true3, %land.lhs.true, %land.rhs, %entry
  %18 = phi i32 [ 0, %land.lhs.true8 ], [ 0, %land.lhs.true3 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %18, !dbg !2963
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2964 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !2968, metadata !DIExpression()), !dbg !2970
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2969, metadata !DIExpression()), !dbg !2970
  br label %land.end, !dbg !2971

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2971
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2971
  ret %struct.vn_reference_op_struct* %arrayidx, !dbg !2971
}

; Function Attrs: nounwind uwtable
define dso_local void @copy_reference_ops_from_ref(%union.tree_node* %ref, %struct.VEC_vn_reference_op_s_heap** %result) local_unnamed_addr #4 !dbg !2972 {
entry:
  %temp = alloca %struct.vn_reference_op_struct, align 8
  %temp42 = alloca %struct.vn_reference_op_struct, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !2977, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %result, metadata !2978, metadata !DIExpression()), !dbg !2985
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2986
  %bf.load = load i64, i64* %0, align 8, !dbg !2986
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2987
  %cmp = icmp eq i64 %bf.cast1, 152, !dbg !2987
  br i1 %cmp, label %if.then, label %while.cond.preheader, !dbg !2988

while.cond.preheader:                             ; preds = %entry
  %1 = bitcast %struct.vn_reference_op_struct* %temp42 to i8*, !dbg !2989
  %type48 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp42, i64 0, i32 1, !dbg !2989
  %2 = bitcast %union.tree_node** %type48 to i64*, !dbg !2989
  %opcode53 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp42, i64 0, i32 0, !dbg !2989
  %op0125 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp42, i64 0, i32 2, !dbg !2990
  %3 = bitcast %union.tree_node** %op0125 to i64*, !dbg !2994
  %op1116 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp42, i64 0, i32 3, !dbg !2994
  %op2118 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp42, i64 0, i32 4, !dbg !2994
  %4 = bitcast %union.tree_node** %op1116 to i64*, !dbg !2994
  %5 = bitcast %union.tree_node** %op0125 to %struct.tree_field_decl**, !dbg !2995
  %6 = bitcast %union.tree_node** %op0125 to %struct.tree_decl_common**, !dbg !2995
  br label %while.cond, !dbg !2997

if.then:                                          ; preds = %entry
  %7 = bitcast %struct.vn_reference_op_struct* %temp to i8*, !dbg !2998
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8, !dbg !2998
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2999
  %8 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !2999
  %tobool = icmp eq %union.tree_node* %8, null, !dbg !2999
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2999

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !2999

cond.false:                                       ; preds = %if.then
  %arrayidx7 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3000
  br label %cond.end, !dbg !2999

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %union.tree_node** [ %operands, %cond.true ], [ %arrayidx7, %cond.false ]
  %cond = load %union.tree_node*, %union.tree_node** %cond.in, align 8, !dbg !2999
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !2982, metadata !DIExpression()), !dbg !3001
  %tobool8 = icmp eq %union.tree_node* %cond, null, !dbg !3002
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !3004

if.then9:                                         ; preds = %cond.end
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !3005
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %9, i64 0) #6, !dbg !3006
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2982, metadata !DIExpression()), !dbg !3001
  br label %if.end, !dbg !3007

if.end:                                           ; preds = %cond.end, %if.then9
  %base1.0 = phi %union.tree_node* [ %cond, %cond.end ], [ %call, %if.then9 ], !dbg !3001
  call void @llvm.dbg.value(metadata %union.tree_node* %base1.0, metadata !2982, metadata !DIExpression()), !dbg !3001
  %call10 = call i8* @memset(i8* nonnull %7, i32 0, i64 40) #6, !dbg !3008
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3009
  %10 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !3009
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !3009
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 16, !dbg !3009
  %12 = bitcast %union.tree_node** %main_variant to i64*, !dbg !3009
  %13 = load i64, i64* %12, align 8, !dbg !3009
  %type12 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 1, !dbg !3010
  %14 = bitcast %union.tree_node** %type12 to i64*, !dbg !3011
  store i64 %13, i64* %14, align 8, !dbg !3011
  %bf.load14 = load i64, i64* %0, align 8, !dbg !3012
  %15 = trunc i64 %bf.load14 to i32, !dbg !3012
  %bf.cast16 = and i32 %15, 65535, !dbg !3012
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 0, !dbg !3013
  store i32 %bf.cast16, i32* %opcode, align 8, !dbg !3014
  %arrayidx19 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !3015
  %16 = bitcast %union.tree_node** %arrayidx19 to i64*, !dbg !3015
  %17 = load i64, i64* %16, align 8, !dbg !3015
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 2, !dbg !3016
  %18 = bitcast %union.tree_node** %op0 to i64*, !dbg !3017
  store i64 %17, i64* %18, align 8, !dbg !3017
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !3018
  %19 = bitcast %union.tree_node** %arrayidx22 to i64*, !dbg !3018
  %20 = load i64, i64* %19, align 8, !dbg !3018
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 3, !dbg !3019
  %21 = bitcast %union.tree_node** %op1 to i64*, !dbg !3020
  store i64 %20, i64* %21, align 8, !dbg !3020
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !3021
  %22 = bitcast %union.tree_node** %arrayidx25 to i64*, !dbg !3021
  %23 = load i64, i64* %22, align 8, !dbg !3021
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 4, !dbg !3022
  %24 = bitcast %union.tree_node** %op2 to i64*, !dbg !3023
  store i64 %23, i64* %24, align 8, !dbg !3023
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %temp, metadata !2979, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  %call26 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_push(%struct.VEC_vn_reference_op_s_heap** %result, %struct.vn_reference_op_struct* nonnull %temp) #7, !dbg !3024
  %call27 = call i8* @memset(i8* nonnull %7, i32 0, i64 40) #6, !dbg !3025
  store %union.tree_node* null, %union.tree_node** %type12, align 8, !dbg !3026
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %base1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3027
  %bf.load30 = load i64, i64* %25, align 8, !dbg !3027
  %26 = trunc i64 %bf.load30 to i32, !dbg !3027
  %bf.cast32 = and i32 %26, 65535, !dbg !3027
  store i32 %bf.cast32, i32* %opcode, align 8, !dbg !3028
  store %union.tree_node* %base1.0, %union.tree_node** %op0, align 8, !dbg !3029
  %arrayidx37 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !3030
  %27 = bitcast %union.tree_node** %arrayidx37 to i64*, !dbg !3030
  %28 = load i64, i64* %27, align 8, !dbg !3030
  store i64 %28, i64* %21, align 8, !dbg !3031
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %temp, metadata !2979, metadata !DIExpression(DW_OP_deref)), !dbg !3001
  %call39 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_push(%struct.VEC_vn_reference_op_s_heap** %result, %struct.vn_reference_op_struct* nonnull %temp) #7, !dbg !3032
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8, !dbg !3033
  br label %while.end

while.cond:                                       ; preds = %while.cond.preheader, %if.end149
  %ref.addr.0 = phi %union.tree_node* [ %ref.addr.1, %if.end149 ], [ %ref, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.addr.0, metadata !2977, metadata !DIExpression()), !dbg !2985
  %tobool41 = icmp eq %union.tree_node* %ref.addr.0, null, !dbg !2997
  br i1 %tobool41, label %while.end.loopexit, label %while.body, !dbg !2997

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !3034
  %call43 = call i8* @memset(i8* nonnull %1, i32 0, i64 40) #6, !dbg !3035
  %type45 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3036
  %29 = bitcast %union.tree_node** %type45 to %struct.tree_type**, !dbg !3036
  %30 = load %struct.tree_type*, %struct.tree_type** %29, align 8, !dbg !3036
  %main_variant47 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %30, i64 0, i32 16, !dbg !3036
  %31 = bitcast %union.tree_node** %main_variant47 to i64*, !dbg !3036
  %32 = load i64, i64* %31, align 8, !dbg !3036
  store i64 %32, i64* %2, align 8, !dbg !3037
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3038
  %bf.load50 = load i64, i64* %33, align 8, !dbg !3038
  %34 = trunc i64 %bf.load50 to i32, !dbg !3038
  %bf.cast52 = and i32 %34, 65535, !dbg !3038
  store i32 %bf.cast52, i32* %opcode53, align 8, !dbg !3039
  %trunc = trunc i64 %bf.load50 to i16, !dbg !3040
  switch i16 %trunc, label %sw.default [
    i16 48, label %sw.epilog
    i16 47, label %sw.epilog
    i16 49, label %sw.bb55
    i16 42, label %sw.bb60
    i16 41, label %sw.bb69
    i16 46, label %sw.bb110
    i16 45, label %sw.bb110
    i16 28, label %sw.bb119
    i16 23, label %sw.bb119
    i16 26, label %sw.bb119
    i16 27, label %sw.bb119
    i16 24, label %sw.bb119
    i16 51, label %sw.bb119
    i16 32, label %sw.bb119
    i16 34, label %sw.bb119
    i16 33, label %sw.bb119
    i16 36, label %sw.bb119
    i16 141, label %sw.bb119
    i16 121, label %sw.bb121
    i16 44, label %sw.epilog
    i16 43, label %sw.epilog
    i16 118, label %sw.epilog
  ], !dbg !3040

sw.bb55:                                          ; preds = %while.body
  %operands57 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3041
  %arrayidx58 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands57, i64 1, !dbg !3041
  %35 = bitcast %union.tree_node** %arrayidx58 to i64*, !dbg !3041
  %36 = load i64, i64* %35, align 8, !dbg !3041
  store i64 %36, i64* %3, align 8, !dbg !3042
  br label %sw.epilog, !dbg !3043

sw.bb60:                                          ; preds = %while.body
  %operands62 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3044
  %arrayidx63 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands62, i64 1, !dbg !3044
  %37 = bitcast %union.tree_node** %arrayidx63 to i64*, !dbg !3044
  %38 = load i64, i64* %37, align 8, !dbg !3044
  store i64 %38, i64* %3, align 8, !dbg !3045
  %arrayidx67 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands62, i64 2, !dbg !3046
  %39 = bitcast %union.tree_node** %arrayidx67 to i64*, !dbg !3046
  %40 = load i64, i64* %39, align 8, !dbg !3046
  store i64 %40, i64* %4, align 8, !dbg !3047
  br label %sw.epilog, !dbg !3048

sw.bb69:                                          ; preds = %while.body
  store %union.tree_node* null, %union.tree_node** %type48, align 8, !dbg !3049
  %operands72 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3050
  %arrayidx73 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands72, i64 1, !dbg !3050
  %41 = bitcast %union.tree_node** %arrayidx73 to i64*, !dbg !3050
  %42 = load i64, i64* %41, align 8, !dbg !3050
  store i64 %42, i64* %3, align 8, !dbg !3051
  %arrayidx77 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands72, i64 2, !dbg !3052
  %43 = bitcast %union.tree_node** %arrayidx77 to i64*, !dbg !3052
  %44 = load i64, i64* %43, align 8, !dbg !3052
  store i64 %44, i64* %4, align 8, !dbg !3053
  %45 = load i8, i8* @may_insert, align 1, !dbg !3054
  %tobool79 = icmp eq i8 %45, 0, !dbg !3054
  %46 = inttoptr i64 %42 to %struct.tree_decl_minimal*, !dbg !3055
  %47 = inttoptr i64 %42 to %struct.tree_field_decl*, !dbg !3055
  br i1 %tobool79, label %sw.epilog, label %land.lhs.true, !dbg !3055

land.lhs.true:                                    ; preds = %sw.bb69
  %cmp81 = icmp eq i64 %44, 0, !dbg !3056
  br i1 %cmp81, label %land.lhs.true83, label %sw.epilog, !dbg !3057

land.lhs.true83:                                  ; preds = %land.lhs.true
  %context = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %46, i64 0, i32 4, !dbg !3058
  %48 = bitcast %union.tree_node** %context to i64**, !dbg !3058
  %49 = load i64*, i64** %48, align 8, !dbg !3058
  %bf.load86 = load i64, i64* %49, align 8, !dbg !3058
  %bf.cast883 = and i64 %bf.load86, 65535, !dbg !3059
  %cmp89 = icmp eq i64 %bf.cast883, 17, !dbg !3059
  br i1 %cmp89, label %land.lhs.true91, label %sw.epilog, !dbg !3060

land.lhs.true91:                                  ; preds = %land.lhs.true83
  %offset = getelementptr inbounds %struct.tree_field_decl, %struct.tree_field_decl* %47, i64 0, i32 1, !dbg !3061
  %50 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !3061
  %call93 = call i32 @integer_zerop(%union.tree_node* %50) #6, !dbg !3062
  %tobool94 = icmp eq i32 %call93, 0, !dbg !3062
  br i1 %tobool94, label %sw.epilog, label %land.lhs.true95, !dbg !3063

land.lhs.true95:                                  ; preds = %land.lhs.true91
  %51 = load %struct.tree_field_decl*, %struct.tree_field_decl** %5, align 8, !dbg !3064
  %bit_offset = getelementptr inbounds %struct.tree_field_decl, %struct.tree_field_decl* %51, i64 0, i32 4, !dbg !3064
  %52 = load %union.tree_node*, %union.tree_node** %bit_offset, align 8, !dbg !3064
  %call98 = call i32 @integer_zerop(%union.tree_node* %52) #6, !dbg !3065
  %tobool99 = icmp eq i32 %call98, 0, !dbg !3065
  br i1 %tobool99, label %sw.epilog, label %land.lhs.true100, !dbg !3066

land.lhs.true100:                                 ; preds = %land.lhs.true95
  %53 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !3067
  %size = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %53, i64 0, i32 1, !dbg !3067
  %54 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !3067
  %call102 = call i32 @host_integerp(%union.tree_node* %54, i32 0) #6, !dbg !3068
  %tobool103 = icmp eq i32 %call102, 0, !dbg !3068
  br i1 %tobool103, label %sw.epilog, label %if.then104, !dbg !3069

if.then104:                                       ; preds = %land.lhs.true100
  %55 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !3070
  %size107 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %55, i64 0, i32 1, !dbg !3070
  %56 = bitcast %union.tree_node** %size107 to i64*, !dbg !3070
  %57 = load i64, i64* %56, align 8, !dbg !3070
  store i64 %57, i64* %3, align 8, !dbg !3071
  br label %sw.epilog, !dbg !3072

sw.bb110:                                         ; preds = %while.body, %while.body
  %operands112 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3073
  %arrayidx113 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands112, i64 1, !dbg !3073
  %58 = bitcast %union.tree_node** %arrayidx113 to i64*, !dbg !3073
  %59 = load i64, i64* %58, align 8, !dbg !3073
  store i64 %59, i64* %3, align 8, !dbg !3074
  %call115 = call %union.tree_node* @array_ref_low_bound(%union.tree_node* nonnull %ref.addr.0) #6, !dbg !3075
  store %union.tree_node* %call115, %union.tree_node** %op1116, align 8, !dbg !3076
  %call117 = call %union.tree_node* @array_ref_element_size(%union.tree_node* nonnull %ref.addr.0) #6, !dbg !3077
  store %union.tree_node* %call117, %union.tree_node** %op2118, align 8, !dbg !3078
  br label %sw.epilog, !dbg !3079

sw.bb119:                                         ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  store %union.tree_node* %ref.addr.0, %union.tree_node** %op0125, align 8, !dbg !3080
  br label %sw.epilog, !dbg !3081

sw.bb121:                                         ; preds = %while.body
  %call122 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %ref.addr.0) #6, !dbg !3082
  %tobool123 = icmp eq i8 %call122, 0, !dbg !3082
  br i1 %tobool123, label %sw.epilog, label %if.then124, !dbg !3083

if.then124:                                       ; preds = %sw.bb121
  store %union.tree_node* %ref.addr.0, %union.tree_node** %op0125, align 8, !dbg !3084
  br label %sw.epilog, !dbg !3085

sw.default:                                       ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 601, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3086
  br label %sw.epilog, !dbg !3087

sw.epilog:                                        ; preds = %land.lhs.true100, %land.lhs.true95, %land.lhs.true91, %sw.bb69, %sw.bb121, %while.body, %while.body, %while.body, %land.lhs.true, %land.lhs.true83, %if.then104, %while.body, %while.body, %sw.default, %if.then124, %sw.bb119, %sw.bb110, %sw.bb60, %sw.bb55
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %temp42, metadata !2983, metadata !DIExpression(DW_OP_deref)), !dbg !2989
  %call128 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_push(%struct.VEC_vn_reference_op_s_heap** %result, %struct.vn_reference_op_struct* nonnull %temp42) #7, !dbg !3088
  %bf.load130 = load i64, i64* %33, align 8, !dbg !3089
  %bf.cast132 = and i64 %bf.load130, 65535, !dbg !3089
  %arrayidx133 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast132, !dbg !3089
  %60 = load i32, i32* %arrayidx133, align 4, !dbg !3089
  %cmp134 = icmp eq i32 %60, 4, !dbg !3089
  br i1 %cmp134, label %if.then145, label %lor.lhs.false, !dbg !3091

lor.lhs.false:                                    ; preds = %sw.epilog
  %cmp140 = icmp eq i64 %bf.cast132, 121, !dbg !3092
  br i1 %cmp140, label %land.lhs.true142, label %if.end149, !dbg !3093

land.lhs.true142:                                 ; preds = %lor.lhs.false
  %call143 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %ref.addr.0) #6, !dbg !3094
  %tobool144 = icmp eq i8 %call143, 0, !dbg !3094
  br i1 %tobool144, label %if.then145, label %if.end149, !dbg !3095

if.then145:                                       ; preds = %land.lhs.true142, %sw.epilog
  %operands147 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3096
  %61 = load %union.tree_node*, %union.tree_node** %operands147, align 8, !dbg !3096
  call void @llvm.dbg.value(metadata %union.tree_node* %61, metadata !2977, metadata !DIExpression()), !dbg !2985
  br label %if.end149, !dbg !3097

if.end149:                                        ; preds = %land.lhs.true142, %lor.lhs.false, %if.then145
  %ref.addr.1 = phi %union.tree_node* [ %61, %if.then145 ], [ null, %land.lhs.true142 ], [ null, %lor.lhs.false ], !dbg !3098
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.addr.1, metadata !2977, metadata !DIExpression()), !dbg !2985
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !3099
  br label %while.cond, !dbg !2997, !llvm.loop !3100

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end, !dbg !3101

while.end:                                        ; preds = %while.end.loopexit, %if.end
  ret void, !dbg !3101
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_push(%struct.VEC_vn_reference_op_s_heap** %vec_, %struct.vn_reference_op_struct* %obj_) unnamed_addr #0 !dbg !3102 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %vec_, metadata !3106, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %obj_, metadata !3107, metadata !DIExpression()), !dbg !3108
  %call = tail call fastcc i32 @VEC_vn_reference_op_s_heap_reserve(%struct.VEC_vn_reference_op_s_heap** %vec_, i32 1) #7, !dbg !3109
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !3109
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !3109
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3109

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !3109
  br label %cond.end, !dbg !3109

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3109
  %call1 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_quick_push(%struct.VEC_vn_reference_op_s_base* %cond, %struct.vn_reference_op_struct* %obj_) #7, !dbg !3109
  ret %struct.vn_reference_op_struct* %call1, !dbg !3109
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @array_ref_element_size(%union.tree_node*) local_unnamed_addr #1

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ao_ref_init_from_vn_reference(%struct.ao_ref_s* %ref, i32 %set, %union.tree_node* %type, %struct.VEC_vn_reference_op_s_heap* %ops) local_unnamed_addr #4 !dbg !3110 {
entry:
  %op = alloca %struct.vn_reference_op_struct*, align 8
  %base = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !3125, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %set, metadata !3126, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3127, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %ops, metadata !3128, metadata !DIExpression()), !dbg !3150
  %0 = bitcast %struct.vn_reference_op_struct** %op to i8*, !dbg !3151
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3151
  %1 = bitcast %union.tree_node** %base to i8*, !dbg !3152
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3152
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3131, metadata !DIExpression()), !dbg !3150
  store %union.tree_node* null, %union.tree_node** %base, align 8, !dbg !3153
  call void @llvm.dbg.value(metadata %union.tree_node** %base, metadata !3132, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 0, metadata !3133, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 -1, metadata !3135, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3136, metadata !DIExpression()), !dbg !3150
  %base1 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %ops, i64 0, i32 0, !dbg !3154
  %call = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base1, i32 0) #7, !dbg !3154
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3129, metadata !DIExpression()), !dbg !3150
  store %struct.vn_reference_op_struct* %call, %struct.vn_reference_op_struct** %op, align 8, !dbg !3155
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3129, metadata !DIExpression()), !dbg !3150
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 0, !dbg !3156
  %2 = load i32, i32* %opcode, align 8, !dbg !3156
  %cmp = icmp eq i32 %2, 41, !dbg !3157
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3129, metadata !DIExpression()), !dbg !3150
  br i1 %cmp, label %if.then, label %if.else8, !dbg !3158

if.then:                                          ; preds = %entry
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !3159
  %3 = bitcast %union.tree_node** %op0 to i64**, !dbg !3159
  %4 = load i64*, i64** %3, align 8, !dbg !3159
  %bf.load = load i64, i64* %4, align 8, !dbg !3159
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !3162
  %cmp3 = icmp eq i64 %bf.cast3, 23, !dbg !3162
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3129, metadata !DIExpression()), !dbg !3150
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !3163
  br i1 %cmp3, label %if.end38, label %if.else, !dbg !3164

if.else:                                          ; preds = %if.then
  %size7 = getelementptr inbounds i64, i64* %4, i64 6, !dbg !3165
  %6 = bitcast i64* %size7 to %union.tree_node**, !dbg !3165
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !3165
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3136, metadata !DIExpression()), !dbg !3150
  br label %if.end38

if.else8:                                         ; preds = %entry
  %cmp10 = icmp eq i32 %2, 42, !dbg !3166
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !3167

if.then11:                                        ; preds = %if.else8
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op012 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !3168
  %8 = load %union.tree_node*, %union.tree_node** %op012, align 8, !dbg !3168
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3136, metadata !DIExpression()), !dbg !3150
  br label %if.end38, !dbg !3169

if.else13:                                        ; preds = %if.else8
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3170
  %bf.load15 = load i64, i64* %9, align 8, !dbg !3170
  %bf.cast171 = and i64 %bf.load15, 65535, !dbg !3170
  %cmp18 = icmp eq i64 %bf.cast171, 14, !dbg !3170
  br i1 %cmp18, label %cond.true19, label %cond.false21, !dbg !3170

cond.true19:                                      ; preds = %if.else13
  %call20 = tail call i32 @vector_type_mode(%union.tree_node* %type) #6, !dbg !3170
  br label %cond.end26, !dbg !3170

cond.false21:                                     ; preds = %if.else13
  %type22 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3170
  %mode23 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i64 0, i32 6, !dbg !3170
  %bf.load24 = load i32, i32* %mode23, align 4, !dbg !3170
  %bf.lshr = lshr i32 %bf.load24, 16, !dbg !3170
  %bf.clear25 = and i32 %bf.lshr, 255, !dbg !3170
  br label %cond.end26, !dbg !3170

cond.end26:                                       ; preds = %cond.false21, %cond.true19
  %cond27 = phi i32 [ %call20, %cond.true19 ], [ %bf.clear25, %cond.false21 ], !dbg !3170
  call void @llvm.dbg.value(metadata i32 %cond27, metadata !3137, metadata !DIExpression()), !dbg !3171
  %cmp28 = icmp eq i32 %cond27, 1, !dbg !3172
  br i1 %cmp28, label %if.then29, label %if.else32, !dbg !3174

if.then29:                                        ; preds = %cond.end26
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3175
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !3175
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3136, metadata !DIExpression()), !dbg !3150
  br label %if.end38, !dbg !3176

if.else32:                                        ; preds = %cond.end26
  %idxprom = zext i32 %cond27 to i64, !dbg !3177
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3177
  %12 = load i8, i8* %arrayidx, align 1, !dbg !3177
  %conv33 = zext i8 %12 to i64, !dbg !3177
  %mul = shl nuw nsw i64 %conv33, 3, !dbg !3177
  call void @llvm.dbg.value(metadata i64 %mul, metadata !3135, metadata !DIExpression()), !dbg !3150
  br label %if.end38

if.end38:                                         ; preds = %if.then11, %if.else32, %if.then29, %if.else, %if.then
  %size.2 = phi i64 [ -1, %if.then ], [ -1, %if.else ], [ -1, %if.then11 ], [ -1, %if.then29 ], [ %mul, %if.else32 ], !dbg !3178
  %size_tree.3 = phi %union.tree_node* [ %5, %if.then ], [ %7, %if.else ], [ %8, %if.then11 ], [ %11, %if.then29 ], [ null, %if.else32 ], !dbg !3179
  call void @llvm.dbg.value(metadata %union.tree_node* %size_tree.3, metadata !3136, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %size.2, metadata !3135, metadata !DIExpression()), !dbg !3150
  %cmp39 = icmp eq %union.tree_node* %size_tree.3, null, !dbg !3180
  br i1 %cmp39, label %if.end48, label %if.then41, !dbg !3182

if.then41:                                        ; preds = %if.end38
  %call42 = tail call i32 @host_integerp(%union.tree_node* nonnull %size_tree.3, i32 1) #6, !dbg !3183
  %tobool43 = icmp eq i32 %call42, 0, !dbg !3183
  br i1 %tobool43, label %if.end48, label %if.else45, !dbg !3186

if.else45:                                        ; preds = %if.then41
  %int_cst46 = getelementptr inbounds %union.tree_node, %union.tree_node* %size_tree.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3187
  %low = bitcast i32* %int_cst46 to i64*, !dbg !3187
  %13 = load i64, i64* %low, align 8, !dbg !3187
  call void @llvm.dbg.value(metadata i64 %13, metadata !3135, metadata !DIExpression()), !dbg !3150
  br label %if.end48

if.end48:                                         ; preds = %if.then41, %if.end38, %if.else45
  %size.4 = phi i64 [ %size.2, %if.end38 ], [ %13, %if.else45 ], [ -1, %if.then41 ], !dbg !3150
  call void @llvm.dbg.value(metadata i64 %size.4, metadata !3135, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %size.4, metadata !3134, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 0, metadata !3130, metadata !DIExpression()), !dbg !3150
  br label %for.cond, !dbg !3188

for.cond:                                         ; preds = %for.inc, %if.end48
  %offset.0 = phi i64 [ 0, %if.end48 ], [ %offset.4, %for.inc ], !dbg !3150
  %op0_p.0 = phi %union.tree_node** [ %base, %if.end48 ], [ %op0_p.1, %for.inc ], !dbg !3189
  %i.0 = phi i32 [ 0, %if.end48 ], [ %inc, %for.inc ], !dbg !3190
  %max_size.0 = phi i64 [ %size.4, %if.end48 ], [ %max_size.4, %for.inc ], !dbg !3191
  call void @llvm.dbg.value(metadata i64 %max_size.0, metadata !3134, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3130, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata %union.tree_node** %op0_p.0, metadata !3132, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %offset.0, metadata !3133, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %op, metadata !3129, metadata !DIExpression(DW_OP_deref)), !dbg !3150
  %call55 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %base1, i32 %i.0, %struct.vn_reference_op_struct** nonnull %op) #7, !dbg !3192
  %tobool56 = icmp eq i32 %call55, 0, !dbg !3193
  br i1 %tobool56, label %for.end, label %for.body, !dbg !3193

for.body:                                         ; preds = %for.cond
  %14 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !3194
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %opcode57 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 0, !dbg !3195
  %15 = load i32, i32* %opcode57, align 8, !dbg !3195
  switch i32 %15, label %cleanup.loopexit [
    i32 118, label %for.inc
    i32 44, label %sw.bb134
    i32 48, label %sw.bb58
    i32 47, label %sw.bb58
    i32 49, label %sw.bb63
    i32 32, label %sw.bb70
    i32 34, label %sw.bb70
    i32 36, label %sw.bb70
    i32 141, label %sw.bb70
    i32 42, label %sw.bb72
    i32 41, label %sw.bb74
    i32 46, label %sw.bb105
    i32 45, label %sw.bb105
    i32 43, label %for.inc
  ], !dbg !3196

sw.bb58:                                          ; preds = %for.body, %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %type60 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 1, !dbg !3197
  %16 = load %union.tree_node*, %union.tree_node** %type60, align 8, !dbg !3197
  %call61 = call %union.tree_node* @build1_stat(i32 %15, %union.tree_node* %16, %union.tree_node* null) #6, !dbg !3197
  store %union.tree_node* %call61, %union.tree_node** %op0_p.0, align 8, !dbg !3198
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3199
  call void @llvm.dbg.value(metadata %union.tree_node** %operands, metadata !3132, metadata !DIExpression()), !dbg !3150
  br label %for.inc, !dbg !3200

sw.bb63:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %type64 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 1, !dbg !3201
  %17 = load %union.tree_node*, %union.tree_node** %type64, align 8, !dbg !3201
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op065 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 2, !dbg !3201
  %18 = load %union.tree_node*, %union.tree_node** %op065, align 8, !dbg !3201
  %call66 = call %union.tree_node* @build2_stat(i32 49, %union.tree_node* %17, %union.tree_node* null, %union.tree_node* %18) #6, !dbg !3201
  store %union.tree_node* %call66, %union.tree_node** %op0_p.0, align 8, !dbg !3202
  %operands68 = getelementptr inbounds %union.tree_node, %union.tree_node* %call66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3203
  call void @llvm.dbg.value(metadata %union.tree_node** %operands68, metadata !3132, metadata !DIExpression()), !dbg !3150
  br label %for.inc, !dbg !3204

sw.bb70:                                          ; preds = %for.body, %for.body, %for.body, %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op071 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 2, !dbg !3205
  %19 = bitcast %union.tree_node** %op071 to i64*, !dbg !3205
  %20 = load i64, i64* %19, align 8, !dbg !3205
  %21 = bitcast %union.tree_node** %op0_p.0 to i64*, !dbg !3206
  store i64 %20, i64* %21, align 8, !dbg !3206
  br label %for.inc, !dbg !3207

sw.bb72:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 3, !dbg !3208
  %22 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !3208
  %call73 = call i64 @tree_low_cst(%union.tree_node* %22, i32 0) #6, !dbg !3209
  %add = add nsw i64 %offset.0, %call73, !dbg !3210
  call void @llvm.dbg.value(metadata i64 %add, metadata !3133, metadata !DIExpression()), !dbg !3150
  br label %for.inc, !dbg !3211

sw.bb74:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op075 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 2, !dbg !3212
  %23 = load %union.tree_node*, %union.tree_node** %op075, align 8, !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !3141, metadata !DIExpression()), !dbg !3213
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3214
  %bf.load77 = load i64, i64* %24, align 8, !dbg !3214
  %bf.cast792 = and i64 %bf.load77, 65535, !dbg !3216
  %cmp80 = icmp eq i64 %bf.cast792, 23, !dbg !3216
  br i1 %cmp80, label %for.inc, label %if.else83, !dbg !3217

if.else83:                                        ; preds = %sw.bb74
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op184 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 3, !dbg !3218
  %25 = load %union.tree_node*, %union.tree_node** %op184, align 8, !dbg !3218
  %tobool85 = icmp eq %union.tree_node* %25, null, !dbg !3220
  br i1 %tobool85, label %lor.lhs.false, label %for.inc, !dbg !3221

lor.lhs.false:                                    ; preds = %if.else83
  %offset86 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3222
  %26 = bitcast %struct.rtx_def** %offset86 to %union.tree_node**, !dbg !3222
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !3222
  %call87 = call i32 @host_integerp(%union.tree_node* %27, i32 1) #6, !dbg !3223
  %tobool88 = icmp eq i32 %call87, 0, !dbg !3223
  br i1 %tobool88, label %for.inc, label %if.else90, !dbg !3224

if.else90:                                        ; preds = %lor.lhs.false
  %28 = bitcast %struct.rtx_def** %offset86 to %struct.tree_int_cst**, !dbg !3225
  %29 = load %struct.tree_int_cst*, %struct.tree_int_cst** %28, align 8, !dbg !3225
  %low95 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %29, i64 0, i32 1, i32 0, !dbg !3225
  %30 = load i64, i64* %low95, align 8, !dbg !3225
  %mul96 = shl i64 %30, 3, !dbg !3227
  %add97 = add i64 %offset.0, %mul96, !dbg !3228
  call void @llvm.dbg.value(metadata i64 %add97, metadata !3133, metadata !DIExpression()), !dbg !3150
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3229
  %32 = bitcast %union.tree_node** %31 to %struct.tree_int_cst**, !dbg !3229
  %33 = load %struct.tree_int_cst*, %struct.tree_int_cst** %32, align 8, !dbg !3229
  %low101 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %33, i64 0, i32 1, i32 0, !dbg !3229
  %34 = load i64, i64* %low101, align 8, !dbg !3229
  %add102 = add i64 %add97, %34, !dbg !3230
  call void @llvm.dbg.value(metadata i64 %add102, metadata !3133, metadata !DIExpression()), !dbg !3150
  br label %for.inc

sw.bb105:                                         ; preds = %for.body, %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %14, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op0106 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %14, i64 0, i32 2, !dbg !3231
  %35 = load %union.tree_node*, %union.tree_node** %op0106, align 8, !dbg !3231
  %call107 = call i32 @host_integerp(%union.tree_node* %35, i32 0) #6, !dbg !3232
  %tobool108 = icmp eq i32 %call107, 0, !dbg !3232
  br i1 %tobool108, label %for.inc, label %lor.lhs.false109, !dbg !3233

lor.lhs.false109:                                 ; preds = %sw.bb105
  %36 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !3234
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %36, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op1110 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %36, i64 0, i32 3, !dbg !3235
  %37 = load %union.tree_node*, %union.tree_node** %op1110, align 8, !dbg !3235
  %call111 = call i32 @host_integerp(%union.tree_node* %37, i32 0) #6, !dbg !3236
  %tobool112 = icmp eq i32 %call111, 0, !dbg !3236
  br i1 %tobool112, label %for.inc, label %lor.lhs.false113, !dbg !3237

lor.lhs.false113:                                 ; preds = %lor.lhs.false109
  %38 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !3238
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %38, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %38, i64 0, i32 4, !dbg !3239
  %39 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !3239
  %call114 = call i32 @host_integerp(%union.tree_node* %39, i32 0) #6, !dbg !3240
  %tobool115 = icmp eq i32 %call114, 0, !dbg !3240
  br i1 %tobool115, label %for.inc, label %if.else117, !dbg !3241

if.else117:                                       ; preds = %lor.lhs.false113
  %40 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !3242
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %40, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op0118 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %40, i64 0, i32 2, !dbg !3242
  %41 = bitcast %union.tree_node** %op0118 to %struct.tree_int_cst**, !dbg !3242
  %42 = load %struct.tree_int_cst*, %struct.tree_int_cst** %41, align 8, !dbg !3242
  %low121 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %42, i64 0, i32 1, i32 0, !dbg !3242
  %43 = load i64, i64* %low121, align 8, !dbg !3242
  call void @llvm.dbg.value(metadata i64 %43, metadata !3147, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %40, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op1122 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %40, i64 0, i32 3, !dbg !3244
  %44 = bitcast %union.tree_node** %op1122 to %struct.tree_int_cst**, !dbg !3244
  %45 = load %struct.tree_int_cst*, %struct.tree_int_cst** %44, align 8, !dbg !3244
  %low125 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %45, i64 0, i32 1, i32 0, !dbg !3244
  %46 = load i64, i64* %low125, align 8, !dbg !3244
  %sub = sub i64 %43, %46, !dbg !3245
  call void @llvm.dbg.value(metadata i64 %sub, metadata !3147, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %40, metadata !3129, metadata !DIExpression()), !dbg !3150
  %op2126 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %40, i64 0, i32 4, !dbg !3246
  %47 = bitcast %union.tree_node** %op2126 to %struct.tree_int_cst**, !dbg !3246
  %48 = load %struct.tree_int_cst*, %struct.tree_int_cst** %47, align 8, !dbg !3246
  %low129 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %48, i64 0, i32 1, i32 0, !dbg !3246
  %49 = load i64, i64* %low129, align 8, !dbg !3246
  %mul130 = mul i64 %sub, %49, !dbg !3247
  call void @llvm.dbg.value(metadata i64 %mul130, metadata !3147, metadata !DIExpression()), !dbg !3243
  %mul131 = shl nsw i64 %mul130, 3, !dbg !3248
  call void @llvm.dbg.value(metadata i64 %mul131, metadata !3147, metadata !DIExpression()), !dbg !3243
  %add132 = add nsw i64 %offset.0, %mul131, !dbg !3249
  call void @llvm.dbg.value(metadata i64 %add132, metadata !3133, metadata !DIExpression()), !dbg !3150
  br label %for.inc

sw.bb134:                                         ; preds = %for.body
  %add135 = add nsw i64 %offset.0, %size.4, !dbg !3250
  call void @llvm.dbg.value(metadata i64 %add135, metadata !3133, metadata !DIExpression()), !dbg !3150
  br label %for.inc, !dbg !3251

for.inc:                                          ; preds = %lor.lhs.false, %if.else83, %lor.lhs.false113, %lor.lhs.false109, %sw.bb105, %for.body, %sw.bb58, %sw.bb63, %sw.bb70, %sw.bb72, %for.body, %sw.bb134, %if.else90, %sw.bb74, %if.else117
  %offset.4 = phi i64 [ %add135, %sw.bb134 ], [ %offset.0, %for.body ], [ %offset.0, %for.body ], [ %add, %sw.bb72 ], [ %offset.0, %sw.bb70 ], [ %offset.0, %sw.bb63 ], [ %offset.0, %sw.bb58 ], [ %offset.0, %sw.bb74 ], [ %add102, %if.else90 ], [ %offset.0, %lor.lhs.false ], [ %offset.0, %if.else83 ], [ %add132, %if.else117 ], [ %offset.0, %lor.lhs.false113 ], [ %offset.0, %lor.lhs.false109 ], [ %offset.0, %sw.bb105 ], !dbg !3150
  %op0_p.1 = phi %union.tree_node** [ %op0_p.0, %sw.bb134 ], [ %op0_p.0, %for.body ], [ %op0_p.0, %for.body ], [ %op0_p.0, %sw.bb72 ], [ %op0_p.0, %sw.bb70 ], [ %operands68, %sw.bb63 ], [ %operands, %sw.bb58 ], [ %op0_p.0, %sw.bb74 ], [ %op0_p.0, %if.else90 ], [ %op0_p.0, %lor.lhs.false ], [ %op0_p.0, %if.else83 ], [ %op0_p.0, %if.else117 ], [ %op0_p.0, %lor.lhs.false113 ], [ %op0_p.0, %lor.lhs.false109 ], [ %op0_p.0, %sw.bb105 ], !dbg !3150
  %max_size.4 = phi i64 [ %max_size.0, %sw.bb134 ], [ %max_size.0, %for.body ], [ %max_size.0, %for.body ], [ %max_size.0, %sw.bb72 ], [ %max_size.0, %sw.bb70 ], [ %max_size.0, %sw.bb63 ], [ %max_size.0, %sw.bb58 ], [ %max_size.0, %sw.bb74 ], [ %max_size.0, %if.else90 ], [ -1, %lor.lhs.false ], [ -1, %if.else83 ], [ %max_size.0, %if.else117 ], [ -1, %lor.lhs.false113 ], [ -1, %lor.lhs.false109 ], [ -1, %sw.bb105 ], !dbg !3191
  call void @llvm.dbg.value(metadata i64 %max_size.4, metadata !3134, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata %union.tree_node** %op0_p.1, metadata !3132, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %offset.4, metadata !3133, metadata !DIExpression()), !dbg !3150
  %inc = add i32 %i.0, 1, !dbg !3252
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3130, metadata !DIExpression()), !dbg !3150
  br label %for.cond, !dbg !3253, !llvm.loop !3254

for.end:                                          ; preds = %for.cond
  %offset.0.lcssa = phi i64 [ %offset.0, %for.cond ], !dbg !3150
  %max_size.0.lcssa = phi i64 [ %max_size.0, %for.cond ], !dbg !3191
  call void @llvm.dbg.value(metadata i64 %offset.0.lcssa, metadata !3133, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %max_size.0.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %offset.0.lcssa, metadata !3133, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %max_size.0.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %offset.0.lcssa, metadata !3133, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i64 %max_size.0.lcssa, metadata !3134, metadata !DIExpression()), !dbg !3150
  %50 = load %union.tree_node*, %union.tree_node** %base, align 8, !dbg !3256
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !3131, metadata !DIExpression()), !dbg !3150
  %cmp137 = icmp eq %union.tree_node* %50, null, !dbg !3258
  br i1 %cmp137, label %cleanup, label %if.end140, !dbg !3259

if.end140:                                        ; preds = %for.end
  %51 = ptrtoint %union.tree_node* %50 to i64, !dbg !3259
  %ref141 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 0, !dbg !3260
  store %union.tree_node* null, %union.tree_node** %ref141, align 8, !dbg !3261
  %base142 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 1, !dbg !3262
  %52 = bitcast %union.tree_node** %base142 to i64*, !dbg !3263
  store i64 %51, i64* %52, align 8, !dbg !3263
  %offset143 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 2, !dbg !3264
  store i64 %offset.0.lcssa, i64* %offset143, align 8, !dbg !3265
  %size144 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 3, !dbg !3266
  store i64 %size.4, i64* %size144, align 8, !dbg !3267
  %max_size145 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 4, !dbg !3268
  store i64 %max_size.0.lcssa, i64* %max_size145, align 8, !dbg !3269
  %ref_alias_set = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 5, !dbg !3270
  store i32 %set, i32* %ref_alias_set, align 8, !dbg !3271
  %base_alias_set = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 6, !dbg !3272
  store i32 -1, i32* %base_alias_set, align 4, !dbg !3273
  br label %cleanup, !dbg !3274

cleanup.loopexit:                                 ; preds = %for.body
  br label %cleanup, !dbg !3275

cleanup:                                          ; preds = %cleanup.loopexit, %for.end, %if.end140
  %retval.0 = phi i8 [ 1, %if.end140 ], [ 0, %for.end ], [ 0, %cleanup.loopexit ], !dbg !3150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3275
  ret i8 %retval.0, !dbg !3275
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @copy_reference_ops_from_call(%union.gimple_statement_d* %call, %struct.VEC_vn_reference_op_s_heap** %result) local_unnamed_addr #4 !dbg !3276 {
entry:
  %temp = alloca %struct.vn_reference_op_struct, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3280, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %result, metadata !3281, metadata !DIExpression()), !dbg !3288
  %0 = bitcast %struct.vn_reference_op_struct* %temp to i8*, !dbg !3289
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !3289
  %call1 = call i8* @memset(i8* nonnull %0, i32 0, i64 40) #6, !dbg !3290
  %call2 = call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %call) #7, !dbg !3291
  %type = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 1, !dbg !3292
  store %union.tree_node* %call2, %union.tree_node** %type, align 8, !dbg !3293
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 0, !dbg !3294
  store i32 59, i32* %opcode, align 8, !dbg !3295
  %call3 = call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call) #7, !dbg !3296
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 2, !dbg !3297
  store %union.tree_node* %call3, %union.tree_node** %op0, align 8, !dbg !3298
  %call4 = call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %call) #7, !dbg !3299
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %temp, i64 0, i32 3, !dbg !3300
  store %union.tree_node* %call4, %union.tree_node** %op1, align 8, !dbg !3301
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %temp, metadata !3282, metadata !DIExpression(DW_OP_deref)), !dbg !3288
  %call5 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_push(%struct.VEC_vn_reference_op_s_heap** %result, %struct.vn_reference_op_struct* nonnull %temp) #7, !dbg !3302
  call void @llvm.dbg.value(metadata i32 0, metadata !3283, metadata !DIExpression()), !dbg !3288
  br label %for.cond, !dbg !3303

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3304
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3283, metadata !DIExpression()), !dbg !3288
  %call6 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #7, !dbg !3305
  %cmp = icmp ult i32 %i.0, %call6, !dbg !3306
  br i1 %cmp, label %for.body, label %for.end, !dbg !3307

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %i.0) #7, !dbg !3308
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3284, metadata !DIExpression()), !dbg !3309
  call void @copy_reference_ops_from_ref(%union.tree_node* %call7, %struct.VEC_vn_reference_op_s_heap** %result) #7, !dbg !3310
  %inc = add i32 %i.0, 1, !dbg !3311
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3283, metadata !DIExpression()), !dbg !3288
  br label %for.cond, !dbg !3312, !llvm.loop !3313

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !3315
  ret void, !dbg !3315
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3316 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3318, metadata !DIExpression()), !dbg !3321
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !3322
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3319, metadata !DIExpression()), !dbg !3321
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3323
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !3323
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3323
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !3324
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !3324
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !3324
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !3325
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !3325
  ret %union.tree_node* %4, !dbg !3326
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3327 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3329, metadata !DIExpression()), !dbg !3330
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !3331
  ret %union.tree_node* %call, !dbg !3332
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3333 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3335, metadata !DIExpression()), !dbg !3336
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !3337
  ret %union.tree_node* %call, !dbg !3338
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3339 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3343, metadata !DIExpression()), !dbg !3345
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %call, metadata !3344, metadata !DIExpression()), !dbg !3345
  %sub = add i32 %call, -3, !dbg !3347
  ret i32 %sub, !dbg !3348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3349 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3353, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.value(metadata i32 %index, metadata !3354, metadata !DIExpression()), !dbg !3355
  %add = add i32 %index, 3, !dbg !3356
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !3357
  ret %union.tree_node* %call, !dbg !3358
}

; Function Attrs: nounwind uwtable
define dso_local void @vn_reference_fold_indirect(%struct.VEC_vn_reference_op_s_heap** %ops, i32* %i_p) local_unnamed_addr #4 !dbg !3359 {
entry:
  %mem = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  %op = alloca %struct.vn_reference_op_struct*, align 8
  %aref = alloca %struct.vn_reference_op_struct, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %ops, metadata !3364, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32* %i_p, metadata !3365, metadata !DIExpression()), !dbg !3374
  %0 = bitcast %struct.VEC_vn_reference_op_s_heap** %mem to i8*, !dbg !3375
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3375
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !3366, metadata !DIExpression()), !dbg !3374
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3376
  %1 = bitcast %struct.vn_reference_op_struct** %op to i8*, !dbg !3377
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3377
  %2 = load i32, i32* %i_p, align 4, !dbg !3378
  call void @llvm.dbg.value(metadata i32 %2, metadata !3368, metadata !DIExpression()), !dbg !3374
  %3 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !3379
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %3, null, !dbg !3379
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3379

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %3, i64 0, i32 0, !dbg !3379
  br label %cond.end, !dbg !3379

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3379
  %call = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %cond, i32 %2) #7, !dbg !3379
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3367, metadata !DIExpression()), !dbg !3374
  store %struct.vn_reference_op_struct* %call, %struct.vn_reference_op_struct** %op, align 8, !dbg !3380
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3367, metadata !DIExpression()), !dbg !3374
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call, i64 0, i32 2, !dbg !3381
  %4 = bitcast %union.tree_node** %op0 to %struct.tree_exp**, !dbg !3381
  %5 = load %struct.tree_exp*, %struct.tree_exp** %4, align 8, !dbg !3381
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %5, i64 0, i32 3, i64 0, !dbg !3381
  %6 = bitcast %union.tree_node** %arrayidx to %struct.tree_common**, !dbg !3381
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !3381
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !3381
  %8 = bitcast %union.tree_node** %type to i64**, !dbg !3381
  %9 = load i64*, i64** %8, align 8, !dbg !3381
  %bf.load = load i64, i64* %9, align 8, !dbg !3381
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3382
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !3382
  %10 = bitcast %struct.tree_common* %7 to %union.tree_node*, !dbg !3383
  br i1 %cmp, label %land.lhs.true, label %if.end43, !dbg !3383

land.lhs.true:                                    ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3367, metadata !DIExpression()), !dbg !3374
  %11 = bitcast %union.tree_node** %op0 to %struct.tree_common**, !dbg !3384
  %type4 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %5, i64 0, i32 0, i32 2, !dbg !3384
  %12 = bitcast %union.tree_node** %type4 to %struct.tree_common**, !dbg !3384
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !3384
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !3384
  %14 = bitcast %union.tree_node** %type6 to i64**, !dbg !3384
  %15 = load i64*, i64** %14, align 8, !dbg !3384
  %bf.load8 = load i64, i64* %15, align 8, !dbg !3384
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !3385
  %cmp11 = icmp eq i64 %bf.cast102, 15, !dbg !3385
  br i1 %cmp11, label %if.end43, label %if.then, !dbg !3386

if.then:                                          ; preds = %land.lhs.true
  %16 = bitcast %struct.vn_reference_op_struct* %aref to i8*, !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8, !dbg !3387
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3367, metadata !DIExpression()), !dbg !3374
  %main_variant = getelementptr inbounds i64, i64* %15, i64 16, !dbg !3388
  %17 = load i64, i64* %main_variant, align 8, !dbg !3388
  %type18 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %aref, i64 0, i32 1, !dbg !3389
  %18 = bitcast %union.tree_node** %type18 to i64*, !dbg !3390
  store i64 %17, i64* %18, align 8, !dbg !3390
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %aref, i64 0, i32 0, !dbg !3391
  store i32 45, i32* %opcode, align 8, !dbg !3392
  %19 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !3393
  %op019 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %aref, i64 0, i32 2, !dbg !3394
  %20 = bitcast %union.tree_node** %op019 to i64*, !dbg !3395
  store i64 %19, i64* %20, align 8, !dbg !3395
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3367, metadata !DIExpression()), !dbg !3374
  %21 = load %struct.tree_exp*, %struct.tree_exp** %4, align 8, !dbg !3396
  %arrayidx23 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %21, i64 0, i32 3, i64 0, !dbg !3396
  %22 = bitcast %union.tree_node** %arrayidx23 to %struct.tree_common**, !dbg !3396
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !3396
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !3396
  %24 = bitcast %union.tree_node** %type25 to %struct.tree_type**, !dbg !3396
  %25 = load %struct.tree_type*, %struct.tree_type** %24, align 8, !dbg !3396
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %25, i64 0, i32 1, !dbg !3396
  %26 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !3396
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !3373, metadata !DIExpression()), !dbg !3398
  %tobool27 = icmp eq %union.tree_node* %26, null, !dbg !3399
  br i1 %tobool27, label %if.end, label %land.lhs.true28, !dbg !3400

land.lhs.true28:                                  ; preds = %if.then
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3401
  %27 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !3401
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !3401
  %tobool30 = icmp eq %union.tree_node* %28, null, !dbg !3401
  %29 = ptrtoint %union.tree_node* %28 to i64, !dbg !3402
  br i1 %tobool30, label %if.end, label %if.then31, !dbg !3402

if.then31:                                        ; preds = %land.lhs.true28
  store i64 %29, i64* %20, align 8, !dbg !3403
  br label %if.end, !dbg !3404

if.end:                                           ; preds = %land.lhs.true28, %if.then, %if.then31
  %30 = phi i64 [ %19, %land.lhs.true28 ], [ %19, %if.then ], [ %29, %if.then31 ], !dbg !3405
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %aref, i64 0, i32 3, !dbg !3406
  %31 = bitcast %union.tree_node** %op1 to i64*, !dbg !3407
  store i64 %30, i64* %31, align 8, !dbg !3407
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %call, metadata !3367, metadata !DIExpression()), !dbg !3374
  %32 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !3408
  %type38 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %32, i64 0, i32 2, !dbg !3408
  %33 = bitcast %union.tree_node** %type38 to %struct.tree_common**, !dbg !3408
  %34 = load %struct.tree_common*, %struct.tree_common** %33, align 8, !dbg !3408
  %type40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %34, i64 0, i32 2, !dbg !3408
  %35 = bitcast %union.tree_node** %type40 to %struct.tree_type**, !dbg !3408
  %36 = load %struct.tree_type*, %struct.tree_type** %35, align 8, !dbg !3408
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %36, i64 0, i32 3, !dbg !3408
  %37 = bitcast %union.tree_node** %size_unit to i64*, !dbg !3408
  %38 = load i64, i64* %37, align 8, !dbg !3408
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %aref, i64 0, i32 4, !dbg !3409
  %39 = bitcast %union.tree_node** %op2 to i64*, !dbg !3410
  store i64 %38, i64* %39, align 8, !dbg !3410
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %mem, metadata !3366, metadata !DIExpression(DW_OP_deref)), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %aref, metadata !3370, metadata !DIExpression(DW_OP_deref)), !dbg !3398
  %call42 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_push(%struct.VEC_vn_reference_op_s_heap** nonnull %mem, %struct.vn_reference_op_struct* nonnull %aref) #7, !dbg !3411
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8, !dbg !3412
  %.pre = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !3413
  %op044.phi.trans.insert = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %.pre, i64 0, i32 2, !dbg !3374
  %.phi.trans.insert = bitcast %union.tree_node** %op044.phi.trans.insert to %struct.tree_exp**, !dbg !3374
  %.pre3 = load %struct.tree_exp*, %struct.tree_exp** %.phi.trans.insert, align 8, !dbg !3413
  %arrayidx47.phi.trans.insert = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %.pre3, i64 0, i32 3, i64 0, !dbg !3374
  %.pre4 = load %union.tree_node*, %union.tree_node** %arrayidx47.phi.trans.insert, align 8, !dbg !3413
  br label %if.end43, !dbg !3414

if.end43:                                         ; preds = %land.lhs.true, %if.end, %cond.end
  %40 = phi %union.tree_node* [ %10, %land.lhs.true ], [ %.pre4, %if.end ], [ %10, %cond.end ], !dbg !3413
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %mem, metadata !3366, metadata !DIExpression(DW_OP_deref)), !dbg !3374
  call void @copy_reference_ops_from_ref(%union.tree_node* %40, %struct.VEC_vn_reference_op_s_heap** nonnull %mem) #7, !dbg !3415
  %41 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3416
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %41, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %41, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base50 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %41, i64 0, i32 0, !dbg !3416
  %call54 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base50) #7, !dbg !3416
  %cmp55 = icmp eq i32 %call54, 1, !dbg !3418
  br i1 %cmp55, label %if.then56, label %if.else, !dbg !3419

if.then56:                                        ; preds = %if.end43
  %42 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !3420
  %tobool57 = icmp eq %struct.VEC_vn_reference_op_s_heap* %42, null, !dbg !3420
  br i1 %tobool57, label %cond.end61, label %cond.true58, !dbg !3420

cond.true58:                                      ; preds = %if.then56
  %base59 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %42, i64 0, i32 0, !dbg !3420
  br label %cond.end61, !dbg !3420

cond.end61:                                       ; preds = %if.then56, %cond.true58
  %cond62 = phi %struct.VEC_vn_reference_op_s_base* [ %base59, %cond.true58 ], [ null, %if.then56 ], !dbg !3420
  %sub = add i32 %2, -1, !dbg !3420
  %43 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3420
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %43, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %43, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base65 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %43, i64 0, i32 0, !dbg !3420
  %call69 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base65, i32 0) #7, !dbg !3420
  %call70 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %cond62, i32 %sub, %struct.vn_reference_op_struct* %call69) #7, !dbg !3420
  %44 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !3422
  %tobool71 = icmp eq %struct.VEC_vn_reference_op_s_heap* %44, null, !dbg !3422
  br i1 %tobool71, label %cond.end75, label %cond.true72, !dbg !3422

cond.true72:                                      ; preds = %cond.end61
  %base73 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %44, i64 0, i32 0, !dbg !3422
  br label %cond.end75, !dbg !3422

cond.end75:                                       ; preds = %cond.end61, %cond.true72
  %cond76 = phi %struct.VEC_vn_reference_op_s_base* [ %base73, %cond.true72 ], [ null, %cond.end61 ], !dbg !3422
  call fastcc void @VEC_vn_reference_op_s_base_ordered_remove(%struct.VEC_vn_reference_op_s_base* %cond76, i32 %2) #7, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3368, metadata !DIExpression()), !dbg !3374
  br label %if.end167, !dbg !3423

if.else:                                          ; preds = %if.end43
  %45 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3424
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %45, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %45, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base79 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %45, i64 0, i32 0, !dbg !3424
  %call83 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base79) #7, !dbg !3424
  %cmp84 = icmp eq i32 %call83, 2, !dbg !3426
  br i1 %cmp84, label %if.then85, label %if.else115, !dbg !3427

if.then85:                                        ; preds = %if.else
  %46 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !3428
  %tobool86 = icmp eq %struct.VEC_vn_reference_op_s_heap* %46, null, !dbg !3428
  br i1 %tobool86, label %cond.end90, label %cond.true87, !dbg !3428

cond.true87:                                      ; preds = %if.then85
  %base88 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %46, i64 0, i32 0, !dbg !3428
  br label %cond.end90, !dbg !3428

cond.end90:                                       ; preds = %if.then85, %cond.true87
  %cond91 = phi %struct.VEC_vn_reference_op_s_base* [ %base88, %cond.true87 ], [ null, %if.then85 ], !dbg !3428
  %sub92 = add i32 %2, -1, !dbg !3428
  %47 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3428
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %47, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %47, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base95 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %47, i64 0, i32 0, !dbg !3428
  %call99 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base95, i32 0) #7, !dbg !3428
  %call100 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %cond91, i32 %sub92, %struct.vn_reference_op_struct* %call99) #7, !dbg !3428
  %48 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !3430
  %tobool101 = icmp eq %struct.VEC_vn_reference_op_s_heap* %48, null, !dbg !3430
  br i1 %tobool101, label %cond.end105, label %cond.true102, !dbg !3430

cond.true102:                                     ; preds = %cond.end90
  %base103 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %48, i64 0, i32 0, !dbg !3430
  br label %cond.end105, !dbg !3430

cond.end105:                                      ; preds = %cond.end90, %cond.true102
  %cond106 = phi %struct.VEC_vn_reference_op_s_base* [ %base103, %cond.true102 ], [ null, %cond.end90 ], !dbg !3430
  %49 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3430
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %49, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %49, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base109 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %49, i64 0, i32 0, !dbg !3430
  %call113 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base109, i32 1) #7, !dbg !3430
  %call114 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %cond106, i32 %2, %struct.vn_reference_op_struct* %call113) #7, !dbg !3430
  br label %if.end167, !dbg !3431

if.else115:                                       ; preds = %if.else
  %50 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3432
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %50, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %50, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base118 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %50, i64 0, i32 0, !dbg !3432
  %call122 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base118) #7, !dbg !3432
  %cmp123 = icmp ugt i32 %call122, 2, !dbg !3434
  br i1 %cmp123, label %if.then124, label %if.else164, !dbg !3435

if.then124:                                       ; preds = %if.else115
  %51 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !3436
  %tobool125 = icmp eq %struct.VEC_vn_reference_op_s_heap* %51, null, !dbg !3436
  br i1 %tobool125, label %cond.end129, label %cond.true126, !dbg !3436

cond.true126:                                     ; preds = %if.then124
  %base127 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %51, i64 0, i32 0, !dbg !3436
  br label %cond.end129, !dbg !3436

cond.end129:                                      ; preds = %if.then124, %cond.true126
  %cond130 = phi %struct.VEC_vn_reference_op_s_base* [ %base127, %cond.true126 ], [ null, %if.then124 ], !dbg !3436
  %sub131 = add i32 %2, -1, !dbg !3436
  %52 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3436
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %52, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %52, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base134 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %52, i64 0, i32 0, !dbg !3436
  %call138 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base134, i32 0) #7, !dbg !3436
  %call139 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %cond130, i32 %sub131, %struct.vn_reference_op_struct* %call138) #7, !dbg !3436
  %53 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %ops, align 8, !dbg !3438
  %tobool140 = icmp eq %struct.VEC_vn_reference_op_s_heap* %53, null, !dbg !3438
  br i1 %tobool140, label %cond.end144, label %cond.true141, !dbg !3438

cond.true141:                                     ; preds = %cond.end129
  %base142 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %53, i64 0, i32 0, !dbg !3438
  br label %cond.end144, !dbg !3438

cond.end144:                                      ; preds = %cond.end129, %cond.true141
  %cond145 = phi %struct.VEC_vn_reference_op_s_base* [ %base142, %cond.true141 ], [ null, %cond.end129 ], !dbg !3438
  %54 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3438
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %54, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %54, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base148 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %54, i64 0, i32 0, !dbg !3438
  %call152 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base148, i32 1) #7, !dbg !3438
  %call153 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %cond145, i32 %2, %struct.vn_reference_op_struct* %call152) #7, !dbg !3438
  call void @llvm.dbg.value(metadata i32 2, metadata !3369, metadata !DIExpression()), !dbg !3374
  br label %for.cond, !dbg !3439

for.cond:                                         ; preds = %for.body, %cond.end144
  %i.0 = phi i32 [ %2, %cond.end144 ], [ %inc, %for.body ], !dbg !3374
  %j.0 = phi i32 [ 2, %cond.end144 ], [ %inc163, %for.body ], !dbg !3441
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3369, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3368, metadata !DIExpression()), !dbg !3374
  %55 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %mem, align 8, !dbg !3442
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %55, metadata !3366, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %55, metadata !3366, metadata !DIExpression()), !dbg !3374
  %base156 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %55, i64 0, i32 0, !dbg !3442
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %op, metadata !3367, metadata !DIExpression(DW_OP_deref)), !dbg !3374
  %call160 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %base156, i32 %j.0, %struct.vn_reference_op_struct** nonnull %op) #7, !dbg !3442
  %tobool161 = icmp eq i32 %call160, 0, !dbg !3444
  br i1 %tobool161, label %if.end167.loopexit, label %for.body, !dbg !3444

for.body:                                         ; preds = %for.cond
  %inc = add i32 %i.0, 1, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3368, metadata !DIExpression()), !dbg !3374
  %56 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %op, align 8, !dbg !3445
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %56, metadata !3367, metadata !DIExpression()), !dbg !3374
  %call162 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_insert(%struct.VEC_vn_reference_op_s_heap** %ops, i32 %inc, %struct.vn_reference_op_struct* %56) #7, !dbg !3445
  %inc163 = add i32 %j.0, 1, !dbg !3446
  call void @llvm.dbg.value(metadata i32 %inc163, metadata !3369, metadata !DIExpression()), !dbg !3374
  br label %for.cond, !dbg !3447, !llvm.loop !3448

if.else164:                                       ; preds = %if.else115
  call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 886, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3450
  br label %if.end167

if.end167.loopexit:                               ; preds = %for.cond
  %i.0.lcssa = phi i32 [ %i.0, %for.cond ], !dbg !3374
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3368, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3368, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3368, metadata !DIExpression()), !dbg !3374
  br label %if.end167, !dbg !3451

if.end167:                                        ; preds = %if.end167.loopexit, %cond.end105, %if.else164, %cond.end75
  %i.3 = phi i32 [ %sub, %cond.end75 ], [ %2, %cond.end105 ], [ %2, %if.else164 ], [ %i.0.lcssa, %if.end167.loopexit ], !dbg !3374
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !3368, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %mem, metadata !3366, metadata !DIExpression(DW_OP_deref)), !dbg !3374
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %mem) #7, !dbg !3451
  store i32 %i.3, i32* %i_p, align 4, !dbg !3452
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3453
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3453
  ret void, !dbg !3453
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_, %struct.vn_reference_op_struct* %obj_) unnamed_addr #0 !dbg !3454 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !3458, metadata !DIExpression()), !dbg !3462
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3459, metadata !DIExpression()), !dbg !3462
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %obj_, metadata !3460, metadata !DIExpression()), !dbg !3462
  %idxprom = zext i32 %ix_ to i64, !dbg !3463
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3463
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %arrayidx, metadata !3461, metadata !DIExpression()), !dbg !3462
  %tobool = icmp eq %struct.vn_reference_op_struct* %obj_, null, !dbg !3464
  br i1 %tobool, label %if.end, label %if.then, !dbg !3463

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.vn_reference_op_struct* %arrayidx to i8*, !dbg !3464
  %1 = bitcast %struct.vn_reference_op_struct* %obj_ to i8*, !dbg !3464
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 40, i1 false), !dbg !3464
  br label %if.end, !dbg !3464

if.end:                                           ; preds = %entry, %if.then
  ret %struct.vn_reference_op_struct* %arrayidx, !dbg !3463
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_reference_op_s_base_ordered_remove(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3466 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !3470, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3471, metadata !DIExpression()), !dbg !3473
  %idxprom = zext i32 %ix_ to i64, !dbg !3474
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3474
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %arrayidx, metadata !3472, metadata !DIExpression()), !dbg !3473
  %0 = bitcast %struct.vn_reference_op_struct* %arrayidx to i8*, !dbg !3474
  %add.ptr = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %arrayidx, i64 1, !dbg !3474
  %1 = bitcast %struct.vn_reference_op_struct* %add.ptr to i8*, !dbg !3474
  %num1 = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !3474
  %2 = load i32, i32* %num1, align 8, !dbg !3474
  %dec = add i32 %2, -1, !dbg !3474
  store i32 %dec, i32* %num1, align 8, !dbg !3474
  %sub = sub i32 %dec, %ix_, !dbg !3474
  %conv2 = zext i32 %sub to i64, !dbg !3474
  %mul = mul nuw nsw i64 %conv2, 40, !dbg !3474
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !3474
  ret void, !dbg !3474
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_heap_safe_insert(%struct.VEC_vn_reference_op_s_heap** %vec_, i32 %ix_, %struct.vn_reference_op_struct* %obj_) unnamed_addr #0 !dbg !3475 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %vec_, metadata !3479, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3480, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %obj_, metadata !3481, metadata !DIExpression()), !dbg !3482
  %call = tail call fastcc i32 @VEC_vn_reference_op_s_heap_reserve(%struct.VEC_vn_reference_op_s_heap** %vec_, i32 1) #7, !dbg !3483
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !3483
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !3483
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3483

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !3483
  br label %cond.end, !dbg !3483

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3483
  %call1 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_quick_insert(%struct.VEC_vn_reference_op_s_base* %cond, i32 %ix_, %struct.vn_reference_op_struct* %obj_) #7, !dbg !3483
  ret %struct.vn_reference_op_struct* %call1, !dbg !3483
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** %vec_) unnamed_addr #0 !dbg !3484 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %vec_, metadata !3488, metadata !DIExpression()), !dbg !3489
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !3490
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !3490
  br i1 %tobool, label %if.end, label %if.then, !dbg !3492

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_vn_reference_op_s_heap* %0 to i8*, !dbg !3492
  tail call void @free(i8* nonnull %1) #6, !dbg !3490
  br label %if.end, !dbg !3490

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !3492
  ret void, !dbg !3492
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vn_reference_lookup_pieces(%union.tree_node* %vuse, i32 %set, %union.tree_node* %type, %struct.VEC_vn_reference_op_s_heap* %operands, %struct.vn_reference_s** %vnresult, i8 zeroext %maywalk) local_unnamed_addr #4 !dbg !3493 {
entry:
  %vr1 = alloca %struct.vn_reference_s, align 8
  %tmp = alloca %struct.vn_reference_s*, align 8
  %r = alloca %struct.ao_ref_s, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !3498, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i32 %set, metadata !3499, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3500, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %operands, metadata !3501, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata %struct.vn_reference_s** %vnresult, metadata !3502, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8 %maywalk, metadata !3503, metadata !DIExpression()), !dbg !3509
  %0 = bitcast %struct.vn_reference_s* %vr1 to i8*, !dbg !3510
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #8, !dbg !3510
  %1 = bitcast %struct.vn_reference_s** %tmp to i8*, !dbg !3511
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3511
  %tobool = icmp eq %struct.vn_reference_s** %vnresult, null, !dbg !3512
  %spec.select = select i1 %tobool, %struct.vn_reference_s** %tmp, %struct.vn_reference_s** %vnresult, !dbg !3514
  call void @llvm.dbg.value(metadata %struct.vn_reference_s** %spec.select, metadata !3502, metadata !DIExpression()), !dbg !3509
  store %struct.vn_reference_s* null, %struct.vn_reference_s** %spec.select, align 8, !dbg !3515
  %tobool1 = icmp eq %union.tree_node* %vuse, null, !dbg !3516
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3516

cond.true:                                        ; preds = %entry
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %vuse) #7, !dbg !3517
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 0, !dbg !3517
  %2 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !3517
  br label %cond.end, !dbg !3516

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %2, %cond.true ], [ null, %entry ], !dbg !3516
  %vuse2 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 2, !dbg !3518
  store %union.tree_node* %cond, %union.tree_node** %vuse2, align 8, !dbg !3519
  %3 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !3520
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %3, i64 0, i32 0, !dbg !3520
  tail call fastcc void @VEC_vn_reference_op_s_base_truncate(%struct.VEC_vn_reference_op_s_base* %base, i32 0) #7, !dbg !3520
  %base10 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %operands, i64 0, i32 0, !dbg !3521
  %call14 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base10) #7, !dbg !3521
  tail call fastcc void @VEC_vn_reference_op_s_heap_safe_grow(%struct.VEC_vn_reference_op_s_heap** nonnull @shared_lookup_references, i32 %call14) #7, !dbg !3521
  %4 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !3522
  %base17 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %4, i64 0, i32 0, !dbg !3522
  %call21 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_address(%struct.VEC_vn_reference_op_s_base* %base17) #7, !dbg !3522
  %5 = bitcast %struct.vn_reference_op_struct* %call21 to i8*, !dbg !3522
  %call28 = tail call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_address(%struct.VEC_vn_reference_op_s_base* %base10) #7, !dbg !3523
  %6 = bitcast %struct.vn_reference_op_struct* %call28 to i8*, !dbg !3523
  %call35 = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base10) #7, !dbg !3524
  %conv = zext i32 %call35 to i64, !dbg !3524
  %mul = mul nuw nsw i64 %conv, 40, !dbg !3525
  %call36 = tail call i8* @memcpy(i8* %5, i8* %6, i64 %mul) #6, !dbg !3526
  %7 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !3527
  %call37 = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_refs(%struct.VEC_vn_reference_op_s_heap* %7) #7, !dbg !3528
  store %struct.VEC_vn_reference_op_s_heap* %call37, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !3529
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %call37, metadata !3501, metadata !DIExpression()), !dbg !3509
  %operands38 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 5, !dbg !3530
  store %struct.VEC_vn_reference_op_s_heap* %call37, %struct.VEC_vn_reference_op_s_heap** %operands38, align 8, !dbg !3531
  %type39 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 4, !dbg !3532
  store %union.tree_node* %type, %union.tree_node** %type39, align 8, !dbg !3533
  %set40 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 3, !dbg !3534
  store i32 %set, i32* %set40, align 8, !dbg !3535
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr1, metadata !3504, metadata !DIExpression(DW_OP_deref)), !dbg !3509
  %call41 = call i32 @vn_reference_compute_hash(%struct.vn_reference_s* nonnull %vr1) #7, !dbg !3536
  %hashcode = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 1, !dbg !3537
  store i32 %call41, i32* %hashcode, align 4, !dbg !3538
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr1, metadata !3504, metadata !DIExpression(DW_OP_deref)), !dbg !3509
  %call42 = call fastcc %union.tree_node* @vn_reference_lookup_1(%struct.vn_reference_s* nonnull %vr1, %struct.vn_reference_s** %spec.select) #7, !dbg !3539
  %8 = load %struct.vn_reference_s*, %struct.vn_reference_s** %spec.select, align 8, !dbg !3540
  %tobool43 = icmp eq %struct.vn_reference_s* %8, null, !dbg !3540
  %tobool45 = icmp ne i8 %maywalk, 0, !dbg !3541
  %or.cond = and i1 %tobool43, %tobool45, !dbg !3542
  br i1 %or.cond, label %land.lhs.true46, label %if.end62, !dbg !3542

land.lhs.true46:                                  ; preds = %cond.end
  %9 = load %union.tree_node*, %union.tree_node** %vuse2, align 8, !dbg !3543
  %tobool48 = icmp eq %union.tree_node* %9, null, !dbg !3544
  br i1 %tobool48, label %if.end62, label %if.then49, !dbg !3545

if.then49:                                        ; preds = %land.lhs.true46
  %10 = bitcast %struct.ao_ref_s* %r to i8*, !dbg !3546
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #8, !dbg !3546
  %11 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands38, align 8, !dbg !3547
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %r, metadata !3506, metadata !DIExpression(DW_OP_deref)), !dbg !3549
  %call51 = call zeroext i8 @ao_ref_init_from_vn_reference(%struct.ao_ref_s* nonnull %r, i32 %set, %union.tree_node* %type, %struct.VEC_vn_reference_op_s_heap* %11) #7, !dbg !3550
  %tobool52 = icmp eq i8 %call51, 0, !dbg !3550
  br i1 %tobool52, label %if.end56, label %if.then53, !dbg !3551

if.then53:                                        ; preds = %if.then49
  %12 = load %union.tree_node*, %union.tree_node** %vuse2, align 8, !dbg !3552
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %r, metadata !3506, metadata !DIExpression(DW_OP_deref)), !dbg !3549
  %call55 = call i8* @walk_non_aliased_vuses(%struct.ao_ref_s* nonnull %r, %union.tree_node* %12, i8* (%struct.ao_ref_s*, %union.tree_node*, i8*)* nonnull @vn_reference_lookup_2, i8* (%struct.ao_ref_s*, %union.tree_node*, i8*)* nonnull @vn_reference_lookup_3, i8* nonnull %0) #6, !dbg !3553
  %13 = bitcast %struct.vn_reference_s** %spec.select to i8**, !dbg !3554
  store i8* %call55, i8** %13, align 8, !dbg !3554
  br label %if.end56, !dbg !3555

if.end56:                                         ; preds = %if.then49, %if.then53
  %14 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands38, align 8, !dbg !3556
  %cmp = icmp eq %struct.VEC_vn_reference_op_s_heap* %14, %call37, !dbg !3558
  br i1 %cmp, label %if.end61, label %if.then59, !dbg !3559

if.then59:                                        ; preds = %if.end56
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %operands38) #7, !dbg !3560
  br label %if.end61, !dbg !3560

if.end61:                                         ; preds = %if.end56, %if.then59
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #8, !dbg !3561
  %.pre = load %struct.vn_reference_s*, %struct.vn_reference_s** %spec.select, align 8, !dbg !3562
  br label %if.end62, !dbg !3564

if.end62:                                         ; preds = %land.lhs.true46, %cond.end, %if.end61
  %15 = phi %struct.vn_reference_s* [ null, %land.lhs.true46 ], [ %8, %cond.end ], [ %.pre, %if.end61 ], !dbg !3562
  %tobool63 = icmp eq %struct.vn_reference_s* %15, null, !dbg !3562
  br i1 %tobool63, label %cleanup, label %if.then64, !dbg !3565

if.then64:                                        ; preds = %if.end62
  %result = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %15, i64 0, i32 6, !dbg !3566
  %16 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !3566
  br label %cleanup, !dbg !3567

cleanup:                                          ; preds = %if.end62, %if.then64
  %retval.0 = phi %union.tree_node* [ %16, %if.then64 ], [ null, %if.end62 ], !dbg !3509
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3568
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #8, !dbg !3568
  ret %union.tree_node* %retval.0, !dbg !3568
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_reference_op_s_base_truncate(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !3569 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !3571, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.value(metadata i32 %size_, metadata !3572, metadata !DIExpression()), !dbg !3573
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !3574
  br label %cond.true, !dbg !3574

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3574

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !3574

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !3574

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !3575
  store i32 %size_, i32* %num3, align 8, !dbg !3575
  br label %if.end, !dbg !3575

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !3574
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_reference_op_s_heap_safe_grow(%struct.VEC_vn_reference_op_s_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !3577 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %vec_, metadata !3581, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i32 %size_, metadata !3582, metadata !DIExpression()), !dbg !3583
  %cmp = icmp sgt i32 %size_, -1, !dbg !3584
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3584

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !3584
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !3584
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3584

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !3584
  br label %cond.end, !dbg !3584

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !3584
  %call = tail call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond) #7, !dbg !3584
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !3584
  %tobool2 = icmp eq %struct.VEC_vn_reference_op_s_heap* %1, null, !dbg !3584
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !3584

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %1, i64 0, i32 0, i32 0, !dbg !3584
  %2 = load i32, i32* %num, align 8, !dbg !3584
  br label %cond.end11, !dbg !3584

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !3584
  %sub = sub nsw i32 %size_, %cond12, !dbg !3584
  %call13 = tail call fastcc i32 @VEC_vn_reference_op_s_heap_reserve_exact(%struct.VEC_vn_reference_op_s_heap** %vec_, i32 %sub) #7, !dbg !3584
  %3 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !3584
  %num20 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %3, i64 0, i32 0, i32 0, !dbg !3584
  store i32 %size_, i32* %num20, align 8, !dbg !3584
  ret void, !dbg !3584
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_address(%struct.VEC_vn_reference_op_s_base* %vec_) unnamed_addr #0 !dbg !3585 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !3589, metadata !DIExpression()), !dbg !3590
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !3591
  %arraydecay = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 0, !dbg !3591
  %cond = select i1 %tobool, %struct.vn_reference_op_struct* null, %struct.vn_reference_op_struct* %arraydecay, !dbg !3591
  ret %struct.vn_reference_op_struct* %cond, !dbg !3591
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_refs(%struct.VEC_vn_reference_op_s_heap* %orig) unnamed_addr #4 !dbg !3592 {
entry:
  %orig.addr = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  %vro = alloca %struct.vn_reference_op_struct*, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %orig, metadata !3596, metadata !DIExpression()), !dbg !3599
  store %struct.VEC_vn_reference_op_s_heap* %orig, %struct.VEC_vn_reference_op_s_heap** %orig.addr, align 8
  %0 = bitcast %struct.vn_reference_op_struct** %vro to i8*, !dbg !3600
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3600
  %1 = bitcast i32* %i to i8*, !dbg !3601
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3601
  call void @llvm.dbg.value(metadata i32 0, metadata !3598, metadata !DIExpression()), !dbg !3599
  br label %for.cond, !dbg !3602

for.cond:                                         ; preds = %for.inc, %entry
  %2 = phi %struct.VEC_vn_reference_op_s_heap* [ %orig, %entry ], [ %.pre, %for.inc ], !dbg !3604
  %storemerge = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !3606
  store i32 %storemerge, i32* %i, align 4, !dbg !3606
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %2, metadata !3596, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %2, metadata !3596, metadata !DIExpression()), !dbg !3599
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %2, i64 0, i32 0, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %storemerge, metadata !3598, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro, metadata !3597, metadata !DIExpression(DW_OP_deref)), !dbg !3599
  %call = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %base, i32 %storemerge, %struct.vn_reference_op_struct** nonnull %vro) #7, !dbg !3604
  %tobool1 = icmp eq i32 %call, 0, !dbg !3607
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3607

for.body:                                         ; preds = %for.cond
  %3 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !3608
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %3, metadata !3597, metadata !DIExpression()), !dbg !3599
  %opcode = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %3, i64 0, i32 0, !dbg !3611
  %4 = load i32, i32* %opcode, align 8, !dbg !3611
  %cmp = icmp eq i32 %4, 141, !dbg !3612
  br i1 %cmp, label %for.body.if.then_crit_edge, label %lor.lhs.false, !dbg !3613

for.body.if.then_crit_edge:                       ; preds = %for.body
  %op06.phi.trans.insert = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %3, i64 0, i32 2, !dbg !3614
  %.pre6 = load %union.tree_node*, %union.tree_node** %op06.phi.trans.insert, align 8, !dbg !3616
  br label %if.then, !dbg !3613

lor.lhs.false:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %3, metadata !3597, metadata !DIExpression()), !dbg !3599
  %op0 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %3, i64 0, i32 2, !dbg !3617
  %5 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !3617
  %tobool2 = icmp eq %union.tree_node* %5, null, !dbg !3618
  br i1 %tobool2, label %if.end45, label %land.lhs.true, !dbg !3619

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %3, metadata !3597, metadata !DIExpression()), !dbg !3599
  %bf.load = load i64, i64* %6, align 8, !dbg !3620
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !3621
  %cmp5 = icmp eq i64 %bf.cast3, 141, !dbg !3621
  br i1 %cmp5, label %if.then, label %if.end45, !dbg !3622

if.then:                                          ; preds = %for.body.if.then_crit_edge, %land.lhs.true
  %7 = phi %union.tree_node* [ %.pre6, %for.body.if.then_crit_edge ], [ %5, %land.lhs.true ], !dbg !3616
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %3, metadata !3597, metadata !DIExpression()), !dbg !3599
  %call7 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %7) #7, !dbg !3616
  %8 = bitcast %struct.vn_ssa_aux* %call7 to i64*, !dbg !3616
  %9 = load i64, i64* %8, align 8, !dbg !3616
  %10 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !3623
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %10, metadata !3597, metadata !DIExpression()), !dbg !3599
  %op08 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %10, i64 0, i32 2, !dbg !3624
  %11 = bitcast %union.tree_node** %op08 to i64*, !dbg !3625
  store i64 %9, i64* %11, align 8, !dbg !3625
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %10, metadata !3597, metadata !DIExpression()), !dbg !3599
  %.cast = inttoptr i64 %9 to i64*, !dbg !3626
  %bf.load11 = load i64, i64* %.cast, align 8, !dbg !3626
  %bf.cast134 = and i64 %bf.load11, 65535, !dbg !3628
  %cmp14 = icmp eq i64 %bf.cast134, 141, !dbg !3628
  br i1 %cmp14, label %if.end, label %land.lhs.true15, !dbg !3629

land.lhs.true15:                                  ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %10, metadata !3597, metadata !DIExpression()), !dbg !3599
  %opcode16 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %10, i64 0, i32 0, !dbg !3630
  %12 = load i32, i32* %opcode16, align 8, !dbg !3630
  %cmp17 = icmp eq i32 %12, 141, !dbg !3631
  br i1 %cmp17, label %if.then18, label %if.end, !dbg !3632

if.then18:                                        ; preds = %land.lhs.true15
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %10, metadata !3597, metadata !DIExpression()), !dbg !3599
  %13 = trunc i64 %bf.load11 to i32, !dbg !3633
  %bf.cast23 = and i32 %13, 65535, !dbg !3633
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %10, metadata !3597, metadata !DIExpression()), !dbg !3599
  store i32 %bf.cast23, i32* %opcode16, align 8, !dbg !3634
  br label %if.end, !dbg !3635

if.end:                                           ; preds = %if.then, %if.then18, %land.lhs.true15
  %14 = load i32, i32* %i, align 4, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %14, metadata !3598, metadata !DIExpression()), !dbg !3599
  %cmp25 = icmp eq i32 %14, 0, !dbg !3638
  br i1 %cmp25, label %if.end45, label %land.lhs.true26, !dbg !3639

land.lhs.true26:                                  ; preds = %if.end
  %15 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !3640
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %15, metadata !3597, metadata !DIExpression()), !dbg !3599
  %op027 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %15, i64 0, i32 2, !dbg !3640
  %16 = bitcast %union.tree_node** %op027 to i64**, !dbg !3640
  %17 = load i64*, i64** %16, align 8, !dbg !3640
  %bf.load29 = load i64, i64* %17, align 8, !dbg !3640
  %bf.cast315 = and i64 %bf.load29, 65535, !dbg !3641
  %cmp32 = icmp eq i64 %bf.cast315, 121, !dbg !3641
  br i1 %cmp32, label %land.lhs.true33, label %if.end45, !dbg !3642

land.lhs.true33:                                  ; preds = %land.lhs.true26
  %18 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %orig.addr, align 8, !dbg !3643
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %18, metadata !3596, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %18, metadata !3596, metadata !DIExpression()), !dbg !3599
  %base36 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %18, i64 0, i32 0, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %14, metadata !3598, metadata !DIExpression()), !dbg !3599
  %sub = add i32 %14, -1, !dbg !3643
  %call40 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base36, i32 %sub) #7, !dbg !3643
  %opcode41 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %call40, i64 0, i32 0, !dbg !3644
  %19 = load i32, i32* %opcode41, align 8, !dbg !3644
  %cmp42 = icmp eq i32 %19, 47, !dbg !3645
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !3646

if.then43:                                        ; preds = %land.lhs.true33
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %orig.addr, metadata !3596, metadata !DIExpression(DW_OP_deref)), !dbg !3599
  call void @llvm.dbg.value(metadata i32* %i, metadata !3598, metadata !DIExpression(DW_OP_deref)), !dbg !3599
  call void @vn_reference_fold_indirect(%struct.VEC_vn_reference_op_s_heap** nonnull %orig.addr, i32* nonnull %i) #7, !dbg !3647
  br label %for.inc, !dbg !3649

if.end45:                                         ; preds = %if.end, %lor.lhs.false, %land.lhs.true26, %land.lhs.true33, %land.lhs.true
  %20 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !3650
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %20, metadata !3597, metadata !DIExpression()), !dbg !3599
  %op1 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %20, i64 0, i32 3, !dbg !3652
  %21 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !3652
  %tobool46 = icmp eq %union.tree_node* %21, null, !dbg !3650
  br i1 %tobool46, label %if.end59, label %land.lhs.true47, !dbg !3653

land.lhs.true47:                                  ; preds = %if.end45
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3653
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %20, metadata !3597, metadata !DIExpression()), !dbg !3599
  %bf.load50 = load i64, i64* %22, align 8, !dbg !3654
  %bf.cast522 = and i64 %bf.load50, 65535, !dbg !3655
  %cmp53 = icmp eq i64 %bf.cast522, 141, !dbg !3655
  br i1 %cmp53, label %if.then54, label %if.end59, !dbg !3656

if.then54:                                        ; preds = %land.lhs.true47
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %20, metadata !3597, metadata !DIExpression()), !dbg !3599
  %call56 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %21) #7, !dbg !3657
  %23 = bitcast %struct.vn_ssa_aux* %call56 to i64*, !dbg !3657
  %24 = load i64, i64* %23, align 8, !dbg !3657
  %25 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !3658
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %25, metadata !3597, metadata !DIExpression()), !dbg !3599
  %op158 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %25, i64 0, i32 3, !dbg !3659
  %26 = bitcast %union.tree_node** %op158 to i64*, !dbg !3660
  store i64 %24, i64* %26, align 8, !dbg !3660
  br label %if.end59, !dbg !3658

if.end59:                                         ; preds = %if.end45, %if.then54, %land.lhs.true47
  %27 = phi %struct.vn_reference_op_struct* [ %20, %if.end45 ], [ %25, %if.then54 ], [ %20, %land.lhs.true47 ], !dbg !3661
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %27, metadata !3597, metadata !DIExpression()), !dbg !3599
  %op2 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %27, i64 0, i32 4, !dbg !3663
  %28 = load %union.tree_node*, %union.tree_node** %op2, align 8, !dbg !3663
  %tobool60 = icmp eq %union.tree_node* %28, null, !dbg !3661
  br i1 %tobool60, label %for.inc, label %land.lhs.true61, !dbg !3664

land.lhs.true61:                                  ; preds = %if.end59
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3664
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %27, metadata !3597, metadata !DIExpression()), !dbg !3599
  %bf.load64 = load i64, i64* %29, align 8, !dbg !3665
  %bf.cast661 = and i64 %bf.load64, 65535, !dbg !3666
  %cmp67 = icmp eq i64 %bf.cast661, 141, !dbg !3666
  br i1 %cmp67, label %if.then68, label %for.inc, !dbg !3667

if.then68:                                        ; preds = %land.lhs.true61
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %27, metadata !3597, metadata !DIExpression()), !dbg !3599
  %call70 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %28) #7, !dbg !3668
  %30 = bitcast %struct.vn_ssa_aux* %call70 to i64*, !dbg !3668
  %31 = load i64, i64* %30, align 8, !dbg !3668
  %32 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !3669
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %32, metadata !3597, metadata !DIExpression()), !dbg !3599
  %op272 = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %32, i64 0, i32 4, !dbg !3670
  %33 = bitcast %union.tree_node** %op272 to i64*, !dbg !3671
  store i64 %31, i64* %33, align 8, !dbg !3671
  br label %for.inc, !dbg !3669

for.inc:                                          ; preds = %if.end59, %land.lhs.true61, %if.then68, %if.then43
  %34 = load i32, i32* %i, align 4, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %34, metadata !3598, metadata !DIExpression()), !dbg !3599
  %inc = add i32 %34, 1, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3598, metadata !DIExpression()), !dbg !3599
  %.pre = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %orig.addr, align 8, !dbg !3604
  br label %for.cond, !dbg !3673, !llvm.loop !3674

for.end:                                          ; preds = %for.cond
  %35 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %orig.addr, align 8, !dbg !3676
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %35, metadata !3596, metadata !DIExpression()), !dbg !3599
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3677
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3677
  ret %struct.VEC_vn_reference_op_s_heap* %35, !dbg !3678
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @vn_reference_lookup_1(%struct.vn_reference_s* %vr, %struct.vn_reference_s** %vnresult) unnamed_addr #4 !dbg !3679 {
entry:
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr, metadata !3683, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata %struct.vn_reference_s** %vnresult, metadata !3684, metadata !DIExpression()), !dbg !3687
  %hashcode = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr, i64 0, i32 1, !dbg !3688
  %0 = load i32, i32* %hashcode, align 4, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %0, metadata !3686, metadata !DIExpression()), !dbg !3687
  %1 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !3689
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %1, i64 0, i32 2, !dbg !3690
  %2 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !3690
  %3 = bitcast %struct.vn_reference_s* %vr to i8*, !dbg !3691
  %call = tail call i8** @htab_find_slot_with_hash(%struct.htab* %2, i8* %3, i32 %0, i32 0) #6, !dbg !3692
  call void @llvm.dbg.value(metadata i8** %call, metadata !3685, metadata !DIExpression()), !dbg !3687
  %tobool = icmp eq i8** %call, null, !dbg !3693
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3695

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !3696
  %5 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !3697
  %cmp = icmp eq %struct.vn_tables_s* %4, %5, !dbg !3698
  br i1 %cmp, label %if.then, label %if.end, !dbg !3699

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !3700
  %references1 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %6, i64 0, i32 2, !dbg !3701
  %7 = load %struct.htab*, %struct.htab** %references1, align 8, !dbg !3701
  %call2 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %7, i8* %3, i32 %0, i32 0) #6, !dbg !3702
  call void @llvm.dbg.value(metadata i8** %call2, metadata !3685, metadata !DIExpression()), !dbg !3687
  br label %if.end, !dbg !3703

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %slot.0 = phi i8** [ %call, %entry ], [ %call2, %if.then ], [ null, %land.lhs.true ], !dbg !3687
  call void @llvm.dbg.value(metadata i8** %slot.0, metadata !3685, metadata !DIExpression()), !dbg !3687
  %tobool3 = icmp eq i8** %slot.0, null, !dbg !3704
  br i1 %tobool3, label %cleanup, label %if.then4, !dbg !3706

if.then4:                                         ; preds = %if.end
  %tobool5 = icmp eq %struct.vn_reference_s** %vnresult, null, !dbg !3707
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !3710

if.then6:                                         ; preds = %if.then4
  %8 = bitcast i8** %slot.0 to i64*, !dbg !3711
  %9 = load i64, i64* %8, align 8, !dbg !3711
  %10 = bitcast %struct.vn_reference_s** %vnresult to i64*, !dbg !3712
  store i64 %9, i64* %10, align 8, !dbg !3712
  br label %if.end7, !dbg !3713

if.end7:                                          ; preds = %if.then4, %if.then6
  %11 = bitcast i8** %slot.0 to %struct.vn_reference_s**, !dbg !3714
  %12 = load %struct.vn_reference_s*, %struct.vn_reference_s** %11, align 8, !dbg !3714
  %result = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %12, i64 0, i32 6, !dbg !3715
  %13 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !3715
  br label %cleanup, !dbg !3716

cleanup:                                          ; preds = %if.end, %if.end7
  %retval.0 = phi %union.tree_node* [ %13, %if.end7 ], [ null, %if.end ], !dbg !3687
  ret %union.tree_node* %retval.0, !dbg !3717
}

declare dso_local i8* @walk_non_aliased_vuses(%struct.ao_ref_s*, %union.tree_node*, i8* (%struct.ao_ref_s*, %union.tree_node*, i8*)*, i8* (%struct.ao_ref_s*, %union.tree_node*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i8* @vn_reference_lookup_2(%struct.ao_ref_s* %op, %union.tree_node* %vuse, i8* %vr_) #4 !dbg !3718 {
entry:
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %op, metadata !3722, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !3723, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i8* %vr_, metadata !3724, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i8* %vr_, metadata !3725, metadata !DIExpression()), !dbg !3728
  %0 = load %union.tree_node**, %union.tree_node*** @last_vuse_ptr, align 8, !dbg !3729
  %tobool = icmp eq %union.tree_node** %0, null, !dbg !3729
  br i1 %tobool, label %if.end, label %if.then, !dbg !3731

if.then:                                          ; preds = %entry
  store %union.tree_node* %vuse, %union.tree_node** %0, align 8, !dbg !3732
  br label %if.end, !dbg !3733

if.end:                                           ; preds = %entry, %if.then
  %vuse1 = getelementptr inbounds i8, i8* %vr_, i64 8, !dbg !3734
  %1 = bitcast i8* %vuse1 to %union.tree_node**, !dbg !3734
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3734
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !3736
  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !3737

if.then3:                                         ; preds = %if.end
  %hashcode = getelementptr inbounds i8, i8* %vr_, i64 4, !dbg !3738
  %3 = bitcast i8* %hashcode to i32*, !dbg !3738
  %4 = load i32, i32* %3, align 4, !dbg !3738
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3739
  %5 = bitcast %union.tree_node** %version to i32*, !dbg !3739
  %6 = load i32, i32* %5, align 8, !dbg !3739
  %sub = sub i32 %4, %6, !dbg !3740
  store i32 %sub, i32* %3, align 4, !dbg !3741
  br label %if.end6, !dbg !3742

if.end6:                                          ; preds = %if.end, %if.then3
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %vuse) #7, !dbg !3743
  %7 = bitcast %struct.vn_ssa_aux* %call to i64*, !dbg !3743
  %8 = load i64, i64* %7, align 8, !dbg !3743
  %9 = bitcast i8* %vuse1 to i64*, !dbg !3744
  store i64 %8, i64* %9, align 8, !dbg !3744
  %tobool9 = icmp eq i64 %8, 0, !dbg !3745
  br i1 %tobool9, label %if.end6.if.end16_crit_edge, label %if.then10, !dbg !3747

if.end6.if.end16_crit_edge:                       ; preds = %if.end6
  %hashcode17.phi.trans.insert = getelementptr inbounds i8, i8* %vr_, i64 4, !dbg !3728
  %.phi.trans.insert = bitcast i8* %hashcode17.phi.trans.insert to i32*, !dbg !3728
  %.pre = load i32, i32* %.phi.trans.insert, align 4, !dbg !3748
  br label %if.end16, !dbg !3747

if.then10:                                        ; preds = %if.end6
  %10 = inttoptr i64 %8 to %struct.tree_ssa_name*, !dbg !3747
  %hashcode11 = getelementptr inbounds i8, i8* %vr_, i64 4, !dbg !3749
  %11 = bitcast i8* %hashcode11 to i32*, !dbg !3749
  %12 = load i32, i32* %11, align 4, !dbg !3749
  %version14 = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %10, i64 0, i32 3, !dbg !3750
  %13 = load i32, i32* %version14, align 8, !dbg !3750
  %add = add i32 %12, %13, !dbg !3751
  store i32 %add, i32* %11, align 4, !dbg !3752
  br label %if.end16, !dbg !3753

if.end16:                                         ; preds = %if.end6.if.end16_crit_edge, %if.then10
  %14 = phi i32 [ %.pre, %if.end6.if.end16_crit_edge ], [ %add, %if.then10 ], !dbg !3748
  call void @llvm.dbg.value(metadata i32 %14, metadata !3727, metadata !DIExpression()), !dbg !3728
  %15 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !3754
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %15, i64 0, i32 2, !dbg !3755
  %16 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !3755
  %call18 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %16, i8* %vr_, i32 %14, i32 0) #6, !dbg !3756
  call void @llvm.dbg.value(metadata i8** %call18, metadata !3726, metadata !DIExpression()), !dbg !3728
  %tobool19 = icmp eq i8** %call18, null, !dbg !3757
  br i1 %tobool19, label %land.lhs.true, label %if.end23, !dbg !3759

land.lhs.true:                                    ; preds = %if.end16
  %17 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !3760
  %18 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !3761
  %cmp = icmp eq %struct.vn_tables_s* %17, %18, !dbg !3762
  br i1 %cmp, label %if.then20, label %if.end23, !dbg !3763

if.then20:                                        ; preds = %land.lhs.true
  %19 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !3764
  %references21 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %19, i64 0, i32 2, !dbg !3765
  %20 = load %struct.htab*, %struct.htab** %references21, align 8, !dbg !3765
  %call22 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %20, i8* %vr_, i32 %14, i32 0) #6, !dbg !3766
  call void @llvm.dbg.value(metadata i8** %call22, metadata !3726, metadata !DIExpression()), !dbg !3728
  br label %if.end23, !dbg !3767

if.end23:                                         ; preds = %if.end16, %if.then20, %land.lhs.true
  %slot.0 = phi i8** [ %call18, %if.end16 ], [ %call22, %if.then20 ], [ null, %land.lhs.true ], !dbg !3728
  call void @llvm.dbg.value(metadata i8** %slot.0, metadata !3726, metadata !DIExpression()), !dbg !3728
  %tobool24 = icmp eq i8** %slot.0, null, !dbg !3768
  br i1 %tobool24, label %cleanup, label %if.then25, !dbg !3770

if.then25:                                        ; preds = %if.end23
  %21 = load i8*, i8** %slot.0, align 8, !dbg !3771
  br label %cleanup, !dbg !3772

cleanup:                                          ; preds = %if.end23, %if.then25
  %retval.0 = phi i8* [ %21, %if.then25 ], [ null, %if.end23 ], !dbg !3728
  ret i8* %retval.0, !dbg !3773
}

; Function Attrs: nounwind uwtable
define internal i8* @vn_reference_lookup_3(%struct.ao_ref_s* %ref, %union.tree_node* %vuse, i8* %vr_) #4 !dbg !3774 {
entry:
  %offset236 = alloca i64, align 8
  %size2 = alloca i64, align 8
  %maxsize2 = alloca i64, align 8
  %offset2100 = alloca i64, align 8
  %size2101 = alloca i64, align 8
  %maxsize2102 = alloca i64, align 8
  %offset2185 = alloca i64, align 8
  %size2186 = alloca i64, align 8
  %maxsize2187 = alloca i64, align 8
  %lhs = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  %rhs = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  %vro = alloca %struct.vn_reference_op_struct*, align 8
  %r = alloca %struct.ao_ref_s, align 8
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !3776, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !3777, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i8* %vr_, metadata !3778, metadata !DIExpression()), !dbg !3821
  %0 = bitcast i8* %vr_ to %struct.vn_reference_s*, !dbg !3822
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %0, metadata !3779, metadata !DIExpression()), !dbg !3821
  %def_stmt1 = getelementptr inbounds %union.tree_node, %union.tree_node* %vuse, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3823
  %1 = bitcast %union.tree_node** %def_stmt1 to %union.gimple_statement_d**, !dbg !3823
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !3823
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !3780, metadata !DIExpression()), !dbg !3821
  %call = tail call %union.tree_node* @ao_ref_base(%struct.ao_ref_s* %ref) #6, !dbg !3824
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3782, metadata !DIExpression()), !dbg !3821
  %offset2 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 2, !dbg !3825
  %3 = load i64, i64* %offset2, align 8, !dbg !3825
  call void @llvm.dbg.value(metadata i64 %3, metadata !3783, metadata !DIExpression()), !dbg !3821
  %max_size = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 4, !dbg !3826
  %4 = load i64, i64* %max_size, align 8, !dbg !3826
  call void @llvm.dbg.value(metadata i64 %4, metadata !3784, metadata !DIExpression()), !dbg !3821
  %cmp = icmp eq i64 %4, -1, !dbg !3827
  br i1 %cmp, label %cleanup353, label %if.end, !dbg !3829

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds i8, i8* %vr_, i64 24, !dbg !3830
  %5 = bitcast i8* %type to %union.tree_node**, !dbg !3830
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3830
  %call3 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %6) #6, !dbg !3831
  %tobool = icmp eq i8 %call3, 0, !dbg !3831
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3832

land.lhs.true:                                    ; preds = %if.end
  %call4 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %2) #7, !dbg !3833
  %tobool6 = icmp eq i8 %call4, 0, !dbg !3833
  br i1 %tobool6, label %if.else, label %land.lhs.true7, !dbg !3834

land.lhs.true7:                                   ; preds = %land.lhs.true
  %call8 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %2) #7, !dbg !3835
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !3781, metadata !DIExpression()), !dbg !3821
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !3836
  br i1 %tobool9, label %if.else, label %land.lhs.true10, !dbg !3837

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 5, !dbg !3838
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !3838
  %bf.clear = and i32 %bf.load, 6144, !dbg !3838
  %cmp11 = icmp eq i32 %bf.clear, 6144, !dbg !3839
  br i1 %cmp11, label %land.lhs.true13, label %if.else, !dbg !3840

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %bf.clear16 = and i32 %bf.load, 2047, !dbg !3841
  %cmp17 = icmp eq i32 %bf.clear16, 333, !dbg !3842
  br i1 %cmp17, label %land.lhs.true19, label %if.else, !dbg !3843

land.lhs.true19:                                  ; preds = %land.lhs.true13
  %call20 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %2, i32 1) #7, !dbg !3844
  %call21 = tail call i32 @integer_zerop(%union.tree_node* %call20) #6, !dbg !3845
  %tobool22 = icmp eq i32 %call21, 0, !dbg !3845
  br i1 %tobool22, label %if.else, label %land.lhs.true23, !dbg !3846

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %call24 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %2, i32 2) #7, !dbg !3847
  %call25 = tail call i32 @host_integerp(%union.tree_node* %call24, i32 1) #6, !dbg !3848
  %tobool26 = icmp eq i32 %call25, 0, !dbg !3848
  br i1 %tobool26, label %if.else, label %land.lhs.true27, !dbg !3849

land.lhs.true27:                                  ; preds = %land.lhs.true23
  %call28 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %2, i32 0) #7, !dbg !3850
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3850
  %bf.load30 = load i64, i64* %7, align 8, !dbg !3850
  %bf.cast9 = and i64 %bf.load30, 65535, !dbg !3851
  %cmp32 = icmp eq i64 %bf.cast9, 121, !dbg !3851
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !3852

if.then34:                                        ; preds = %land.lhs.true27
  %call35 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %2, i32 0) #7, !dbg !3853
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3853
  %8 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3853
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3785, metadata !DIExpression()), !dbg !3854
  %9 = bitcast i64* %offset236 to i8*, !dbg !3855
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !3855
  %10 = bitcast i64* %size2 to i8*, !dbg !3855
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8, !dbg !3855
  %11 = bitcast i64* %maxsize2 to i8*, !dbg !3855
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8, !dbg !3855
  call void @llvm.dbg.value(metadata i64* %offset236, metadata !3789, metadata !DIExpression(DW_OP_deref)), !dbg !3854
  call void @llvm.dbg.value(metadata i64* %size2, metadata !3790, metadata !DIExpression(DW_OP_deref)), !dbg !3854
  call void @llvm.dbg.value(metadata i64* %maxsize2, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3854
  %call37 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %8, i64* nonnull %offset236, i64* nonnull %size2, i64* nonnull %maxsize2) #6, !dbg !3856
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !3788, metadata !DIExpression()), !dbg !3854
  %call38 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %2, i32 2) #7, !dbg !3857
  %int_cst39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3857
  %low = bitcast i32* %int_cst39 to i64*, !dbg !3857
  %12 = load i64, i64* %low, align 8, !dbg !3857
  %mul = shl i64 %12, 3, !dbg !3858
  call void @llvm.dbg.value(metadata i64 %mul, metadata !3790, metadata !DIExpression()), !dbg !3854
  store i64 %mul, i64* %size2, align 8, !dbg !3859
  call void @llvm.dbg.value(metadata i64 %mul, metadata !3790, metadata !DIExpression()), !dbg !3854
  %div = and i64 %12, 2305843009213693951, !dbg !3860
  %call40 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %2, i32 2) #7, !dbg !3861
  %int_cst42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3861
  %low43 = bitcast i32* %int_cst42 to i64*, !dbg !3861
  %13 = load i64, i64* %low43, align 8, !dbg !3861
  %cmp44 = icmp eq i64 %div, %13, !dbg !3862
  br i1 %cmp44, label %land.lhs.true46, label %cleanup, !dbg !3863

land.lhs.true46:                                  ; preds = %if.then34
  %call47 = call i32 @operand_equal_p(%union.tree_node* %call, %union.tree_node* %call37, i32 0) #6, !dbg !3864
  %tobool48 = icmp ne i32 %call47, 0, !dbg !3864
  %14 = load i64, i64* %offset236, align 8, !dbg !3865
  call void @llvm.dbg.value(metadata i64 %14, metadata !3789, metadata !DIExpression()), !dbg !3854
  %cmp50 = icmp sle i64 %14, %3, !dbg !3866
  %or.cond = and i1 %tobool48, %cmp50, !dbg !3867
  br i1 %or.cond, label %land.lhs.true52, label %cleanup, !dbg !3867

land.lhs.true52:                                  ; preds = %land.lhs.true46
  call void @llvm.dbg.value(metadata i64 %14, metadata !3789, metadata !DIExpression()), !dbg !3854
  %15 = load i64, i64* %size2, align 8, !dbg !3868
  call void @llvm.dbg.value(metadata i64 %15, metadata !3790, metadata !DIExpression()), !dbg !3854
  %add = add nsw i64 %14, %15, !dbg !3869
  %add53 = add nsw i64 %3, %4, !dbg !3870
  %cmp54 = icmp slt i64 %add, %add53, !dbg !3871
  br i1 %cmp54, label %cleanup, label %if.then56, !dbg !3872

if.then56:                                        ; preds = %land.lhs.true52
  %16 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3873
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !3873
  %call58 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %16, %union.tree_node* %17) #6, !dbg !3873
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !3792, metadata !DIExpression()), !dbg !3874
  %call59 = call i32 @get_or_alloc_constant_value_id(%union.tree_node* %call58) #7, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %call59, metadata !3795, metadata !DIExpression()), !dbg !3874
  %set = getelementptr inbounds i8, i8* %vr_, i64 16, !dbg !3876
  %18 = bitcast i8* %set to i32*, !dbg !3876
  %19 = load i32, i32* %18, align 8, !dbg !3876
  %20 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3877
  %operands61 = getelementptr inbounds i8, i8* %vr_, i64 32, !dbg !3878
  %21 = bitcast i8* %operands61 to %struct.VEC_vn_reference_op_s_heap**, !dbg !3878
  %22 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %21, align 8, !dbg !3878
  %tobool62 = icmp eq %struct.VEC_vn_reference_op_s_heap* %22, null, !dbg !3878
  br i1 %tobool62, label %cond.end, label %cond.true, !dbg !3878

cond.true:                                        ; preds = %if.then56
  %base64 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %22, i64 0, i32 0, !dbg !3878
  br label %cond.end, !dbg !3878

cond.end:                                         ; preds = %if.then56, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base64, %cond.true ], [ null, %if.then56 ], !dbg !3878
  %call65 = call fastcc %struct.VEC_vn_reference_op_s_heap* @VEC_vn_reference_op_s_heap_copy(%struct.VEC_vn_reference_op_s_base* %cond) #7, !dbg !3878
  %call66 = call %struct.vn_reference_s* @vn_reference_insert_pieces(%union.tree_node* %vuse, i32 %19, %union.tree_node* %20, %struct.VEC_vn_reference_op_s_heap* %call65, %union.tree_node* %call58, i32 %call59) #7, !dbg !3879
  %23 = bitcast %struct.vn_reference_s* %call66 to i8*, !dbg !3879
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true52, %if.then34, %land.lhs.true46, %cond.end
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end ], [ true, %land.lhs.true52 ], [ true, %land.lhs.true46 ], [ true, %if.then34 ]
  %retval.0 = phi i8* [ %23, %cond.end ], [ undef, %land.lhs.true52 ], [ undef, %land.lhs.true46 ], [ undef, %if.then34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8, !dbg !3880
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8, !dbg !3880
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !3880
  br i1 %cleanup.dest.slot.0, label %if.end352, label %cleanup353

if.else:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true7, %land.lhs.true, %if.end, %land.lhs.true27, %land.lhs.true13, %land.lhs.true10
  %24 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3881
  %call73 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %24) #6, !dbg !3882
  %tobool75 = icmp eq i8 %call73, 0, !dbg !3882
  br i1 %tobool75, label %if.else142, label %land.lhs.true76, !dbg !3883

land.lhs.true76:                                  ; preds = %if.else
  %call77 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %2) #6, !dbg !3884
  %tobool79 = icmp eq i8 %call77, 0, !dbg !3884
  br i1 %tobool79, label %if.else142, label %land.lhs.true80, !dbg !3885

land.lhs.true80:                                  ; preds = %land.lhs.true76
  %call81 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %2) #7, !dbg !3886
  %cmp82 = icmp eq i32 %call81, 51, !dbg !3887
  br i1 %cmp82, label %land.lhs.true84, label %if.else142, !dbg !3888

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %call85 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3889
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %call85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3889
  %25 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !3889
  %26 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %25, align 8, !dbg !3889
  %tobool86 = icmp eq %struct.VEC_constructor_elt_gc* %26, null, !dbg !3889
  br i1 %tobool86, label %cond.end93, label %cond.true87, !dbg !3889

cond.true87:                                      ; preds = %land.lhs.true84
  %call88 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3889
  %elts90 = getelementptr inbounds %union.tree_node, %union.tree_node* %call88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3889
  %27 = bitcast i32* %elts90 to %struct.VEC_constructor_elt_gc**, !dbg !3889
  %28 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %27, align 8, !dbg !3889
  %base91 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %28, i64 0, i32 0, !dbg !3889
  br label %cond.end93, !dbg !3889

cond.end93:                                       ; preds = %land.lhs.true84, %cond.true87
  %cond94 = phi %struct.VEC_constructor_elt_base* [ %base91, %cond.true87 ], [ null, %land.lhs.true84 ], !dbg !3889
  %call95 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond94) #7, !dbg !3889
  %cmp96 = icmp eq i32 %call95, 0, !dbg !3890
  br i1 %cmp96, label %if.then98, label %if.else142, !dbg !3891

if.then98:                                        ; preds = %cond.end93
  %29 = bitcast i64* %offset2100 to i8*, !dbg !3892
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8, !dbg !3892
  %30 = bitcast i64* %size2101 to i8*, !dbg !3892
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8, !dbg !3892
  %31 = bitcast i64* %maxsize2102 to i8*, !dbg !3892
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8, !dbg !3892
  %call103 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %2) #7, !dbg !3893
  call void @llvm.dbg.value(metadata i64* %offset2100, metadata !3799, metadata !DIExpression(DW_OP_deref)), !dbg !3894
  call void @llvm.dbg.value(metadata i64* %size2101, metadata !3800, metadata !DIExpression(DW_OP_deref)), !dbg !3894
  call void @llvm.dbg.value(metadata i64* %maxsize2102, metadata !3801, metadata !DIExpression(DW_OP_deref)), !dbg !3894
  %call104 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %call103, i64* nonnull %offset2100, i64* nonnull %size2101, i64* nonnull %maxsize2102) #6, !dbg !3895
  call void @llvm.dbg.value(metadata %union.tree_node* %call104, metadata !3796, metadata !DIExpression()), !dbg !3894
  %call105 = call i32 @operand_equal_p(%union.tree_node* %call, %union.tree_node* %call104, i32 0) #6, !dbg !3896
  %tobool106 = icmp ne i32 %call105, 0, !dbg !3896
  %32 = load i64, i64* %offset2100, align 8, !dbg !3897
  call void @llvm.dbg.value(metadata i64 %32, metadata !3799, metadata !DIExpression()), !dbg !3894
  %cmp108 = icmp sle i64 %32, %3, !dbg !3898
  %or.cond3 = and i1 %tobool106, %cmp108, !dbg !3899
  br i1 %or.cond3, label %land.lhs.true110, label %cleanup136, !dbg !3899

land.lhs.true110:                                 ; preds = %if.then98
  call void @llvm.dbg.value(metadata i64 %32, metadata !3799, metadata !DIExpression()), !dbg !3894
  %33 = load i64, i64* %size2101, align 8, !dbg !3900
  call void @llvm.dbg.value(metadata i64 %33, metadata !3800, metadata !DIExpression()), !dbg !3894
  %add111 = add nsw i64 %32, %33, !dbg !3901
  %add112 = add nsw i64 %3, %4, !dbg !3902
  %cmp113 = icmp slt i64 %add111, %add112, !dbg !3903
  br i1 %cmp113, label %cleanup136, label %if.then115, !dbg !3904

if.then115:                                       ; preds = %land.lhs.true110
  %34 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3905
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !3905
  %call118 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %34, %union.tree_node* %35) #6, !dbg !3905
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !3802, metadata !DIExpression()), !dbg !3906
  %call120 = call i32 @get_or_alloc_constant_value_id(%union.tree_node* %call118) #7, !dbg !3907
  call void @llvm.dbg.value(metadata i32 %call120, metadata !3805, metadata !DIExpression()), !dbg !3906
  %set121 = getelementptr inbounds i8, i8* %vr_, i64 16, !dbg !3908
  %36 = bitcast i8* %set121 to i32*, !dbg !3908
  %37 = load i32, i32* %36, align 8, !dbg !3908
  %38 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3909
  %operands123 = getelementptr inbounds i8, i8* %vr_, i64 32, !dbg !3910
  %39 = bitcast i8* %operands123 to %struct.VEC_vn_reference_op_s_heap**, !dbg !3910
  %40 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %39, align 8, !dbg !3910
  %tobool124 = icmp eq %struct.VEC_vn_reference_op_s_heap* %40, null, !dbg !3910
  br i1 %tobool124, label %cond.end129, label %cond.true125, !dbg !3910

cond.true125:                                     ; preds = %if.then115
  %base127 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %40, i64 0, i32 0, !dbg !3910
  br label %cond.end129, !dbg !3910

cond.end129:                                      ; preds = %if.then115, %cond.true125
  %cond130 = phi %struct.VEC_vn_reference_op_s_base* [ %base127, %cond.true125 ], [ null, %if.then115 ], !dbg !3910
  %call131 = call fastcc %struct.VEC_vn_reference_op_s_heap* @VEC_vn_reference_op_s_heap_copy(%struct.VEC_vn_reference_op_s_base* %cond130) #7, !dbg !3910
  %call132 = call %struct.vn_reference_s* @vn_reference_insert_pieces(%union.tree_node* %vuse, i32 %37, %union.tree_node* %38, %struct.VEC_vn_reference_op_s_heap* %call131, %union.tree_node* %call118, i32 %call120) #7, !dbg !3911
  %41 = bitcast %struct.vn_reference_s* %call132 to i8*, !dbg !3911
  br label %cleanup136

cleanup136:                                       ; preds = %land.lhs.true110, %if.then98, %cond.end129
  %cleanup.dest.slot.1 = phi i1 [ false, %cond.end129 ], [ true, %land.lhs.true110 ], [ true, %if.then98 ]
  %retval.1 = phi i8* [ %41, %cond.end129 ], [ undef, %land.lhs.true110 ], [ undef, %if.then98 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8, !dbg !3912
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8, !dbg !3912
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8, !dbg !3912
  br i1 %cleanup.dest.slot.1, label %if.end352, label %cleanup353

if.else142:                                       ; preds = %land.lhs.true76, %if.else, %cond.end93, %land.lhs.true80
  %call143 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %2) #6, !dbg !3913
  %tobool145 = icmp eq i8 %call143, 0, !dbg !3913
  br i1 %tobool145, label %if.end352, label %land.lhs.true146, !dbg !3914

land.lhs.true146:                                 ; preds = %if.else142
  %call147 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3915
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3915
  %bf.load149 = load i64, i64* %42, align 8, !dbg !3915
  %bf.cast151 = and i64 %bf.load149, 65535, !dbg !3915
  %arrayidx152 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast151, !dbg !3915
  %43 = load i32, i32* %arrayidx152, align 4, !dbg !3915
  %cmp153 = icmp eq i32 %43, 3, !dbg !3915
  br i1 %cmp153, label %if.then183, label %lor.lhs.false, !dbg !3916

lor.lhs.false:                                    ; preds = %land.lhs.true146
  %call155 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3917
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %call155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3917
  %bf.load157 = load i64, i64* %44, align 8, !dbg !3917
  %bf.cast1596 = and i64 %bf.load157, 65535, !dbg !3917
  %cmp160 = icmp eq i64 %bf.cast1596, 47, !dbg !3917
  br i1 %cmp160, label %if.then183, label %lor.lhs.false162, !dbg !3917

lor.lhs.false162:                                 ; preds = %lor.lhs.false
  %call163 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3917
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %call163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3917
  %bf.load165 = load i64, i64* %45, align 8, !dbg !3917
  %bf.cast1677 = and i64 %bf.load165, 65535, !dbg !3917
  %cmp168 = icmp eq i64 %bf.cast1677, 48, !dbg !3917
  br i1 %cmp168, label %if.then183, label %lor.lhs.false170, !dbg !3917

lor.lhs.false170:                                 ; preds = %lor.lhs.false162
  %call171 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3917
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3917
  %bf.load173 = load i64, i64* %46, align 8, !dbg !3917
  %bf.cast1758 = and i64 %bf.load173, 65535, !dbg !3917
  %cmp176 = icmp eq i64 %bf.cast1758, 49, !dbg !3917
  br i1 %cmp176, label %if.then183, label %lor.lhs.false178, !dbg !3918

lor.lhs.false178:                                 ; preds = %lor.lhs.false170
  %call179 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3919
  %call180 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %call179) #7, !dbg !3920
  %tobool182 = icmp eq i8 %call180, 0, !dbg !3920
  br i1 %tobool182, label %if.end352, label %if.then183, !dbg !3921

if.then183:                                       ; preds = %lor.lhs.false178, %lor.lhs.false170, %lor.lhs.false162, %lor.lhs.false, %land.lhs.true146
  %47 = bitcast i64* %offset2185 to i8*, !dbg !3922
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8, !dbg !3922
  %48 = bitcast i64* %size2186 to i8*, !dbg !3922
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8, !dbg !3922
  %49 = bitcast i64* %maxsize2187 to i8*, !dbg !3922
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #8, !dbg !3922
  %50 = bitcast %struct.VEC_vn_reference_op_s_heap** %lhs to i8*, !dbg !3923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #8, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !3814, metadata !DIExpression()), !dbg !3924
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %lhs, align 8, !dbg !3925
  %51 = bitcast %struct.VEC_vn_reference_op_s_heap** %rhs to i8*, !dbg !3923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !3815, metadata !DIExpression()), !dbg !3924
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %rhs, align 8, !dbg !3926
  %52 = bitcast %struct.vn_reference_op_struct** %vro to i8*, !dbg !3927
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8, !dbg !3927
  %53 = bitcast %struct.ao_ref_s* %r to i8*, !dbg !3928
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #8, !dbg !3928
  %call188 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %2) #7, !dbg !3929
  call void @llvm.dbg.value(metadata i64* %offset2185, metadata !3809, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  call void @llvm.dbg.value(metadata i64* %size2186, metadata !3810, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  call void @llvm.dbg.value(metadata i64* %maxsize2187, metadata !3811, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  %call189 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %call188, i64* nonnull %offset2185, i64* nonnull %size2186, i64* nonnull %maxsize2187) #6, !dbg !3930
  call void @llvm.dbg.value(metadata %union.tree_node* %call189, metadata !3806, metadata !DIExpression()), !dbg !3924
  %call190 = call i32 @operand_equal_p(%union.tree_node* %call, %union.tree_node* %call189, i32 0) #6, !dbg !3931
  %tobool191 = icmp eq i32 %call190, 0, !dbg !3931
  %54 = load i64, i64* %offset2185, align 8, !dbg !3933
  call void @llvm.dbg.value(metadata i64 %54, metadata !3809, metadata !DIExpression()), !dbg !3924
  %cmp193 = icmp sgt i64 %54, %3, !dbg !3934
  %or.cond4 = or i1 %tobool191, %cmp193, !dbg !3935
  br i1 %or.cond4, label %cleanup340, label %lor.lhs.false195, !dbg !3935

lor.lhs.false195:                                 ; preds = %if.then183
  call void @llvm.dbg.value(metadata i64 %54, metadata !3809, metadata !DIExpression()), !dbg !3924
  %55 = load i64, i64* %size2186, align 8, !dbg !3936
  call void @llvm.dbg.value(metadata i64 %55, metadata !3810, metadata !DIExpression()), !dbg !3924
  %add196 = add nsw i64 %54, %55, !dbg !3937
  %add197 = add nsw i64 %3, %4, !dbg !3938
  %cmp198 = icmp slt i64 %add196, %add197, !dbg !3939
  br i1 %cmp198, label %cleanup340, label %if.end201, !dbg !3940

if.end201:                                        ; preds = %lor.lhs.false195
  %call202 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %2) #7, !dbg !3941
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %lhs, metadata !3814, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  call void @copy_reference_ops_from_ref(%union.tree_node* %call202, %struct.VEC_vn_reference_op_s_heap** nonnull %lhs) #7, !dbg !3942
  %operands203 = getelementptr inbounds i8, i8* %vr_, i64 32, !dbg !3943
  %56 = bitcast i8* %operands203 to %struct.VEC_vn_reference_op_s_heap**, !dbg !3943
  %57 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %56, align 8, !dbg !3943
  %tobool204 = icmp eq %struct.VEC_vn_reference_op_s_heap* %57, null, !dbg !3943
  br i1 %tobool204, label %cond.end209, label %cond.true205, !dbg !3943

cond.true205:                                     ; preds = %if.end201
  %base207 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %57, i64 0, i32 0, !dbg !3943
  br label %cond.end209, !dbg !3943

cond.end209:                                      ; preds = %if.end201, %cond.true205
  %cond210 = phi %struct.VEC_vn_reference_op_s_base* [ %base207, %cond.true205 ], [ null, %if.end201 ], !dbg !3943
  %call211 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond210) #7, !dbg !3943
  call void @llvm.dbg.value(metadata i32 %call211, metadata !3812, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3924
  %58 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %lhs, align 8, !dbg !3944
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %58, metadata !3814, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %58, metadata !3814, metadata !DIExpression()), !dbg !3924
  %base214 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %58, i64 0, i32 0, !dbg !3944
  %call218 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base214) #7, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %call218, metadata !3813, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3924
  br label %while.cond, !dbg !3945

while.cond:                                       ; preds = %while.body, %cond.end209
  %i.0.in = phi i32 [ %call211, %cond.end209 ], [ %i.0, %while.body ]
  %j.0.in = phi i32 [ %call218, %cond.end209 ], [ %j.0, %while.body ]
  %j.0 = add i32 %j.0.in, -1, !dbg !3924
  %i.0 = add i32 %i.0.in, -1, !dbg !3924
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3813, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3812, metadata !DIExpression()), !dbg !3924
  %59 = or i32 %j.0, %i.0, !dbg !3946
  %60 = icmp sgt i32 %59, -1, !dbg !3946
  br i1 %60, label %land.rhs, label %while.end, !dbg !3946

land.rhs:                                         ; preds = %while.cond
  %61 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %56, align 8, !dbg !3947
  %tobool226 = icmp eq %struct.VEC_vn_reference_op_s_heap* %61, null, !dbg !3947
  br i1 %tobool226, label %cond.end231, label %cond.true227, !dbg !3947

cond.true227:                                     ; preds = %land.rhs
  %base229 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %61, i64 0, i32 0, !dbg !3947
  br label %cond.end231, !dbg !3947

cond.end231:                                      ; preds = %land.rhs, %cond.true227
  %cond232 = phi %struct.VEC_vn_reference_op_s_base* [ %base229, %cond.true227 ], [ null, %land.rhs ], !dbg !3947
  %call233 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %cond232, i32 %i.0) #7, !dbg !3947
  %62 = bitcast %struct.vn_reference_op_struct* %call233 to i8*, !dbg !3947
  %63 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %lhs, align 8, !dbg !3948
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %63, metadata !3814, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %63, metadata !3814, metadata !DIExpression()), !dbg !3924
  %base236 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %63, i64 0, i32 0, !dbg !3948
  %call240 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_index(%struct.VEC_vn_reference_op_s_base* %base236, i32 %j.0) #7, !dbg !3948
  %64 = bitcast %struct.vn_reference_op_struct* %call240 to i8*, !dbg !3948
  %call241 = call fastcc i32 @vn_reference_op_eq(i8* %62, i8* %64) #7, !dbg !3949
  %tobool242 = icmp eq i32 %call241, 0, !dbg !3950
  br i1 %tobool242, label %while.end, label %while.body, !dbg !3945

while.body:                                       ; preds = %cond.end231
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3812, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3924
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3813, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3924
  br label %while.cond, !dbg !3945, !llvm.loop !3951

while.end:                                        ; preds = %cond.end231, %while.cond
  %i.0.in.lcssa = phi i32 [ %i.0.in, %cond.end231 ], [ %i.0.in, %while.cond ]
  %j.0.in.lcssa = phi i32 [ %j.0.in, %cond.end231 ], [ %j.0.in, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %lhs, metadata !3814, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %lhs) #7, !dbg !3953
  %cmp244 = icmp eq i32 %j.0.in.lcssa, 0, !dbg !3954
  br i1 %cmp244, label %if.end247, label %cleanup340, !dbg !3956

if.end247:                                        ; preds = %while.end
  %call248 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %2) #7, !dbg !3957
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %rhs, metadata !3815, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  call void @copy_reference_ops_from_ref(%union.tree_node* %call248, %struct.VEC_vn_reference_op_s_heap** nonnull %rhs) #7, !dbg !3958
  %65 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %rhs, align 8, !dbg !3959
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %65, metadata !3815, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %65, metadata !3815, metadata !DIExpression()), !dbg !3924
  %base252 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %65, i64 0, i32 0, !dbg !3959
  %call256 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base252) #7, !dbg !3959
  %add257 = add i32 %i.0.in.lcssa, %call256, !dbg !3960
  %66 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %56, align 8, !dbg !3961
  %tobool259 = icmp eq %struct.VEC_vn_reference_op_s_heap* %66, null, !dbg !3961
  br i1 %tobool259, label %cond.end264, label %cond.true260, !dbg !3961

cond.true260:                                     ; preds = %if.end247
  %base262 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %66, i64 0, i32 0, !dbg !3961
  br label %cond.end264, !dbg !3961

cond.end264:                                      ; preds = %if.end247, %cond.true260
  %cond265 = phi %struct.VEC_vn_reference_op_s_base* [ %base262, %cond.true260 ], [ null, %if.end247 ], !dbg !3961
  %call266 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %cond265) #7, !dbg !3961
  %cmp267 = icmp ugt i32 %add257, %call266, !dbg !3962
  %67 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %56, align 8, !dbg !3963
  br i1 %cmp267, label %if.then269, label %if.else289, !dbg !3964

if.then269:                                       ; preds = %cond.end264
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %67, metadata !3818, metadata !DIExpression()), !dbg !3965
  %68 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %rhs, align 8, !dbg !3966
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %68, metadata !3815, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %68, metadata !3815, metadata !DIExpression()), !dbg !3924
  %base275 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %68, i64 0, i32 0, !dbg !3966
  %call279 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base275) #7, !dbg !3966
  %add280 = add i32 %i.0.in.lcssa, %call279, !dbg !3966
  call fastcc void @VEC_vn_reference_op_s_heap_safe_grow(%struct.VEC_vn_reference_op_s_heap** nonnull %56, i32 %add280) #7, !dbg !3966
  %69 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !3967
  %cmp281 = icmp eq %struct.VEC_vn_reference_op_s_heap* %67, %69, !dbg !3969
  br i1 %cmp281, label %land.lhs.true283, label %if.end307, !dbg !3970

land.lhs.true283:                                 ; preds = %if.then269
  %70 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %56, align 8, !dbg !3971
  %cmp285 = icmp eq %struct.VEC_vn_reference_op_s_heap* %70, %67, !dbg !3972
  br i1 %cmp285, label %if.end307, label %if.then287, !dbg !3973

if.then287:                                       ; preds = %land.lhs.true283
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !3974
  br label %if.end307, !dbg !3975

if.else289:                                       ; preds = %cond.end264
  %tobool291 = icmp eq %struct.VEC_vn_reference_op_s_heap* %67, null, !dbg !3976
  br i1 %tobool291, label %cond.end296, label %cond.true292, !dbg !3976

cond.true292:                                     ; preds = %if.else289
  %base294 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %67, i64 0, i32 0, !dbg !3976
  br label %cond.end296, !dbg !3976

cond.end296:                                      ; preds = %if.else289, %cond.true292
  %cond297 = phi %struct.VEC_vn_reference_op_s_base* [ %base294, %cond.true292 ], [ null, %if.else289 ], !dbg !3976
  %71 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %rhs, align 8, !dbg !3976
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %71, metadata !3815, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %71, metadata !3815, metadata !DIExpression()), !dbg !3924
  %base301 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %71, i64 0, i32 0, !dbg !3976
  %call305 = call fastcc i32 @VEC_vn_reference_op_s_base_length(%struct.VEC_vn_reference_op_s_base* %base301) #7, !dbg !3976
  %add306 = add i32 %i.0.in.lcssa, %call305, !dbg !3976
  call fastcc void @VEC_vn_reference_op_s_base_truncate(%struct.VEC_vn_reference_op_s_base* %cond297, i32 %add306) #7, !dbg !3976
  br label %if.end307

if.end307:                                        ; preds = %land.lhs.true283, %if.then269, %if.then287, %cond.end296
  call void @llvm.dbg.value(metadata i32 0, metadata !3813, metadata !DIExpression()), !dbg !3924
  br label %for.cond, !dbg !3977

for.cond:                                         ; preds = %cond.end322, %if.end307
  %j.1 = phi i32 [ 0, %if.end307 ], [ %inc, %cond.end322 ], !dbg !3979
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !3813, metadata !DIExpression()), !dbg !3924
  %72 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %rhs, align 8, !dbg !3980
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %72, metadata !3815, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %72, metadata !3815, metadata !DIExpression()), !dbg !3924
  %base310 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %72, i64 0, i32 0, !dbg !3980
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct** %vro, metadata !3816, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  %call314 = call fastcc i32 @VEC_vn_reference_op_s_base_iterate(%struct.VEC_vn_reference_op_s_base* %base310, i32 %j.1, %struct.vn_reference_op_struct** nonnull %vro) #7, !dbg !3980
  %tobool315 = icmp eq i32 %call314, 0, !dbg !3982
  br i1 %tobool315, label %for.end, label %for.body, !dbg !3982

for.body:                                         ; preds = %for.cond
  %73 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %56, align 8, !dbg !3983
  %tobool317 = icmp eq %struct.VEC_vn_reference_op_s_heap* %73, null, !dbg !3983
  br i1 %tobool317, label %cond.end322, label %cond.true318, !dbg !3983

cond.true318:                                     ; preds = %for.body
  %base320 = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %73, i64 0, i32 0, !dbg !3983
  br label %cond.end322, !dbg !3983

cond.end322:                                      ; preds = %for.body, %cond.true318
  %cond323 = phi %struct.VEC_vn_reference_op_s_base* [ %base320, %cond.true318 ], [ null, %for.body ], !dbg !3983
  %add325 = add nsw i32 %i.0.in.lcssa, %j.1, !dbg !3983
  %74 = load %struct.vn_reference_op_struct*, %struct.vn_reference_op_struct** %vro, align 8, !dbg !3983
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %74, metadata !3816, metadata !DIExpression()), !dbg !3924
  %call326 = call fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_replace(%struct.VEC_vn_reference_op_s_base* %cond323, i32 %add325, %struct.vn_reference_op_struct* %74) #7, !dbg !3983
  %inc = add nuw nsw i32 %j.1, 1, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3813, metadata !DIExpression()), !dbg !3924
  br label %for.cond, !dbg !3985, !llvm.loop !3986

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %rhs, metadata !3815, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %rhs) #7, !dbg !3988
  %call327 = call i32 @vn_reference_compute_hash(%struct.vn_reference_s* %0) #7, !dbg !3989
  %hashcode = getelementptr inbounds i8, i8* %vr_, i64 4, !dbg !3990
  %75 = bitcast i8* %hashcode to i32*, !dbg !3990
  store i32 %call327, i32* %75, align 4, !dbg !3991
  %set328 = getelementptr inbounds i8, i8* %vr_, i64 16, !dbg !3992
  %76 = bitcast i8* %set328 to i32*, !dbg !3992
  %77 = load i32, i32* %76, align 8, !dbg !3992
  %78 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3994
  %79 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %56, align 8, !dbg !3995
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %r, metadata !3817, metadata !DIExpression(DW_OP_deref)), !dbg !3924
  %call331 = call zeroext i8 @ao_ref_init_from_vn_reference(%struct.ao_ref_s* nonnull %r, i32 %77, %union.tree_node* %78, %struct.VEC_vn_reference_op_s_heap* %79) #7, !dbg !3996
  %tobool332 = icmp eq i8 %call331, 0, !dbg !3996
  br i1 %tobool332, label %cleanup340, label %if.end334, !dbg !3997

if.end334:                                        ; preds = %for.end
  %size = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 3, !dbg !3998
  %80 = load i64, i64* %size, align 8, !dbg !3998
  %size335 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %r, i64 0, i32 3, !dbg !4000
  %81 = load i64, i64* %size335, align 8, !dbg !4000
  %cmp336 = icmp eq i64 %80, %81, !dbg !4001
  br i1 %cmp336, label %if.end339, label %cleanup340, !dbg !4002

if.end339:                                        ; preds = %if.end334
  %82 = bitcast %struct.ao_ref_s* %ref to i8*, !dbg !4003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %53, i64 48, i1 false), !dbg !4003
  store %union.tree_node** null, %union.tree_node*** @last_vuse_ptr, align 8, !dbg !4004
  br label %cleanup340, !dbg !4005

cleanup340:                                       ; preds = %if.end334, %for.end, %while.end, %lor.lhs.false195, %if.then183, %if.end339
  %retval.2 = phi i8* [ null, %if.end339 ], [ inttoptr (i64 -1 to i8*), %if.then183 ], [ inttoptr (i64 -1 to i8*), %lor.lhs.false195 ], [ inttoptr (i64 -1 to i8*), %while.end ], [ inttoptr (i64 -1 to i8*), %for.end ], [ inttoptr (i64 -1 to i8*), %if.end334 ], !dbg !3924
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #8, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #8, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8, !dbg !4006
  br label %cleanup353

if.end352:                                        ; preds = %lor.lhs.false178, %if.else142, %cleanup136, %cleanup
  br label %cleanup353, !dbg !4007

cleanup353:                                       ; preds = %entry, %cleanup, %cleanup136, %if.end352, %cleanup340
  %retval.3 = phi i8* [ %retval.0, %cleanup ], [ inttoptr (i64 -1 to i8*), %if.end352 ], [ %retval.1, %cleanup136 ], [ %retval.2, %cleanup340 ], [ inttoptr (i64 -1 to i8*), %entry ], !dbg !3821
  ret i8* %retval.3, !dbg !4008
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vn_reference_lookup(%union.tree_node* %op, %union.tree_node* %vuse, i8 zeroext %maywalk, %struct.vn_reference_s** %vnresult) local_unnamed_addr #4 !dbg !4009 {
entry:
  %vr1 = alloca %struct.vn_reference_s, align 8
  %r = alloca %struct.ao_ref_s, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4013, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !4014, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.value(metadata i8 %maywalk, metadata !4015, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.value(metadata %struct.vn_reference_s** %vnresult, metadata !4016, metadata !DIExpression()), !dbg !4023
  %0 = bitcast %struct.vn_reference_s* %vr1 to i8*, !dbg !4024
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #8, !dbg !4024
  %tobool = icmp eq %struct.vn_reference_s** %vnresult, null, !dbg !4025
  br i1 %tobool, label %if.end, label %if.then, !dbg !4027

if.then:                                          ; preds = %entry
  store %struct.vn_reference_s* null, %struct.vn_reference_s** %vnresult, align 8, !dbg !4028
  br label %if.end, !dbg !4029

if.end:                                           ; preds = %entry, %if.then
  %tobool1 = icmp eq %union.tree_node* %vuse, null, !dbg !4030
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !4030

cond.true:                                        ; preds = %if.end
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %vuse) #7, !dbg !4031
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 0, !dbg !4031
  %1 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !4031
  br label %cond.end, !dbg !4030

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ null, %if.end ], !dbg !4030
  %vuse2 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 2, !dbg !4032
  store %union.tree_node* %cond, %union.tree_node** %vuse2, align 8, !dbg !4033
  %call3 = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_shared_reference_ops_from_ref(%union.tree_node* %op) #7, !dbg !4034
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %call3, metadata !4017, metadata !DIExpression()), !dbg !4023
  %operands4 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 5, !dbg !4035
  store %struct.VEC_vn_reference_op_s_heap* %call3, %struct.VEC_vn_reference_op_s_heap** %operands4, align 8, !dbg !4036
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4037
  %2 = bitcast %union.tree_node** %type to i64*, !dbg !4037
  %3 = load i64, i64* %2, align 8, !dbg !4037
  %type5 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 4, !dbg !4038
  %4 = bitcast %union.tree_node** %type5 to i64*, !dbg !4039
  store i64 %3, i64* %4, align 8, !dbg !4039
  %call6 = tail call i32 @get_alias_set(%union.tree_node* %op) #6, !dbg !4040
  %set = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 3, !dbg !4041
  store i32 %call6, i32* %set, align 8, !dbg !4042
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr1, metadata !4018, metadata !DIExpression(DW_OP_deref)), !dbg !4023
  %call7 = call i32 @vn_reference_compute_hash(%struct.vn_reference_s* nonnull %vr1) #7, !dbg !4043
  %hashcode = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 1, !dbg !4044
  store i32 %call7, i32* %hashcode, align 4, !dbg !4045
  %tobool8 = icmp eq i8 %maywalk, 0, !dbg !4046
  br i1 %tobool8, label %if.end26, label %land.lhs.true, !dbg !4047

land.lhs.true:                                    ; preds = %cond.end
  %5 = load %union.tree_node*, %union.tree_node** %vuse2, align 8, !dbg !4048
  %tobool10 = icmp eq %union.tree_node* %5, null, !dbg !4049
  br i1 %tobool10, label %if.end26, label %if.then11, !dbg !4050

if.then11:                                        ; preds = %land.lhs.true
  %6 = bitcast %struct.ao_ref_s* %r to i8*, !dbg !4051
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #8, !dbg !4051
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %r, metadata !4022, metadata !DIExpression(DW_OP_deref)), !dbg !4052
  call void @ao_ref_init(%struct.ao_ref_s* nonnull %r, %union.tree_node* %op) #6, !dbg !4053
  %7 = load %union.tree_node*, %union.tree_node** %vuse2, align 8, !dbg !4054
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %r, metadata !4022, metadata !DIExpression(DW_OP_deref)), !dbg !4052
  %call13 = call i8* @walk_non_aliased_vuses(%struct.ao_ref_s* nonnull %r, %union.tree_node* %7, i8* (%struct.ao_ref_s*, %union.tree_node*, i8*)* nonnull @vn_reference_lookup_2, i8* (%struct.ao_ref_s*, %union.tree_node*, i8*)* nonnull @vn_reference_lookup_3, i8* nonnull %0) #6, !dbg !4055
  call void @llvm.dbg.value(metadata i8* %call13, metadata !4019, metadata !DIExpression()), !dbg !4052
  %8 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %operands4, align 8, !dbg !4056
  %cmp = icmp eq %struct.VEC_vn_reference_op_s_heap* %8, %call3, !dbg !4058
  br i1 %cmp, label %if.end18, label %if.then16, !dbg !4059

if.then16:                                        ; preds = %if.then11
  call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %operands4) #7, !dbg !4060
  br label %if.end18, !dbg !4060

if.end18:                                         ; preds = %if.then11, %if.then16
  %tobool19 = icmp eq i8* %call13, null, !dbg !4061
  br i1 %tobool19, label %cleanup, label %if.then20, !dbg !4063

if.then20:                                        ; preds = %if.end18
  br i1 %tobool, label %if.end23, label %if.then22, !dbg !4064

if.then22:                                        ; preds = %if.then20
  %9 = bitcast %struct.vn_reference_s** %vnresult to i8**, !dbg !4066
  store i8* %call13, i8** %9, align 8, !dbg !4066
  br label %if.end23, !dbg !4068

if.end23:                                         ; preds = %if.then20, %if.then22
  %result = getelementptr inbounds i8, i8* %call13, i64 40, !dbg !4069
  %10 = bitcast i8* %result to %union.tree_node**, !dbg !4069
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !4069
  br label %cleanup, !dbg !4070

cleanup:                                          ; preds = %if.end18, %if.end23
  %retval.0 = phi %union.tree_node* [ %11, %if.end23 ], [ null, %if.end18 ], !dbg !4052
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #8, !dbg !4071
  br label %cleanup28

if.end26:                                         ; preds = %land.lhs.true, %cond.end
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr1, metadata !4018, metadata !DIExpression(DW_OP_deref)), !dbg !4023
  %call27 = call fastcc %union.tree_node* @vn_reference_lookup_1(%struct.vn_reference_s* nonnull %vr1, %struct.vn_reference_s** %vnresult) #7, !dbg !4072
  br label %cleanup28, !dbg !4073

cleanup28:                                        ; preds = %if.end26, %cleanup
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %call27, %if.end26 ], !dbg !4023
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #8, !dbg !4074
  ret %union.tree_node* %retval.1, !dbg !4074
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_shared_reference_ops_from_ref(%union.tree_node* %ref) unnamed_addr #4 !dbg !4075 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !4079, metadata !DIExpression()), !dbg !4080
  %tobool = icmp eq %union.tree_node* %ref, null, !dbg !4081
  br i1 %tobool, label %return, label %if.end, !dbg !4083

if.end:                                           ; preds = %entry
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !4084
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !4084
  tail call fastcc void @VEC_vn_reference_op_s_base_truncate(%struct.VEC_vn_reference_op_s_base* %base, i32 0) #7, !dbg !4084
  tail call void @copy_reference_ops_from_ref(%union.tree_node* nonnull %ref, %struct.VEC_vn_reference_op_s_heap** nonnull @shared_lookup_references) #7, !dbg !4085
  %1 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !4086
  %call = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_refs(%struct.VEC_vn_reference_op_s_heap* %1) #7, !dbg !4087
  store %struct.VEC_vn_reference_op_s_heap* %call, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !4088
  br label %return, !dbg !4089

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.VEC_vn_reference_op_s_heap* [ %call, %if.end ], [ null, %entry ], !dbg !4080
  ret %struct.VEC_vn_reference_op_s_heap* %retval.0, !dbg !4090
}

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @ao_ref_init(%struct.ao_ref_s*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.vn_reference_s* @vn_reference_insert(%union.tree_node* %op, %union.tree_node* %result, %union.tree_node* %vuse) local_unnamed_addr #4 !dbg !4091 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4095, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !4096, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !4097, metadata !DIExpression()), !dbg !4100
  %0 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4101
  %references_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 5, !dbg !4102
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %references_pool, align 8, !dbg !4102
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %1) #6, !dbg !4103
  %2 = bitcast i8* %call to %struct.vn_reference_s*, !dbg !4104
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %2, metadata !4099, metadata !DIExpression()), !dbg !4100
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %result, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4105
  %bf.load = load i64, i64* %3, align 8, !dbg !4105
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4107
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4107
  br i1 %cmp, label %if.then, label %if.else, !dbg !4108

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %result) #7, !dbg !4109
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call1, i64 0, i32 2, !dbg !4110
  %4 = load i32, i32* %value_id, align 8, !dbg !4110
  %value_id2 = bitcast i8* %call to i32*, !dbg !4111
  store i32 %4, i32* %value_id2, align 8, !dbg !4112
  br label %if.end, !dbg !4113

if.else:                                          ; preds = %entry
  %call3 = tail call i32 @get_or_alloc_constant_value_id(%union.tree_node* %result) #7, !dbg !4114
  %value_id4 = bitcast i8* %call to i32*, !dbg !4115
  store i32 %call3, i32* %value_id4, align 8, !dbg !4116
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tobool = icmp eq %union.tree_node* %vuse, null, !dbg !4117
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4117

cond.true:                                        ; preds = %if.end
  %call5 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %vuse) #7, !dbg !4118
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call5, i64 0, i32 0, !dbg !4118
  %5 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !4118
  br label %cond.end, !dbg !4117

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %union.tree_node* [ %5, %cond.true ], [ null, %if.end ], !dbg !4117
  %vuse6 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4119
  %6 = bitcast i8* %vuse6 to %union.tree_node**, !dbg !4119
  store %union.tree_node* %cond, %union.tree_node** %6, align 8, !dbg !4120
  %call7 = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @create_reference_ops_from_ref(%union.tree_node* %op) #7, !dbg !4121
  %call8 = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_refs(%struct.VEC_vn_reference_op_s_heap* %call7) #7, !dbg !4122
  %operands = getelementptr inbounds i8, i8* %call, i64 32, !dbg !4123
  %7 = bitcast i8* %operands to %struct.VEC_vn_reference_op_s_heap**, !dbg !4123
  store %struct.VEC_vn_reference_op_s_heap* %call8, %struct.VEC_vn_reference_op_s_heap** %7, align 8, !dbg !4124
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4125
  %8 = bitcast %union.tree_node** %type to i64*, !dbg !4125
  %9 = load i64, i64* %8, align 8, !dbg !4125
  %type9 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4126
  %10 = bitcast i8* %type9 to i64*, !dbg !4127
  store i64 %9, i64* %10, align 8, !dbg !4127
  %call10 = tail call i32 @get_alias_set(%union.tree_node* %op) #6, !dbg !4128
  %set = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4129
  %11 = bitcast i8* %set to i32*, !dbg !4129
  store i32 %call10, i32* %11, align 8, !dbg !4130
  %call11 = tail call i32 @vn_reference_compute_hash(%struct.vn_reference_s* %2) #7, !dbg !4131
  %hashcode = getelementptr inbounds i8, i8* %call, i64 4, !dbg !4132
  %12 = bitcast i8* %hashcode to i32*, !dbg !4132
  store i32 %call11, i32* %12, align 4, !dbg !4133
  %bf.load13 = load i64, i64* %3, align 8, !dbg !4134
  %bf.cast152 = and i64 %bf.load13, 65535, !dbg !4135
  %cmp16 = icmp eq i64 %bf.cast152, 141, !dbg !4135
  br i1 %cmp16, label %cond.true17, label %cond.end21, !dbg !4134

cond.true17:                                      ; preds = %cond.end
  %call18 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %result) #7, !dbg !4136
  %valnum19 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call18, i64 0, i32 0, !dbg !4136
  %13 = load %union.tree_node*, %union.tree_node** %valnum19, align 8, !dbg !4136
  %.pre = load i32, i32* %12, align 4, !dbg !4137
  br label %cond.end21, !dbg !4134

cond.end21:                                       ; preds = %cond.end, %cond.true17
  %14 = phi i32 [ %.pre, %cond.true17 ], [ %call11, %cond.end ], !dbg !4137
  %cond22 = phi %union.tree_node* [ %13, %cond.true17 ], [ %result, %cond.end ], !dbg !4134
  %result23 = getelementptr inbounds i8, i8* %call, i64 40, !dbg !4138
  %15 = bitcast i8* %result23 to %union.tree_node**, !dbg !4138
  store %union.tree_node* %cond22, %union.tree_node** %15, align 8, !dbg !4139
  %16 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4140
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %16, i64 0, i32 2, !dbg !4141
  %17 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !4141
  %call25 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %17, i8* %call, i32 %14, i32 1) #6, !dbg !4142
  call void @llvm.dbg.value(metadata i8** %call25, metadata !4098, metadata !DIExpression()), !dbg !4100
  %18 = load i8*, i8** %call25, align 8, !dbg !4143
  %tobool26 = icmp eq i8* %18, null, !dbg !4143
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !4145

if.then27:                                        ; preds = %cond.end21
  tail call void @free_reference(i8* nonnull %18) #7, !dbg !4146
  br label %if.end28, !dbg !4146

if.end28:                                         ; preds = %cond.end21, %if.then27
  store i8* %call, i8** %call25, align 8, !dbg !4147
  ret %struct.vn_reference_s* %2, !dbg !4148
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_vn_reference_op_s_heap* @create_reference_ops_from_ref(%union.tree_node* %ref) unnamed_addr #4 !dbg !4149 {
entry:
  %result = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !4151, metadata !DIExpression()), !dbg !4153
  %0 = bitcast %struct.VEC_vn_reference_op_s_heap** %result to i8*, !dbg !4154
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4154
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !4152, metadata !DIExpression()), !dbg !4153
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %result, align 8, !dbg !4155
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %result, metadata !4152, metadata !DIExpression(DW_OP_deref)), !dbg !4153
  call void @copy_reference_ops_from_ref(%union.tree_node* %ref, %struct.VEC_vn_reference_op_s_heap** nonnull %result) #7, !dbg !4156
  %1 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %result, align 8, !dbg !4157
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %1, metadata !4152, metadata !DIExpression()), !dbg !4153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4158
  ret %struct.VEC_vn_reference_op_s_heap* %1, !dbg !4159
}

; Function Attrs: nounwind uwtable
define internal void @free_reference(i8* %vp) #4 !dbg !4160 {
entry:
  call void @llvm.dbg.value(metadata i8* %vp, metadata !4162, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i8* %vp, metadata !4163, metadata !DIExpression()), !dbg !4164
  %operands = getelementptr inbounds i8, i8* %vp, i64 32, !dbg !4165
  %0 = bitcast i8* %operands to %struct.VEC_vn_reference_op_s_heap**, !dbg !4165
  tail call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull %0) #7, !dbg !4165
  ret void, !dbg !4166
}

; Function Attrs: nounwind uwtable
define dso_local %struct.vn_reference_s* @vn_reference_insert_pieces(%union.tree_node* %vuse, i32 %set, %union.tree_node* %type, %struct.VEC_vn_reference_op_s_heap* %operands, %union.tree_node* %result, i32 %value_id) local_unnamed_addr #4 !dbg !4167 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !4171, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 %set, metadata !4172, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4173, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %operands, metadata !4174, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !4175, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 %value_id, metadata !4176, metadata !DIExpression()), !dbg !4179
  %0 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4180
  %references_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 5, !dbg !4181
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %references_pool, align 8, !dbg !4181
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %1) #6, !dbg !4182
  %2 = bitcast i8* %call to %struct.vn_reference_s*, !dbg !4183
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %2, metadata !4178, metadata !DIExpression()), !dbg !4179
  %value_id1 = bitcast i8* %call to i32*, !dbg !4184
  store i32 %value_id, i32* %value_id1, align 8, !dbg !4185
  %tobool = icmp eq %union.tree_node* %vuse, null, !dbg !4186
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4186

cond.true:                                        ; preds = %entry
  %call2 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %vuse) #7, !dbg !4187
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call2, i64 0, i32 0, !dbg !4187
  %3 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !4187
  br label %cond.end, !dbg !4186

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %3, %cond.true ], [ null, %entry ], !dbg !4186
  %vuse3 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4188
  %4 = bitcast i8* %vuse3 to %union.tree_node**, !dbg !4188
  store %union.tree_node* %cond, %union.tree_node** %4, align 8, !dbg !4189
  %call4 = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_refs(%struct.VEC_vn_reference_op_s_heap* %operands) #7, !dbg !4190
  %operands5 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !4191
  %5 = bitcast i8* %operands5 to %struct.VEC_vn_reference_op_s_heap**, !dbg !4191
  store %struct.VEC_vn_reference_op_s_heap* %call4, %struct.VEC_vn_reference_op_s_heap** %5, align 8, !dbg !4192
  %type6 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4193
  %6 = bitcast i8* %type6 to %union.tree_node**, !dbg !4193
  store %union.tree_node* %type, %union.tree_node** %6, align 8, !dbg !4194
  %set7 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4195
  %7 = bitcast i8* %set7 to i32*, !dbg !4195
  store i32 %set, i32* %7, align 8, !dbg !4196
  %call8 = tail call i32 @vn_reference_compute_hash(%struct.vn_reference_s* %2) #7, !dbg !4197
  %hashcode = getelementptr inbounds i8, i8* %call, i64 4, !dbg !4198
  %8 = bitcast i8* %hashcode to i32*, !dbg !4198
  store i32 %call8, i32* %8, align 4, !dbg !4199
  %tobool9 = icmp eq %union.tree_node* %result, null, !dbg !4200
  br i1 %tobool9, label %if.end, label %land.lhs.true, !dbg !4202

land.lhs.true:                                    ; preds = %cond.end
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %result, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4203
  %bf.load = load i64, i64* %9, align 8, !dbg !4203
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4204
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4204
  br i1 %cmp, label %if.then, label %if.end, !dbg !4205

if.then:                                          ; preds = %land.lhs.true
  %call10 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %result) #7, !dbg !4206
  %valnum11 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call10, i64 0, i32 0, !dbg !4206
  %10 = load %union.tree_node*, %union.tree_node** %valnum11, align 8, !dbg !4206
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4175, metadata !DIExpression()), !dbg !4179
  %.pre = load i32, i32* %8, align 4, !dbg !4207
  br label %if.end, !dbg !4208

if.end:                                           ; preds = %cond.end, %if.then, %land.lhs.true
  %11 = phi i32 [ %.pre, %if.then ], [ %call8, %land.lhs.true ], [ %call8, %cond.end ], !dbg !4207
  %result.addr.0 = phi %union.tree_node* [ %10, %if.then ], [ %result, %land.lhs.true ], [ null, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %result.addr.0, metadata !4175, metadata !DIExpression()), !dbg !4179
  %result12 = getelementptr inbounds i8, i8* %call, i64 40, !dbg !4209
  %12 = bitcast i8* %result12 to %union.tree_node**, !dbg !4209
  store %union.tree_node* %result.addr.0, %union.tree_node** %12, align 8, !dbg !4210
  %13 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4211
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %13, i64 0, i32 2, !dbg !4212
  %14 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !4212
  %call14 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %14, i8* %call, i32 %11, i32 1) #6, !dbg !4213
  call void @llvm.dbg.value(metadata i8** %call14, metadata !4177, metadata !DIExpression()), !dbg !4179
  %15 = load i8*, i8** %call14, align 8, !dbg !4214
  %tobool15 = icmp eq i8* %15, null, !dbg !4214
  br i1 %tobool15, label %cond.end18, label %cond.true16, !dbg !4214

cond.true16:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 1355, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4214
  %.pre2 = load i8*, i8** %call14, align 8, !dbg !4215
  br label %cond.end18, !dbg !4214

cond.end18:                                       ; preds = %if.end, %cond.true16
  %16 = phi i8* [ null, %if.end ], [ %.pre2, %cond.true16 ], !dbg !4215
  %tobool20 = icmp eq i8* %16, null, !dbg !4215
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !4217

if.then21:                                        ; preds = %cond.end18
  tail call void @free_reference(i8* nonnull %16) #7, !dbg !4218
  br label %if.end22, !dbg !4218

if.end22:                                         ; preds = %cond.end18, %if.then21
  store i8* %call, i8** %call14, align 8, !dbg !4219
  ret %struct.vn_reference_s* %2, !dbg !4220
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vn_nary_op_compute_hash(%struct.vn_nary_op_s* %vno1) local_unnamed_addr #4 !dbg !4221 {
entry:
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %vno1, metadata !4226, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 0, metadata !4228, metadata !DIExpression()), !dbg !4232
  %length = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 1, !dbg !4233
  br label %for.cond, !dbg !4236

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc ], [ 0, %entry ], !dbg !4237
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !4228, metadata !DIExpression()), !dbg !4232
  %bf.load = load i32, i32* %length, align 4, !dbg !4238
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4238
  %0 = zext i32 %bf.lshr to i64, !dbg !4239
  %cmp = icmp ult i64 %indvars.iv2, %0, !dbg !4239
  br i1 %cmp, label %for.body, label %for.end, !dbg !4240

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 %indvars.iv2, !dbg !4241
  %1 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !4241
  %2 = load i64*, i64** %1, align 8, !dbg !4241
  %bf.load1 = load i64, i64* %2, align 8, !dbg !4241
  %bf.cast1 = and i64 %bf.load1, 65535, !dbg !4243
  %cmp2 = icmp eq i64 %bf.cast1, 141, !dbg !4243
  br i1 %cmp2, label %if.then, label %for.inc, !dbg !4244

if.then:                                          ; preds = %for.body
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !4244
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %3) #7, !dbg !4245
  %4 = bitcast %struct.vn_ssa_aux* %call to i64*, !dbg !4245
  %5 = load i64, i64* %4, align 8, !dbg !4245
  %6 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !4246
  store i64 %5, i64* %6, align 8, !dbg !4246
  br label %for.inc, !dbg !4247

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !4248
  call void @llvm.dbg.value(metadata i32 undef, metadata !4228, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4232
  br label %for.cond, !dbg !4249, !llvm.loop !4250

for.end:                                          ; preds = %for.cond
  %bf.load.lcssa = phi i32 [ %bf.load, %for.cond ], !dbg !4238
  %bf.lshr11.mask = and i32 %bf.load.lcssa, -65536, !dbg !4252
  %cmp12 = icmp eq i32 %bf.lshr11.mask, 131072, !dbg !4252
  br i1 %cmp12, label %land.lhs.true, label %if.end33, !dbg !4253

land.lhs.true:                                    ; preds = %for.end
  %bf.clear14 = and i32 %bf.load.lcssa, 65535, !dbg !4254
  %call15 = tail call zeroext i8 @commutative_tree_code(i32 %bf.clear14) #6, !dbg !4255
  %tobool = icmp eq i8 %call15, 0, !dbg !4255
  br i1 %tobool, label %if.end33, label %land.lhs.true16, !dbg !4256

land.lhs.true16:                                  ; preds = %land.lhs.true
  %arrayidx18 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 0, !dbg !4257
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !4257
  %arrayidx20 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 1, !dbg !4258
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx20, align 8, !dbg !4258
  %call21 = tail call zeroext i8 @tree_swap_operands_p(%union.tree_node* %7, %union.tree_node* %8, i8 zeroext 0) #6, !dbg !4259
  %tobool23 = icmp eq i8 %call21, 0, !dbg !4259
  br i1 %tobool23, label %if.end33, label %if.then24, !dbg !4260

if.then24:                                        ; preds = %land.lhs.true16
  %9 = bitcast %union.tree_node** %arrayidx18 to i64*, !dbg !4261
  %10 = load i64, i64* %9, align 8, !dbg !4261
  %11 = bitcast %union.tree_node** %arrayidx20 to i64*, !dbg !4262
  %12 = load i64, i64* %11, align 8, !dbg !4262
  %op29 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, !dbg !4263
  %13 = bitcast [4 x %union.tree_node*]* %op29 to i64*, !dbg !4264
  store i64 %12, i64* %13, align 8, !dbg !4264
  store i64 %10, i64* %11, align 8, !dbg !4265
  br label %if.end33, !dbg !4266

if.end33:                                         ; preds = %land.lhs.true16, %land.lhs.true, %if.then24, %for.end
  %bf.load35 = load i32, i32* %length, align 4, !dbg !4267
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !4267
  %call37 = tail call i32 @iterative_hash_hashval_t(i32 %bf.clear36, i32 0) #6, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %call37, metadata !4227, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 0, metadata !4228, metadata !DIExpression()), !dbg !4232
  br label %for.cond38, !dbg !4269

for.cond38:                                       ; preds = %for.body44, %if.end33
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body44 ], [ 0, %if.end33 ], !dbg !4232
  %hash.0 = phi i32 [ %call48, %for.body44 ], [ %call37, %if.end33 ], !dbg !4232
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4228, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 %hash.0, metadata !4227, metadata !DIExpression()), !dbg !4232
  %bf.load40 = load i32, i32* %length, align 4, !dbg !4271
  %bf.lshr41 = lshr i32 %bf.load40, 16, !dbg !4271
  %14 = zext i32 %bf.lshr41 to i64, !dbg !4273
  %cmp42 = icmp ult i64 %indvars.iv, %14, !dbg !4273
  br i1 %cmp42, label %for.body44, label %for.end51, !dbg !4274

for.body44:                                       ; preds = %for.cond38
  %arrayidx47 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 %indvars.iv, !dbg !4275
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx47, align 8, !dbg !4275
  %call48 = tail call i32 @iterative_hash_expr(%union.tree_node* %15, i32 %hash.0) #6, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %call48, metadata !4227, metadata !DIExpression()), !dbg !4232
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4277
  call void @llvm.dbg.value(metadata i32 undef, metadata !4228, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4232
  br label %for.cond38, !dbg !4278, !llvm.loop !4279

for.end51:                                        ; preds = %for.cond38
  %hash.0.lcssa = phi i32 [ %hash.0, %for.cond38 ], !dbg !4232
  call void @llvm.dbg.value(metadata i32 %hash.0.lcssa, metadata !4227, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 %hash.0.lcssa, metadata !4227, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 %hash.0.lcssa, metadata !4227, metadata !DIExpression()), !dbg !4232
  ret i32 %hash.0.lcssa, !dbg !4281
}

declare dso_local zeroext i8 @commutative_tree_code(i32) local_unnamed_addr #1

declare dso_local zeroext i8 @tree_swap_operands_p(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #1

declare dso_local i32 @iterative_hash_hashval_t(i32, i32) local_unnamed_addr #1

declare dso_local i32 @iterative_hash_expr(%union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @vn_nary_op_eq(i8* %p1, i8* %p2) #4 !dbg !4282 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !4284, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %p2, metadata !4285, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %p1, metadata !4286, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %p2, metadata !4288, metadata !DIExpression()), !dbg !4290
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !4291
  %0 = bitcast i8* %hashcode to i32*, !dbg !4291
  %1 = load i32, i32* %0, align 8, !dbg !4291
  %hashcode1 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !4293
  %2 = bitcast i8* %hashcode1 to i32*, !dbg !4293
  %3 = load i32, i32* %2, align 8, !dbg !4293
  %cmp = icmp eq i32 %1, %3, !dbg !4294
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4295

if.end:                                           ; preds = %entry
  %opcode = getelementptr inbounds i8, i8* %p1, i64 4, !dbg !4296
  %4 = bitcast i8* %opcode to i32*, !dbg !4296
  %bf.load = load i32, i32* %4, align 4, !dbg !4296
  %opcode2 = getelementptr inbounds i8, i8* %p2, i64 4, !dbg !4298
  %5 = bitcast i8* %opcode2 to i32*, !dbg !4298
  %bf.load3 = load i32, i32* %5, align 4, !dbg !4298
  %6 = xor i32 %bf.load, %bf.load3, !dbg !4299
  %7 = and i32 %6, 65535, !dbg !4299
  %cmp5 = icmp eq i32 %7, 0, !dbg !4299
  br i1 %cmp5, label %lor.lhs.false, label %cleanup, !dbg !4300

lor.lhs.false:                                    ; preds = %if.end
  %type = getelementptr inbounds i8, i8* %p1, i64 24, !dbg !4301
  %8 = bitcast i8* %type to %union.tree_node**, !dbg !4301
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4301
  %type6 = getelementptr inbounds i8, i8* %p2, i64 24, !dbg !4302
  %10 = bitcast i8* %type6 to %union.tree_node**, !dbg !4302
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !4302
  %call = tail call zeroext i8 @types_compatible_p(%union.tree_node* %9, %union.tree_node* %11) #6, !dbg !4303
  %tobool = icmp eq i8 %call, 0, !dbg !4303
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !4304

for.cond.preheader:                               ; preds = %lor.lhs.false
  %op = getelementptr inbounds i8, i8* %p1, i64 32, !dbg !4305
  %12 = bitcast i8* %op to [4 x %union.tree_node*]*, !dbg !4305
  %op11 = getelementptr inbounds i8, i8* %p2, i64 32, !dbg !4309
  %13 = bitcast i8* %op11 to [4 x %union.tree_node*]*, !dbg !4309
  br label %for.cond, !dbg !4310

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4311
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4289, metadata !DIExpression()), !dbg !4290
  %bf.load9 = load i32, i32* %4, align 4, !dbg !4312
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !4312
  %14 = zext i32 %bf.lshr to i64, !dbg !4313
  %cmp10 = icmp ult i64 %indvars.iv, %14, !dbg !4313
  br i1 %cmp10, label %for.body, label %cleanup.loopexit, !dbg !4310

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %12, i64 0, i64 %indvars.iv, !dbg !4314
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4314
  %arrayidx13 = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %13, i64 0, i64 %indvars.iv, !dbg !4315
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8, !dbg !4315
  %call14 = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %15, %union.tree_node* %16) #7, !dbg !4316
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4316
  br i1 %tobool15, label %cleanup.loopexit, label %for.inc, !dbg !4317

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4318
  call void @llvm.dbg.value(metadata i32 undef, metadata !4289, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4290
  br label %for.cond, !dbg !4319, !llvm.loop !4320

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i32 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !4322

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !4290
  ret i32 %retval.0, !dbg !4322
}

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @expressions_equal_p(%union.tree_node* %e1, %union.tree_node* %e2) local_unnamed_addr #4 !dbg !4323 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %e1, metadata !4327, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata %union.tree_node* %e2, metadata !4328, metadata !DIExpression()), !dbg !4329
  %cmp = icmp eq %union.tree_node* %e1, %e2, !dbg !4330
  br i1 %cmp, label %return, label %if.end, !dbg !4332

if.end:                                           ; preds = %entry
  %tobool = icmp ne %union.tree_node* %e1, null, !dbg !4333
  %tobool1 = icmp ne %union.tree_node* %e2, null, !dbg !4335
  %or.cond = and i1 %tobool, %tobool1, !dbg !4336
  br i1 %or.cond, label %if.end3, label %return, !dbg !4336

if.end3:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %e1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4337
  %bf.load = load i64, i64* %0, align 8, !dbg !4337
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %e2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4339
  %bf.load5 = load i64, i64* %1, align 8, !dbg !4339
  %2 = xor i64 %bf.load, %bf.load5, !dbg !4340
  %3 = and i64 %2, 65535, !dbg !4340
  %cmp8 = icmp eq i64 %3, 0, !dbg !4340
  br i1 %cmp8, label %land.lhs.true, label %if.end11, !dbg !4341

land.lhs.true:                                    ; preds = %if.end3
  %call = tail call i32 @operand_equal_p(%union.tree_node* nonnull %e1, %union.tree_node* nonnull %e2, i32 2) #6, !dbg !4342
  %tobool9 = icmp eq i32 %call, 0, !dbg !4342
  br i1 %tobool9, label %if.end11, label %return, !dbg !4343

if.end11:                                         ; preds = %land.lhs.true, %if.end3
  br label %return, !dbg !4344

return:                                           ; preds = %land.lhs.true, %if.end, %entry, %if.end11
  %retval.0 = phi i8 [ 0, %if.end11 ], [ 1, %entry ], [ 0, %if.end ], [ 1, %land.lhs.true ], !dbg !4329
  ret i8 %retval.0, !dbg !4345
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vn_nary_op_lookup_pieces(i32 %length, i32 %code, %union.tree_node* %type, %union.tree_node* %op0, %union.tree_node* %op1, %union.tree_node* %op2, %union.tree_node* %op3, %struct.vn_nary_op_s** %vnresult) local_unnamed_addr #4 !dbg !4346 {
entry:
  %vno1 = alloca %struct.vn_nary_op_s, align 8
  call void @llvm.dbg.value(metadata i32 %length, metadata !4351, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i32 %code, metadata !4352, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4353, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !4354, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !4355, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %union.tree_node* %op2, metadata !4356, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %union.tree_node* %op3, metadata !4357, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s** %vnresult, metadata !4358, metadata !DIExpression()), !dbg !4361
  %0 = bitcast %struct.vn_nary_op_s* %vno1 to i8*, !dbg !4362
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4362
  %tobool = icmp eq %struct.vn_nary_op_s** %vnresult, null, !dbg !4363
  br i1 %tobool, label %if.end, label %if.then, !dbg !4365

if.then:                                          ; preds = %entry
  store %struct.vn_nary_op_s* null, %struct.vn_nary_op_s** %vnresult, align 8, !dbg !4366
  br label %if.end, !dbg !4367

if.end:                                           ; preds = %entry, %if.then
  %bf.value = and i32 %code, 65535, !dbg !4368
  %length1 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 1, !dbg !4369
  %bf.shl = shl i32 %length, 16, !dbg !4370
  %bf.set5 = or i32 %bf.value, %bf.shl, !dbg !4370
  store i32 %bf.set5, i32* %length1, align 4, !dbg !4370
  %type6 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 4, !dbg !4371
  store %union.tree_node* %type, %union.tree_node** %type6, align 8, !dbg !4372
  %arrayidx = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 0, !dbg !4373
  store %union.tree_node* %op0, %union.tree_node** %arrayidx, align 8, !dbg !4374
  %arrayidx8 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 1, !dbg !4375
  store %union.tree_node* %op1, %union.tree_node** %arrayidx8, align 8, !dbg !4376
  %arrayidx10 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 2, !dbg !4377
  store %union.tree_node* %op2, %union.tree_node** %arrayidx10, align 8, !dbg !4378
  %arrayidx12 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 3, !dbg !4379
  store %union.tree_node* %op3, %union.tree_node** %arrayidx12, align 8, !dbg !4380
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %vno1, metadata !4360, metadata !DIExpression(DW_OP_deref)), !dbg !4361
  %call = call i32 @vn_nary_op_compute_hash(%struct.vn_nary_op_s* nonnull %vno1) #7, !dbg !4381
  %hashcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 2, !dbg !4382
  store i32 %call, i32* %hashcode, align 8, !dbg !4383
  %1 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4384
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %1, i64 0, i32 0, !dbg !4385
  %2 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !4385
  %call14 = call i8** @htab_find_slot_with_hash(%struct.htab* %2, i8* nonnull %0, i32 %call, i32 0) #6, !dbg !4386
  call void @llvm.dbg.value(metadata i8** %call14, metadata !4359, metadata !DIExpression()), !dbg !4361
  %tobool15 = icmp eq i8** %call14, null, !dbg !4387
  br i1 %tobool15, label %land.lhs.true, label %if.end20, !dbg !4389

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4390
  %4 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !4391
  %cmp = icmp eq %struct.vn_tables_s* %3, %4, !dbg !4392
  br i1 %cmp, label %if.then16, label %if.end20, !dbg !4393

if.then16:                                        ; preds = %land.lhs.true
  %5 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !4394
  %nary17 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %5, i64 0, i32 0, !dbg !4395
  %6 = load %struct.htab*, %struct.htab** %nary17, align 8, !dbg !4395
  %7 = load i32, i32* %hashcode, align 8, !dbg !4396
  %call19 = call i8** @htab_find_slot_with_hash(%struct.htab* %6, i8* nonnull %0, i32 %7, i32 0) #6, !dbg !4397
  call void @llvm.dbg.value(metadata i8** %call19, metadata !4359, metadata !DIExpression()), !dbg !4361
  br label %if.end20, !dbg !4398

if.end20:                                         ; preds = %if.end, %if.then16, %land.lhs.true
  %slot.0 = phi i8** [ %call14, %if.end ], [ %call19, %if.then16 ], [ null, %land.lhs.true ], !dbg !4361
  call void @llvm.dbg.value(metadata i8** %slot.0, metadata !4359, metadata !DIExpression()), !dbg !4361
  %tobool21 = icmp eq i8** %slot.0, null, !dbg !4399
  br i1 %tobool21, label %cleanup, label %if.end23, !dbg !4401

if.end23:                                         ; preds = %if.end20
  br i1 %tobool, label %if.end26, label %if.then25, !dbg !4402

if.then25:                                        ; preds = %if.end23
  %8 = bitcast i8** %slot.0 to i64*, !dbg !4403
  %9 = load i64, i64* %8, align 8, !dbg !4403
  %10 = bitcast %struct.vn_nary_op_s** %vnresult to i64*, !dbg !4405
  store i64 %9, i64* %10, align 8, !dbg !4405
  br label %if.end26, !dbg !4406

if.end26:                                         ; preds = %if.end23, %if.then25
  %11 = bitcast i8** %slot.0 to %struct.vn_nary_op_s**, !dbg !4407
  %12 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %11, align 8, !dbg !4407
  %result = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %12, i64 0, i32 3, !dbg !4408
  %13 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4408
  br label %cleanup, !dbg !4409

cleanup:                                          ; preds = %if.end20, %if.end26
  %retval.0 = phi %union.tree_node* [ %13, %if.end26 ], [ null, %if.end20 ], !dbg !4361
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4410
  ret %union.tree_node* %retval.0, !dbg !4410
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vn_nary_op_lookup(%union.tree_node* %op, %struct.vn_nary_op_s** %vnresult) local_unnamed_addr #4 !dbg !4411 {
entry:
  %vno1 = alloca %struct.vn_nary_op_s, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4415, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s** %vnresult, metadata !4416, metadata !DIExpression()), !dbg !4420
  %0 = bitcast %struct.vn_nary_op_s* %vno1 to i8*, !dbg !4421
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4421
  %tobool = icmp eq %struct.vn_nary_op_s** %vnresult, null, !dbg !4422
  br i1 %tobool, label %if.end, label %if.then, !dbg !4424

if.then:                                          ; preds = %entry
  store %struct.vn_nary_op_s* null, %struct.vn_nary_op_s** %vnresult, align 8, !dbg !4425
  br label %if.end, !dbg !4426

if.end:                                           ; preds = %entry, %if.then
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4427
  %bf.load = load i64, i64* %1, align 8, !dbg !4427
  %2 = trunc i64 %bf.load to i32, !dbg !4427
  %bf.cast = and i32 %2, 65535, !dbg !4427
  %opcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 1, !dbg !4428
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !4429
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast6, !dbg !4429
  %3 = load i8, i8* %arrayidx, align 1, !dbg !4429
  %conv = zext i8 %3 to i32, !dbg !4429
  %bf.shl = shl nuw nsw i32 %conv, 16, !dbg !4430
  %bf.set10 = or i32 %bf.cast, %bf.shl, !dbg !4430
  store i32 %bf.set10, i32* %opcode, align 4, !dbg !4430
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4431
  %4 = bitcast %union.tree_node** %type to i64*, !dbg !4431
  %5 = load i64, i64* %4, align 8, !dbg !4431
  %type11 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 4, !dbg !4432
  %6 = bitcast %union.tree_node** %type11 to i64*, !dbg !4433
  store i64 %5, i64* %6, align 8, !dbg !4433
  call void @llvm.dbg.value(metadata i32 0, metadata !4419, metadata !DIExpression()), !dbg !4420
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4434
  %wide.trip.count = zext i8 %3 to i64, !dbg !4437
  br label %for.cond, !dbg !4438

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !4439
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4419, metadata !DIExpression()), !dbg !4420
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4437
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4440

for.body:                                         ; preds = %for.cond
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !4441
  %7 = bitcast %union.tree_node** %arrayidx16 to i64*, !dbg !4441
  %8 = load i64, i64* %7, align 8, !dbg !4441
  %arrayidx19 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 %indvars.iv, !dbg !4442
  %9 = bitcast %union.tree_node** %arrayidx19 to i64*, !dbg !4443
  store i64 %8, i64* %9, align 8, !dbg !4443
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4444
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4420
  br label %for.cond, !dbg !4445, !llvm.loop !4446

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %vno1, metadata !4418, metadata !DIExpression(DW_OP_deref)), !dbg !4420
  %call = call i32 @vn_nary_op_compute_hash(%struct.vn_nary_op_s* nonnull %vno1) #7, !dbg !4448
  %hashcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 2, !dbg !4449
  store i32 %call, i32* %hashcode, align 8, !dbg !4450
  %10 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4451
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 0, !dbg !4452
  %11 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !4452
  %call21 = call i8** @htab_find_slot_with_hash(%struct.htab* %11, i8* nonnull %0, i32 %call, i32 0) #6, !dbg !4453
  call void @llvm.dbg.value(metadata i8** %call21, metadata !4417, metadata !DIExpression()), !dbg !4420
  %tobool22 = icmp eq i8** %call21, null, !dbg !4454
  br i1 %tobool22, label %land.lhs.true, label %if.end29, !dbg !4456

land.lhs.true:                                    ; preds = %for.end
  %12 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4457
  %13 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !4458
  %cmp23 = icmp eq %struct.vn_tables_s* %12, %13, !dbg !4459
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !4460

if.then25:                                        ; preds = %land.lhs.true
  %14 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !4461
  %nary26 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %14, i64 0, i32 0, !dbg !4462
  %15 = load %struct.htab*, %struct.htab** %nary26, align 8, !dbg !4462
  %16 = load i32, i32* %hashcode, align 8, !dbg !4463
  %call28 = call i8** @htab_find_slot_with_hash(%struct.htab* %15, i8* nonnull %0, i32 %16, i32 0) #6, !dbg !4464
  call void @llvm.dbg.value(metadata i8** %call28, metadata !4417, metadata !DIExpression()), !dbg !4420
  br label %if.end29, !dbg !4465

if.end29:                                         ; preds = %for.end, %if.then25, %land.lhs.true
  %slot.0 = phi i8** [ %call21, %for.end ], [ %call28, %if.then25 ], [ null, %land.lhs.true ], !dbg !4420
  call void @llvm.dbg.value(metadata i8** %slot.0, metadata !4417, metadata !DIExpression()), !dbg !4420
  %tobool30 = icmp eq i8** %slot.0, null, !dbg !4466
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !4468

if.end32:                                         ; preds = %if.end29
  br i1 %tobool, label %if.end35, label %if.then34, !dbg !4469

if.then34:                                        ; preds = %if.end32
  %17 = bitcast i8** %slot.0 to i64*, !dbg !4470
  %18 = load i64, i64* %17, align 8, !dbg !4470
  %19 = bitcast %struct.vn_nary_op_s** %vnresult to i64*, !dbg !4472
  store i64 %18, i64* %19, align 8, !dbg !4472
  br label %if.end35, !dbg !4473

if.end35:                                         ; preds = %if.end32, %if.then34
  %20 = bitcast i8** %slot.0 to %struct.vn_nary_op_s**, !dbg !4474
  %21 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %20, align 8, !dbg !4474
  %result = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %21, i64 0, i32 3, !dbg !4475
  %22 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4475
  br label %cleanup, !dbg !4476

cleanup:                                          ; preds = %if.end29, %if.end35
  %retval.0 = phi %union.tree_node* [ %22, %if.end35 ], [ null, %if.end29 ], !dbg !4420
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4477
  ret %union.tree_node* %retval.0, !dbg !4477
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vn_nary_op_lookup_stmt(%union.gimple_statement_d* %stmt, %struct.vn_nary_op_s** %vnresult) local_unnamed_addr #4 !dbg !4478 {
entry:
  %vno1 = alloca %struct.vn_nary_op_s, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4482, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s** %vnresult, metadata !4483, metadata !DIExpression()), !dbg !4487
  %0 = bitcast %struct.vn_nary_op_s* %vno1 to i8*, !dbg !4488
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4488
  %tobool = icmp eq %struct.vn_nary_op_s** %vnresult, null, !dbg !4489
  br i1 %tobool, label %if.end, label %if.then, !dbg !4491

if.then:                                          ; preds = %entry
  store %struct.vn_nary_op_s* null, %struct.vn_nary_op_s** %vnresult, align 8, !dbg !4492
  br label %if.end, !dbg !4493

if.end:                                           ; preds = %entry, %if.then
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !4494
  %opcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 1, !dbg !4495
  %bf.value = and i32 %call, 65535, !dbg !4496
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !4497
  %sub = shl i32 %call1, 16, !dbg !4498
  %bf.shl = add i32 %sub, -65536, !dbg !4498
  %bf.set5 = or i32 %bf.value, %bf.shl, !dbg !4498
  store i32 %bf.set5, i32* %opcode, align 4, !dbg !4498
  %call6 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !4499
  %type = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 4, !dbg !4500
  store %union.tree_node* %call6, %union.tree_node** %type, align 8, !dbg !4501
  call void @llvm.dbg.value(metadata i32 0, metadata !4486, metadata !DIExpression()), !dbg !4487
  %1 = lshr exact i32 %bf.shl, 16, !dbg !4502
  %wide.trip.count = zext i32 %1 to i64, !dbg !4504
  br label %for.cond, !dbg !4502

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !4506
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4486, metadata !DIExpression()), !dbg !4487
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4504
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4507

for.body:                                         ; preds = %for.cond
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4508
  %2 = trunc i64 %indvars.iv.next to i32, !dbg !4509
  %call9 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %2) #7, !dbg !4509
  %arrayidx = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 %indvars.iv, !dbg !4510
  store %union.tree_node* %call9, %union.tree_node** %arrayidx, align 8, !dbg !4511
  call void @llvm.dbg.value(metadata i32 undef, metadata !4486, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4487
  br label %for.cond, !dbg !4512, !llvm.loop !4513

for.end:                                          ; preds = %for.cond
  %cmp13 = icmp eq i32 %bf.value, 43, !dbg !4515
  br i1 %cmp13, label %if.then23, label %lor.lhs.false, !dbg !4517

lor.lhs.false:                                    ; preds = %for.end
  %cmp17 = icmp eq i32 %bf.value, 44, !dbg !4518
  br i1 %cmp17, label %if.then23, label %lor.lhs.false18, !dbg !4519

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp22 = icmp eq i32 %bf.value, 118, !dbg !4520
  br i1 %cmp22, label %if.then23, label %if.end29, !dbg !4521

if.then23:                                        ; preds = %lor.lhs.false18, %lor.lhs.false, %for.end
  %arrayidx25 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, i64 0, !dbg !4522
  %3 = bitcast %union.tree_node** %arrayidx25 to %struct.tree_exp**, !dbg !4522
  %4 = load %struct.tree_exp*, %struct.tree_exp** %3, align 8, !dbg !4522
  %arrayidx26 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 3, i64 0, !dbg !4522
  %5 = bitcast %union.tree_node** %arrayidx26 to i64*, !dbg !4522
  %6 = load i64, i64* %5, align 8, !dbg !4522
  %op27 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 5, !dbg !4523
  %7 = bitcast [4 x %union.tree_node*]* %op27 to i64*, !dbg !4524
  store i64 %6, i64* %7, align 8, !dbg !4524
  br label %if.end29, !dbg !4525

if.end29:                                         ; preds = %if.then23, %lor.lhs.false18
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %vno1, metadata !4485, metadata !DIExpression(DW_OP_deref)), !dbg !4487
  %call30 = call i32 @vn_nary_op_compute_hash(%struct.vn_nary_op_s* nonnull %vno1) #7, !dbg !4526
  %hashcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %vno1, i64 0, i32 2, !dbg !4527
  store i32 %call30, i32* %hashcode, align 8, !dbg !4528
  %8 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4529
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 0, !dbg !4530
  %9 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !4530
  %call32 = call i8** @htab_find_slot_with_hash(%struct.htab* %9, i8* nonnull %0, i32 %call30, i32 0) #6, !dbg !4531
  call void @llvm.dbg.value(metadata i8** %call32, metadata !4484, metadata !DIExpression()), !dbg !4487
  %tobool33 = icmp eq i8** %call32, null, !dbg !4532
  br i1 %tobool33, label %land.lhs.true, label %if.end39, !dbg !4534

land.lhs.true:                                    ; preds = %if.end29
  %10 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4535
  %11 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !4536
  %cmp34 = icmp eq %struct.vn_tables_s* %10, %11, !dbg !4537
  br i1 %cmp34, label %if.then35, label %if.end39, !dbg !4538

if.then35:                                        ; preds = %land.lhs.true
  %12 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !4539
  %nary36 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %12, i64 0, i32 0, !dbg !4540
  %13 = load %struct.htab*, %struct.htab** %nary36, align 8, !dbg !4540
  %14 = load i32, i32* %hashcode, align 8, !dbg !4541
  %call38 = call i8** @htab_find_slot_with_hash(%struct.htab* %13, i8* nonnull %0, i32 %14, i32 0) #6, !dbg !4542
  call void @llvm.dbg.value(metadata i8** %call38, metadata !4484, metadata !DIExpression()), !dbg !4487
  br label %if.end39, !dbg !4543

if.end39:                                         ; preds = %if.end29, %if.then35, %land.lhs.true
  %slot.0 = phi i8** [ %call32, %if.end29 ], [ %call38, %if.then35 ], [ null, %land.lhs.true ], !dbg !4487
  call void @llvm.dbg.value(metadata i8** %slot.0, metadata !4484, metadata !DIExpression()), !dbg !4487
  %tobool40 = icmp eq i8** %slot.0, null, !dbg !4544
  br i1 %tobool40, label %cleanup, label %if.end42, !dbg !4546

if.end42:                                         ; preds = %if.end39
  br i1 %tobool, label %if.end45, label %if.then44, !dbg !4547

if.then44:                                        ; preds = %if.end42
  %15 = bitcast i8** %slot.0 to i64*, !dbg !4548
  %16 = load i64, i64* %15, align 8, !dbg !4548
  %17 = bitcast %struct.vn_nary_op_s** %vnresult to i64*, !dbg !4550
  store i64 %16, i64* %17, align 8, !dbg !4550
  br label %if.end45, !dbg !4551

if.end45:                                         ; preds = %if.end42, %if.then44
  %18 = bitcast i8** %slot.0 to %struct.vn_nary_op_s**, !dbg !4552
  %19 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %18, align 8, !dbg !4552
  %result = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %19, i64 0, i32 3, !dbg !4553
  %20 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4553
  br label %cleanup, !dbg !4554

cleanup:                                          ; preds = %if.end39, %if.end45
  %retval.0 = phi %union.tree_node* [ %20, %if.end45 ], [ null, %if.end39 ], !dbg !4487
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4555
  ret %union.tree_node* %retval.0, !dbg !4555
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4556 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4558, metadata !DIExpression()), !dbg !4559
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !4560
  %0 = load i32, i32* %num_ops, align 4, !dbg !4560
  ret i32 %0, !dbg !4561
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4562 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4564, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %i, metadata !4565, metadata !DIExpression()), !dbg !4566
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4567
  %tobool = icmp eq i8 %call, 0, !dbg !4567
  br i1 %tobool, label %return, label %if.then, !dbg !4569

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4570
  %idxprom = zext i32 %i to i64, !dbg !4570
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4570
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4570
  br label %return, !dbg !4572

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4573
  ret %union.tree_node* %retval.0, !dbg !4574
}

; Function Attrs: nounwind uwtable
define dso_local %struct.vn_nary_op_s* @vn_nary_op_insert_pieces(i32 %length, i32 %code, %union.tree_node* %type, %union.tree_node* %op0, %union.tree_node* %op1, %union.tree_node* %op2, %union.tree_node* %op3, %union.tree_node* %result, i32 %value_id) local_unnamed_addr #4 !dbg !4575 {
entry:
  call void @llvm.dbg.value(metadata i32 %length, metadata !4579, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %code, metadata !4580, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4581, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !4582, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !4583, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %op2, metadata !4584, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %op3, metadata !4585, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !4586, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %value_id, metadata !4587, metadata !DIExpression()), !dbg !4590
  %sub = sub i32 4, %length, !dbg !4591
  %conv = zext i32 %sub to i64, !dbg !4591
  %mul = shl nuw nsw i64 %conv, 3, !dbg !4591
  %sub1 = sub nsw i64 64, %mul, !dbg !4591
  %0 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4591
  %temp = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, i32 5, !dbg !4591
  store i64 %sub1, i64* %temp, align 8, !dbg !4591
  %chunk_limit = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, i32 4, !dbg !4591
  %1 = bitcast i8** %chunk_limit to i64*, !dbg !4591
  %2 = load i64, i64* %1, align 8, !dbg !4591
  %next_free = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, i32 3, !dbg !4591
  %3 = bitcast i8** %next_free to i64*, !dbg !4591
  %4 = load i64, i64* %3, align 8, !dbg !4591
  %sub.ptr.sub = sub i64 %2, %4, !dbg !4591
  %cmp = icmp slt i64 %sub.ptr.sub, %sub1, !dbg !4591
  %5 = inttoptr i64 %4 to i8*, !dbg !4591
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4591

cond.true:                                        ; preds = %entry
  %nary_obstack7 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, !dbg !4591
  %conv10 = trunc i64 %sub1 to i32, !dbg !4591
  tail call void @_obstack_newchunk(%struct.obstack* nonnull %nary_obstack7, i32 %conv10) #6, !dbg !4591
  %.pre = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4591
  %temp12.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 5, !dbg !4590
  %.pre1 = load i64, i64* %temp12.phi.trans.insert, align 8, !dbg !4591
  %next_free14.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 3, !dbg !4590
  %.pre2 = load i8*, i8** %next_free14.phi.trans.insert, align 8, !dbg !4591
  br label %cond.end, !dbg !4591

cond.end:                                         ; preds = %entry, %cond.true
  %6 = phi i8* [ %5, %entry ], [ %.pre2, %cond.true ], !dbg !4591
  %7 = phi i64 [ %sub1, %entry ], [ %.pre1, %cond.true ], !dbg !4591
  %8 = phi %struct.vn_tables_s* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !4591
  %temp12 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 5, !dbg !4591
  %next_free14 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 3, !dbg !4591
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !4591
  store i8* %add.ptr, i8** %next_free14, align 8, !dbg !4591
  %object_base = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 2, !dbg !4591
  %9 = load i8*, i8** %object_base, align 8, !dbg !4591
  %cmp18 = icmp eq i8* %add.ptr, %9, !dbg !4591
  %10 = ptrtoint i8* %9 to i64, !dbg !4591
  %11 = ptrtoint i8* %add.ptr to i64, !dbg !4591
  br i1 %cmp18, label %cond.true20, label %cond.end23, !dbg !4591

cond.true20:                                      ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 10, !dbg !4591
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !4591
  %bf.set = or i8 %bf.load, 2, !dbg !4591
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !4591
  br label %cond.end23, !dbg !4591

cond.end23:                                       ; preds = %cond.end, %cond.true20
  %12 = bitcast i8** %object_base to i64*, !dbg !4591
  store i64 %10, i64* %temp12, align 8, !dbg !4591
  %alignment_mask = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 6, !dbg !4591
  %13 = load i32, i32* %alignment_mask, align 8, !dbg !4591
  %conv36 = sext i32 %13 to i64, !dbg !4591
  %add = add nsw i64 %11, %conv36, !dbg !4591
  %neg = xor i32 %13, -1, !dbg !4591
  %conv39 = sext i32 %neg to i64, !dbg !4591
  %and = and i64 %add, %conv39, !dbg !4591
  %14 = inttoptr i64 %and to i8*, !dbg !4591
  store i8* %14, i8** %next_free14, align 8, !dbg !4591
  %chunk = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 1, !dbg !4591
  %15 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !4591
  %16 = load i64, i64* %15, align 8, !dbg !4591
  %sub.ptr.sub47 = sub i64 %and, %16, !dbg !4591
  %chunk_limit49 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 4, !dbg !4591
  %17 = bitcast i8** %chunk_limit49 to i64*, !dbg !4591
  %18 = load i64, i64* %17, align 8, !dbg !4591
  %sub.ptr.sub54 = sub i64 %18, %16, !dbg !4591
  %cmp55 = icmp sgt i64 %sub.ptr.sub47, %sub.ptr.sub54, !dbg !4591
  %19 = bitcast i8* %9 to %struct.vn_nary_op_s*, !dbg !4591
  br i1 %cmp55, label %cond.true57, label %cond.end63, !dbg !4591

cond.true57:                                      ; preds = %cond.end23
  %20 = bitcast i8** %next_free14 to i64*, !dbg !4591
  store i64 %18, i64* %20, align 8, !dbg !4591
  br label %cond.end63, !dbg !4591

cond.end63:                                       ; preds = %cond.end23, %cond.true57
  %21 = phi i64 [ %and, %cond.end23 ], [ %18, %cond.true57 ], !dbg !4591
  store i64 %21, i64* %12, align 8, !dbg !4591
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %19, metadata !4589, metadata !DIExpression()), !dbg !4590
  %value_id71 = bitcast i8* %9 to i32*, !dbg !4592
  store i32 %value_id, i32* %value_id71, align 8, !dbg !4593
  %bf.value = and i32 %code, 65535, !dbg !4594
  %length75 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !4595
  %22 = bitcast i8* %length75 to i32*, !dbg !4595
  %bf.shl = shl i32 %length, 16, !dbg !4596
  %bf.set79 = or i32 %bf.value, %bf.shl, !dbg !4596
  store i32 %bf.set79, i32* %22, align 4, !dbg !4596
  %type80 = getelementptr inbounds i8, i8* %9, i64 24, !dbg !4597
  %23 = bitcast i8* %type80 to %union.tree_node**, !dbg !4597
  store %union.tree_node* %type, %union.tree_node** %23, align 8, !dbg !4598
  %cmp81 = icmp eq i32 %length, 0, !dbg !4599
  br i1 %cmp81, label %if.end, label %if.then, !dbg !4601

if.then:                                          ; preds = %cond.end63
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 32, !dbg !4602
  %24 = bitcast i8* %arrayidx to %union.tree_node**, !dbg !4602
  store %union.tree_node* %op0, %union.tree_node** %24, align 8, !dbg !4603
  br label %if.end, !dbg !4602

if.end:                                           ; preds = %cond.end63, %if.then
  %cmp83 = icmp ugt i32 %length, 1, !dbg !4604
  br i1 %cmp83, label %if.then85, label %if.end88, !dbg !4606

if.then85:                                        ; preds = %if.end
  %arrayidx87 = getelementptr inbounds i8, i8* %9, i64 40, !dbg !4607
  %25 = bitcast i8* %arrayidx87 to %union.tree_node**, !dbg !4607
  store %union.tree_node* %op1, %union.tree_node** %25, align 8, !dbg !4608
  br label %if.end88, !dbg !4607

if.end88:                                         ; preds = %if.then85, %if.end
  %cmp89 = icmp ugt i32 %length, 2, !dbg !4609
  br i1 %cmp89, label %if.then91, label %if.end94, !dbg !4611

if.then91:                                        ; preds = %if.end88
  %arrayidx93 = getelementptr inbounds i8, i8* %9, i64 48, !dbg !4612
  %26 = bitcast i8* %arrayidx93 to %union.tree_node**, !dbg !4612
  store %union.tree_node* %op2, %union.tree_node** %26, align 8, !dbg !4613
  br label %if.end94, !dbg !4612

if.end94:                                         ; preds = %if.then91, %if.end88
  %cmp95 = icmp ugt i32 %length, 3, !dbg !4614
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !4616

if.then97:                                        ; preds = %if.end94
  %arrayidx99 = getelementptr inbounds i8, i8* %9, i64 56, !dbg !4617
  %27 = bitcast i8* %arrayidx99 to %union.tree_node**, !dbg !4617
  store %union.tree_node* %op3, %union.tree_node** %27, align 8, !dbg !4618
  br label %if.end100, !dbg !4617

if.end100:                                        ; preds = %if.then97, %if.end94
  %result101 = getelementptr inbounds i8, i8* %9, i64 16, !dbg !4619
  %28 = bitcast i8* %result101 to %union.tree_node**, !dbg !4619
  store %union.tree_node* %result, %union.tree_node** %28, align 8, !dbg !4620
  %call = tail call i32 @vn_nary_op_compute_hash(%struct.vn_nary_op_s* %19) #7, !dbg !4621
  %hashcode = getelementptr inbounds i8, i8* %9, i64 8, !dbg !4622
  %29 = bitcast i8* %hashcode to i32*, !dbg !4622
  store i32 %call, i32* %29, align 8, !dbg !4623
  %30 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4624
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %30, i64 0, i32 0, !dbg !4625
  %31 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !4625
  %call103 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %31, i8* %9, i32 %call, i32 1) #6, !dbg !4626
  call void @llvm.dbg.value(metadata i8** %call103, metadata !4588, metadata !DIExpression()), !dbg !4590
  %32 = load i8*, i8** %call103, align 8, !dbg !4627
  %tobool = icmp eq i8* %32, null, !dbg !4627
  br i1 %tobool, label %cond.end106, label %cond.true104, !dbg !4627

cond.true104:                                     ; preds = %if.end100
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 1561, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4627
  br label %cond.end106, !dbg !4627

cond.end106:                                      ; preds = %if.end100, %cond.true104
  store i8* %9, i8** %call103, align 8, !dbg !4628
  ret %struct.vn_nary_op_s* %19, !dbg !4629
}

; Function Attrs: nounwind uwtable
define dso_local %struct.vn_nary_op_s* @vn_nary_op_insert(%union.tree_node* %op, %union.tree_node* %result) local_unnamed_addr #4 !dbg !4630 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4634, metadata !DIExpression()), !dbg !4640
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !4635, metadata !DIExpression()), !dbg !4640
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4641
  %bf.load = load i64, i64* %0, align 8, !dbg !4641
  %bf.cast = and i64 %bf.load, 65535, !dbg !4641
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !4641
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4641
  %conv = zext i8 %1 to i32, !dbg !4641
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4636, metadata !DIExpression()), !dbg !4640
  %sub = sub nsw i32 4, %conv, !dbg !4642
  %conv1 = zext i32 %sub to i64, !dbg !4642
  %mul = shl nuw nsw i64 %conv1, 3, !dbg !4642
  %sub2 = sub nsw i64 64, %mul, !dbg !4642
  %2 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4642
  %temp = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, i32 5, !dbg !4642
  store i64 %sub2, i64* %temp, align 8, !dbg !4642
  %chunk_limit = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, i32 4, !dbg !4642
  %3 = bitcast i8** %chunk_limit to i64*, !dbg !4642
  %4 = load i64, i64* %3, align 8, !dbg !4642
  %next_free = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, i32 3, !dbg !4642
  %5 = bitcast i8** %next_free to i64*, !dbg !4642
  %6 = load i64, i64* %5, align 8, !dbg !4642
  %sub.ptr.sub = sub i64 %4, %6, !dbg !4642
  %cmp = icmp slt i64 %sub.ptr.sub, %sub2, !dbg !4642
  %7 = inttoptr i64 %6 to i8*, !dbg !4642
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4642

cond.true:                                        ; preds = %entry
  %nary_obstack8 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, !dbg !4642
  %conv11 = trunc i64 %sub2 to i32, !dbg !4642
  tail call void @_obstack_newchunk(%struct.obstack* nonnull %nary_obstack8, i32 %conv11) #6, !dbg !4642
  %.pre = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4642
  %temp13.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 5, !dbg !4640
  %.pre1 = load i64, i64* %temp13.phi.trans.insert, align 8, !dbg !4642
  %next_free15.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 3, !dbg !4640
  %.pre2 = load i8*, i8** %next_free15.phi.trans.insert, align 8, !dbg !4642
  br label %cond.end, !dbg !4642

cond.end:                                         ; preds = %entry, %cond.true
  %8 = phi i8* [ %7, %entry ], [ %.pre2, %cond.true ], !dbg !4642
  %9 = phi i64 [ %sub2, %entry ], [ %.pre1, %cond.true ], !dbg !4642
  %10 = phi %struct.vn_tables_s* [ %2, %entry ], [ %.pre, %cond.true ], !dbg !4642
  %temp13 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 5, !dbg !4642
  %next_free15 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 3, !dbg !4642
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !4642
  store i8* %add.ptr, i8** %next_free15, align 8, !dbg !4642
  %object_base = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 2, !dbg !4642
  %11 = load i8*, i8** %object_base, align 8, !dbg !4642
  %cmp19 = icmp eq i8* %add.ptr, %11, !dbg !4642
  %12 = ptrtoint i8* %11 to i64, !dbg !4642
  %13 = ptrtoint i8* %add.ptr to i64, !dbg !4642
  br i1 %cmp19, label %cond.true21, label %cond.end26, !dbg !4642

cond.true21:                                      ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 10, !dbg !4642
  %bf.load23 = load i8, i8* %maybe_empty_object, align 8, !dbg !4642
  %bf.set = or i8 %bf.load23, 2, !dbg !4642
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !4642
  br label %cond.end26, !dbg !4642

cond.end26:                                       ; preds = %cond.end, %cond.true21
  %14 = bitcast i8** %object_base to i64*, !dbg !4642
  store i64 %12, i64* %temp13, align 8, !dbg !4642
  %alignment_mask = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 6, !dbg !4642
  %15 = load i32, i32* %alignment_mask, align 8, !dbg !4642
  %conv39 = sext i32 %15 to i64, !dbg !4642
  %add = add nsw i64 %13, %conv39, !dbg !4642
  %neg = xor i32 %15, -1, !dbg !4642
  %conv42 = sext i32 %neg to i64, !dbg !4642
  %and = and i64 %add, %conv42, !dbg !4642
  %16 = inttoptr i64 %and to i8*, !dbg !4642
  store i8* %16, i8** %next_free15, align 8, !dbg !4642
  %chunk = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 1, !dbg !4642
  %17 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !4642
  %18 = load i64, i64* %17, align 8, !dbg !4642
  %sub.ptr.sub50 = sub i64 %and, %18, !dbg !4642
  %chunk_limit52 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 4, !dbg !4642
  %19 = bitcast i8** %chunk_limit52 to i64*, !dbg !4642
  %20 = load i64, i64* %19, align 8, !dbg !4642
  %sub.ptr.sub57 = sub i64 %20, %18, !dbg !4642
  %cmp58 = icmp sgt i64 %sub.ptr.sub50, %sub.ptr.sub57, !dbg !4642
  %21 = bitcast i8* %11 to %struct.vn_nary_op_s*, !dbg !4642
  br i1 %cmp58, label %cond.true60, label %cond.end66, !dbg !4642

cond.true60:                                      ; preds = %cond.end26
  %22 = bitcast i8** %next_free15 to i64*, !dbg !4642
  store i64 %20, i64* %22, align 8, !dbg !4642
  br label %cond.end66, !dbg !4642

cond.end66:                                       ; preds = %cond.end26, %cond.true60
  %23 = phi i64 [ %and, %cond.end26 ], [ %20, %cond.true60 ], !dbg !4642
  store i64 %23, i64* %14, align 8, !dbg !4642
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %21, metadata !4638, metadata !DIExpression()), !dbg !4640
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %result) #7, !dbg !4643
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 2, !dbg !4644
  %24 = load i32, i32* %value_id, align 8, !dbg !4644
  %value_id74 = bitcast i8* %11 to i32*, !dbg !4645
  store i32 %24, i32* %value_id74, align 8, !dbg !4646
  %bf.load76 = load i64, i64* %0, align 8, !dbg !4647
  %25 = trunc i64 %bf.load76 to i32, !dbg !4647
  %bf.cast78 = and i32 %25, 65535, !dbg !4647
  %length82 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !4648
  %26 = bitcast i8* %length82 to i32*, !dbg !4648
  %bf.shl = shl nuw nsw i32 %conv, 16, !dbg !4649
  %bf.set86 = or i32 %bf.cast78, %bf.shl, !dbg !4649
  store i32 %bf.set86, i32* %26, align 4, !dbg !4649
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4650
  %27 = bitcast %union.tree_node** %type to i64*, !dbg !4650
  %28 = load i64, i64* %27, align 8, !dbg !4650
  %type87 = getelementptr inbounds i8, i8* %11, i64 24, !dbg !4651
  %29 = bitcast i8* %type87 to i64*, !dbg !4652
  store i64 %28, i64* %29, align 8, !dbg !4652
  call void @llvm.dbg.value(metadata i32 0, metadata !4639, metadata !DIExpression()), !dbg !4640
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4653
  %wide.trip.count = zext i8 %1 to i64, !dbg !4656
  br label %for.cond, !dbg !4657

for.cond:                                         ; preds = %for.body, %cond.end66
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end66 ], !dbg !4658
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4639, metadata !DIExpression()), !dbg !4640
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4656
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4659

for.body:                                         ; preds = %for.cond
  %arrayidx93 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !4660
  %30 = bitcast %union.tree_node** %arrayidx93 to i64*, !dbg !4660
  %31 = load i64, i64* %30, align 8, !dbg !4660
  %arrayidx96 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %21, i64 0, i32 5, i64 %indvars.iv, !dbg !4661
  %32 = bitcast %union.tree_node** %arrayidx96 to i64*, !dbg !4662
  store i64 %31, i64* %32, align 8, !dbg !4662
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4663
  call void @llvm.dbg.value(metadata i32 undef, metadata !4639, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4640
  br label %for.cond, !dbg !4664, !llvm.loop !4665

for.end:                                          ; preds = %for.cond
  %result97 = getelementptr inbounds i8, i8* %11, i64 16, !dbg !4667
  %33 = bitcast i8* %result97 to %union.tree_node**, !dbg !4667
  store %union.tree_node* %result, %union.tree_node** %33, align 8, !dbg !4668
  %call98 = tail call i32 @vn_nary_op_compute_hash(%struct.vn_nary_op_s* %21) #7, !dbg !4669
  %hashcode = getelementptr inbounds i8, i8* %11, i64 8, !dbg !4670
  %34 = bitcast i8* %hashcode to i32*, !dbg !4670
  store i32 %call98, i32* %34, align 8, !dbg !4671
  %35 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4672
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %35, i64 0, i32 0, !dbg !4673
  %36 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !4673
  %call100 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %36, i8* %11, i32 %call98, i32 1) #6, !dbg !4674
  call void @llvm.dbg.value(metadata i8** %call100, metadata !4637, metadata !DIExpression()), !dbg !4640
  %37 = load i8*, i8** %call100, align 8, !dbg !4675
  %tobool = icmp eq i8* %37, null, !dbg !4675
  br i1 %tobool, label %cond.end103, label %cond.true101, !dbg !4675

cond.true101:                                     ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 1593, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4675
  br label %cond.end103, !dbg !4675

cond.end103:                                      ; preds = %for.end, %cond.true101
  store i8* %11, i8** %call100, align 8, !dbg !4676
  ret %struct.vn_nary_op_s* %21, !dbg !4677
}

; Function Attrs: nounwind uwtable
define dso_local %struct.vn_nary_op_s* @vn_nary_op_insert_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %result) local_unnamed_addr #4 !dbg !4678 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4682, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !4683, metadata !DIExpression()), !dbg !4688
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %call, metadata !4684, metadata !DIExpression(DW_OP_plus_uconst, 65535, DW_OP_stack_value)), !dbg !4688
  %sub1 = sub i32 5, %call, !dbg !4690
  %conv = zext i32 %sub1 to i64, !dbg !4690
  %mul = shl nuw nsw i64 %conv, 3, !dbg !4690
  %sub2 = sub nsw i64 64, %mul, !dbg !4690
  %0 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4690
  %temp = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, i32 5, !dbg !4690
  store i64 %sub2, i64* %temp, align 8, !dbg !4690
  %chunk_limit = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, i32 4, !dbg !4690
  %1 = bitcast i8** %chunk_limit to i64*, !dbg !4690
  %2 = load i64, i64* %1, align 8, !dbg !4690
  %next_free = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, i32 3, !dbg !4690
  %3 = bitcast i8** %next_free to i64*, !dbg !4690
  %4 = load i64, i64* %3, align 8, !dbg !4690
  %sub.ptr.sub = sub i64 %2, %4, !dbg !4690
  %cmp = icmp slt i64 %sub.ptr.sub, %sub2, !dbg !4690
  %5 = inttoptr i64 %4 to i8*, !dbg !4690
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4690

cond.true:                                        ; preds = %entry
  %nary_obstack8 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 3, !dbg !4690
  %conv11 = trunc i64 %sub2 to i32, !dbg !4690
  tail call void @_obstack_newchunk(%struct.obstack* nonnull %nary_obstack8, i32 %conv11) #6, !dbg !4690
  %.pre = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4690
  %temp13.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 5, !dbg !4688
  %.pre1 = load i64, i64* %temp13.phi.trans.insert, align 8, !dbg !4690
  %next_free15.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 3, !dbg !4688
  %.pre2 = load i8*, i8** %next_free15.phi.trans.insert, align 8, !dbg !4690
  br label %cond.end, !dbg !4690

cond.end:                                         ; preds = %entry, %cond.true
  %6 = phi i8* [ %5, %entry ], [ %.pre2, %cond.true ], !dbg !4690
  %7 = phi i64 [ %sub2, %entry ], [ %.pre1, %cond.true ], !dbg !4690
  %8 = phi %struct.vn_tables_s* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !4690
  %temp13 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 5, !dbg !4690
  %next_free15 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 3, !dbg !4690
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !4690
  store i8* %add.ptr, i8** %next_free15, align 8, !dbg !4690
  %object_base = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 2, !dbg !4690
  %9 = load i8*, i8** %object_base, align 8, !dbg !4690
  %cmp19 = icmp eq i8* %add.ptr, %9, !dbg !4690
  %10 = ptrtoint i8* %9 to i64, !dbg !4690
  %11 = ptrtoint i8* %add.ptr to i64, !dbg !4690
  br i1 %cmp19, label %cond.true21, label %cond.end24, !dbg !4690

cond.true21:                                      ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 10, !dbg !4690
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !4690
  %bf.set = or i8 %bf.load, 2, !dbg !4690
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !4690
  br label %cond.end24, !dbg !4690

cond.end24:                                       ; preds = %cond.end, %cond.true21
  %12 = bitcast i8** %object_base to i64*, !dbg !4690
  store i64 %10, i64* %temp13, align 8, !dbg !4690
  %alignment_mask = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 6, !dbg !4690
  %13 = load i32, i32* %alignment_mask, align 8, !dbg !4690
  %conv37 = sext i32 %13 to i64, !dbg !4690
  %add = add nsw i64 %11, %conv37, !dbg !4690
  %neg = xor i32 %13, -1, !dbg !4690
  %conv40 = sext i32 %neg to i64, !dbg !4690
  %and = and i64 %add, %conv40, !dbg !4690
  %14 = inttoptr i64 %and to i8*, !dbg !4690
  store i8* %14, i8** %next_free15, align 8, !dbg !4690
  %chunk = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 1, !dbg !4690
  %15 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !4690
  %16 = load i64, i64* %15, align 8, !dbg !4690
  %sub.ptr.sub48 = sub i64 %and, %16, !dbg !4690
  %chunk_limit50 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 4, !dbg !4690
  %17 = bitcast i8** %chunk_limit50 to i64*, !dbg !4690
  %18 = load i64, i64* %17, align 8, !dbg !4690
  %sub.ptr.sub55 = sub i64 %18, %16, !dbg !4690
  %cmp56 = icmp sgt i64 %sub.ptr.sub48, %sub.ptr.sub55, !dbg !4690
  %19 = bitcast i8* %9 to %struct.vn_nary_op_s*, !dbg !4690
  br i1 %cmp56, label %cond.true58, label %cond.end64, !dbg !4690

cond.true58:                                      ; preds = %cond.end24
  %20 = bitcast i8** %next_free15 to i64*, !dbg !4690
  store i64 %18, i64* %20, align 8, !dbg !4690
  br label %cond.end64, !dbg !4690

cond.end64:                                       ; preds = %cond.end24, %cond.true58
  %21 = phi i64 [ %and, %cond.end24 ], [ %18, %cond.true58 ], !dbg !4690
  store i64 %21, i64* %12, align 8, !dbg !4690
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %19, metadata !4686, metadata !DIExpression()), !dbg !4688
  %call72 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %result) #7, !dbg !4691
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call72, i64 0, i32 2, !dbg !4692
  %22 = load i32, i32* %value_id, align 8, !dbg !4692
  %value_id73 = bitcast i8* %9 to i32*, !dbg !4693
  store i32 %22, i32* %value_id73, align 8, !dbg !4694
  %call74 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !4695
  %bf.value = and i32 %call74, 65535, !dbg !4696
  %length78 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !4697
  %23 = bitcast i8* %length78 to i32*, !dbg !4697
  %sub = shl i32 %call, 16, !dbg !4698
  %bf.shl = add i32 %sub, -65536, !dbg !4698
  %bf.set82 = or i32 %bf.value, %bf.shl, !dbg !4698
  store i32 %bf.set82, i32* %23, align 4, !dbg !4698
  %call83 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !4699
  %type = getelementptr inbounds i8, i8* %9, i64 24, !dbg !4700
  %24 = bitcast i8* %type to %union.tree_node**, !dbg !4700
  store %union.tree_node* %call83, %union.tree_node** %24, align 8, !dbg !4701
  call void @llvm.dbg.value(metadata i32 0, metadata !4687, metadata !DIExpression()), !dbg !4688
  br label %for.cond, !dbg !4702

for.cond:                                         ; preds = %for.body, %cond.end64
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end64 ], !dbg !4704
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4687, metadata !DIExpression()), !dbg !4688
  %bf.load85 = load i32, i32* %23, align 4, !dbg !4705
  %bf.lshr = lshr i32 %bf.load85, 16, !dbg !4705
  %25 = zext i32 %bf.lshr to i64, !dbg !4707
  %cmp86 = icmp ult i64 %indvars.iv, %25, !dbg !4707
  br i1 %cmp86, label %for.body, label %for.end, !dbg !4708

for.body:                                         ; preds = %for.cond
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4709
  %26 = trunc i64 %indvars.iv.next to i32, !dbg !4710
  %call89 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %26) #7, !dbg !4710
  %arrayidx = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %19, i64 0, i32 5, i64 %indvars.iv, !dbg !4711
  store %union.tree_node* %call89, %union.tree_node** %arrayidx, align 8, !dbg !4712
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4688
  br label %for.cond, !dbg !4713, !llvm.loop !4714

for.end:                                          ; preds = %for.cond
  %bf.load85.lcssa = phi i32 [ %bf.load85, %for.cond ], !dbg !4705
  %bf.clear92 = and i32 %bf.load85.lcssa, 65535, !dbg !4716
  %cmp93 = icmp eq i32 %bf.clear92, 43, !dbg !4718
  br i1 %cmp93, label %if.then, label %lor.lhs.false, !dbg !4719

lor.lhs.false:                                    ; preds = %for.end
  %cmp98 = icmp eq i32 %bf.clear92, 44, !dbg !4720
  br i1 %cmp98, label %if.then, label %lor.lhs.false100, !dbg !4721

lor.lhs.false100:                                 ; preds = %lor.lhs.false
  %cmp104 = icmp eq i32 %bf.clear92, 118, !dbg !4722
  br i1 %cmp104, label %if.then, label %if.end, !dbg !4723

if.then:                                          ; preds = %lor.lhs.false100, %lor.lhs.false, %for.end
  %arrayidx107 = getelementptr inbounds i8, i8* %9, i64 32, !dbg !4724
  %27 = bitcast i8* %arrayidx107 to %struct.tree_exp**, !dbg !4724
  %28 = load %struct.tree_exp*, %struct.tree_exp** %27, align 8, !dbg !4724
  %arrayidx108 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %28, i64 0, i32 3, i64 0, !dbg !4724
  %29 = bitcast %union.tree_node** %arrayidx108 to i64*, !dbg !4724
  %30 = load i64, i64* %29, align 8, !dbg !4724
  %op109 = getelementptr inbounds i8, i8* %9, i64 32, !dbg !4725
  %31 = bitcast i8* %op109 to i64*, !dbg !4726
  store i64 %30, i64* %31, align 8, !dbg !4726
  br label %if.end, !dbg !4727

if.end:                                           ; preds = %if.then, %lor.lhs.false100
  %result111 = getelementptr inbounds i8, i8* %9, i64 16, !dbg !4728
  %32 = bitcast i8* %result111 to %union.tree_node**, !dbg !4728
  store %union.tree_node* %result, %union.tree_node** %32, align 8, !dbg !4729
  %call112 = tail call i32 @vn_nary_op_compute_hash(%struct.vn_nary_op_s* %19) #7, !dbg !4730
  %hashcode = getelementptr inbounds i8, i8* %9, i64 8, !dbg !4731
  %33 = bitcast i8* %hashcode to i32*, !dbg !4731
  store i32 %call112, i32* %33, align 8, !dbg !4732
  %34 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !4733
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %34, i64 0, i32 0, !dbg !4734
  %35 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !4734
  %call114 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %35, i8* %9, i32 %call112, i32 1) #6, !dbg !4735
  call void @llvm.dbg.value(metadata i8** %call114, metadata !4685, metadata !DIExpression()), !dbg !4688
  %36 = load i8*, i8** %call114, align 8, !dbg !4736
  %tobool = icmp eq i8* %36, null, !dbg !4736
  br i1 %tobool, label %cond.end117, label %cond.true115, !dbg !4736

cond.true115:                                     ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 1627, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4736
  br label %cond.end117, !dbg !4736

cond.end117:                                      ; preds = %if.end, %cond.true115
  store i8* %9, i8** %call114, align 8, !dbg !4737
  ret %struct.vn_nary_op_s* %19, !dbg !4738
}

; Function Attrs: nounwind uwtable
define dso_local void @free_scc_vn() local_unnamed_addr #4 !dbg !4739 {
entry:
  %0 = load %struct.htab*, %struct.htab** @constant_to_value_id, align 8, !dbg !4748
  tail call void @htab_delete(%struct.htab* %0) #6, !dbg !4749
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @constant_value_ids, align 8, !dbg !4750
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !4750
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @constant_value_ids, align 8, !dbg !4750
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull @shared_lookup_phiargs) #7, !dbg !4751
  tail call fastcc void @VEC_vn_reference_op_s_heap_free(%struct.VEC_vn_reference_op_s_heap** nonnull @shared_lookup_references) #7, !dbg !4752
  %2 = load i8*, i8** bitcast (i32** @rpo_numbers to i8**), align 8, !dbg !4753
  tail call void @free(i8* %2) #6, !dbg !4753
  call void @llvm.dbg.value(metadata i64 0, metadata !4743, metadata !DIExpression()), !dbg !4754
  br label %for.cond, !dbg !4755

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4756
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4743, metadata !DIExpression()), !dbg !4754
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4757
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !4757
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4757
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 2, !dbg !4757
  %5 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4757
  %tobool = icmp eq %struct.VEC_tree_gc* %5, null, !dbg !4757
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4757

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %5, i64 0, i32 0, !dbg !4757
  br label %cond.end, !dbg !4757

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4757
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !4757
  %conv = zext i32 %call to i64, !dbg !4757
  %cmp = icmp ult i64 %i.0, %conv, !dbg !4758
  br i1 %cmp, label %for.body, label %for.end, !dbg !4759

for.body:                                         ; preds = %cond.end
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4760
  %gimple_df6 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 3, !dbg !4760
  %7 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df6, align 8, !dbg !4760
  %ssa_names7 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %7, i64 0, i32 2, !dbg !4760
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names7, align 8, !dbg !4760
  %tobool8 = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !4760
  br i1 %tobool8, label %cond.end15, label %cond.true9, !dbg !4760

cond.true9:                                       ; preds = %for.body
  %base13 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !4760
  br label %cond.end15, !dbg !4760

cond.end15:                                       ; preds = %for.body, %cond.true9
  %cond16 = phi %struct.VEC_tree_base* [ %base13, %cond.true9 ], [ null, %for.body ], !dbg !4760
  %conv17 = trunc i64 %i.0 to i32, !dbg !4760
  %call18 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond16, i32 %conv17) #7, !dbg !4760
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !4744, metadata !DIExpression()), !dbg !4761
  %tobool19 = icmp eq %union.tree_node* %call18, null, !dbg !4762
  br i1 %tobool19, label %for.inc, label %land.lhs.true, !dbg !4764

land.lhs.true:                                    ; preds = %cond.end15
  %call20 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call18) #7, !dbg !4765
  %needs_insertion = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call20, i64 0, i32 5, !dbg !4766
  %bf.load = load i8, i8* %needs_insertion, align 4, !dbg !4766
  %bf.clear = and i8 %bf.load, 16, !dbg !4766
  %tobool21 = icmp eq i8 %bf.clear, 0, !dbg !4765
  br i1 %tobool21, label %for.inc, label %if.then, !dbg !4767

if.then:                                          ; preds = %land.lhs.true
  tail call void @release_ssa_name(%union.tree_node* nonnull %call18) #6, !dbg !4768
  br label %for.inc, !dbg !4768

for.inc:                                          ; preds = %land.lhs.true, %cond.end15, %if.then
  %inc = add nuw nsw i64 %i.0, 1, !dbg !4769
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4743, metadata !DIExpression()), !dbg !4754
  br label %for.cond, !dbg !4770, !llvm.loop !4771

for.end:                                          ; preds = %cond.end
  %9 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 1) to i64*), align 8, !dbg !4773
  %sub.ptr.sub = sub i64 0, %9, !dbg !4773
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 5), align 8, !dbg !4773
  %cmp22 = icmp sgt i64 %sub.ptr.sub, 0, !dbg !4773
  %10 = inttoptr i64 %9 to i8*, !dbg !4773
  br i1 %cmp22, label %land.lhs.true24, label %cond.false31, !dbg !4773

land.lhs.true24:                                  ; preds = %for.end
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 4) to i64*), align 8, !dbg !4773
  %sub.ptr.sub26 = sub i64 %11, %9, !dbg !4773
  %cmp27 = icmp sgt i64 %sub.ptr.sub26, %sub.ptr.sub, !dbg !4773
  br i1 %cmp27, label %cond.true29, label %cond.false31, !dbg !4773

cond.true29:                                      ; preds = %land.lhs.true24
  %add.ptr30 = getelementptr inbounds i8, i8* %10, i64 %sub.ptr.sub, !dbg !4773
  store i8* %add.ptr30, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 2), align 8, !dbg !4773
  store i8* %add.ptr30, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @vn_ssa_aux_obstack, i64 0, i32 3), align 8, !dbg !4773
  br label %cond.end33, !dbg !4773

cond.false31:                                     ; preds = %land.lhs.true24, %for.end
  %add.ptr32 = getelementptr inbounds i8, i8* %10, i64 %sub.ptr.sub, !dbg !4773
  tail call void @obstack_free(%struct.obstack* nonnull @vn_ssa_aux_obstack, i8* %add.ptr32) #6, !dbg !4773
  br label %cond.end33, !dbg !4773

cond.end33:                                       ; preds = %cond.false31, %cond.true29
  tail call fastcc void @VEC_vn_ssa_aux_t_heap_free(%struct.VEC_vn_ssa_aux_t_heap** nonnull @vn_ssa_aux_table) #7, !dbg !4774
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull @sccstack) #7, !dbg !4775
  %12 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !4776
  tail call fastcc void @free_vn_table(%struct.vn_tables_s* %12) #7, !dbg !4777
  %13 = load i8*, i8** bitcast (%struct.vn_tables_s** @valid_info to i8**), align 8, !dbg !4778
  tail call void @free(i8* %13) #6, !dbg !4778
  %14 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !4779
  tail call fastcc void @free_vn_table(%struct.vn_tables_s* %14) #7, !dbg !4780
  %15 = load i8*, i8** bitcast (%struct.vn_tables_s** @optimistic_info to i8**), align 8, !dbg !4781
  tail call void @free(i8* %15) #6, !dbg !4781
  ret void, !dbg !4782
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #1

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !4783 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !4788, metadata !DIExpression()), !dbg !4789
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4790
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !4790
  br i1 %tobool, label %if.end, label %if.then, !dbg !4792

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !4792
  tail call void @free(i8* nonnull %1) #6, !dbg !4790
  br label %if.end, !dbg !4790

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !4792
  ret void, !dbg !4792
}

declare dso_local void @free(i8*) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4793 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4799, metadata !DIExpression()), !dbg !4800
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4801
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4801

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !4801
  %0 = load i32, i32* %num, align 8, !dbg !4801
  br label %cond.end, !dbg !4801

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4801
  ret i32 %cond, !dbg !4801
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4802 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4806, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4807, metadata !DIExpression()), !dbg !4808
  br label %land.end, !dbg !4809

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4809
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4809
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4809
  ret %union.tree_node* %0, !dbg !4809
}

declare dso_local void @release_ssa_name(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @obstack_free(%struct.obstack*, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_ssa_aux_t_heap_free(%struct.VEC_vn_ssa_aux_t_heap** %vec_) unnamed_addr #0 !dbg !4810 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, metadata !4814, metadata !DIExpression()), !dbg !4815
  %0 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !4816
  %tobool = icmp eq %struct.VEC_vn_ssa_aux_t_heap* %0, null, !dbg !4816
  br i1 %tobool, label %if.end, label %if.then, !dbg !4818

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_vn_ssa_aux_t_heap* %0 to i8*, !dbg !4818
  tail call void @free(i8* nonnull %1) #6, !dbg !4816
  br label %if.end, !dbg !4816

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_vn_ssa_aux_t_heap* null, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !4818
  ret void, !dbg !4818
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_vn_table(%struct.vn_tables_s* %table) unnamed_addr #4 !dbg !4819 {
entry:
  call void @llvm.dbg.value(metadata %struct.vn_tables_s* %table, metadata !4823, metadata !DIExpression()), !dbg !4824
  %phis = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 1, !dbg !4825
  %0 = load %struct.htab*, %struct.htab** %phis, align 8, !dbg !4825
  tail call void @htab_delete(%struct.htab* %0) #6, !dbg !4826
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 0, !dbg !4827
  %1 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !4827
  tail call void @htab_delete(%struct.htab* %1) #6, !dbg !4828
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 2, !dbg !4829
  %2 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !4829
  tail call void @htab_delete(%struct.htab* %2) #6, !dbg !4830
  %chunk = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 3, i32 1, !dbg !4831
  %3 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !4831
  %4 = load i64, i64* %3, align 8, !dbg !4831
  %sub.ptr.sub = sub i64 0, %4, !dbg !4831
  %temp = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 3, i32 5, !dbg !4831
  store i64 %sub.ptr.sub, i64* %temp, align 8, !dbg !4831
  %cmp = icmp sgt i64 %sub.ptr.sub, 0, !dbg !4831
  %5 = inttoptr i64 %4 to i8*, !dbg !4831
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !4831

land.lhs.true:                                    ; preds = %entry
  %chunk_limit = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 3, i32 4, !dbg !4831
  %6 = bitcast i8** %chunk_limit to i64*, !dbg !4831
  %7 = load i64, i64* %6, align 8, !dbg !4831
  %sub.ptr.sub10 = sub i64 %7, %4, !dbg !4831
  %cmp11 = icmp sgt i64 %sub.ptr.sub10, %sub.ptr.sub, !dbg !4831
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !4831

cond.true:                                        ; preds = %land.lhs.true
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %sub.ptr.sub, !dbg !4831
  %object_base = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 3, i32 2, !dbg !4831
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !4831
  %next_free = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 3, i32 3, !dbg !4831
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !4831
  br label %cond.end, !dbg !4831

cond.false:                                       ; preds = %land.lhs.true, %entry
  %nary_obstack18 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 3, !dbg !4831
  %add.ptr23 = getelementptr inbounds i8, i8* %5, i64 %sub.ptr.sub, !dbg !4831
  tail call void @obstack_free(%struct.obstack* nonnull %nary_obstack18, i8* %add.ptr23) #6, !dbg !4831
  br label %cond.end, !dbg !4831

cond.end:                                         ; preds = %cond.false, %cond.true
  %phis_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 4, !dbg !4832
  %8 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %phis_pool, align 8, !dbg !4832
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %8) #6, !dbg !4833
  %references_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 5, !dbg !4834
  %9 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %references_pool, align 8, !dbg !4834
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %9) #6, !dbg !4835
  ret void, !dbg !4836
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @run_scc_vn(i8 zeroext %may_insert_arg) local_unnamed_addr #4 !dbg !4837 {
entry:
  call void @llvm.dbg.value(metadata i8 %may_insert_arg, metadata !4841, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i8 1, metadata !4844, metadata !DIExpression()), !dbg !4872
  store i8 %may_insert_arg, i8* @may_insert, align 1, !dbg !4873
  tail call fastcc void @init_scc_vn() #7, !dbg !4874
  %0 = load i64, i64* bitcast (%struct.vn_tables_s** @valid_info to i64*), align 8, !dbg !4875
  store i64 %0, i64* bitcast (%struct.vn_tables_s** @current_info to i64*), align 8, !dbg !4876
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4877
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 2, !dbg !4877
  br label %for.cond, !dbg !4878

for.cond:                                         ; preds = %for.inc, %entry
  %param.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.inc ]
  %param.0 = load %union.tree_node*, %union.tree_node** %param.0.in, align 8, !dbg !4879
  call void @llvm.dbg.value(metadata %union.tree_node* %param.0, metadata !4843, metadata !DIExpression()), !dbg !4872
  %tobool = icmp eq %union.tree_node* %param.0, null, !dbg !4880
  br i1 %tobool, label %for.cond4.preheader, label %for.body, !dbg !4880

for.cond4.preheader:                              ; preds = %for.cond
  br label %for.cond4, !dbg !4881

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4882
  %call = tail call %union.tree_node* @gimple_default_def(%struct.function* %2, %union.tree_node* nonnull %param.0) #6, !dbg !4883
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !4884
  br i1 %cmp, label %for.inc, label %if.then, !dbg !4885

if.then:                                          ; preds = %for.body
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4886
  %call2 = tail call %union.tree_node* @gimple_default_def(%struct.function* %3, %union.tree_node* nonnull %param.0) #6, !dbg !4887
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4845, metadata !DIExpression()), !dbg !4888
  %call3 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call2) #7, !dbg !4889
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call3, i64 0, i32 0, !dbg !4890
  store %union.tree_node* %call2, %union.tree_node** %valnum, align 8, !dbg !4891
  br label %for.inc, !dbg !4892

for.inc:                                          ; preds = %for.body, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %param.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4893
  br label %for.cond, !dbg !4894, !llvm.loop !4895

for.cond4:                                        ; preds = %for.cond4.preheader, %for.inc41
  %i.0 = phi i64 [ %inc, %for.inc41 ], [ 1, %for.cond4.preheader ], !dbg !4897
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4842, metadata !DIExpression()), !dbg !4872
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4898
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 3, !dbg !4898
  %5 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4898
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %5, i64 0, i32 2, !dbg !4898
  %6 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4898
  %tobool6 = icmp eq %struct.VEC_tree_gc* %6, null, !dbg !4898
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !4898

cond.true:                                        ; preds = %for.cond4
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %6, i64 0, i32 0, !dbg !4898
  br label %cond.end, !dbg !4898

cond.end:                                         ; preds = %for.cond4, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond4 ], !dbg !4898
  %call10 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !4898
  %conv = zext i32 %call10 to i64, !dbg !4898
  %cmp11 = icmp ult i64 %i.0, %conv, !dbg !4899
  br i1 %cmp11, label %for.body13, label %for.cond43.preheader, !dbg !4881

for.cond43.preheader:                             ; preds = %cond.end
  br label %for.cond43, !dbg !4900

for.body13:                                       ; preds = %cond.end
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4901
  %gimple_df15 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 3, !dbg !4901
  %8 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df15, align 8, !dbg !4901
  %ssa_names16 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %8, i64 0, i32 2, !dbg !4901
  %9 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names16, align 8, !dbg !4901
  %tobool17 = icmp eq %struct.VEC_tree_gc* %9, null, !dbg !4901
  br i1 %tobool17, label %cond.end24, label %cond.true18, !dbg !4901

cond.true18:                                      ; preds = %for.body13
  %base22 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %9, i64 0, i32 0, !dbg !4901
  br label %cond.end24, !dbg !4901

cond.end24:                                       ; preds = %for.body13, %cond.true18
  %cond25 = phi %struct.VEC_tree_base* [ %base22, %cond.true18 ], [ null, %for.body13 ], !dbg !4901
  %conv26 = trunc i64 %i.0 to i32, !dbg !4901
  %call27 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond25, i32 %conv26) #7, !dbg !4901
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !4851, metadata !DIExpression()), !dbg !4902
  %tobool28 = icmp eq %union.tree_node* %call27, null, !dbg !4903
  br i1 %tobool28, label %cleanup, label %land.lhs.true, !dbg !4905

land.lhs.true:                                    ; preds = %cond.end24
  %call29 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call27) #7, !dbg !4906
  %visited = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call29, i64 0, i32 5, !dbg !4907
  %bf.load = load i8, i8* %visited, align 4, !dbg !4907
  %bf.clear = and i8 %bf.load, 1, !dbg !4907
  %cmp30 = icmp eq i8 %bf.clear, 0, !dbg !4908
  br i1 %cmp30, label %land.lhs.true32, label %cleanup, !dbg !4909

land.lhs.true32:                                  ; preds = %land.lhs.true
  %call33 = tail call fastcc zeroext i8 @has_zero_uses(%union.tree_node* nonnull %call27) #7, !dbg !4910
  %tobool34 = icmp eq i8 %call33, 0, !dbg !4910
  br i1 %tobool34, label %if.then35, label %cleanup, !dbg !4911

if.then35:                                        ; preds = %land.lhs.true32
  %call36 = tail call fastcc zeroext i8 @DFS(%union.tree_node* nonnull %call27) #7, !dbg !4912
  %tobool37 = icmp eq i8 %call36, 0, !dbg !4912
  br i1 %tobool37, label %if.then38, label %cleanup, !dbg !4914

if.then38:                                        ; preds = %if.then35
  tail call void @free_scc_vn() #7, !dbg !4915
  store i8 0, i8* @may_insert, align 1, !dbg !4917
  br label %cleanup, !dbg !4918

cleanup:                                          ; preds = %if.then35, %land.lhs.true32, %cond.end24, %land.lhs.true, %if.then38
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then38 ], [ true, %if.then35 ], [ true, %land.lhs.true32 ], [ true, %land.lhs.true ], [ true, %cond.end24 ]
  br i1 %cleanup.dest.slot.0, label %for.inc41, label %cleanup235.loopexit

for.inc41:                                        ; preds = %cleanup
  %inc = add nuw nsw i64 %i.0, 1, !dbg !4919
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4842, metadata !DIExpression()), !dbg !4872
  br label %for.cond4, !dbg !4920, !llvm.loop !4921

for.cond43:                                       ; preds = %for.cond43.preheader, %cleanup97
  %i.1 = phi i64 [ %inc102, %cleanup97 ], [ 1, %for.cond43.preheader ], !dbg !4923
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !4842, metadata !DIExpression()), !dbg !4872
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4924
  %gimple_df45 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 3, !dbg !4924
  %11 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df45, align 8, !dbg !4924
  %ssa_names46 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %11, i64 0, i32 2, !dbg !4924
  %12 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names46, align 8, !dbg !4924
  %tobool47 = icmp eq %struct.VEC_tree_gc* %12, null, !dbg !4924
  br i1 %tobool47, label %cond.end54, label %cond.true48, !dbg !4924

cond.true48:                                      ; preds = %for.cond43
  %base52 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %12, i64 0, i32 0, !dbg !4924
  br label %cond.end54, !dbg !4924

cond.end54:                                       ; preds = %for.cond43, %cond.true48
  %cond55 = phi %struct.VEC_tree_base* [ %base52, %cond.true48 ], [ null, %for.cond43 ], !dbg !4924
  %call56 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond55) #7, !dbg !4924
  %conv57 = zext i32 %call56 to i64, !dbg !4924
  %cmp58 = icmp ult i64 %i.1, %conv57, !dbg !4925
  br i1 %cmp58, label %for.body60, label %while.cond.preheader, !dbg !4900

while.cond.preheader:                             ; preds = %cond.end54
  br label %while.cond, !dbg !4926

for.body60:                                       ; preds = %cond.end54
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4927
  %gimple_df63 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 3, !dbg !4927
  %14 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df63, align 8, !dbg !4927
  %ssa_names64 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %14, i64 0, i32 2, !dbg !4927
  %15 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names64, align 8, !dbg !4927
  %tobool65 = icmp eq %struct.VEC_tree_gc* %15, null, !dbg !4927
  br i1 %tobool65, label %cond.end72, label %cond.true66, !dbg !4927

cond.true66:                                      ; preds = %for.body60
  %base70 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %15, i64 0, i32 0, !dbg !4927
  br label %cond.end72, !dbg !4927

cond.end72:                                       ; preds = %for.body60, %cond.true66
  %cond73 = phi %struct.VEC_tree_base* [ %base70, %cond.true66 ], [ null, %for.body60 ], !dbg !4927
  %conv74 = trunc i64 %i.1 to i32, !dbg !4927
  %call75 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond73, i32 %conv74) #7, !dbg !4927
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !4855, metadata !DIExpression()), !dbg !4928
  %tobool76 = icmp eq %union.tree_node* %call75, null, !dbg !4929
  br i1 %tobool76, label %cleanup97, label %if.end78, !dbg !4931

if.end78:                                         ; preds = %cond.end72
  %call79 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call75) #7, !dbg !4932
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %call79, metadata !4859, metadata !DIExpression()), !dbg !4928
  %valnum80 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call79, i64 0, i32 0, !dbg !4933
  %16 = load %union.tree_node*, %union.tree_node** %valnum80, align 8, !dbg !4933
  %cmp81 = icmp eq %union.tree_node* %16, %call75, !dbg !4935
  br i1 %cmp81, label %if.then86, label %lor.lhs.false, !dbg !4936

lor.lhs.false:                                    ; preds = %if.end78
  %17 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !4937
  %cmp84 = icmp eq %union.tree_node* %16, %17, !dbg !4938
  br i1 %cmp84, label %if.then86, label %if.else, !dbg !4939

if.then86:                                        ; preds = %lor.lhs.false, %if.end78
  %call87 = tail call i32 @get_next_value_id() #7, !dbg !4940
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call79, i64 0, i32 2, !dbg !4941
  store i32 %call87, i32* %value_id, align 8, !dbg !4942
  br label %cleanup97, !dbg !4943

if.else:                                          ; preds = %lor.lhs.false
  %call89 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %16) #6, !dbg !4944
  %tobool90 = icmp eq i8 %call89, 0, !dbg !4944
  br i1 %tobool90, label %cleanup97, label %if.then91, !dbg !4946

if.then91:                                        ; preds = %if.else
  %18 = load %union.tree_node*, %union.tree_node** %valnum80, align 8, !dbg !4947
  %call93 = tail call i32 @get_or_alloc_constant_value_id(%union.tree_node* %18) #7, !dbg !4948
  %value_id94 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call79, i64 0, i32 2, !dbg !4949
  store i32 %call93, i32* %value_id94, align 8, !dbg !4950
  br label %cleanup97, !dbg !4951

cleanup97:                                        ; preds = %if.else, %cond.end72, %if.then86, %if.then91
  %inc102 = add nuw nsw i64 %i.1, 1, !dbg !4952
  call void @llvm.dbg.value(metadata i64 %inc102, metadata !4842, metadata !DIExpression()), !dbg !4872
  br label %for.cond43, !dbg !4953, !llvm.loop !4954

while.cond.loopexit:                              ; preds = %cond.end116
  %changed.1.lcssa = phi i8 [ %changed.1, %cond.end116 ], !dbg !4956
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4844, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4844, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !4844, metadata !DIExpression()), !dbg !4872
  br label %while.cond, !dbg !4926

while.cond:                                       ; preds = %while.cond.preheader, %while.cond.loopexit
  %changed.0 = phi i8 [ %changed.1.lcssa, %while.cond.loopexit ], [ 1, %while.cond.preheader ], !dbg !4872
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !4844, metadata !DIExpression()), !dbg !4872
  %tobool104 = icmp eq i8 %changed.0, 0, !dbg !4926
  br i1 %tobool104, label %while.end, label %for.cond105.preheader, !dbg !4926

for.cond105.preheader:                            ; preds = %while.cond
  br label %for.cond105, !dbg !4957

for.cond105:                                      ; preds = %for.cond105.preheader, %cleanup167
  %changed.1 = phi i8 [ %changed.3, %cleanup167 ], [ 0, %for.cond105.preheader ], !dbg !4956
  %i.2 = phi i64 [ %inc172, %cleanup167 ], [ 1, %for.cond105.preheader ], !dbg !4958
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !4842, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !4844, metadata !DIExpression()), !dbg !4872
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4959
  %gimple_df107 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 3, !dbg !4959
  %20 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df107, align 8, !dbg !4959
  %ssa_names108 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %20, i64 0, i32 2, !dbg !4959
  %21 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names108, align 8, !dbg !4959
  %tobool109 = icmp eq %struct.VEC_tree_gc* %21, null, !dbg !4959
  br i1 %tobool109, label %cond.end116, label %cond.true110, !dbg !4959

cond.true110:                                     ; preds = %for.cond105
  %base114 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %21, i64 0, i32 0, !dbg !4959
  br label %cond.end116, !dbg !4959

cond.end116:                                      ; preds = %for.cond105, %cond.true110
  %cond117 = phi %struct.VEC_tree_base* [ %base114, %cond.true110 ], [ null, %for.cond105 ], !dbg !4959
  %call118 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond117) #7, !dbg !4959
  %conv119 = zext i32 %call118 to i64, !dbg !4959
  %cmp120 = icmp ult i64 %i.2, %conv119, !dbg !4960
  br i1 %cmp120, label %for.body122, label %while.cond.loopexit, !dbg !4957, !llvm.loop !4961

for.body122:                                      ; preds = %cond.end116
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4963
  %gimple_df125 = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, i32 3, !dbg !4963
  %23 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df125, align 8, !dbg !4963
  %ssa_names126 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %23, i64 0, i32 2, !dbg !4963
  %24 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names126, align 8, !dbg !4963
  %tobool127 = icmp eq %struct.VEC_tree_gc* %24, null, !dbg !4963
  br i1 %tobool127, label %cond.end134, label %cond.true128, !dbg !4963

cond.true128:                                     ; preds = %for.body122
  %base132 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %24, i64 0, i32 0, !dbg !4963
  br label %cond.end134, !dbg !4963

cond.end134:                                      ; preds = %for.body122, %cond.true128
  %cond135 = phi %struct.VEC_tree_base* [ %base132, %cond.true128 ], [ null, %for.body122 ], !dbg !4963
  %conv136 = trunc i64 %i.2 to i32, !dbg !4963
  %call137 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond135, i32 %conv136) #7, !dbg !4963
  call void @llvm.dbg.value(metadata %union.tree_node* %call137, metadata !4860, metadata !DIExpression()), !dbg !4964
  %tobool139 = icmp eq %union.tree_node* %call137, null, !dbg !4965
  br i1 %tobool139, label %cleanup167, label %if.end141, !dbg !4967

if.end141:                                        ; preds = %cond.end134
  %call142 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call137) #7, !dbg !4968
  call void @llvm.dbg.value(metadata %struct.vn_ssa_aux* %call142, metadata !4865, metadata !DIExpression()), !dbg !4964
  %25 = bitcast %struct.vn_ssa_aux* %call142 to i64**, !dbg !4969
  %26 = load i64*, i64** %25, align 8, !dbg !4969
  %bf.load145 = load i64, i64* %26, align 8, !dbg !4969
  %bf.cast1473 = and i64 %bf.load145, 65535, !dbg !4971
  %cmp148 = icmp eq i64 %bf.cast1473, 141, !dbg !4971
  %27 = bitcast i64* %26 to %union.tree_node*, !dbg !4972
  br i1 %cmp148, label %land.lhs.true150, label %cleanup167, !dbg !4972

land.lhs.true150:                                 ; preds = %if.end141
  %valnum151 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call142, i64 0, i32 0, !dbg !4973
  %cmp152 = icmp eq %union.tree_node* %call137, %27, !dbg !4974
  br i1 %cmp152, label %cleanup167, label %land.lhs.true154, !dbg !4975

land.lhs.true154:                                 ; preds = %land.lhs.true150
  %value_id155 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call142, i64 0, i32 2, !dbg !4976
  %28 = load i32, i32* %value_id155, align 8, !dbg !4976
  %call157 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %27) #7, !dbg !4977
  %value_id158 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call157, i64 0, i32 2, !dbg !4978
  %29 = load i32, i32* %value_id158, align 8, !dbg !4978
  %cmp159 = icmp eq i32 %28, %29, !dbg !4979
  br i1 %cmp159, label %cleanup167, label %if.then161, !dbg !4980

if.then161:                                       ; preds = %land.lhs.true154
  call void @llvm.dbg.value(metadata i8 1, metadata !4844, metadata !DIExpression()), !dbg !4872
  %30 = load %union.tree_node*, %union.tree_node** %valnum151, align 8, !dbg !4981
  %call163 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %30) #7, !dbg !4983
  %value_id164 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call163, i64 0, i32 2, !dbg !4984
  %31 = load i32, i32* %value_id164, align 8, !dbg !4984
  store i32 %31, i32* %value_id155, align 8, !dbg !4985
  br label %cleanup167, !dbg !4986

cleanup167:                                       ; preds = %land.lhs.true154, %land.lhs.true150, %cond.end134, %if.end141, %if.then161
  %changed.3 = phi i8 [ %changed.1, %cond.end134 ], [ 1, %if.then161 ], [ %changed.1, %land.lhs.true154 ], [ %changed.1, %land.lhs.true150 ], [ %changed.1, %if.end141 ], !dbg !4956
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !4844, metadata !DIExpression()), !dbg !4872
  %inc172 = add nuw nsw i64 %i.2, 1, !dbg !4987
  call void @llvm.dbg.value(metadata i64 %inc172, metadata !4842, metadata !DIExpression()), !dbg !4872
  br label %for.cond105, !dbg !4988, !llvm.loop !4989

while.end:                                        ; preds = %while.cond
  tail call fastcc void @set_hashtable_value_ids() #7, !dbg !4991
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4992
  %tobool174 = icmp eq %struct._IO_FILE* %32, null, !dbg !4992
  br i1 %tobool174, label %if.end234, label %land.lhs.true175, !dbg !4993

land.lhs.true175:                                 ; preds = %while.end
  %33 = load i32, i32* @dump_flags, align 4, !dbg !4994
  %and = and i32 %33, 8, !dbg !4995
  %tobool176 = icmp eq i32 %and, 0, !dbg !4995
  br i1 %tobool176, label %if.end234, label %if.then177, !dbg !4996

if.then177:                                       ; preds = %land.lhs.true175
  %call178 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4997
  call void @llvm.dbg.value(metadata i64 0, metadata !4842, metadata !DIExpression()), !dbg !4872
  br label %for.cond179, !dbg !4998

for.cond179:                                      ; preds = %for.inc231, %if.then177
  %i.3 = phi i64 [ 0, %if.then177 ], [ %inc232, %for.inc231 ], !dbg !4999
  call void @llvm.dbg.value(metadata i64 %i.3, metadata !4842, metadata !DIExpression()), !dbg !4872
  %34 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5000
  %gimple_df181 = getelementptr inbounds %struct.function, %struct.function* %34, i64 0, i32 3, !dbg !5000
  %35 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df181, align 8, !dbg !5000
  %ssa_names182 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %35, i64 0, i32 2, !dbg !5000
  %36 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names182, align 8, !dbg !5000
  %tobool183 = icmp eq %struct.VEC_tree_gc* %36, null, !dbg !5000
  br i1 %tobool183, label %cond.end190, label %cond.true184, !dbg !5000

cond.true184:                                     ; preds = %for.cond179
  %base188 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %36, i64 0, i32 0, !dbg !5000
  br label %cond.end190, !dbg !5000

cond.end190:                                      ; preds = %for.cond179, %cond.true184
  %cond191 = phi %struct.VEC_tree_base* [ %base188, %cond.true184 ], [ null, %for.cond179 ], !dbg !5000
  %call192 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond191) #7, !dbg !5000
  %conv193 = zext i32 %call192 to i64, !dbg !5000
  %cmp194 = icmp ult i64 %i.3, %conv193, !dbg !5001
  br i1 %cmp194, label %for.body196, label %if.end234.loopexit, !dbg !5002

for.body196:                                      ; preds = %cond.end190
  %37 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5003
  %gimple_df199 = getelementptr inbounds %struct.function, %struct.function* %37, i64 0, i32 3, !dbg !5003
  %38 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df199, align 8, !dbg !5003
  %ssa_names200 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %38, i64 0, i32 2, !dbg !5003
  %39 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names200, align 8, !dbg !5003
  %tobool201 = icmp eq %struct.VEC_tree_gc* %39, null, !dbg !5003
  br i1 %tobool201, label %cond.end208, label %cond.true202, !dbg !5003

cond.true202:                                     ; preds = %for.body196
  %base206 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %39, i64 0, i32 0, !dbg !5003
  br label %cond.end208, !dbg !5003

cond.end208:                                      ; preds = %for.body196, %cond.true202
  %cond209 = phi %struct.VEC_tree_base* [ %base206, %cond.true202 ], [ null, %for.body196 ], !dbg !5003
  %conv210 = trunc i64 %i.3 to i32, !dbg !5003
  %call211 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond209, i32 %conv210) #7, !dbg !5003
  call void @llvm.dbg.value(metadata %union.tree_node* %call211, metadata !4866, metadata !DIExpression()), !dbg !5004
  %tobool212 = icmp eq %union.tree_node* %call211, null, !dbg !5005
  br i1 %tobool212, label %for.inc231, label %land.lhs.true213, !dbg !5007

land.lhs.true213:                                 ; preds = %cond.end208
  %call214 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call211) #7, !dbg !5008
  %visited215 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call214, i64 0, i32 5, !dbg !5009
  %bf.load216 = load i8, i8* %visited215, align 4, !dbg !5009
  %bf.clear217 = and i8 %bf.load216, 1, !dbg !5009
  %tobool219 = icmp eq i8 %bf.clear217, 0, !dbg !5008
  br i1 %tobool219, label %for.inc231, label %land.lhs.true220, !dbg !5010

land.lhs.true220:                                 ; preds = %land.lhs.true213
  %call221 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call211) #7, !dbg !5011
  %valnum222 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call221, i64 0, i32 0, !dbg !5011
  %40 = load %union.tree_node*, %union.tree_node** %valnum222, align 8, !dbg !5011
  %cmp223 = icmp eq %union.tree_node* %40, %call211, !dbg !5012
  br i1 %cmp223, label %for.inc231, label %if.then225, !dbg !5013

if.then225:                                       ; preds = %land.lhs.true220
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5014
  tail call void @print_generic_expr(%struct._IO_FILE* %41, %union.tree_node* nonnull %call211, i32 0) #6, !dbg !5016
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5017
  %call226 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !5018
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5019
  %call227 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call211) #7, !dbg !5020
  %valnum228 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call227, i64 0, i32 0, !dbg !5020
  %44 = load %union.tree_node*, %union.tree_node** %valnum228, align 8, !dbg !5020
  tail call void @print_generic_expr(%struct._IO_FILE* %43, %union.tree_node* %44, i32 0) #6, !dbg !5021
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5022
  %call229 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5023
  br label %for.inc231, !dbg !5024

for.inc231:                                       ; preds = %land.lhs.true220, %land.lhs.true213, %cond.end208, %if.then225
  %inc232 = add nuw nsw i64 %i.3, 1, !dbg !5025
  call void @llvm.dbg.value(metadata i64 %inc232, metadata !4842, metadata !DIExpression()), !dbg !4872
  br label %for.cond179, !dbg !5026, !llvm.loop !5027

if.end234.loopexit:                               ; preds = %cond.end190
  br label %if.end234, !dbg !5029

if.end234:                                        ; preds = %if.end234.loopexit, %land.lhs.true175, %while.end
  store i8 0, i8* @may_insert, align 1, !dbg !5029
  br label %cleanup235, !dbg !5030

cleanup235.loopexit:                              ; preds = %cleanup
  br label %cleanup235, !dbg !5031

cleanup235:                                       ; preds = %cleanup235.loopexit, %if.end234
  %retval.2 = phi i8 [ 1, %if.end234 ], [ 0, %cleanup235.loopexit ]
  ret i8 %retval.2, !dbg !5031
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_scc_vn() unnamed_addr #4 !dbg !5032 {
entry:
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !5041
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** @sccstack, align 8, !dbg !5042
  %call = tail call %struct.htab* @htab_create(i64 23, i32 (i8*)* nonnull @vn_constant_hash, i32 (i8*, i8*)* nonnull @vn_constant_eq, void (i8*)* nonnull @free) #6, !dbg !5043
  store %struct.htab* %call, %struct.htab** @constant_to_value_id, align 8, !dbg !5044
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5045
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** @constant_value_ids, align 8, !dbg !5046
  store i32 1, i32* @next_dfs_num, align 4, !dbg !5047
  store i32 1, i32* @next_value_id, align 4, !dbg !5048
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5049
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !5049
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5049
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !5049
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !5049
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !5049
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5049

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !5049
  br label %cond.end, !dbg !5049

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5049
  %call5 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !5049
  %add = add i32 %call5, 1, !dbg !5049
  %call6 = tail call fastcc %struct.VEC_vn_ssa_aux_t_heap* @VEC_vn_ssa_aux_t_heap_alloc(i32 %add) #7, !dbg !5049
  store %struct.VEC_vn_ssa_aux_t_heap* %call6, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !5050
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5051
  %gimple_df8 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !5051
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df8, align 8, !dbg !5051
  %ssa_names9 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 2, !dbg !5051
  %5 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names9, align 8, !dbg !5051
  %tobool10 = icmp eq %struct.VEC_tree_gc* %5, null, !dbg !5051
  br i1 %tobool10, label %cond.end17, label %cond.true11, !dbg !5051

cond.true11:                                      ; preds = %cond.end
  %base15 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %5, i64 0, i32 0, !dbg !5051
  br label %cond.end17, !dbg !5051

cond.end17:                                       ; preds = %cond.end, %cond.true11
  %cond18 = phi %struct.VEC_tree_base* [ %base15, %cond.true11 ], [ null, %cond.end ], !dbg !5051
  %call19 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond18) #7, !dbg !5051
  %add20 = add i32 %call19, 1, !dbg !5051
  tail call fastcc void @VEC_vn_ssa_aux_t_heap_safe_grow_cleared(%struct.VEC_vn_ssa_aux_t_heap** nonnull @vn_ssa_aux_table, i32 %add20) #7, !dbg !5051
  %call21 = tail call i32 @_obstack_begin(%struct.obstack* nonnull @vn_ssa_aux_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !5052
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** @shared_lookup_phiargs, align 8, !dbg !5053
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !5054
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5055
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !5055
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5055
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 5, !dbg !5055
  %8 = load i32, i32* %x_last_basic_block, align 8, !dbg !5055
  %add23 = add nsw i32 %8, 2, !dbg !5055
  %conv = sext i32 %add23 to i64, !dbg !5055
  %call24 = tail call i8* @xcalloc(i64 %conv, i64 4) #6, !dbg !5055
  store i8* %call24, i8** bitcast (i32** @rpo_numbers to i8**), align 8, !dbg !5056
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5057
  %cfg26 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !5057
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg26, align 8, !dbg !5057
  %x_last_basic_block27 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 5, !dbg !5057
  %11 = load i32, i32* %x_last_basic_block27, align 8, !dbg !5057
  %add28 = add nsw i32 %11, 2, !dbg !5057
  %conv29 = sext i32 %add28 to i64, !dbg !5057
  %call30 = tail call i8* @xcalloc(i64 %conv29, i64 4) #6, !dbg !5057
  %12 = bitcast i8* %call30 to i32*, !dbg !5057
  call void @llvm.dbg.value(metadata i32* %12, metadata !5036, metadata !DIExpression()), !dbg !5058
  %call31 = tail call i32 @pre_and_rev_post_order_compute(i32* null, i32* %12, i8 zeroext 0) #6, !dbg !5059
  call void @llvm.dbg.value(metadata i32 0, metadata !5035, metadata !DIExpression()), !dbg !5058
  br label %for.cond, !dbg !5060

for.cond:                                         ; preds = %for.body, %cond.end17
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end17 ], !dbg !5062
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5035, metadata !DIExpression()), !dbg !5058
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5063
  %cfg33 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !5063
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg33, align 8, !dbg !5063
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 3, !dbg !5063
  %15 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !5063
  %sub = add nsw i32 %15, -2, !dbg !5065
  %16 = sext i32 %sub to i64, !dbg !5066
  %cmp = icmp slt i64 %indvars.iv, %16, !dbg !5066
  br i1 %cmp, label %for.body, label %for.end, !dbg !5067

for.body:                                         ; preds = %for.cond
  %17 = load i32*, i32** @rpo_numbers, align 8, !dbg !5068
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %indvars.iv, !dbg !5069
  %18 = load i32, i32* %arrayidx, align 4, !dbg !5069
  %idxprom35 = sext i32 %18 to i64, !dbg !5068
  %arrayidx36 = getelementptr inbounds i32, i32* %17, i64 %idxprom35, !dbg !5068
  %19 = trunc i64 %indvars.iv to i32, !dbg !5070
  store i32 %19, i32* %arrayidx36, align 4, !dbg !5070
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5071
  call void @llvm.dbg.value(metadata i32 undef, metadata !5035, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5058
  br label %for.cond, !dbg !5072, !llvm.loop !5073

for.end:                                          ; preds = %for.cond
  tail call void @free(i8* %call30) #6, !dbg !5075
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5076
  %call37 = tail call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !5077
  store %union.tree_node* %call37, %union.tree_node** @VN_TOP, align 8, !dbg !5078
  call void @llvm.dbg.value(metadata i64 0, metadata !5034, metadata !DIExpression()), !dbg !5058
  br label %for.cond38, !dbg !5079

for.cond38:                                       ; preds = %for.inc74, %for.end
  %i.0 = phi i64 [ 0, %for.end ], [ %inc75, %for.inc74 ], !dbg !5080
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5034, metadata !DIExpression()), !dbg !5058
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5081
  %gimple_df40 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 3, !dbg !5081
  %22 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df40, align 8, !dbg !5081
  %ssa_names41 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %22, i64 0, i32 2, !dbg !5081
  %23 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names41, align 8, !dbg !5081
  %tobool42 = icmp eq %struct.VEC_tree_gc* %23, null, !dbg !5081
  br i1 %tobool42, label %cond.end49, label %cond.true43, !dbg !5081

cond.true43:                                      ; preds = %for.cond38
  %base47 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %23, i64 0, i32 0, !dbg !5081
  br label %cond.end49, !dbg !5081

cond.end49:                                       ; preds = %for.cond38, %cond.true43
  %cond50 = phi %struct.VEC_tree_base* [ %base47, %cond.true43 ], [ null, %for.cond38 ], !dbg !5081
  %call51 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond50) #7, !dbg !5081
  %conv52 = zext i32 %call51 to i64, !dbg !5081
  %cmp53 = icmp ult i64 %i.0, %conv52, !dbg !5082
  br i1 %cmp53, label %for.body55, label %for.end76, !dbg !5083

for.body55:                                       ; preds = %cond.end49
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5084
  %gimple_df57 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 3, !dbg !5084
  %25 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df57, align 8, !dbg !5084
  %ssa_names58 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %25, i64 0, i32 2, !dbg !5084
  %26 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names58, align 8, !dbg !5084
  %tobool59 = icmp eq %struct.VEC_tree_gc* %26, null, !dbg !5084
  br i1 %tobool59, label %cond.end66, label %cond.true60, !dbg !5084

cond.true60:                                      ; preds = %for.body55
  %base64 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %26, i64 0, i32 0, !dbg !5084
  br label %cond.end66, !dbg !5084

cond.end66:                                       ; preds = %for.body55, %cond.true60
  %cond67 = phi %struct.VEC_tree_base* [ %base64, %cond.true60 ], [ null, %for.body55 ], !dbg !5084
  %conv68 = trunc i64 %i.0 to i32, !dbg !5084
  %call69 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond67, i32 %conv68) #7, !dbg !5084
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !5037, metadata !DIExpression()), !dbg !5085
  %tobool70 = icmp eq %union.tree_node* %call69, null, !dbg !5086
  br i1 %tobool70, label %for.inc74, label %if.then, !dbg !5088

if.then:                                          ; preds = %cond.end66
  %27 = load i64, i64* bitcast (%union.tree_node** @VN_TOP to i64*), align 8, !dbg !5089
  %call71 = tail call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* nonnull %call69) #7, !dbg !5091
  %28 = bitcast %struct.vn_ssa_aux* %call71 to i64*, !dbg !5092
  store i64 %27, i64* %28, align 8, !dbg !5092
  %call72 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call69) #7, !dbg !5093
  %expr = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call72, i64 0, i32 1, !dbg !5094
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !5095
  %call73 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call69) #7, !dbg !5096
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call73, i64 0, i32 2, !dbg !5097
  store i32 0, i32* %value_id, align 8, !dbg !5098
  br label %for.inc74, !dbg !5099

for.inc74:                                        ; preds = %cond.end66, %if.then
  %inc75 = add nuw nsw i64 %i.0, 1, !dbg !5100
  call void @llvm.dbg.value(metadata i64 %inc75, metadata !5034, metadata !DIExpression()), !dbg !5058
  br label %for.cond38, !dbg !5101, !llvm.loop !5102

for.end76:                                        ; preds = %cond.end49
  tail call void @renumber_gimple_stmt_uids() #6, !dbg !5104
  %call77 = tail call i8* @xcalloc(i64 1, i64 128) #6, !dbg !5105
  store i8* %call77, i8** bitcast (%struct.vn_tables_s** @valid_info to i8**), align 8, !dbg !5106
  %.cast = bitcast i8* %call77 to %struct.vn_tables_s*, !dbg !5107
  tail call fastcc void @allocate_vn_table(%struct.vn_tables_s* %.cast) #7, !dbg !5108
  %call78 = tail call i8* @xcalloc(i64 1, i64 128) #6, !dbg !5109
  store i8* %call78, i8** bitcast (%struct.vn_tables_s** @optimistic_info to i8**), align 8, !dbg !5110
  %.cast1 = bitcast i8* %call78 to %struct.vn_tables_s*, !dbg !5111
  tail call fastcc void @allocate_vn_table(%struct.vn_tables_s* %.cast1) #7, !dbg !5112
  ret void, !dbg !5113
}

declare dso_local %union.tree_node* @gimple_default_def(%struct.function*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @has_zero_uses(%union.tree_node* %var) unnamed_addr #0 !dbg !5114 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5122, metadata !DIExpression()), !dbg !5127
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5128
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !5128
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !5123, metadata !DIExpression()), !dbg !5127
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !5129
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !5129
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !5129
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !5131
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5132

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5133
  %tobool = icmp eq i32 %3, 0, !dbg !5133
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !5135

if.end2:                                          ; preds = %if.end
  %call = tail call zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d* nonnull %0) #6, !dbg !5136
  br label %cleanup, !dbg !5137

cleanup:                                          ; preds = %if.end, %entry, %if.end2
  %retval.0 = phi i8 [ %call, %if.end2 ], [ 1, %entry ], [ 0, %if.end ], !dbg !5127
  ret i8 %retval.0, !dbg !5138
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @DFS(%union.tree_node* %name) unnamed_addr #4 !dbg !5139 {
entry:
  %itervec = alloca %struct.VEC_ssa_op_iter_heap*, align 8
  %namevec = alloca %struct.VEC_tree_heap*, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5143, metadata !DIExpression()), !dbg !5157
  %0 = bitcast %struct.VEC_ssa_op_iter_heap** %itervec to i8*, !dbg !5158
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5158
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap* null, metadata !5144, metadata !DIExpression()), !dbg !5157
  store %struct.VEC_ssa_op_iter_heap* null, %struct.VEC_ssa_op_iter_heap** %itervec, align 8, !dbg !5159
  %1 = bitcast %struct.VEC_tree_heap** %namevec to i8*, !dbg !5160
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5160
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !5145, metadata !DIExpression()), !dbg !5157
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %namevec, align 8, !dbg !5161
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* null, metadata !5146, metadata !DIExpression()), !dbg !5157
  %2 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5162
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #8, !dbg !5162
  br label %start_over, !dbg !5162

start_over:                                       ; preds = %if.then70, %entry
  %usep.0 = phi %struct.ssa_use_operand_d* [ null, %entry ], [ %usep.3.lcssa13, %if.then70 ], !dbg !5163
  %name.addr.0 = phi %union.tree_node* [ %name, %entry ], [ %call58.lcssa, %if.then70 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.0, metadata !5143, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %usep.0, metadata !5146, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.label(metadata !5150), !dbg !5164
  %3 = load i32, i32* @next_dfs_num, align 4, !dbg !5165
  %inc = add i32 %3, 1, !dbg !5165
  store i32 %inc, i32* @next_dfs_num, align 4, !dbg !5165
  %call = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.0) #7, !dbg !5166
  %dfsnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 3, !dbg !5167
  store i32 %3, i32* %dfsnum, align 4, !dbg !5168
  %call1 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.0) #7, !dbg !5169
  %visited = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call1, i64 0, i32 5, !dbg !5170
  %bf.load = load i8, i8* %visited, align 4, !dbg !5171
  %bf.set = or i8 %bf.load, 1, !dbg !5171
  store i8 %bf.set, i8* %visited, align 4, !dbg !5171
  %call2 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.0) #7, !dbg !5172
  %dfsnum3 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call2, i64 0, i32 3, !dbg !5173
  %4 = load i32, i32* %dfsnum3, align 4, !dbg !5173
  %call4 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.0) #7, !dbg !5174
  %low = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call4, i64 0, i32 4, !dbg !5175
  store i32 %4, i32* %low, align 8, !dbg !5176
  %call5 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @sccstack, %union.tree_node* %name.addr.0) #7, !dbg !5177
  %call6 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.0) #7, !dbg !5178
  %on_sccstack = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call6, i64 0, i32 5, !dbg !5179
  %bf.load7 = load i8, i8* %on_sccstack, align 4, !dbg !5180
  %bf.set9 = or i8 %bf.load7, 2, !dbg !5180
  store i8 %bf.set9, i8* %on_sccstack, align 4, !dbg !5180
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5181
  %5 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5181
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %5, align 8, !dbg !5181
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %6, metadata !5147, metadata !DIExpression()), !dbg !5157
  %call10 = call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %6) #7, !dbg !5182
  %tobool = icmp eq i8 %call10, 0, !dbg !5182
  br i1 %tobool, label %if.then, label %if.else15, !dbg !5184

if.then:                                          ; preds = %start_over
  %call11 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %6) #7, !dbg !5185
  %cmp = icmp eq i32 %call11, 16, !dbg !5188
  br i1 %cmp, label %if.then12, label %if.else, !dbg !5189

if.then12:                                        ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5149, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  %call13 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %6, i32 5) #7, !dbg !5190
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call13, metadata !5146, metadata !DIExpression()), !dbg !5157
  br label %if.end16, !dbg !5191

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5149, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  %call14 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %6, i32 5) #7, !dbg !5192
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call14, metadata !5146, metadata !DIExpression()), !dbg !5157
  br label %if.end16

if.else15:                                        ; preds = %start_over
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5149, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5193
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.else, %if.else15
  %usep.2 = phi %struct.ssa_use_operand_d* [ %usep.0, %if.else15 ], [ %call13, %if.then12 ], [ %call14, %if.else ], !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %usep.2, metadata !5146, metadata !DIExpression()), !dbg !5157
  br label %while.cond, !dbg !5194

while.cond:                                       ; preds = %if.end117, %if.end16
  %usep.3 = phi %struct.ssa_use_operand_d* [ %usep.2, %if.end16 ], [ %call118, %if.end117 ], !dbg !5157
  %name.addr.1 = phi %union.tree_node* [ %name.addr.0, %if.end16 ], [ %name.addr.3, %if.end117 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.1, metadata !5143, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %usep.3, metadata !5146, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5149, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  %call17 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5195
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5195
  br i1 %tobool18, label %if.end57, label %if.then19, !dbg !5197

if.then19:                                        ; preds = %while.cond
  %call20 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.1) #7, !dbg !5198
  %low21 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call20, i64 0, i32 4, !dbg !5201
  %7 = load i32, i32* %low21, align 8, !dbg !5201
  %call22 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.1) #7, !dbg !5202
  %dfsnum23 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call22, i64 0, i32 3, !dbg !5203
  %8 = load i32, i32* %dfsnum23, align 4, !dbg !5203
  %cmp24 = icmp eq i32 %7, %8, !dbg !5204
  br i1 %cmp24, label %if.then25, label %if.end30, !dbg !5205

if.then25:                                        ; preds = %if.then19
  %call26 = call fastcc zeroext i8 @extract_and_process_scc_for_name(%union.tree_node* %name.addr.1) #7, !dbg !5206
  %tobool27 = icmp eq i8 %call26, 0, !dbg !5206
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !5208

if.then28:                                        ; preds = %if.then25
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %namevec, metadata !5145, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %namevec) #7, !dbg !5209
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap** %itervec, metadata !5144, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  call fastcc void @VEC_ssa_op_iter_heap_free(%struct.VEC_ssa_op_iter_heap** nonnull %itervec) #7, !dbg !5211
  br label %cleanup, !dbg !5212

if.end30:                                         ; preds = %if.then25, %if.then19
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %namevec, align 8, !dbg !5213
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !5145, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !5145, metadata !DIExpression()), !dbg !5157
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !5213
  %call32 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !5213
  %cmp33 = icmp eq i32 %call32, 0, !dbg !5213
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !5215

if.then34:                                        ; preds = %if.end30
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %namevec, metadata !5145, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %namevec) #7, !dbg !5216
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap** %itervec, metadata !5144, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  call fastcc void @VEC_ssa_op_iter_heap_free(%struct.VEC_ssa_op_iter_heap** nonnull %itervec) #7, !dbg !5218
  br label %cleanup, !dbg !5219

if.end35:                                         ; preds = %if.end30
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.1, metadata !5148, metadata !DIExpression()), !dbg !5157
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %namevec, align 8, !dbg !5220
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !5145, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !5145, metadata !DIExpression()), !dbg !5157
  %base38 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !5220
  %call42 = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base38) #7, !dbg !5220
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !5143, metadata !DIExpression()), !dbg !5157
  %11 = load %struct.VEC_ssa_op_iter_heap*, %struct.VEC_ssa_op_iter_heap** %itervec, align 8, !dbg !5221
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap* %11, metadata !5144, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap* %11, metadata !5144, metadata !DIExpression()), !dbg !5157
  %base45 = getelementptr inbounds %struct.VEC_ssa_op_iter_heap, %struct.VEC_ssa_op_iter_heap* %11, i64 0, i32 0, !dbg !5221
  %call49 = call fastcc %struct.ssa_operand_iterator_d* @VEC_ssa_op_iter_base_last(%struct.VEC_ssa_op_iter_base* %base45) #7, !dbg !5221
  %12 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %call49, i64 0, i32 0, !dbg !5221
  %call50 = call i8* @memcpy(i8* nonnull %2, i8* %12, i64 40) #6, !dbg !5222
  %13 = load %struct.VEC_ssa_op_iter_heap*, %struct.VEC_ssa_op_iter_heap** %itervec, align 8, !dbg !5223
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap* %13, metadata !5144, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap* %13, metadata !5144, metadata !DIExpression()), !dbg !5157
  %base53 = getelementptr inbounds %struct.VEC_ssa_op_iter_heap, %struct.VEC_ssa_op_iter_heap* %13, i64 0, i32 0, !dbg !5223
  call fastcc void @VEC_ssa_op_iter_base_pop(%struct.VEC_ssa_op_iter_base* %base53) #7, !dbg !5223
  call void @llvm.dbg.label(metadata !5151), !dbg !5224
  %call73 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call42) #7, !dbg !5225
  %low74 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call73, i64 0, i32 4, !dbg !5225
  %14 = load i32, i32* %low74, align 8, !dbg !5225
  %call75 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.1) #7, !dbg !5225
  %low76 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call75, i64 0, i32 4, !dbg !5225
  %15 = load i32, i32* %low76, align 8, !dbg !5225
  %cmp77 = icmp ult i32 %14, %15, !dbg !5225
  br i1 %cmp77, label %cond.true78, label %cond.false81, !dbg !5225

if.end57:                                         ; preds = %while.cond
  %call58 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %usep.3) #7, !dbg !5226
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !5148, metadata !DIExpression()), !dbg !5157
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5227
  %bf.load60 = load i64, i64* %16, align 8, !dbg !5227
  %bf.cast1 = and i64 %bf.load60, 65535, !dbg !5228
  %cmp62 = icmp eq i64 %bf.cast1, 141, !dbg !5228
  br i1 %cmp62, label %if.then63, label %if.end117, !dbg !5229

if.then63:                                        ; preds = %if.end57
  %call64 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call58) #7, !dbg !5230
  %visited65 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call64, i64 0, i32 5, !dbg !5231
  %bf.load66 = load i8, i8* %visited65, align 4, !dbg !5231
  %bf.clear67 = and i8 %bf.load66, 1, !dbg !5231
  %tobool69 = icmp eq i8 %bf.clear67, 0, !dbg !5232
  br i1 %tobool69, label %if.then70, label %if.end88, !dbg !5233

if.then70:                                        ; preds = %if.then63
  %call58.lcssa = phi %union.tree_node* [ %call58, %if.then63 ], !dbg !5226
  %usep.3.lcssa13 = phi %struct.ssa_use_operand_d* [ %usep.3, %if.then63 ], !dbg !5157
  %name.addr.1.lcssa11 = phi %union.tree_node* [ %name.addr.1, %if.then63 ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %usep.3.lcssa13, metadata !5146, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.1.lcssa11, metadata !5143, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %usep.3.lcssa13, metadata !5146, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.1.lcssa11, metadata !5143, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %usep.3.lcssa13, metadata !5146, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.1.lcssa11, metadata !5143, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap** %itervec, metadata !5144, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5149, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  %call71 = call fastcc %struct.ssa_operand_iterator_d* @VEC_ssa_op_iter_heap_safe_push(%struct.VEC_ssa_op_iter_heap** nonnull %itervec, %struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5234
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %namevec, metadata !5145, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  %call72 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %namevec, %union.tree_node* %name.addr.1.lcssa11) #7, !dbg !5235
  call void @llvm.dbg.value(metadata %union.tree_node* %call58.lcssa, metadata !5143, metadata !DIExpression()), !dbg !5157
  br label %start_over, !dbg !5236

cond.true78:                                      ; preds = %if.end35
  %call79 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call42) #7, !dbg !5225
  br label %cond.end84, !dbg !5225

cond.false81:                                     ; preds = %if.end35
  %call82 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.1) #7, !dbg !5225
  br label %cond.end84, !dbg !5225

cond.end84:                                       ; preds = %cond.false81, %cond.true78
  %call79.pn = phi %struct.vn_ssa_aux* [ %call79, %cond.true78 ], [ %call82, %cond.false81 ]
  %cond85.in = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call79.pn, i64 0, i32 4, !dbg !5225
  %cond85 = load i32, i32* %cond85.in, align 8, !dbg !5225
  %call86 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call42) #7, !dbg !5237
  %low87 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call86, i64 0, i32 4, !dbg !5238
  store i32 %cond85, i32* %low87, align 8, !dbg !5239
  br label %if.end88, !dbg !5240

if.end88:                                         ; preds = %if.then63, %cond.end84
  %use.0 = phi %union.tree_node* [ %name.addr.1, %cond.end84 ], [ %call58, %if.then63 ], !dbg !5241
  %name.addr.2 = phi %union.tree_node* [ %call42, %cond.end84 ], [ %name.addr.1, %if.then63 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.2, metadata !5143, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0, metadata !5148, metadata !DIExpression()), !dbg !5157
  %call89 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %use.0) #7, !dbg !5242
  %dfsnum90 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call89, i64 0, i32 3, !dbg !5244
  %17 = load i32, i32* %dfsnum90, align 4, !dbg !5244
  %call91 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.2) #7, !dbg !5245
  %dfsnum92 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call91, i64 0, i32 3, !dbg !5246
  %18 = load i32, i32* %dfsnum92, align 4, !dbg !5246
  %cmp93 = icmp ult i32 %17, %18, !dbg !5247
  br i1 %cmp93, label %land.lhs.true, label %if.end117, !dbg !5248

land.lhs.true:                                    ; preds = %if.end88
  %call94 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %use.0) #7, !dbg !5249
  %on_sccstack95 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call94, i64 0, i32 5, !dbg !5250
  %bf.load96 = load i8, i8* %on_sccstack95, align 4, !dbg !5250
  %bf.clear97 = and i8 %bf.load96, 2, !dbg !5250
  %tobool99 = icmp eq i8 %bf.clear97, 0, !dbg !5249
  br i1 %tobool99, label %if.end117, label %if.then100, !dbg !5251

if.then100:                                       ; preds = %land.lhs.true
  %call101 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %use.0) #7, !dbg !5252
  %dfsnum102 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call101, i64 0, i32 3, !dbg !5252
  %19 = load i32, i32* %dfsnum102, align 4, !dbg !5252
  %call103 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.2) #7, !dbg !5252
  %low104 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call103, i64 0, i32 4, !dbg !5252
  %20 = load i32, i32* %low104, align 8, !dbg !5252
  %cmp105 = icmp ult i32 %19, %20, !dbg !5252
  br i1 %cmp105, label %cond.true106, label %cond.false109, !dbg !5252

cond.true106:                                     ; preds = %if.then100
  %call107 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %use.0) #7, !dbg !5252
  %dfsnum108 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call107, i64 0, i32 3, !dbg !5252
  br label %cond.end112, !dbg !5252

cond.false109:                                    ; preds = %if.then100
  %call110 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.2) #7, !dbg !5252
  %low111 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call110, i64 0, i32 4, !dbg !5252
  br label %cond.end112, !dbg !5252

cond.end112:                                      ; preds = %cond.false109, %cond.true106
  %cond113.in = phi i32* [ %dfsnum108, %cond.true106 ], [ %low111, %cond.false109 ]
  %cond113 = load i32, i32* %cond113.in, align 4, !dbg !5252
  %call114 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %name.addr.2) #7, !dbg !5254
  %low115 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call114, i64 0, i32 4, !dbg !5255
  store i32 %cond113, i32* %low115, align 8, !dbg !5256
  br label %if.end117, !dbg !5257

if.end117:                                        ; preds = %land.lhs.true, %if.end88, %cond.end112, %if.end57
  %name.addr.3 = phi %union.tree_node* [ %name.addr.1, %if.end57 ], [ %name.addr.2, %cond.end112 ], [ %name.addr.2, %land.lhs.true ], [ %name.addr.2, %if.end88 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.3, metadata !5143, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5149, metadata !DIExpression(DW_OP_deref)), !dbg !5157
  %call118 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5258
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call118, metadata !5146, metadata !DIExpression()), !dbg !5157
  br label %while.cond, !dbg !5194, !llvm.loop !5259

cleanup:                                          ; preds = %if.then34, %if.then28
  %retval.0 = phi i8 [ 1, %if.then34 ], [ 0, %if.then28 ], !dbg !5261
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #8, !dbg !5262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5262
  ret i8 %retval.0, !dbg !5262
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_hashtable_value_ids() unnamed_addr #4 !dbg !5263 {
entry:
  %hi = alloca %struct.htab_iterator, align 8
  %0 = bitcast %struct.htab_iterator* %hi to i8*, !dbg !5275
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5275
  %1 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !5276
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %1, i64 0, i32 0, !dbg !5276
  %2 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !5276
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call = call fastcc i8* @first_htab_element(%struct.htab_iterator* nonnull %hi, %struct.htab* %2) #7, !dbg !5276
  call void @llvm.dbg.value(metadata i8* %call, metadata !5272, metadata !DIExpression()), !dbg !5278
  br label %for.cond, !dbg !5276

for.cond:                                         ; preds = %for.inc, %entry
  %vno.0.in = phi i8* [ %call, %entry ], [ %call17, %for.inc ]
  call void @llvm.dbg.value(metadata i8* %vno.0.in, metadata !5272, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call1 = call fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* nonnull %hi) #7, !dbg !5279
  %tobool = icmp eq i8 %call1, 0, !dbg !5279
  br i1 %tobool, label %for.body, label %for.end, !dbg !5276

for.body:                                         ; preds = %for.cond
  %result = getelementptr inbounds i8, i8* %vno.0.in, i64 16, !dbg !5281
  %3 = bitcast i8* %result to %union.tree_node**, !dbg !5281
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5281
  %tobool2 = icmp eq %union.tree_node* %4, null, !dbg !5284
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !5285

if.then:                                          ; preds = %for.body
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5285
  %bf.load = load i64, i64* %5, align 8, !dbg !5286
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !5289
  %cmp = icmp eq i64 %bf.cast4, 141, !dbg !5289
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5290

if.then4:                                         ; preds = %if.then
  %call6 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %4) #7, !dbg !5291
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call6, i64 0, i32 2, !dbg !5292
  %6 = load i32, i32* %value_id, align 8, !dbg !5292
  %value_id7 = bitcast i8* %vno.0.in to i32*, !dbg !5293
  store i32 %6, i32* %value_id7, align 8, !dbg !5294
  br label %for.inc, !dbg !5295

if.else:                                          ; preds = %if.then
  %call9 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %4) #6, !dbg !5296
  %tobool10 = icmp eq i8 %call9, 0, !dbg !5296
  br i1 %tobool10, label %for.inc, label %if.then11, !dbg !5298

if.then11:                                        ; preds = %if.else
  %7 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5299
  %call13 = call i32 @get_or_alloc_constant_value_id(%union.tree_node* %7) #7, !dbg !5300
  %value_id14 = bitcast i8* %vno.0.in to i32*, !dbg !5301
  store i32 %call13, i32* %value_id14, align 8, !dbg !5302
  br label %for.inc, !dbg !5303

for.inc:                                          ; preds = %if.else, %for.body, %if.then11, %if.then4
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call17 = call fastcc i8* @next_htab_element(%struct.htab_iterator* nonnull %hi) #7, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %call17, metadata !5272, metadata !DIExpression()), !dbg !5278
  br label %for.cond, !dbg !5279, !llvm.loop !5304

for.end:                                          ; preds = %for.cond
  %8 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !5306
  %phis = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 1, !dbg !5306
  %9 = load %struct.htab*, %struct.htab** %phis, align 8, !dbg !5306
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call18 = call fastcc i8* @first_htab_element(%struct.htab_iterator* nonnull %hi, %struct.htab* %9) #7, !dbg !5306
  call void @llvm.dbg.value(metadata i8* %call18, metadata !5274, metadata !DIExpression()), !dbg !5278
  br label %for.cond19, !dbg !5306

for.cond19:                                       ; preds = %for.inc49, %for.end
  %vp.0.in = phi i8* [ %call18, %for.end ], [ %call50, %for.inc49 ]
  call void @llvm.dbg.value(metadata i8* %vp.0.in, metadata !5274, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call20 = call fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* nonnull %hi) #7, !dbg !5308
  %tobool21 = icmp eq i8 %call20, 0, !dbg !5308
  br i1 %tobool21, label %for.body23, label %for.end51, !dbg !5306

for.body23:                                       ; preds = %for.cond19
  %result24 = getelementptr inbounds i8, i8* %vp.0.in, i64 24, !dbg !5310
  %10 = bitcast i8* %result24 to %union.tree_node**, !dbg !5310
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5310
  %tobool25 = icmp eq %union.tree_node* %11, null, !dbg !5313
  br i1 %tobool25, label %for.inc49, label %if.then26, !dbg !5314

if.then26:                                        ; preds = %for.body23
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5314
  %bf.load29 = load i64, i64* %12, align 8, !dbg !5315
  %bf.cast312 = and i64 %bf.load29, 65535, !dbg !5318
  %cmp32 = icmp eq i64 %bf.cast312, 141, !dbg !5318
  br i1 %cmp32, label %if.then33, label %if.else38, !dbg !5319

if.then33:                                        ; preds = %if.then26
  %call35 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %11) #7, !dbg !5320
  %value_id36 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call35, i64 0, i32 2, !dbg !5321
  %13 = load i32, i32* %value_id36, align 8, !dbg !5321
  %value_id37 = bitcast i8* %vp.0.in to i32*, !dbg !5322
  store i32 %13, i32* %value_id37, align 8, !dbg !5323
  br label %for.inc49, !dbg !5324

if.else38:                                        ; preds = %if.then26
  %call40 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %11) #6, !dbg !5325
  %tobool41 = icmp eq i8 %call40, 0, !dbg !5325
  br i1 %tobool41, label %for.inc49, label %if.then42, !dbg !5327

if.then42:                                        ; preds = %if.else38
  %14 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5328
  %call44 = call i32 @get_or_alloc_constant_value_id(%union.tree_node* %14) #7, !dbg !5329
  %value_id45 = bitcast i8* %vp.0.in to i32*, !dbg !5330
  store i32 %call44, i32* %value_id45, align 8, !dbg !5331
  br label %for.inc49, !dbg !5332

for.inc49:                                        ; preds = %if.else38, %for.body23, %if.then42, %if.then33
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call50 = call fastcc i8* @next_htab_element(%struct.htab_iterator* nonnull %hi) #7, !dbg !5308
  call void @llvm.dbg.value(metadata i8* %call50, metadata !5274, metadata !DIExpression()), !dbg !5278
  br label %for.cond19, !dbg !5308, !llvm.loop !5333

for.end51:                                        ; preds = %for.cond19
  %15 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !5335
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %15, i64 0, i32 2, !dbg !5335
  %16 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !5335
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call52 = call fastcc i8* @first_htab_element(%struct.htab_iterator* nonnull %hi, %struct.htab* %16) #7, !dbg !5335
  call void @llvm.dbg.value(metadata i8* %call52, metadata !5273, metadata !DIExpression()), !dbg !5278
  br label %for.cond53, !dbg !5335

for.cond53:                                       ; preds = %for.inc83, %for.end51
  %vr.0.in = phi i8* [ %call52, %for.end51 ], [ %call84, %for.inc83 ]
  call void @llvm.dbg.value(metadata i8* %vr.0.in, metadata !5273, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call54 = call fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* nonnull %hi) #7, !dbg !5337
  %tobool55 = icmp eq i8 %call54, 0, !dbg !5337
  br i1 %tobool55, label %for.body57, label %for.end85, !dbg !5335

for.body57:                                       ; preds = %for.cond53
  %result58 = getelementptr inbounds i8, i8* %vr.0.in, i64 40, !dbg !5339
  %17 = bitcast i8* %result58 to %union.tree_node**, !dbg !5339
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !5339
  %tobool59 = icmp eq %union.tree_node* %18, null, !dbg !5342
  br i1 %tobool59, label %for.inc83, label %if.then60, !dbg !5343

if.then60:                                        ; preds = %for.body57
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5343
  %bf.load63 = load i64, i64* %19, align 8, !dbg !5344
  %bf.cast651 = and i64 %bf.load63, 65535, !dbg !5347
  %cmp66 = icmp eq i64 %bf.cast651, 141, !dbg !5347
  br i1 %cmp66, label %if.then67, label %if.else72, !dbg !5348

if.then67:                                        ; preds = %if.then60
  %call69 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %18) #7, !dbg !5349
  %value_id70 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call69, i64 0, i32 2, !dbg !5350
  %20 = load i32, i32* %value_id70, align 8, !dbg !5350
  %value_id71 = bitcast i8* %vr.0.in to i32*, !dbg !5351
  store i32 %20, i32* %value_id71, align 8, !dbg !5352
  br label %for.inc83, !dbg !5353

if.else72:                                        ; preds = %if.then60
  %call74 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %18) #6, !dbg !5354
  %tobool75 = icmp eq i8 %call74, 0, !dbg !5354
  br i1 %tobool75, label %for.inc83, label %if.then76, !dbg !5356

if.then76:                                        ; preds = %if.else72
  %21 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !5357
  %call78 = call i32 @get_or_alloc_constant_value_id(%union.tree_node* %21) #7, !dbg !5358
  %value_id79 = bitcast i8* %vr.0.in to i32*, !dbg !5359
  store i32 %call78, i32* %value_id79, align 8, !dbg !5360
  br label %for.inc83, !dbg !5361

for.inc83:                                        ; preds = %if.else72, %for.body57, %if.then76, %if.then67
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5278
  %call84 = call fastcc i8* @next_htab_element(%struct.htab_iterator* nonnull %hi) #7, !dbg !5337
  call void @llvm.dbg.value(metadata i8* %call84, metadata !5273, metadata !DIExpression()), !dbg !5278
  br label %for.cond53, !dbg !5337, !llvm.loop !5362

for.end85:                                        ; preds = %for.cond53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5364
  ret void, !dbg !5364
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @get_max_value_id() local_unnamed_addr #4 !dbg !5365 {
entry:
  %0 = load i32, i32* @next_value_id, align 4, !dbg !5366
  ret i32 %0, !dbg !5367
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vn_nary_may_trap(%struct.vn_nary_op_s* %nary) local_unnamed_addr #4 !dbg !5368 {
entry:
  %handled = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %nary, metadata !5372, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8 0, metadata !5375, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8 0, metadata !5376, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8 0, metadata !5377, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8 0, metadata !5378, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8* %handled, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5382
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %handled) #8, !dbg !5383
  %opcode = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %nary, i64 0, i32 1, !dbg !5384
  %bf.load = load i32, i32* %opcode, align 4, !dbg !5384
  %bf.clear = and i32 %bf.load, 65535, !dbg !5384
  %idxprom = zext i32 %bf.clear to i64, !dbg !5384
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !5384
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5384
  %cmp = icmp eq i32 %0, 5, !dbg !5386
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5387

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i32 %0, 6, !dbg !5388
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !5389

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i32 %0, 7, !dbg !5390
  br i1 %cmp13, label %if.then, label %if.end73, !dbg !5391

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  %type14 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %nary, i64 0, i32 4, !dbg !5392
  %1 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !5392
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5373, metadata !DIExpression()), !dbg !5382
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5394
  %bf.load15 = load i64, i64* %2, align 8, !dbg !5394
  %bf.cast2 = and i64 %bf.load15, 65535, !dbg !5394
  %cmp17 = icmp eq i64 %bf.cast2, 9, !dbg !5394
  br i1 %cmp17, label %lor.end, label %lor.rhs, !dbg !5394

lor.rhs:                                          ; preds = %if.then
  %cmp22 = icmp eq i64 %bf.cast2, 13, !dbg !5394
  br i1 %cmp22, label %land.rhs, label %lor.lhs.false23, !dbg !5394

lor.lhs.false23:                                  ; preds = %lor.rhs
  %cmp28 = icmp eq i64 %bf.cast2, 14, !dbg !5394
  br i1 %cmp28, label %land.rhs, label %lor.end, !dbg !5394

land.rhs:                                         ; preds = %lor.lhs.false23, %lor.rhs
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5394
  %3 = bitcast %union.tree_node** %type29 to i64**, !dbg !5394
  %4 = load i64*, i64** %3, align 8, !dbg !5394
  %bf.load31 = load i64, i64* %4, align 8, !dbg !5394
  %bf.cast3310 = and i64 %bf.load31, 65535, !dbg !5394
  %cmp34 = icmp eq i64 %bf.cast3310, 9, !dbg !5394
  %phitmp = zext i1 %cmp34 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false23, %land.rhs, %if.then
  %5 = phi i8 [ 1, %if.then ], [ 0, %lor.lhs.false23 ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !5377, metadata !DIExpression()), !dbg !5382
  %tobool = icmp eq i8 %5, 0, !dbg !5395
  br i1 %tobool, label %if.else, label %if.then35, !dbg !5397

if.then35:                                        ; preds = %lor.end
  %6 = load i32, i32* @flag_trapping_math, align 4, !dbg !5398
  %tobool36 = icmp eq i32 %6, 0, !dbg !5398
  br i1 %tobool36, label %land.end39, label %land.rhs37, !dbg !5400

land.rhs37:                                       ; preds = %if.then35
  %7 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5401
  %tobool38 = icmp eq i32 %7, 0, !dbg !5402
  %phitmp9 = zext i1 %tobool38 to i8
  br label %land.end39

land.end39:                                       ; preds = %if.then35, %land.rhs37
  %8 = phi i8 [ 0, %if.then35 ], [ %phitmp9, %land.rhs37 ]
  call void @llvm.dbg.value(metadata i8 %8, metadata !5375, metadata !DIExpression()), !dbg !5382
  %9 = load i32, i32* @flag_signaling_nans, align 4, !dbg !5403
  %cmp41 = icmp ne i32 %9, 0, !dbg !5404
  %conv43 = zext i1 %cmp41 to i8, !dbg !5403
  call void @llvm.dbg.value(metadata i8 %conv43, metadata !5376, metadata !DIExpression()), !dbg !5382
  br label %if.end73, !dbg !5405

if.else:                                          ; preds = %lor.end
  %cmp48 = icmp eq i64 %bf.cast2, 6, !dbg !5406
  br i1 %cmp48, label %land.lhs.true, label %lor.lhs.false50, !dbg !5406

lor.lhs.false50:                                  ; preds = %if.else
  %cmp55 = icmp eq i64 %bf.cast2, 7, !dbg !5406
  br i1 %cmp55, label %land.lhs.true, label %lor.lhs.false57, !dbg !5406

lor.lhs.false57:                                  ; preds = %lor.lhs.false50
  %cmp62 = icmp eq i64 %bf.cast2, 8, !dbg !5406
  br i1 %cmp62, label %land.lhs.true, label %if.end73, !dbg !5408

land.lhs.true:                                    ; preds = %lor.lhs.false57, %lor.lhs.false50, %if.else
  %bf.cast678 = and i64 %bf.load15, 2097152, !dbg !5409
  %tobool68 = icmp eq i64 %bf.cast678, 0, !dbg !5409
  %10 = load i32, i32* @flag_trapv, align 4, !dbg !5409
  %tobool70 = icmp ne i32 %10, 0, !dbg !5409
  %or.cond = and i1 %tobool68, %tobool70, !dbg !5409
  %spec.select = zext i1 %or.cond to i8, !dbg !5409
  br label %if.end73, !dbg !5409

if.end73:                                         ; preds = %land.lhs.true, %land.end39, %lor.lhs.false57, %lor.lhs.false7
  %fp_operation.0 = phi i8 [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false57 ], [ %5, %land.end39 ], [ 0, %land.lhs.true ], !dbg !5382
  %honor_snans.1 = phi i8 [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false57 ], [ %conv43, %land.end39 ], [ 0, %land.lhs.true ], !dbg !5382
  %honor_nans.1 = phi i8 [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false57 ], [ %8, %land.end39 ], [ 0, %land.lhs.true ], !dbg !5382
  %honor_trapv.2 = phi i8 [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false57 ], [ 0, %land.end39 ], [ %spec.select, %land.lhs.true ], !dbg !5410
  call void @llvm.dbg.value(metadata i8 %honor_trapv.2, metadata !5378, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8 %honor_nans.1, metadata !5375, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8 %honor_snans.1, metadata !5376, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8 %fp_operation.0, metadata !5377, metadata !DIExpression()), !dbg !5382
  %arrayidx74 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %nary, i64 0, i32 5, i64 1, !dbg !5411
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx74, align 8, !dbg !5411
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5374, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8* %handled, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5382
  %call = call zeroext i8 @operation_could_trap_helper_p(i32 %bf.clear, i8 zeroext %fp_operation.0, i8 zeroext %honor_trapv.2, i8 zeroext %honor_nans.1, i8 zeroext %honor_snans.1, %union.tree_node* %11, i8* nonnull %handled) #6, !dbg !5412
  call void @llvm.dbg.value(metadata i8 %call, metadata !5380, metadata !DIExpression()), !dbg !5382
  %12 = load i8, i8* %handled, align 1, !dbg !5413
  call void @llvm.dbg.value(metadata i8 %12, metadata !5379, metadata !DIExpression()), !dbg !5382
  %tobool79 = icmp ne i8 %12, 0, !dbg !5413
  %tobool82 = icmp ne i8 %call, 0, !dbg !5415
  %or.cond1 = and i1 %tobool79, %tobool82, !dbg !5416
  br i1 %or.cond1, label %cleanup, label %for.cond.preheader, !dbg !5416

for.cond.preheader:                               ; preds = %if.end73
  br label %for.cond, !dbg !5417

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5419
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5381, metadata !DIExpression()), !dbg !5382
  %bf.load85 = load i32, i32* %opcode, align 4, !dbg !5420
  %bf.lshr86 = lshr i32 %bf.load85, 16, !dbg !5420
  %13 = zext i32 %bf.lshr86 to i64, !dbg !5422
  %cmp87 = icmp ult i64 %indvars.iv, %13, !dbg !5422
  br i1 %cmp87, label %for.body, label %cleanup.loopexit, !dbg !5417

for.body:                                         ; preds = %for.cond
  %arrayidx91 = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %nary, i64 0, i32 5, i64 %indvars.iv, !dbg !5423
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx91, align 8, !dbg !5423
  %call92 = call zeroext i8 @tree_could_trap_p(%union.tree_node* %14) #6, !dbg !5425
  %tobool93 = icmp eq i8 %call92, 0, !dbg !5425
  br i1 %tobool93, label %for.inc, label %cleanup.loopexit, !dbg !5426

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5427
  call void @llvm.dbg.value(metadata i32 undef, metadata !5381, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5382
  br label %for.cond, !dbg !5428, !llvm.loop !5429

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !5431

cleanup:                                          ; preds = %cleanup.loopexit, %if.end73
  %retval.0 = phi i8 [ 1, %if.end73 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5382
  call void @llvm.dbg.value(metadata i8* %handled, metadata !5379, metadata !DIExpression(DW_OP_deref)), !dbg !5382
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %handled) #8, !dbg !5431
  ret i8 %retval.0, !dbg !5431
}

declare dso_local zeroext i8 @operation_could_trap_helper_p(i32, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, %union.tree_node*, i8*) local_unnamed_addr #1

declare dso_local zeroext i8 @tree_could_trap_p(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_ssa_aux_t_heap_reserve_exact(%struct.VEC_vn_ssa_aux_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5432 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, metadata !5436, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5437, metadata !DIExpression()), !dbg !5439
  %0 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !5440
  %tobool = icmp eq %struct.VEC_vn_ssa_aux_t_heap* %0, null, !dbg !5440
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5440

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %0, i64 0, i32 0, !dbg !5440
  br label %cond.end, !dbg !5440

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_ssa_aux_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5440
  %call = tail call fastcc i32 @VEC_vn_ssa_aux_t_base_space(%struct.VEC_vn_ssa_aux_t_base* %cond, i32 %alloc_) #7, !dbg !5440
  %tobool1 = icmp eq i32 %call, 0, !dbg !5440
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5438, metadata !DIExpression()), !dbg !5439
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5440

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table to i8**), align 8, !dbg !5441
  %call3 = tail call i8* @vec_heap_p_reserve_exact(i8* %1, i32 %alloc_) #6, !dbg !5441
  store i8* %call3, i8** bitcast (%struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table to i8**), align 8, !dbg !5441
  br label %if.end, !dbg !5441

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5440
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_ssa_aux_t_base_space(%struct.VEC_vn_ssa_aux_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5443 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_base* %vec_, metadata !5447, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5448, metadata !DIExpression()), !dbg !5449
  %tobool = icmp eq %struct.VEC_vn_ssa_aux_t_base* %vec_, null, !dbg !5450
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5450

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_base, %struct.VEC_vn_ssa_aux_t_base* %vec_, i64 0, i32 1, !dbg !5450
  %0 = load i32, i32* %alloc, align 4, !dbg !5450
  %num = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_base, %struct.VEC_vn_ssa_aux_t_base* %vec_, i64 0, i32 0, !dbg !5450
  %1 = load i32, i32* %num, align 8, !dbg !5450
  %sub = sub i32 %0, %1, !dbg !5450
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5450
  br label %cond.end, !dbg !5450

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5450
  br label %cond.end, !dbg !5450

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5450
  ret i32 %cond, !dbg !5450
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5451 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5453, metadata !DIExpression()), !dbg !5455
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5456
  call void @llvm.dbg.value(metadata i32 %call, metadata !5454, metadata !DIExpression()), !dbg !5455
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !5457

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5459
  %bf.load = load i32, i32* %0, align 8, !dbg !5459
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5459
  br label %cleanup, !dbg !5460

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5461
  br label %cleanup, !dbg !5463

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !5455
  ret i32 %retval.0, !dbg !5464
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !5465 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5469, metadata !DIExpression()), !dbg !5470
  %idxprom = sext i32 %code to i64, !dbg !5471
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !5471
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5471
  %conv = zext i8 %0 to i32, !dbg !5472
  ret i32 %conv, !dbg !5473
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_reference_op_s_heap_reserve(%struct.VEC_vn_reference_op_s_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5474 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %vec_, metadata !5478, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32 1, metadata !5479, metadata !DIExpression()), !dbg !5481
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !5482
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !5482
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5482

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !5482
  br label %cond.end, !dbg !5482

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5482
  %call = tail call fastcc i32 @VEC_vn_reference_op_s_base_space(%struct.VEC_vn_reference_op_s_base* %cond, i32 1) #7, !dbg !5482
  %tobool1 = icmp eq i32 %call, 0, !dbg !5482
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5480, metadata !DIExpression()), !dbg !5481
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5482

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_vn_reference_op_s_heap** %vec_ to i8**, !dbg !5483
  %2 = load i8*, i8** %1, align 8, !dbg !5483
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 40) #6, !dbg !5483
  store i8* %call3, i8** %1, align 8, !dbg !5483
  br label %if.end, !dbg !5483

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5482
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_quick_push(%struct.VEC_vn_reference_op_s_base* %vec_, %struct.vn_reference_op_struct* %obj_) unnamed_addr #0 !dbg !5485 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !5489, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %obj_, metadata !5490, metadata !DIExpression()), !dbg !5492
  %num1 = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !5493
  %0 = load i32, i32* %num1, align 8, !dbg !5493
  %inc = add i32 %0, 1, !dbg !5493
  store i32 %inc, i32* %num1, align 8, !dbg !5493
  %idxprom = zext i32 %0 to i64, !dbg !5493
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5493
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %arrayidx, metadata !5491, metadata !DIExpression()), !dbg !5492
  %tobool = icmp eq %struct.vn_reference_op_struct* %obj_, null, !dbg !5494
  br i1 %tobool, label %if.end, label %if.then, !dbg !5493

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.vn_reference_op_struct* %arrayidx to i8*, !dbg !5494
  %2 = bitcast %struct.vn_reference_op_struct* %obj_ to i8*, !dbg !5494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 40, i1 false), !dbg !5494
  br label %if.end, !dbg !5494

if.end:                                           ; preds = %entry, %if.then
  ret %struct.vn_reference_op_struct* %arrayidx, !dbg !5493
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_reference_op_s_base_space(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5496 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !5500, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5501, metadata !DIExpression()), !dbg !5502
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !5503
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5503

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 1, !dbg !5503
  %0 = load i32, i32* %alloc, align 4, !dbg !5503
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !5503
  %1 = load i32, i32* %num, align 8, !dbg !5503
  %sub = sub i32 %0, %1, !dbg !5503
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5503
  br label %cond.end, !dbg !5503

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5503
  br label %cond.end, !dbg !5503

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5503
  ret i32 %cond, !dbg !5503
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_reference_op_struct* @VEC_vn_reference_op_s_base_quick_insert(%struct.VEC_vn_reference_op_s_base* %vec_, i32 %ix_, %struct.vn_reference_op_struct* %obj_) unnamed_addr #0 !dbg !5504 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !5506, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5507, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %obj_, metadata !5508, metadata !DIExpression()), !dbg !5510
  %idxprom = zext i32 %ix_ to i64, !dbg !5511
  %arrayidx = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5511
  call void @llvm.dbg.value(metadata %struct.vn_reference_op_struct* %arrayidx, metadata !5509, metadata !DIExpression()), !dbg !5510
  %add.ptr = getelementptr inbounds %struct.vn_reference_op_struct, %struct.vn_reference_op_struct* %arrayidx, i64 1, !dbg !5511
  %0 = bitcast %struct.vn_reference_op_struct* %add.ptr to i8*, !dbg !5511
  %1 = bitcast %struct.vn_reference_op_struct* %arrayidx to i8*, !dbg !5511
  %num4 = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !5511
  %2 = load i32, i32* %num4, align 8, !dbg !5511
  %inc = add i32 %2, 1, !dbg !5511
  store i32 %inc, i32* %num4, align 8, !dbg !5511
  %sub = sub i32 %2, %ix_, !dbg !5511
  %conv5 = zext i32 %sub to i64, !dbg !5511
  %mul = mul nuw nsw i64 %conv5, 40, !dbg !5511
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !5511
  %tobool = icmp eq %struct.vn_reference_op_struct* %obj_, null, !dbg !5512
  br i1 %tobool, label %if.end, label %if.then, !dbg !5511

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.vn_reference_op_struct* %obj_ to i8*, !dbg !5512
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %3, i64 40, i1 false), !dbg !5512
  br label %if.end, !dbg !5512

if.end:                                           ; preds = %entry, %if.then
  ret %struct.vn_reference_op_struct* %arrayidx, !dbg !5511
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vn_reference_op_s_heap_reserve_exact(%struct.VEC_vn_reference_op_s_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5514 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %vec_, metadata !5516, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5517, metadata !DIExpression()), !dbg !5519
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %vec_, align 8, !dbg !5520
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_heap* %0, null, !dbg !5520
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5520

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !5520
  br label %cond.end, !dbg !5520

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_reference_op_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5520
  %call = tail call fastcc i32 @VEC_vn_reference_op_s_base_space(%struct.VEC_vn_reference_op_s_base* %cond, i32 %alloc_) #7, !dbg !5520
  %tobool1 = icmp eq i32 %call, 0, !dbg !5520
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5520
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5518, metadata !DIExpression()), !dbg !5519
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5520

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_vn_reference_op_s_heap** %vec_ to i8**, !dbg !5521
  %2 = load i8*, i8** %1, align 8, !dbg !5521
  %call3 = tail call i8* @vec_heap_o_reserve_exact(i8* %2, i32 %alloc_, i64 8, i64 40) #6, !dbg !5521
  store i8* %call3, i8** %1, align 8, !dbg !5521
  br label %if.end, !dbg !5521

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5520
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #1

declare dso_local %union.tree_node* @ao_ref_base(%struct.ao_ref_s*) local_unnamed_addr #1

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5523 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5525, metadata !DIExpression()), !dbg !5526
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5527
  %cmp = icmp eq i32 %call, 8, !dbg !5528
  %conv1 = zext i1 %cmp to i8, !dbg !5527
  ret i8 %conv1, !dbg !5529
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5530 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5532, metadata !DIExpression()), !dbg !5534
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5535
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5533, metadata !DIExpression()), !dbg !5534
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5536
  %bf.load = load i64, i64* %0, align 8, !dbg !5536
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5538
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !5538
  br i1 %cmp, label %if.then, label %cleanup, !dbg !5539

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5540
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5540
  br label %cleanup, !dbg !5541

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !5534
  ret %union.tree_node* %retval.0, !dbg !5542
}

declare dso_local %union.tree_node* @get_ref_base_and_extent(%union.tree_node*, i64*, i64*, i64*) local_unnamed_addr #1

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_vn_reference_op_s_heap* @VEC_vn_reference_op_s_heap_copy(%struct.VEC_vn_reference_op_s_base* %vec_) unnamed_addr #0 !dbg !5543 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_base* %vec_, metadata !5547, metadata !DIExpression()), !dbg !5550
  %tobool = icmp eq %struct.VEC_vn_reference_op_s_base* %vec_, null, !dbg !5551
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5551

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 0, !dbg !5551
  %0 = load i32, i32* %num, align 8, !dbg !5551
  %phitmp = zext i32 %0 to i64, !dbg !5551
  br label %cond.end, !dbg !5551

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !5548, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !5549, metadata !DIExpression()), !dbg !5550
  %tobool1 = icmp eq i64 %cond, 0, !dbg !5552
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5551

if.then:                                          ; preds = %cond.end
  %conv2 = trunc i64 %cond to i32, !dbg !5554
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %conv2, i64 8, i64 40) #6, !dbg !5554
  %1 = bitcast i8* %call to %struct.VEC_vn_reference_op_s_heap*, !dbg !5554
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %1, metadata !5549, metadata !DIExpression()), !dbg !5550
  %num4 = bitcast i8* %call to i32*, !dbg !5554
  store i32 %conv2, i32* %num4, align 8, !dbg !5554
  %vec = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5554
  %arraydecay7 = getelementptr inbounds %struct.VEC_vn_reference_op_s_base, %struct.VEC_vn_reference_op_s_base* %vec_, i64 0, i32 2, i64 0, !dbg !5554
  %2 = bitcast %struct.vn_reference_op_struct* %arraydecay7 to i8*, !dbg !5554
  %mul = mul nuw nsw i64 %cond, 40, !dbg !5554
  %call8 = tail call i8* @memcpy(i8* nonnull %vec, i8* nonnull %2, i64 %mul) #6, !dbg !5554
  br label %if.end, !dbg !5554

if.end:                                           ; preds = %cond.end, %if.then
  %new_vec_.0 = phi %struct.VEC_vn_reference_op_s_heap* [ %1, %if.then ], [ null, %cond.end ], !dbg !5550
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %new_vec_.0, metadata !5549, metadata !DIExpression()), !dbg !5550
  ret %struct.VEC_vn_reference_op_s_heap* %new_vec_.0, !dbg !5551
}

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !5556 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !5562, metadata !DIExpression()), !dbg !5563
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !5564
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5564

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !5564
  %0 = load i32, i32* %num, align 8, !dbg !5564
  br label %cond.end, !dbg !5564

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5564
  ret i32 %cond, !dbg !5564
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5565 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5567, metadata !DIExpression()), !dbg !5568
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5569
  ret %union.tree_node* %call, !dbg !5570
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !5571 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5573, metadata !DIExpression()), !dbg !5574
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5575
  %bf.load = load i64, i64* %0, align 8, !dbg !5575
  %1 = trunc i64 %bf.load to i16, !dbg !5575
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !5576

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5577

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !5579
  ret i8 %retval.0, !dbg !5580
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5581 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5583, metadata !DIExpression()), !dbg !5584
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5585
  %cmp = icmp eq i32 %call, 0, !dbg !5586
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5587

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5588
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5589
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5590
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5591 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5595, metadata !DIExpression()), !dbg !5597
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !5598
  %idxprom = zext i32 %call to i64, !dbg !5599
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !5599
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5599
  call void @llvm.dbg.value(metadata i64 %0, metadata !5596, metadata !DIExpression()), !dbg !5597
  %cmp = icmp eq i64 %0, 0, !dbg !5600
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5600

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5600
  br label %cond.end, !dbg !5600

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !5601
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !5602
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !5603
  ret %union.tree_node** %2, !dbg !5604
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5605 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5609, metadata !DIExpression()), !dbg !5610
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5611
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !5612
  ret i32 %call1, !dbg !5613
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !5614 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5618, metadata !DIExpression()), !dbg !5619
  %idxprom = zext i32 %code to i64, !dbg !5620
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !5620
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5620
  ret i32 %0, !dbg !5621
}

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #1

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #1

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @vn_constant_hash(i8* %p1) #4 !dbg !5622 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5624, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5625, metadata !DIExpression()), !dbg !5626
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 4, !dbg !5627
  %0 = bitcast i8* %hashcode to i32*, !dbg !5627
  %1 = load i32, i32* %0, align 4, !dbg !5627
  ret i32 %1, !dbg !5628
}

; Function Attrs: nounwind uwtable
define internal i32 @vn_constant_eq(i8* %p1, i8* %p2) #4 !dbg !5629 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5631, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5632, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5633, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5634, metadata !DIExpression()), !dbg !5635
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 4, !dbg !5636
  %0 = bitcast i8* %hashcode to i32*, !dbg !5636
  %1 = load i32, i32* %0, align 4, !dbg !5636
  %hashcode1 = getelementptr inbounds i8, i8* %p2, i64 4, !dbg !5638
  %2 = bitcast i8* %hashcode1 to i32*, !dbg !5638
  %3 = load i32, i32* %2, align 4, !dbg !5638
  %cmp = icmp eq i32 %1, %3, !dbg !5639
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5640

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5634, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5633, metadata !DIExpression()), !dbg !5635
  %constant = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5641
  %4 = bitcast i8* %constant to %union.tree_node**, !dbg !5641
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5641
  %constant2 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !5642
  %6 = bitcast i8* %constant2 to %union.tree_node**, !dbg !5642
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5642
  %call = tail call fastcc zeroext i8 @vn_constant_eq_with_type(%union.tree_node* %5, %union.tree_node* %7) #7, !dbg !5643
  %conv = zext i8 %call to i32, !dbg !5643
  br label %cleanup, !dbg !5644

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 0, %entry ], !dbg !5635
  ret i32 %retval.0, !dbg !5645
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_vn_ssa_aux_t_heap* @VEC_vn_ssa_aux_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5646 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5650, metadata !DIExpression()), !dbg !5651
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5652
  %0 = bitcast i8* %call to %struct.VEC_vn_ssa_aux_t_heap*, !dbg !5652
  ret %struct.VEC_vn_ssa_aux_t_heap* %0, !dbg !5652
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vn_ssa_aux_t_heap_safe_grow_cleared(%struct.VEC_vn_ssa_aux_t_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !5653 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, metadata !5655, metadata !DIExpression()), !dbg !5658
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5656, metadata !DIExpression()), !dbg !5658
  %0 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !5659
  %tobool = icmp eq %struct.VEC_vn_ssa_aux_t_heap* %0, null, !dbg !5659
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5659

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %0, i64 0, i32 0, !dbg !5659
  br label %cond.end, !dbg !5659

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vn_ssa_aux_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5659
  %call = tail call fastcc i32 @VEC_vn_ssa_aux_t_base_length(%struct.VEC_vn_ssa_aux_t_base* %cond) #7, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %call, metadata !5657, metadata !DIExpression()), !dbg !5658
  tail call fastcc void @VEC_vn_ssa_aux_t_heap_safe_grow(%struct.VEC_vn_ssa_aux_t_heap** nonnull @vn_ssa_aux_table, i32 %size_) #7, !dbg !5659
  %1 = load %struct.VEC_vn_ssa_aux_t_heap*, %struct.VEC_vn_ssa_aux_t_heap** @vn_ssa_aux_table, align 8, !dbg !5659
  %tobool1 = icmp eq %struct.VEC_vn_ssa_aux_t_heap* %1, null, !dbg !5659
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5659

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_heap, %struct.VEC_vn_ssa_aux_t_heap* %1, i64 0, i32 0, !dbg !5659
  br label %cond.end5, !dbg !5659

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_vn_ssa_aux_t_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !5659
  %call7 = tail call fastcc %struct.vn_ssa_aux** @VEC_vn_ssa_aux_t_base_address(%struct.VEC_vn_ssa_aux_t_base* %cond6) #7, !dbg !5659
  %idxprom = sext i32 %call to i64, !dbg !5659
  %arrayidx = getelementptr inbounds %struct.vn_ssa_aux*, %struct.vn_ssa_aux** %call7, i64 %idxprom, !dbg !5659
  %2 = bitcast %struct.vn_ssa_aux** %arrayidx to i8*, !dbg !5659
  %sub = sub nsw i32 %size_, %call, !dbg !5659
  %conv = sext i32 %sub to i64, !dbg !5659
  %mul = shl nsw i64 %conv, 3, !dbg !5659
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !5659
  ret void, !dbg !5659
}

declare dso_local i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) local_unnamed_addr #1

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #1

declare dso_local i32 @pre_and_rev_post_order_compute(i32*, i32*, i8 zeroext) local_unnamed_addr #1

declare dso_local %union.tree_node* @create_tmp_var_raw(%union.tree_node*, i8*) local_unnamed_addr #1

declare dso_local void @renumber_gimple_stmt_uids() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @allocate_vn_table(%struct.vn_tables_s* %table) unnamed_addr #4 !dbg !5660 {
entry:
  call void @llvm.dbg.value(metadata %struct.vn_tables_s* %table, metadata !5662, metadata !DIExpression()), !dbg !5663
  %call = tail call %struct.htab* @htab_create(i64 23, i32 (i8*)* nonnull @vn_phi_hash, i32 (i8*, i8*)* nonnull @vn_phi_eq, void (i8*)* nonnull @free_phi) #6, !dbg !5664
  %phis = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 1, !dbg !5665
  store %struct.htab* %call, %struct.htab** %phis, align 8, !dbg !5666
  %call1 = tail call %struct.htab* @htab_create(i64 23, i32 (i8*)* nonnull @vn_nary_op_hash, i32 (i8*, i8*)* nonnull @vn_nary_op_eq, void (i8*)* null) #6, !dbg !5667
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 0, !dbg !5668
  store %struct.htab* %call1, %struct.htab** %nary, align 8, !dbg !5669
  %call2 = tail call %struct.htab* @htab_create(i64 23, i32 (i8*)* nonnull @vn_reference_hash, i32 (i8*, i8*)* nonnull @vn_reference_eq, void (i8*)* nonnull @free_reference) #6, !dbg !5670
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 2, !dbg !5671
  store %struct.htab* %call2, %struct.htab** %references, align 8, !dbg !5672
  %nary_obstack = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 3, !dbg !5673
  %call3 = tail call i32 @_obstack_begin(%struct.obstack* nonnull %nary_obstack, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !5673
  %call4 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 32, i64 30) #6, !dbg !5674
  %phis_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 4, !dbg !5675
  store %struct.alloc_pool_def* %call4, %struct.alloc_pool_def** %phis_pool, align 8, !dbg !5676
  %call5 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i64 48, i64 30) #6, !dbg !5677
  %references_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %table, i64 0, i32 5, !dbg !5678
  store %struct.alloc_pool_def* %call5, %struct.alloc_pool_def** %references_pool, align 8, !dbg !5679
  ret void, !dbg !5680
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @vn_constant_eq_with_type(%union.tree_node* %c1, %union.tree_node* %c2) unnamed_addr #0 !dbg !5681 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %c1, metadata !5683, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata %union.tree_node* %c2, metadata !5684, metadata !DIExpression()), !dbg !5685
  %call = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %c1, %union.tree_node* %c2) #7, !dbg !5686
  %tobool = icmp eq i8 %call, 0, !dbg !5686
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5687

land.rhs:                                         ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %c1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5688
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5688
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %c2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5689
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !5689
  %call3 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !5690
  %tobool5 = icmp ne i8 %call3, 0, !dbg !5687
  %phitmp = zext i1 %tobool5 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !5691
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.vn_ssa_aux** @VEC_vn_ssa_aux_t_base_address(%struct.VEC_vn_ssa_aux_t_base* %vec_) unnamed_addr #0 !dbg !5692 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vn_ssa_aux_t_base* %vec_, metadata !5697, metadata !DIExpression()), !dbg !5698
  %tobool = icmp eq %struct.VEC_vn_ssa_aux_t_base* %vec_, null, !dbg !5699
  %arraydecay = getelementptr inbounds %struct.VEC_vn_ssa_aux_t_base, %struct.VEC_vn_ssa_aux_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !5699
  %cond = select i1 %tobool, %struct.vn_ssa_aux** null, %struct.vn_ssa_aux** %arraydecay, !dbg !5699
  ret %struct.vn_ssa_aux** %cond, !dbg !5699
}

; Function Attrs: nounwind uwtable
define internal i32 @vn_phi_hash(i8* %p1) #4 !dbg !5700 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5702, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5703, metadata !DIExpression()), !dbg !5705
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 4, !dbg !5706
  %0 = bitcast i8* %hashcode to i32*, !dbg !5706
  %1 = load i32, i32* %0, align 4, !dbg !5706
  ret i32 %1, !dbg !5707
}

; Function Attrs: nounwind uwtable
define internal i32 @vn_phi_eq(i8* %p1, i8* %p2) #4 !dbg !5708 {
entry:
  %phi1op = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5710, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5711, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5712, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5713, metadata !DIExpression()), !dbg !5722
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 4, !dbg !5723
  %0 = bitcast i8* %hashcode to i32*, !dbg !5723
  %1 = load i32, i32* %0, align 4, !dbg !5723
  %hashcode1 = getelementptr inbounds i8, i8* %p2, i64 4, !dbg !5725
  %2 = bitcast i8* %hashcode1 to i32*, !dbg !5725
  %3 = load i32, i32* %2, align 4, !dbg !5725
  %cmp = icmp eq i32 %1, %3, !dbg !5726
  br i1 %cmp, label %if.end, label %cleanup51, !dbg !5727

if.end:                                           ; preds = %entry
  %block = getelementptr inbounds i8, i8* %p1, i64 16, !dbg !5728
  %4 = bitcast i8* %block to %struct.basic_block_def**, !dbg !5728
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %4, align 8, !dbg !5728
  %block2 = getelementptr inbounds i8, i8* %p2, i64 16, !dbg !5729
  %6 = bitcast i8* %block2 to %struct.basic_block_def**, !dbg !5729
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %6, align 8, !dbg !5729
  %cmp3 = icmp eq %struct.basic_block_def* %5, %7, !dbg !5730
  br i1 %cmp3, label %if.then4, label %cleanup51, !dbg !5731

if.then4:                                         ; preds = %if.end
  %8 = bitcast %union.tree_node** %phi1op to i8*, !dbg !5732
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5732
  %phiargs = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5733
  %9 = bitcast i8* %phiargs to %struct.VEC_tree_heap**, !dbg !5733
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %9, align 8, !dbg !5733
  %tobool = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !5733
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5733

cond.true:                                        ; preds = %if.then4
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !5733
  br label %cond.end, !dbg !5733

cond.end:                                         ; preds = %if.then4, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.then4 ], !dbg !5733
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 0) #7, !dbg !5733
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5733
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5733
  %phiargs6 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !5735
  %12 = bitcast i8* %phiargs6 to %struct.VEC_tree_heap**, !dbg !5735
  %13 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %12, align 8, !dbg !5735
  %tobool7 = icmp eq %struct.VEC_tree_heap* %13, null, !dbg !5735
  br i1 %tobool7, label %cond.end12, label %cond.true8, !dbg !5735

cond.true8:                                       ; preds = %cond.end
  %base10 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %13, i64 0, i32 0, !dbg !5735
  br label %cond.end12, !dbg !5735

cond.end12:                                       ; preds = %cond.end, %cond.true8
  %cond13 = phi %struct.VEC_tree_base* [ %base10, %cond.true8 ], [ null, %cond.end ], !dbg !5735
  %call14 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond13, i32 0) #7, !dbg !5735
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5735
  %14 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !5735
  %call17 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %11, %union.tree_node* %14) #6, !dbg !5736
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5736
  br i1 %tobool18, label %cleanup48, label %for.cond.preheader, !dbg !5737

for.cond.preheader:                               ; preds = %cond.end12
  br label %for.cond, !dbg !5738

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5739
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5714, metadata !DIExpression()), !dbg !5740
  %15 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %9, align 8, !dbg !5741
  %tobool22 = icmp eq %struct.VEC_tree_heap* %15, null, !dbg !5741
  br i1 %tobool22, label %cond.end27, label %cond.true23, !dbg !5741

cond.true23:                                      ; preds = %for.cond
  %base25 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %15, i64 0, i32 0, !dbg !5741
  br label %cond.end27, !dbg !5741

cond.end27:                                       ; preds = %for.cond, %cond.true23
  %cond28 = phi %struct.VEC_tree_base* [ %base25, %cond.true23 ], [ null, %for.cond ], !dbg !5741
  call void @llvm.dbg.value(metadata %union.tree_node** %phi1op, metadata !5717, metadata !DIExpression(DW_OP_deref)), !dbg !5740
  %call29 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond28, i32 %i.0, %union.tree_node** nonnull %phi1op) #7, !dbg !5741
  %tobool30 = icmp eq i32 %call29, 0, !dbg !5738
  br i1 %tobool30, label %cleanup48.loopexit, label %for.body, !dbg !5738

for.body:                                         ; preds = %cond.end27
  %16 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %12, align 8, !dbg !5742
  %tobool32 = icmp eq %struct.VEC_tree_heap* %16, null, !dbg !5742
  br i1 %tobool32, label %cond.end37, label %cond.true33, !dbg !5742

cond.true33:                                      ; preds = %for.body
  %base35 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %16, i64 0, i32 0, !dbg !5742
  br label %cond.end37, !dbg !5742

cond.end37:                                       ; preds = %for.body, %cond.true33
  %cond38 = phi %struct.VEC_tree_base* [ %base35, %cond.true33 ], [ null, %for.body ], !dbg !5742
  %call39 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond38, i32 %i.0) #7, !dbg !5742
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !5718, metadata !DIExpression()), !dbg !5743
  %17 = load %union.tree_node*, %union.tree_node** %phi1op, align 8, !dbg !5744
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5717, metadata !DIExpression()), !dbg !5740
  %18 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !5746
  %cmp40 = icmp eq %union.tree_node* %17, %18, !dbg !5747
  %cmp41 = icmp eq %union.tree_node* %call39, %18, !dbg !5748
  %or.cond = or i1 %cmp40, %cmp41, !dbg !5749
  br i1 %or.cond, label %cleanup, label %if.end43, !dbg !5749

if.end43:                                         ; preds = %cond.end37
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5717, metadata !DIExpression()), !dbg !5740
  %call44 = call zeroext i8 @expressions_equal_p(%union.tree_node* %17, %union.tree_node* %call39) #7, !dbg !5750
  %tobool45 = icmp eq i8 %call44, 0, !dbg !5750
  %. = zext i1 %tobool45 to i32, !dbg !5752
  br label %cleanup, !dbg !5752

cleanup:                                          ; preds = %if.end43, %cond.end37
  %cleanup.dest.slot.0 = phi i32 [ 4, %cond.end37 ], [ %., %if.end43 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup48.loopexit [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5714, metadata !DIExpression()), !dbg !5740
  br label %for.cond, !dbg !5754, !llvm.loop !5755

cleanup48.loopexit:                               ; preds = %cleanup, %cond.end27
  %retval.2.ph = phi i32 [ 1, %cond.end27 ], [ 0, %cleanup ]
  br label %cleanup48, !dbg !5757

cleanup48:                                        ; preds = %cleanup48.loopexit, %cond.end12
  %retval.2 = phi i32 [ 0, %cond.end12 ], [ %retval.2.ph, %cleanup48.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5757
  br label %cleanup51

cleanup51:                                        ; preds = %entry, %if.end, %cleanup48
  %retval.3 = phi i32 [ %retval.2, %cleanup48 ], [ 0, %entry ], [ 0, %if.end ]
  ret i32 %retval.3, !dbg !5758
}

; Function Attrs: nounwind uwtable
define internal void @free_phi(i8* %vp) #4 !dbg !5759 {
entry:
  call void @llvm.dbg.value(metadata i8* %vp, metadata !5761, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata i8* %vp, metadata !5762, metadata !DIExpression()), !dbg !5763
  %phiargs = getelementptr inbounds i8, i8* %vp, i64 8, !dbg !5764
  %0 = bitcast i8* %phiargs to %struct.VEC_tree_heap**, !dbg !5764
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %0) #7, !dbg !5764
  ret void, !dbg !5765
}

; Function Attrs: nounwind uwtable
define internal i32 @vn_nary_op_hash(i8* %p1) #4 !dbg !5766 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5769, metadata !DIExpression()), !dbg !5770
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !5771
  %0 = bitcast i8* %hashcode to i32*, !dbg !5771
  %1 = load i32, i32* %0, align 8, !dbg !5771
  ret i32 %1, !dbg !5772
}

; Function Attrs: nounwind uwtable
define internal i32 @vn_reference_hash(i8* %p1) #4 !dbg !5773 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5775, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5776, metadata !DIExpression()), !dbg !5777
  %hashcode = getelementptr inbounds i8, i8* %p1, i64 4, !dbg !5778
  %0 = bitcast i8* %hashcode to i32*, !dbg !5778
  %1 = load i32, i32* %0, align 4, !dbg !5778
  ret i32 %1, !dbg !5779
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !5780 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5784, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5785, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !5786, metadata !DIExpression()), !dbg !5787
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5788
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5788

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5788
  %0 = load i32, i32* %num, align 8, !dbg !5788
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5788
  br i1 %cmp, label %if.then, label %if.else, !dbg !5790

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5791
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5791
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5791
  br label %return, !dbg !5791

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5793

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !5795
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5795
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !5795
  ret i32 %retval.0, !dbg !5790
}

declare dso_local zeroext i8 @has_zero_uses_1(%struct.ssa_use_operand_d*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5796 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !5800, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5801, metadata !DIExpression()), !dbg !5802
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !5803
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5803
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !5803
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5803

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !5803
  br label %cond.end, !dbg !5803

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5803
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !5803
  ret %union.tree_node** %call1, !dbg !5803
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !5804 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5809, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5810, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i32 5, metadata !5811, metadata !DIExpression()), !dbg !5814
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !5815
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5812, metadata !DIExpression()), !dbg !5814
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5816
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5817
  store i8 0, i8* %done, align 8, !dbg !5818
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5819
  br i1 false, label %if.then, label %if.end, !dbg !5820

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !5821

if.end:                                           ; preds = %entry
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5824
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5825
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !5826
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5827
  store i32 %call7, i32* %num_phi, align 4, !dbg !5828
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5829
  store i32 2, i32* %iter_type, align 4, !dbg !5830
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5831
  br label %cleanup, !dbg !5832

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ undef, %if.then ], [ %call8, %if.end ], !dbg !5814
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5833
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5834 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5836, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5837, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata i32 5, metadata !5838, metadata !DIExpression()), !dbg !5839
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 5) #7, !dbg !5840
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5841
  store i32 2, i32* %iter_type, align 4, !dbg !5842
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5843
  ret %struct.ssa_use_operand_d* %call, !dbg !5844
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5845 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5849, metadata !DIExpression()), !dbg !5850
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5851
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !5852
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5853
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !5854
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5855
  store i32 0, i32* %iter_type, align 4, !dbg !5856
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5857
  store i32 0, i32* %phi_i, align 8, !dbg !5858
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5859
  store i32 0, i32* %num_phi, align 4, !dbg !5860
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5861
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5862
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5863
  store i8 1, i8* %done, align 8, !dbg !5864
  ret void, !dbg !5865
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5866 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5872, metadata !DIExpression()), !dbg !5873
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5874
  %0 = load i8, i8* %done, align 8, !dbg !5874
  ret i8 %0, !dbg !5875
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @extract_and_process_scc_for_name(%union.tree_node* %name) unnamed_addr #4 !dbg !5876 {
entry:
  %scc = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5878, metadata !DIExpression()), !dbg !5881
  %0 = bitcast %struct.VEC_tree_heap** %scc to i8*, !dbg !5882
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5882
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !5879, metadata !DIExpression()), !dbg !5881
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %scc, align 8, !dbg !5883
  br label %do.body, !dbg !5884

do.body:                                          ; preds = %do.body, %entry
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @sccstack, align 8, !dbg !5885
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !5885
  %call = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base) #7, !dbg !5885
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5880, metadata !DIExpression()), !dbg !5881
  %call1 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call) #7, !dbg !5887
  %on_sccstack = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call1, i64 0, i32 5, !dbg !5888
  %bf.load = load i8, i8* %on_sccstack, align 4, !dbg !5889
  %bf.clear = and i8 %bf.load, -3, !dbg !5889
  store i8 %bf.clear, i8* %on_sccstack, align 4, !dbg !5889
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %scc, metadata !5879, metadata !DIExpression(DW_OP_deref)), !dbg !5881
  %call2 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %scc, %union.tree_node* %call) #7, !dbg !5890
  %cmp = icmp eq %union.tree_node* %call, %name, !dbg !5891
  br i1 %cmp, label %do.end, label %do.body, !dbg !5892, !llvm.loop !5893

do.end:                                           ; preds = %do.body
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %scc, align 8, !dbg !5895
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %2, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %2, metadata !5879, metadata !DIExpression()), !dbg !5881
  %base5 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !5895
  %call9 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base5) #7, !dbg !5895
  %3 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5897
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %3, i64 104, i32 1, !dbg !5897
  %4 = load i32, i32* %value, align 8, !dbg !5897
  %cmp10 = icmp ugt i32 %call9, %4, !dbg !5898
  br i1 %cmp10, label %if.then, label %if.end23, !dbg !5899

if.then:                                          ; preds = %do.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5900
  %tobool11 = icmp eq %struct._IO_FILE* %5, null, !dbg !5900
  br i1 %tobool11, label %cleanup, label %if.then12, !dbg !5903

if.then12:                                        ; preds = %if.then
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %scc, align 8, !dbg !5904
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %6, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %6, metadata !5879, metadata !DIExpression()), !dbg !5881
  %base15 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !5904
  %call19 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base15) #7, !dbg !5904
  %7 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5905
  %value21 = getelementptr inbounds %struct.param_info, %struct.param_info* %7, i64 104, i32 1, !dbg !5905
  %8 = load i32, i32* %value21, align 8, !dbg !5905
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.10, i64 0, i64 0), i32 %call19, i32 %8) #6, !dbg !5906
  br label %cleanup, !dbg !5906

if.end23:                                         ; preds = %do.end
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %scc, align 8, !dbg !5907
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !5879, metadata !DIExpression()), !dbg !5881
  %base26 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !5907
  %call30 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base26) #7, !dbg !5907
  %cmp31 = icmp ugt i32 %call30, 1, !dbg !5909
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !5910

if.then32:                                        ; preds = %if.end23
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %scc, align 8, !dbg !5911
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !5879, metadata !DIExpression()), !dbg !5881
  call fastcc void @sort_scc(%struct.VEC_tree_heap* %10) #7, !dbg !5912
  br label %if.end33, !dbg !5912

if.end33:                                         ; preds = %if.then32, %if.end23
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5913
  %tobool34 = icmp eq %struct._IO_FILE* %11, null, !dbg !5913
  br i1 %tobool34, label %if.end37, label %land.lhs.true, !dbg !5915

land.lhs.true:                                    ; preds = %if.end33
  %12 = load i32, i32* @dump_flags, align 4, !dbg !5916
  %and = and i32 %12, 8, !dbg !5917
  %tobool35 = icmp eq i32 %and, 0, !dbg !5917
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !5918

if.then36:                                        ; preds = %land.lhs.true
  %13 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %scc, align 8, !dbg !5919
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %13, metadata !5879, metadata !DIExpression()), !dbg !5881
  call fastcc void @print_scc(%struct._IO_FILE* nonnull %11, %struct.VEC_tree_heap* %13) #7, !dbg !5920
  br label %if.end37, !dbg !5920

if.end37:                                         ; preds = %land.lhs.true, %if.end33, %if.then36
  %14 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %scc, align 8, !dbg !5921
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %14, metadata !5879, metadata !DIExpression()), !dbg !5881
  call fastcc void @process_scc(%struct.VEC_tree_heap* %14) #7, !dbg !5922
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %scc, metadata !5879, metadata !DIExpression(DW_OP_deref)), !dbg !5881
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %scc) #7, !dbg !5923
  br label %cleanup, !dbg !5924

cleanup:                                          ; preds = %if.then, %if.then12, %if.end37
  %retval.0 = phi i8 [ 1, %if.end37 ], [ 0, %if.then12 ], [ 0, %if.then ], !dbg !5881
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5925
  ret i8 %retval.0, !dbg !5925
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ssa_op_iter_heap_free(%struct.VEC_ssa_op_iter_heap** %vec_) unnamed_addr #0 !dbg !5926 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap** %vec_, metadata !5931, metadata !DIExpression()), !dbg !5932
  %0 = load %struct.VEC_ssa_op_iter_heap*, %struct.VEC_ssa_op_iter_heap** %vec_, align 8, !dbg !5933
  %tobool = icmp eq %struct.VEC_ssa_op_iter_heap* %0, null, !dbg !5933
  br i1 %tobool, label %if.end, label %if.then, !dbg !5935

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ssa_op_iter_heap* %0 to i8*, !dbg !5935
  tail call void @free(i8* nonnull %1) #6, !dbg !5933
  br label %if.end, !dbg !5933

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ssa_op_iter_heap* null, %struct.VEC_ssa_op_iter_heap** %vec_, align 8, !dbg !5935
  ret void, !dbg !5935
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !5936 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5941, metadata !DIExpression()), !dbg !5943
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5944
  %0 = load i32, i32* %num1, align 8, !dbg !5944
  %dec = add i32 %0, -1, !dbg !5944
  store i32 %dec, i32* %num1, align 8, !dbg !5944
  %idxprom = zext i32 %dec to i64, !dbg !5944
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5944
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5944
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5942, metadata !DIExpression()), !dbg !5943
  ret %union.tree_node* %1, !dbg !5944
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_operand_iterator_d* @VEC_ssa_op_iter_base_last(%struct.VEC_ssa_op_iter_base* %vec_) unnamed_addr #0 !dbg !5945 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_base* %vec_, metadata !5950, metadata !DIExpression()), !dbg !5951
  br label %land.end, !dbg !5952

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_ssa_op_iter_base, %struct.VEC_ssa_op_iter_base* %vec_, i64 0, i32 0, !dbg !5952
  %0 = load i32, i32* %num2, align 8, !dbg !5952
  %sub = add i32 %0, -1, !dbg !5952
  %idxprom = zext i32 %sub to i64, !dbg !5952
  %arrayidx = getelementptr inbounds %struct.VEC_ssa_op_iter_base, %struct.VEC_ssa_op_iter_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5952
  ret %struct.ssa_operand_iterator_d* %arrayidx, !dbg !5952
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ssa_op_iter_base_pop(%struct.VEC_ssa_op_iter_base* %vec_) unnamed_addr #0 !dbg !5953 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_base* %vec_, metadata !5957, metadata !DIExpression()), !dbg !5958
  %num1 = getelementptr inbounds %struct.VEC_ssa_op_iter_base, %struct.VEC_ssa_op_iter_base* %vec_, i64 0, i32 0, !dbg !5959
  %0 = load i32, i32* %num1, align 8, !dbg !5959
  %dec = add i32 %0, -1, !dbg !5959
  store i32 %dec, i32* %num1, align 8, !dbg !5959
  ret void, !dbg !5959
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5960 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5964, metadata !DIExpression()), !dbg !5965
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5966
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5966
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5967
  ret %union.tree_node* %1, !dbg !5968
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_operand_iterator_d* @VEC_ssa_op_iter_heap_safe_push(%struct.VEC_ssa_op_iter_heap** %vec_, %struct.ssa_operand_iterator_d* %obj_) unnamed_addr #0 !dbg !5969 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap** %vec_, metadata !5973, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %obj_, metadata !5974, metadata !DIExpression()), !dbg !5975
  %call = tail call fastcc i32 @VEC_ssa_op_iter_heap_reserve(%struct.VEC_ssa_op_iter_heap** %vec_, i32 1) #7, !dbg !5976
  %0 = load %struct.VEC_ssa_op_iter_heap*, %struct.VEC_ssa_op_iter_heap** %vec_, align 8, !dbg !5976
  %tobool = icmp eq %struct.VEC_ssa_op_iter_heap* %0, null, !dbg !5976
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5976

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ssa_op_iter_heap, %struct.VEC_ssa_op_iter_heap* %0, i64 0, i32 0, !dbg !5976
  br label %cond.end, !dbg !5976

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ssa_op_iter_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5976
  %call1 = tail call fastcc %struct.ssa_operand_iterator_d* @VEC_ssa_op_iter_base_quick_push(%struct.VEC_ssa_op_iter_base* %cond, %struct.ssa_operand_iterator_d* %obj_) #7, !dbg !5976
  ret %struct.ssa_operand_iterator_d* %call1, !dbg !5976
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5977 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5981, metadata !DIExpression()), !dbg !5983
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5984
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5984
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5986
  br i1 %tobool, label %if.end, label %if.then, !dbg !5987

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5988
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !5982, metadata !DIExpression()), !dbg !5983
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !5990
  %2 = load i64, i64* %1, align 8, !dbg !5990
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5991
  store i64 %2, i64* %3, align 8, !dbg !5991
  br label %cleanup, !dbg !5992

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5993
  %4 = load i32, i32* %phi_i, align 8, !dbg !5993
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5995
  %5 = load i32, i32* %num_phi, align 4, !dbg !5995
  %cmp = icmp slt i32 %4, %5, !dbg !5996
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !5997

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5998
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5998
  %inc = add nsw i32 %4, 1, !dbg !5998
  store i32 %inc, i32* %phi_i, align 8, !dbg !5998
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !5998
  br label %cleanup, !dbg !6000

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6001
  store i8 1, i8* %done, align 8, !dbg !6002
  br label %cleanup, !dbg !6003

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !5983
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6004
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6005 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !6009, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i32 1, metadata !6010, metadata !DIExpression()), !dbg !6012
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !6013
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6013
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6013

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6013
  br label %cond.end, !dbg !6013

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6013
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !6013
  %tobool1 = icmp eq i32 %call, 0, !dbg !6013
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6011, metadata !DIExpression()), !dbg !6012
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6013

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !6014
  %2 = load i8*, i8** %1, align 8, !dbg !6014
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6014
  store i8* %call3, i8** %1, align 8, !dbg !6014
  br label %if.end, !dbg !6014

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6013
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6016 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6020, metadata !DIExpression()), !dbg !6023
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6021, metadata !DIExpression()), !dbg !6023
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6024
  %0 = load i32, i32* %num1, align 8, !dbg !6024
  %inc = add i32 %0, 1, !dbg !6024
  store i32 %inc, i32* %num1, align 8, !dbg !6024
  %idxprom = zext i32 %0 to i64, !dbg !6024
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6024
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !6022, metadata !DIExpression()), !dbg !6023
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !6024
  ret %union.tree_node** %arrayidx, !dbg !6024
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6025 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6029, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i32 1, metadata !6030, metadata !DIExpression()), !dbg !6031
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6032
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6032

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !6032
  %0 = load i32, i32* %alloc, align 4, !dbg !6032
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6032
  %1 = load i32, i32* %num, align 8, !dbg !6032
  %cmp1 = icmp ne i32 %0, %1, !dbg !6032
  %phitmp = zext i1 %cmp1 to i32, !dbg !6032
  br label %cond.end, !dbg !6032

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6032
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6033 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6035, metadata !DIExpression()), !dbg !6036
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6037
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6037
  ret %union.tree_node* %0, !dbg !6038
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6039 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6041, metadata !DIExpression()), !dbg !6042
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !6043
  %0 = load i32, i32* %nargs, align 4, !dbg !6043
  ret i32 %0, !dbg !6044
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6045 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6049, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6050, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6051, metadata !DIExpression()), !dbg !6052
  %0 = and i32 %flags, 10, !dbg !6053
  %1 = icmp eq i32 %0, 8, !dbg !6053
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !6053

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !6053
  %3 = icmp eq i32 %2, 4, !dbg !6053
  br i1 %3, label %cond.true, label %cond.end, !dbg !6053

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6053
  br label %cond.end, !dbg !6053

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !6054
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !6055

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6056
  br label %cond.end12, !dbg !6055

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !6055
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6057
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !6058
  %and14 = and i32 %flags, 8, !dbg !6059
  %tobool15 = icmp eq i32 %and14, 0, !dbg !6059
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !6061

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !6062
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !6063

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !6064
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !6065
  br i1 %cmp, label %if.end, label %if.then, !dbg !6066

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !6067
  %6 = load i64*, i64** %5, align 8, !dbg !6067
  %7 = load i64, i64* %6, align 8, !dbg !6068
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6069
  store i64 %7, i64* %8, align 8, !dbg !6069
  br label %if.end, !dbg !6070

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !6071
  %tobool24 = icmp eq i32 %and23, 0, !dbg !6071
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !6072

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6073
  br label %cond.end28, !dbg !6072

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !6072
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6074
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !6075
  %and30 = and i32 %flags, 4, !dbg !6076
  %tobool31 = icmp eq i32 %and30, 0, !dbg !6076
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !6078

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !6079
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !6080

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !6081
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !6082
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !6083

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !6084
  %11 = load i64*, i64** %10, align 8, !dbg !6084
  %12 = load i64, i64* %11, align 8, !dbg !6085
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6086
  store i64 %12, i64* %13, align 8, !dbg !6086
  br label %if.end42, !dbg !6087

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6088
  store i8 0, i8* %done, align 8, !dbg !6089
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6090
  store i32 0, i32* %phi_i, align 8, !dbg !6091
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6092
  store i32 0, i32* %num_phi, align 4, !dbg !6093
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6094
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6095
  ret void, !dbg !6096
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6097 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6101, metadata !DIExpression()), !dbg !6102
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6103
  %tobool = icmp eq i8 %call, 0, !dbg !6103
  br i1 %tobool, label %return, label %if.end, !dbg !6105

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !6106
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !6106
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !6106
  br label %return, !dbg !6107

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6102
  ret %struct.def_optype_d* %retval.0, !dbg !6108
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6109 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6111, metadata !DIExpression()), !dbg !6112
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6113
  %tobool = icmp eq i8 %call, 0, !dbg !6113
  br i1 %tobool, label %return, label %if.end, !dbg !6115

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !6116
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !6116
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6116
  br label %return, !dbg !6117

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6112
  ret %union.tree_node* %retval.0, !dbg !6118
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6119 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6123, metadata !DIExpression()), !dbg !6124
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6125
  %tobool = icmp eq i8 %call, 0, !dbg !6125
  br i1 %tobool, label %return, label %if.end, !dbg !6127

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6128
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6128
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6128
  br label %return, !dbg !6129

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6124
  ret %struct.use_optype_d* %retval.0, !dbg !6130
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6131 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6133, metadata !DIExpression()), !dbg !6134
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6135
  %tobool = icmp eq i8 %call, 0, !dbg !6135
  br i1 %tobool, label %return, label %if.end, !dbg !6137

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !6138
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !6138
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6138
  br label %return, !dbg !6139

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6134
  ret %union.tree_node* %retval.0, !dbg !6140
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6141 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6143, metadata !DIExpression()), !dbg !6144
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6145
  %cmp = icmp ugt i32 %call, 5, !dbg !6146
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6147

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6148
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6149
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6150
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sort_scc(%struct.VEC_tree_heap* %scc) unnamed_addr #4 !dbg !6151 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %scc, metadata !6155, metadata !DIExpression()), !dbg !6156
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %scc, i64 0, i32 0, !dbg !6157
  %call = tail call fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %base) #7, !dbg !6157
  %0 = bitcast %union.tree_node** %call to i8*, !dbg !6157
  %call7 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !6158
  %conv = zext i32 %call7 to i64, !dbg !6158
  tail call void @spec_qsort(i8* %0, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @compare_ops) #6, !dbg !6159
  ret void, !dbg !6160
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_scc(%struct._IO_FILE* %out, %struct.VEC_tree_heap* %scc) unnamed_addr #4 !dbg !6161 {
entry:
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %out, metadata !6165, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %scc, metadata !6166, metadata !DIExpression()), !dbg !6169
  %0 = bitcast %union.tree_node** %var to i8*, !dbg !6170
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6170
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !6171
  call void @llvm.dbg.value(metadata i32 0, metadata !6168, metadata !DIExpression()), !dbg !6169
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %scc, i64 0, i32 0, !dbg !6172
  br label %for.cond, !dbg !6175

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !6176
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !6167, metadata !DIExpression(DW_OP_deref)), !dbg !6169
  %call1 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !6177
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6178
  br i1 %tobool2, label %for.end, label %for.body, !dbg !6178

for.body:                                         ; preds = %for.cond
  %1 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6179
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6167, metadata !DIExpression()), !dbg !6169
  call void @print_generic_expr(%struct._IO_FILE* %out, %union.tree_node* %1, i32 0) #6, !dbg !6181
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !6182
  %inc = add i32 %i.0, 1, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6168, metadata !DIExpression()), !dbg !6169
  br label %for.cond, !dbg !6184, !llvm.loop !6185

for.end:                                          ; preds = %for.cond
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6188
  ret void, !dbg !6188
}

; Function Attrs: nounwind uwtable
define internal fastcc void @process_scc(%struct.VEC_tree_heap* %scc) unnamed_addr #4 !dbg !6189 {
entry:
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %scc, metadata !6191, metadata !DIExpression()), !dbg !6200
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %scc, i64 0, i32 0, !dbg !6201
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !6201
  %cmp = icmp eq i32 %call, 1, !dbg !6202
  br i1 %cmp, label %if.then, label %if.else, !dbg !6203

if.then:                                          ; preds = %entry
  %call7 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #7, !dbg !6204
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6192, metadata !DIExpression()), !dbg !6205
  %call8 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call7) #7, !dbg !6206
  %use_processed = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call8, i64 0, i32 5, !dbg !6208
  %bf.load = load i8, i8* %use_processed, align 4, !dbg !6208
  %bf.clear = and i8 %bf.load, 8, !dbg !6208
  %tobool9 = icmp eq i8 %bf.clear, 0, !dbg !6206
  br i1 %tobool9, label %if.then10, label %if.end73, !dbg !6209

if.then10:                                        ; preds = %if.then
  %call11 = tail call fastcc zeroext i8 @visit_use(%union.tree_node* %call7) #7, !dbg !6210
  br label %if.end73, !dbg !6210

if.else:                                          ; preds = %entry
  %0 = bitcast %union.tree_node** %var to i8*, !dbg !6211
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6211
  call void @llvm.dbg.value(metadata i32 0, metadata !6198, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i8 1, metadata !6199, metadata !DIExpression()), !dbg !6212
  %1 = load i64, i64* bitcast (%struct.vn_tables_s** @optimistic_info to i64*), align 8, !dbg !6213
  store i64 %1, i64* bitcast (%struct.vn_tables_s** @current_info to i64*), align 8, !dbg !6214
  br label %while.cond, !dbg !6215

while.cond.loopexit:                              ; preds = %for.cond53
  %changed.1.lcssa = phi i8 [ %changed.1, %for.cond53 ], !dbg !6216
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !6199, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !6199, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i8 %changed.1.lcssa, metadata !6199, metadata !DIExpression()), !dbg !6212
  br label %while.cond, !dbg !6215

while.cond:                                       ; preds = %while.cond.loopexit, %if.else
  %iterations.0 = phi i32 [ 0, %if.else ], [ %inc, %while.cond.loopexit ], !dbg !6212
  %changed.0 = phi i8 [ 1, %if.else ], [ %changed.1.lcssa, %while.cond.loopexit ], !dbg !6212
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !6199, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i32 %iterations.0, metadata !6198, metadata !DIExpression()), !dbg !6212
  %tobool12 = icmp eq i8 %changed.0, 0, !dbg !6215
  br i1 %tobool12, label %while.end, label %while.body, !dbg !6215

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !6199, metadata !DIExpression()), !dbg !6212
  %inc = add i32 %iterations.0, 1, !dbg !6218
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6198, metadata !DIExpression()), !dbg !6212
  %2 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6219
  %nary = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 0, !dbg !6220
  %3 = load %struct.htab*, %struct.htab** %nary, align 8, !dbg !6220
  call void @htab_empty(%struct.htab* %3) #6, !dbg !6221
  %4 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6222
  %phis = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %4, i64 0, i32 1, !dbg !6223
  %5 = load %struct.htab*, %struct.htab** %phis, align 8, !dbg !6223
  call void @htab_empty(%struct.htab* %5) #6, !dbg !6224
  %6 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6225
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %6, i64 0, i32 2, !dbg !6226
  %7 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !6226
  call void @htab_empty(%struct.htab* %7) #6, !dbg !6227
  %8 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6228
  %chunk = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 1, !dbg !6228
  %9 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !6228
  %10 = load i64, i64* %9, align 8, !dbg !6228
  %sub.ptr.sub = sub i64 0, %10, !dbg !6228
  %temp = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 5, !dbg !6228
  store i64 %sub.ptr.sub, i64* %temp, align 8, !dbg !6228
  %cmp16 = icmp sgt i64 %sub.ptr.sub, 0, !dbg !6228
  %11 = inttoptr i64 %10 to i8*, !dbg !6228
  br i1 %cmp16, label %land.lhs.true, label %cond.false32, !dbg !6228

land.lhs.true:                                    ; preds = %while.body
  %chunk_limit = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 4, !dbg !6228
  %12 = bitcast i8** %chunk_limit to i64*, !dbg !6228
  %13 = load i64, i64* %12, align 8, !dbg !6228
  %sub.ptr.sub23 = sub i64 %13, %10, !dbg !6228
  %cmp24 = icmp sgt i64 %sub.ptr.sub23, %sub.ptr.sub, !dbg !6228
  br i1 %cmp24, label %cond.true25, label %cond.false32, !dbg !6228

cond.true25:                                      ; preds = %land.lhs.true
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %sub.ptr.sub, !dbg !6228
  %object_base = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 2, !dbg !6228
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !6228
  %next_free = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, i32 3, !dbg !6228
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !6228
  br label %cond.end39, !dbg !6228

cond.false32:                                     ; preds = %land.lhs.true, %while.body
  %nary_obstack33 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %8, i64 0, i32 3, !dbg !6228
  %add.ptr38 = getelementptr inbounds i8, i8* %11, i64 %sub.ptr.sub, !dbg !6228
  call void @obstack_free(%struct.obstack* nonnull %nary_obstack33, i8* %add.ptr38) #6, !dbg !6228
  %.pre = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6229
  br label %cond.end39, !dbg !6228

cond.end39:                                       ; preds = %cond.false32, %cond.true25
  %14 = phi %struct.vn_tables_s* [ %.pre, %cond.false32 ], [ %8, %cond.true25 ], !dbg !6229
  %nary_obstack41 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %14, i64 0, i32 3, !dbg !6229
  %call42 = call i32 @_obstack_begin(%struct.obstack* nonnull %nary_obstack41, i32 0, i32 0, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !6229
  %15 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6230
  %phis_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %15, i64 0, i32 4, !dbg !6231
  %16 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %phis_pool, align 8, !dbg !6231
  call void @empty_alloc_pool(%struct.alloc_pool_def* %16) #6, !dbg !6232
  %17 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6233
  %references_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %17, i64 0, i32 5, !dbg !6234
  %18 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %references_pool, align 8, !dbg !6234
  call void @empty_alloc_pool(%struct.alloc_pool_def* %18) #6, !dbg !6235
  call void @llvm.dbg.value(metadata i32 0, metadata !6197, metadata !DIExpression()), !dbg !6212
  br label %for.cond, !dbg !6236

for.cond:                                         ; preds = %for.body, %cond.end39
  %i.0 = phi i32 [ 0, %cond.end39 ], [ %inc52, %for.body ], !dbg !6238
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6197, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !6195, metadata !DIExpression(DW_OP_deref)), !dbg !6212
  %call49 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !6239
  %tobool50 = icmp eq i32 %call49, 0, !dbg !6241
  br i1 %tobool50, label %for.cond53.preheader, label %for.body, !dbg !6241

for.cond53.preheader:                             ; preds = %for.cond
  br label %for.cond53, !dbg !6242

for.body:                                         ; preds = %for.cond
  %19 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6244
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !6195, metadata !DIExpression()), !dbg !6212
  %call51 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %19) #7, !dbg !6245
  %expr = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call51, i64 0, i32 1, !dbg !6246
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !6247
  %inc52 = add i32 %i.0, 1, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %inc52, metadata !6197, metadata !DIExpression()), !dbg !6212
  br label %for.cond, !dbg !6249, !llvm.loop !6250

for.cond53:                                       ; preds = %for.cond53.preheader, %for.body62
  %i.1 = phi i32 [ %inc67, %for.body62 ], [ 0, %for.cond53.preheader ], !dbg !6252
  %changed.1 = phi i8 [ %or1, %for.body62 ], [ 0, %for.cond53.preheader ], !dbg !6216
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !6199, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6197, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !6195, metadata !DIExpression(DW_OP_deref)), !dbg !6212
  %call60 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.1, %union.tree_node** nonnull %var) #7, !dbg !6253
  %tobool61 = icmp eq i32 %call60, 0, !dbg !6242
  br i1 %tobool61, label %while.cond.loopexit, label %for.body62, !dbg !6242, !llvm.loop !6255

for.body62:                                       ; preds = %for.cond53
  %20 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6257
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !6195, metadata !DIExpression()), !dbg !6212
  %call63 = call fastcc zeroext i8 @visit_use(%union.tree_node* %20) #7, !dbg !6258
  %or1 = or i8 %changed.1, %call63, !dbg !6259
  call void @llvm.dbg.value(metadata i8 %or1, metadata !6199, metadata !DIExpression()), !dbg !6212
  %inc67 = add i32 %i.1, 1, !dbg !6260
  call void @llvm.dbg.value(metadata i32 %inc67, metadata !6197, metadata !DIExpression()), !dbg !6212
  br label %for.cond53, !dbg !6261, !llvm.loop !6262

while.end:                                        ; preds = %while.cond
  %iterations.0.lcssa = phi i32 [ %iterations.0, %while.cond ], !dbg !6212
  call void @llvm.dbg.value(metadata i32 %iterations.0.lcssa, metadata !6198, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i32 %iterations.0.lcssa, metadata !6198, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata i32 %iterations.0.lcssa, metadata !6198, metadata !DIExpression()), !dbg !6212
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6264
  call void @statistics_histogram_event(%struct.function* %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i32 %iterations.0.lcssa) #6, !dbg !6265
  %22 = load i64, i64* bitcast (%struct.vn_tables_s** @valid_info to i64*), align 8, !dbg !6266
  store i64 %22, i64* bitcast (%struct.vn_tables_s** @current_info to i64*), align 8, !dbg !6267
  %23 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6268
  %nary70 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %23, i64 0, i32 0, !dbg !6269
  %24 = load %struct.htab*, %struct.htab** %nary70, align 8, !dbg !6269
  call void @htab_traverse(%struct.htab* %24, i32 (i8**, i8*)* nonnull @copy_nary, i8* null) #6, !dbg !6270
  %25 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6271
  %phis71 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %25, i64 0, i32 1, !dbg !6272
  %26 = load %struct.htab*, %struct.htab** %phis71, align 8, !dbg !6272
  call void @htab_traverse(%struct.htab* %26, i32 (i8**, i8*)* nonnull @copy_phis, i8* null) #6, !dbg !6273
  %27 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !6274
  %references72 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %27, i64 0, i32 2, !dbg !6275
  %28 = load %struct.htab*, %struct.htab** %references72, align 8, !dbg !6275
  call void @htab_traverse(%struct.htab* %28, i32 (i8**, i8*)* nonnull @copy_references, i8* null) #6, !dbg !6276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6277
  br label %if.end73

if.end73:                                         ; preds = %if.then, %if.then10, %while.end
  ret void, !dbg !6278
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !6279 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6283, metadata !DIExpression()), !dbg !6284
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6285
  %arraydecay = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 0, !dbg !6285
  %cond = select i1 %tobool, %union.tree_node** null, %union.tree_node** %arraydecay, !dbg !6285
  ret %union.tree_node** %cond, !dbg !6285
}

; Function Attrs: nounwind uwtable
define internal i32 @compare_ops(i8* %pa, i8* %pb) #4 !dbg !6286 {
entry:
  call void @llvm.dbg.value(metadata i8* %pa, metadata !6288, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.value(metadata i8* %pb, metadata !6289, metadata !DIExpression()), !dbg !6296
  %0 = bitcast i8* %pa to %union.tree_node**, !dbg !6297
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6298
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6290, metadata !DIExpression()), !dbg !6296
  %2 = bitcast i8* %pb to %union.tree_node**, !dbg !6299
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !6300
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6291, metadata !DIExpression()), !dbg !6296
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6301
  %4 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6301
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %4, align 8, !dbg !6301
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !6292, metadata !DIExpression()), !dbg !6296
  %def_stmt2 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6302
  %6 = bitcast %union.tree_node** %def_stmt2 to %union.gimple_statement_d**, !dbg !6302
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %6, align 8, !dbg !6302
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %7, metadata !6293, metadata !DIExpression()), !dbg !6296
  %call = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %5) #7, !dbg !6303
  %tobool = icmp eq i8 %call, 0, !dbg !6303
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6305

land.lhs.true:                                    ; preds = %entry
  %call3 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %7) #7, !dbg !6306
  %tobool5 = icmp eq i8 %call3, 0, !dbg !6306
  br i1 %tobool5, label %if.else, label %if.then, !dbg !6307

if.then:                                          ; preds = %land.lhs.true
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6308
  %8 = bitcast %union.tree_node** %version to i32*, !dbg !6308
  %9 = load i32, i32* %8, align 8, !dbg !6308
  %version8 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6309
  %10 = bitcast %union.tree_node** %version8 to i32*, !dbg !6309
  %11 = load i32, i32* %10, align 8, !dbg !6309
  %sub = sub i32 %9, %11, !dbg !6310
  br label %cleanup, !dbg !6311

if.else:                                          ; preds = %land.lhs.true, %entry
  %call9 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %5) #7, !dbg !6312
  %tobool10 = icmp eq i8 %call9, 0, !dbg !6312
  br i1 %tobool10, label %if.else12, label %cleanup, !dbg !6314

if.else12:                                        ; preds = %if.else
  %call13 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %7) #7, !dbg !6315
  %tobool14 = icmp eq i8 %call13, 0, !dbg !6315
  br i1 %tobool14, label %if.end17, label %cleanup, !dbg !6317

if.end17:                                         ; preds = %if.else12
  %call18 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %5) #7, !dbg !6318
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call18, metadata !6294, metadata !DIExpression()), !dbg !6296
  %call19 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %7) #7, !dbg !6319
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call19, metadata !6295, metadata !DIExpression()), !dbg !6296
  %tobool20 = icmp ne %struct.basic_block_def* %call18, null, !dbg !6320
  %tobool22 = icmp ne %struct.basic_block_def* %call19, null, !dbg !6322
  %or.cond = or i1 %tobool20, %tobool22, !dbg !6323
  br i1 %or.cond, label %if.else29, label %if.then23, !dbg !6323

if.then23:                                        ; preds = %if.end17
  %version25 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6324
  %12 = bitcast %union.tree_node** %version25 to i32*, !dbg !6324
  %13 = load i32, i32* %12, align 8, !dbg !6324
  %version27 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6325
  %14 = bitcast %union.tree_node** %version27 to i32*, !dbg !6325
  %15 = load i32, i32* %14, align 8, !dbg !6325
  %sub28 = sub i32 %13, %15, !dbg !6326
  br label %cleanup, !dbg !6327

if.else29:                                        ; preds = %if.end17
  %tobool30 = icmp eq %struct.basic_block_def* %call18, null, !dbg !6328
  br i1 %tobool30, label %cleanup, label %if.else32, !dbg !6330

if.else32:                                        ; preds = %if.else29
  %tobool33 = icmp eq %struct.basic_block_def* %call19, null, !dbg !6331
  br i1 %tobool33, label %cleanup, label %if.end37, !dbg !6333

if.end37:                                         ; preds = %if.else32
  %cmp = icmp eq %struct.basic_block_def* %call18, %call19, !dbg !6334
  br i1 %cmp, label %if.then39, label %if.end78, !dbg !6336

if.then39:                                        ; preds = %if.end37
  %call40 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %5) #7, !dbg !6337
  %cmp41 = icmp eq i32 %call40, 16, !dbg !6340
  br i1 %cmp41, label %land.lhs.true43, label %if.else53, !dbg !6341

land.lhs.true43:                                  ; preds = %if.then39
  %call44 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %7) #7, !dbg !6342
  %cmp45 = icmp eq i32 %call44, 16, !dbg !6343
  br i1 %cmp45, label %if.then47, label %if.else53, !dbg !6344

if.then47:                                        ; preds = %land.lhs.true43
  %version49 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6345
  %16 = bitcast %union.tree_node** %version49 to i32*, !dbg !6345
  %17 = load i32, i32* %16, align 8, !dbg !6345
  %version51 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6346
  %18 = bitcast %union.tree_node** %version51 to i32*, !dbg !6346
  %19 = load i32, i32* %18, align 8, !dbg !6346
  %sub52 = sub i32 %17, %19, !dbg !6347
  br label %cleanup, !dbg !6348

if.else53:                                        ; preds = %land.lhs.true43, %if.then39
  %call54 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %5) #7, !dbg !6349
  %cmp55 = icmp eq i32 %call54, 16, !dbg !6351
  br i1 %cmp55, label %cleanup, label %if.else58, !dbg !6352

if.else58:                                        ; preds = %if.else53
  %call59 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %7) #7, !dbg !6353
  %cmp60 = icmp eq i32 %call59, 16, !dbg !6355
  br i1 %cmp60, label %cleanup, label %if.else63, !dbg !6356

if.else63:                                        ; preds = %if.else58
  %call64 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %5) #7, !dbg !6357
  %call65 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %7) #7, !dbg !6359
  %cmp66 = icmp eq i32 %call64, %call65, !dbg !6360
  br i1 %cmp66, label %if.else72, label %if.then68, !dbg !6361

if.then68:                                        ; preds = %if.else63
  %call69 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %5) #7, !dbg !6362
  %call70 = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %7) #7, !dbg !6363
  %sub71 = sub i32 %call69, %call70, !dbg !6364
  br label %cleanup, !dbg !6365

if.else72:                                        ; preds = %if.else63
  %version74 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6366
  %20 = bitcast %union.tree_node** %version74 to i32*, !dbg !6366
  %21 = load i32, i32* %20, align 8, !dbg !6366
  %version76 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6367
  %22 = bitcast %union.tree_node** %version76 to i32*, !dbg !6367
  %23 = load i32, i32* %22, align 8, !dbg !6367
  %sub77 = sub i32 %21, %23, !dbg !6368
  br label %cleanup, !dbg !6369

if.end78:                                         ; preds = %if.end37
  %24 = load i32*, i32** @rpo_numbers, align 8, !dbg !6370
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call18, i64 0, i32 9, !dbg !6371
  %25 = load i32, i32* %index, align 8, !dbg !6371
  %idxprom = sext i32 %25 to i64, !dbg !6370
  %arrayidx = getelementptr inbounds i32, i32* %24, i64 %idxprom, !dbg !6370
  %26 = load i32, i32* %arrayidx, align 4, !dbg !6370
  %index79 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call19, i64 0, i32 9, !dbg !6372
  %27 = load i32, i32* %index79, align 8, !dbg !6372
  %idxprom80 = sext i32 %27 to i64, !dbg !6373
  %arrayidx81 = getelementptr inbounds i32, i32* %24, i64 %idxprom80, !dbg !6373
  %28 = load i32, i32* %arrayidx81, align 4, !dbg !6373
  %sub82 = sub nsw i32 %26, %28, !dbg !6374
  br label %cleanup, !dbg !6375

cleanup:                                          ; preds = %if.else32, %if.else29, %if.else12, %if.else, %if.else58, %if.else53, %if.end78, %if.else72, %if.then68, %if.then47, %if.then23, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %sub52, %if.then47 ], [ %sub71, %if.then68 ], [ %sub77, %if.else72 ], [ %sub82, %if.end78 ], [ %sub28, %if.then23 ], [ -1, %if.else ], [ 1, %if.else12 ], [ -1, %if.else29 ], [ 1, %if.else32 ], [ -1, %if.else53 ], [ 1, %if.else58 ], !dbg !6296
  ret i32 %retval.0, !dbg !6376
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6377 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6381, metadata !DIExpression()), !dbg !6382
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !6383
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6383
  ret %struct.basic_block_def* %0, !dbg !6384
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_uid(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6385 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6387, metadata !DIExpression()), !dbg !6388
  %uid = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !6389
  %0 = load i32, i32* %uid, align 4, !dbg !6389
  ret i32 %0, !dbg !6390
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_use(%union.tree_node* %use) unnamed_addr #4 !dbg !6391 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %use, metadata !6393, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8 0, metadata !6394, metadata !DIExpression()), !dbg !6408
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6409
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6409
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !6409
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !6395, metadata !DIExpression()), !dbg !6408
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %use) #7, !dbg !6410
  %use_processed = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 5, !dbg !6411
  %bf.load = load i8, i8* %use_processed, align 4, !dbg !6412
  %bf.set = or i8 %bf.load, 8, !dbg !6412
  store i8 %bf.set, i8* %use_processed, align 4, !dbg !6412
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6413
  %bf.load1 = load i64, i64* %2, align 8, !dbg !6413
  %bf.cast8 = and i64 %bf.load1, 33554432, !dbg !6413
  %tobool = icmp eq i64 %bf.cast8, 0, !dbg !6413
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6413

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 2488, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6413
  br label %cond.end, !dbg !6413

cond.end:                                         ; preds = %entry, %cond.true
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6414
  %tobool3 = icmp eq %struct._IO_FILE* %3, null, !dbg !6414
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !6416

land.lhs.true:                                    ; preds = %cond.end
  %4 = load i32, i32* @dump_flags, align 4, !dbg !6417
  %and = and i32 %4, 8, !dbg !6418
  %tobool4 = icmp eq i32 %and, 0, !dbg !6418
  br i1 %tobool4, label %if.end, label %land.lhs.true5, !dbg !6419

land.lhs.true5:                                   ; preds = %land.lhs.true
  %bf.load7 = load i64, i64* %2, align 8, !dbg !6420
  %bf.cast1030 = and i64 %bf.load7, 4294967296, !dbg !6420
  %tobool11 = icmp eq i64 %bf.cast1030, 0, !dbg !6420
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6421

if.then:                                          ; preds = %land.lhs.true5
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !6422
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6424
  tail call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* %use, i32 0) #6, !dbg !6425
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6426
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6427
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6428
  tail call void @print_gimple_stmt(%struct._IO_FILE* %7, %union.gimple_statement_d* %1, i32 0, i32 0) #6, !dbg !6429
  br label %if.end, !dbg !6430

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %cond.end, %if.then
  %bf.load15 = load i64, i64* %2, align 8, !dbg !6431
  %bf.cast189 = and i64 %bf.load15, 4294967296, !dbg !6431
  %tobool19 = icmp eq i64 %bf.cast189, 0, !dbg !6431
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !6432

if.then20:                                        ; preds = %if.end
  %call21 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %use, %union.tree_node* %use) #7, !dbg !6433
  call void @llvm.dbg.value(metadata i8 %call21, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup419, !dbg !6434

if.else:                                          ; preds = %if.end
  %call22 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !6435
  %cmp = icmp eq i32 %call22, 16, !dbg !6436
  br i1 %cmp, label %if.then23, label %if.else25, !dbg !6437

if.then23:                                        ; preds = %if.else
  %call24 = tail call fastcc zeroext i8 @visit_phi(%union.gimple_statement_d* %1) #7, !dbg !6438
  call void @llvm.dbg.value(metadata i8 %call24, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup419, !dbg !6439

if.else25:                                        ; preds = %if.else
  %call26 = tail call fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %1) #7, !dbg !6440
  %tobool27 = icmp eq i8 %call26, 0, !dbg !6440
  br i1 %tobool27, label %if.then34, label %lor.lhs.false, !dbg !6441

lor.lhs.false:                                    ; preds = %if.else25
  %call28 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %1) #7, !dbg !6442
  %tobool29 = icmp eq i8 %call28, 0, !dbg !6442
  br i1 %tobool29, label %lor.lhs.false30, label %if.then34, !dbg !6443

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %call31 = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %1) #6, !dbg !6444
  %tobool33 = icmp eq i8 %call31, 0, !dbg !6444
  br i1 %tobool33, label %if.else36, label %if.then34, !dbg !6445

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %if.else25
  %call35 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6446
  call void @llvm.dbg.value(metadata i8 %call35, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup419, !dbg !6447

if.else36:                                        ; preds = %lor.lhs.false30
  %call37 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %1) #7, !dbg !6448
  %tobool38 = icmp eq i8 %call37, 0, !dbg !6448
  br i1 %tobool38, label %if.else341, label %if.then39, !dbg !6449

if.then39:                                        ; preds = %if.else36
  %call40 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %1) #7, !dbg !6450
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !6396, metadata !DIExpression()), !dbg !6451
  %call41 = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %1) #6, !dbg !6452
  %tobool43 = icmp eq i8 %call41, 0, !dbg !6452
  br i1 %tobool43, label %if.end62, label %land.lhs.true44, !dbg !6454

land.lhs.true44:                                  ; preds = %if.then39
  %call45 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6455
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6455
  %bf.load47 = load i64, i64* %8, align 8, !dbg !6455
  %bf.cast4928 = and i64 %bf.load47, 65535, !dbg !6456
  %cmp50 = icmp eq i64 %bf.cast4928, 141, !dbg !6456
  br i1 %cmp50, label %land.lhs.true52, label %if.end62, !dbg !6457

land.lhs.true52:                                  ; preds = %land.lhs.true44
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6458
  %bf.load54 = load i64, i64* %9, align 8, !dbg !6458
  %bf.cast5629 = and i64 %bf.load54, 65535, !dbg !6459
  %cmp57 = icmp eq i64 %bf.cast5629, 141, !dbg !6459
  br i1 %cmp57, label %if.then59, label %if.end62, !dbg !6460

if.then59:                                        ; preds = %land.lhs.true52
  %call60 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6461
  %call61 = tail call fastcc zeroext i8 @visit_copy(%union.tree_node* %call40, %union.tree_node* %call60) #7, !dbg !6463
  call void @llvm.dbg.value(metadata i8 %call61, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6464

if.end62:                                         ; preds = %if.then39, %land.lhs.true52, %land.lhs.true44
  %call63 = tail call fastcc %union.tree_node* @try_to_simplify(%union.gimple_statement_d* %1) #7, !dbg !6465
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !6403, metadata !DIExpression()), !dbg !6451
  %cond = icmp eq %union.tree_node* %call63, null, !dbg !6466
  br i1 %cond, label %if.else146, label %if.then65, !dbg !6466

if.then65:                                        ; preds = %if.end62
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6467
  %tobool66 = icmp eq %struct._IO_FILE* %10, null, !dbg !6467
  br i1 %tobool66, label %if.end87, label %land.lhs.true67, !dbg !6471

land.lhs.true67:                                  ; preds = %if.then65
  %11 = load i32, i32* @dump_flags, align 4, !dbg !6472
  %and68 = and i32 %11, 8, !dbg !6473
  %tobool69 = icmp eq i32 %and68, 0, !dbg !6473
  br i1 %tobool69, label %if.end87, label %if.then70, !dbg !6474

if.then70:                                        ; preds = %land.lhs.true67
  %call71 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !6475
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6477
  tail call void @print_gimple_expr(%struct._IO_FILE* %12, %union.gimple_statement_d* %1, i32 0, i32 0) #6, !dbg !6478
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6479
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !6480
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6481
  tail call void @print_generic_expr(%struct._IO_FILE* %14, %union.tree_node* nonnull %call63, i32 0) #6, !dbg !6482
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6483
  %bf.load74 = load i64, i64* %15, align 8, !dbg !6483
  %bf.cast7627 = and i64 %bf.load74, 65535, !dbg !6485
  %cmp77 = icmp eq i64 %bf.cast7627, 141, !dbg !6485
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6486
  br i1 %cmp77, label %if.then79, label %if.else83, !dbg !6487

if.then79:                                        ; preds = %if.then70
  %call80 = tail call fastcc zeroext i8 @expr_has_constants(%union.tree_node* nonnull %call63) #7, !dbg !6488
  %conv81 = zext i8 %call80 to i32, !dbg !6488
  %call82 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i32 %conv81) #6, !dbg !6489
  br label %if.end87, !dbg !6489

if.else83:                                        ; preds = %if.then70
  %call84 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6490
  br label %if.end87

if.end87:                                         ; preds = %land.lhs.true67, %if.then65, %if.else83, %if.then79
  %call90 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call63) #6, !dbg !6491
  %tobool92 = icmp eq i8 %call90, 0, !dbg !6491
  br i1 %tobool92, label %if.else107, label %land.lhs.true93, !dbg !6493

land.lhs.true93:                                  ; preds = %if.end87
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6494
  %bf.load95 = load i64, i64* %17, align 8, !dbg !6494
  %bf.cast9726 = and i64 %bf.load95, 65535, !dbg !6495
  %cmp98 = icmp eq i64 %bf.cast9726, 141, !dbg !6495
  br i1 %cmp98, label %if.then100, label %if.else107, !dbg !6496

if.then100:                                       ; preds = %land.lhs.true93
  %call101 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6497
  %expr = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call101, i64 0, i32 1, !dbg !6499
  store %union.tree_node* %call63, %union.tree_node** %expr, align 8, !dbg !6500
  %call102 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6501
  %has_constants = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call102, i64 0, i32 5, !dbg !6502
  %bf.load103 = load i8, i8* %has_constants, align 4, !dbg !6503
  %bf.set105 = or i8 %bf.load103, 4, !dbg !6503
  store i8 %bf.set105, i8* %has_constants, align 4, !dbg !6503
  %call106 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call40, %union.tree_node* nonnull %call63) #7, !dbg !6504
  call void @llvm.dbg.value(metadata i8 %call106, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6505

if.else107:                                       ; preds = %if.end87, %land.lhs.true93
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6506
  %bf.load111 = load i64, i64* %18, align 8, !dbg !6506
  %bf.cast11315 = and i64 %bf.load111, 65535, !dbg !6508
  %cmp114 = icmp eq i64 %bf.cast11315, 141, !dbg !6508
  br i1 %cmp114, label %land.lhs.true116, label %if.else107.if.else125_crit_edge, !dbg !6509

if.else107.if.else125_crit_edge:                  ; preds = %if.else107
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6510
  %bf.load129.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !6514
  br label %if.else125, !dbg !6509

land.lhs.true116:                                 ; preds = %if.else107
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6515
  %bf.load118 = load i64, i64* %19, align 8, !dbg !6515
  %bf.cast12025 = and i64 %bf.load118, 65535, !dbg !6516
  %cmp121 = icmp eq i64 %bf.cast12025, 141, !dbg !6516
  br i1 %cmp121, label %if.then123, label %if.else125, !dbg !6517

if.then123:                                       ; preds = %land.lhs.true116
  %call124 = tail call fastcc zeroext i8 @visit_copy(%union.tree_node* %call40, %union.tree_node* nonnull %call63) #7, !dbg !6518
  call void @llvm.dbg.value(metadata i8 %call124, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6520

if.else125:                                       ; preds = %if.else107.if.else125_crit_edge, %land.lhs.true116
  %bf.load129 = phi i64 [ %bf.load129.pre, %if.else107.if.else125_crit_edge ], [ %bf.load118, %land.lhs.true116 ], !dbg !6514
  %bf.cast13124 = and i64 %bf.load129, 65535, !dbg !6521
  %cmp132 = icmp eq i64 %bf.cast13124, 141, !dbg !6521
  br i1 %cmp132, label %if.then134, label %if.end181, !dbg !6522

if.then134:                                       ; preds = %if.else125
  %call135 = tail call fastcc zeroext i8 @expr_has_constants(%union.tree_node* nonnull %call63) #7, !dbg !6523
  %call137 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6525
  %has_constants138 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call137, i64 0, i32 5, !dbg !6526
  %bf.load139 = load i8, i8* %has_constants138, align 4, !dbg !6527
  %bf.value = shl i8 %call135, 2, !dbg !6527
  %bf.shl = and i8 %bf.value, 4, !dbg !6527
  %bf.clear140 = and i8 %bf.load139, -5, !dbg !6527
  %bf.set141 = or i8 %bf.clear140, %bf.shl, !dbg !6527
  store i8 %bf.set141, i8* %has_constants138, align 4, !dbg !6527
  %call142 = tail call %union.tree_node* @unshare_expr(%union.tree_node* nonnull %call63) #6, !dbg !6528
  %call143 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6529
  %expr144 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call143, i64 0, i32 1, !dbg !6530
  store %union.tree_node* %call142, %union.tree_node** %expr144, align 8, !dbg !6531
  br label %if.end181, !dbg !6532

if.else146:                                       ; preds = %if.end62
  %call147 = tail call fastcc zeroext i8 @stmt_has_constants(%union.gimple_statement_d* %1) #7, !dbg !6533
  %tobool149 = icmp eq i8 %call147, 0, !dbg !6533
  br i1 %tobool149, label %if.else146.if.else163_crit_edge, label %land.lhs.true150, !dbg !6535

if.else146.if.else163_crit_edge:                  ; preds = %if.else146
  %.phi.trans.insert32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6536
  %bf.load165.pre = load i64, i64* %.phi.trans.insert32, align 8, !dbg !6538
  br label %if.else163, !dbg !6535

land.lhs.true150:                                 ; preds = %if.else146
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6539
  %bf.load152 = load i64, i64* %20, align 8, !dbg !6539
  %bf.cast15423 = and i64 %bf.load152, 65535, !dbg !6540
  %cmp155 = icmp eq i64 %bf.cast15423, 141, !dbg !6540
  br i1 %cmp155, label %if.then157, label %if.else163, !dbg !6541

if.then157:                                       ; preds = %land.lhs.true150
  %call158 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6542
  %has_constants159 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call158, i64 0, i32 5, !dbg !6543
  %bf.load160 = load i8, i8* %has_constants159, align 4, !dbg !6544
  %bf.set162 = or i8 %bf.load160, 4, !dbg !6544
  store i8 %bf.set162, i8* %has_constants159, align 4, !dbg !6544
  br label %if.end181, !dbg !6542

if.else163:                                       ; preds = %if.else146.if.else163_crit_edge, %land.lhs.true150
  %bf.load165 = phi i64 [ %bf.load165.pre, %if.else146.if.else163_crit_edge ], [ %bf.load152, %land.lhs.true150 ], !dbg !6538
  %bf.cast16716 = and i64 %bf.load165, 65535, !dbg !6545
  %cmp168 = icmp eq i64 %bf.cast16716, 141, !dbg !6545
  br i1 %cmp168, label %if.then170, label %if.end181, !dbg !6546

if.then170:                                       ; preds = %if.else163
  %call171 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6547
  %has_constants172 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call171, i64 0, i32 5, !dbg !6549
  %bf.load173 = load i8, i8* %has_constants172, align 4, !dbg !6550
  %bf.clear174 = and i8 %bf.load173, -5, !dbg !6550
  store i8 %bf.clear174, i8* %has_constants172, align 4, !dbg !6550
  %call175 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6551
  %expr176 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call175, i64 0, i32 1, !dbg !6552
  store %union.tree_node* null, %union.tree_node** %expr176, align 8, !dbg !6553
  br label %if.end181, !dbg !6554

if.end181:                                        ; preds = %if.then157, %if.then170, %if.else163, %if.else125, %if.then134
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6555
  %bf.load183 = load i64, i64* %21, align 8, !dbg !6555
  %bf.cast18517 = and i64 %bf.load183, 65535, !dbg !6557
  %cmp186 = icmp eq i64 %bf.cast18517, 141, !dbg !6557
  br i1 %cmp186, label %land.lhs.true188, label %lor.lhs.false210, !dbg !6558

land.lhs.true188:                                 ; preds = %if.end181
  %call189 = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %1) #6, !dbg !6559
  %tobool191 = icmp eq i8 %call189, 0, !dbg !6559
  br i1 %tobool191, label %land.lhs.true197, label %land.lhs.true192, !dbg !6560

land.lhs.true192:                                 ; preds = %land.lhs.true188
  %call193 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6561
  %call194 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call193) #6, !dbg !6562
  %tobool196 = icmp eq i8 %call194, 0, !dbg !6562
  br i1 %tobool196, label %land.lhs.true197, label %lor.lhs.false210, !dbg !6563

land.lhs.true197:                                 ; preds = %land.lhs.true192, %land.lhs.true188
  br i1 %cond, label %land.lhs.true203, label %land.lhs.true199, !dbg !6564

land.lhs.true199:                                 ; preds = %land.lhs.true197
  %call200 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call63) #6, !dbg !6565
  %tobool202 = icmp eq i8 %call200, 0, !dbg !6565
  br i1 %tobool202, label %land.lhs.true203, label %lor.lhs.false210, !dbg !6566

land.lhs.true203:                                 ; preds = %land.lhs.true199, %land.lhs.true197
  %bf.load205 = load i64, i64* %21, align 8, !dbg !6567
  %bf.cast20822 = and i64 %bf.load205, 4194304, !dbg !6567
  %tobool209 = icmp eq i64 %bf.cast20822, 0, !dbg !6567
  br i1 %tobool209, label %lor.lhs.false210, label %if.then230, !dbg !6568

lor.lhs.false210:                                 ; preds = %land.lhs.true192, %land.lhs.true199, %land.lhs.true203, %if.end181
  %call211 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %1) #6, !dbg !6569
  %tobool213 = icmp eq i8 %call211, 0, !dbg !6569
  br i1 %tobool213, label %if.else232, label %land.lhs.true214, !dbg !6570

land.lhs.true214:                                 ; preds = %lor.lhs.false210
  %call215 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6571
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6571
  %bf.load217 = load i64, i64* %22, align 8, !dbg !6571
  %bf.cast21920 = and i64 %bf.load217, 65535, !dbg !6572
  %cmp220 = icmp eq i64 %bf.cast21920, 141, !dbg !6572
  br i1 %cmp220, label %land.lhs.true222, label %if.else232, !dbg !6573

land.lhs.true222:                                 ; preds = %land.lhs.true214
  %call223 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6574
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6574
  %bf.load225 = load i64, i64* %23, align 8, !dbg !6574
  %bf.cast22821 = and i64 %bf.load225, 4194304, !dbg !6574
  %tobool229 = icmp eq i64 %bf.cast22821, 0, !dbg !6574
  br i1 %tobool229, label %if.else232, label %if.then230, !dbg !6575

if.then230:                                       ; preds = %land.lhs.true203, %land.lhs.true222
  %call231 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6576
  call void @llvm.dbg.value(metadata i8 %call231, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6577

if.else232:                                       ; preds = %land.lhs.true222, %lor.lhs.false210, %land.lhs.true214
  %bf.load234 = load i64, i64* %21, align 8, !dbg !6578
  %bf.cast236 = and i64 %bf.load234, 65535, !dbg !6578
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast236, !dbg !6578
  %24 = load i32, i32* %arrayidx, align 4, !dbg !6578
  %cmp237 = icmp eq i32 %24, 4, !dbg !6578
  br i1 %cmp237, label %if.then248, label %lor.lhs.false239, !dbg !6580

lor.lhs.false239:                                 ; preds = %if.else232
  %cmp246 = icmp eq i32 %24, 3, !dbg !6581
  br i1 %cmp246, label %if.then248, label %if.else251, !dbg !6582

if.then248:                                       ; preds = %lor.lhs.false239, %if.else232
  %call249 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6583
  %call250 = tail call fastcc zeroext i8 @visit_reference_op_store(%union.tree_node* %call40, %union.tree_node* %call249, %union.gimple_statement_d* %1) #7, !dbg !6585
  call void @llvm.dbg.value(metadata i8 %call250, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6586

if.else251:                                       ; preds = %lor.lhs.false239
  %cmp256 = icmp eq i64 %bf.cast236, 141, !dbg !6587
  br i1 %cmp256, label %if.then258, label %if.else335, !dbg !6589

if.then258:                                       ; preds = %if.else251
  %call259 = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %1) #6, !dbg !6590
  %tobool261 = icmp eq i8 %call259, 0, !dbg !6590
  br i1 %tobool261, label %lor.lhs.false267, label %land.lhs.true262, !dbg !6593

land.lhs.true262:                                 ; preds = %if.then258
  %call263 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6594
  %call264 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call263) #6, !dbg !6595
  %tobool266 = icmp eq i8 %call264, 0, !dbg !6595
  br i1 %tobool266, label %lor.lhs.false267, label %if.then273, !dbg !6596

lor.lhs.false267:                                 ; preds = %land.lhs.true262, %if.then258
  br i1 %cond, label %if.else286, label %land.lhs.true269, !dbg !6597

land.lhs.true269:                                 ; preds = %lor.lhs.false267
  %call270 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %call63) #6, !dbg !6598
  %tobool272 = icmp eq i8 %call270, 0, !dbg !6598
  br i1 %tobool272, label %if.else286, label %if.then273, !dbg !6599

if.then273:                                       ; preds = %land.lhs.true262, %land.lhs.true269
  %call274 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call40) #7, !dbg !6600
  %has_constants275 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call274, i64 0, i32 5, !dbg !6602
  %bf.load276 = load i8, i8* %has_constants275, align 4, !dbg !6603
  %bf.set278 = or i8 %bf.load276, 4, !dbg !6603
  store i8 %bf.set278, i8* %has_constants275, align 4, !dbg !6603
  br i1 %cond, label %if.else282, label %if.then280, !dbg !6604

if.then280:                                       ; preds = %if.then273
  %call281 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call40, %union.tree_node* nonnull %call63) #7, !dbg !6605
  call void @llvm.dbg.value(metadata i8 %call281, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6607

if.else282:                                       ; preds = %if.then273
  %call283 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6608
  %call284 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call40, %union.tree_node* %call283) #7, !dbg !6609
  call void @llvm.dbg.value(metadata i8 %call284, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup

if.else286:                                       ; preds = %land.lhs.true269, %lor.lhs.false267
  %call287 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %1) #7, !dbg !6610
  %call288 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call287) #7, !dbg !6612
  switch i32 %call288, label %sw.default331 [
    i32 2, label %sw.bb
    i32 1, label %sw.bb290
    i32 3, label %sw.bb292
  ], !dbg !6613

sw.bb:                                            ; preds = %if.else286
  %call289 = tail call fastcc zeroext i8 @visit_unary_op(%union.tree_node* %call40, %union.gimple_statement_d* %1) #7, !dbg !6614
  call void @llvm.dbg.value(metadata i8 %call289, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6616

sw.bb290:                                         ; preds = %if.else286
  %call291 = tail call fastcc zeroext i8 @visit_binary_op(%union.tree_node* %call40, %union.gimple_statement_d* %1) #7, !dbg !6617
  call void @llvm.dbg.value(metadata i8 %call291, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6618

sw.bb292:                                         ; preds = %if.else286
  %call293 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %1) #7, !dbg !6619
  %idxprom294 = sext i32 %call293 to i64, !dbg !6619
  %arrayidx295 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom294, !dbg !6619
  %25 = load i32, i32* %arrayidx295, align 4, !dbg !6619
  switch i32 %25, label %sw.default [
    i32 4, label %sw.bb296
    i32 3, label %sw.bb320
    i32 10, label %sw.bb323
  ], !dbg !6620

sw.bb296:                                         ; preds = %sw.bb292
  %call297 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %1) #7, !dbg !6621
  %cmp298 = icmp eq i32 %call297, 43, !dbg !6624
  br i1 %cmp298, label %land.lhs.true308, label %lor.lhs.false300, !dbg !6625

lor.lhs.false300:                                 ; preds = %sw.bb296
  %call301 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %1) #7, !dbg !6626
  %cmp302 = icmp eq i32 %call301, 44, !dbg !6627
  br i1 %cmp302, label %land.lhs.true308, label %lor.lhs.false304, !dbg !6628

lor.lhs.false304:                                 ; preds = %lor.lhs.false300
  %call305 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %1) #7, !dbg !6629
  %cmp306 = icmp eq i32 %call305, 118, !dbg !6630
  br i1 %cmp306, label %land.lhs.true308, label %sw.bb320, !dbg !6631

land.lhs.true308:                                 ; preds = %lor.lhs.false304, %lor.lhs.false300, %sw.bb296
  %call309 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6632
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6632
  %26 = bitcast %union.tree_node** %operands to i64**, !dbg !6632
  %27 = load i64*, i64** %26, align 8, !dbg !6632
  %bf.load312 = load i64, i64* %27, align 8, !dbg !6632
  %bf.cast31419 = and i64 %bf.load312, 65535, !dbg !6633
  %cmp315 = icmp eq i64 %bf.cast31419, 141, !dbg !6633
  br i1 %cmp315, label %if.then317, label %sw.bb320, !dbg !6634

if.then317:                                       ; preds = %land.lhs.true308
  %call318 = tail call fastcc zeroext i8 @visit_unary_op(%union.tree_node* %call40, %union.gimple_statement_d* %1) #7, !dbg !6635
  call void @llvm.dbg.value(metadata i8 %call318, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6637

sw.bb320:                                         ; preds = %lor.lhs.false304, %land.lhs.true308, %sw.bb292
  %call321 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !6638
  %call322 = tail call fastcc zeroext i8 @visit_reference_op_load(%union.tree_node* %call40, %union.tree_node* %call321, %union.gimple_statement_d* %1) #7, !dbg !6639
  call void @llvm.dbg.value(metadata i8 %call322, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6640

sw.bb323:                                         ; preds = %sw.bb292
  %call324 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %1) #7, !dbg !6641
  %cmp325 = icmp eq i32 %call324, 121, !dbg !6643
  br i1 %cmp325, label %if.then327, label %sw.default, !dbg !6644

if.then327:                                       ; preds = %sw.bb323
  %call328 = tail call fastcc zeroext i8 @visit_unary_op(%union.tree_node* %call40, %union.gimple_statement_d* %1) #7, !dbg !6645
  call void @llvm.dbg.value(metadata i8 %call328, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6647

sw.default:                                       ; preds = %sw.bb323, %sw.bb292
  %call330 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6648
  call void @llvm.dbg.value(metadata i8 %call330, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6649

sw.default331:                                    ; preds = %if.else286
  %call332 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6650
  call void @llvm.dbg.value(metadata i8 %call332, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup, !dbg !6651

if.else335:                                       ; preds = %if.else251
  %call336 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6652
  call void @llvm.dbg.value(metadata i8 %call336, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup

cleanup:                                          ; preds = %if.then230, %if.else335, %sw.bb, %sw.bb290, %sw.default331, %sw.default, %if.then327, %sw.bb320, %if.then317, %if.then280, %if.else282, %if.then248, %if.then123, %if.then100, %if.then59
  %changed.7 = phi i8 [ %call61, %if.then59 ], [ %call106, %if.then100 ], [ %call124, %if.then123 ], [ %call231, %if.then230 ], [ %call250, %if.then248 ], [ %call336, %if.else335 ], [ %call281, %if.then280 ], [ %call284, %if.else282 ], [ %call332, %sw.default331 ], [ %call291, %sw.bb290 ], [ %call289, %sw.bb ], [ %call330, %sw.default ], [ %call328, %if.then327 ], [ %call322, %sw.bb320 ], [ %call318, %if.then317 ], !dbg !6451
  call void @llvm.dbg.value(metadata i8 %changed.7, metadata !6394, metadata !DIExpression()), !dbg !6408
  ret i8 %changed.7

if.else341:                                       ; preds = %if.else36
  %call342 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %1) #7, !dbg !6653
  %tobool343 = icmp eq i8 %call342, 0, !dbg !6653
  br i1 %tobool343, label %cleanup419, label %if.then344, !dbg !6654

if.then344:                                       ; preds = %if.else341
  %call346 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %1) #7, !dbg !6655
  call void @llvm.dbg.value(metadata %union.tree_node* %call346, metadata !6404, metadata !DIExpression()), !dbg !6656
  %call347 = tail call fastcc zeroext i8 @stmt_has_constants(%union.gimple_statement_d* %1) #7, !dbg !6657
  %tobool349 = icmp eq i8 %call347, 0, !dbg !6657
  br i1 %tobool349, label %if.then344.if.else363_crit_edge, label %land.lhs.true350, !dbg !6659

if.then344.if.else363_crit_edge:                  ; preds = %if.then344
  %.phi.trans.insert34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6660
  %bf.load365.pre = load i64, i64* %.phi.trans.insert34, align 8, !dbg !6662
  br label %if.else363, !dbg !6659

land.lhs.true350:                                 ; preds = %if.then344
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6663
  %bf.load352 = load i64, i64* %28, align 8, !dbg !6663
  %bf.cast35414 = and i64 %bf.load352, 65535, !dbg !6664
  %cmp355 = icmp eq i64 %bf.cast35414, 141, !dbg !6664
  br i1 %cmp355, label %if.then357, label %if.else363, !dbg !6665

if.then357:                                       ; preds = %land.lhs.true350
  %call358 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call346) #7, !dbg !6666
  %has_constants359 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call358, i64 0, i32 5, !dbg !6667
  %bf.load360 = load i8, i8* %has_constants359, align 4, !dbg !6668
  %bf.set362 = or i8 %bf.load360, 4, !dbg !6668
  store i8 %bf.set362, i8* %has_constants359, align 4, !dbg !6668
  br label %if.end378, !dbg !6666

if.else363:                                       ; preds = %if.then344.if.else363_crit_edge, %land.lhs.true350
  %bf.load365 = phi i64 [ %bf.load365.pre, %if.then344.if.else363_crit_edge ], [ %bf.load352, %land.lhs.true350 ], !dbg !6662
  %bf.cast36710 = and i64 %bf.load365, 65535, !dbg !6669
  %cmp368 = icmp eq i64 %bf.cast36710, 141, !dbg !6669
  br i1 %cmp368, label %if.then370, label %if.end378, !dbg !6670

if.then370:                                       ; preds = %if.else363
  %call371 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call346) #7, !dbg !6671
  %has_constants372 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call371, i64 0, i32 5, !dbg !6673
  %bf.load373 = load i8, i8* %has_constants372, align 4, !dbg !6674
  %bf.clear374 = and i8 %bf.load373, -5, !dbg !6674
  store i8 %bf.clear374, i8* %has_constants372, align 4, !dbg !6674
  %call375 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call346) #7, !dbg !6675
  %expr376 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call375, i64 0, i32 1, !dbg !6676
  store %union.tree_node* null, %union.tree_node** %expr376, align 8, !dbg !6677
  br label %if.end378, !dbg !6678

if.end378:                                        ; preds = %if.else363, %if.then370, %if.then357
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6679
  %bf.load380 = load i64, i64* %29, align 8, !dbg !6679
  %bf.cast38211 = and i64 %bf.load380, 65535, !dbg !6681
  %cmp383 = icmp eq i64 %bf.cast38211, 141, !dbg !6681
  br i1 %cmp383, label %land.lhs.true385, label %if.else394, !dbg !6682

land.lhs.true385:                                 ; preds = %if.end378
  %bf.cast39013 = and i64 %bf.load380, 4194304, !dbg !6683
  %tobool391 = icmp eq i64 %bf.cast39013, 0, !dbg !6683
  br i1 %tobool391, label %if.else394, label %if.then392, !dbg !6684

if.then392:                                       ; preds = %land.lhs.true385
  %call393 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6685
  call void @llvm.dbg.value(metadata i8 %call393, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup419, !dbg !6686

if.else394:                                       ; preds = %land.lhs.true385, %if.end378
  br i1 %cmp383, label %if.then401, label %if.else410, !dbg !6687

if.then401:                                       ; preds = %if.else394
  %call402 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %1) #6, !dbg !6688
  %and403 = and i32 %call402, 3, !dbg !6692
  %tobool404 = icmp eq i32 %and403, 0, !dbg !6692
  br i1 %tobool404, label %if.else407, label %if.then405, !dbg !6693

if.then405:                                       ; preds = %if.then401
  %call406 = tail call fastcc zeroext i8 @visit_reference_op_call(%union.tree_node* %call346, %union.gimple_statement_d* %1) #7, !dbg !6694
  call void @llvm.dbg.value(metadata i8 %call406, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup419, !dbg !6695

if.else407:                                       ; preds = %if.then401
  %call408 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6696
  call void @llvm.dbg.value(metadata i8 %call408, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup419

if.else410:                                       ; preds = %if.else394
  %call411 = tail call fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %1) #7, !dbg !6697
  call void @llvm.dbg.value(metadata i8 %call411, metadata !6394, metadata !DIExpression()), !dbg !6408
  br label %cleanup419

cleanup419:                                       ; preds = %if.else341, %if.then23, %if.then392, %if.then405, %if.else407, %if.else410, %if.then34, %if.then20
  %retval.0 = phi i8 [ %call21, %if.then20 ], [ %call24, %if.then23 ], [ %call35, %if.then34 ], [ 0, %if.else341 ], [ %call393, %if.then392 ], [ %call411, %if.else410 ], [ %call406, %if.then405 ], [ %call408, %if.else407 ]
  ret i8 %retval.0, !dbg !6698
}

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #1

declare dso_local void @empty_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #1

declare dso_local void @statistics_histogram_event(%struct.function*, i8*, i32) local_unnamed_addr #1

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @copy_nary(i8** %entry1, i8* %data) #4 !dbg !6699 {
entry:
  call void @llvm.dbg.value(metadata i8** %entry1, metadata !6703, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i8* %data, metadata !6704, metadata !DIExpression()), !dbg !6709
  %0 = bitcast i8** %entry1 to %struct.vn_nary_op_s**, !dbg !6710
  %1 = load %struct.vn_nary_op_s*, %struct.vn_nary_op_s** %0, align 8, !dbg !6710
  call void @llvm.dbg.value(metadata %struct.vn_nary_op_s* %1, metadata !6705, metadata !DIExpression()), !dbg !6709
  %length = getelementptr inbounds %struct.vn_nary_op_s, %struct.vn_nary_op_s* %1, i64 0, i32 1, !dbg !6711
  %bf.load = load i32, i32* %length, align 4, !dbg !6711
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6711
  %sub = sub nsw i32 4, %bf.lshr, !dbg !6712
  %conv = sext i32 %sub to i64, !dbg !6713
  %mul = shl nsw i64 %conv, 3, !dbg !6714
  %sub2 = sub nsw i64 64, %mul, !dbg !6715
  call void @llvm.dbg.value(metadata i64 %sub2, metadata !6706, metadata !DIExpression()), !dbg !6709
  %2 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !6716
  %temp = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, i32 5, !dbg !6716
  store i64 %sub2, i64* %temp, align 8, !dbg !6716
  %chunk_limit = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, i32 4, !dbg !6716
  %3 = bitcast i8** %chunk_limit to i64*, !dbg !6716
  %4 = load i64, i64* %3, align 8, !dbg !6716
  %next_free = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, i32 3, !dbg !6716
  %5 = bitcast i8** %next_free to i64*, !dbg !6716
  %6 = load i64, i64* %5, align 8, !dbg !6716
  %sub.ptr.sub = sub i64 %4, %6, !dbg !6716
  %cmp = icmp slt i64 %sub.ptr.sub, %sub2, !dbg !6716
  %7 = inttoptr i64 %6 to i8*, !dbg !6716
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6716

cond.true:                                        ; preds = %entry
  %nary_obstack8 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 3, !dbg !6716
  %conv11 = trunc i64 %sub2 to i32, !dbg !6716
  tail call void @_obstack_newchunk(%struct.obstack* nonnull %nary_obstack8, i32 %conv11) #6, !dbg !6716
  %.pre = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !6716
  %temp13.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 5, !dbg !6709
  %.pre1 = load i64, i64* %temp13.phi.trans.insert, align 8, !dbg !6716
  %next_free15.phi.trans.insert = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %.pre, i64 0, i32 3, i32 3, !dbg !6709
  %.pre2 = load i8*, i8** %next_free15.phi.trans.insert, align 8, !dbg !6716
  br label %cond.end, !dbg !6716

cond.end:                                         ; preds = %entry, %cond.true
  %8 = phi i8* [ %7, %entry ], [ %.pre2, %cond.true ], !dbg !6716
  %9 = phi i64 [ %sub2, %entry ], [ %.pre1, %cond.true ], !dbg !6716
  %10 = phi %struct.vn_tables_s* [ %2, %entry ], [ %.pre, %cond.true ], !dbg !6716
  %temp13 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 5, !dbg !6716
  %next_free15 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 3, !dbg !6716
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !6716
  store i8* %add.ptr, i8** %next_free15, align 8, !dbg !6716
  %object_base = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 2, !dbg !6716
  %11 = load i8*, i8** %object_base, align 8, !dbg !6716
  %cmp19 = icmp eq i8* %add.ptr, %11, !dbg !6716
  %12 = ptrtoint i8* %11 to i64, !dbg !6716
  %13 = ptrtoint i8* %add.ptr to i64, !dbg !6716
  br i1 %cmp19, label %cond.true21, label %cond.end25, !dbg !6716

cond.true21:                                      ; preds = %cond.end
  %maybe_empty_object = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 10, !dbg !6716
  %bf.load23 = load i8, i8* %maybe_empty_object, align 8, !dbg !6716
  %bf.set = or i8 %bf.load23, 2, !dbg !6716
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !6716
  br label %cond.end25, !dbg !6716

cond.end25:                                       ; preds = %cond.end, %cond.true21
  %14 = bitcast i8** %object_base to i64*, !dbg !6716
  store i64 %12, i64* %temp13, align 8, !dbg !6716
  %alignment_mask = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 6, !dbg !6716
  %15 = load i32, i32* %alignment_mask, align 8, !dbg !6716
  %conv38 = sext i32 %15 to i64, !dbg !6716
  %add = add nsw i64 %13, %conv38, !dbg !6716
  %neg = xor i32 %15, -1, !dbg !6716
  %conv41 = sext i32 %neg to i64, !dbg !6716
  %and = and i64 %add, %conv41, !dbg !6716
  %16 = inttoptr i64 %and to i8*, !dbg !6716
  store i8* %16, i8** %next_free15, align 8, !dbg !6716
  %chunk = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 1, !dbg !6716
  %17 = bitcast %struct._obstack_chunk** %chunk to i64*, !dbg !6716
  %18 = load i64, i64* %17, align 8, !dbg !6716
  %sub.ptr.sub49 = sub i64 %and, %18, !dbg !6716
  %chunk_limit51 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 3, i32 4, !dbg !6716
  %19 = bitcast i8** %chunk_limit51 to i64*, !dbg !6716
  %20 = load i64, i64* %19, align 8, !dbg !6716
  %sub.ptr.sub56 = sub i64 %20, %18, !dbg !6716
  %cmp57 = icmp sgt i64 %sub.ptr.sub49, %sub.ptr.sub56, !dbg !6716
  br i1 %cmp57, label %cond.true59, label %cond.end65, !dbg !6716

cond.true59:                                      ; preds = %cond.end25
  %21 = bitcast i8** %next_free15 to i64*, !dbg !6716
  store i64 %20, i64* %21, align 8, !dbg !6716
  br label %cond.end65, !dbg !6716

cond.end65:                                       ; preds = %cond.end25, %cond.true59
  %22 = phi i64 [ %and, %cond.end25 ], [ %20, %cond.true59 ], !dbg !6716
  store i64 %22, i64* %14, align 8, !dbg !6716
  call void @llvm.dbg.value(metadata i8* %11, metadata !6707, metadata !DIExpression()), !dbg !6709
  %23 = bitcast %struct.vn_nary_op_s* %1 to i8*, !dbg !6717
  %call = tail call i8* @memcpy(i8* %11, i8* %23, i64 %sub2) #6, !dbg !6718
  %24 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !6719
  %nary73 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %24, i64 0, i32 0, !dbg !6720
  %25 = load %struct.htab*, %struct.htab** %nary73, align 8, !dbg !6720
  %hashcode = getelementptr inbounds i8, i8* %11, i64 8, !dbg !6721
  %26 = bitcast i8* %hashcode to i32*, !dbg !6721
  %27 = load i32, i32* %26, align 8, !dbg !6721
  %call74 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %25, i8* %11, i32 %27, i32 1) #6, !dbg !6722
  call void @llvm.dbg.value(metadata i8** %call74, metadata !6708, metadata !DIExpression()), !dbg !6709
  %28 = load i8*, i8** %call74, align 8, !dbg !6723
  %tobool = icmp eq i8* %28, null, !dbg !6723
  br i1 %tobool, label %cond.end77, label %cond.true75, !dbg !6723

cond.true75:                                      ; preds = %cond.end65
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 2781, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6723
  br label %cond.end77, !dbg !6723

cond.end77:                                       ; preds = %cond.end65, %cond.true75
  store i8* %11, i8** %call74, align 8, !dbg !6724
  ret i32 1, !dbg !6725
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_phis(i8** %entry1, i8* %data) #4 !dbg !6726 {
entry:
  call void @llvm.dbg.value(metadata i8** %entry1, metadata !6728, metadata !DIExpression()), !dbg !6733
  call void @llvm.dbg.value(metadata i8* %data, metadata !6729, metadata !DIExpression()), !dbg !6733
  %0 = bitcast i8** %entry1 to %struct.vn_phi_s**, !dbg !6734
  %1 = load %struct.vn_phi_s*, %struct.vn_phi_s** %0, align 8, !dbg !6734
  call void @llvm.dbg.value(metadata %struct.vn_phi_s* %1, metadata !6730, metadata !DIExpression()), !dbg !6733
  %2 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !6735
  %phis_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 4, !dbg !6736
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %phis_pool, align 8, !dbg !6736
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %3) #6, !dbg !6737
  call void @llvm.dbg.value(metadata i8* %call, metadata !6731, metadata !DIExpression()), !dbg !6733
  %4 = bitcast %struct.vn_phi_s* %1 to i8*, !dbg !6738
  %call2 = tail call i8* @memcpy(i8* %call, i8* %4, i64 32) #6, !dbg !6739
  %phiargs = getelementptr inbounds %struct.vn_phi_s, %struct.vn_phi_s* %1, i64 0, i32 2, !dbg !6740
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %phiargs, align 8, !dbg !6741
  %5 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !6742
  %phis = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %5, i64 0, i32 1, !dbg !6743
  %6 = load %struct.htab*, %struct.htab** %phis, align 8, !dbg !6743
  %hashcode = getelementptr inbounds i8, i8* %call, i64 4, !dbg !6744
  %7 = bitcast i8* %hashcode to i32*, !dbg !6744
  %8 = load i32, i32* %7, align 4, !dbg !6744
  %call3 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %6, i8* %call, i32 %8, i32 1) #6, !dbg !6745
  call void @llvm.dbg.value(metadata i8** %call3, metadata !6732, metadata !DIExpression()), !dbg !6733
  store i8* %call, i8** %call3, align 8, !dbg !6746
  ret i32 1, !dbg !6747
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_references(i8** %entry1, i8* %data) #4 !dbg !6748 {
entry:
  call void @llvm.dbg.value(metadata i8** %entry1, metadata !6750, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %data, metadata !6751, metadata !DIExpression()), !dbg !6755
  %0 = bitcast i8** %entry1 to %struct.vn_reference_s**, !dbg !6756
  %1 = load %struct.vn_reference_s*, %struct.vn_reference_s** %0, align 8, !dbg !6756
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %1, metadata !6752, metadata !DIExpression()), !dbg !6755
  %2 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !6757
  %references_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %2, i64 0, i32 5, !dbg !6758
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %references_pool, align 8, !dbg !6758
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %3) #6, !dbg !6759
  call void @llvm.dbg.value(metadata i8* %call, metadata !6753, metadata !DIExpression()), !dbg !6755
  %4 = bitcast %struct.vn_reference_s* %1 to i8*, !dbg !6760
  %call2 = tail call i8* @memcpy(i8* %call, i8* %4, i64 48) #6, !dbg !6761
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %1, i64 0, i32 5, !dbg !6762
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !6763
  %5 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !6764
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %5, i64 0, i32 2, !dbg !6765
  %6 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !6765
  %hashcode = getelementptr inbounds i8, i8* %call, i64 4, !dbg !6766
  %7 = bitcast i8* %hashcode to i32*, !dbg !6766
  %8 = load i32, i32* %7, align 4, !dbg !6766
  %call3 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %6, i8* %call, i32 %8, i32 1) #6, !dbg !6767
  call void @llvm.dbg.value(metadata i8** %call3, metadata !6754, metadata !DIExpression()), !dbg !6755
  %9 = load i8*, i8** %call3, align 8, !dbg !6768
  %tobool = icmp eq i8* %9, null, !dbg !6768
  br i1 %tobool, label %if.end, label %if.then, !dbg !6770

if.then:                                          ; preds = %entry
  tail call void @free_reference(i8* nonnull %9) #7, !dbg !6771
  br label %if.end, !dbg !6771

if.end:                                           ; preds = %entry, %if.then
  store i8* %call, i8** %call3, align 8, !dbg !6772
  ret i32 1, !dbg !6773
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %from, %union.tree_node* %to) unnamed_addr #0 !dbg !6774 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !6776, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !6777, metadata !DIExpression()), !dbg !6779
  %cmp = icmp eq %union.tree_node* %from, %to, !dbg !6780
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !6782

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %to, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6783
  %bf.load = load i64, i64* %0, align 8, !dbg !6783
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6784
  %cmp1 = icmp eq i64 %bf.cast2, 141, !dbg !6784
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !6785

land.lhs.true2:                                   ; preds = %land.lhs.true
  %bf.cast63 = and i64 %bf.load, 4194304, !dbg !6786
  %tobool = icmp eq i64 %bf.cast63, 0, !dbg !6786
  %spec.select = select i1 %tobool, %union.tree_node* %to, %union.tree_node* %from, !dbg !6787
  br label %if.end, !dbg !6787

if.end:                                           ; preds = %entry, %land.lhs.true2, %land.lhs.true
  %to.addr.0 = phi %union.tree_node* [ %to, %land.lhs.true ], [ %from, %entry ], [ %spec.select, %land.lhs.true2 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %to.addr.0, metadata !6777, metadata !DIExpression()), !dbg !6779
  %cmp7 = icmp eq %union.tree_node* %to.addr.0, null, !dbg !6788
  br i1 %cmp7, label %cond.true, label %land.lhs.true8, !dbg !6788

land.lhs.true8:                                   ; preds = %if.end
  %1 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !6788
  %cmp9 = icmp eq %union.tree_node* %to.addr.0, %1, !dbg !6788
  br i1 %cmp9, label %cond.end, label %lor.lhs.false, !dbg !6788

lor.lhs.false:                                    ; preds = %land.lhs.true8
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %to.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6788
  %bf.load11 = load i64, i64* %2, align 8, !dbg !6788
  %bf.cast131 = and i64 %bf.load11, 65535, !dbg !6788
  %cmp14 = icmp eq i64 %bf.cast131, 141, !dbg !6788
  br i1 %cmp14, label %cond.end, label %lor.lhs.false15, !dbg !6788

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %to.addr.0) #6, !dbg !6788
  %tobool16 = icmp eq i8 %call, 0, !dbg !6788
  br i1 %tobool16, label %cond.true, label %cond.end, !dbg !6788

cond.true:                                        ; preds = %lor.lhs.false15, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 1812, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6788
  br label %cond.end, !dbg !6788

cond.end:                                         ; preds = %lor.lhs.false15, %land.lhs.true8, %lor.lhs.false, %cond.true
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6789
  %tobool17 = icmp eq %struct._IO_FILE* %3, null, !dbg !6789
  br i1 %tobool17, label %if.end23, label %land.lhs.true18, !dbg !6791

land.lhs.true18:                                  ; preds = %cond.end
  %4 = load i32, i32* @dump_flags, align 4, !dbg !6792
  %and = and i32 %4, 8, !dbg !6793
  %tobool19 = icmp eq i32 %and, 0, !dbg !6793
  br i1 %tobool19, label %if.end23, label %if.then20, !dbg !6794

if.then20:                                        ; preds = %land.lhs.true18
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !6795
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6797
  tail call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* %from, i32 0) #6, !dbg !6798
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6799
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !6800
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6801
  tail call void @print_generic_expr(%struct._IO_FILE* %7, %union.tree_node* %to.addr.0, i32 0) #6, !dbg !6802
  br label %if.end23, !dbg !6803

if.end23:                                         ; preds = %land.lhs.true18, %cond.end, %if.then20
  %call24 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %from) #7, !dbg !6804
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call24, i64 0, i32 0, !dbg !6804
  %8 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !6804
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6778, metadata !DIExpression()), !dbg !6779
  %cmp25 = icmp eq %union.tree_node* %8, %to.addr.0, !dbg !6805
  br i1 %cmp25, label %if.end40, label %land.lhs.true27, !dbg !6807

land.lhs.true27:                                  ; preds = %if.end23
  %call28 = tail call i32 @operand_equal_p(%union.tree_node* %8, %union.tree_node* %to.addr.0, i32 2) #6, !dbg !6808
  %tobool29 = icmp eq i32 %call28, 0, !dbg !6808
  br i1 %tobool29, label %if.then30, label %if.end40, !dbg !6809

if.then30:                                        ; preds = %land.lhs.true27
  %call31 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %from) #7, !dbg !6810
  %valnum32 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call31, i64 0, i32 0, !dbg !6812
  store %union.tree_node* %to.addr.0, %union.tree_node** %valnum32, align 8, !dbg !6813
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6814
  %tobool33 = icmp eq %struct._IO_FILE* %9, null, !dbg !6814
  br i1 %tobool33, label %cleanup, label %land.lhs.true34, !dbg !6816

land.lhs.true34:                                  ; preds = %if.then30
  %10 = load i32, i32* @dump_flags, align 4, !dbg !6817
  %and35 = and i32 %10, 8, !dbg !6818
  %tobool36 = icmp eq i32 %and35, 0, !dbg !6818
  br i1 %tobool36, label %cleanup, label %if.then37, !dbg !6819

if.then37:                                        ; preds = %land.lhs.true34
  %call38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !6820
  br label %cleanup, !dbg !6820

if.end40:                                         ; preds = %land.lhs.true27, %if.end23
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6821
  %tobool41 = icmp eq %struct._IO_FILE* %11, null, !dbg !6821
  br i1 %tobool41, label %cleanup, label %land.lhs.true42, !dbg !6823

land.lhs.true42:                                  ; preds = %if.end40
  %12 = load i32, i32* @dump_flags, align 4, !dbg !6824
  %and43 = and i32 %12, 8, !dbg !6825
  %tobool44 = icmp eq i32 %and43, 0, !dbg !6825
  br i1 %tobool44, label %cleanup, label %if.then45, !dbg !6826

if.then45:                                        ; preds = %land.lhs.true42
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6827
  br label %cleanup, !dbg !6827

cleanup:                                          ; preds = %land.lhs.true34, %if.then30, %land.lhs.true42, %if.end40, %if.then45, %if.then37
  %retval.0 = phi i8 [ 1, %if.then37 ], [ 1, %land.lhs.true34 ], [ 1, %if.then30 ], [ 0, %if.then45 ], [ 0, %land.lhs.true42 ], [ 0, %if.end40 ], !dbg !6779
  ret i8 %retval.0, !dbg !6828
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_phi(%union.gimple_statement_d* %phi) unnamed_addr #4 !dbg !6829 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6833, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8 0, metadata !6834, metadata !DIExpression()), !dbg !6843
  %0 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !6844
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6836, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8 1, metadata !6837, metadata !DIExpression()), !dbg !6843
  %call = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6845
  %call1 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call) #7, !dbg !6845
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6845
  %bf.load = load i64, i64* %1, align 8, !dbg !6845
  %bf.cast1 = and i64 %bf.load, 4194304, !dbg !6845
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6845
  br i1 %tobool, label %for.cond.preheader, label %if.then, !dbg !6847

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !6848

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6849
  %call3 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call2) #7, !dbg !6849
  %call4 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6850
  %call5 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call4) #7, !dbg !6850
  %call6 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call3, %union.tree_node* %call5) #7, !dbg !6851
  br label %cleanup106, !dbg !6852

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6853
  %allsame.0 = phi i8 [ %allsame.1, %for.inc ], [ 1, %for.cond.preheader ], !dbg !6854
  %sameval.0 = phi %union.tree_node* [ %sameval.2, %for.inc ], [ %0, %for.cond.preheader ], !dbg !6855
  call void @llvm.dbg.value(metadata %union.tree_node* %sameval.0, metadata !6836, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8 %allsame.0, metadata !6837, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6838, metadata !DIExpression()), !dbg !6843
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !6856
  %cmp = icmp ult i32 %i.0, %call7, !dbg !6857
  br i1 %cmp, label %for.body, label %for.end, !dbg !6848

for.body:                                         ; preds = %for.cond
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi, i32 %i.0) #7, !dbg !6858
  %call9 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call8) #7, !dbg !6858
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6839, metadata !DIExpression()), !dbg !6859
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6860
  %bf.load11 = load i64, i64* %2, align 8, !dbg !6860
  %bf.cast134 = and i64 %bf.load11, 65535, !dbg !6862
  %cmp14 = icmp eq i64 %bf.cast134, 141, !dbg !6862
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !6863

if.then15:                                        ; preds = %for.body
  %call16 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call9) #7, !dbg !6864
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call16, i64 0, i32 0, !dbg !6864
  %3 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !6864
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6839, metadata !DIExpression()), !dbg !6859
  br label %if.end17, !dbg !6865

if.end17:                                         ; preds = %if.then15, %for.body
  %def.0 = phi %union.tree_node* [ %3, %if.then15 ], [ %call9, %for.body ], !dbg !6859
  call void @llvm.dbg.value(metadata %union.tree_node* %def.0, metadata !6839, metadata !DIExpression()), !dbg !6859
  %4 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !6866
  %cmp18 = icmp eq %union.tree_node* %def.0, %4, !dbg !6868
  br i1 %cmp18, label %cleanup, label %if.end20, !dbg !6869

if.end20:                                         ; preds = %if.end17
  %cmp21 = icmp eq %union.tree_node* %sameval.0, %4, !dbg !6870
  br i1 %cmp21, label %if.end27, label %if.else, !dbg !6872

if.else:                                          ; preds = %if.end20
  %call23 = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %def.0, %union.tree_node* %sameval.0) #7, !dbg !6873
  %tobool24 = icmp eq i8 %call23, 0, !dbg !6873
  br i1 %tobool24, label %cleanup, label %if.end27, !dbg !6876

if.end27:                                         ; preds = %if.else, %if.end20
  %sameval.1 = phi %union.tree_node* [ %def.0, %if.end20 ], [ %sameval.0, %if.else ], !dbg !6843
  call void @llvm.dbg.value(metadata %union.tree_node* %sameval.1, metadata !6836, metadata !DIExpression()), !dbg !6843
  br label %cleanup, !dbg !6877

cleanup:                                          ; preds = %if.else, %if.end17, %if.end27
  %allsame.1 = phi i8 [ %allsame.0, %if.end27 ], [ %allsame.0, %if.end17 ], [ 0, %if.else ], !dbg !6843
  %sameval.2 = phi %union.tree_node* [ %sameval.1, %if.end27 ], [ %sameval.0, %if.end17 ], [ %sameval.0, %if.else ], !dbg !6843
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end27 ], [ false, %if.end17 ], [ true, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %sameval.2, metadata !6836, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8 %allsame.1, metadata !6837, metadata !DIExpression()), !dbg !6843
  br i1 %cleanup.dest.slot.0, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  %inc = add i32 %i.0, 1, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6838, metadata !DIExpression()), !dbg !6843
  br label %for.cond, !dbg !6879, !llvm.loop !6880

for.end:                                          ; preds = %cleanup, %for.cond
  %allsame.2 = phi i8 [ %allsame.1, %cleanup ], [ %allsame.0, %for.cond ], !dbg !6854
  %sameval.3 = phi %union.tree_node* [ %sameval.2, %cleanup ], [ %sameval.0, %for.cond ], !dbg !6855
  call void @llvm.dbg.value(metadata %union.tree_node* %sameval.3, metadata !6836, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8 %allsame.2, metadata !6837, metadata !DIExpression()), !dbg !6843
  %tobool28 = icmp eq i8 %allsame.2, 0, !dbg !6882
  br i1 %tobool28, label %if.end66, label %if.then29, !dbg !6884

if.then29:                                        ; preds = %for.end
  %call30 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %sameval.3) #6, !dbg !6885
  %tobool31 = icmp eq i8 %call30, 0, !dbg !6885
  %call33 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6888
  %call34 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call33) #7, !dbg !6888
  %call35 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call34) #7, !dbg !6888
  %has_constants = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call35, i64 0, i32 5, !dbg !6888
  %bf.load36 = load i8, i8* %has_constants, align 4, !dbg !6888
  br i1 %tobool31, label %if.else41, label %if.then32, !dbg !6889

if.then32:                                        ; preds = %if.then29
  %bf.set = or i8 %bf.load36, 4, !dbg !6890
  store i8 %bf.set, i8* %has_constants, align 4, !dbg !6890
  %call38 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6892
  %call39 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call38) #7, !dbg !6892
  %call40 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call39) #7, !dbg !6893
  %expr = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call40, i64 0, i32 1, !dbg !6894
  store %union.tree_node* %sameval.3, %union.tree_node** %expr, align 8, !dbg !6895
  br label %if.end52, !dbg !6896

if.else41:                                        ; preds = %if.then29
  %bf.clear37 = and i8 %bf.load36, -5, !dbg !6888
  store i8 %bf.clear37, i8* %has_constants, align 4, !dbg !6897
  %call48 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6899
  %call49 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call48) #7, !dbg !6899
  %call50 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call49) #7, !dbg !6900
  %expr51 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call50, i64 0, i32 1, !dbg !6901
  store %union.tree_node* %sameval.3, %union.tree_node** %expr51, align 8, !dbg !6902
  br label %if.end52

if.end52:                                         ; preds = %if.else41, %if.then32
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %sameval.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6903
  %bf.load54 = load i64, i64* %5, align 8, !dbg !6903
  %bf.cast563 = and i64 %bf.load54, 65535, !dbg !6905
  %cmp57 = icmp eq i64 %bf.cast563, 141, !dbg !6905
  %call59 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6906
  %call60 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call59) #7, !dbg !6906
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !6907

if.then58:                                        ; preds = %if.end52
  %call61 = tail call fastcc zeroext i8 @visit_copy(%union.tree_node* %call60, %union.tree_node* %sameval.3) #7, !dbg !6908
  br label %cleanup106, !dbg !6909

if.end62:                                         ; preds = %if.end52
  %call65 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call60, %union.tree_node* %sameval.3) #7, !dbg !6910
  br label %cleanup106, !dbg !6911

if.end66:                                         ; preds = %for.end
  %call67 = tail call fastcc %union.tree_node* @vn_phi_lookup(%union.gimple_statement_d* %phi) #7, !dbg !6912
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !6835, metadata !DIExpression()), !dbg !6843
  %tobool68 = icmp eq %union.tree_node* %call67, null, !dbg !6913
  br i1 %tobool68, label %if.else84, label %if.then69, !dbg !6915

if.then69:                                        ; preds = %if.end66
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6916
  %bf.load71 = load i64, i64* %6, align 8, !dbg !6916
  %bf.cast732 = and i64 %bf.load71, 65535, !dbg !6919
  %cmp74 = icmp eq i64 %bf.cast732, 141, !dbg !6919
  %call76 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6920
  %call77 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call76) #7, !dbg !6920
  br i1 %cmp74, label %if.then75, label %if.else79, !dbg !6921

if.then75:                                        ; preds = %if.then69
  %call78 = tail call fastcc zeroext i8 @visit_copy(%union.tree_node* %call77, %union.tree_node* nonnull %call67) #7, !dbg !6922
  call void @llvm.dbg.value(metadata i8 %call78, metadata !6834, metadata !DIExpression()), !dbg !6843
  br label %cleanup106, !dbg !6923

if.else79:                                        ; preds = %if.then69
  %call82 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call77, %union.tree_node* nonnull %call67) #7, !dbg !6924
  call void @llvm.dbg.value(metadata i8 %call82, metadata !6834, metadata !DIExpression()), !dbg !6843
  br label %cleanup106

if.else84:                                        ; preds = %if.end66
  %call85 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6925
  %call86 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call85) #7, !dbg !6925
  %call87 = tail call fastcc %struct.vn_phi_s* @vn_phi_insert(%union.gimple_statement_d* %phi, %union.tree_node* %call86) #7, !dbg !6927
  %call88 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6928
  %call89 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call88) #7, !dbg !6928
  %call90 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call89) #7, !dbg !6929
  %has_constants91 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call90, i64 0, i32 5, !dbg !6930
  %bf.load92 = load i8, i8* %has_constants91, align 4, !dbg !6931
  %bf.clear93 = and i8 %bf.load92, -5, !dbg !6931
  store i8 %bf.clear93, i8* %has_constants91, align 4, !dbg !6931
  %call94 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6932
  %call95 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call94) #7, !dbg !6932
  %call96 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6933
  %call97 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call96) #7, !dbg !6933
  %call98 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call97) #7, !dbg !6934
  %expr99 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call98, i64 0, i32 1, !dbg !6935
  store %union.tree_node* %call95, %union.tree_node** %expr99, align 8, !dbg !6936
  %call100 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6937
  %call101 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call100) #7, !dbg !6937
  %call102 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #7, !dbg !6938
  %call103 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call102) #7, !dbg !6938
  %call104 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call101, %union.tree_node* %call103) #7, !dbg !6939
  call void @llvm.dbg.value(metadata i8 %call104, metadata !6834, metadata !DIExpression()), !dbg !6843
  br label %cleanup106

cleanup106:                                       ; preds = %if.else84, %if.else79, %if.then75, %if.end62, %if.then58, %if.then
  %retval.0 = phi i8 [ %call6, %if.then ], [ %call61, %if.then58 ], [ %call65, %if.end62 ], [ %call104, %if.else84 ], [ %call78, %if.then75 ], [ %call82, %if.else79 ], !dbg !6843
  ret i8 %retval.0, !dbg !6940
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6941 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6943, metadata !DIExpression()), !dbg !6944
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !6945
  %tobool = icmp eq i8 %call, 0, !dbg !6945
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6946

lor.rhs:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !6947
  %tobool3 = icmp eq i8 %call1, 0, !dbg !6947
  br i1 %tobool3, label %lor.end, label %land.rhs, !dbg !6948

land.rhs:                                         ; preds = %lor.rhs
  %call4 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !6949
  %cmp = icmp ne %union.tree_node* %call4, null, !dbg !6950
  %phitmp = zext i1 %cmp to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry, %land.rhs
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6951
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6952 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6954, metadata !DIExpression()), !dbg !6955
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6956
  %tobool = icmp eq i8 %call, 0, !dbg !6956
  br i1 %tobool, label %return, label %if.then, !dbg !6958

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6959
  %bf.load = load i32, i32* %0, align 8, !dbg !6959
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !6959
  %1 = trunc i32 %bf.lshr to i8, !dbg !6960
  %conv = and i8 %1, 1, !dbg !6960
  br label %return, !dbg !6961

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !6962
  ret i8 %retval.0, !dbg !6963
}

declare dso_local zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @defs_to_varying(%union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !6964 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6966, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i8 0, metadata !6967, metadata !DIExpression()), !dbg !6974
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !6975
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6975
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6968, metadata !DIExpression(DW_OP_deref)), !dbg !6974
  %call = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 10) #7, !dbg !6976
  call void @llvm.dbg.value(metadata %union.tree_node** %call, metadata !6969, metadata !DIExpression()), !dbg !6974
  br label %for.cond, !dbg !6976

for.cond:                                         ; preds = %for.body, %entry
  %changed.0 = phi i8 [ 0, %entry ], [ %or1, %for.body ], !dbg !6974
  %defp.0 = phi %union.tree_node** [ %call, %entry ], [ %call7, %for.body ], !dbg !6977
  call void @llvm.dbg.value(metadata %union.tree_node** %defp.0, metadata !6969, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !6967, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6968, metadata !DIExpression(DW_OP_deref)), !dbg !6974
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6978
  %tobool = icmp eq i8 %call1, 0, !dbg !6978
  br i1 %tobool, label %for.body, label %for.end, !dbg !6976

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %defp.0) #7, !dbg !6979
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6970, metadata !DIExpression()), !dbg !6980
  %call3 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call2) #7, !dbg !6981
  %use_processed = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call3, i64 0, i32 5, !dbg !6982
  %bf.load = load i8, i8* %use_processed, align 4, !dbg !6983
  %bf.set = or i8 %bf.load, 8, !dbg !6983
  store i8 %bf.set, i8* %use_processed, align 4, !dbg !6983
  %call4 = call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call2, %union.tree_node* %call2) #7, !dbg !6984
  %or1 = or i8 %changed.0, %call4, !dbg !6985
  call void @llvm.dbg.value(metadata i8 %or1, metadata !6967, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6968, metadata !DIExpression(DW_OP_deref)), !dbg !6974
  %call7 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6978
  call void @llvm.dbg.value(metadata %union.tree_node** %call7, metadata !6969, metadata !DIExpression()), !dbg !6974
  br label %for.cond, !dbg !6978, !llvm.loop !6986

for.end:                                          ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !6974
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !6967, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !6967, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !6967, metadata !DIExpression()), !dbg !6974
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6988
  ret i8 %changed.0.lcssa, !dbg !6989
}

declare dso_local zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_copy(%union.tree_node* %lhs, %union.tree_node* %rhs) unnamed_addr #4 !dbg !6990 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6992, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6993, metadata !DIExpression()), !dbg !6994
  br label %while.cond, !dbg !6995

while.cond:                                       ; preds = %while.body, %entry
  %rhs.addr.0 = phi %union.tree_node* [ %rhs, %entry ], [ %2, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0, metadata !6993, metadata !DIExpression()), !dbg !6994
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6996
  %bf.load = load i64, i64* %0, align 8, !dbg !6996
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6997
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6997
  br i1 %cmp, label %land.rhs, label %while.end.loopexit, !dbg !6998

land.rhs:                                         ; preds = %while.cond
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %rhs.addr.0) #7, !dbg !6999
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 0, !dbg !6999
  %1 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !6999
  %cmp1 = icmp eq %union.tree_node* %1, %rhs.addr.0, !dbg !7000
  br i1 %cmp1, label %land.rhs.while.end_crit_edge, label %while.body, !dbg !6995

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  %rhs.addr.0.lcssa10 = phi %union.tree_node* [ %rhs.addr.0, %land.rhs ]
  %.lcssa9 = phi i64* [ %0, %land.rhs ], !dbg !6996
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0.lcssa10, metadata !6993, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0.lcssa10, metadata !6993, metadata !DIExpression()), !dbg !6994
  %bf.load5.pre = load i64, i64* %.lcssa9, align 8, !dbg !7001
  br label %while.end, !dbg !6995

while.body:                                       ; preds = %land.rhs
  %call2 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %rhs.addr.0) #7, !dbg !7003
  %valnum3 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call2, i64 0, i32 0, !dbg !7003
  %2 = load %union.tree_node*, %union.tree_node** %valnum3, align 8, !dbg !7003
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6993, metadata !DIExpression()), !dbg !6994
  br label %while.cond, !dbg !6995, !llvm.loop !7004

while.end.loopexit:                               ; preds = %while.cond
  %rhs.addr.0.lcssa = phi %union.tree_node* [ %rhs.addr.0, %while.cond ]
  %bf.load.lcssa = phi i64 [ %bf.load, %while.cond ], !dbg !6996
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0.lcssa, metadata !6993, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0.lcssa, metadata !6993, metadata !DIExpression()), !dbg !6994
  br label %while.end, !dbg !7005

while.end:                                        ; preds = %while.end.loopexit, %land.rhs.while.end_crit_edge
  %rhs.addr.011 = phi %union.tree_node* [ %rhs.addr.0.lcssa10, %land.rhs.while.end_crit_edge ], [ %rhs.addr.0.lcssa, %while.end.loopexit ]
  %bf.load5 = phi i64 [ %bf.load5.pre, %land.rhs.while.end_crit_edge ], [ %bf.load.lcssa, %while.end.loopexit ], !dbg !7001
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.011, metadata !6993, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.011, metadata !6993, metadata !DIExpression()), !dbg !6994
  %bf.cast72 = and i64 %bf.load5, 65535, !dbg !7005
  %cmp8 = icmp eq i64 %bf.cast72, 141, !dbg !7005
  br i1 %cmp8, label %if.then, label %if.end, !dbg !7006

if.then:                                          ; preds = %while.end
  %call9 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %rhs.addr.011) #7, !dbg !7007
  %has_constants = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call9, i64 0, i32 5, !dbg !7009
  %bf.load10 = load i8, i8* %has_constants, align 4, !dbg !7009
  %bf.clear11 = and i8 %bf.load10, 4, !dbg !7009
  %call13 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %lhs) #7, !dbg !7010
  %has_constants14 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call13, i64 0, i32 5, !dbg !7011
  %bf.load15 = load i8, i8* %has_constants14, align 4, !dbg !7012
  %bf.clear16 = and i8 %bf.load15, -5, !dbg !7012
  %bf.set = or i8 %bf.clear16, %bf.clear11, !dbg !7012
  store i8 %bf.set, i8* %has_constants14, align 4, !dbg !7012
  %call17 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %rhs.addr.011) #7, !dbg !7013
  %expr = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call17, i64 0, i32 1, !dbg !7014
  %3 = bitcast %union.tree_node** %expr to i64*, !dbg !7014
  %4 = load i64, i64* %3, align 8, !dbg !7014
  %call18 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %lhs) #7, !dbg !7015
  %expr19 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call18, i64 0, i32 1, !dbg !7016
  %5 = bitcast %union.tree_node** %expr19 to i64*, !dbg !7017
  store i64 %4, i64* %5, align 8, !dbg !7017
  br label %if.end, !dbg !7018

if.end:                                           ; preds = %if.then, %while.end
  %call20 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* %rhs.addr.011) #7, !dbg !7019
  ret i8 %call20, !dbg !7020
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @try_to_simplify(%union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7021 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7025, metadata !DIExpression()), !dbg !7027
  %call = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %stmt) #6, !dbg !7028
  %tobool = icmp eq i8 %call, 0, !dbg !7028
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7030

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7031
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7031
  %bf.load = load i64, i64* %0, align 8, !dbg !7031
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !7032
  %cmp = icmp eq i64 %bf.cast4, 141, !dbg !7032
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7033

if.end:                                           ; preds = %entry, %land.lhs.true
  %call3 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7034
  %idxprom = sext i32 %call3 to i64, !dbg !7034
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7034
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7034
  switch i32 %1, label %sw.epilog [
    i32 3, label %sw.bb
    i32 4, label %sw.bb9
    i32 6, label %sw.bb39
    i32 5, label %sw.bb41
    i32 7, label %sw.bb41
  ], !dbg !7035

sw.bb:                                            ; preds = %if.end
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7036
  %call5 = tail call %union.tree_node* @get_symbol_constant_value(%union.tree_node* %call4) #6, !dbg !7038
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7026, metadata !DIExpression()), !dbg !7027
  %tobool6 = icmp eq %union.tree_node* %call5, null, !dbg !7039
  br i1 %tobool6, label %sw.epilog, label %cleanup, !dbg !7041

sw.bb9:                                           ; preds = %if.end
  %call10 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7042
  %call11 = tail call %union.tree_node* @fold_const_aggregate_ref(%union.tree_node* %call10) #6, !dbg !7043
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !7026, metadata !DIExpression()), !dbg !7027
  %tobool12 = icmp eq %union.tree_node* %call11, null, !dbg !7044
  br i1 %tobool12, label %if.end14, label %cleanup, !dbg !7046

if.end14:                                         ; preds = %sw.bb9
  %call15 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7047
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7047
  %bf.load17 = load i64, i64* %2, align 8, !dbg !7047
  %bf.cast191 = and i64 %bf.load17, 65535, !dbg !7049
  %cmp20 = icmp eq i64 %bf.cast191, 43, !dbg !7049
  br i1 %cmp20, label %sw.bb39, label %lor.lhs.false, !dbg !7050

lor.lhs.false:                                    ; preds = %if.end14
  %call22 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7051
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7051
  %bf.load24 = load i64, i64* %3, align 8, !dbg !7051
  %bf.cast262 = and i64 %bf.load24, 65535, !dbg !7052
  %cmp27 = icmp eq i64 %bf.cast262, 44, !dbg !7052
  br i1 %cmp27, label %sw.bb39, label %lor.lhs.false29, !dbg !7053

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %call30 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7054
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7054
  %bf.load32 = load i64, i64* %4, align 8, !dbg !7054
  %bf.cast343 = and i64 %bf.load32, 65535, !dbg !7055
  %cmp35 = icmp eq i64 %bf.cast343, 118, !dbg !7055
  br i1 %cmp35, label %sw.bb39, label %sw.epilog, !dbg !7056

sw.bb39:                                          ; preds = %if.end14, %lor.lhs.false, %lor.lhs.false29, %if.end
  %call40 = tail call fastcc %union.tree_node* @simplify_unary_expression(%union.gimple_statement_d* %stmt) #7, !dbg !7057
  br label %cleanup, !dbg !7058

sw.bb41:                                          ; preds = %if.end, %if.end
  %call42 = tail call fastcc %union.tree_node* @simplify_binary_expression(%union.gimple_statement_d* %stmt) #7, !dbg !7059
  br label %cleanup, !dbg !7060

sw.epilog:                                        ; preds = %sw.bb, %if.end, %lor.lhs.false29
  br label %cleanup, !dbg !7061

cleanup:                                          ; preds = %sw.bb, %sw.bb9, %land.lhs.true, %sw.epilog, %sw.bb41, %sw.bb39
  %retval.0 = phi %union.tree_node* [ null, %sw.epilog ], [ %call42, %sw.bb41 ], [ %call40, %sw.bb39 ], [ null, %land.lhs.true ], [ %call5, %sw.bb ], [ %call11, %sw.bb9 ], !dbg !7027
  ret %union.tree_node* %retval.0, !dbg !7062
}

declare dso_local void @print_gimple_expr(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expr_has_constants(%union.tree_node* %expr) unnamed_addr #4 !dbg !7063 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7065, metadata !DIExpression()), !dbg !7066
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7067
  %bf.load = load i64, i64* %0, align 8, !dbg !7067
  %bf.cast = and i64 %bf.load, 65535, !dbg !7067
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7067
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7067
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 7, label %sw.bb2
    i32 4, label %return
    i32 3, label %return
  ], !dbg !7068

sw.bb:                                            ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7069
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7069
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %2) #6, !dbg !7071
  br label %return, !dbg !7072

sw.bb2:                                           ; preds = %entry
  %operands4 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7073
  %3 = load %union.tree_node*, %union.tree_node** %operands4, align 8, !dbg !7073
  %call6 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %3) #6, !dbg !7074
  %tobool = icmp eq i8 %call6, 0, !dbg !7074
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7075

lor.rhs:                                          ; preds = %sw.bb2
  %arrayidx9 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands4, i64 1, !dbg !7076
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8, !dbg !7076
  %call10 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %4) #6, !dbg !7077
  %tobool12 = icmp ne i8 %call10, 0, !dbg !7075
  %phitmp = zext i1 %tobool12 to i8, !dbg !7075
  br label %lor.end, !dbg !7075

lor.end:                                          ; preds = %sw.bb2, %lor.rhs
  %5 = phi i8 [ 1, %sw.bb2 ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !7078

sw.default:                                       ; preds = %entry
  %call15 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %expr) #6, !dbg !7079
  br label %return, !dbg !7080

return:                                           ; preds = %entry, %entry, %sw.default, %lor.end, %sw.bb
  %retval.0 = phi i8 [ %call15, %sw.default ], [ %5, %lor.end ], [ %call, %sw.bb ], [ 0, %entry ], [ 0, %entry ], !dbg !7081
  ret i8 %retval.0, !dbg !7082
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stmt_has_constants(%union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7083 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7085, metadata !DIExpression()), !dbg !7086
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !7087
  %cmp = icmp eq i32 %call, 6, !dbg !7089
  br i1 %cmp, label %if.end, label %return, !dbg !7090

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7091
  %call2 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call1) #7, !dbg !7092
  switch i32 %call2, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb5
    i32 3, label %sw.bb13
  ], !dbg !7093

sw.bb:                                            ; preds = %if.end
  %call3 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7094
  %call4 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call3) #6, !dbg !7096
  br label %return, !dbg !7097

sw.bb5:                                           ; preds = %if.end
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7098
  %call7 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call6) #6, !dbg !7099
  %tobool = icmp eq i8 %call7, 0, !dbg !7099
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7100

lor.rhs:                                          ; preds = %sw.bb5
  %call8 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !7101
  %call9 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call8) #6, !dbg !7102
  %tobool11 = icmp ne i8 %call9, 0, !dbg !7100
  %phitmp = zext i1 %tobool11 to i8, !dbg !7100
  br label %lor.end, !dbg !7100

lor.end:                                          ; preds = %sw.bb5, %lor.rhs
  %0 = phi i8 [ 1, %sw.bb5 ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !7103

sw.bb13:                                          ; preds = %if.end
  %call14 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7104
  %call15 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call14) #6, !dbg !7105
  br label %return, !dbg !7106

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 2285, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7107
  br label %return, !dbg !7108

return:                                           ; preds = %entry, %sw.default, %sw.bb13, %lor.end, %sw.bb
  %retval.0 = phi i8 [ 0, %sw.default ], [ %call15, %sw.bb13 ], [ %0, %lor.end ], [ %call4, %sw.bb ], [ 0, %entry ], !dbg !7086
  ret i8 %retval.0, !dbg !7109
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_reference_op_store(%union.tree_node* %lhs, %union.tree_node* %op, %union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7110 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7114, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !7115, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7116, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i8 0, metadata !7117, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i8 0, metadata !7119, metadata !DIExpression()), !dbg !7126
  %call = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7127
  %call1 = tail call %union.tree_node* @vn_reference_lookup(%union.tree_node* %lhs, %union.tree_node* %call, i8 zeroext 0, %struct.vn_reference_s** null) #7, !dbg !7128
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7118, metadata !DIExpression()), !dbg !7126
  %tobool = icmp eq %union.tree_node* %call1, null, !dbg !7129
  br i1 %tobool, label %if.end14, label %if.then, !dbg !7131

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7132
  %bf.load = load i64, i64* %0, align 8, !dbg !7132
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7135
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7135
  br i1 %cmp, label %if.then2, label %if.end, !dbg !7136

if.then2:                                         ; preds = %if.then
  %call3 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call1) #7, !dbg !7137
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call3, i64 0, i32 0, !dbg !7137
  %1 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !7137
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7118, metadata !DIExpression()), !dbg !7126
  br label %if.end, !dbg !7138

if.end:                                           ; preds = %if.then2, %if.then
  %result.0 = phi %union.tree_node* [ %1, %if.then2 ], [ %call1, %if.then ], !dbg !7126
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !7118, metadata !DIExpression()), !dbg !7126
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7139
  %bf.load5 = load i64, i64* %2, align 8, !dbg !7139
  %bf.cast72 = and i64 %bf.load5, 65535, !dbg !7141
  %cmp8 = icmp eq i64 %bf.cast72, 141, !dbg !7141
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !7142

if.then9:                                         ; preds = %if.end
  %call10 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %op) #7, !dbg !7143
  %valnum11 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call10, i64 0, i32 0, !dbg !7143
  %3 = load %union.tree_node*, %union.tree_node** %valnum11, align 8, !dbg !7143
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7115, metadata !DIExpression()), !dbg !7126
  br label %if.end12, !dbg !7144

if.end12:                                         ; preds = %if.then9, %if.end
  %op.addr.0 = phi %union.tree_node* [ %3, %if.then9 ], [ %op, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0, metadata !7115, metadata !DIExpression()), !dbg !7126
  %call13 = tail call zeroext i8 @expressions_equal_p(%union.tree_node* %result.0, %union.tree_node* %op.addr.0) #7, !dbg !7145
  call void @llvm.dbg.value(metadata i8 %call13, metadata !7119, metadata !DIExpression()), !dbg !7126
  %phitmp = icmp ne i8 %call13, 0, !dbg !7146
  br label %if.end14, !dbg !7146

if.end14:                                         ; preds = %entry, %if.end12
  %result.1 = phi %union.tree_node* [ %result.0, %if.end12 ], [ null, %entry ], !dbg !7126
  %op.addr.1 = phi %union.tree_node* [ %op.addr.0, %if.end12 ], [ %op, %entry ]
  %resultsame.0 = phi i1 [ %phitmp, %if.end12 ], [ false, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.1, metadata !7115, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1, metadata !7118, metadata !DIExpression()), !dbg !7126
  %tobool15 = icmp ne %union.tree_node* %result.1, null, !dbg !7147
  %or.cond = and i1 %tobool15, %resultsame.0, !dbg !7148
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7149
  %tobool46 = icmp ne %struct._IO_FILE* %4, null, !dbg !7149
  br i1 %or.cond, label %if.else, label %if.then17, !dbg !7148

if.then17:                                        ; preds = %if.end14
  br i1 %tobool46, label %land.lhs.true, label %if.end25, !dbg !7150

land.lhs.true:                                    ; preds = %if.then17
  %5 = load i32, i32* @dump_flags, align 4, !dbg !7152
  %and = and i32 %5, 8, !dbg !7153
  %tobool19 = icmp eq i32 %and, 0, !dbg !7153
  br i1 %tobool19, label %if.end25, label %if.then20, !dbg !7154

if.then20:                                        ; preds = %land.lhs.true
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !7155
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7157
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !7158
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7159
  tail call void @print_generic_expr(%struct._IO_FILE* %7, %union.tree_node* %lhs, i32 0) #6, !dbg !7160
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7161
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !7162
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7163
  tail call void @print_generic_expr(%struct._IO_FILE* %9, %union.tree_node* %op.addr.1, i32 0) #6, !dbg !7164
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7165
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7166
  br label %if.end25, !dbg !7167

if.end25:                                         ; preds = %land.lhs.true, %if.then20, %if.then17
  %call26 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !7168
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !7120, metadata !DIExpression()), !dbg !7170
  %tobool27 = icmp eq %union.tree_node* %call26, null, !dbg !7171
  br i1 %tobool27, label %if.end35, label %if.then28, !dbg !7172

if.then28:                                        ; preds = %if.end25
  %call29 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call26) #7, !dbg !7173
  %use_processed = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call29, i64 0, i32 5, !dbg !7175
  %bf.load30 = load i8, i8* %use_processed, align 4, !dbg !7176
  %bf.set = or i8 %bf.load30, 8, !dbg !7176
  store i8 %bf.set, i8* %use_processed, align 4, !dbg !7176
  %call32 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* nonnull %call26, %union.tree_node* nonnull %call26) #7, !dbg !7177
  call void @llvm.dbg.value(metadata i8 %call32, metadata !7117, metadata !DIExpression()), !dbg !7126
  br label %if.end35, !dbg !7178

if.end35:                                         ; preds = %if.end25, %if.then28
  %changed.0 = phi i8 [ %call32, %if.then28 ], [ 0, %if.end25 ], !dbg !7126
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7117, metadata !DIExpression()), !dbg !7126
  %call36 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %op.addr.1) #6, !dbg !7179
  %tobool38 = icmp eq i8 %call36, 0, !dbg !7179
  br i1 %tobool38, label %lor.lhs.false39, label %if.then43, !dbg !7181

lor.lhs.false39:                                  ; preds = %if.end35
  %call40 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %op.addr.1) #6, !dbg !7182
  %tobool42 = icmp eq i8 %call40, 0, !dbg !7182
  br i1 %tobool42, label %if.end67, label %if.then43, !dbg !7183

if.then43:                                        ; preds = %lor.lhs.false39, %if.end35
  %call44 = tail call %struct.vn_reference_s* @vn_reference_insert(%union.tree_node* %lhs, %union.tree_node* %op.addr.1, %union.tree_node* %call26) #7, !dbg !7184
  br label %if.end67, !dbg !7184

if.else:                                          ; preds = %if.end14
  br i1 %tobool46, label %land.lhs.true47, label %if.end52, !dbg !7185

land.lhs.true47:                                  ; preds = %if.else
  %11 = load i32, i32* @dump_flags, align 4, !dbg !7187
  %and48 = and i32 %11, 8, !dbg !7188
  %tobool49 = icmp eq i32 %and48, 0, !dbg !7188
  br i1 %tobool49, label %if.end52, label %if.then50, !dbg !7189

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !7190
  br label %if.end52, !dbg !7190

if.end52:                                         ; preds = %land.lhs.true47, %if.then50, %if.else
  %call53 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !7191
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !7123, metadata !DIExpression()), !dbg !7192
  %call54 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7193
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !7125, metadata !DIExpression()), !dbg !7192
  %call55 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call53) #7, !dbg !7194
  %use_processed56 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call55, i64 0, i32 5, !dbg !7195
  %bf.load57 = load i8, i8* %use_processed56, align 4, !dbg !7196
  %bf.set59 = or i8 %bf.load57, 8, !dbg !7196
  store i8 %bf.set59, i8* %use_processed56, align 4, !dbg !7196
  %call60 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call54) #7, !dbg !7197
  %valnum61 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call60, i64 0, i32 0, !dbg !7197
  %12 = load %union.tree_node*, %union.tree_node** %valnum61, align 8, !dbg !7197
  %call62 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %call53, %union.tree_node* %12) #7, !dbg !7198
  call void @llvm.dbg.value(metadata i8 %call62, metadata !7117, metadata !DIExpression()), !dbg !7126
  br label %if.end67

if.end67:                                         ; preds = %lor.lhs.false39, %if.then43, %if.end52
  %changed.1 = phi i8 [ %call62, %if.end52 ], [ %changed.0, %if.then43 ], [ %changed.0, %lor.lhs.false39 ], !dbg !7149
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !7117, metadata !DIExpression()), !dbg !7126
  ret i8 %changed.1, !dbg !7199
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_unary_op(%union.tree_node* %lhs, %union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7200 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7204, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7205, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8 0, metadata !7206, metadata !DIExpression()), !dbg !7208
  %call = tail call %union.tree_node* @vn_nary_op_lookup_stmt(%union.gimple_statement_d* %stmt, %struct.vn_nary_op_s** null) #7, !dbg !7209
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7207, metadata !DIExpression()), !dbg !7208
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7210
  br i1 %tobool, label %if.else, label %if.then, !dbg !7212

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* nonnull %call) #7, !dbg !7213
  call void @llvm.dbg.value(metadata i8 %call1, metadata !7206, metadata !DIExpression()), !dbg !7208
  br label %if.end, !dbg !7215

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* %lhs) #7, !dbg !7216
  call void @llvm.dbg.value(metadata i8 %call2, metadata !7206, metadata !DIExpression()), !dbg !7208
  %call3 = tail call %struct.vn_nary_op_s* @vn_nary_op_insert_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %lhs) #7, !dbg !7218
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %changed.0 = phi i8 [ %call1, %if.then ], [ %call2, %if.else ], !dbg !7219
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7206, metadata !DIExpression()), !dbg !7208
  ret i8 %changed.0, !dbg !7220
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_binary_op(%union.tree_node* %lhs, %union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7221 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7223, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7224, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i8 0, metadata !7225, metadata !DIExpression()), !dbg !7227
  %call = tail call %union.tree_node* @vn_nary_op_lookup_stmt(%union.gimple_statement_d* %stmt, %struct.vn_nary_op_s** null) #7, !dbg !7228
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7226, metadata !DIExpression()), !dbg !7227
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7229
  br i1 %tobool, label %if.else, label %if.then, !dbg !7231

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* nonnull %call) #7, !dbg !7232
  call void @llvm.dbg.value(metadata i8 %call1, metadata !7225, metadata !DIExpression()), !dbg !7227
  br label %if.end, !dbg !7234

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* %lhs) #7, !dbg !7235
  call void @llvm.dbg.value(metadata i8 %call2, metadata !7225, metadata !DIExpression()), !dbg !7227
  %call3 = tail call %struct.vn_nary_op_s* @vn_nary_op_insert_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %lhs) #7, !dbg !7237
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %changed.0 = phi i8 [ %call1, %if.then ], [ %call2, %if.else ], !dbg !7238
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7225, metadata !DIExpression()), !dbg !7227
  ret i8 %changed.0, !dbg !7239
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_reference_op_load(%union.tree_node* %lhs, %union.tree_node* %op, %union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7240 {
entry:
  %last_vuse = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7242, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !7243, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7244, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8 0, metadata !7245, metadata !DIExpression()), !dbg !7254
  %0 = bitcast %union.tree_node** %last_vuse to i8*, !dbg !7255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7255
  %call = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7256
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7246, metadata !DIExpression()), !dbg !7254
  store %union.tree_node* %call, %union.tree_node** %last_vuse, align 8, !dbg !7257
  store %union.tree_node** %last_vuse, %union.tree_node*** @last_vuse_ptr, align 8, !dbg !7258
  %call1 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7259
  %call2 = call %union.tree_node* @vn_reference_lookup(%union.tree_node* %op, %union.tree_node* %call1, i8 zeroext 1, %struct.vn_reference_s** null) #7, !dbg !7260
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7247, metadata !DIExpression()), !dbg !7254
  store %union.tree_node** null, %union.tree_node*** @last_vuse_ptr, align 8, !dbg !7261
  %tobool = icmp eq %union.tree_node* %call2, null, !dbg !7262
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7264

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7265
  %bf.load = load i64, i64* %1, align 8, !dbg !7265
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7266
  %cmp = icmp eq i64 %bf.cast1, 118, !dbg !7266
  br i1 %cmp, label %if.then, label %if.end, !dbg !7267

if.then:                                          ; preds = %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7268
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7268
  %call3 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7269
  %call4 = call %union.tree_node* @vn_reference_lookup(%union.tree_node* %2, %union.tree_node* %call3, i8 zeroext 1, %struct.vn_reference_s** null) #7, !dbg !7270
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7247, metadata !DIExpression()), !dbg !7254
  br label %if.end, !dbg !7271

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %result.0 = phi %union.tree_node* [ %call2, %entry ], [ %call4, %if.then ], [ null, %land.lhs.true ], !dbg !7254
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !7247, metadata !DIExpression()), !dbg !7254
  %tobool5 = icmp eq %union.tree_node* %result.0, null, !dbg !7272
  br i1 %tobool5, label %if.end119, label %land.lhs.true6, !dbg !7273

land.lhs.true6:                                   ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7274
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7274
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7275
  %4 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !7275
  %call9 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %3, %union.tree_node* %4) #6, !dbg !7276
  %tobool10 = icmp eq i8 %call9, 0, !dbg !7276
  br i1 %tobool10, label %if.then11, label %if.end119, !dbg !7277

if.then11:                                        ; preds = %land.lhs.true6
  %5 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !7278
  %call14 = call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 118, %union.tree_node* %5, %union.tree_node* nonnull %result.0) #6, !dbg !7278
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !7248, metadata !DIExpression()), !dbg !7279
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7280
  %bf.load16 = load i64, i64* %6, align 8, !dbg !7280
  %bf.cast183 = and i64 %bf.load16, 65535, !dbg !7280
  %cmp19 = icmp eq i64 %bf.cast183, 116, !dbg !7280
  br i1 %cmp19, label %land.lhs.true31, label %lor.lhs.false, !dbg !7280

lor.lhs.false:                                    ; preds = %if.then11
  %cmp24 = icmp eq i64 %bf.cast183, 113, !dbg !7280
  br i1 %cmp24, label %land.lhs.true31, label %lor.lhs.false25, !dbg !7281

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %cmp30 = icmp eq i64 %bf.cast183, 118, !dbg !7282
  br i1 %cmp30, label %land.lhs.true31, label %if.end74, !dbg !7283

land.lhs.true31:                                  ; preds = %lor.lhs.false25, %lor.lhs.false, %if.then11
  %operands33 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7284
  %7 = bitcast %union.tree_node** %operands33 to i64**, !dbg !7284
  %8 = load i64*, i64** %7, align 8, !dbg !7284
  %bf.load36 = load i64, i64* %8, align 8, !dbg !7284
  %bf.cast387 = and i64 %bf.load36, 65535, !dbg !7285
  %cmp39 = icmp eq i64 %bf.cast387, 141, !dbg !7285
  br i1 %cmp39, label %if.then40, label %if.end74, !dbg !7286

if.then40:                                        ; preds = %land.lhs.true31
  %9 = bitcast i64* %8 to %union.tree_node*, !dbg !7286
  %call44 = call %union.tree_node* @vn_get_expr_for(%union.tree_node* %9) #7, !dbg !7287
  %call45 = call fastcc %union.tree_node* @valueize_expr(%union.tree_node* %call44) #7, !dbg !7288
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !7251, metadata !DIExpression()), !dbg !7289
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7290
  %bf.load47 = load i64, i64* %10, align 8, !dbg !7290
  %bf.cast498 = and i64 %bf.load47, 65535, !dbg !7290
  %cmp50 = icmp eq i64 %bf.cast498, 116, !dbg !7290
  br i1 %cmp50, label %land.lhs.true63, label %lor.lhs.false51, !dbg !7290

lor.lhs.false51:                                  ; preds = %if.then40
  %cmp56 = icmp eq i64 %bf.cast498, 113, !dbg !7290
  br i1 %cmp56, label %land.lhs.true63, label %lor.lhs.false57, !dbg !7292

lor.lhs.false57:                                  ; preds = %lor.lhs.false51
  %cmp62 = icmp eq i64 %bf.cast498, 118, !dbg !7293
  br i1 %cmp62, label %land.lhs.true63, label %if.end74, !dbg !7294

land.lhs.true63:                                  ; preds = %lor.lhs.false57, %lor.lhs.false51, %if.then40
  %bf.load65 = load i64, i64* %6, align 8, !dbg !7295
  %11 = trunc i64 %bf.load65 to i32, !dbg !7295
  %bf.cast67 = and i32 %11, 65535, !dbg !7295
  %type69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7295
  %12 = load %union.tree_node*, %union.tree_node** %type69, align 8, !dbg !7295
  %call70 = call %union.tree_node* @fold_unary_ignore_overflow_loc(i32 0, i32 %bf.cast67, %union.tree_node* %12, %union.tree_node* %call45) #6, !dbg !7295
  call void @llvm.dbg.value(metadata %union.tree_node* %call70, metadata !7251, metadata !DIExpression()), !dbg !7289
  %tobool71 = icmp eq %union.tree_node* %call70, null, !dbg !7296
  %spec.select = select i1 %tobool71, %union.tree_node* %call14, %union.tree_node* %call70, !dbg !7297
  br label %if.end74, !dbg !7297

if.end74:                                         ; preds = %land.lhs.true63, %lor.lhs.false57, %land.lhs.true31, %lor.lhs.false25
  %val.1 = phi %union.tree_node* [ %call14, %land.lhs.true31 ], [ %call14, %lor.lhs.false25 ], [ %call14, %lor.lhs.false57 ], [ %spec.select, %land.lhs.true63 ], !dbg !7279
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !7248, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !7247, metadata !DIExpression()), !dbg !7254
  %call75 = call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %val.1) #6, !dbg !7298
  %tobool76 = icmp eq i8 %call75, 0, !dbg !7298
  br i1 %tobool76, label %land.lhs.true77, label %if.end85, !dbg !7300

land.lhs.true77:                                  ; preds = %if.end74
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7301
  %bf.load79 = load i64, i64* %13, align 8, !dbg !7301
  %bf.cast816 = and i64 %bf.load79, 65535, !dbg !7302
  %cmp82 = icmp eq i64 %bf.cast816, 141, !dbg !7302
  br i1 %cmp82, label %if.end85, label %if.then83, !dbg !7303

if.then83:                                        ; preds = %land.lhs.true77
  %call84 = call %union.tree_node* @vn_nary_op_lookup(%union.tree_node* %val.1, %struct.vn_nary_op_s** null) #7, !dbg !7304
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !7247, metadata !DIExpression()), !dbg !7254
  br label %if.end85, !dbg !7305

if.end85:                                         ; preds = %land.lhs.true77, %if.end74, %if.then83
  %result.1 = phi %union.tree_node* [ %val.1, %if.end74 ], [ %call84, %if.then83 ], [ %val.1, %land.lhs.true77 ], !dbg !7279
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1, metadata !7247, metadata !DIExpression()), !dbg !7254
  %tobool86 = icmp eq %union.tree_node* %result.1, null, !dbg !7306
  br i1 %tobool86, label %land.lhs.true87, label %if.end119, !dbg !7308

land.lhs.true87:                                  ; preds = %if.end85
  %14 = load i8, i8* @may_insert, align 1, !dbg !7309
  %tobool88 = icmp eq i8 %14, 0, !dbg !7309
  br i1 %tobool88, label %if.end119, label %if.then89, !dbg !7310

if.then89:                                        ; preds = %land.lhs.true87
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7311
  %15 = bitcast i32* %var to %union.tree_node**, !dbg !7311
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !7311
  %call90 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %16, %union.gimple_statement_d* null) #7, !dbg !7313
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !7247, metadata !DIExpression()), !dbg !7254
  %call91 = call %struct.vn_ssa_aux* @VN_INFO_GET(%union.tree_node* %call90) #7, !dbg !7314
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call91, i64 0, i32 0, !dbg !7315
  store %union.tree_node* %call90, %union.tree_node** %valnum, align 8, !dbg !7316
  %call92 = call i32 @get_next_value_id() #7, !dbg !7317
  %call93 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call90) #7, !dbg !7318
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call93, i64 0, i32 2, !dbg !7319
  store i32 %call92, i32* %value_id, align 8, !dbg !7320
  %call94 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call90) #7, !dbg !7321
  %expr = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call94, i64 0, i32 1, !dbg !7322
  store %union.tree_node* %val.1, %union.tree_node** %expr, align 8, !dbg !7323
  %call95 = call fastcc zeroext i8 @expr_has_constants(%union.tree_node* %val.1) #7, !dbg !7324
  %call97 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call90) #7, !dbg !7325
  %has_constants = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call97, i64 0, i32 5, !dbg !7326
  %bf.load98 = load i8, i8* %has_constants, align 4, !dbg !7327
  %bf.value = shl i8 %call95, 2, !dbg !7327
  %bf.shl = and i8 %bf.value, 4, !dbg !7327
  %bf.clear99 = and i8 %bf.load98, -5, !dbg !7327
  %bf.set = or i8 %bf.clear99, %bf.shl, !dbg !7327
  store i8 %bf.set, i8* %has_constants, align 4, !dbg !7327
  %call100 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call90) #7, !dbg !7328
  %needs_insertion = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call100, i64 0, i32 5, !dbg !7329
  %bf.load101 = load i8, i8* %needs_insertion, align 4, !dbg !7330
  %bf.set103 = or i8 %bf.load101, 16, !dbg !7330
  store i8 %bf.set103, i8* %needs_insertion, align 4, !dbg !7330
  %17 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !7331
  %18 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !7333
  %cmp104 = icmp eq %struct.vn_tables_s* %17, %18, !dbg !7334
  br i1 %cmp104, label %if.then106, label %if.else, !dbg !7335

if.then106:                                       ; preds = %if.then89
  %19 = load i64, i64* bitcast (%struct.vn_tables_s** @valid_info to i64*), align 8, !dbg !7336
  store i64 %19, i64* bitcast (%struct.vn_tables_s** @current_info to i64*), align 8, !dbg !7338
  %call107 = call %struct.vn_nary_op_s* @vn_nary_op_insert(%union.tree_node* %val.1, %union.tree_node* %call90) #7, !dbg !7339
  %20 = load i64, i64* bitcast (%struct.vn_tables_s** @optimistic_info to i64*), align 8, !dbg !7340
  store i64 %20, i64* bitcast (%struct.vn_tables_s** @current_info to i64*), align 8, !dbg !7341
  br label %if.end109, !dbg !7342

if.else:                                          ; preds = %if.then89
  %call108 = call %struct.vn_nary_op_s* @vn_nary_op_insert(%union.tree_node* %val.1, %union.tree_node* %call90) #7, !dbg !7343
  br label %if.end109

if.end109:                                        ; preds = %if.else, %if.then106
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7344
  %tobool110 = icmp eq %struct._IO_FILE* %21, null, !dbg !7344
  br i1 %tobool110, label %if.end119, label %land.lhs.true111, !dbg !7346

land.lhs.true111:                                 ; preds = %if.end109
  %22 = load i32, i32* @dump_flags, align 4, !dbg !7347
  %and = and i32 %22, 8, !dbg !7348
  %tobool112 = icmp eq i32 %and, 0, !dbg !7348
  br i1 %tobool112, label %if.end119, label %if.then113, !dbg !7349

if.then113:                                       ; preds = %land.lhs.true111
  %call114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !7350
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7352
  call void @print_generic_expr(%struct._IO_FILE* %23, %union.tree_node* %call90, i32 0) #6, !dbg !7353
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7354
  %call115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !7355
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7356
  call void @print_generic_expr(%struct._IO_FILE* %25, %union.tree_node* %val.1, i32 0) #6, !dbg !7357
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7358
  %call116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7359
  br label %if.end119, !dbg !7360

if.end119:                                        ; preds = %land.lhs.true111, %if.end109, %land.lhs.true87, %if.end85, %land.lhs.true6, %if.end, %if.then113
  %result.3 = phi %union.tree_node* [ %result.0, %land.lhs.true6 ], [ null, %if.end ], [ %result.1, %if.end85 ], [ null, %land.lhs.true87 ], [ %call90, %if.then113 ], [ %call90, %land.lhs.true111 ], [ %call90, %if.end109 ], !dbg !7254
  call void @llvm.dbg.value(metadata %union.tree_node* %result.3, metadata !7247, metadata !DIExpression()), !dbg !7254
  %tobool120 = icmp eq %union.tree_node* %result.3, null, !dbg !7361
  br i1 %tobool120, label %if.else147, label %if.then121, !dbg !7363

if.then121:                                       ; preds = %if.end119
  %call122 = call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* nonnull %result.3) #7, !dbg !7364
  call void @llvm.dbg.value(metadata i8 %call122, metadata !7245, metadata !DIExpression()), !dbg !7254
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7366
  %bf.load124 = load i64, i64* %27, align 8, !dbg !7366
  %bf.cast1262 = and i64 %bf.load124, 65535, !dbg !7368
  %cmp127 = icmp eq i64 %bf.cast1262, 141, !dbg !7368
  br i1 %cmp127, label %land.lhs.true129, label %if.end150, !dbg !7369

land.lhs.true129:                                 ; preds = %if.then121
  %call130 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %result.3) #7, !dbg !7370
  %has_constants131 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call130, i64 0, i32 5, !dbg !7371
  %bf.load132 = load i8, i8* %has_constants131, align 4, !dbg !7371
  %bf.clear133 = and i8 %bf.load132, 4, !dbg !7371
  %tobool135 = icmp eq i8 %bf.clear133, 0, !dbg !7370
  br i1 %tobool135, label %if.end150, label %if.then136, !dbg !7372

if.then136:                                       ; preds = %land.lhs.true129
  %call137 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %result.3) #7, !dbg !7373
  %expr138 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call137, i64 0, i32 1, !dbg !7375
  %28 = bitcast %union.tree_node** %expr138 to i64*, !dbg !7375
  %29 = load i64, i64* %28, align 8, !dbg !7375
  %call139 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %lhs) #7, !dbg !7376
  %expr140 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call139, i64 0, i32 1, !dbg !7377
  %30 = bitcast %union.tree_node** %expr140 to i64*, !dbg !7378
  store i64 %29, i64* %30, align 8, !dbg !7378
  %call141 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %lhs) #7, !dbg !7379
  %has_constants142 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call141, i64 0, i32 5, !dbg !7380
  %bf.load143 = load i8, i8* %has_constants142, align 4, !dbg !7381
  %bf.set145 = or i8 %bf.load143, 4, !dbg !7381
  store i8 %bf.set145, i8* %has_constants142, align 4, !dbg !7381
  br label %if.end150, !dbg !7382

if.else147:                                       ; preds = %if.end119
  %call148 = call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* %lhs) #7, !dbg !7383
  call void @llvm.dbg.value(metadata i8 %call148, metadata !7245, metadata !DIExpression()), !dbg !7254
  %31 = load %union.tree_node*, %union.tree_node** %last_vuse, align 8, !dbg !7385
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !7246, metadata !DIExpression()), !dbg !7254
  %call149 = call %struct.vn_reference_s* @vn_reference_insert(%union.tree_node* %op, %union.tree_node* %lhs, %union.tree_node* %31) #7, !dbg !7386
  br label %if.end150

if.end150:                                        ; preds = %land.lhs.true129, %if.then121, %if.then136, %if.else147
  %changed.0 = phi i8 [ %call148, %if.else147 ], [ %call122, %if.then136 ], [ %call122, %land.lhs.true129 ], [ %call122, %if.then121 ], !dbg !7387
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7245, metadata !DIExpression()), !dbg !7254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7388
  ret i8 %changed.0, !dbg !7389
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7390 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7392, metadata !DIExpression()), !dbg !7393
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7394
  ret %union.tree_node* %call, !dbg !7395
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @visit_reference_op_call(%union.tree_node* %lhs, %union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7396 {
entry:
  %vr1 = alloca %struct.vn_reference_s, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7398, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7399, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i8 0, metadata !7400, metadata !DIExpression()), !dbg !7408
  %0 = bitcast %struct.vn_reference_s* %vr1 to i8*, !dbg !7409
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #8, !dbg !7409
  %call = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7410
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7403, metadata !DIExpression()), !dbg !7408
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7411
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7411

cond.true:                                        ; preds = %entry
  %call1 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call) #7, !dbg !7412
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call1, i64 0, i32 0, !dbg !7412
  %1 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !7412
  br label %cond.end, !dbg !7411

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ null, %entry ], !dbg !7411
  %vuse2 = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 2, !dbg !7413
  store %union.tree_node* %cond, %union.tree_node** %vuse2, align 8, !dbg !7414
  %call3 = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_shared_reference_ops_from_call(%union.gimple_statement_d* %stmt) #7, !dbg !7415
  %operands = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 5, !dbg !7416
  store %struct.VEC_vn_reference_op_s_heap* %call3, %struct.VEC_vn_reference_op_s_heap** %operands, align 8, !dbg !7417
  %call4 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !7418
  %type = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 4, !dbg !7419
  store %union.tree_node* %call4, %union.tree_node** %type, align 8, !dbg !7420
  %set = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 3, !dbg !7421
  store i32 0, i32* %set, align 8, !dbg !7422
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr1, metadata !7401, metadata !DIExpression(DW_OP_deref)), !dbg !7408
  %call5 = call i32 @vn_reference_compute_hash(%struct.vn_reference_s* nonnull %vr1) #7, !dbg !7423
  %hashcode = getelementptr inbounds %struct.vn_reference_s, %struct.vn_reference_s* %vr1, i64 0, i32 1, !dbg !7424
  store i32 %call5, i32* %hashcode, align 4, !dbg !7425
  call void @llvm.dbg.value(metadata %struct.vn_reference_s* %vr1, metadata !7401, metadata !DIExpression(DW_OP_deref)), !dbg !7408
  %call6 = call fastcc %union.tree_node* @vn_reference_lookup_1(%struct.vn_reference_s* nonnull %vr1, %struct.vn_reference_s** null) #7, !dbg !7426
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !7402, metadata !DIExpression()), !dbg !7408
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !7427
  br i1 %tobool7, label %if.else, label %if.then, !dbg !7428

if.then:                                          ; preds = %cond.end
  %call8 = call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* nonnull %call6) #7, !dbg !7429
  call void @llvm.dbg.value(metadata i8 %call8, metadata !7400, metadata !DIExpression()), !dbg !7408
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7431
  %bf.load = load i64, i64* %2, align 8, !dbg !7431
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7433
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7433
  br i1 %cmp, label %land.lhs.true, label %if.end38, !dbg !7434

land.lhs.true:                                    ; preds = %if.then
  %call9 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* nonnull %call6) #7, !dbg !7435
  %has_constants = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call9, i64 0, i32 5, !dbg !7436
  %bf.load10 = load i8, i8* %has_constants, align 4, !dbg !7436
  %bf.clear11 = and i8 %bf.load10, 4, !dbg !7436
  %tobool13 = icmp eq i8 %bf.clear11, 0, !dbg !7435
  br i1 %tobool13, label %if.end38, label %if.then14, !dbg !7437

if.then14:                                        ; preds = %land.lhs.true
  %call15 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %lhs) #7, !dbg !7438
  %has_constants16 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call15, i64 0, i32 5, !dbg !7439
  %bf.load17 = load i8, i8* %has_constants16, align 4, !dbg !7440
  %bf.set = or i8 %bf.load17, 4, !dbg !7440
  store i8 %bf.set, i8* %has_constants16, align 4, !dbg !7440
  br label %if.end38, !dbg !7438

if.else:                                          ; preds = %cond.end
  %call19 = call fastcc zeroext i8 @set_ssa_val_to(%union.tree_node* %lhs, %union.tree_node* %lhs) #7, !dbg !7441
  call void @llvm.dbg.value(metadata i8 %call19, metadata !7400, metadata !DIExpression()), !dbg !7408
  %3 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !7442
  %references_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %3, i64 0, i32 5, !dbg !7443
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %references_pool, align 8, !dbg !7443
  %call20 = call i8* @pool_alloc(%struct.alloc_pool_def* %4) #6, !dbg !7444
  call void @llvm.dbg.value(metadata i8* %call20, metadata !7407, metadata !DIExpression()), !dbg !7445
  %5 = bitcast %union.tree_node** %vuse2 to i64*, !dbg !7446
  %6 = load i64, i64* %5, align 8, !dbg !7446
  %vuse22 = getelementptr inbounds i8, i8* %call20, i64 8, !dbg !7447
  %7 = bitcast i8* %vuse22 to i64*, !dbg !7448
  store i64 %6, i64* %7, align 8, !dbg !7448
  %call23 = call fastcc %struct.VEC_vn_reference_op_s_heap* @create_reference_ops_from_call(%union.gimple_statement_d* %stmt) #7, !dbg !7449
  %call24 = call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_refs(%struct.VEC_vn_reference_op_s_heap* %call23) #7, !dbg !7450
  %operands25 = getelementptr inbounds i8, i8* %call20, i64 32, !dbg !7451
  %8 = bitcast i8* %operands25 to %struct.VEC_vn_reference_op_s_heap**, !dbg !7451
  store %struct.VEC_vn_reference_op_s_heap* %call24, %struct.VEC_vn_reference_op_s_heap** %8, align 8, !dbg !7452
  %9 = bitcast %union.tree_node** %type to i64*, !dbg !7453
  %10 = load i64, i64* %9, align 8, !dbg !7453
  %type27 = getelementptr inbounds i8, i8* %call20, i64 24, !dbg !7454
  %11 = bitcast i8* %type27 to i64*, !dbg !7455
  store i64 %10, i64* %11, align 8, !dbg !7455
  %12 = load i32, i32* %set, align 8, !dbg !7456
  %set29 = getelementptr inbounds i8, i8* %call20, i64 16, !dbg !7457
  %13 = bitcast i8* %set29 to i32*, !dbg !7457
  store i32 %12, i32* %13, align 8, !dbg !7458
  %14 = load i32, i32* %hashcode, align 4, !dbg !7459
  %hashcode31 = getelementptr inbounds i8, i8* %call20, i64 4, !dbg !7460
  %15 = bitcast i8* %hashcode31 to i32*, !dbg !7460
  store i32 %14, i32* %15, align 4, !dbg !7461
  %result32 = getelementptr inbounds i8, i8* %call20, i64 40, !dbg !7462
  %16 = bitcast i8* %result32 to %union.tree_node**, !dbg !7462
  store %union.tree_node* %lhs, %union.tree_node** %16, align 8, !dbg !7463
  %17 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !7464
  %references = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %17, i64 0, i32 2, !dbg !7465
  %18 = load %struct.htab*, %struct.htab** %references, align 8, !dbg !7465
  %call34 = call i8** @htab_find_slot_with_hash(%struct.htab* %18, i8* %call20, i32 %14, i32 1) #6, !dbg !7466
  call void @llvm.dbg.value(metadata i8** %call34, metadata !7404, metadata !DIExpression()), !dbg !7445
  %19 = load i8*, i8** %call34, align 8, !dbg !7467
  %tobool35 = icmp eq i8* %19, null, !dbg !7467
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !7469

if.then36:                                        ; preds = %if.else
  call void @free_reference(i8* nonnull %19) #7, !dbg !7470
  br label %if.end37, !dbg !7470

if.end37:                                         ; preds = %if.else, %if.then36
  store i8* %call20, i8** %call34, align 8, !dbg !7471
  br label %if.end38

if.end38:                                         ; preds = %land.lhs.true, %if.then, %if.then14, %if.end37
  %changed.0 = phi i8 [ %call19, %if.end37 ], [ %call8, %if.then14 ], [ %call8, %land.lhs.true ], [ %call8, %if.then ], !dbg !7472
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7400, metadata !DIExpression()), !dbg !7408
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #8, !dbg !7473
  ret i8 %changed.0, !dbg !7474
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !7475 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !7479, metadata !DIExpression()), !dbg !7480
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !7481
  ret %union.tree_node* %0, !dbg !7482
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7483 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7485, metadata !DIExpression()), !dbg !7486
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !7487
  ret %union.tree_node** %result, !dbg !7488
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !7489 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7493, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i32 %i, metadata !7494, metadata !DIExpression()), !dbg !7495
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !7496
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !7497
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !7498
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @vn_phi_lookup(%union.gimple_statement_d* %phi) unnamed_addr #4 !dbg !7499 {
entry:
  %vp1 = alloca %struct.vn_phi_s, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !7501, metadata !DIExpression()), !dbg !7509
  %0 = bitcast %struct.vn_phi_s* %vp1 to i8*, !dbg !7510
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7510
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @shared_lookup_phiargs, align 8, !dbg !7511
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !7511
  tail call fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %base, i32 0) #7, !dbg !7511
  call void @llvm.dbg.value(metadata i32 0, metadata !7504, metadata !DIExpression()), !dbg !7509
  br label %for.cond, !dbg !7512

for.cond:                                         ; preds = %cond.end8, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end8 ], !dbg !7513
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7504, metadata !DIExpression()), !dbg !7509
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !7514
  %cmp = icmp ult i32 %i.0, %call, !dbg !7515
  br i1 %cmp, label %for.body, label %for.end, !dbg !7516

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi, i32 %i.0) #7, !dbg !7517
  %call2 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call1) #7, !dbg !7517
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7505, metadata !DIExpression()), !dbg !7518
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7519
  %bf.load = load i64, i64* %2, align 8, !dbg !7519
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7520
  %cmp4 = icmp eq i64 %bf.cast1, 141, !dbg !7520
  br i1 %cmp4, label %cond.true5, label %cond.end8, !dbg !7519

cond.true5:                                       ; preds = %for.body
  %call6 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call2) #7, !dbg !7521
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call6, i64 0, i32 0, !dbg !7521
  %3 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !7521
  br label %cond.end8, !dbg !7519

cond.end8:                                        ; preds = %for.body, %cond.true5
  %cond9 = phi %union.tree_node* [ %3, %cond.true5 ], [ %call2, %for.body ], !dbg !7519
  call void @llvm.dbg.value(metadata %union.tree_node* %cond9, metadata !7505, metadata !DIExpression()), !dbg !7518
  %call10 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @shared_lookup_phiargs, %union.tree_node* %cond9) #7, !dbg !7522
  %inc = add i32 %i.0, 1, !dbg !7523
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7504, metadata !DIExpression()), !dbg !7509
  br label %for.cond, !dbg !7524, !llvm.loop !7525

for.end:                                          ; preds = %for.cond
  %4 = load i64, i64* bitcast (%struct.VEC_tree_heap** @shared_lookup_phiargs to i64*), align 8, !dbg !7527
  %phiargs = getelementptr inbounds %struct.vn_phi_s, %struct.vn_phi_s* %vp1, i64 0, i32 2, !dbg !7528
  %5 = bitcast %struct.VEC_tree_heap** %phiargs to i64*, !dbg !7529
  store i64 %4, i64* %5, align 8, !dbg !7529
  %call11 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %phi) #7, !dbg !7530
  %block = getelementptr inbounds %struct.vn_phi_s, %struct.vn_phi_s* %vp1, i64 0, i32 3, !dbg !7531
  store %struct.basic_block_def* %call11, %struct.basic_block_def** %block, align 8, !dbg !7532
  call void @llvm.dbg.value(metadata %struct.vn_phi_s* %vp1, metadata !7503, metadata !DIExpression(DW_OP_deref)), !dbg !7509
  %call12 = call fastcc i32 @vn_phi_compute_hash(%struct.vn_phi_s* nonnull %vp1) #7, !dbg !7533
  %hashcode = getelementptr inbounds %struct.vn_phi_s, %struct.vn_phi_s* %vp1, i64 0, i32 1, !dbg !7534
  store i32 %call12, i32* %hashcode, align 4, !dbg !7535
  %6 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !7536
  %phis = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %6, i64 0, i32 1, !dbg !7537
  %7 = load %struct.htab*, %struct.htab** %phis, align 8, !dbg !7537
  %call14 = call i8** @htab_find_slot_with_hash(%struct.htab* %7, i8* nonnull %0, i32 %call12, i32 0) #6, !dbg !7538
  call void @llvm.dbg.value(metadata i8** %call14, metadata !7502, metadata !DIExpression()), !dbg !7509
  %tobool15 = icmp eq i8** %call14, null, !dbg !7539
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !7541

land.lhs.true:                                    ; preds = %for.end
  %8 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !7542
  %9 = load %struct.vn_tables_s*, %struct.vn_tables_s** @optimistic_info, align 8, !dbg !7543
  %cmp16 = icmp eq %struct.vn_tables_s* %8, %9, !dbg !7544
  br i1 %cmp16, label %if.then, label %if.end, !dbg !7545

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.vn_tables_s*, %struct.vn_tables_s** @valid_info, align 8, !dbg !7546
  %phis17 = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %10, i64 0, i32 1, !dbg !7547
  %11 = load %struct.htab*, %struct.htab** %phis17, align 8, !dbg !7547
  %12 = load i32, i32* %hashcode, align 4, !dbg !7548
  %call19 = call i8** @htab_find_slot_with_hash(%struct.htab* %11, i8* nonnull %0, i32 %12, i32 0) #6, !dbg !7549
  call void @llvm.dbg.value(metadata i8** %call19, metadata !7502, metadata !DIExpression()), !dbg !7509
  br label %if.end, !dbg !7550

if.end:                                           ; preds = %for.end, %if.then, %land.lhs.true
  %slot.0 = phi i8** [ %call14, %for.end ], [ %call19, %if.then ], [ null, %land.lhs.true ], !dbg !7509
  call void @llvm.dbg.value(metadata i8** %slot.0, metadata !7502, metadata !DIExpression()), !dbg !7509
  %tobool20 = icmp eq i8** %slot.0, null, !dbg !7551
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !7553

if.end22:                                         ; preds = %if.end
  %13 = bitcast i8** %slot.0 to %struct.vn_phi_s**, !dbg !7554
  %14 = load %struct.vn_phi_s*, %struct.vn_phi_s** %13, align 8, !dbg !7554
  %result = getelementptr inbounds %struct.vn_phi_s, %struct.vn_phi_s* %14, i64 0, i32 4, !dbg !7555
  %15 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !7555
  br label %cleanup, !dbg !7556

cleanup:                                          ; preds = %if.end, %if.end22
  %retval.0 = phi %union.tree_node* [ %15, %if.end22 ], [ null, %if.end ], !dbg !7509
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7557
  ret %union.tree_node* %retval.0, !dbg !7557
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.vn_phi_s* @vn_phi_insert(%union.gimple_statement_d* %phi, %union.tree_node* %result) unnamed_addr #4 !dbg !7558 {
entry:
  %args = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !7562, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !7563, metadata !DIExpression()), !dbg !7572
  %0 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !7573
  %phis_pool = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %0, i64 0, i32 4, !dbg !7574
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %phis_pool, align 8, !dbg !7574
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %1) #6, !dbg !7575
  call void @llvm.dbg.value(metadata %struct.vn_phi_s* %5, metadata !7565, metadata !DIExpression()), !dbg !7572
  %2 = bitcast %struct.VEC_tree_heap** %args to i8*, !dbg !7576
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7576
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !7567, metadata !DIExpression()), !dbg !7572
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %args, align 8, !dbg !7577
  call void @llvm.dbg.value(metadata i32 0, metadata !7566, metadata !DIExpression()), !dbg !7572
  br label %for.cond, !dbg !7578

for.cond:                                         ; preds = %cond.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end ], !dbg !7579
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7566, metadata !DIExpression()), !dbg !7572
  %call1 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !7580
  %cmp = icmp ult i32 %i.0, %call1, !dbg !7581
  br i1 %cmp, label %for.body, label %for.end, !dbg !7582

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi, i32 %i.0) #7, !dbg !7583
  %call3 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call2) #7, !dbg !7583
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7568, metadata !DIExpression()), !dbg !7584
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7585
  %bf.load = load i64, i64* %3, align 8, !dbg !7585
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7586
  %cmp4 = icmp eq i64 %bf.cast1, 141, !dbg !7586
  br i1 %cmp4, label %cond.true, label %cond.end, !dbg !7585

cond.true:                                        ; preds = %for.body
  %call5 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call3) #7, !dbg !7587
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call5, i64 0, i32 0, !dbg !7587
  %4 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !7587
  br label %cond.end, !dbg !7585

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %union.tree_node* [ %4, %cond.true ], [ %call3, %for.body ], !dbg !7585
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !7568, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %args, metadata !7567, metadata !DIExpression(DW_OP_deref)), !dbg !7572
  %call6 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %args, %union.tree_node* %cond) #7, !dbg !7588
  %inc = add i32 %i.0, 1, !dbg !7589
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7566, metadata !DIExpression()), !dbg !7572
  br label %for.cond, !dbg !7590, !llvm.loop !7591

for.end:                                          ; preds = %for.cond
  %5 = bitcast i8* %call to %struct.vn_phi_s*, !dbg !7593
  %call7 = call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %result) #7, !dbg !7594
  %value_id = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call7, i64 0, i32 2, !dbg !7595
  %6 = load i32, i32* %value_id, align 8, !dbg !7595
  %value_id8 = bitcast i8* %call to i32*, !dbg !7596
  store i32 %6, i32* %value_id8, align 8, !dbg !7597
  %7 = bitcast %struct.VEC_tree_heap** %args to i64*, !dbg !7598
  %8 = load i64, i64* %7, align 8, !dbg !7598
  %phiargs = getelementptr inbounds i8, i8* %call, i64 8, !dbg !7599
  %9 = bitcast i8* %phiargs to i64*, !dbg !7600
  store i64 %8, i64* %9, align 8, !dbg !7600
  %call9 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %phi) #7, !dbg !7601
  %block = getelementptr inbounds i8, i8* %call, i64 16, !dbg !7602
  %10 = bitcast i8* %block to %struct.basic_block_def**, !dbg !7602
  store %struct.basic_block_def* %call9, %struct.basic_block_def** %10, align 8, !dbg !7603
  %result10 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !7604
  %11 = bitcast i8* %result10 to %union.tree_node**, !dbg !7604
  store %union.tree_node* %result, %union.tree_node** %11, align 8, !dbg !7605
  %call11 = call fastcc i32 @vn_phi_compute_hash(%struct.vn_phi_s* %5) #7, !dbg !7606
  %hashcode = getelementptr inbounds i8, i8* %call, i64 4, !dbg !7607
  %12 = bitcast i8* %hashcode to i32*, !dbg !7607
  store i32 %call11, i32* %12, align 4, !dbg !7608
  %13 = load %struct.vn_tables_s*, %struct.vn_tables_s** @current_info, align 8, !dbg !7609
  %phis = getelementptr inbounds %struct.vn_tables_s, %struct.vn_tables_s* %13, i64 0, i32 1, !dbg !7610
  %14 = load %struct.htab*, %struct.htab** %phis, align 8, !dbg !7610
  %call13 = call i8** @htab_find_slot_with_hash(%struct.htab* %14, i8* %call, i32 %call11, i32 1) #6, !dbg !7611
  call void @llvm.dbg.value(metadata i8** %call13, metadata !7564, metadata !DIExpression()), !dbg !7572
  store i8* %call, i8** %call13, align 8, !dbg !7612
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7613
  ret %struct.vn_phi_s* %5, !dbg !7614
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7615 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7620, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32 %index, metadata !7621, metadata !DIExpression()), !dbg !7622
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !7623
  %0 = load i32, i32* %capacity, align 8, !dbg !7623
  %cmp = icmp ult i32 %0, %index, !dbg !7623
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7623

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7623
  br label %cond.end, !dbg !7623

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !7624
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !7624
  ret %struct.phi_arg_d* %arrayidx, !dbg !7625
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !7626 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7630, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 0, metadata !7631, metadata !DIExpression()), !dbg !7632
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !7633
  br label %cond.true, !dbg !7633

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7633

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !7633

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !7633

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7634
  store i32 0, i32* %num3, align 8, !dbg !7634
  br label %if.end, !dbg !7634

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !7633
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @vn_phi_compute_hash(%struct.vn_phi_s* %vp1) unnamed_addr #0 !dbg !7636 {
entry:
  %phi1op = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.vn_phi_s* %vp1, metadata !7640, metadata !DIExpression()), !dbg !7645
  %0 = bitcast %union.tree_node** %phi1op to i8*, !dbg !7646
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7646
  %block = getelementptr inbounds %struct.vn_phi_s, %struct.vn_phi_s* %vp1, i64 0, i32 3, !dbg !7647
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %block, align 8, !dbg !7647
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !7648
  %2 = load i32, i32* %index, align 8, !dbg !7648
  call void @llvm.dbg.value(metadata i32 %2, metadata !7641, metadata !DIExpression()), !dbg !7645
  %phiargs = getelementptr inbounds %struct.vn_phi_s, %struct.vn_phi_s* %vp1, i64 0, i32 2, !dbg !7649
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %phiargs, align 8, !dbg !7649
  %tobool = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !7649
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7649

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !7649
  br label %cond.end, !dbg !7649

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7649
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 0) #7, !dbg !7649
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7649
  %4 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !7649
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7644, metadata !DIExpression()), !dbg !7645
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7650
  %bf.load = load i64, i64* %5, align 8, !dbg !7650
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7650
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !7650
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !7650

lor.lhs.false:                                    ; preds = %cond.end
  %cmp8 = icmp eq i64 %bf.cast1, 7, !dbg !7650
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !7650

lor.rhs:                                          ; preds = %lor.lhs.false
  %cmp13 = icmp eq i64 %bf.cast1, 8, !dbg !7650
  %phitmp = zext i1 %cmp13 to i32, !dbg !7650
  br label %lor.end, !dbg !7650

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %cond.end
  %6 = phi i32 [ 1, %lor.lhs.false ], [ 1, %cond.end ], [ %phitmp, %lor.rhs ]
  br i1 %cmp, label %cond.true31, label %lor.lhs.false19, !dbg !7651

lor.lhs.false19:                                  ; preds = %lor.end
  %cmp24 = icmp eq i64 %bf.cast1, 7, !dbg !7651
  br i1 %cmp24, label %cond.true31, label %lor.lhs.false25, !dbg !7651

lor.lhs.false25:                                  ; preds = %lor.lhs.false19
  %cmp30 = icmp eq i64 %bf.cast1, 8, !dbg !7651
  br i1 %cmp30, label %cond.true31, label %cond.end40, !dbg !7651

cond.true31:                                      ; preds = %lor.lhs.false25, %lor.lhs.false19, %lor.end
  %type32 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !7652
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i64 0, i32 6, !dbg !7652
  %bf.load33 = load i32, i32* %precision, align 4, !dbg !7652
  %bf.clear34 = and i32 %bf.load33, 1023, !dbg !7652
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !7653
  %7 = trunc i64 %bf.lshr to i32, !dbg !7653
  %bf.cast38 = and i32 %7, 1, !dbg !7653
  %add = add nuw nsw i32 %bf.clear34, %bf.cast38, !dbg !7654
  br label %cond.end40, !dbg !7651

cond.end40:                                       ; preds = %lor.lhs.false25, %cond.true31
  %cond41 = phi i32 [ %add, %cond.true31 ], [ 0, %lor.lhs.false25 ], !dbg !7651
  %add42 = add nsw i32 %6, %cond41, !dbg !7655
  %add43 = add i32 %2, %add42, !dbg !7656
  call void @llvm.dbg.value(metadata i32 %add43, metadata !7641, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 0, metadata !7642, metadata !DIExpression()), !dbg !7645
  br label %for.cond, !dbg !7657

for.cond:                                         ; preds = %for.inc, %cond.end40
  %result.0 = phi i32 [ %add43, %cond.end40 ], [ %result.1, %for.inc ], !dbg !7656
  %i.0 = phi i32 [ 0, %cond.end40 ], [ %inc, %for.inc ], !dbg !7659
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7642, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !7641, metadata !DIExpression()), !dbg !7645
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %phiargs, align 8, !dbg !7660
  %tobool45 = icmp eq %struct.VEC_tree_heap* %8, null, !dbg !7660
  br i1 %tobool45, label %cond.end50, label %cond.true46, !dbg !7660

cond.true46:                                      ; preds = %for.cond
  %base48 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !7660
  br label %cond.end50, !dbg !7660

cond.end50:                                       ; preds = %for.cond, %cond.true46
  %cond51 = phi %struct.VEC_tree_base* [ %base48, %cond.true46 ], [ null, %for.cond ], !dbg !7660
  call void @llvm.dbg.value(metadata %union.tree_node** %phi1op, metadata !7643, metadata !DIExpression(DW_OP_deref)), !dbg !7645
  %call52 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond51, i32 %i.0, %union.tree_node** nonnull %phi1op) #7, !dbg !7660
  %tobool53 = icmp eq i32 %call52, 0, !dbg !7662
  br i1 %tobool53, label %for.end, label %for.body, !dbg !7662

for.body:                                         ; preds = %cond.end50
  %9 = load %union.tree_node*, %union.tree_node** %phi1op, align 8, !dbg !7663
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7643, metadata !DIExpression()), !dbg !7645
  %10 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !7666
  %cmp54 = icmp eq %union.tree_node* %9, %10, !dbg !7667
  br i1 %cmp54, label %for.inc, label %if.end, !dbg !7668

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7643, metadata !DIExpression()), !dbg !7645
  %call55 = call i32 @iterative_hash_expr(%union.tree_node* %9, i32 %result.0) #6, !dbg !7669
  call void @llvm.dbg.value(metadata i32 %call55, metadata !7641, metadata !DIExpression()), !dbg !7645
  br label %for.inc, !dbg !7670

for.inc:                                          ; preds = %for.body, %if.end
  %result.1 = phi i32 [ %call55, %if.end ], [ %result.0, %for.body ], !dbg !7645
  call void @llvm.dbg.value(metadata i32 %result.1, metadata !7641, metadata !DIExpression()), !dbg !7645
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7671
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7642, metadata !DIExpression()), !dbg !7645
  br label %for.cond, !dbg !7672, !llvm.loop !7673

for.end:                                          ; preds = %cond.end50
  %result.0.lcssa = phi i32 [ %result.0, %cond.end50 ], !dbg !7656
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !7641, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !7641, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !7641, metadata !DIExpression()), !dbg !7645
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7675
  ret i32 %result.0.lcssa, !dbg !7676
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7677 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7681, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7682, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 10, metadata !7683, metadata !DIExpression()), !dbg !7684
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 10) #7, !dbg !7685
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7686
  store i32 3, i32* %iter_type, align 4, !dbg !7687
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7688
  ret %union.tree_node** %call, !dbg !7689
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7690 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7694, metadata !DIExpression()), !dbg !7696
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7697
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !7697
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !7699
  br i1 %tobool, label %if.end, label %if.then, !dbg !7700

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !7701
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !7701
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !7695, metadata !DIExpression()), !dbg !7696
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !7703
  %3 = load i64, i64* %2, align 8, !dbg !7703
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !7704
  store i64 %3, i64* %4, align 8, !dbg !7704
  br label %cleanup, !dbg !7705

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7706
  store i8 1, i8* %done, align 8, !dbg !7707
  br label %cleanup, !dbg !7708

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !7696
  ret %union.tree_node** %retval.0, !dbg !7709
}

declare dso_local %union.tree_node* @get_symbol_constant_value(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @fold_const_aggregate_ref(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @simplify_unary_expression(%union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7710 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7712, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7713, metadata !DIExpression()), !dbg !7720
  %call = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7721
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7715, metadata !DIExpression()), !dbg !7720
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7722
  %cmp = icmp eq i32 %call1, 43, !dbg !7724
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7725

lor.lhs.false:                                    ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7726
  %cmp3 = icmp eq i32 %call2, 44, !dbg !7727
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !7728

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7729
  %cmp6 = icmp eq i32 %call5, 118, !dbg !7730
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7731

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7732
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7732
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7715, metadata !DIExpression()), !dbg !7720
  br label %if.end, !dbg !7733

if.end:                                           ; preds = %if.then, %lor.lhs.false4
  %op0.0 = phi %union.tree_node* [ %0, %if.then ], [ %call, %lor.lhs.false4 ], !dbg !7720
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !7715, metadata !DIExpression()), !dbg !7720
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7734
  %bf.load = load i64, i64* %1, align 8, !dbg !7734
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7736
  %cmp7 = icmp eq i64 %bf.cast1, 141, !dbg !7736
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !7737

if.end9:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !7714, metadata !DIExpression()), !dbg !7720
  %call10 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %op0.0) #7, !dbg !7738
  %has_constants = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call10, i64 0, i32 5, !dbg !7739
  %bf.load11 = load i8, i8* %has_constants, align 4, !dbg !7739
  %bf.clear12 = and i8 %bf.load11, 4, !dbg !7739
  %tobool = icmp eq i8 %bf.clear12, 0, !dbg !7738
  br i1 %tobool, label %if.else, label %if.then14, !dbg !7740

if.then14:                                        ; preds = %if.end9
  %call15 = tail call %union.tree_node* @vn_get_expr_for(%union.tree_node* %op0.0) #7, !dbg !7741
  %call16 = tail call fastcc %union.tree_node* @valueize_expr(%union.tree_node* %call15) #7, !dbg !7742
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !7715, metadata !DIExpression()), !dbg !7720
  br label %if.end71, !dbg !7743

if.else:                                          ; preds = %if.end9
  %call17 = tail call fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %stmt) #7, !dbg !7744
  %tobool18 = icmp eq i8 %call17, 0, !dbg !7744
  br i1 %tobool18, label %lor.lhs.false19, label %if.then31, !dbg !7745

lor.lhs.false19:                                  ; preds = %if.else
  %call20 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7746
  %cmp21 = icmp eq i32 %call20, 43, !dbg !7747
  br i1 %cmp21, label %if.then31, label %lor.lhs.false23, !dbg !7748

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %call24 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7749
  %cmp25 = icmp eq i32 %call24, 44, !dbg !7750
  br i1 %cmp25, label %if.then31, label %lor.lhs.false27, !dbg !7751

lor.lhs.false27:                                  ; preds = %lor.lhs.false23
  %call28 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7752
  %cmp29 = icmp eq i32 %call28, 118, !dbg !7753
  br i1 %cmp29, label %if.then31, label %if.end71, !dbg !7754

if.then31:                                        ; preds = %if.else, %lor.lhs.false27, %lor.lhs.false23, %lor.lhs.false19
  %call32 = tail call %union.tree_node* @vn_get_expr_for(%union.tree_node* %op0.0) #7, !dbg !7755
  %call33 = tail call fastcc %union.tree_node* @valueize_expr(%union.tree_node* %call32) #7, !dbg !7756
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !7716, metadata !DIExpression()), !dbg !7757
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7758
  %bf.load35 = load i64, i64* %2, align 8, !dbg !7758
  %bf.cast37 = and i64 %bf.load35, 65535, !dbg !7758
  %arrayidx38 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast37, !dbg !7758
  %3 = load i32, i32* %arrayidx38, align 4, !dbg !7758
  %cmp39 = icmp eq i32 %3, 6, !dbg !7758
  br i1 %cmp39, label %if.then68, label %lor.lhs.false41, !dbg !7760

lor.lhs.false41:                                  ; preds = %if.then31
  %cmp48 = icmp eq i32 %3, 7, !dbg !7761
  br i1 %cmp48, label %if.then68, label %lor.lhs.false50, !dbg !7762

lor.lhs.false50:                                  ; preds = %lor.lhs.false41
  %cmp55 = icmp eq i64 %bf.cast37, 118, !dbg !7763
  br i1 %cmp55, label %if.then68, label %lor.lhs.false57, !dbg !7764

lor.lhs.false57:                                  ; preds = %lor.lhs.false50
  %cmp62 = icmp eq i64 %bf.cast37, 141, !dbg !7765
  br i1 %cmp62, label %if.then68, label %lor.lhs.false64, !dbg !7766

lor.lhs.false64:                                  ; preds = %lor.lhs.false57
  %call65 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call33) #6, !dbg !7767
  %tobool67 = icmp eq i8 %call65, 0, !dbg !7767
  br i1 %tobool67, label %if.end71, label %if.then68, !dbg !7768

if.then68:                                        ; preds = %lor.lhs.false64, %lor.lhs.false57, %lor.lhs.false50, %lor.lhs.false41, %if.then31
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !7715, metadata !DIExpression()), !dbg !7720
  br label %if.end71, !dbg !7769

if.end71:                                         ; preds = %lor.lhs.false64, %lor.lhs.false27, %if.then68, %if.then14
  %op0.3 = phi %union.tree_node* [ %call16, %if.then14 ], [ %op0.0, %lor.lhs.false27 ], [ %call33, %if.then68 ], [ %op0.0, %lor.lhs.false64 ], !dbg !7770
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.3, metadata !7715, metadata !DIExpression()), !dbg !7720
  %cmp72 = icmp eq %union.tree_node* %op0.3, %op0.0, !dbg !7771
  br i1 %cmp72, label %cleanup, label %if.end75, !dbg !7773

if.end75:                                         ; preds = %if.end71
  %call76 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7774
  %call77 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !7774
  %call78 = tail call %union.tree_node* @fold_unary_ignore_overflow_loc(i32 0, i32 %call76, %union.tree_node* %call77, %union.tree_node* %op0.3) #6, !dbg !7774
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !7713, metadata !DIExpression()), !dbg !7720
  %tobool79 = icmp eq %union.tree_node* %call78, null, !dbg !7775
  br i1 %tobool79, label %if.end86, label %if.then80, !dbg !7777

if.then80:                                        ; preds = %if.end75
  %call81 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* nonnull %call78) #6, !dbg !7778
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !7713, metadata !DIExpression()), !dbg !7720
  %call82 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* %call81) #6, !dbg !7780
  %tobool83 = icmp eq i8 %call82, 0, !dbg !7780
  br i1 %tobool83, label %if.end86, label %cleanup, !dbg !7782

if.end86:                                         ; preds = %if.then80, %if.end75
  br label %cleanup, !dbg !7783

cleanup:                                          ; preds = %if.then80, %if.end, %if.end71, %if.end86
  %retval.0 = phi %union.tree_node* [ null, %if.end86 ], [ null, %if.end ], [ null, %if.end71 ], [ %call81, %if.then80 ], !dbg !7720
  ret %union.tree_node* %retval.0, !dbg !7784
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @simplify_binary_expression(%union.gimple_statement_d* %stmt) unnamed_addr #4 !dbg !7785 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7787, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7788, metadata !DIExpression()), !dbg !7791
  %call = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7792
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7789, metadata !DIExpression()), !dbg !7791
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !7793
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7790, metadata !DIExpression()), !dbg !7791
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7794
  %bf.load = load i64, i64* %0, align 8, !dbg !7794
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7796
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7796
  br i1 %cmp, label %if.then, label %if.end20, !dbg !7797

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call) #7, !dbg !7798
  %has_constants = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call2, i64 0, i32 5, !dbg !7801
  %bf.load3 = load i8, i8* %has_constants, align 4, !dbg !7801
  %bf.clear4 = and i8 %bf.load3, 4, !dbg !7801
  %tobool = icmp eq i8 %bf.clear4, 0, !dbg !7798
  br i1 %tobool, label %lor.lhs.false, label %if.then8, !dbg !7802

lor.lhs.false:                                    ; preds = %if.then
  %call6 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7803
  %idxprom = sext i32 %call6 to i64, !dbg !7803
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7803
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7803
  %cmp7 = icmp eq i32 %1, 5, !dbg !7804
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !7805

if.then8:                                         ; preds = %if.then, %lor.lhs.false
  %call9 = tail call %union.tree_node* @vn_get_expr_for(%union.tree_node* %call) #7, !dbg !7806
  %call10 = tail call fastcc %union.tree_node* @valueize_expr(%union.tree_node* %call9) #7, !dbg !7807
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !7789, metadata !DIExpression()), !dbg !7791
  br label %if.end20, !dbg !7808

if.else:                                          ; preds = %lor.lhs.false
  %call11 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call) #7, !dbg !7809
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call11, i64 0, i32 0, !dbg !7809
  %2 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !7809
  %3 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !7811
  %cmp12 = icmp eq %union.tree_node* %2, %3, !dbg !7812
  br i1 %cmp12, label %if.end20, label %land.lhs.true, !dbg !7813

land.lhs.true:                                    ; preds = %if.else
  %call13 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call) #7, !dbg !7814
  %valnum14 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call13, i64 0, i32 0, !dbg !7814
  %4 = load %union.tree_node*, %union.tree_node** %valnum14, align 8, !dbg !7814
  %cmp15 = icmp eq %union.tree_node* %4, %call, !dbg !7815
  br i1 %cmp15, label %if.end20, label %if.then16, !dbg !7816

if.then16:                                        ; preds = %land.lhs.true
  %call17 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call) #7, !dbg !7817
  %valnum18 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call17, i64 0, i32 0, !dbg !7817
  %5 = load %union.tree_node*, %union.tree_node** %valnum18, align 8, !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7789, metadata !DIExpression()), !dbg !7791
  br label %if.end20, !dbg !7818

if.end20:                                         ; preds = %land.lhs.true, %if.else, %if.then8, %if.then16, %entry
  %op0.2 = phi %union.tree_node* [ %call, %entry ], [ %call10, %if.then8 ], [ %5, %if.then16 ], [ %call, %land.lhs.true ], [ %call, %if.else ], !dbg !7791
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2, metadata !7789, metadata !DIExpression()), !dbg !7791
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7819
  %bf.load22 = load i64, i64* %6, align 8, !dbg !7819
  %bf.cast242 = and i64 %bf.load22, 65535, !dbg !7821
  %cmp25 = icmp eq i64 %bf.cast242, 141, !dbg !7821
  br i1 %cmp25, label %if.then26, label %if.end50, !dbg !7822

if.then26:                                        ; preds = %if.end20
  %call27 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call1) #7, !dbg !7823
  %has_constants28 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call27, i64 0, i32 5, !dbg !7826
  %bf.load29 = load i8, i8* %has_constants28, align 4, !dbg !7826
  %bf.clear31 = and i8 %bf.load29, 4, !dbg !7826
  %tobool33 = icmp eq i8 %bf.clear31, 0, !dbg !7823
  br i1 %tobool33, label %if.else37, label %if.then34, !dbg !7827

if.then34:                                        ; preds = %if.then26
  %call35 = tail call %union.tree_node* @vn_get_expr_for(%union.tree_node* %call1) #7, !dbg !7828
  %call36 = tail call fastcc %union.tree_node* @valueize_expr(%union.tree_node* %call35) #7, !dbg !7829
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !7790, metadata !DIExpression()), !dbg !7791
  br label %if.end50, !dbg !7830

if.else37:                                        ; preds = %if.then26
  %call38 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call1) #7, !dbg !7831
  %valnum39 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call38, i64 0, i32 0, !dbg !7831
  %7 = load %union.tree_node*, %union.tree_node** %valnum39, align 8, !dbg !7831
  %8 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !7833
  %cmp40 = icmp eq %union.tree_node* %7, %8, !dbg !7834
  br i1 %cmp40, label %if.end50, label %land.lhs.true41, !dbg !7835

land.lhs.true41:                                  ; preds = %if.else37
  %call42 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call1) #7, !dbg !7836
  %valnum43 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call42, i64 0, i32 0, !dbg !7836
  %9 = load %union.tree_node*, %union.tree_node** %valnum43, align 8, !dbg !7836
  %cmp44 = icmp eq %union.tree_node* %9, %call1, !dbg !7837
  br i1 %cmp44, label %if.end50, label %if.then45, !dbg !7838

if.then45:                                        ; preds = %land.lhs.true41
  %call46 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %call1) #7, !dbg !7839
  %valnum47 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call46, i64 0, i32 0, !dbg !7839
  %10 = load %union.tree_node*, %union.tree_node** %valnum47, align 8, !dbg !7839
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !7790, metadata !DIExpression()), !dbg !7791
  br label %if.end50, !dbg !7840

if.end50:                                         ; preds = %land.lhs.true41, %if.else37, %if.then34, %if.then45, %if.end20
  %op1.2 = phi %union.tree_node* [ %call1, %if.end20 ], [ %call36, %if.then34 ], [ %10, %if.then45 ], [ %call1, %land.lhs.true41 ], [ %call1, %if.else37 ], !dbg !7791
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2, metadata !7790, metadata !DIExpression()), !dbg !7791
  %call51 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7841
  %cmp52 = icmp eq %union.tree_node* %op0.2, %call51, !dbg !7843
  br i1 %cmp52, label %land.lhs.true53, label %if.end57, !dbg !7844

land.lhs.true53:                                  ; preds = %if.end50
  %call54 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !7845
  %cmp55 = icmp eq %union.tree_node* %op1.2, %call54, !dbg !7846
  br i1 %cmp55, label %cleanup, label %if.end57, !dbg !7847

if.end57:                                         ; preds = %land.lhs.true53, %if.end50
  tail call void @fold_defer_overflow_warnings() #6, !dbg !7848
  %call58 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7849
  %call59 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !7849
  %call60 = tail call %union.tree_node* @fold_binary_loc(i32 0, i32 %call58, %union.tree_node* %call59, %union.tree_node* %op0.2, %union.tree_node* %op1.2) #6, !dbg !7849
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !7788, metadata !DIExpression()), !dbg !7791
  %tobool61 = icmp eq %union.tree_node* %call60, null, !dbg !7850
  br i1 %tobool61, label %if.end64, label %if.then62, !dbg !7852

if.then62:                                        ; preds = %if.end57
  %call63 = tail call %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node* nonnull %call60) #6, !dbg !7853
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !7788, metadata !DIExpression()), !dbg !7791
  br label %if.end64, !dbg !7853

if.end64:                                         ; preds = %if.end57, %if.then62
  %result.0 = phi %union.tree_node* [ %call63, %if.then62 ], [ null, %if.end57 ], !dbg !7791
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !7788, metadata !DIExpression()), !dbg !7791
  %tobool65 = icmp eq %union.tree_node* %result.0, null, !dbg !7854
  br i1 %tobool65, label %land.end, label %land.rhs, !dbg !7855

land.rhs:                                         ; preds = %if.end64
  %call66 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* nonnull %result.0) #6, !dbg !7856
  %tobool67 = icmp ne i8 %call66, 0, !dbg !7855
  %phitmp = zext i1 %tobool67 to i8
  br label %land.end

land.end:                                         ; preds = %if.end64, %land.rhs
  %11 = phi i8 [ 0, %if.end64 ], [ %phitmp, %land.rhs ]
  tail call void @fold_undefer_overflow_warnings(i8 zeroext %11, %union.gimple_statement_d* %stmt, i32 0) #6, !dbg !7857
  br i1 %tobool65, label %if.end75, label %land.lhs.true70, !dbg !7858

land.lhs.true70:                                  ; preds = %land.end
  %call71 = tail call zeroext i8 @valid_gimple_rhs_p(%union.tree_node* nonnull %result.0) #6, !dbg !7860
  %tobool73 = icmp eq i8 %call71, 0, !dbg !7860
  br i1 %tobool73, label %if.end75, label %cleanup, !dbg !7861

if.end75:                                         ; preds = %land.lhs.true70, %land.end
  br label %cleanup, !dbg !7862

cleanup:                                          ; preds = %land.lhs.true70, %land.lhs.true53, %if.end75
  %retval.0 = phi %union.tree_node* [ null, %if.end75 ], [ null, %land.lhs.true53 ], [ %result.0, %land.lhs.true70 ], !dbg !7791
  ret %union.tree_node* %retval.0, !dbg !7863
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @valueize_expr(%union.tree_node* %expr) unnamed_addr #4 !dbg !7864 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7866, metadata !DIExpression()), !dbg !7867
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7868
  %bf.load = load i64, i64* %0, align 8, !dbg !7868
  %bf.cast = and i64 %bf.load, 65535, !dbg !7868
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7868
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7868
  switch i32 %1, label %sw.epilog [
    i32 6, label %sw.bb
    i32 7, label %sw.bb18
  ], !dbg !7869

sw.bb:                                            ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7870
  %2 = bitcast %union.tree_node** %operands to i64**, !dbg !7870
  %3 = load i64*, i64** %2, align 8, !dbg !7870
  %bf.load3 = load i64, i64* %3, align 8, !dbg !7870
  %bf.cast53 = and i64 %bf.load3, 65535, !dbg !7873
  %cmp = icmp eq i64 %bf.cast53, 141, !dbg !7873
  br i1 %cmp, label %land.lhs.true, label %sw.epilog, !dbg !7874

land.lhs.true:                                    ; preds = %sw.bb
  %4 = bitcast i64* %3 to %union.tree_node*, !dbg !7874
  %call = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %4) #7, !dbg !7875
  %valnum = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call, i64 0, i32 0, !dbg !7875
  %5 = load %union.tree_node*, %union.tree_node** %valnum, align 8, !dbg !7875
  %6 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !7876
  %cmp9 = icmp eq %union.tree_node* %5, %6, !dbg !7877
  br i1 %cmp9, label %sw.epilog, label %if.then, !dbg !7878

if.then:                                          ; preds = %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7879
  %call13 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %7) #7, !dbg !7879
  %8 = bitcast %struct.vn_ssa_aux* %call13 to i64*, !dbg !7879
  %9 = load i64, i64* %8, align 8, !dbg !7879
  %10 = bitcast %union.tree_node** %operands to i64*, !dbg !7880
  store i64 %9, i64* %10, align 8, !dbg !7880
  br label %sw.epilog, !dbg !7881

sw.bb18:                                          ; preds = %entry
  %operands20 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7882
  %11 = bitcast %union.tree_node** %operands20 to i64**, !dbg !7882
  %12 = load i64*, i64** %11, align 8, !dbg !7882
  %bf.load23 = load i64, i64* %12, align 8, !dbg !7882
  %bf.cast251 = and i64 %bf.load23, 65535, !dbg !7884
  %cmp26 = icmp eq i64 %bf.cast251, 141, !dbg !7884
  br i1 %cmp26, label %land.lhs.true27, label %if.end43, !dbg !7885

land.lhs.true27:                                  ; preds = %sw.bb18
  %13 = bitcast i64* %12 to %union.tree_node*, !dbg !7885
  %call31 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %13) #7, !dbg !7886
  %valnum32 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call31, i64 0, i32 0, !dbg !7886
  %14 = load %union.tree_node*, %union.tree_node** %valnum32, align 8, !dbg !7886
  %15 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !7887
  %cmp33 = icmp eq %union.tree_node* %14, %15, !dbg !7888
  br i1 %cmp33, label %if.end43, label %if.then34, !dbg !7889

if.then34:                                        ; preds = %land.lhs.true27
  %16 = load %union.tree_node*, %union.tree_node** %operands20, align 8, !dbg !7890
  %call38 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %16) #7, !dbg !7890
  %17 = bitcast %struct.vn_ssa_aux* %call38 to i64*, !dbg !7890
  %18 = load i64, i64* %17, align 8, !dbg !7890
  %19 = bitcast %union.tree_node** %operands20 to i64*, !dbg !7891
  store i64 %18, i64* %19, align 8, !dbg !7891
  br label %if.end43, !dbg !7892

if.end43:                                         ; preds = %land.lhs.true27, %if.then34, %sw.bb18
  %arrayidx46 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands20, i64 1, !dbg !7893
  %20 = bitcast %union.tree_node** %arrayidx46 to i64**, !dbg !7893
  %21 = load i64*, i64** %20, align 8, !dbg !7893
  %bf.load48 = load i64, i64* %21, align 8, !dbg !7893
  %bf.cast502 = and i64 %bf.load48, 65535, !dbg !7895
  %cmp51 = icmp eq i64 %bf.cast502, 141, !dbg !7895
  br i1 %cmp51, label %land.lhs.true52, label %sw.epilog, !dbg !7896

land.lhs.true52:                                  ; preds = %if.end43
  %22 = bitcast i64* %21 to %union.tree_node*, !dbg !7896
  %call56 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %22) #7, !dbg !7897
  %valnum57 = getelementptr inbounds %struct.vn_ssa_aux, %struct.vn_ssa_aux* %call56, i64 0, i32 0, !dbg !7897
  %23 = load %union.tree_node*, %union.tree_node** %valnum57, align 8, !dbg !7897
  %24 = load %union.tree_node*, %union.tree_node** @VN_TOP, align 8, !dbg !7898
  %cmp58 = icmp eq %union.tree_node* %23, %24, !dbg !7899
  br i1 %cmp58, label %sw.epilog, label %if.then59, !dbg !7900

if.then59:                                        ; preds = %land.lhs.true52
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8, !dbg !7901
  %call63 = tail call %struct.vn_ssa_aux* @VN_INFO(%union.tree_node* %25) #7, !dbg !7901
  %26 = bitcast %struct.vn_ssa_aux* %call63 to i64*, !dbg !7901
  %27 = load i64, i64* %26, align 8, !dbg !7901
  %28 = bitcast %union.tree_node** %arrayidx46 to i64*, !dbg !7902
  store i64 %27, i64* %28, align 8, !dbg !7902
  br label %sw.epilog, !dbg !7903

sw.epilog:                                        ; preds = %land.lhs.true, %land.lhs.true52, %entry, %if.end43, %if.then59, %sw.bb, %if.then
  ret %union.tree_node* %expr, !dbg !7904
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7905 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7907, metadata !DIExpression()), !dbg !7911
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %s) #7, !dbg !7912
  %tobool = icmp eq i8 %call, 0, !dbg !7912
  br i1 %tobool, label %return, label %if.then, !dbg !7913

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %s) #7, !dbg !7914
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7908, metadata !DIExpression()), !dbg !7915
  switch i32 %call1, label %lor.rhs [
    i32 116, label %lor.end
    i32 113, label %lor.end
    i32 118, label %lor.end
    i32 77, label %lor.end
  ], !dbg !7916

lor.rhs:                                          ; preds = %if.then
  br label %lor.end, !dbg !7917

lor.end:                                          ; preds = %if.then, %if.then, %if.then, %if.then, %lor.rhs
  %0 = phi i8 [ 1, %if.then ], [ 0, %lor.rhs ], [ 1, %if.then ], [ 1, %if.then ], [ 1, %if.then ]
  br label %return

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i8 [ %0, %lor.end ], [ 0, %entry ], !dbg !7911
  ret i8 %retval.0, !dbg !7918
}

declare dso_local %union.tree_node* @fold_unary_ignore_overflow_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @tree_ssa_strip_useless_type_conversions(%union.tree_node*) local_unnamed_addr #1

declare dso_local zeroext i8 @valid_gimple_rhs_p(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @fold_defer_overflow_warnings() local_unnamed_addr #1

declare dso_local %union.tree_node* @fold_binary_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @fold_undefer_overflow_warnings(i8 zeroext, %union.gimple_statement_d*, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !7919 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7923, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7924, metadata !DIExpression()), !dbg !7925
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7926
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* null) #6, !dbg !7927
  ret %union.tree_node* %call, !dbg !7928
}

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_shared_reference_ops_from_call(%union.gimple_statement_d* %call) unnamed_addr #4 !dbg !7929 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7933, metadata !DIExpression()), !dbg !7934
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !7935
  br i1 %tobool, label %return, label %if.end, !dbg !7937

if.end:                                           ; preds = %entry
  %0 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !7938
  %base = getelementptr inbounds %struct.VEC_vn_reference_op_s_heap, %struct.VEC_vn_reference_op_s_heap* %0, i64 0, i32 0, !dbg !7938
  tail call fastcc void @VEC_vn_reference_op_s_base_truncate(%struct.VEC_vn_reference_op_s_base* %base, i32 0) #7, !dbg !7938
  tail call void @copy_reference_ops_from_call(%union.gimple_statement_d* nonnull %call, %struct.VEC_vn_reference_op_s_heap** nonnull @shared_lookup_references) #7, !dbg !7939
  %1 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !7940
  %call2 = tail call fastcc %struct.VEC_vn_reference_op_s_heap* @valueize_refs(%struct.VEC_vn_reference_op_s_heap* %1) #7, !dbg !7941
  store %struct.VEC_vn_reference_op_s_heap* %call2, %struct.VEC_vn_reference_op_s_heap** @shared_lookup_references, align 8, !dbg !7942
  br label %return, !dbg !7943

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.VEC_vn_reference_op_s_heap* [ %call2, %if.end ], [ null, %entry ], !dbg !7934
  ret %struct.VEC_vn_reference_op_s_heap* %retval.0, !dbg !7944
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_vn_reference_op_s_heap* @create_reference_ops_from_call(%union.gimple_statement_d* %call) unnamed_addr #4 !dbg !7945 {
entry:
  %result = alloca %struct.VEC_vn_reference_op_s_heap*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7947, metadata !DIExpression()), !dbg !7949
  %0 = bitcast %struct.VEC_vn_reference_op_s_heap** %result to i8*, !dbg !7950
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7950
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* null, metadata !7948, metadata !DIExpression()), !dbg !7949
  store %struct.VEC_vn_reference_op_s_heap* null, %struct.VEC_vn_reference_op_s_heap** %result, align 8, !dbg !7951
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap** %result, metadata !7948, metadata !DIExpression(DW_OP_deref)), !dbg !7949
  call void @copy_reference_ops_from_call(%union.gimple_statement_d* %call, %struct.VEC_vn_reference_op_s_heap** nonnull %result) #7, !dbg !7952
  %1 = load %struct.VEC_vn_reference_op_s_heap*, %struct.VEC_vn_reference_op_s_heap** %result, align 8, !dbg !7953
  call void @llvm.dbg.value(metadata %struct.VEC_vn_reference_op_s_heap* %1, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7954
  ret %struct.VEC_vn_reference_op_s_heap* %1, !dbg !7955
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ssa_op_iter_heap_reserve(%struct.VEC_ssa_op_iter_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7956 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_heap** %vec_, metadata !7960, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i32 1, metadata !7961, metadata !DIExpression()), !dbg !7963
  %0 = load %struct.VEC_ssa_op_iter_heap*, %struct.VEC_ssa_op_iter_heap** %vec_, align 8, !dbg !7964
  %tobool = icmp eq %struct.VEC_ssa_op_iter_heap* %0, null, !dbg !7964
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7964

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ssa_op_iter_heap, %struct.VEC_ssa_op_iter_heap* %0, i64 0, i32 0, !dbg !7964
  br label %cond.end, !dbg !7964

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ssa_op_iter_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7964
  %call = tail call fastcc i32 @VEC_ssa_op_iter_base_space(%struct.VEC_ssa_op_iter_base* %cond, i32 1) #7, !dbg !7964
  %tobool1 = icmp eq i32 %call, 0, !dbg !7964
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7962, metadata !DIExpression()), !dbg !7963
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7964

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_ssa_op_iter_heap** %vec_ to i8**, !dbg !7965
  %2 = load i8*, i8** %1, align 8, !dbg !7965
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 40) #6, !dbg !7965
  store i8* %call3, i8** %1, align 8, !dbg !7965
  br label %if.end, !dbg !7965

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7964
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_operand_iterator_d* @VEC_ssa_op_iter_base_quick_push(%struct.VEC_ssa_op_iter_base* %vec_, %struct.ssa_operand_iterator_d* %obj_) unnamed_addr #0 !dbg !7967 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_base* %vec_, metadata !7971, metadata !DIExpression()), !dbg !7974
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %obj_, metadata !7972, metadata !DIExpression()), !dbg !7974
  %num1 = getelementptr inbounds %struct.VEC_ssa_op_iter_base, %struct.VEC_ssa_op_iter_base* %vec_, i64 0, i32 0, !dbg !7975
  %0 = load i32, i32* %num1, align 8, !dbg !7975
  %inc = add i32 %0, 1, !dbg !7975
  store i32 %inc, i32* %num1, align 8, !dbg !7975
  %idxprom = zext i32 %0 to i64, !dbg !7975
  %arrayidx = getelementptr inbounds %struct.VEC_ssa_op_iter_base, %struct.VEC_ssa_op_iter_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7975
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %arrayidx, metadata !7973, metadata !DIExpression()), !dbg !7974
  %tobool = icmp eq %struct.ssa_operand_iterator_d* %obj_, null, !dbg !7976
  br i1 %tobool, label %if.end, label %if.then, !dbg !7975

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %arrayidx, i64 0, i32 0, !dbg !7976
  %2 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %obj_, i64 0, i32 0, !dbg !7976
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 40, i1 false), !dbg !7976
  br label %if.end, !dbg !7976

if.end:                                           ; preds = %entry, %if.then
  ret %struct.ssa_operand_iterator_d* %arrayidx, !dbg !7975
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ssa_op_iter_base_space(%struct.VEC_ssa_op_iter_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7978 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_op_iter_base* %vec_, metadata !7982, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i32 1, metadata !7983, metadata !DIExpression()), !dbg !7984
  %tobool = icmp eq %struct.VEC_ssa_op_iter_base* %vec_, null, !dbg !7985
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7985

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ssa_op_iter_base, %struct.VEC_ssa_op_iter_base* %vec_, i64 0, i32 1, !dbg !7985
  %0 = load i32, i32* %alloc, align 4, !dbg !7985
  %num = getelementptr inbounds %struct.VEC_ssa_op_iter_base, %struct.VEC_ssa_op_iter_base* %vec_, i64 0, i32 0, !dbg !7985
  %1 = load i32, i32* %num, align 8, !dbg !7985
  %cmp1 = icmp ne i32 %0, %1, !dbg !7985
  %phitmp = zext i1 %cmp1 to i32, !dbg !7985
  br label %cond.end, !dbg !7985

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7985

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7985
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %table) unnamed_addr #0 !dbg !7986 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !7991, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !7992, metadata !DIExpression()), !dbg !7995
  %htab = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 0, !dbg !7996
  store %struct.htab* %table, %struct.htab** %htab, align 8, !dbg !7997
  %entries = getelementptr inbounds %struct.htab, %struct.htab* %table, i64 0, i32 3, !dbg !7998
  %0 = bitcast i8*** %entries to i64*, !dbg !7998
  %1 = load i64, i64* %0, align 8, !dbg !7998
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !7999
  %2 = bitcast i8*** %slot to i64*, !dbg !8000
  store i64 %1, i64* %2, align 8, !dbg !8000
  %.cast = inttoptr i64 %1 to i8**, !dbg !8001
  %call = tail call i64 @htab_size(%struct.htab* %table) #6, !dbg !8002
  %add.ptr = getelementptr inbounds i8*, i8** %.cast, i64 %call, !dbg !8003
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !8004
  store i8** %add.ptr, i8*** %limit, align 8, !dbg !8005
  %.pre3 = load i8**, i8*** %slot, align 8, !dbg !8006
  br label %do.body, !dbg !8007

do.body:                                          ; preds = %do.cond, %entry
  %3 = phi i8** [ %incdec.ptr, %do.cond ], [ %.pre3, %entry ]
  %indvars2 = bitcast i8** %3 to i64*, !dbg !8006
  %4 = load i64, i64* %indvars2, align 8, !dbg !8008
  %switch1 = icmp ult i64 %4, 2, !dbg !8009
  br i1 %switch1, label %do.cond, label %do.end

do.cond:                                          ; preds = %do.body
  %incdec.ptr = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !8011
  store i8** %incdec.ptr, i8*** %slot, align 8, !dbg !8011
  %cmp6 = icmp ult i8** %incdec.ptr, %add.ptr, !dbg !8012
  br i1 %cmp6, label %do.body, label %do.end, !dbg !8013, !llvm.loop !8014

do.end:                                           ; preds = %do.body, %do.cond
  %5 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ]
  %6 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ], !dbg !8016
  %cmp9 = icmp ult i8** %6, %add.ptr, !dbg !8018
  br i1 %cmp9, label %if.then10, label %return, !dbg !8019

if.then10:                                        ; preds = %do.end
  %7 = load i8*, i8** %5, align 8, !dbg !8020
  br label %return, !dbg !8021

return:                                           ; preds = %do.end, %if.then10
  %retval.0 = phi i8* [ %7, %if.then10 ], [ null, %do.end ], !dbg !7995
  ret i8* %retval.0, !dbg !8022
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !8023 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !8029, metadata !DIExpression()), !dbg !8030
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !8031
  %0 = load i8**, i8*** %slot, align 8, !dbg !8031
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !8033
  %1 = load i8**, i8*** %limit, align 8, !dbg !8033
  %cmp = icmp uge i8** %0, %1, !dbg !8034
  %. = zext i1 %cmp to i8, !dbg !8030
  ret i8 %., !dbg !8035
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !8036 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !8040, metadata !DIExpression()), !dbg !8043
  %slot1 = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !8044
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !8043
  %.pre = load i8**, i8*** %slot1, align 8, !dbg !8045
  %.pre3 = load i8**, i8*** %limit, align 8, !dbg !8046
  br label %while.cond, !dbg !8047

while.cond:                                       ; preds = %while.body, %entry
  %0 = phi i8** [ %.pre, %entry ], [ %incdec.ptr, %while.body ], !dbg !8045
  %retval.0 = phi i8* [ undef, %entry ], [ %spec.select2, %while.body ]
  %incdec.ptr = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !8045
  store i8** %incdec.ptr, i8*** %slot1, align 8, !dbg !8045
  %cmp = icmp ult i8** %incdec.ptr, %.pre3, !dbg !8048
  br i1 %cmp, label %while.body, label %return, !dbg !8047

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %incdec.ptr, align 8, !dbg !8049
  call void @llvm.dbg.value(metadata i8* %1, metadata !8041, metadata !DIExpression()), !dbg !8050
  %switch1 = icmp ult i8* %1, inttoptr (i64 2 to i8*), !dbg !8051
  %spec.select2 = select i1 %switch1, i8* %retval.0, i8* %1, !dbg !8051
  br i1 %switch1, label %while.cond, label %return, !llvm.loop !8053

return:                                           ; preds = %while.cond, %while.body
  %retval.2 = phi i8* [ %spec.select2, %while.body ], [ null, %while.cond ], !dbg !8043
  ret i8* %retval.2, !dbg !8055
}

declare dso_local i64 @htab_size(%struct.htab*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2035, !2036, !2037}
!llvm.ident = !{!2038}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "vn_ssa_aux_table", scope: !2, file: !3, line: 170, type: !1902, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !468, globals: !2003, nameTableKind: None)
!3 = !DIFile(filename: "tree-ssa-sccvn.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !338, !342, !348, !353, !358, !376, !383, !390, !429, !435, !461}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !330, line: 31, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335, !336, !337}
!332 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!336 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!337 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !330, line: 91, baseType: !7, size: 32, elements: !339)
!339 = !{!340, !341}
!340 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !343, line: 363, baseType: !7, size: 32, elements: !344)
!343 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!344 = !{!345, !346, !347}
!345 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!346 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!347 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !343, line: 355, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!352 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !354, line: 474, baseType: !7, size: 32, elements: !355)
!354 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!355 = !{!356, !357}
!356 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375}
!360 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !377)
!377 = !{!378, !379, !380, !381, !382}
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !384)
!384 = !{!385, !386, !387, !388, !389}
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!389 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !391, line: 51, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428}
!393 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!401 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!402 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!403 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!404 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!428 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !391, line: 80, baseType: !7, size: 32, elements: !430)
!430 = !{!431, !432, !433, !434}
!431 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !391, line: 727, baseType: !7, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460}
!437 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!438 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!439 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!440 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!441 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!442 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!443 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!444 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!445 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!446 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!447 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!448 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!449 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!450 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!451 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!452 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!453 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!454 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!455 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!456 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!457 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!458 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!459 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!460 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !462, line: 119, baseType: !7, size: 32, elements: !463)
!462 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!463 = !{!464, !465, !466, !467}
!464 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!465 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!466 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!467 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!468 = !{!469, !470, !471, !472, !475, !476, !478, !473, !483, !134, !610, !1844, !1845, !1851, !1883, !1884, !1886, !1899, !1377, !1901, !7, !1902, !429, !1915, !1862, !537, !808, !1918, !841, !1920, !1311, !1923, !1924, !1954, !1956, !1971, !1964, !1973, !1976, !1978, !1979}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!471 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_ssa_aux", file: !480, line: 136, size: 256, elements: !481)
!480 = !DIFile(filename: "./tree-ssa-sccvn.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!481 = !{!482, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "valnum", scope: !479, file: !480, line: 139, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !484, line: 56, baseType: !485)
!484 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !487)
!487 = !{!488, !521, !527, !540, !559, !570, !575, !584, !590, !603, !615, !653, !1163, !1191, !1208, !1209, !1214, !1223, !1229, !1234, !1238, !1242, !1486, !1533, !1539, !1545, !1552, !1565, !1579, !1596, !1608, !1630, !1645, !1817}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !486, file: !135, line: 3372, baseType: !489, size: 64)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !490)
!490 = !{!491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !489, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !489, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !489, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !489, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !489, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !489, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !489, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !489, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !489, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !489, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !489, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !489, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !489, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !489, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !489, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !489, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !489, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !489, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !489, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !489, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !489, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !489, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !489, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !489, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !489, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !489, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !489, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !489, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !489, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !489, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !486, file: !135, line: 3373, baseType: !522, size: 192)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !523)
!523 = !{!524, !525, !526}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !522, file: !135, line: 403, baseType: !489, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !522, file: !135, line: 404, baseType: !483, size: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !522, file: !135, line: 405, baseType: !483, size: 64, offset: 128)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !486, file: !135, line: 3374, baseType: !528, size: 320)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !529)
!529 = !{!530, !531}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !528, file: !135, line: 1385, baseType: !522, size: 192)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !528, file: !135, line: 1386, baseType: !532, size: 128, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !533, line: 58, baseType: !534)
!533 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 54, size: 128, elements: !535)
!535 = !{!536, !538}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !534, file: !533, line: 56, baseType: !537, size: 64)
!537 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !534, file: !533, line: 57, baseType: !539, size: 64, offset: 64)
!539 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !486, file: !135, line: 3375, baseType: !541, size: 256)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !542)
!542 = !{!543, !544}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !541, file: !135, line: 1398, baseType: !522, size: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !541, file: !135, line: 1399, baseType: !545, size: 64, offset: 192)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !547, line: 52, size: 256, elements: !548)
!547 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!548 = !{!549, !550, !551, !552, !553, !554, !555}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !546, file: !547, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !546, file: !547, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !546, file: !547, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !546, file: !547, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !546, file: !547, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !546, file: !547, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !546, file: !547, line: 62, baseType: !556, size: 192, offset: 64)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 192, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 3)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !486, file: !135, line: 3376, baseType: !560, size: 256)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !561)
!561 = !{!562, !563}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !560, file: !135, line: 1409, baseType: !522, size: 192)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !560, file: !135, line: 1410, baseType: !564, size: 64, offset: 192)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !566, line: 27, size: 192, elements: !567)
!566 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !565, file: !566, line: 29, baseType: !532, size: 128)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !565, file: !566, line: 30, baseType: !5, size: 32, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !486, file: !135, line: 3377, baseType: !571, size: 256)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !572)
!572 = !{!573, !574}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !571, file: !135, line: 1438, baseType: !522, size: 192)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !571, file: !135, line: 1439, baseType: !483, size: 64, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !486, file: !135, line: 3378, baseType: !576, size: 256)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !577)
!577 = !{!578, !579, !580}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !576, file: !135, line: 1419, baseType: !522, size: 192)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !576, file: !135, line: 1420, baseType: !471, size: 32, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !576, file: !135, line: 1421, baseType: !581, size: 8, offset: 224)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 8, elements: !582)
!582 = !{!583}
!583 = !DISubrange(count: 1)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !486, file: !135, line: 3379, baseType: !585, size: 320)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !586)
!586 = !{!587, !588, !589}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !585, file: !135, line: 1429, baseType: !522, size: 192)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !585, file: !135, line: 1430, baseType: !483, size: 64, offset: 192)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !585, file: !135, line: 1431, baseType: !483, size: 64, offset: 256)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !486, file: !135, line: 3380, baseType: !591, size: 320)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !592)
!592 = !{!593, !594}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !591, file: !135, line: 1461, baseType: !522, size: 192)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !591, file: !135, line: 1462, baseType: !595, size: 128, offset: 192)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !596, line: 31, size: 128, elements: !597)
!596 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!597 = !{!598, !601, !602}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !595, file: !596, line: 32, baseType: !599, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !595, file: !596, line: 33, baseType: !7, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !595, file: !596, line: 34, baseType: !7, size: 32, offset: 96)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !486, file: !135, line: 3381, baseType: !604, size: 384)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !605)
!605 = !{!606, !607, !612, !613, !614}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !604, file: !135, line: 2508, baseType: !522, size: 192)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !604, file: !135, line: 2509, baseType: !608, size: 32, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !609, line: 58, baseType: !610)
!609 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !611, line: 44, baseType: !7)
!611 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!612 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !604, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !604, file: !135, line: 2511, baseType: !483, size: 64, offset: 256)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !604, file: !135, line: 2512, baseType: !483, size: 64, offset: 320)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !486, file: !135, line: 3382, baseType: !616, size: 896)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !617)
!617 = !{!618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !616, file: !135, line: 2653, baseType: !604, size: 384)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !616, file: !135, line: 2654, baseType: !483, size: 64, offset: 384)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !616, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !616, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !616, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !616, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !616, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !616, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !616, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !616, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !616, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !616, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !616, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !616, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !616, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !616, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !616, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !616, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !616, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !616, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !616, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !616, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !616, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !616, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !616, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !616, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !616, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !616, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !616, file: !135, line: 2705, baseType: !483, size: 64, offset: 576)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !616, file: !135, line: 2706, baseType: !483, size: 64, offset: 640)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !616, file: !135, line: 2707, baseType: !483, size: 64, offset: 704)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !616, file: !135, line: 2708, baseType: !483, size: 64, offset: 768)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !616, file: !135, line: 2711, baseType: !651, size: 64, offset: 832)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !486, file: !135, line: 3383, baseType: !654, size: 960)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !655)
!655 = !{!656, !657}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !654, file: !135, line: 2757, baseType: !616, size: 896)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !654, file: !135, line: 2758, baseType: !658, size: 64, offset: 896)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !484, line: 50, baseType: !659)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !661, line: 240, size: 384, elements: !662)
!661 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!662 = !{!663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !660, file: !661, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !660, file: !661, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !660, file: !661, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !660, file: !661, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !660, file: !661, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !660, file: !661, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !660, file: !661, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !660, file: !661, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !660, file: !661, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !660, file: !661, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !660, file: !661, line: 321, baseType: !674, size: 320, offset: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !661, line: 315, size: 320, elements: !675)
!675 = !{!676, !1130, !1132, !1161, !1162}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !674, file: !661, line: 316, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 64, elements: !582)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !661, line: 183, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !661, line: 166, size: 64, elements: !680)
!680 = !{!681, !682, !683, !684, !685, !693, !694, !706, !709, !769, !770, !1107, !1120, !1127}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !679, file: !661, line: 168, baseType: !471, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !679, file: !661, line: 169, baseType: !7, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !679, file: !661, line: 170, baseType: !476, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !679, file: !661, line: 171, baseType: !658, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !679, file: !661, line: 172, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !484, line: 53, baseType: !687)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !661, line: 359, size: 128, elements: !689)
!689 = !{!690, !691}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !688, file: !661, line: 360, baseType: !471, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !688, file: !661, line: 361, baseType: !692, size: 64, offset: 64)
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 64, elements: !582)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !679, file: !661, line: 173, baseType: !5, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !679, file: !661, line: 174, baseType: !695, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !661, line: 133, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !661, line: 115, size: 32, elements: !697)
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !696, file: !661, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !696, file: !661, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !696, file: !661, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !696, file: !661, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !696, file: !661, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !696, file: !661, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !696, file: !661, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !696, file: !661, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !679, file: !661, line: 175, baseType: !707, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !661, line: 175, flags: DIFlagFwdDecl)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !679, file: !661, line: 176, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !712, line: 75, size: 256, elements: !713)
!712 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!713 = !{!714, !728, !729, !730}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !711, file: !712, line: 76, baseType: !715, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !712, line: 68, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !712, line: 63, size: 320, elements: !718)
!718 = !{!719, !721, !722, !723}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !717, file: !712, line: 64, baseType: !720, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !717, file: !712, line: 65, baseType: !720, size: 64, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !717, file: !712, line: 66, baseType: !7, size: 32, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !717, file: !712, line: 67, baseType: !724, size: 128, offset: 192)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 128, elements: !726)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !712, line: 29, baseType: !537)
!726 = !{!727}
!727 = !DISubrange(count: 2)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !711, file: !712, line: 77, baseType: !715, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !711, file: !712, line: 78, baseType: !7, size: 32, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !711, file: !712, line: 79, baseType: !731, size: 64, offset: 192)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !712, line: 49, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !712, line: 45, size: 832, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !733, file: !712, line: 46, baseType: !720, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !733, file: !712, line: 47, baseType: !710, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !733, file: !712, line: 48, baseType: !738, size: 704, offset: 128)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !739, line: 164, size: 704, elements: !740)
!739 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!740 = !{!741, !742, !752, !753, !754, !755, !756, !757, !761, !765, !766, !767, !768}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !738, file: !739, line: 166, baseType: !539, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !738, file: !739, line: 167, baseType: !743, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !739, line: 157, size: 192, elements: !745)
!745 = !{!746, !747, !748}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !744, file: !739, line: 159, baseType: !473, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !744, file: !739, line: 160, baseType: !743, size: 64, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !744, file: !739, line: 161, baseType: !749, size: 32, offset: 128)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 32, elements: !750)
!750 = !{!751}
!751 = !DISubrange(count: 4)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !738, file: !739, line: 168, baseType: !473, size: 64, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !738, file: !739, line: 169, baseType: !473, size: 64, offset: 192)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !738, file: !739, line: 170, baseType: !473, size: 64, offset: 256)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !738, file: !739, line: 171, baseType: !539, size: 64, offset: 320)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !738, file: !739, line: 172, baseType: !471, size: 32, offset: 384)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !738, file: !739, line: 176, baseType: !758, size: 64, offset: 448)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DISubroutineType(types: !760)
!760 = !{!743, !475, !539}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !738, file: !739, line: 177, baseType: !762, size: 64, offset: 512)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !475, !743}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !738, file: !739, line: 178, baseType: !475, size: 64, offset: 576)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !738, file: !739, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !738, file: !739, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !738, file: !739, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !679, file: !661, line: 177, baseType: !483, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !679, file: !661, line: 178, baseType: !771, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !343, line: 217, size: 832, elements: !773)
!773 = !{!774, !1019, !1020, !1021, !1077, !1081, !1082, !1083, !1101, !1102, !1103, !1104, !1105, !1106}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !772, file: !343, line: 219, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !343, line: 151, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !343, line: 151, size: 128, elements: !778)
!778 = !{!779}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !777, file: !343, line: 151, baseType: !780, size: 128)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !343, line: 150, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !343, line: 150, size: 128, elements: !782)
!782 = !{!783, !784, !785}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !781, file: !343, line: 150, baseType: !7, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !781, file: !343, line: 150, baseType: !7, size: 32, offset: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !781, file: !343, line: 150, baseType: !786, size: 64, offset: 64)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 64, elements: !582)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !484, line: 108, baseType: !788)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !343, line: 122, size: 512, elements: !790)
!790 = !{!791, !792, !793, !1011, !1012, !1013, !1014, !1015, !1016, !1017}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !789, file: !343, line: 124, baseType: !771, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !789, file: !343, line: 125, baseType: !771, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !789, file: !343, line: 131, baseType: !794, size: 64, offset: 128)
!794 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !343, line: 128, size: 64, elements: !795)
!795 = !{!796, !1010}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !794, file: !343, line: 129, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !484, line: 66, baseType: !798)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !391, line: 143, size: 192, elements: !800)
!800 = !{!801, !1008, !1009}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !799, file: !391, line: 145, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !484, line: 69, baseType: !803)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !391, line: 136, size: 192, elements: !805)
!805 = !{!806, !1006, !1007}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !804, file: !391, line: 137, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !484, line: 58, baseType: !808)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !391, line: 737, size: 768, elements: !810)
!810 = !{!811, !828, !861, !867, !872, !877, !884, !890, !896, !901, !915, !920, !926, !931, !941, !946, !964, !971, !978, !984, !989, !995, !1001}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !809, file: !391, line: 738, baseType: !812, size: 256)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !391, line: 271, size: 256, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !812, file: !391, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !812, file: !391, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !812, file: !391, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !812, file: !391, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !812, file: !391, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !812, file: !391, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !812, file: !391, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !812, file: !391, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !812, file: !391, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !812, file: !391, line: 312, baseType: !7, size: 32, offset: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !812, file: !391, line: 316, baseType: !608, size: 32, offset: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !812, file: !391, line: 319, baseType: !7, size: 32, offset: 96)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !812, file: !391, line: 323, baseType: !771, size: 64, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !812, file: !391, line: 327, baseType: !483, size: 64, offset: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !809, file: !391, line: 739, baseType: !829, size: 448)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !391, line: 350, size: 448, elements: !830)
!830 = !{!831, !859}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !829, file: !391, line: 353, baseType: !832, size: 384)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !391, line: 333, size: 384, elements: !833)
!833 = !{!834, !835, !842}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !832, file: !391, line: 336, baseType: !812, size: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !832, file: !391, line: 343, baseType: !836, size: 64, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !462, line: 37, size: 128, elements: !838)
!838 = !{!839, !840}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !837, file: !462, line: 39, baseType: !836, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !837, file: !462, line: 40, baseType: !841, size: 64, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !832, file: !391, line: 344, baseType: !843, size: 64, offset: 320)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !462, line: 45, size: 320, elements: !845)
!845 = !{!846, !847}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !844, file: !462, line: 47, baseType: !843, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !844, file: !462, line: 48, baseType: !848, size: 256, offset: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !849)
!849 = !{!850, !852, !853, !858}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !848, file: !135, line: 1884, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !848, file: !135, line: 1885, baseType: !851, size: 64, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !848, file: !135, line: 1891, baseType: !854, size: 64, offset: 128)
!854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !848, file: !135, line: 1891, size: 64, elements: !855)
!855 = !{!856, !857}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !854, file: !135, line: 1891, baseType: !807, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !854, file: !135, line: 1891, baseType: !483, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !848, file: !135, line: 1892, baseType: !841, size: 64, offset: 192)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !829, file: !391, line: 359, baseType: !860, size: 64, offset: 384)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 64, elements: !582)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !809, file: !391, line: 740, baseType: !862, size: 512)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !391, line: 365, size: 512, elements: !863)
!863 = !{!864, !865, !866}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !862, file: !391, line: 368, baseType: !832, size: 384)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !862, file: !391, line: 373, baseType: !483, size: 64, offset: 384)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !862, file: !391, line: 374, baseType: !483, size: 64, offset: 448)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !809, file: !391, line: 741, baseType: !868, size: 576)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !391, line: 380, size: 576, elements: !869)
!869 = !{!870, !871}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !868, file: !391, line: 383, baseType: !862, size: 512)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !868, file: !391, line: 389, baseType: !860, size: 64, offset: 512)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !809, file: !391, line: 742, baseType: !873, size: 320)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !391, line: 395, size: 320, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !873, file: !391, line: 397, baseType: !812, size: 256)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !873, file: !391, line: 400, baseType: !797, size: 64, offset: 256)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !809, file: !391, line: 743, baseType: !878, size: 448)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !391, line: 406, size: 448, elements: !879)
!879 = !{!880, !881, !882, !883}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !878, file: !391, line: 408, baseType: !812, size: 256)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !878, file: !391, line: 412, baseType: !483, size: 64, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !878, file: !391, line: 420, baseType: !483, size: 64, offset: 320)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !878, file: !391, line: 423, baseType: !797, size: 64, offset: 384)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !809, file: !391, line: 744, baseType: !885, size: 384)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !391, line: 429, size: 384, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !885, file: !391, line: 431, baseType: !812, size: 256)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !885, file: !391, line: 434, baseType: !483, size: 64, offset: 256)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !885, file: !391, line: 437, baseType: !797, size: 64, offset: 320)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !809, file: !391, line: 745, baseType: !891, size: 384)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !391, line: 443, size: 384, elements: !892)
!892 = !{!893, !894, !895}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !891, file: !391, line: 445, baseType: !812, size: 256)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !891, file: !391, line: 449, baseType: !483, size: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !891, file: !391, line: 453, baseType: !797, size: 64, offset: 320)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !809, file: !391, line: 746, baseType: !897, size: 320)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !391, line: 459, size: 320, elements: !898)
!898 = !{!899, !900}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !897, file: !391, line: 461, baseType: !812, size: 256)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !897, file: !391, line: 464, baseType: !483, size: 64, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !809, file: !391, line: 747, baseType: !902, size: 768)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !391, line: 469, size: 768, elements: !903)
!903 = !{!904, !905, !906, !907, !908}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !902, file: !391, line: 471, baseType: !812, size: 256)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !902, file: !391, line: 474, baseType: !7, size: 32, offset: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !902, file: !391, line: 475, baseType: !7, size: 32, offset: 288)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !902, file: !391, line: 478, baseType: !483, size: 64, offset: 320)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !902, file: !391, line: 481, baseType: !909, size: 384, offset: 384)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 384, elements: !582)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !911)
!911 = !{!912, !913, !914}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !910, file: !135, line: 1920, baseType: !848, size: 256)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !910, file: !135, line: 1921, baseType: !483, size: 64, offset: 256)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !910, file: !135, line: 1922, baseType: !608, size: 32, offset: 320)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !809, file: !391, line: 748, baseType: !916, size: 320)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !391, line: 487, size: 320, elements: !917)
!917 = !{!918, !919}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !916, file: !391, line: 490, baseType: !812, size: 256)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !916, file: !391, line: 494, baseType: !471, size: 32, offset: 256)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !809, file: !391, line: 749, baseType: !921, size: 384)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !391, line: 500, size: 384, elements: !922)
!922 = !{!923, !924, !925}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !921, file: !391, line: 502, baseType: !812, size: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !921, file: !391, line: 506, baseType: !797, size: 64, offset: 256)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !921, file: !391, line: 510, baseType: !797, size: 64, offset: 320)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !809, file: !391, line: 750, baseType: !927, size: 320)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !391, line: 529, size: 320, elements: !928)
!928 = !{!929, !930}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !927, file: !391, line: 531, baseType: !812, size: 256)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !927, file: !391, line: 540, baseType: !797, size: 64, offset: 256)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !809, file: !391, line: 751, baseType: !932, size: 704)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !391, line: 546, size: 704, elements: !933)
!933 = !{!934, !935, !936, !937, !938, !939, !940}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !932, file: !391, line: 549, baseType: !862, size: 512)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !932, file: !391, line: 553, baseType: !476, size: 64, offset: 512)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !932, file: !391, line: 557, baseType: !470, size: 8, offset: 576)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !932, file: !391, line: 558, baseType: !470, size: 8, offset: 584)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !932, file: !391, line: 559, baseType: !470, size: 8, offset: 592)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !932, file: !391, line: 560, baseType: !470, size: 8, offset: 600)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !932, file: !391, line: 566, baseType: !860, size: 64, offset: 640)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !809, file: !391, line: 752, baseType: !942, size: 384)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !391, line: 571, size: 384, elements: !943)
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !942, file: !391, line: 573, baseType: !873, size: 320)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !942, file: !391, line: 577, baseType: !483, size: 64, offset: 320)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !809, file: !391, line: 753, baseType: !947, size: 576)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !391, line: 600, size: 576, elements: !948)
!948 = !{!949, !950, !951, !954, !963}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !947, file: !391, line: 602, baseType: !873, size: 320)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !947, file: !391, line: 605, baseType: !483, size: 64, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !947, file: !391, line: 609, baseType: !952, size: 64, offset: 384)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !953, line: 46, baseType: !537)
!953 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!954 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !947, file: !391, line: 612, baseType: !955, size: 64, offset: 448)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !391, line: 581, size: 320, elements: !957)
!957 = !{!958, !959, !960, !961, !962}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !956, file: !391, line: 583, baseType: !134, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !956, file: !391, line: 586, baseType: !483, size: 64, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !956, file: !391, line: 589, baseType: !483, size: 64, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !956, file: !391, line: 592, baseType: !483, size: 64, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !956, file: !391, line: 595, baseType: !483, size: 64, offset: 256)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !947, file: !391, line: 616, baseType: !797, size: 64, offset: 512)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !809, file: !391, line: 754, baseType: !965, size: 512)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !391, line: 622, size: 512, elements: !966)
!966 = !{!967, !968, !969, !970}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !965, file: !391, line: 624, baseType: !873, size: 320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !965, file: !391, line: 628, baseType: !483, size: 64, offset: 320)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !965, file: !391, line: 632, baseType: !483, size: 64, offset: 384)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !965, file: !391, line: 636, baseType: !483, size: 64, offset: 448)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !809, file: !391, line: 755, baseType: !972, size: 704)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !391, line: 642, size: 704, elements: !973)
!973 = !{!974, !975, !976, !977}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !972, file: !391, line: 644, baseType: !965, size: 512)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !972, file: !391, line: 648, baseType: !483, size: 64, offset: 512)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !972, file: !391, line: 652, baseType: !483, size: 64, offset: 576)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !972, file: !391, line: 653, baseType: !483, size: 64, offset: 640)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !809, file: !391, line: 756, baseType: !979, size: 448)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !391, line: 663, size: 448, elements: !980)
!980 = !{!981, !982, !983}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !979, file: !391, line: 665, baseType: !873, size: 320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !979, file: !391, line: 668, baseType: !483, size: 64, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !979, file: !391, line: 673, baseType: !483, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !809, file: !391, line: 757, baseType: !985, size: 384)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !391, line: 694, size: 384, elements: !986)
!986 = !{!987, !988}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !985, file: !391, line: 696, baseType: !873, size: 320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !985, file: !391, line: 699, baseType: !483, size: 64, offset: 320)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !809, file: !391, line: 758, baseType: !990, size: 384)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !391, line: 681, size: 384, elements: !991)
!991 = !{!992, !993, !994}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !990, file: !391, line: 683, baseType: !812, size: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !990, file: !391, line: 686, baseType: !483, size: 64, offset: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !990, file: !391, line: 689, baseType: !483, size: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !809, file: !391, line: 759, baseType: !996, size: 384)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !391, line: 707, size: 384, elements: !997)
!997 = !{!998, !999, !1000}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !996, file: !391, line: 709, baseType: !812, size: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !996, file: !391, line: 712, baseType: !483, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !996, file: !391, line: 712, baseType: !483, size: 64, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !809, file: !391, line: 760, baseType: !1002, size: 320)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !391, line: 718, size: 320, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1002, file: !391, line: 720, baseType: !812, size: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1002, file: !391, line: 723, baseType: !483, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !804, file: !391, line: 138, baseType: !803, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !804, file: !391, line: 139, baseType: !803, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !799, file: !391, line: 146, baseType: !802, size: 64, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !799, file: !391, line: 152, baseType: !797, size: 64, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !794, file: !343, line: 130, baseType: !658, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !789, file: !343, line: 134, baseType: !475, size: 64, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !789, file: !343, line: 137, baseType: !483, size: 64, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !789, file: !343, line: 138, baseType: !608, size: 32, offset: 320)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !789, file: !343, line: 142, baseType: !7, size: 32, offset: 352)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !789, file: !343, line: 144, baseType: !471, size: 32, offset: 384)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !789, file: !343, line: 145, baseType: !471, size: 32, offset: 416)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !789, file: !343, line: 146, baseType: !1018, size: 64, offset: 448)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !343, line: 119, baseType: !539)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !772, file: !343, line: 220, baseType: !775, size: 64, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !772, file: !343, line: 223, baseType: !475, size: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !772, file: !343, line: 226, baseType: !1022, size: 64, offset: 192)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 100, size: 1216, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1034, !1035, !1036, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1067, !1075, !1076}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1023, file: !330, line: 102, baseType: !471, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1023, file: !330, line: 105, baseType: !7, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1023, file: !330, line: 108, baseType: !771, size: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1023, file: !330, line: 111, baseType: !771, size: 64, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1023, file: !330, line: 114, baseType: !1030, size: 64, offset: 192)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !330, line: 41, size: 64, elements: !1031)
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1030, file: !330, line: 42, baseType: !329, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1030, file: !330, line: 43, baseType: !7, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1023, file: !330, line: 117, baseType: !7, size: 32, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1023, file: !330, line: 120, baseType: !7, size: 32, offset: 288)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1023, file: !330, line: 123, baseType: !1037, size: 64, offset: 320)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !330, line: 87, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !330, line: 87, size: 128, elements: !1040)
!1040 = !{!1041}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1039, file: !330, line: 87, baseType: !1042, size: 128)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !330, line: 85, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !330, line: 85, size: 128, elements: !1044)
!1044 = !{!1045, !1046, !1047}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1043, file: !330, line: 85, baseType: !7, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1043, file: !330, line: 85, baseType: !7, size: 32, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1043, file: !330, line: 85, baseType: !1048, size: 64, offset: 64)
!1048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 64, elements: !582)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !330, line: 84, baseType: !1022)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1023, file: !330, line: 126, baseType: !1022, size: 64, offset: 384)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1023, file: !330, line: 129, baseType: !1022, size: 64, offset: 448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1023, file: !330, line: 132, baseType: !475, size: 64, offset: 512)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1023, file: !330, line: 139, baseType: !483, size: 64, offset: 576)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1023, file: !330, line: 143, baseType: !532, size: 128, offset: 640)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1023, file: !330, line: 146, baseType: !532, size: 128, offset: 768)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1023, file: !330, line: 148, baseType: !470, size: 8, offset: 896)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1023, file: !330, line: 149, baseType: !470, size: 8, offset: 904)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1023, file: !330, line: 153, baseType: !338, size: 32, offset: 928)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1023, file: !330, line: 156, baseType: !1060, size: 64, offset: 960)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !330, line: 48, size: 320, elements: !1062)
!1062 = !{!1063, !1064, !1065, !1066}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1061, file: !330, line: 50, baseType: !807, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1061, file: !330, line: 59, baseType: !532, size: 128, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1061, file: !330, line: 64, baseType: !470, size: 8, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1061, file: !330, line: 67, baseType: !1060, size: 64, offset: 256)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1023, file: !330, line: 159, baseType: !1068, size: 64, offset: 1024)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !330, line: 72, size: 256, elements: !1070)
!1070 = !{!1071, !1072, !1073, !1074}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1069, file: !330, line: 74, baseType: !788, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1069, file: !330, line: 77, baseType: !1068, size: 64, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1069, file: !330, line: 78, baseType: !1068, size: 64, offset: 128)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1069, file: !330, line: 81, baseType: !1068, size: 64, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1023, file: !330, line: 162, baseType: !470, size: 8, offset: 1088)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1023, file: !330, line: 166, baseType: !483, size: 64, offset: 1152)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !772, file: !343, line: 229, baseType: !1078, size: 128, offset: 256)
!1078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1079, size: 128, elements: !726)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !343, line: 229, flags: DIFlagFwdDecl)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !772, file: !343, line: 232, baseType: !771, size: 64, offset: 384)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !772, file: !343, line: 233, baseType: !771, size: 64, offset: 448)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !772, file: !343, line: 238, baseType: !1084, size: 64, offset: 512)
!1084 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !343, line: 235, size: 64, elements: !1085)
!1085 = !{!1086, !1092}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1084, file: !343, line: 236, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !343, line: 273, size: 128, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1088, file: !343, line: 275, baseType: !797, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1088, file: !343, line: 278, baseType: !797, size: 64, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1084, file: !343, line: 237, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !343, line: 259, size: 320, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099, !1100}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1094, file: !343, line: 261, baseType: !658, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1094, file: !343, line: 262, baseType: !658, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1094, file: !343, line: 266, baseType: !658, size: 64, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1094, file: !343, line: 267, baseType: !658, size: 64, offset: 192)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1094, file: !343, line: 270, baseType: !471, size: 32, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !772, file: !343, line: 241, baseType: !1018, size: 64, offset: 576)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !772, file: !343, line: 244, baseType: !471, size: 32, offset: 640)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !772, file: !343, line: 247, baseType: !471, size: 32, offset: 672)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !772, file: !343, line: 250, baseType: !471, size: 32, offset: 704)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !772, file: !343, line: 253, baseType: !471, size: 32, offset: 736)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !772, file: !343, line: 256, baseType: !471, size: 32, offset: 768)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !679, file: !661, line: 179, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !661, line: 150, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !661, line: 142, size: 320, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1118, !1119}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1110, file: !661, line: 144, baseType: !483, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1110, file: !661, line: 145, baseType: !658, size: 64, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1110, file: !661, line: 146, baseType: !658, size: 64, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1110, file: !661, line: 147, baseType: !1116, size: 32, offset: 192)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1117, line: 31, baseType: !471)
!1117 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1110, file: !661, line: 148, baseType: !7, size: 32, offset: 224)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1110, file: !661, line: 149, baseType: !470, size: 8, offset: 256)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !679, file: !661, line: 180, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !661, line: 162, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !661, line: 159, size: 128, elements: !1124)
!1124 = !{!1125, !1126}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1123, file: !661, line: 160, baseType: !483, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1123, file: !661, line: 161, baseType: !539, size: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !679, file: !661, line: 181, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !661, line: 181, flags: DIFlagFwdDecl)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !674, file: !661, line: 317, baseType: !1131, size: 64)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !582)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !674, file: !661, line: 318, baseType: !1133, size: 320)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !661, line: 188, size: 320, elements: !1134)
!1134 = !{!1135, !1137, !1160}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1133, file: !661, line: 190, baseType: !1136, size: 192)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 192, elements: !557)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1133, file: !661, line: 193, baseType: !1138, size: 64, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !661, line: 206, size: 320, elements: !1140)
!1140 = !{!1141, !1145, !1146, !1147, !1159}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1139, file: !661, line: 208, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !484, line: 62, baseType: !1144)
!1144 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !484, line: 61, flags: DIFlagFwdDecl)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1139, file: !661, line: 211, baseType: !7, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1139, file: !661, line: 214, baseType: !539, size: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1139, file: !661, line: 224, baseType: !1148, size: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !661, line: 202, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !661, line: 202, size: 128, elements: !1151)
!1151 = !{!1152}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1150, file: !661, line: 202, baseType: !1153, size: 128)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !661, line: 200, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !661, line: 200, size: 128, elements: !1155)
!1155 = !{!1156, !1157, !1158}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1154, file: !661, line: 200, baseType: !7, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1154, file: !661, line: 200, baseType: !7, size: 32, offset: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1154, file: !661, line: 200, baseType: !692, size: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1139, file: !661, line: 234, baseType: !1148, size: 64, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1133, file: !661, line: 197, baseType: !539, size: 64, offset: 256)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !674, file: !661, line: 319, baseType: !546, size: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !674, file: !661, line: 320, baseType: !565, size: 192)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !486, file: !135, line: 3384, baseType: !1164, size: 1472)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1165)
!1165 = !{!1166, !1187, !1188, !1189, !1190}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1164, file: !135, line: 3115, baseType: !1167, size: 1216)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1167, file: !135, line: 2985, baseType: !654, size: 960)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1167, file: !135, line: 2986, baseType: !483, size: 64, offset: 960)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1167, file: !135, line: 2987, baseType: !483, size: 64, offset: 1024)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1167, file: !135, line: 2988, baseType: !483, size: 64, offset: 1088)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1167, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1167, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1167, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1167, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1167, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1167, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1167, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1167, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1167, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1167, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1167, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1167, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1167, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1167, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1164, file: !135, line: 3117, baseType: !483, size: 64, offset: 1216)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1164, file: !135, line: 3119, baseType: !483, size: 64, offset: 1280)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1164, file: !135, line: 3121, baseType: !483, size: 64, offset: 1344)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1164, file: !135, line: 3123, baseType: !483, size: 64, offset: 1408)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !486, file: !135, line: 3385, baseType: !1192, size: 1088)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1193)
!1193 = !{!1194, !1195, !1196}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1192, file: !135, line: 2875, baseType: !654, size: 960)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1192, file: !135, line: 2876, baseType: !658, size: 64, offset: 960)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1192, file: !135, line: 2877, baseType: !1197, size: 64, offset: 1024)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1199, line: 172, size: 128, elements: !1200)
!1199 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1198, file: !1199, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1198, file: !1199, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1198, file: !1199, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1198, file: !1199, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1198, file: !1199, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1198, file: !1199, line: 195, baseType: !7, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1198, file: !1199, line: 199, baseType: !483, size: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !486, file: !135, line: 3386, baseType: !1167, size: 1216)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !486, file: !135, line: 3387, baseType: !1210, size: 1280)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1211)
!1211 = !{!1212, !1213}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1210, file: !135, line: 3094, baseType: !1167, size: 1216)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1210, file: !135, line: 3095, baseType: !1197, size: 64, offset: 1216)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !486, file: !135, line: 3388, baseType: !1215, size: 1216)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1215, file: !135, line: 2825, baseType: !616, size: 896)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1215, file: !135, line: 2827, baseType: !483, size: 64, offset: 896)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1215, file: !135, line: 2828, baseType: !483, size: 64, offset: 960)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1215, file: !135, line: 2829, baseType: !483, size: 64, offset: 1024)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1215, file: !135, line: 2830, baseType: !483, size: 64, offset: 1088)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1215, file: !135, line: 2831, baseType: !483, size: 64, offset: 1152)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !486, file: !135, line: 3389, baseType: !1224, size: 1024)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1225)
!1225 = !{!1226, !1227, !1228}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1224, file: !135, line: 2851, baseType: !654, size: 960)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1224, file: !135, line: 2852, baseType: !471, size: 32, offset: 960)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1224, file: !135, line: 2853, baseType: !471, size: 32, offset: 992)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !486, file: !135, line: 3390, baseType: !1230, size: 1024)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1231)
!1231 = !{!1232, !1233}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1230, file: !135, line: 2858, baseType: !654, size: 960)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1230, file: !135, line: 2859, baseType: !1197, size: 64, offset: 960)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !486, file: !135, line: 3391, baseType: !1235, size: 960)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1236)
!1236 = !{!1237}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1235, file: !135, line: 2863, baseType: !654, size: 960)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !486, file: !135, line: 3392, baseType: !1239, size: 1472)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1240)
!1240 = !{!1241}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1239, file: !135, line: 3305, baseType: !1164, size: 1472)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !486, file: !135, line: 3393, baseType: !1243, size: 1792)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1244)
!1244 = !{!1245, !1246, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1243, file: !135, line: 3249, baseType: !1164, size: 1472)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1243, file: !135, line: 3251, baseType: !1247, size: 64, offset: 1472)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1249, line: 463, size: 1152, elements: !1250)
!1249 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1250 = !{!1251, !1254, !1285, !1286, !1401, !1409, !1410, !1411, !1412, !1413, !1414, !1438, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1248, file: !1249, line: 464, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1249, line: 464, flags: DIFlagFwdDecl)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1248, file: !1249, line: 467, baseType: !1255, size: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !343, line: 374, size: 640, elements: !1257)
!1257 = !{!1258, !1260, !1261, !1274, !1275, !1276, !1277, !1278, !1279, !1281, !1283, !1284}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1256, file: !343, line: 377, baseType: !1259, size: 64)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !484, line: 111, baseType: !771)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1256, file: !343, line: 378, baseType: !1259, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1256, file: !343, line: 381, baseType: !1262, size: 64, offset: 128)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !343, line: 282, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !343, line: 282, size: 128, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1264, file: !343, line: 282, baseType: !1267, size: 128)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !343, line: 281, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !343, line: 281, size: 128, elements: !1269)
!1269 = !{!1270, !1271, !1272}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1268, file: !343, line: 281, baseType: !7, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1268, file: !343, line: 281, baseType: !7, size: 32, offset: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !343, line: 281, baseType: !1273, size: 64, offset: 64)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1259, size: 64, elements: !582)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1256, file: !343, line: 384, baseType: !471, size: 32, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1256, file: !343, line: 387, baseType: !471, size: 32, offset: 224)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1256, file: !343, line: 390, baseType: !471, size: 32, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1256, file: !343, line: 394, baseType: !1262, size: 64, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1256, file: !343, line: 396, baseType: !342, size: 32, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1256, file: !343, line: 399, baseType: !1280, size: 64, offset: 416)
!1280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 64, elements: !726)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1256, file: !343, line: 402, baseType: !1282, size: 64, offset: 480)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !726)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1256, file: !343, line: 406, baseType: !471, size: 32, offset: 544)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1256, file: !343, line: 409, baseType: !471, size: 32, offset: 576)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1248, file: !1249, line: 470, baseType: !798, size: 64, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1248, file: !1249, line: 473, baseType: !1287, size: 64, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1199, line: 39, size: 1152, elements: !1289)
!1289 = !{!1290, !1340, !1353, !1365, !1366, !1378, !1379, !1383, !1384, !1385, !1386, !1387}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1288, file: !1199, line: 41, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1292, line: 144, baseType: !1293)
!1292 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1292, line: 100, size: 896, elements: !1295)
!1295 = !{!1296, !1304, !1309, !1314, !1316, !1317, !1318, !1319, !1320, !1321, !1326, !1328, !1329, !1334, !1339}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1294, file: !1292, line: 102, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1292, line: 52, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1292, line: 47, baseType: !7)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1294, file: !1292, line: 105, baseType: !1305, size: 64, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1292, line: 59, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!471, !1302, !1302}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1294, file: !1292, line: 108, baseType: !1310, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1292, line: 63, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{null, !475}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1294, file: !1292, line: 111, baseType: !1315, size: 64, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1294, file: !1292, line: 114, baseType: !952, size: 64, offset: 256)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1294, file: !1292, line: 117, baseType: !952, size: 64, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1294, file: !1292, line: 120, baseType: !952, size: 64, offset: 384)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1294, file: !1292, line: 124, baseType: !7, size: 32, offset: 448)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1294, file: !1292, line: 128, baseType: !7, size: 32, offset: 480)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1294, file: !1292, line: 131, baseType: !1322, size: 64, offset: 512)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1292, line: 75, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!475, !952, !952}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1294, file: !1292, line: 132, baseType: !1327, size: 64, offset: 576)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1292, line: 78, baseType: !1311)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1294, file: !1292, line: 135, baseType: !475, size: 64, offset: 640)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1294, file: !1292, line: 136, baseType: !1330, size: 64, offset: 704)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1292, line: 82, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!475, !475, !952, !952}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1294, file: !1292, line: 137, baseType: !1335, size: 64, offset: 768)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1292, line: 83, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !475, !475}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1294, file: !1292, line: 141, baseType: !7, size: 32, offset: 832)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1288, file: !1199, line: 48, baseType: !1341, size: 64, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !391, line: 35, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !391, line: 35, size: 128, elements: !1344)
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1343, file: !391, line: 35, baseType: !1346, size: 128)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !391, line: 33, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !391, line: 33, size: 128, elements: !1348)
!1348 = !{!1349, !1350, !1351}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1347, file: !391, line: 33, baseType: !7, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1347, file: !391, line: 33, baseType: !7, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1347, file: !391, line: 33, baseType: !1352, size: 64, offset: 64)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 64, elements: !582)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1288, file: !1199, line: 51, baseType: !1354, size: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1357)
!1357 = !{!1358}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1356, file: !135, line: 183, baseType: !1359, size: 128)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1361)
!1361 = !{!1362, !1363, !1364}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1360, file: !135, line: 182, baseType: !7, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1360, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1360, file: !135, line: 182, baseType: !860, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1288, file: !1199, line: 54, baseType: !483, size: 64, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1288, file: !1199, line: 57, baseType: !1367, size: 128, offset: 256)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1368, line: 31, size: 128, elements: !1369)
!1368 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375, !1376}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1367, file: !1368, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1367, file: !1368, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1367, file: !1368, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1367, file: !1368, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1367, file: !1368, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1367, file: !1368, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1367, file: !1368, line: 56, baseType: !1377, size: 64, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !484, line: 47, baseType: !710)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1288, file: !1199, line: 60, baseType: !1367, size: 128, offset: 384)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1288, file: !1199, line: 64, baseType: !1380, size: 64, offset: 512)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1382, line: 33, flags: DIFlagFwdDecl)
!1382 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1288, file: !1199, line: 67, baseType: !483, size: 64, offset: 576)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1288, file: !1199, line: 73, baseType: !1291, size: 64, offset: 640)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1288, file: !1199, line: 77, baseType: !1377, size: 64, offset: 704)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1288, file: !1199, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1288, file: !1199, line: 82, baseType: !1388, size: 320, offset: 832)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !462, line: 62, size: 320, elements: !1389)
!1389 = !{!1390, !1396, !1397, !1398, !1399, !1400}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1388, file: !462, line: 63, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !462, line: 56, size: 128, elements: !1393)
!1393 = !{!1394, !1395}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1392, file: !462, line: 57, baseType: !1391, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1392, file: !462, line: 58, baseType: !581, size: 8, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1388, file: !462, line: 64, baseType: !7, size: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1388, file: !462, line: 66, baseType: !7, size: 32, offset: 96)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1388, file: !462, line: 68, baseType: !470, size: 8, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1388, file: !462, line: 70, baseType: !836, size: 64, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1388, file: !462, line: 71, baseType: !843, size: 64, offset: 256)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1248, file: !1249, line: 476, baseType: !1402, size: 64, offset: 256)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !330, line: 187, size: 256, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1403, file: !330, line: 189, baseType: !471, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1403, file: !330, line: 192, baseType: !1037, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1403, file: !330, line: 197, baseType: !1291, size: 64, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1403, file: !330, line: 200, baseType: !1022, size: 64, offset: 192)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1248, file: !1249, line: 479, baseType: !1291, size: 64, offset: 320)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1248, file: !1249, line: 484, baseType: !483, size: 64, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1248, file: !1249, line: 488, baseType: !483, size: 64, offset: 448)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1248, file: !1249, line: 493, baseType: !483, size: 64, offset: 512)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1248, file: !1249, line: 496, baseType: !483, size: 64, offset: 576)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1248, file: !1249, line: 501, baseType: !1415, size: 64, offset: 640)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !354, line: 2355, size: 576, elements: !1417)
!1417 = !{!1418, !1421, !1422, !1423, !1424, !1426, !1427, !1432, !1433, !1434, !1435, !1436, !1437}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1416, file: !354, line: 2356, baseType: !1419, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !354, line: 2356, flags: DIFlagFwdDecl)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1416, file: !354, line: 2357, baseType: !476, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1416, file: !354, line: 2358, baseType: !471, size: 32, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1416, file: !354, line: 2359, baseType: !471, size: 32, offset: 160)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1416, file: !354, line: 2360, baseType: !1425, size: 128, offset: 192)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 128, elements: !750)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1416, file: !354, line: 2364, baseType: !471, size: 32, offset: 320)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1416, file: !354, line: 2367, baseType: !1428, size: 128, offset: 384)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !354, line: 2349, size: 128, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1428, file: !354, line: 2351, baseType: !658, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1428, file: !354, line: 2352, baseType: !539, size: 64, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1416, file: !354, line: 2371, baseType: !353, size: 32, offset: 512)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1416, file: !354, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1416, file: !354, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1416, file: !354, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1416, file: !354, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1416, file: !354, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1248, file: !1249, line: 504, baseType: !1439, size: 64, offset: 704)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1249, line: 504, flags: DIFlagFwdDecl)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1248, file: !1249, line: 507, baseType: !1291, size: 64, offset: 768)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1248, file: !1249, line: 510, baseType: !471, size: 32, offset: 832)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1248, file: !1249, line: 513, baseType: !471, size: 32, offset: 864)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1248, file: !1249, line: 516, baseType: !608, size: 32, offset: 896)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1248, file: !1249, line: 519, baseType: !608, size: 32, offset: 928)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1248, file: !1249, line: 522, baseType: !7, size: 32, offset: 960)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1248, file: !1249, line: 523, baseType: !7, size: 32, offset: 992)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1248, file: !1249, line: 528, baseType: !476, size: 64, offset: 1024)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1248, file: !1249, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1248, file: !1249, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1248, file: !1249, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1248, file: !1249, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1248, file: !1249, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1248, file: !1249, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1248, file: !1249, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1248, file: !1249, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1248, file: !1249, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1248, file: !1249, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1248, file: !1249, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1248, file: !1249, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1248, file: !1249, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1248, file: !1249, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1248, file: !1249, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1248, file: !1249, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1243, file: !135, line: 3254, baseType: !483, size: 64, offset: 1536)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1243, file: !135, line: 3257, baseType: !483, size: 64, offset: 1600)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1243, file: !135, line: 3258, baseType: !483, size: 64, offset: 1664)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1243, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1243, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1243, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1243, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1243, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1243, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1243, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1243, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1243, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1243, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1243, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1243, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1243, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1243, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1243, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1243, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1243, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1243, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !486, file: !135, line: 3394, baseType: !1487, size: 1344)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1487, file: !135, line: 2280, baseType: !522, size: 192)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1487, file: !135, line: 2281, baseType: !483, size: 64, offset: 192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1487, file: !135, line: 2282, baseType: !483, size: 64, offset: 256)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1487, file: !135, line: 2283, baseType: !483, size: 64, offset: 320)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1487, file: !135, line: 2284, baseType: !483, size: 64, offset: 384)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1487, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1487, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1487, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1487, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1487, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1487, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1487, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1487, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1487, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1487, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1487, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1487, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1487, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1487, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1487, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1487, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1487, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1487, file: !135, line: 2306, baseType: !1116, size: 32, offset: 544)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1487, file: !135, line: 2307, baseType: !483, size: 64, offset: 576)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1487, file: !135, line: 2308, baseType: !483, size: 64, offset: 640)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1487, file: !135, line: 2314, baseType: !1515, size: 64, offset: 704)
!1515 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1516)
!1516 = !{!1517, !1518, !1519}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1515, file: !135, line: 2310, baseType: !471, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1515, file: !135, line: 2311, baseType: !476, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1515, file: !135, line: 2312, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1487, file: !135, line: 2315, baseType: !483, size: 64, offset: 768)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1487, file: !135, line: 2316, baseType: !483, size: 64, offset: 832)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1487, file: !135, line: 2317, baseType: !483, size: 64, offset: 896)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1487, file: !135, line: 2318, baseType: !483, size: 64, offset: 960)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1487, file: !135, line: 2319, baseType: !483, size: 64, offset: 1024)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1487, file: !135, line: 2320, baseType: !483, size: 64, offset: 1088)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1487, file: !135, line: 2321, baseType: !483, size: 64, offset: 1152)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1487, file: !135, line: 2322, baseType: !483, size: 64, offset: 1216)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1487, file: !135, line: 2324, baseType: !1531, size: 64, offset: 1280)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !486, file: !135, line: 3395, baseType: !1534, size: 320)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1535)
!1535 = !{!1536, !1537, !1538}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1534, file: !135, line: 1470, baseType: !522, size: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1534, file: !135, line: 1471, baseType: !483, size: 64, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1534, file: !135, line: 1472, baseType: !483, size: 64, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !486, file: !135, line: 3396, baseType: !1540, size: 320)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1541)
!1541 = !{!1542, !1543, !1544}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1540, file: !135, line: 1483, baseType: !522, size: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1540, file: !135, line: 1484, baseType: !471, size: 32, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1540, file: !135, line: 1485, baseType: !860, size: 64, offset: 256)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !486, file: !135, line: 3397, baseType: !1546, size: 384)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1546, file: !135, line: 1830, baseType: !522, size: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1546, file: !135, line: 1831, baseType: !608, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1546, file: !135, line: 1832, baseType: !483, size: 64, offset: 256)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1546, file: !135, line: 1835, baseType: !860, size: 64, offset: 320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !486, file: !135, line: 3398, baseType: !1553, size: 704)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1559, !1564}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1553, file: !135, line: 1899, baseType: !522, size: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1553, file: !135, line: 1902, baseType: !483, size: 64, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1553, file: !135, line: 1905, baseType: !807, size: 64, offset: 256)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1553, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1553, file: !135, line: 1911, baseType: !1560, size: 64, offset: 384)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1199, line: 117, size: 128, elements: !1562)
!1562 = !{!1563}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1561, file: !1199, line: 120, baseType: !1367, size: 128)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1553, file: !135, line: 1914, baseType: !848, size: 256, offset: 448)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !486, file: !135, line: 3399, baseType: !1566, size: 704)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1566, file: !135, line: 2009, baseType: !522, size: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1566, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1566, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1566, file: !135, line: 2014, baseType: !608, size: 32, offset: 224)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1566, file: !135, line: 2016, baseType: !483, size: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1566, file: !135, line: 2017, baseType: !1354, size: 64, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1566, file: !135, line: 2019, baseType: !483, size: 64, offset: 384)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1566, file: !135, line: 2020, baseType: !483, size: 64, offset: 448)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1566, file: !135, line: 2021, baseType: !483, size: 64, offset: 512)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1566, file: !135, line: 2022, baseType: !483, size: 64, offset: 576)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1566, file: !135, line: 2023, baseType: !483, size: 64, offset: 640)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !486, file: !135, line: 3400, baseType: !1580, size: 832)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1580, file: !135, line: 2431, baseType: !522, size: 192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1580, file: !135, line: 2433, baseType: !483, size: 64, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1580, file: !135, line: 2434, baseType: !483, size: 64, offset: 256)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1580, file: !135, line: 2435, baseType: !483, size: 64, offset: 320)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1580, file: !135, line: 2436, baseType: !483, size: 64, offset: 384)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1580, file: !135, line: 2437, baseType: !1354, size: 64, offset: 448)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1580, file: !135, line: 2438, baseType: !483, size: 64, offset: 512)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1580, file: !135, line: 2440, baseType: !483, size: 64, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1580, file: !135, line: 2441, baseType: !483, size: 64, offset: 640)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1580, file: !135, line: 2443, baseType: !1592, size: 128, offset: 704)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1594)
!1594 = !{!1595}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1593, file: !135, line: 182, baseType: !1359, size: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !486, file: !135, line: 3401, baseType: !1597, size: 320)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1598)
!1598 = !{!1599, !1600, !1607}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1597, file: !135, line: 3329, baseType: !522, size: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1597, file: !135, line: 3330, baseType: !1601, size: 64, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1603)
!1603 = !{!1604, !1605, !1606}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1602, file: !135, line: 3322, baseType: !1601, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1602, file: !135, line: 3323, baseType: !1601, size: 64, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1602, file: !135, line: 3324, baseType: !483, size: 64, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1597, file: !135, line: 3331, baseType: !1601, size: 64, offset: 256)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !486, file: !135, line: 3402, baseType: !1609, size: 256)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1610)
!1610 = !{!1611, !1612}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1609, file: !135, line: 1541, baseType: !522, size: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1609, file: !135, line: 1542, baseType: !1613, size: 64, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1616)
!1616 = !{!1617}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1615, file: !135, line: 1538, baseType: !1618, size: 192)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1620)
!1620 = !{!1621, !1622, !1623}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1619, file: !135, line: 1537, baseType: !7, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1619, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1619, file: !135, line: 1537, baseType: !1624, size: 128, offset: 64)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1625, size: 128, elements: !582)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1626, file: !135, line: 1533, baseType: !483, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1626, file: !135, line: 1534, baseType: !483, size: 64, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !486, file: !135, line: 3403, baseType: !1631, size: 512)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1632)
!1632 = !{!1633, !1634, !1635, !1636, !1642, !1643, !1644}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1631, file: !135, line: 1939, baseType: !522, size: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1631, file: !135, line: 1940, baseType: !608, size: 32, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1631, file: !135, line: 1941, baseType: !358, size: 32, offset: 224)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1631, file: !135, line: 1946, baseType: !1637, size: 32, offset: 256)
!1637 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1638)
!1638 = !{!1639, !1640, !1641}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1637, file: !135, line: 1943, baseType: !376, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1637, file: !135, line: 1944, baseType: !383, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1637, file: !135, line: 1945, baseType: !134, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1631, file: !135, line: 1950, baseType: !797, size: 64, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1631, file: !135, line: 1951, baseType: !797, size: 64, offset: 384)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1631, file: !135, line: 1953, baseType: !860, size: 64, offset: 448)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !486, file: !135, line: 3404, baseType: !1646, size: 1664)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1647)
!1647 = !{!1648, !1649}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1646, file: !135, line: 3338, baseType: !522, size: 192)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1646, file: !135, line: 3341, baseType: !1650, size: 1472, offset: 192)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1651, line: 410, size: 1472, elements: !1652)
!1651 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1652 = !{!1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1650, file: !1651, line: 412, baseType: !471, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1650, file: !1651, line: 413, baseType: !471, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1650, file: !1651, line: 414, baseType: !471, size: 32, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1650, file: !1651, line: 415, baseType: !471, size: 32, offset: 96)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1650, file: !1651, line: 416, baseType: !471, size: 32, offset: 128)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1650, file: !1651, line: 417, baseType: !471, size: 32, offset: 160)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1650, file: !1651, line: 418, baseType: !470, size: 8, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1650, file: !1651, line: 419, baseType: !470, size: 8, offset: 200)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1650, file: !1651, line: 420, baseType: !1662, size: 8, offset: 208)
!1662 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1650, file: !1651, line: 421, baseType: !1662, size: 8, offset: 216)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1650, file: !1651, line: 422, baseType: !1662, size: 8, offset: 224)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1650, file: !1651, line: 423, baseType: !1662, size: 8, offset: 232)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1650, file: !1651, line: 424, baseType: !1662, size: 8, offset: 240)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1650, file: !1651, line: 425, baseType: !1662, size: 8, offset: 248)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1650, file: !1651, line: 426, baseType: !1662, size: 8, offset: 256)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1650, file: !1651, line: 427, baseType: !1662, size: 8, offset: 264)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1650, file: !1651, line: 428, baseType: !1662, size: 8, offset: 272)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1650, file: !1651, line: 429, baseType: !1662, size: 8, offset: 280)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1650, file: !1651, line: 430, baseType: !1662, size: 8, offset: 288)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1650, file: !1651, line: 431, baseType: !1662, size: 8, offset: 296)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1650, file: !1651, line: 432, baseType: !1662, size: 8, offset: 304)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1650, file: !1651, line: 433, baseType: !1662, size: 8, offset: 312)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1650, file: !1651, line: 434, baseType: !1662, size: 8, offset: 320)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1650, file: !1651, line: 435, baseType: !1662, size: 8, offset: 328)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1650, file: !1651, line: 436, baseType: !1662, size: 8, offset: 336)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1650, file: !1651, line: 437, baseType: !1662, size: 8, offset: 344)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1650, file: !1651, line: 438, baseType: !1662, size: 8, offset: 352)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1650, file: !1651, line: 439, baseType: !1662, size: 8, offset: 360)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1650, file: !1651, line: 440, baseType: !1662, size: 8, offset: 368)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1650, file: !1651, line: 441, baseType: !1662, size: 8, offset: 376)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1650, file: !1651, line: 442, baseType: !1662, size: 8, offset: 384)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1650, file: !1651, line: 443, baseType: !1662, size: 8, offset: 392)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1650, file: !1651, line: 444, baseType: !1662, size: 8, offset: 400)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1650, file: !1651, line: 445, baseType: !1662, size: 8, offset: 408)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1650, file: !1651, line: 446, baseType: !1662, size: 8, offset: 416)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1650, file: !1651, line: 447, baseType: !1662, size: 8, offset: 424)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1650, file: !1651, line: 448, baseType: !1662, size: 8, offset: 432)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1650, file: !1651, line: 449, baseType: !1662, size: 8, offset: 440)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1650, file: !1651, line: 450, baseType: !1662, size: 8, offset: 448)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1650, file: !1651, line: 451, baseType: !1662, size: 8, offset: 456)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1650, file: !1651, line: 452, baseType: !1662, size: 8, offset: 464)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1650, file: !1651, line: 453, baseType: !1662, size: 8, offset: 472)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1650, file: !1651, line: 454, baseType: !1662, size: 8, offset: 480)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1650, file: !1651, line: 455, baseType: !1662, size: 8, offset: 488)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1650, file: !1651, line: 456, baseType: !1662, size: 8, offset: 496)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1650, file: !1651, line: 457, baseType: !1662, size: 8, offset: 504)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1650, file: !1651, line: 458, baseType: !1662, size: 8, offset: 512)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1650, file: !1651, line: 459, baseType: !1662, size: 8, offset: 520)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1650, file: !1651, line: 460, baseType: !1662, size: 8, offset: 528)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1650, file: !1651, line: 461, baseType: !1662, size: 8, offset: 536)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1650, file: !1651, line: 462, baseType: !1662, size: 8, offset: 544)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1650, file: !1651, line: 463, baseType: !1662, size: 8, offset: 552)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1650, file: !1651, line: 464, baseType: !1662, size: 8, offset: 560)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1650, file: !1651, line: 465, baseType: !1662, size: 8, offset: 568)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1650, file: !1651, line: 466, baseType: !1662, size: 8, offset: 576)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1650, file: !1651, line: 467, baseType: !1662, size: 8, offset: 584)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1650, file: !1651, line: 468, baseType: !1662, size: 8, offset: 592)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1650, file: !1651, line: 469, baseType: !1662, size: 8, offset: 600)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1650, file: !1651, line: 470, baseType: !1662, size: 8, offset: 608)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1650, file: !1651, line: 471, baseType: !1662, size: 8, offset: 616)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1650, file: !1651, line: 472, baseType: !1662, size: 8, offset: 624)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1650, file: !1651, line: 473, baseType: !1662, size: 8, offset: 632)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1650, file: !1651, line: 474, baseType: !1662, size: 8, offset: 640)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1650, file: !1651, line: 475, baseType: !1662, size: 8, offset: 648)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1650, file: !1651, line: 476, baseType: !1662, size: 8, offset: 656)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1650, file: !1651, line: 477, baseType: !1662, size: 8, offset: 664)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1650, file: !1651, line: 478, baseType: !1662, size: 8, offset: 672)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1650, file: !1651, line: 479, baseType: !1662, size: 8, offset: 680)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1650, file: !1651, line: 480, baseType: !1662, size: 8, offset: 688)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1650, file: !1651, line: 481, baseType: !1662, size: 8, offset: 696)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1650, file: !1651, line: 482, baseType: !1662, size: 8, offset: 704)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1650, file: !1651, line: 483, baseType: !1662, size: 8, offset: 712)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1650, file: !1651, line: 484, baseType: !1662, size: 8, offset: 720)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1650, file: !1651, line: 485, baseType: !1662, size: 8, offset: 728)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1650, file: !1651, line: 486, baseType: !1662, size: 8, offset: 736)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1650, file: !1651, line: 487, baseType: !1662, size: 8, offset: 744)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1650, file: !1651, line: 488, baseType: !1662, size: 8, offset: 752)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1650, file: !1651, line: 489, baseType: !1662, size: 8, offset: 760)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1650, file: !1651, line: 490, baseType: !1662, size: 8, offset: 768)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1650, file: !1651, line: 491, baseType: !1662, size: 8, offset: 776)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1650, file: !1651, line: 492, baseType: !1662, size: 8, offset: 784)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1650, file: !1651, line: 493, baseType: !1662, size: 8, offset: 792)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1650, file: !1651, line: 494, baseType: !1662, size: 8, offset: 800)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1650, file: !1651, line: 495, baseType: !1662, size: 8, offset: 808)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1650, file: !1651, line: 496, baseType: !1662, size: 8, offset: 816)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1650, file: !1651, line: 497, baseType: !1662, size: 8, offset: 824)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1650, file: !1651, line: 498, baseType: !1662, size: 8, offset: 832)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1650, file: !1651, line: 499, baseType: !1662, size: 8, offset: 840)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1650, file: !1651, line: 500, baseType: !1662, size: 8, offset: 848)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1650, file: !1651, line: 501, baseType: !1662, size: 8, offset: 856)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1650, file: !1651, line: 502, baseType: !1662, size: 8, offset: 864)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1650, file: !1651, line: 503, baseType: !1662, size: 8, offset: 872)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1650, file: !1651, line: 504, baseType: !1662, size: 8, offset: 880)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1650, file: !1651, line: 505, baseType: !1662, size: 8, offset: 888)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1650, file: !1651, line: 506, baseType: !1662, size: 8, offset: 896)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1650, file: !1651, line: 507, baseType: !1662, size: 8, offset: 904)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1650, file: !1651, line: 508, baseType: !1662, size: 8, offset: 912)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1650, file: !1651, line: 509, baseType: !1662, size: 8, offset: 920)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1650, file: !1651, line: 510, baseType: !1662, size: 8, offset: 928)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1650, file: !1651, line: 511, baseType: !1662, size: 8, offset: 936)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1650, file: !1651, line: 512, baseType: !1662, size: 8, offset: 944)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1650, file: !1651, line: 513, baseType: !1662, size: 8, offset: 952)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1650, file: !1651, line: 514, baseType: !1662, size: 8, offset: 960)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1650, file: !1651, line: 515, baseType: !1662, size: 8, offset: 968)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1650, file: !1651, line: 516, baseType: !1662, size: 8, offset: 976)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1650, file: !1651, line: 517, baseType: !1662, size: 8, offset: 984)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1650, file: !1651, line: 518, baseType: !1662, size: 8, offset: 992)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1650, file: !1651, line: 519, baseType: !1662, size: 8, offset: 1000)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1650, file: !1651, line: 520, baseType: !1662, size: 8, offset: 1008)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1650, file: !1651, line: 521, baseType: !1662, size: 8, offset: 1016)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1650, file: !1651, line: 522, baseType: !1662, size: 8, offset: 1024)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1650, file: !1651, line: 523, baseType: !1662, size: 8, offset: 1032)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1650, file: !1651, line: 524, baseType: !1662, size: 8, offset: 1040)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1650, file: !1651, line: 525, baseType: !1662, size: 8, offset: 1048)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1650, file: !1651, line: 526, baseType: !1662, size: 8, offset: 1056)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1650, file: !1651, line: 527, baseType: !1662, size: 8, offset: 1064)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1650, file: !1651, line: 528, baseType: !1662, size: 8, offset: 1072)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1650, file: !1651, line: 529, baseType: !1662, size: 8, offset: 1080)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1650, file: !1651, line: 530, baseType: !1662, size: 8, offset: 1088)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1650, file: !1651, line: 531, baseType: !1662, size: 8, offset: 1096)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1650, file: !1651, line: 532, baseType: !1662, size: 8, offset: 1104)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1650, file: !1651, line: 533, baseType: !1662, size: 8, offset: 1112)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1650, file: !1651, line: 534, baseType: !1662, size: 8, offset: 1120)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1650, file: !1651, line: 535, baseType: !1662, size: 8, offset: 1128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1650, file: !1651, line: 536, baseType: !1662, size: 8, offset: 1136)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1650, file: !1651, line: 537, baseType: !1662, size: 8, offset: 1144)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1650, file: !1651, line: 538, baseType: !1662, size: 8, offset: 1152)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1650, file: !1651, line: 539, baseType: !1662, size: 8, offset: 1160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1650, file: !1651, line: 540, baseType: !1662, size: 8, offset: 1168)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1650, file: !1651, line: 541, baseType: !1662, size: 8, offset: 1176)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1650, file: !1651, line: 542, baseType: !1662, size: 8, offset: 1184)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1650, file: !1651, line: 543, baseType: !1662, size: 8, offset: 1192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1650, file: !1651, line: 544, baseType: !1662, size: 8, offset: 1200)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1650, file: !1651, line: 545, baseType: !1662, size: 8, offset: 1208)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1650, file: !1651, line: 546, baseType: !1662, size: 8, offset: 1216)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1650, file: !1651, line: 547, baseType: !1662, size: 8, offset: 1224)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1650, file: !1651, line: 548, baseType: !1662, size: 8, offset: 1232)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1650, file: !1651, line: 549, baseType: !1662, size: 8, offset: 1240)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1650, file: !1651, line: 550, baseType: !1662, size: 8, offset: 1248)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1650, file: !1651, line: 551, baseType: !1662, size: 8, offset: 1256)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1650, file: !1651, line: 552, baseType: !1662, size: 8, offset: 1264)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1650, file: !1651, line: 553, baseType: !1662, size: 8, offset: 1272)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1650, file: !1651, line: 554, baseType: !1662, size: 8, offset: 1280)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1650, file: !1651, line: 555, baseType: !1662, size: 8, offset: 1288)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1650, file: !1651, line: 556, baseType: !1662, size: 8, offset: 1296)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1650, file: !1651, line: 557, baseType: !1662, size: 8, offset: 1304)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1650, file: !1651, line: 558, baseType: !1662, size: 8, offset: 1312)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1650, file: !1651, line: 559, baseType: !1662, size: 8, offset: 1320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1650, file: !1651, line: 560, baseType: !1662, size: 8, offset: 1328)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1650, file: !1651, line: 561, baseType: !1662, size: 8, offset: 1336)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1650, file: !1651, line: 562, baseType: !1662, size: 8, offset: 1344)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1650, file: !1651, line: 563, baseType: !1662, size: 8, offset: 1352)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1650, file: !1651, line: 564, baseType: !1662, size: 8, offset: 1360)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1650, file: !1651, line: 565, baseType: !1662, size: 8, offset: 1368)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1650, file: !1651, line: 566, baseType: !1662, size: 8, offset: 1376)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1650, file: !1651, line: 567, baseType: !1662, size: 8, offset: 1384)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1650, file: !1651, line: 568, baseType: !1662, size: 8, offset: 1392)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1650, file: !1651, line: 569, baseType: !1662, size: 8, offset: 1400)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1650, file: !1651, line: 570, baseType: !1662, size: 8, offset: 1408)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1650, file: !1651, line: 571, baseType: !1662, size: 8, offset: 1416)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1650, file: !1651, line: 572, baseType: !1662, size: 8, offset: 1424)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1650, file: !1651, line: 573, baseType: !1662, size: 8, offset: 1432)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1650, file: !1651, line: 574, baseType: !1662, size: 8, offset: 1440)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !486, file: !135, line: 3405, baseType: !1818, size: 384)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1819)
!1819 = !{!1820, !1821}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1818, file: !135, line: 3353, baseType: !522, size: 192)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1818, file: !135, line: 3356, baseType: !1822, size: 192, offset: 192)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1651, line: 578, size: 192, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1822, file: !1651, line: 580, baseType: !471, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1822, file: !1651, line: 581, baseType: !471, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1822, file: !1651, line: 582, baseType: !471, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1822, file: !1651, line: 583, baseType: !471, size: 32, offset: 96)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1822, file: !1651, line: 584, baseType: !470, size: 8, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1822, file: !1651, line: 585, baseType: !470, size: 8, offset: 136)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1822, file: !1651, line: 586, baseType: !470, size: 8, offset: 144)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1822, file: !1651, line: 587, baseType: !470, size: 8, offset: 152)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1822, file: !1651, line: 588, baseType: !470, size: 8, offset: 160)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1822, file: !1651, line: 589, baseType: !470, size: 8, offset: 168)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1822, file: !1651, line: 590, baseType: !470, size: 8, offset: 176)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !479, file: !480, line: 141, baseType: !483, size: 64, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !479, file: !480, line: 144, baseType: !7, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "dfsnum", scope: !479, file: !480, line: 147, baseType: !7, size: 32, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !479, file: !480, line: 148, baseType: !7, size: 32, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !479, file: !480, line: 149, baseType: !7, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "on_sccstack", scope: !479, file: !480, line: 150, baseType: !7, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "has_constants", scope: !479, file: !480, line: 153, baseType: !7, size: 1, offset: 226, flags: DIFlagBitField, extraData: i64 224)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "use_processed", scope: !479, file: !480, line: 158, baseType: !7, size: 1, offset: 227, flags: DIFlagBitField, extraData: i64 224)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "needs_insertion", scope: !479, file: !480, line: 163, baseType: !7, size: 1, offset: 228, flags: DIFlagBitField, extraData: i64 224)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_constant_t", file: !480, line: 111, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_constant_s", file: !480, line: 106, size: 128, elements: !1847)
!1847 = !{!1848, !1849, !1850}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !1846, file: !480, line: 108, baseType: !7, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !1846, file: !480, line: 109, baseType: !1301, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !1846, file: !480, line: 110, baseType: !483, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_vn_reference_t", file: !480, line: 104, baseType: !1852)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_reference_s", file: !480, line: 93, size: 384, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1882}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !1854, file: !480, line: 96, baseType: !7, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !1854, file: !480, line: 97, baseType: !1301, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1854, file: !480, line: 98, baseType: !483, size: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1854, file: !480, line: 99, baseType: !1116, size: 32, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1854, file: !480, line: 100, baseType: !483, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1854, file: !480, line: 101, baseType: !1862, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vn_reference_op_s_heap", file: !480, line: 84, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vn_reference_op_s_heap", file: !480, line: 84, size: 384, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1864, file: !480, line: 84, baseType: !1867, size: 384)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vn_reference_op_s_base", file: !480, line: 83, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vn_reference_op_s_base", file: !480, line: 83, size: 384, elements: !1869)
!1869 = !{!1870, !1871, !1872}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1868, file: !480, line: 83, baseType: !7, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1868, file: !480, line: 83, baseType: !7, size: 32, offset: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1868, file: !480, line: 83, baseType: !1873, size: 320, offset: 64)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 320, elements: !582)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_reference_op_s", file: !480, line: 79, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_reference_op_struct", file: !480, line: 72, size: 320, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1875, file: !480, line: 74, baseType: !134, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1875, file: !480, line: 75, baseType: !483, size: 64, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "op0", scope: !1875, file: !480, line: 76, baseType: !483, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "op1", scope: !1875, file: !480, line: 77, baseType: !483, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "op2", scope: !1875, file: !480, line: 78, baseType: !483, size: 64, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1854, file: !480, line: 102, baseType: !483, size: 64, offset: 320)
!1883 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_reference_t", file: !480, line: 103, baseType: !1885)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_vn_nary_op_t", file: !480, line: 47, baseType: !1887)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_nary_op_s", file: !480, line: 36, size: 512, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896, !1897}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !1889, file: !480, line: 39, baseType: !7, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1889, file: !480, line: 40, baseType: !7, size: 16, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1889, file: !480, line: 41, baseType: !7, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !1889, file: !480, line: 42, baseType: !1301, size: 32, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1889, file: !480, line: 43, baseType: !483, size: 64, offset: 128)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1889, file: !480, line: 44, baseType: !483, size: 64, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1889, file: !480, line: 45, baseType: !1898, size: 256, offset: 256)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !750)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_nary_op_t", file: !480, line: 46, baseType: !1900)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !953, line: 35, baseType: !539)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vn_ssa_aux_t_heap", file: !3, line: 164, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vn_ssa_aux_t_heap", file: !3, line: 164, size: 128, elements: !1905)
!1905 = !{!1906}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1904, file: !3, line: 164, baseType: !1907, size: 128)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vn_ssa_aux_t_base", file: !3, line: 163, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vn_ssa_aux_t_base", file: !3, line: 163, size: 128, elements: !1909)
!1909 = !{!1910, !1911, !1912}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1908, file: !3, line: 163, baseType: !7, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1908, file: !3, line: 163, baseType: !7, size: 32, offset: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1908, file: !3, line: 163, baseType: !1913, size: 64, offset: 64)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1914, size: 64, elements: !582)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_ssa_aux_t", file: !480, line: 164, baseType: !478)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_vn_reference_op_t", file: !480, line: 81, baseType: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1874)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!475, !539}
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_tables_s", file: !3, line: 108, size: 1024, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1953}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "nary", scope: !1925, file: !3, line: 110, baseType: !1291, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "phis", scope: !1925, file: !3, line: 111, baseType: !1291, size: 64, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !1925, file: !3, line: 112, baseType: !1291, size: 64, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "nary_obstack", scope: !1925, file: !3, line: 113, baseType: !738, size: 704, offset: 192)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "phis_pool", scope: !1925, file: !3, line: 114, baseType: !1932, size: 64, offset: 896)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !1933, line: 58, baseType: !1934)
!1933 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !1933, line: 32, size: 704, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1935, file: !1933, line: 34, baseType: !476, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !1935, file: !1933, line: 38, baseType: !952, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !1935, file: !1933, line: 41, baseType: !1940, size: 64, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !1933, line: 30, baseType: !1941)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !1933, line: 26, size: 64, elements: !1943)
!1943 = !{!1944}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1942, file: !1933, line: 28, baseType: !1941, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !1935, file: !1933, line: 45, baseType: !473, size: 64, offset: 192)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !1935, file: !1933, line: 49, baseType: !952, size: 64, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !1935, file: !1933, line: 51, baseType: !952, size: 64, offset: 320)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !1935, file: !1933, line: 52, baseType: !952, size: 64, offset: 384)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !1935, file: !1933, line: 53, baseType: !952, size: 64, offset: 448)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !1935, file: !1933, line: 54, baseType: !1940, size: 64, offset: 512)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1935, file: !1933, line: 55, baseType: !952, size: 64, offset: 576)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !1935, file: !1933, line: 56, baseType: !952, size: 64, offset: 640)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "references_pool", scope: !1925, file: !3, line: 115, baseType: !1932, size: 64, offset: 960)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_vn_phi_t", file: !480, line: 64, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vn_phi_s", file: !480, line: 55, size: 256, elements: !1960)
!1960 = !{!1961, !1962, !1963, !1969, !1970}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "value_id", scope: !1959, file: !480, line: 58, baseType: !7, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !1959, file: !480, line: 59, baseType: !1301, size: 32, offset: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "phiargs", scope: !1959, file: !480, line: 60, baseType: !1964, size: 64, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !135, line: 184, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !135, line: 184, size: 128, elements: !1967)
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1966, file: !135, line: 184, baseType: !1359, size: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1959, file: !480, line: 61, baseType: !1259, size: 64, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1959, file: !480, line: 62, baseType: !483, size: 64, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_phi_t", file: !480, line: 63, baseType: !1972)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !462, line: 30, baseType: !1974)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !135, line: 1893, baseType: !848)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !483)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !462, line: 27, baseType: !841)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ssa_op_iter_heap", file: !3, line: 2876, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ssa_op_iter_heap", file: !3, line: 2876, size: 384, elements: !1982)
!1982 = !{!1983}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1981, file: !3, line: 2876, baseType: !1984, size: 384)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ssa_op_iter_base", file: !3, line: 2875, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ssa_op_iter_base", file: !3, line: 2875, size: 384, elements: !1986)
!1986 = !{!1987, !1988, !1989}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1985, file: !3, line: 2875, baseType: !7, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1985, file: !3, line: 2875, baseType: !7, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1985, file: !3, line: 2875, baseType: !1990, size: 320, offset: 64)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1991, size: 320, elements: !582)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !462, line: 140, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !462, line: 131, size: 320, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1998, !2000, !2001, !2002}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1992, file: !462, line: 133, baseType: !470, size: 8)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !1992, file: !462, line: 134, baseType: !461, size: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !1992, file: !462, line: 135, baseType: !1997, size: 64, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !462, line: 42, baseType: !836)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1992, file: !462, line: 136, baseType: !1999, size: 64, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !462, line: 50, baseType: !843)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !1992, file: !462, line: 137, baseType: !471, size: 32, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !1992, file: !462, line: 138, baseType: !471, size: 32, offset: 224)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !1992, file: !462, line: 139, baseType: !807, size: 64, offset: 256)
!2003 = !{!2004, !2006, !2008, !2011, !2013, !2015, !2017, !2019, !2021, !2023, !0, !2025, !2027, !2029, !2031, !2033}
!2004 = !DIGlobalVariableExpression(var: !2005, expr: !DIExpression())
!2005 = distinct !DIGlobalVariable(name: "constant_to_value_id", scope: !2, file: !3, line: 118, type: !1291, isLocal: true, isDefinition: true)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "constant_value_ids", scope: !2, file: !3, line: 119, type: !1377, isLocal: true, isDefinition: true)
!2008 = !DIGlobalVariableExpression(var: !2009, expr: !DIExpression())
!2009 = distinct !DIGlobalVariable(name: "valid_info", scope: !2, file: !3, line: 125, type: !2010, isLocal: true, isDefinition: true)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_tables_t", file: !3, line: 116, baseType: !1924)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "optimistic_info", scope: !2, file: !3, line: 130, type: !2010, isLocal: true, isDefinition: true)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "current_info", scope: !2, file: !3, line: 136, type: !2010, isLocal: true, isDefinition: true)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "rpo_numbers", scope: !2, file: !3, line: 141, type: !1923, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "VN_TOP", scope: !2, file: !3, line: 148, type: !483, isLocal: false, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "next_value_id", scope: !2, file: !3, line: 152, type: !7, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "sccstack", scope: !2, file: !3, line: 158, type: !1964, isLocal: true, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "may_insert", scope: !2, file: !3, line: 160, type: !470, isLocal: true, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "vn_ssa_aux_obstack", scope: !2, file: !3, line: 171, type: !738, isLocal: true, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "shared_lookup_references", scope: !2, file: !3, line: 931, type: !1862, isLocal: true, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "shared_lookup_phiargs", scope: !2, file: !3, line: 1708, type: !1964, isLocal: true, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "last_vuse_ptr", scope: !2, file: !3, line: 990, type: !841, isLocal: true, isDefinition: true)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "next_dfs_num", scope: !2, file: !3, line: 157, type: !7, isLocal: true, isDefinition: true)
!2035 = !{i32 2, !"Dwarf Version", i32 4}
!2036 = !{i32 2, !"Debug Info Version", i32 3}
!2037 = !{i32 1, !"wchar_size", i32 4}
!2038 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2039 = distinct !DISubprogram(name: "vprintf", scope: !2040, file: !2040, line: 39, type: !2041, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2051)
!2040 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2041 = !DISubroutineType(types: !2042)
!2042 = !{!471, !2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !476)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2046)
!2046 = !{!2047, !2048, !2049, !2050}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2045, file: !3, baseType: !7, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2045, file: !3, baseType: !7, size: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2045, file: !3, baseType: !475, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2045, file: !3, baseType: !475, size: 64, offset: 128)
!2051 = !{!2052, !2053}
!2052 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2039, file: !2040, line: 39, type: !2043)
!2053 = !DILocalVariable(name: "__arg", arg: 2, scope: !2039, file: !2040, line: 39, type: !2044)
!2054 = !DILocation(line: 0, scope: !2039)
!2055 = !DILocation(line: 41, column: 20, scope: !2039)
!2056 = !DILocation(line: 41, column: 10, scope: !2039)
!2057 = !DILocation(line: 41, column: 3, scope: !2039)
!2058 = distinct !DISubprogram(name: "getchar", scope: !2040, file: !2040, line: 47, type: !2059, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2061)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{!471}
!2061 = !{}
!2062 = !DILocation(line: 49, column: 16, scope: !2058)
!2063 = !DILocation(line: 49, column: 10, scope: !2058)
!2064 = !DILocation(line: 49, column: 3, scope: !2058)
!2065 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2040, file: !2040, line: 56, type: !2066, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2118)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!471, !2068}
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2070, line: 7, baseType: !2071)
!2070 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2072, line: 49, size: 1728, elements: !2073)
!2072 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2073 = !{!2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2089, !2091, !2092, !2093, !2096, !2097, !2098, !2099, !2102, !2104, !2107, !2110, !2111, !2112, !2113, !2114}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2071, file: !2072, line: 51, baseType: !471, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2071, file: !2072, line: 54, baseType: !473, size: 64, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2071, file: !2072, line: 55, baseType: !473, size: 64, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2071, file: !2072, line: 56, baseType: !473, size: 64, offset: 192)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2071, file: !2072, line: 57, baseType: !473, size: 64, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2071, file: !2072, line: 58, baseType: !473, size: 64, offset: 320)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2071, file: !2072, line: 59, baseType: !473, size: 64, offset: 384)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2071, file: !2072, line: 60, baseType: !473, size: 64, offset: 448)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2071, file: !2072, line: 61, baseType: !473, size: 64, offset: 512)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2071, file: !2072, line: 64, baseType: !473, size: 64, offset: 576)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2071, file: !2072, line: 65, baseType: !473, size: 64, offset: 640)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2071, file: !2072, line: 66, baseType: !473, size: 64, offset: 704)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2071, file: !2072, line: 68, baseType: !2087, size: 64, offset: 768)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2072, line: 36, flags: DIFlagFwdDecl)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2071, file: !2072, line: 70, baseType: !2090, size: 64, offset: 832)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2071, file: !2072, line: 72, baseType: !471, size: 32, offset: 896)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2071, file: !2072, line: 73, baseType: !471, size: 32, offset: 928)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2071, file: !2072, line: 74, baseType: !2094, size: 64, offset: 960)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2095, line: 152, baseType: !539)
!2095 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2071, file: !2072, line: 77, baseType: !1883, size: 16, offset: 1024)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2071, file: !2072, line: 78, baseType: !1662, size: 8, offset: 1040)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2071, file: !2072, line: 79, baseType: !581, size: 8, offset: 1048)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2071, file: !2072, line: 81, baseType: !2100, size: 64, offset: 1088)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2072, line: 43, baseType: null)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2071, file: !2072, line: 89, baseType: !2103, size: 64, offset: 1152)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2095, line: 153, baseType: !539)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2071, file: !2072, line: 91, baseType: !2105, size: 64, offset: 1216)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2072, line: 37, flags: DIFlagFwdDecl)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2071, file: !2072, line: 92, baseType: !2108, size: 64, offset: 1280)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2072, line: 38, flags: DIFlagFwdDecl)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2071, file: !2072, line: 93, baseType: !2090, size: 64, offset: 1344)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2071, file: !2072, line: 94, baseType: !475, size: 64, offset: 1408)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2071, file: !2072, line: 95, baseType: !952, size: 64, offset: 1472)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2071, file: !2072, line: 96, baseType: !471, size: 32, offset: 1536)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2071, file: !2072, line: 98, baseType: !2115, size: 160, offset: 1568)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 160, elements: !2116)
!2116 = !{!2117}
!2117 = !DISubrange(count: 20)
!2118 = !{!2119}
!2119 = !DILocalVariable(name: "__fp", arg: 1, scope: !2065, file: !2040, line: 56, type: !2068)
!2120 = !DILocation(line: 0, scope: !2065)
!2121 = !DILocation(line: 58, column: 10, scope: !2065)
!2122 = !DILocation(line: 58, column: 3, scope: !2065)
!2123 = distinct !DISubprogram(name: "getc_unlocked", scope: !2040, file: !2040, line: 66, type: !2066, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2124)
!2124 = !{!2125}
!2125 = !DILocalVariable(name: "__fp", arg: 1, scope: !2123, file: !2040, line: 66, type: !2068)
!2126 = !DILocation(line: 0, scope: !2123)
!2127 = !DILocation(line: 68, column: 10, scope: !2123)
!2128 = !DILocation(line: 68, column: 3, scope: !2123)
!2129 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2040, file: !2040, line: 73, type: !2059, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2061)
!2130 = !DILocation(line: 75, column: 10, scope: !2129)
!2131 = !DILocation(line: 75, column: 3, scope: !2129)
!2132 = distinct !DISubprogram(name: "putchar", scope: !2040, file: !2040, line: 82, type: !2133, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2135)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{!471, !471}
!2135 = !{!2136}
!2136 = !DILocalVariable(name: "__c", arg: 1, scope: !2132, file: !2040, line: 82, type: !471)
!2137 = !DILocation(line: 0, scope: !2132)
!2138 = !DILocation(line: 84, column: 21, scope: !2132)
!2139 = !DILocation(line: 84, column: 10, scope: !2132)
!2140 = !DILocation(line: 84, column: 3, scope: !2132)
!2141 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2040, file: !2040, line: 91, type: !2142, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2144)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!471, !471, !2068}
!2144 = !{!2145, !2146}
!2145 = !DILocalVariable(name: "__c", arg: 1, scope: !2141, file: !2040, line: 91, type: !471)
!2146 = !DILocalVariable(name: "__stream", arg: 2, scope: !2141, file: !2040, line: 91, type: !2068)
!2147 = !DILocation(line: 0, scope: !2141)
!2148 = !DILocation(line: 93, column: 10, scope: !2141)
!2149 = !DILocation(line: 93, column: 3, scope: !2141)
!2150 = distinct !DISubprogram(name: "putc_unlocked", scope: !2040, file: !2040, line: 101, type: !2142, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2151)
!2151 = !{!2152, !2153}
!2152 = !DILocalVariable(name: "__c", arg: 1, scope: !2150, file: !2040, line: 101, type: !471)
!2153 = !DILocalVariable(name: "__stream", arg: 2, scope: !2150, file: !2040, line: 101, type: !2068)
!2154 = !DILocation(line: 0, scope: !2150)
!2155 = !DILocation(line: 103, column: 10, scope: !2150)
!2156 = !DILocation(line: 103, column: 3, scope: !2150)
!2157 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2040, file: !2040, line: 108, type: !2133, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2158)
!2158 = !{!2159}
!2159 = !DILocalVariable(name: "__c", arg: 1, scope: !2157, file: !2040, line: 108, type: !471)
!2160 = !DILocation(line: 0, scope: !2157)
!2161 = !DILocation(line: 110, column: 10, scope: !2157)
!2162 = !DILocation(line: 110, column: 3, scope: !2157)
!2163 = distinct !DISubprogram(name: "getline", scope: !2040, file: !2040, line: 118, type: !2164, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2168)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!2166, !472, !2167, !2068}
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2095, line: 193, baseType: !539)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!2168 = !{!2169, !2170, !2171}
!2169 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2163, file: !2040, line: 118, type: !472)
!2170 = !DILocalVariable(name: "__n", arg: 2, scope: !2163, file: !2040, line: 118, type: !2167)
!2171 = !DILocalVariable(name: "__stream", arg: 3, scope: !2163, file: !2040, line: 118, type: !2068)
!2172 = !DILocation(line: 0, scope: !2163)
!2173 = !DILocation(line: 120, column: 10, scope: !2163)
!2174 = !DILocation(line: 120, column: 3, scope: !2163)
!2175 = distinct !DISubprogram(name: "feof_unlocked", scope: !2040, file: !2040, line: 128, type: !2066, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2176)
!2176 = !{!2177}
!2177 = !DILocalVariable(name: "__stream", arg: 1, scope: !2175, file: !2040, line: 128, type: !2068)
!2178 = !DILocation(line: 0, scope: !2175)
!2179 = !DILocation(line: 130, column: 10, scope: !2175)
!2180 = !DILocation(line: 130, column: 3, scope: !2175)
!2181 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2040, file: !2040, line: 135, type: !2066, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2182)
!2182 = !{!2183}
!2183 = !DILocalVariable(name: "__stream", arg: 1, scope: !2181, file: !2040, line: 135, type: !2068)
!2184 = !DILocation(line: 0, scope: !2181)
!2185 = !DILocation(line: 137, column: 10, scope: !2181)
!2186 = !DILocation(line: 137, column: 3, scope: !2181)
!2187 = distinct !DISubprogram(name: "tolower", scope: !2188, file: !2188, line: 207, type: !2133, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2189)
!2188 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2189 = !{!2190}
!2190 = !DILocalVariable(name: "__c", arg: 1, scope: !2187, file: !2188, line: 207, type: !471)
!2191 = !DILocation(line: 0, scope: !2187)
!2192 = !DILocation(line: 209, column: 22, scope: !2187)
!2193 = !DILocation(line: 209, column: 39, scope: !2187)
!2194 = !DILocation(line: 209, column: 38, scope: !2187)
!2195 = !DILocation(line: 209, column: 37, scope: !2187)
!2196 = !DILocation(line: 209, column: 10, scope: !2187)
!2197 = !DILocation(line: 209, column: 3, scope: !2187)
!2198 = distinct !DISubprogram(name: "toupper", scope: !2188, file: !2188, line: 213, type: !2133, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2199)
!2199 = !{!2200}
!2200 = !DILocalVariable(name: "__c", arg: 1, scope: !2198, file: !2188, line: 213, type: !471)
!2201 = !DILocation(line: 0, scope: !2198)
!2202 = !DILocation(line: 215, column: 22, scope: !2198)
!2203 = !DILocation(line: 215, column: 39, scope: !2198)
!2204 = !DILocation(line: 215, column: 38, scope: !2198)
!2205 = !DILocation(line: 215, column: 37, scope: !2198)
!2206 = !DILocation(line: 215, column: 10, scope: !2198)
!2207 = !DILocation(line: 215, column: 3, scope: !2198)
!2208 = distinct !DISubprogram(name: "atoi", scope: !2209, file: !2209, line: 361, type: !2210, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2212)
!2209 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!471, !476}
!2212 = !{!2213}
!2213 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2208, file: !2209, line: 361, type: !476)
!2214 = !DILocation(line: 0, scope: !2208)
!2215 = !DILocation(line: 363, column: 16, scope: !2208)
!2216 = !DILocation(line: 363, column: 10, scope: !2208)
!2217 = !DILocation(line: 363, column: 3, scope: !2208)
!2218 = distinct !DISubprogram(name: "atol", scope: !2209, file: !2209, line: 366, type: !2219, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2221)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!539, !476}
!2221 = !{!2222}
!2222 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2218, file: !2209, line: 366, type: !476)
!2223 = !DILocation(line: 0, scope: !2218)
!2224 = !DILocation(line: 368, column: 10, scope: !2218)
!2225 = !DILocation(line: 368, column: 3, scope: !2218)
!2226 = distinct !DISubprogram(name: "atoll", scope: !2209, file: !2209, line: 373, type: !2227, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2230)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!2229, !476}
!2229 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2230 = !{!2231}
!2231 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2226, file: !2209, line: 373, type: !476)
!2232 = !DILocation(line: 0, scope: !2226)
!2233 = !DILocation(line: 375, column: 10, scope: !2226)
!2234 = !DILocation(line: 375, column: 3, scope: !2226)
!2235 = distinct !DISubprogram(name: "bsearch", scope: !2236, file: !2236, line: 20, type: !2237, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2240)
!2236 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2237 = !DISubroutineType(types: !2238)
!2238 = !{!475, !1302, !1302, !952, !952, !2239}
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2209, line: 808, baseType: !1306)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2241 = !DILocalVariable(name: "__key", arg: 1, scope: !2235, file: !2236, line: 20, type: !1302)
!2242 = !DILocalVariable(name: "__base", arg: 2, scope: !2235, file: !2236, line: 20, type: !1302)
!2243 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2235, file: !2236, line: 20, type: !952)
!2244 = !DILocalVariable(name: "__size", arg: 4, scope: !2235, file: !2236, line: 20, type: !952)
!2245 = !DILocalVariable(name: "__compar", arg: 5, scope: !2235, file: !2236, line: 21, type: !2239)
!2246 = !DILocalVariable(name: "__l", scope: !2235, file: !2236, line: 23, type: !952)
!2247 = !DILocalVariable(name: "__u", scope: !2235, file: !2236, line: 23, type: !952)
!2248 = !DILocalVariable(name: "__idx", scope: !2235, file: !2236, line: 23, type: !952)
!2249 = !DILocalVariable(name: "__p", scope: !2235, file: !2236, line: 24, type: !1302)
!2250 = !DILocalVariable(name: "__comparison", scope: !2235, file: !2236, line: 25, type: !471)
!2251 = !DILocation(line: 0, scope: !2235)
!2252 = !DILocation(line: 29, column: 3, scope: !2235)
!2253 = !DILocation(line: 27, column: 7, scope: !2235)
!2254 = !DILocation(line: 29, column: 14, scope: !2235)
!2255 = !DILocation(line: 31, column: 20, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2235, file: !2236, line: 30, column: 5)
!2257 = !DILocation(line: 31, column: 27, scope: !2256)
!2258 = !DILocation(line: 32, column: 56, scope: !2256)
!2259 = !DILocation(line: 32, column: 47, scope: !2256)
!2260 = !DILocation(line: 33, column: 22, scope: !2256)
!2261 = !DILocation(line: 34, column: 24, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2256, file: !2236, line: 34, column: 11)
!2263 = !DILocation(line: 34, column: 11, scope: !2256)
!2264 = !DILocation(line: 36, column: 29, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2262, file: !2236, line: 36, column: 16)
!2266 = !DILocation(line: 36, column: 16, scope: !2262)
!2267 = !DILocation(line: 37, column: 14, scope: !2265)
!2268 = distinct !{!2268, !2252, !2269}
!2269 = !DILocation(line: 40, column: 5, scope: !2235)
!2270 = !DILocation(line: 43, column: 1, scope: !2235)
!2271 = distinct !DISubprogram(name: "atof", scope: !2272, file: !2272, line: 25, type: !2273, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2276)
!2272 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!2275, !476}
!2275 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2276 = !{!2277}
!2277 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2271, file: !2272, line: 25, type: !476)
!2278 = !DILocation(line: 0, scope: !2271)
!2279 = !DILocation(line: 27, column: 10, scope: !2271)
!2280 = !DILocation(line: 27, column: 3, scope: !2271)
!2281 = distinct !DISubprogram(name: "strtoimax", scope: !2282, file: !2282, line: 324, type: !2283, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2289)
!2282 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!2285, !2043, !2288, !471}
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2286, line: 101, baseType: !2287)
!2286 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2095, line: 72, baseType: !539)
!2288 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !472)
!2289 = !{!2290, !2291, !2292}
!2290 = !DILocalVariable(name: "nptr", arg: 1, scope: !2281, file: !2282, line: 324, type: !2043)
!2291 = !DILocalVariable(name: "endptr", arg: 2, scope: !2281, file: !2282, line: 324, type: !2288)
!2292 = !DILocalVariable(name: "base", arg: 3, scope: !2281, file: !2282, line: 324, type: !471)
!2293 = !DILocation(line: 0, scope: !2281)
!2294 = !DILocation(line: 327, column: 10, scope: !2281)
!2295 = !DILocation(line: 327, column: 3, scope: !2281)
!2296 = distinct !DISubprogram(name: "strtoumax", scope: !2282, file: !2282, line: 336, type: !2297, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2301)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!2299, !2043, !2288, !471}
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2286, line: 102, baseType: !2300)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2095, line: 73, baseType: !537)
!2301 = !{!2302, !2303, !2304}
!2302 = !DILocalVariable(name: "nptr", arg: 1, scope: !2296, file: !2282, line: 336, type: !2043)
!2303 = !DILocalVariable(name: "endptr", arg: 2, scope: !2296, file: !2282, line: 336, type: !2288)
!2304 = !DILocalVariable(name: "base", arg: 3, scope: !2296, file: !2282, line: 336, type: !471)
!2305 = !DILocation(line: 0, scope: !2296)
!2306 = !DILocation(line: 339, column: 10, scope: !2296)
!2307 = !DILocation(line: 339, column: 3, scope: !2296)
!2308 = distinct !DISubprogram(name: "wcstoimax", scope: !2282, file: !2282, line: 348, type: !2309, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2318)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!2285, !2311, !2315, !471}
!2311 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2312)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2314)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2282, line: 34, baseType: !471)
!2315 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2316)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2318 = !{!2319, !2320, !2321}
!2319 = !DILocalVariable(name: "nptr", arg: 1, scope: !2308, file: !2282, line: 348, type: !2311)
!2320 = !DILocalVariable(name: "endptr", arg: 2, scope: !2308, file: !2282, line: 348, type: !2315)
!2321 = !DILocalVariable(name: "base", arg: 3, scope: !2308, file: !2282, line: 348, type: !471)
!2322 = !DILocation(line: 0, scope: !2308)
!2323 = !DILocation(line: 351, column: 10, scope: !2308)
!2324 = !DILocation(line: 351, column: 3, scope: !2308)
!2325 = distinct !DISubprogram(name: "wcstoumax", scope: !2282, file: !2282, line: 362, type: !2326, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2328)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!2299, !2311, !2315, !471}
!2328 = !{!2329, !2330, !2331}
!2329 = !DILocalVariable(name: "nptr", arg: 1, scope: !2325, file: !2282, line: 362, type: !2311)
!2330 = !DILocalVariable(name: "endptr", arg: 2, scope: !2325, file: !2282, line: 362, type: !2315)
!2331 = !DILocalVariable(name: "base", arg: 3, scope: !2325, file: !2282, line: 362, type: !471)
!2332 = !DILocation(line: 0, scope: !2325)
!2333 = !DILocation(line: 365, column: 10, scope: !2325)
!2334 = !DILocation(line: 365, column: 3, scope: !2325)
!2335 = distinct !DISubprogram(name: "stat", scope: !2336, file: !2336, line: 453, type: !2337, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2374)
!2336 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!471, !476, !2339}
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2341, line: 46, size: 1152, elements: !2342)
!2341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2342 = !{!2343, !2345, !2347, !2349, !2351, !2353, !2355, !2356, !2357, !2358, !2360, !2362, !2370, !2371, !2372}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2340, file: !2341, line: 48, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2095, line: 145, baseType: !537)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2340, file: !2341, line: 53, baseType: !2346, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2095, line: 148, baseType: !537)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2340, file: !2341, line: 61, baseType: !2348, size: 64, offset: 128)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2095, line: 151, baseType: !537)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2340, file: !2341, line: 62, baseType: !2350, size: 32, offset: 192)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2095, line: 150, baseType: !7)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2340, file: !2341, line: 64, baseType: !2352, size: 32, offset: 224)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2095, line: 146, baseType: !7)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2340, file: !2341, line: 65, baseType: !2354, size: 32, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2095, line: 147, baseType: !7)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2340, file: !2341, line: 67, baseType: !471, size: 32, offset: 288)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2340, file: !2341, line: 69, baseType: !2344, size: 64, offset: 320)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2340, file: !2341, line: 74, baseType: !2094, size: 64, offset: 384)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2340, file: !2341, line: 78, baseType: !2359, size: 64, offset: 448)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2095, line: 174, baseType: !539)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2340, file: !2341, line: 80, baseType: !2361, size: 64, offset: 512)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2095, line: 179, baseType: !539)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2340, file: !2341, line: 91, baseType: !2363, size: 128, offset: 576)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2364, line: 10, size: 128, elements: !2365)
!2364 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2365 = !{!2366, !2368}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2363, file: !2364, line: 12, baseType: !2367, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2095, line: 160, baseType: !539)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2363, file: !2364, line: 16, baseType: !2369, size: 64, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2095, line: 196, baseType: !539)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2340, file: !2341, line: 92, baseType: !2363, size: 128, offset: 704)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2340, file: !2341, line: 93, baseType: !2363, size: 128, offset: 832)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2340, file: !2341, line: 106, baseType: !2373, size: 192, offset: 960)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2369, size: 192, elements: !557)
!2374 = !{!2375, !2376}
!2375 = !DILocalVariable(name: "__path", arg: 1, scope: !2335, file: !2336, line: 453, type: !476)
!2376 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2335, file: !2336, line: 453, type: !2339)
!2377 = !DILocation(line: 0, scope: !2335)
!2378 = !DILocation(line: 455, column: 10, scope: !2335)
!2379 = !DILocation(line: 455, column: 3, scope: !2335)
!2380 = distinct !DISubprogram(name: "lstat", scope: !2336, file: !2336, line: 460, type: !2337, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2381)
!2381 = !{!2382, !2383}
!2382 = !DILocalVariable(name: "__path", arg: 1, scope: !2380, file: !2336, line: 460, type: !476)
!2383 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2380, file: !2336, line: 460, type: !2339)
!2384 = !DILocation(line: 0, scope: !2380)
!2385 = !DILocation(line: 462, column: 10, scope: !2380)
!2386 = !DILocation(line: 462, column: 3, scope: !2380)
!2387 = distinct !DISubprogram(name: "fstat", scope: !2336, file: !2336, line: 467, type: !2388, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2390)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!471, !471, !2339}
!2390 = !{!2391, !2392}
!2391 = !DILocalVariable(name: "__fd", arg: 1, scope: !2387, file: !2336, line: 467, type: !471)
!2392 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2387, file: !2336, line: 467, type: !2339)
!2393 = !DILocation(line: 0, scope: !2387)
!2394 = !DILocation(line: 469, column: 10, scope: !2387)
!2395 = !DILocation(line: 469, column: 3, scope: !2387)
!2396 = distinct !DISubprogram(name: "fstatat", scope: !2336, file: !2336, line: 474, type: !2397, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2399)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{!471, !471, !476, !2339, !471}
!2399 = !{!2400, !2401, !2402, !2403}
!2400 = !DILocalVariable(name: "__fd", arg: 1, scope: !2396, file: !2336, line: 474, type: !471)
!2401 = !DILocalVariable(name: "__filename", arg: 2, scope: !2396, file: !2336, line: 474, type: !476)
!2402 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2396, file: !2336, line: 474, type: !2339)
!2403 = !DILocalVariable(name: "__flag", arg: 4, scope: !2396, file: !2336, line: 474, type: !471)
!2404 = !DILocation(line: 0, scope: !2396)
!2405 = !DILocation(line: 477, column: 10, scope: !2396)
!2406 = !DILocation(line: 477, column: 3, scope: !2396)
!2407 = distinct !DISubprogram(name: "mknod", scope: !2336, file: !2336, line: 483, type: !2408, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2410)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!471, !476, !2350, !2344}
!2410 = !{!2411, !2412, !2413}
!2411 = !DILocalVariable(name: "__path", arg: 1, scope: !2407, file: !2336, line: 483, type: !476)
!2412 = !DILocalVariable(name: "__mode", arg: 2, scope: !2407, file: !2336, line: 483, type: !2350)
!2413 = !DILocalVariable(name: "__dev", arg: 3, scope: !2407, file: !2336, line: 483, type: !2344)
!2414 = !DILocation(line: 0, scope: !2407)
!2415 = !DILocation(line: 485, column: 10, scope: !2407)
!2416 = !DILocation(line: 485, column: 3, scope: !2407)
!2417 = distinct !DISubprogram(name: "mknodat", scope: !2336, file: !2336, line: 491, type: !2418, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2420)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!471, !471, !476, !2350, !2344}
!2420 = !{!2421, !2422, !2423, !2424}
!2421 = !DILocalVariable(name: "__fd", arg: 1, scope: !2417, file: !2336, line: 491, type: !471)
!2422 = !DILocalVariable(name: "__path", arg: 2, scope: !2417, file: !2336, line: 491, type: !476)
!2423 = !DILocalVariable(name: "__mode", arg: 3, scope: !2417, file: !2336, line: 491, type: !2350)
!2424 = !DILocalVariable(name: "__dev", arg: 4, scope: !2417, file: !2336, line: 491, type: !2344)
!2425 = !DILocation(line: 0, scope: !2417)
!2426 = !DILocation(line: 494, column: 10, scope: !2417)
!2427 = !DILocation(line: 494, column: 3, scope: !2417)
!2428 = distinct !DISubprogram(name: "stat64", scope: !2336, file: !2336, line: 502, type: !2429, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{!471, !476, !2431}
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2341, line: 119, size: 1152, elements: !2433)
!2433 = !{!2434, !2435, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2447, !2448, !2449, !2450}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2432, file: !2341, line: 121, baseType: !2344, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2432, file: !2341, line: 123, baseType: !2436, size: 64, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2095, line: 149, baseType: !537)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2432, file: !2341, line: 124, baseType: !2348, size: 64, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2432, file: !2341, line: 125, baseType: !2350, size: 32, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2432, file: !2341, line: 132, baseType: !2352, size: 32, offset: 224)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2432, file: !2341, line: 133, baseType: !2354, size: 32, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2432, file: !2341, line: 135, baseType: !471, size: 32, offset: 288)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2432, file: !2341, line: 136, baseType: !2344, size: 64, offset: 320)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2432, file: !2341, line: 137, baseType: !2094, size: 64, offset: 384)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2432, file: !2341, line: 143, baseType: !2359, size: 64, offset: 448)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2432, file: !2341, line: 144, baseType: !2446, size: 64, offset: 512)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2095, line: 180, baseType: !539)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2432, file: !2341, line: 152, baseType: !2363, size: 128, offset: 576)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2432, file: !2341, line: 153, baseType: !2363, size: 128, offset: 704)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2432, file: !2341, line: 154, baseType: !2363, size: 128, offset: 832)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2432, file: !2341, line: 164, baseType: !2373, size: 192, offset: 960)
!2451 = !{!2452, !2453}
!2452 = !DILocalVariable(name: "__path", arg: 1, scope: !2428, file: !2336, line: 502, type: !476)
!2453 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2428, file: !2336, line: 502, type: !2431)
!2454 = !DILocation(line: 0, scope: !2428)
!2455 = !DILocation(line: 504, column: 10, scope: !2428)
!2456 = !DILocation(line: 504, column: 3, scope: !2428)
!2457 = distinct !DISubprogram(name: "lstat64", scope: !2336, file: !2336, line: 509, type: !2429, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2458)
!2458 = !{!2459, !2460}
!2459 = !DILocalVariable(name: "__path", arg: 1, scope: !2457, file: !2336, line: 509, type: !476)
!2460 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2457, file: !2336, line: 509, type: !2431)
!2461 = !DILocation(line: 0, scope: !2457)
!2462 = !DILocation(line: 511, column: 10, scope: !2457)
!2463 = !DILocation(line: 511, column: 3, scope: !2457)
!2464 = distinct !DISubprogram(name: "fstat64", scope: !2336, file: !2336, line: 516, type: !2465, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2467)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{!471, !471, !2431}
!2467 = !{!2468, !2469}
!2468 = !DILocalVariable(name: "__fd", arg: 1, scope: !2464, file: !2336, line: 516, type: !471)
!2469 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2464, file: !2336, line: 516, type: !2431)
!2470 = !DILocation(line: 0, scope: !2464)
!2471 = !DILocation(line: 518, column: 10, scope: !2464)
!2472 = !DILocation(line: 518, column: 3, scope: !2464)
!2473 = distinct !DISubprogram(name: "fstatat64", scope: !2336, file: !2336, line: 523, type: !2474, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2476)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!471, !471, !476, !2431, !471}
!2476 = !{!2477, !2478, !2479, !2480}
!2477 = !DILocalVariable(name: "__fd", arg: 1, scope: !2473, file: !2336, line: 523, type: !471)
!2478 = !DILocalVariable(name: "__filename", arg: 2, scope: !2473, file: !2336, line: 523, type: !476)
!2479 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2473, file: !2336, line: 523, type: !2431)
!2480 = !DILocalVariable(name: "__flag", arg: 4, scope: !2473, file: !2336, line: 523, type: !471)
!2481 = !DILocation(line: 0, scope: !2473)
!2482 = !DILocation(line: 526, column: 10, scope: !2473)
!2483 = !DILocation(line: 526, column: 3, scope: !2473)
!2484 = distinct !DISubprogram(name: "VN_INFO", scope: !3, file: !3, line: 176, type: !2485, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2487)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!1914, !483}
!2487 = !{!2488, !2489}
!2488 = !DILocalVariable(name: "name", arg: 1, scope: !2484, file: !3, line: 176, type: !483)
!2489 = !DILocalVariable(name: "res", scope: !2484, file: !3, line: 178, type: !1914)
!2490 = !DILocation(line: 0, scope: !2484)
!2491 = !DILocation(line: 178, column: 22, scope: !2484)
!2492 = !DILocation(line: 180, column: 3, scope: !2484)
!2493 = !DILocation(line: 181, column: 3, scope: !2484)
!2494 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_base_index", scope: !3, file: !3, line: 163, type: !2495, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2499)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!1914, !2497, !7}
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!2499 = !{!2500, !2501}
!2500 = !DILocalVariable(name: "vec_", arg: 1, scope: !2494, file: !3, line: 163, type: !2497)
!2501 = !DILocalVariable(name: "ix_", arg: 2, scope: !2494, file: !3, line: 163, type: !7)
!2502 = !DILocation(line: 0, scope: !2494)
!2503 = !DILocation(line: 163, column: 1, scope: !2494)
!2504 = distinct !DISubprogram(name: "VN_INFO_GET", scope: !3, file: !3, line: 198, type: !2485, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2505)
!2505 = !{!2506, !2507}
!2506 = !DILocalVariable(name: "name", arg: 1, scope: !2504, file: !3, line: 198, type: !483)
!2507 = !DILocalVariable(name: "newinfo", scope: !2504, file: !3, line: 200, type: !1914)
!2508 = !DILocation(line: 0, scope: !2504)
!2509 = !DILocation(line: 202, column: 13, scope: !2504)
!2510 = !DILocation(line: 203, column: 3, scope: !2504)
!2511 = !DILocation(line: 204, column: 7, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 204, column: 7)
!2513 = !DILocation(line: 204, column: 34, scope: !2512)
!2514 = !DILocation(line: 204, column: 31, scope: !2512)
!2515 = !DILocation(line: 204, column: 7, scope: !2504)
!2516 = !DILocation(line: 205, column: 5, scope: !2512)
!2517 = !DILocation(line: 207, column: 3, scope: !2504)
!2518 = !DILocation(line: 209, column: 3, scope: !2504)
!2519 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_base_length", scope: !3, file: !3, line: 163, type: !2520, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2522)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!7, !2497}
!2522 = !{!2523}
!2523 = !DILocalVariable(name: "vec_", arg: 1, scope: !2519, file: !3, line: 163, type: !2497)
!2524 = !DILocation(line: 0, scope: !2519)
!2525 = !DILocation(line: 163, column: 1, scope: !2519)
!2526 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_heap_safe_grow", scope: !3, file: !3, line: 164, type: !2527, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2530)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{null, !2529, !471}
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!2530 = !{!2531, !2532}
!2531 = !DILocalVariable(name: "vec_", arg: 1, scope: !2526, file: !3, line: 164, type: !2529)
!2532 = !DILocalVariable(name: "size_", arg: 2, scope: !2526, file: !3, line: 164, type: !471)
!2533 = !DILocation(line: 0, scope: !2526)
!2534 = !DILocation(line: 164, column: 1, scope: !2526)
!2535 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_base_replace", scope: !3, file: !3, line: 163, type: !2536, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2539)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!1914, !2538, !7, !1914}
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!2539 = !{!2540, !2541, !2542, !2543}
!2540 = !DILocalVariable(name: "vec_", arg: 1, scope: !2535, file: !3, line: 163, type: !2538)
!2541 = !DILocalVariable(name: "ix_", arg: 2, scope: !2535, file: !3, line: 163, type: !7)
!2542 = !DILocalVariable(name: "obj_", arg: 3, scope: !2535, file: !3, line: 163, type: !1914)
!2543 = !DILocalVariable(name: "old_obj_", scope: !2535, file: !3, line: 163, type: !1914)
!2544 = !DILocation(line: 0, scope: !2535)
!2545 = !DILocation(line: 163, column: 1, scope: !2535)
!2546 = distinct !DISubprogram(name: "vn_get_expr_for", scope: !3, file: !3, line: 217, type: !2547, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2549)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!483, !483}
!2549 = !{!2550, !2551, !2552, !2553}
!2550 = !DILocalVariable(name: "name", arg: 1, scope: !2546, file: !3, line: 217, type: !483)
!2551 = !DILocalVariable(name: "vn", scope: !2546, file: !3, line: 219, type: !1914)
!2552 = !DILocalVariable(name: "def_stmt", scope: !2546, file: !3, line: 220, type: !807)
!2553 = !DILocalVariable(name: "expr", scope: !2546, file: !3, line: 221, type: !483)
!2554 = !DILocation(line: 0, scope: !2546)
!2555 = !DILocation(line: 219, column: 21, scope: !2546)
!2556 = !DILocation(line: 223, column: 11, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 223, column: 7)
!2558 = !DILocation(line: 223, column: 21, scope: !2557)
!2559 = !DILocation(line: 223, column: 18, scope: !2557)
!2560 = !DILocation(line: 223, column: 7, scope: !2546)
!2561 = !DILocation(line: 228, column: 7, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 228, column: 7)
!2563 = !DILocation(line: 228, column: 30, scope: !2562)
!2564 = !DILocation(line: 228, column: 7, scope: !2546)
!2565 = !DILocation(line: 232, column: 8, scope: !2546)
!2566 = !DILocation(line: 236, column: 7, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 236, column: 7)
!2568 = !DILocation(line: 236, column: 30, scope: !2567)
!2569 = !DILocation(line: 236, column: 7, scope: !2546)
!2570 = !DILocation(line: 237, column: 5, scope: !2567)
!2571 = !DILocation(line: 240, column: 11, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 240, column: 7)
!2573 = !DILocation(line: 240, column: 16, scope: !2572)
!2574 = !DILocation(line: 240, column: 7, scope: !2546)
!2575 = !DILocation(line: 241, column: 5, scope: !2572)
!2576 = !DILocation(line: 244, column: 14, scope: !2546)
!2577 = !DILocation(line: 248, column: 7, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 248, column: 7)
!2579 = !DILocation(line: 249, column: 7, scope: !2578)
!2580 = !DILocation(line: 249, column: 10, scope: !2578)
!2581 = !DILocation(line: 249, column: 33, scope: !2578)
!2582 = !DILocation(line: 248, column: 7, scope: !2546)
!2583 = !DILocation(line: 250, column: 16, scope: !2578)
!2584 = !DILocation(line: 250, column: 5, scope: !2578)
!2585 = !DILocation(line: 252, column: 8, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 252, column: 7)
!2587 = !DILocation(line: 252, column: 7, scope: !2546)
!2588 = !DILocation(line: 253, column: 16, scope: !2586)
!2589 = !DILocation(line: 253, column: 5, scope: !2586)
!2590 = !DILocation(line: 257, column: 11, scope: !2546)
!2591 = !DILocation(line: 257, column: 3, scope: !2546)
!2592 = !DILocation(line: 260, column: 12, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 260, column: 11)
!2594 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 258, column: 5)
!2595 = !DILocation(line: 260, column: 46, scope: !2593)
!2596 = !DILocation(line: 261, column: 5, scope: !2593)
!2597 = !DILocation(line: 261, column: 8, scope: !2593)
!2598 = !DILocation(line: 261, column: 42, scope: !2593)
!2599 = !DILocation(line: 262, column: 5, scope: !2593)
!2600 = !DILocation(line: 262, column: 8, scope: !2593)
!2601 = !DILocation(line: 262, column: 42, scope: !2593)
!2602 = !DILocation(line: 263, column: 4, scope: !2593)
!2603 = !DILocation(line: 263, column: 7, scope: !2593)
!2604 = !DILocation(line: 263, column: 49, scope: !2593)
!2605 = !DILocation(line: 260, column: 11, scope: !2594)
!2606 = !DILocation(line: 264, column: 9, scope: !2593)
!2607 = !DILocation(line: 264, column: 2, scope: !2593)
!2608 = !DILocation(line: 270, column: 14, scope: !2594)
!2609 = !DILocation(line: 273, column: 7, scope: !2594)
!2610 = !DILocation(line: 276, column: 14, scope: !2594)
!2611 = !DILocation(line: 280, column: 7, scope: !2594)
!2612 = !DILocation(line: 284, column: 12, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 284, column: 7)
!2614 = !DILocation(line: 284, column: 7, scope: !2546)
!2615 = !DILocation(line: 285, column: 16, scope: !2613)
!2616 = !DILocation(line: 285, column: 5, scope: !2613)
!2617 = !DILocation(line: 288, column: 12, scope: !2546)
!2618 = !DILocation(line: 290, column: 3, scope: !2546)
!2619 = !DILocation(line: 291, column: 1, scope: !2546)
!2620 = distinct !DISubprogram(name: "gimple_nop_p", scope: !391, file: !391, line: 4304, type: !2621, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{!470, !2623}
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !484, line: 60, baseType: !1918)
!2624 = !{!2625}
!2625 = !DILocalVariable(name: "g", arg: 1, scope: !2620, file: !391, line: 4304, type: !2623)
!2626 = !DILocation(line: 0, scope: !2620)
!2627 = !DILocation(line: 4306, column: 10, scope: !2620)
!2628 = !DILocation(line: 4306, column: 26, scope: !2620)
!2629 = !DILocation(line: 4306, column: 3, scope: !2620)
!2630 = distinct !DISubprogram(name: "gimple_code", scope: !391, file: !391, line: 1052, type: !2631, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2633)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!390, !2623}
!2633 = !{!2634}
!2634 = !DILocalVariable(name: "g", arg: 1, scope: !2630, file: !391, line: 1052, type: !2623)
!2635 = !DILocation(line: 0, scope: !2630)
!2636 = !DILocation(line: 1054, column: 20, scope: !2630)
!2637 = !DILocation(line: 1054, column: 3, scope: !2630)
!2638 = distinct !DISubprogram(name: "is_gimple_assign", scope: !391, file: !391, line: 1677, type: !2621, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2639)
!2639 = !{!2640}
!2640 = !DILocalVariable(name: "gs", arg: 1, scope: !2638, file: !391, line: 1677, type: !2623)
!2641 = !DILocation(line: 0, scope: !2638)
!2642 = !DILocation(line: 1679, column: 10, scope: !2638)
!2643 = !DILocation(line: 1679, column: 27, scope: !2638)
!2644 = !DILocation(line: 1679, column: 3, scope: !2638)
!2645 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !391, file: !391, line: 1815, type: !2646, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2648)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!134, !2623}
!2648 = !{!2649, !2650}
!2649 = !DILocalVariable(name: "gs", arg: 1, scope: !2645, file: !391, line: 1815, type: !2623)
!2650 = !DILocalVariable(name: "code", scope: !2645, file: !391, line: 1817, type: !134)
!2651 = !DILocation(line: 0, scope: !2645)
!2652 = !DILocation(line: 1820, column: 10, scope: !2645)
!2653 = !DILocation(line: 1821, column: 7, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2645, file: !391, line: 1821, column: 7)
!2655 = !DILocation(line: 1821, column: 35, scope: !2654)
!2656 = !DILocation(line: 1821, column: 7, scope: !2645)
!2657 = !DILocation(line: 1822, column: 12, scope: !2654)
!2658 = !DILocation(line: 1822, column: 5, scope: !2654)
!2659 = !DILocation(line: 1824, column: 3, scope: !2645)
!2660 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !391, file: !391, line: 1727, type: !2661, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2663)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{!483, !2623}
!2663 = !{!2664}
!2664 = !DILocalVariable(name: "gs", arg: 1, scope: !2660, file: !391, line: 1727, type: !2623)
!2665 = !DILocation(line: 0, scope: !2660)
!2666 = !DILocation(line: 1730, column: 10, scope: !2660)
!2667 = !DILocation(line: 1730, column: 3, scope: !2660)
!2668 = distinct !DISubprogram(name: "gimple_expr_type", scope: !391, file: !391, line: 4366, type: !2661, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2669)
!2669 = !{!2670, !2671, !2672}
!2670 = !DILocalVariable(name: "stmt", arg: 1, scope: !2668, file: !391, line: 4366, type: !2623)
!2671 = !DILocalVariable(name: "code", scope: !2668, file: !391, line: 4368, type: !390)
!2672 = !DILocalVariable(name: "type", scope: !2673, file: !391, line: 4372, type: !483)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !391, line: 4371, column: 5)
!2674 = distinct !DILexicalBlock(scope: !2668, file: !391, line: 4370, column: 7)
!2675 = !DILocation(line: 0, scope: !2668)
!2676 = !DILocation(line: 4368, column: 27, scope: !2668)
!2677 = !DILocation(line: 4370, column: 29, scope: !2674)
!2678 = !DILocation(line: 4378, column: 9, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2673, file: !391, line: 4377, column: 11)
!2680 = !DILocation(line: 0, scope: !2673)
!2681 = !DILocation(line: 4378, column: 2, scope: !2679)
!2682 = !DILocation(line: 4380, column: 10, scope: !2679)
!2683 = !DILocation(line: 4380, column: 2, scope: !2679)
!2684 = !DILocation(line: 4383, column: 13, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2679, file: !391, line: 4381, column: 4)
!2686 = !DILocation(line: 4384, column: 6, scope: !2685)
!2687 = !DILocation(line: 4388, column: 13, scope: !2685)
!2688 = !DILocation(line: 4389, column: 6, scope: !2685)
!2689 = !DILocation(line: 4394, column: 12, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2674, file: !391, line: 4393, column: 12)
!2691 = !DILocation(line: 4394, column: 5, scope: !2690)
!2692 = !DILocation(line: 4396, column: 12, scope: !2690)
!2693 = !DILocation(line: 4396, column: 5, scope: !2690)
!2694 = !DILocation(line: 0, scope: !2674)
!2695 = !DILocation(line: 4397, column: 1, scope: !2668)
!2696 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !391, file: !391, line: 1759, type: !2661, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2697)
!2697 = !{!2698}
!2698 = !DILocalVariable(name: "gs", arg: 1, scope: !2696, file: !391, line: 1759, type: !2623)
!2699 = !DILocation(line: 0, scope: !2696)
!2700 = !DILocation(line: 1763, column: 7, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2696, file: !391, line: 1763, column: 7)
!2702 = !DILocation(line: 1763, column: 27, scope: !2701)
!2703 = !DILocation(line: 1763, column: 7, scope: !2696)
!2704 = !DILocation(line: 1764, column: 12, scope: !2701)
!2705 = !DILocation(line: 1764, column: 5, scope: !2701)
!2706 = !DILocation(line: 0, scope: !2701)
!2707 = !DILocation(line: 1767, column: 1, scope: !2696)
!2708 = distinct !DISubprogram(name: "get_constant_value_id", scope: !3, file: !3, line: 339, type: !2709, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2711)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{!7, !483}
!2711 = !{!2712, !2713, !2714}
!2712 = !DILocalVariable(name: "constant", arg: 1, scope: !2708, file: !3, line: 339, type: !483)
!2713 = !DILocalVariable(name: "slot", scope: !2708, file: !3, line: 341, type: !1315)
!2714 = !DILocalVariable(name: "vc", scope: !2708, file: !3, line: 342, type: !1846)
!2715 = !DILocation(line: 0, scope: !2708)
!2716 = !DILocation(line: 342, column: 3, scope: !2708)
!2717 = !DILocation(line: 344, column: 17, scope: !2708)
!2718 = !DILocation(line: 344, column: 6, scope: !2708)
!2719 = !DILocation(line: 344, column: 15, scope: !2708)
!2720 = !DILocation(line: 345, column: 6, scope: !2708)
!2721 = !DILocation(line: 345, column: 15, scope: !2708)
!2722 = !DILocation(line: 346, column: 36, scope: !2708)
!2723 = !DILocation(line: 346, column: 10, scope: !2708)
!2724 = !DILocation(line: 348, column: 7, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2708, file: !3, line: 348, column: 7)
!2726 = !DILocation(line: 348, column: 7, scope: !2708)
!2727 = !DILocation(line: 349, column: 28, scope: !2725)
!2728 = !DILocation(line: 349, column: 36, scope: !2725)
!2729 = !DILocation(line: 349, column: 5, scope: !2725)
!2730 = !DILocation(line: 351, column: 1, scope: !2708)
!2731 = distinct !DISubprogram(name: "vn_hash_constant_with_type", scope: !480, file: !480, line: 117, type: !2732, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!1301, !483}
!2734 = !{!2735, !2736}
!2735 = !DILocalVariable(name: "constant", arg: 1, scope: !2731, file: !480, line: 117, type: !483)
!2736 = !DILocalVariable(name: "type", scope: !2731, file: !480, line: 119, type: !483)
!2737 = !DILocation(line: 0, scope: !2731)
!2738 = !DILocation(line: 119, column: 15, scope: !2731)
!2739 = !DILocation(line: 120, column: 11, scope: !2731)
!2740 = !DILocation(line: 121, column: 6, scope: !2731)
!2741 = !DILocation(line: 121, column: 4, scope: !2731)
!2742 = !DILocation(line: 122, column: 7, scope: !2731)
!2743 = !DILocation(line: 123, column: 9, scope: !2731)
!2744 = !DILocation(line: 123, column: 33, scope: !2731)
!2745 = !DILocation(line: 123, column: 31, scope: !2731)
!2746 = !DILocation(line: 122, column: 4, scope: !2731)
!2747 = !DILocation(line: 120, column: 3, scope: !2731)
!2748 = distinct !DISubprogram(name: "get_or_alloc_constant_value_id", scope: !3, file: !3, line: 357, type: !2709, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2749)
!2749 = !{!2750, !2751, !2752, !2753}
!2750 = !DILocalVariable(name: "constant", arg: 1, scope: !2748, file: !3, line: 357, type: !483)
!2751 = !DILocalVariable(name: "slot", scope: !2748, file: !3, line: 359, type: !1315)
!2752 = !DILocalVariable(name: "vc", scope: !2748, file: !3, line: 360, type: !1846)
!2753 = !DILocalVariable(name: "vcp", scope: !2748, file: !3, line: 361, type: !1844)
!2754 = !DILocation(line: 0, scope: !2748)
!2755 = !DILocation(line: 360, column: 3, scope: !2748)
!2756 = !DILocation(line: 363, column: 17, scope: !2748)
!2757 = !DILocation(line: 363, column: 6, scope: !2748)
!2758 = !DILocation(line: 363, column: 15, scope: !2748)
!2759 = !DILocation(line: 364, column: 6, scope: !2748)
!2760 = !DILocation(line: 364, column: 15, scope: !2748)
!2761 = !DILocation(line: 365, column: 36, scope: !2748)
!2762 = !DILocation(line: 365, column: 10, scope: !2748)
!2763 = !DILocation(line: 367, column: 7, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 367, column: 7)
!2765 = !DILocation(line: 367, column: 7, scope: !2748)
!2766 = !DILocation(line: 368, column: 36, scope: !2764)
!2767 = !DILocation(line: 368, column: 5, scope: !2764)
!2768 = !DILocation(line: 370, column: 9, scope: !2748)
!2769 = !DILocation(line: 371, column: 22, scope: !2748)
!2770 = !DILocation(line: 371, column: 8, scope: !2748)
!2771 = !DILocation(line: 371, column: 17, scope: !2748)
!2772 = !DILocation(line: 372, column: 8, scope: !2748)
!2773 = !DILocation(line: 372, column: 17, scope: !2748)
!2774 = !DILocation(line: 373, column: 19, scope: !2748)
!2775 = !DILocation(line: 373, column: 8, scope: !2748)
!2776 = !DILocation(line: 373, column: 17, scope: !2748)
!2777 = !DILocation(line: 374, column: 9, scope: !2748)
!2778 = !DILocation(line: 375, column: 19, scope: !2748)
!2779 = !DILocation(line: 375, column: 44, scope: !2748)
!2780 = !DILocation(line: 375, column: 3, scope: !2748)
!2781 = !DILocation(line: 376, column: 3, scope: !2748)
!2782 = !DILocation(line: 377, column: 1, scope: !2748)
!2783 = distinct !DISubprogram(name: "get_next_value_id", scope: !3, file: !3, line: 3307, type: !2784, scopeLine: 3308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2061)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{!7}
!2786 = !DILocation(line: 3309, column: 23, scope: !2783)
!2787 = !DILocation(line: 3309, column: 3, scope: !2783)
!2788 = distinct !DISubprogram(name: "value_id_constant_p", scope: !3, file: !3, line: 382, type: !2789, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2791)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!470, !7}
!2791 = !{!2792}
!2792 = !DILocalVariable(name: "v", arg: 1, scope: !2788, file: !3, line: 382, type: !7)
!2793 = !DILocation(line: 0, scope: !2788)
!2794 = !DILocation(line: 384, column: 24, scope: !2788)
!2795 = !DILocation(line: 384, column: 10, scope: !2788)
!2796 = !DILocation(line: 384, column: 3, scope: !2788)
!2797 = distinct !DISubprogram(name: "vn_reference_compute_hash", scope: !3, file: !3, line: 430, type: !2798, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2801)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!1301, !2800}
!2800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!2801 = !{!2802, !2803, !2804, !2805}
!2802 = !DILocalVariable(name: "vr1", arg: 1, scope: !2797, file: !3, line: 430, type: !2800)
!2803 = !DILocalVariable(name: "result", scope: !2797, file: !3, line: 432, type: !1301)
!2804 = !DILocalVariable(name: "i", scope: !2797, file: !3, line: 433, type: !471)
!2805 = !DILocalVariable(name: "vro", scope: !2797, file: !3, line: 434, type: !2806)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "vn_reference_op_t", file: !480, line: 80, baseType: !2807)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!2808 = !DILocation(line: 0, scope: !2797)
!2809 = !DILocation(line: 434, column: 3, scope: !2797)
!2810 = !DILocation(line: 0, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 436, column: 3)
!2812 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 436, column: 3)
!2813 = !DILocation(line: 436, column: 8, scope: !2812)
!2814 = !DILocation(line: 0, scope: !2812)
!2815 = !DILocation(line: 436, column: 15, scope: !2811)
!2816 = !DILocation(line: 436, column: 3, scope: !2812)
!2817 = !DILocation(line: 437, column: 44, scope: !2811)
!2818 = !DILocation(line: 437, column: 14, scope: !2811)
!2819 = !DILocation(line: 436, column: 72, scope: !2811)
!2820 = !DILocation(line: 436, column: 3, scope: !2811)
!2821 = distinct !{!2821, !2816, !2822}
!2822 = !DILocation(line: 437, column: 55, scope: !2812)
!2823 = !DILocation(line: 438, column: 12, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 438, column: 7)
!2825 = !DILocation(line: 438, column: 7, scope: !2824)
!2826 = !DILocation(line: 438, column: 7, scope: !2797)
!2827 = !DILocation(line: 439, column: 15, scope: !2824)
!2828 = !DILocation(line: 439, column: 12, scope: !2824)
!2829 = !DILocation(line: 439, column: 5, scope: !2824)
!2830 = !DILocation(line: 442, column: 1, scope: !2797)
!2831 = !DILocation(line: 441, column: 3, scope: !2797)
!2832 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_iterate", scope: !480, file: !480, line: 83, type: !2833, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2837)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{!471, !2835, !7, !2836}
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2837 = !{!2838, !2839, !2840}
!2838 = !DILocalVariable(name: "vec_", arg: 1, scope: !2832, file: !480, line: 83, type: !2835)
!2839 = !DILocalVariable(name: "ix_", arg: 2, scope: !2832, file: !480, line: 83, type: !7)
!2840 = !DILocalVariable(name: "ptr", arg: 3, scope: !2832, file: !480, line: 83, type: !2836)
!2841 = !DILocation(line: 0, scope: !2832)
!2842 = !DILocation(line: 83, column: 1, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2832, file: !480, line: 83, column: 1)
!2844 = !DILocation(line: 83, column: 1, scope: !2832)
!2845 = !DILocation(line: 83, column: 1, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2843, file: !480, line: 83, column: 1)
!2847 = !DILocation(line: 83, column: 1, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2843, file: !480, line: 83, column: 1)
!2849 = !DILocation(line: 0, scope: !2843)
!2850 = distinct !DISubprogram(name: "vn_reference_op_compute_hash", scope: !3, file: !3, line: 406, type: !2851, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2854)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!1301, !2853, !1301}
!2853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2806)
!2854 = !{!2855, !2856}
!2855 = !DILocalVariable(name: "vro1", arg: 1, scope: !2850, file: !3, line: 406, type: !2853)
!2856 = !DILocalVariable(name: "result", arg: 2, scope: !2850, file: !3, line: 406, type: !1301)
!2857 = !DILocation(line: 0, scope: !2850)
!2858 = !DILocation(line: 408, column: 44, scope: !2850)
!2859 = !DILocation(line: 408, column: 12, scope: !2850)
!2860 = !DILocation(line: 409, column: 13, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 409, column: 7)
!2862 = !DILocation(line: 409, column: 7, scope: !2861)
!2863 = !DILocation(line: 409, column: 7, scope: !2850)
!2864 = !DILocation(line: 410, column: 14, scope: !2861)
!2865 = !DILocation(line: 410, column: 5, scope: !2861)
!2866 = !DILocation(line: 411, column: 13, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 411, column: 7)
!2868 = !DILocation(line: 411, column: 7, scope: !2867)
!2869 = !DILocation(line: 411, column: 7, scope: !2850)
!2870 = !DILocation(line: 412, column: 14, scope: !2867)
!2871 = !DILocation(line: 412, column: 5, scope: !2867)
!2872 = !DILocation(line: 413, column: 13, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 413, column: 7)
!2874 = !DILocation(line: 413, column: 7, scope: !2873)
!2875 = !DILocation(line: 413, column: 7, scope: !2850)
!2876 = !DILocation(line: 414, column: 14, scope: !2873)
!2877 = !DILocation(line: 414, column: 5, scope: !2873)
!2878 = !DILocation(line: 415, column: 3, scope: !2850)
!2879 = distinct !DISubprogram(name: "vn_reference_eq", scope: !3, file: !3, line: 448, type: !1307, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2880)
!2880 = !{!2881, !2882, !2883, !2884, !2885, !2887}
!2881 = !DILocalVariable(name: "p1", arg: 1, scope: !2879, file: !3, line: 448, type: !1302)
!2882 = !DILocalVariable(name: "p2", arg: 2, scope: !2879, file: !3, line: 448, type: !1302)
!2883 = !DILocalVariable(name: "i", scope: !2879, file: !3, line: 450, type: !471)
!2884 = !DILocalVariable(name: "vro", scope: !2879, file: !3, line: 451, type: !2806)
!2885 = !DILocalVariable(name: "vr1", scope: !2879, file: !3, line: 453, type: !2886)
!2886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!2887 = !DILocalVariable(name: "vr2", scope: !2879, file: !3, line: 454, type: !2886)
!2888 = !DILocation(line: 0, scope: !2879)
!2889 = !DILocation(line: 451, column: 3, scope: !2879)
!2890 = !DILocation(line: 455, column: 12, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 455, column: 7)
!2892 = !DILocation(line: 455, column: 29, scope: !2891)
!2893 = !DILocation(line: 455, column: 21, scope: !2891)
!2894 = !DILocation(line: 455, column: 7, scope: !2879)
!2895 = !DILocation(line: 459, column: 7, scope: !2879)
!2896 = !DILocation(line: 463, column: 12, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 463, column: 7)
!2898 = !DILocation(line: 463, column: 25, scope: !2897)
!2899 = !DILocation(line: 463, column: 17, scope: !2897)
!2900 = !DILocation(line: 463, column: 7, scope: !2879)
!2901 = !DILocation(line: 467, column: 12, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 467, column: 7)
!2903 = !DILocation(line: 467, column: 29, scope: !2902)
!2904 = !DILocation(line: 467, column: 21, scope: !2902)
!2905 = !DILocation(line: 467, column: 7, scope: !2879)
!2906 = !DILocation(line: 473, column: 7, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 473, column: 7)
!2908 = !DILocation(line: 474, column: 10, scope: !2907)
!2909 = !DILocation(line: 474, column: 7, scope: !2907)
!2910 = !DILocation(line: 473, column: 7, scope: !2879)
!2911 = !DILocation(line: 0, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 478, column: 9)
!2913 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 477, column: 3)
!2914 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 477, column: 3)
!2915 = !DILocation(line: 477, column: 3, scope: !2914)
!2916 = !DILocation(line: 0, scope: !2914)
!2917 = !DILocation(line: 477, column: 15, scope: !2913)
!2918 = !DILocation(line: 478, column: 30, scope: !2912)
!2919 = !DILocation(line: 479, column: 9, scope: !2912)
!2920 = !DILocation(line: 478, column: 10, scope: !2912)
!2921 = !DILocation(line: 478, column: 9, scope: !2913)
!2922 = !DILocation(line: 477, column: 72, scope: !2913)
!2923 = !DILocation(line: 477, column: 3, scope: !2913)
!2924 = distinct !{!2924, !2915, !2925}
!2925 = !DILocation(line: 480, column: 14, scope: !2914)
!2926 = !DILocation(line: 483, column: 1, scope: !2879)
!2927 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_length", scope: !480, file: !480, line: 83, type: !2928, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2932)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!7, !2930}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1867)
!2932 = !{!2933}
!2933 = !DILocalVariable(name: "vec_", arg: 1, scope: !2927, file: !480, line: 83, type: !2930)
!2934 = !DILocation(line: 0, scope: !2927)
!2935 = !DILocation(line: 83, column: 1, scope: !2927)
!2936 = distinct !DISubprogram(name: "vn_reference_op_eq", scope: !3, file: !3, line: 391, type: !1307, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2937)
!2937 = !{!2938, !2939, !2940, !2942}
!2938 = !DILocalVariable(name: "p1", arg: 1, scope: !2936, file: !3, line: 391, type: !1302)
!2939 = !DILocalVariable(name: "p2", arg: 2, scope: !2936, file: !3, line: 391, type: !1302)
!2940 = !DILocalVariable(name: "vro1", scope: !2936, file: !3, line: 393, type: !2941)
!2941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!2942 = !DILocalVariable(name: "vro2", scope: !2936, file: !3, line: 394, type: !2941)
!2943 = !DILocation(line: 0, scope: !2936)
!2944 = !DILocation(line: 396, column: 16, scope: !2936)
!2945 = !DILocation(line: 396, column: 32, scope: !2936)
!2946 = !DILocation(line: 396, column: 23, scope: !2936)
!2947 = !DILocation(line: 397, column: 5, scope: !2936)
!2948 = !DILocation(line: 397, column: 34, scope: !2936)
!2949 = !DILocation(line: 397, column: 46, scope: !2936)
!2950 = !DILocation(line: 397, column: 8, scope: !2936)
!2951 = !DILocation(line: 398, column: 5, scope: !2936)
!2952 = !DILocation(line: 398, column: 35, scope: !2936)
!2953 = !DILocation(line: 398, column: 46, scope: !2936)
!2954 = !DILocation(line: 398, column: 8, scope: !2936)
!2955 = !DILocation(line: 399, column: 5, scope: !2936)
!2956 = !DILocation(line: 399, column: 35, scope: !2936)
!2957 = !DILocation(line: 399, column: 46, scope: !2936)
!2958 = !DILocation(line: 399, column: 8, scope: !2936)
!2959 = !DILocation(line: 400, column: 5, scope: !2936)
!2960 = !DILocation(line: 400, column: 35, scope: !2936)
!2961 = !DILocation(line: 400, column: 46, scope: !2936)
!2962 = !DILocation(line: 400, column: 8, scope: !2936)
!2963 = !DILocation(line: 396, column: 3, scope: !2936)
!2964 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_index", scope: !480, file: !480, line: 83, type: !2965, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2967)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!2807, !2835, !7}
!2967 = !{!2968, !2969}
!2968 = !DILocalVariable(name: "vec_", arg: 1, scope: !2964, file: !480, line: 83, type: !2835)
!2969 = !DILocalVariable(name: "ix_", arg: 2, scope: !2964, file: !480, line: 83, type: !7)
!2970 = !DILocation(line: 0, scope: !2964)
!2971 = !DILocation(line: 83, column: 1, scope: !2964)
!2972 = distinct !DISubprogram(name: "copy_reference_ops_from_ref", scope: !3, file: !3, line: 489, type: !2973, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2976)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{null, !483, !2975}
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!2976 = !{!2977, !2978, !2979, !2982, !2983}
!2977 = !DILocalVariable(name: "ref", arg: 1, scope: !2972, file: !3, line: 489, type: !483)
!2978 = !DILocalVariable(name: "result", arg: 2, scope: !2972, file: !3, line: 489, type: !2975)
!2979 = !DILocalVariable(name: "temp", scope: !2980, file: !3, line: 493, type: !1874)
!2980 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 492, column: 5)
!2981 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 491, column: 7)
!2982 = !DILocalVariable(name: "base", scope: !2980, file: !3, line: 494, type: !483)
!2983 = !DILocalVariable(name: "temp", scope: !2984, file: !3, line: 522, type: !1874)
!2984 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 521, column: 5)
!2985 = !DILocation(line: 0, scope: !2972)
!2986 = !DILocation(line: 491, column: 7, scope: !2981)
!2987 = !DILocation(line: 491, column: 23, scope: !2981)
!2988 = !DILocation(line: 491, column: 7, scope: !2972)
!2989 = !DILocation(line: 0, scope: !2984)
!2990 = !DILocation(line: 0, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 586, column: 6)
!2992 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 585, column: 8)
!2993 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 530, column: 2)
!2994 = !DILocation(line: 0, scope: !2993)
!2995 = !DILocation(line: 0, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 555, column: 8)
!2997 = !DILocation(line: 520, column: 3, scope: !2972)
!2998 = !DILocation(line: 493, column: 7, scope: !2980)
!2999 = !DILocation(line: 496, column: 14, scope: !2980)
!3000 = !DILocation(line: 496, column: 52, scope: !2980)
!3001 = !DILocation(line: 0, scope: !2980)
!3002 = !DILocation(line: 497, column: 12, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 497, column: 11)
!3004 = !DILocation(line: 497, column: 11, scope: !2980)
!3005 = !DILocation(line: 498, column: 24, scope: !3003)
!3006 = !DILocation(line: 498, column: 9, scope: !3003)
!3007 = !DILocation(line: 498, column: 2, scope: !3003)
!3008 = !DILocation(line: 500, column: 7, scope: !2980)
!3009 = !DILocation(line: 502, column: 19, scope: !2980)
!3010 = !DILocation(line: 502, column: 12, scope: !2980)
!3011 = !DILocation(line: 502, column: 17, scope: !2980)
!3012 = !DILocation(line: 503, column: 21, scope: !2980)
!3013 = !DILocation(line: 503, column: 12, scope: !2980)
!3014 = !DILocation(line: 503, column: 19, scope: !2980)
!3015 = !DILocation(line: 504, column: 18, scope: !2980)
!3016 = !DILocation(line: 504, column: 12, scope: !2980)
!3017 = !DILocation(line: 504, column: 16, scope: !2980)
!3018 = !DILocation(line: 505, column: 18, scope: !2980)
!3019 = !DILocation(line: 505, column: 12, scope: !2980)
!3020 = !DILocation(line: 505, column: 16, scope: !2980)
!3021 = !DILocation(line: 506, column: 18, scope: !2980)
!3022 = !DILocation(line: 506, column: 12, scope: !2980)
!3023 = !DILocation(line: 506, column: 16, scope: !2980)
!3024 = !DILocation(line: 507, column: 7, scope: !2980)
!3025 = !DILocation(line: 509, column: 7, scope: !2980)
!3026 = !DILocation(line: 510, column: 17, scope: !2980)
!3027 = !DILocation(line: 511, column: 21, scope: !2980)
!3028 = !DILocation(line: 511, column: 19, scope: !2980)
!3029 = !DILocation(line: 512, column: 16, scope: !2980)
!3030 = !DILocation(line: 513, column: 18, scope: !2980)
!3031 = !DILocation(line: 513, column: 16, scope: !2980)
!3032 = !DILocation(line: 514, column: 7, scope: !2980)
!3033 = !DILocation(line: 516, column: 5, scope: !2981)
!3034 = !DILocation(line: 522, column: 7, scope: !2984)
!3035 = !DILocation(line: 524, column: 7, scope: !2984)
!3036 = !DILocation(line: 526, column: 19, scope: !2984)
!3037 = !DILocation(line: 526, column: 17, scope: !2984)
!3038 = !DILocation(line: 527, column: 21, scope: !2984)
!3039 = !DILocation(line: 527, column: 19, scope: !2984)
!3040 = !DILocation(line: 529, column: 7, scope: !2984)
!3041 = !DILocation(line: 537, column: 15, scope: !2993)
!3042 = !DILocation(line: 537, column: 13, scope: !2993)
!3043 = !DILocation(line: 538, column: 4, scope: !2993)
!3044 = !DILocation(line: 541, column: 15, scope: !2993)
!3045 = !DILocation(line: 541, column: 13, scope: !2993)
!3046 = !DILocation(line: 542, column: 15, scope: !2993)
!3047 = !DILocation(line: 542, column: 13, scope: !2993)
!3048 = !DILocation(line: 543, column: 4, scope: !2993)
!3049 = !DILocation(line: 548, column: 14, scope: !2993)
!3050 = !DILocation(line: 549, column: 15, scope: !2993)
!3051 = !DILocation(line: 549, column: 13, scope: !2993)
!3052 = !DILocation(line: 550, column: 15, scope: !2993)
!3053 = !DILocation(line: 550, column: 13, scope: !2993)
!3054 = !DILocation(line: 555, column: 8, scope: !2996)
!3055 = !DILocation(line: 556, column: 8, scope: !2996)
!3056 = !DILocation(line: 556, column: 20, scope: !2996)
!3057 = !DILocation(line: 557, column: 8, scope: !2996)
!3058 = !DILocation(line: 557, column: 11, scope: !2996)
!3059 = !DILocation(line: 557, column: 47, scope: !2996)
!3060 = !DILocation(line: 558, column: 8, scope: !2996)
!3061 = !DILocation(line: 558, column: 26, scope: !2996)
!3062 = !DILocation(line: 558, column: 11, scope: !2996)
!3063 = !DILocation(line: 559, column: 8, scope: !2996)
!3064 = !DILocation(line: 559, column: 26, scope: !2996)
!3065 = !DILocation(line: 559, column: 11, scope: !2996)
!3066 = !DILocation(line: 560, column: 8, scope: !2996)
!3067 = !DILocation(line: 560, column: 26, scope: !2996)
!3068 = !DILocation(line: 560, column: 11, scope: !2996)
!3069 = !DILocation(line: 555, column: 8, scope: !2993)
!3070 = !DILocation(line: 561, column: 17, scope: !2996)
!3071 = !DILocation(line: 561, column: 15, scope: !2996)
!3072 = !DILocation(line: 561, column: 6, scope: !2996)
!3073 = !DILocation(line: 566, column: 15, scope: !2993)
!3074 = !DILocation(line: 566, column: 13, scope: !2993)
!3075 = !DILocation(line: 568, column: 15, scope: !2993)
!3076 = !DILocation(line: 568, column: 13, scope: !2993)
!3077 = !DILocation(line: 569, column: 15, scope: !2993)
!3078 = !DILocation(line: 569, column: 13, scope: !2993)
!3079 = !DILocation(line: 570, column: 4, scope: !2993)
!3080 = !DILocation(line: 582, column: 13, scope: !2993)
!3081 = !DILocation(line: 583, column: 4, scope: !2993)
!3082 = !DILocation(line: 585, column: 8, scope: !2992)
!3083 = !DILocation(line: 585, column: 8, scope: !2993)
!3084 = !DILocation(line: 587, column: 17, scope: !2991)
!3085 = !DILocation(line: 588, column: 8, scope: !2991)
!3086 = !DILocation(line: 601, column: 4, scope: !2993)
!3087 = !DILocation(line: 602, column: 2, scope: !2993)
!3088 = !DILocation(line: 603, column: 7, scope: !2984)
!3089 = !DILocation(line: 605, column: 11, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 605, column: 11)
!3091 = !DILocation(line: 606, column: 4, scope: !3090)
!3092 = !DILocation(line: 606, column: 24, scope: !3090)
!3093 = !DILocation(line: 607, column: 8, scope: !3090)
!3094 = !DILocation(line: 607, column: 12, scope: !3090)
!3095 = !DILocation(line: 605, column: 11, scope: !2984)
!3096 = !DILocation(line: 608, column: 8, scope: !3090)
!3097 = !DILocation(line: 608, column: 2, scope: !3090)
!3098 = !DILocation(line: 0, scope: !3090)
!3099 = !DILocation(line: 611, column: 5, scope: !2972)
!3100 = distinct !{!3100, !2997, !3099}
!3101 = !DILocation(line: 612, column: 1, scope: !2972)
!3102 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_safe_push", scope: !480, file: !480, line: 84, type: !3103, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3105)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!2807, !2975, !1916}
!3105 = !{!3106, !3107}
!3106 = !DILocalVariable(name: "vec_", arg: 1, scope: !3102, file: !480, line: 84, type: !2975)
!3107 = !DILocalVariable(name: "obj_", arg: 2, scope: !3102, file: !480, line: 84, type: !1916)
!3108 = !DILocation(line: 0, scope: !3102)
!3109 = !DILocation(line: 84, column: 1, scope: !3102)
!3110 = distinct !DISubprogram(name: "ao_ref_init_from_vn_reference", scope: !3, file: !3, line: 619, type: !3111, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3124)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!470, !3113, !1116, !483, !1862}
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_typedef, name: "ao_ref", file: !1368, line: 86, baseType: !3115)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ao_ref_s", file: !1368, line: 63, size: 384, elements: !3116)
!3116 = !{!3117, !3118, !3119, !3120, !3121, !3122, !3123}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3115, file: !1368, line: 67, baseType: !483, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3115, file: !1368, line: 73, baseType: !483, size: 64, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3115, file: !1368, line: 75, baseType: !539, size: 64, offset: 128)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3115, file: !1368, line: 77, baseType: !539, size: 64, offset: 192)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3115, file: !1368, line: 79, baseType: !539, size: 64, offset: 256)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "ref_alias_set", scope: !3115, file: !1368, line: 82, baseType: !1116, size: 32, offset: 320)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "base_alias_set", scope: !3115, file: !1368, line: 85, baseType: !1116, size: 32, offset: 352)
!3124 = !{!3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3141, !3147}
!3125 = !DILocalVariable(name: "ref", arg: 1, scope: !3110, file: !3, line: 619, type: !3113)
!3126 = !DILocalVariable(name: "set", arg: 2, scope: !3110, file: !3, line: 620, type: !1116)
!3127 = !DILocalVariable(name: "type", arg: 3, scope: !3110, file: !3, line: 620, type: !483)
!3128 = !DILocalVariable(name: "ops", arg: 4, scope: !3110, file: !3, line: 621, type: !1862)
!3129 = !DILocalVariable(name: "op", scope: !3110, file: !3, line: 623, type: !2806)
!3130 = !DILocalVariable(name: "i", scope: !3110, file: !3, line: 624, type: !7)
!3131 = !DILocalVariable(name: "base", scope: !3110, file: !3, line: 625, type: !483)
!3132 = !DILocalVariable(name: "op0_p", scope: !3110, file: !3, line: 626, type: !841)
!3133 = !DILocalVariable(name: "offset", scope: !3110, file: !3, line: 627, type: !539)
!3134 = !DILocalVariable(name: "max_size", scope: !3110, file: !3, line: 628, type: !539)
!3135 = !DILocalVariable(name: "size", scope: !3110, file: !3, line: 629, type: !539)
!3136 = !DILocalVariable(name: "size_tree", scope: !3110, file: !3, line: 630, type: !483)
!3137 = !DILocalVariable(name: "mode", scope: !3138, file: !3, line: 645, type: !5)
!3138 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 644, column: 5)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 641, column: 12)
!3140 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 634, column: 7)
!3141 = !DILocalVariable(name: "field", scope: !3142, file: !3, line: 702, type: !483)
!3142 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 701, column: 4)
!3143 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 668, column: 2)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 666, column: 5)
!3145 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 665, column: 3)
!3146 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 665, column: 3)
!3147 = !DILocalVariable(name: "hindex", scope: !3148, file: !3, line: 731, type: !539)
!3148 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 730, column: 6)
!3149 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 725, column: 8)
!3150 = !DILocation(line: 0, scope: !3110)
!3151 = !DILocation(line: 623, column: 3, scope: !3110)
!3152 = !DILocation(line: 625, column: 3, scope: !3110)
!3153 = !DILocation(line: 625, column: 8, scope: !3110)
!3154 = !DILocation(line: 633, column: 8, scope: !3110)
!3155 = !DILocation(line: 633, column: 6, scope: !3110)
!3156 = !DILocation(line: 634, column: 11, scope: !3140)
!3157 = !DILocation(line: 634, column: 18, scope: !3140)
!3158 = !DILocation(line: 634, column: 7, scope: !3110)
!3159 = !DILocation(line: 636, column: 11, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 636, column: 11)
!3161 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 635, column: 5)
!3162 = !DILocation(line: 636, column: 31, scope: !3160)
!3163 = !DILocation(line: 0, scope: !3160)
!3164 = !DILocation(line: 636, column: 11, scope: !3161)
!3165 = !DILocation(line: 639, column: 14, scope: !3160)
!3166 = !DILocation(line: 641, column: 23, scope: !3139)
!3167 = !DILocation(line: 641, column: 12, scope: !3140)
!3168 = !DILocation(line: 642, column: 21, scope: !3139)
!3169 = !DILocation(line: 642, column: 5, scope: !3139)
!3170 = !DILocation(line: 645, column: 32, scope: !3138)
!3171 = !DILocation(line: 0, scope: !3138)
!3172 = !DILocation(line: 646, column: 16, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 646, column: 11)
!3174 = !DILocation(line: 646, column: 11, scope: !3138)
!3175 = !DILocation(line: 647, column: 14, scope: !3173)
!3176 = !DILocation(line: 647, column: 2, scope: !3173)
!3177 = !DILocation(line: 649, column: 16, scope: !3173)
!3178 = !DILocation(line: 629, column: 17, scope: !3110)
!3179 = !DILocation(line: 0, scope: !3140)
!3180 = !DILocation(line: 651, column: 17, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 651, column: 7)
!3182 = !DILocation(line: 651, column: 7, scope: !3110)
!3183 = !DILocation(line: 653, column: 12, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 653, column: 11)
!3185 = distinct !DILexicalBlock(scope: !3181, file: !3, line: 652, column: 5)
!3186 = !DILocation(line: 653, column: 11, scope: !3185)
!3187 = !DILocation(line: 656, column: 9, scope: !3184)
!3188 = !DILocation(line: 665, column: 8, scope: !3146)
!3189 = !DILocation(line: 626, column: 9, scope: !3110)
!3190 = !DILocation(line: 0, scope: !3146)
!3191 = !DILocation(line: 661, column: 12, scope: !3110)
!3192 = !DILocation(line: 665, column: 15, scope: !3145)
!3193 = !DILocation(line: 665, column: 3, scope: !3146)
!3194 = !DILocation(line: 667, column: 15, scope: !3144)
!3195 = !DILocation(line: 667, column: 19, scope: !3144)
!3196 = !DILocation(line: 667, column: 7, scope: !3144)
!3197 = !DILocation(line: 678, column: 13, scope: !3143)
!3198 = !DILocation(line: 678, column: 11, scope: !3143)
!3199 = !DILocation(line: 679, column: 13, scope: !3143)
!3200 = !DILocation(line: 680, column: 4, scope: !3143)
!3201 = !DILocation(line: 683, column: 13, scope: !3143)
!3202 = !DILocation(line: 683, column: 11, scope: !3143)
!3203 = !DILocation(line: 685, column: 13, scope: !3143)
!3204 = !DILocation(line: 686, column: 4, scope: !3143)
!3205 = !DILocation(line: 692, column: 17, scope: !3143)
!3206 = !DILocation(line: 692, column: 11, scope: !3143)
!3207 = !DILocation(line: 693, column: 4, scope: !3143)
!3208 = !DILocation(line: 697, column: 32, scope: !3143)
!3209 = !DILocation(line: 697, column: 14, scope: !3143)
!3210 = !DILocation(line: 697, column: 11, scope: !3143)
!3211 = !DILocation(line: 698, column: 4, scope: !3143)
!3212 = !DILocation(line: 702, column: 23, scope: !3142)
!3213 = !DILocation(line: 0, scope: !3142)
!3214 = !DILocation(line: 708, column: 10, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 708, column: 10)
!3216 = !DILocation(line: 708, column: 28, scope: !3215)
!3217 = !DILocation(line: 708, column: 10, scope: !3142)
!3218 = !DILocation(line: 710, column: 19, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 710, column: 15)
!3220 = !DILocation(line: 710, column: 15, scope: !3219)
!3221 = !DILocation(line: 711, column: 8, scope: !3219)
!3222 = !DILocation(line: 711, column: 27, scope: !3219)
!3223 = !DILocation(line: 711, column: 12, scope: !3219)
!3224 = !DILocation(line: 710, column: 15, scope: !3215)
!3225 = !DILocation(line: 715, column: 14, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 714, column: 8)
!3227 = !DILocation(line: 716, column: 7, scope: !3226)
!3228 = !DILocation(line: 715, column: 10, scope: !3226)
!3229 = !DILocation(line: 717, column: 13, scope: !3226)
!3230 = !DILocation(line: 717, column: 10, scope: !3226)
!3231 = !DILocation(line: 725, column: 28, scope: !3149)
!3232 = !DILocation(line: 725, column: 9, scope: !3149)
!3233 = !DILocation(line: 726, column: 8, scope: !3149)
!3234 = !DILocation(line: 726, column: 27, scope: !3149)
!3235 = !DILocation(line: 726, column: 31, scope: !3149)
!3236 = !DILocation(line: 726, column: 12, scope: !3149)
!3237 = !DILocation(line: 727, column: 8, scope: !3149)
!3238 = !DILocation(line: 727, column: 27, scope: !3149)
!3239 = !DILocation(line: 727, column: 31, scope: !3149)
!3240 = !DILocation(line: 727, column: 12, scope: !3149)
!3241 = !DILocation(line: 725, column: 8, scope: !3143)
!3242 = !DILocation(line: 731, column: 31, scope: !3148)
!3243 = !DILocation(line: 0, scope: !3148)
!3244 = !DILocation(line: 732, column: 18, scope: !3148)
!3245 = !DILocation(line: 732, column: 15, scope: !3148)
!3246 = !DILocation(line: 733, column: 18, scope: !3148)
!3247 = !DILocation(line: 733, column: 15, scope: !3148)
!3248 = !DILocation(line: 734, column: 15, scope: !3148)
!3249 = !DILocation(line: 735, column: 15, scope: !3148)
!3250 = !DILocation(line: 743, column: 11, scope: !3143)
!3251 = !DILocation(line: 744, column: 4, scope: !3143)
!3252 = !DILocation(line: 665, column: 60, scope: !3145)
!3253 = !DILocation(line: 665, column: 3, scope: !3145)
!3254 = distinct !{!3254, !3193, !3255}
!3255 = !DILocation(line: 761, column: 5, scope: !3146)
!3256 = !DILocation(line: 763, column: 7, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 763, column: 7)
!3258 = !DILocation(line: 763, column: 12, scope: !3257)
!3259 = !DILocation(line: 763, column: 7, scope: !3110)
!3260 = !DILocation(line: 766, column: 8, scope: !3110)
!3261 = !DILocation(line: 766, column: 12, scope: !3110)
!3262 = !DILocation(line: 767, column: 8, scope: !3110)
!3263 = !DILocation(line: 767, column: 13, scope: !3110)
!3264 = !DILocation(line: 768, column: 8, scope: !3110)
!3265 = !DILocation(line: 768, column: 15, scope: !3110)
!3266 = !DILocation(line: 769, column: 8, scope: !3110)
!3267 = !DILocation(line: 769, column: 13, scope: !3110)
!3268 = !DILocation(line: 770, column: 8, scope: !3110)
!3269 = !DILocation(line: 770, column: 17, scope: !3110)
!3270 = !DILocation(line: 771, column: 8, scope: !3110)
!3271 = !DILocation(line: 771, column: 22, scope: !3110)
!3272 = !DILocation(line: 772, column: 8, scope: !3110)
!3273 = !DILocation(line: 772, column: 23, scope: !3110)
!3274 = !DILocation(line: 774, column: 3, scope: !3110)
!3275 = !DILocation(line: 775, column: 1, scope: !3110)
!3276 = distinct !DISubprogram(name: "copy_reference_ops_from_call", scope: !3, file: !3, line: 781, type: !3277, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3279)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{null, !807, !2975}
!3279 = !{!3280, !3281, !3282, !3283, !3284}
!3280 = !DILocalVariable(name: "call", arg: 1, scope: !3276, file: !3, line: 781, type: !807)
!3281 = !DILocalVariable(name: "result", arg: 2, scope: !3276, file: !3, line: 782, type: !2975)
!3282 = !DILocalVariable(name: "temp", scope: !3276, file: !3, line: 784, type: !1874)
!3283 = !DILocalVariable(name: "i", scope: !3276, file: !3, line: 785, type: !7)
!3284 = !DILocalVariable(name: "callarg", scope: !3285, file: !3, line: 799, type: !483)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 798, column: 5)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 797, column: 3)
!3287 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 797, column: 3)
!3288 = !DILocation(line: 0, scope: !3276)
!3289 = !DILocation(line: 784, column: 3, scope: !3276)
!3290 = !DILocation(line: 788, column: 3, scope: !3276)
!3291 = !DILocation(line: 789, column: 15, scope: !3276)
!3292 = !DILocation(line: 789, column: 8, scope: !3276)
!3293 = !DILocation(line: 789, column: 13, scope: !3276)
!3294 = !DILocation(line: 790, column: 8, scope: !3276)
!3295 = !DILocation(line: 790, column: 15, scope: !3276)
!3296 = !DILocation(line: 791, column: 14, scope: !3276)
!3297 = !DILocation(line: 791, column: 8, scope: !3276)
!3298 = !DILocation(line: 791, column: 12, scope: !3276)
!3299 = !DILocation(line: 792, column: 14, scope: !3276)
!3300 = !DILocation(line: 792, column: 8, scope: !3276)
!3301 = !DILocation(line: 792, column: 12, scope: !3276)
!3302 = !DILocation(line: 793, column: 3, scope: !3276)
!3303 = !DILocation(line: 797, column: 8, scope: !3287)
!3304 = !DILocation(line: 0, scope: !3287)
!3305 = !DILocation(line: 797, column: 19, scope: !3286)
!3306 = !DILocation(line: 797, column: 17, scope: !3286)
!3307 = !DILocation(line: 797, column: 3, scope: !3287)
!3308 = !DILocation(line: 799, column: 22, scope: !3285)
!3309 = !DILocation(line: 0, scope: !3285)
!3310 = !DILocation(line: 800, column: 7, scope: !3285)
!3311 = !DILocation(line: 797, column: 48, scope: !3286)
!3312 = !DILocation(line: 797, column: 3, scope: !3286)
!3313 = distinct !{!3313, !3307, !3314}
!3314 = !DILocation(line: 801, column: 5, scope: !3287)
!3315 = !DILocation(line: 802, column: 1, scope: !3276)
!3316 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !391, file: !391, line: 1966, type: !2661, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3317)
!3317 = !{!3318, !3319, !3320}
!3318 = !DILocalVariable(name: "gs", arg: 1, scope: !3316, file: !391, line: 1966, type: !2623)
!3319 = !DILocalVariable(name: "fn", scope: !3316, file: !391, line: 1968, type: !483)
!3320 = !DILocalVariable(name: "type", scope: !3316, file: !391, line: 1969, type: !483)
!3321 = !DILocation(line: 0, scope: !3316)
!3322 = !DILocation(line: 1968, column: 13, scope: !3316)
!3323 = !DILocation(line: 1969, column: 15, scope: !3316)
!3324 = !DILocation(line: 1972, column: 10, scope: !3316)
!3325 = !DILocation(line: 1976, column: 10, scope: !3316)
!3326 = !DILocation(line: 1976, column: 3, scope: !3316)
!3327 = distinct !DISubprogram(name: "gimple_call_fn", scope: !391, file: !391, line: 1911, type: !2661, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3328)
!3328 = !{!3329}
!3329 = !DILocalVariable(name: "gs", arg: 1, scope: !3327, file: !391, line: 1911, type: !2623)
!3330 = !DILocation(line: 0, scope: !3327)
!3331 = !DILocation(line: 1914, column: 10, scope: !3327)
!3332 = !DILocation(line: 1914, column: 3, scope: !3327)
!3333 = distinct !DISubprogram(name: "gimple_call_chain", scope: !391, file: !391, line: 1983, type: !2661, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3334)
!3334 = !{!3335}
!3335 = !DILocalVariable(name: "gs", arg: 1, scope: !3333, file: !391, line: 1983, type: !2623)
!3336 = !DILocation(line: 0, scope: !3333)
!3337 = !DILocation(line: 1986, column: 10, scope: !3333)
!3338 = !DILocation(line: 1986, column: 3, scope: !3333)
!3339 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !391, file: !391, line: 2013, type: !3340, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3342)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!7, !2623}
!3342 = !{!3343, !3344}
!3343 = !DILocalVariable(name: "gs", arg: 1, scope: !3339, file: !391, line: 2013, type: !2623)
!3344 = !DILocalVariable(name: "num_ops", scope: !3339, file: !391, line: 2015, type: !7)
!3345 = !DILocation(line: 0, scope: !3339)
!3346 = !DILocation(line: 2017, column: 13, scope: !3339)
!3347 = !DILocation(line: 2018, column: 18, scope: !3339)
!3348 = !DILocation(line: 2018, column: 3, scope: !3339)
!3349 = distinct !DISubprogram(name: "gimple_call_arg", scope: !391, file: !391, line: 2025, type: !3350, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3352)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{!483, !2623, !7}
!3352 = !{!3353, !3354}
!3353 = !DILocalVariable(name: "gs", arg: 1, scope: !3349, file: !391, line: 2025, type: !2623)
!3354 = !DILocalVariable(name: "index", arg: 2, scope: !3349, file: !391, line: 2025, type: !7)
!3355 = !DILocation(line: 0, scope: !3349)
!3356 = !DILocation(line: 2028, column: 31, scope: !3349)
!3357 = !DILocation(line: 2028, column: 10, scope: !3349)
!3358 = !DILocation(line: 2028, column: 3, scope: !3349)
!3359 = distinct !DISubprogram(name: "vn_reference_fold_indirect", scope: !3, file: !3, line: 831, type: !3360, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3363)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{null, !2975, !3362}
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369, !3370, !3373}
!3364 = !DILocalVariable(name: "ops", arg: 1, scope: !3359, file: !3, line: 831, type: !2975)
!3365 = !DILocalVariable(name: "i_p", arg: 2, scope: !3359, file: !3, line: 832, type: !3362)
!3366 = !DILocalVariable(name: "mem", scope: !3359, file: !3, line: 834, type: !1862)
!3367 = !DILocalVariable(name: "op", scope: !3359, file: !3, line: 835, type: !2806)
!3368 = !DILocalVariable(name: "i", scope: !3359, file: !3, line: 836, type: !7)
!3369 = !DILocalVariable(name: "j", scope: !3359, file: !3, line: 837, type: !7)
!3370 = !DILocalVariable(name: "aref", scope: !3371, file: !3, line: 846, type: !1874)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 845, column: 5)
!3372 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 843, column: 7)
!3373 = !DILocalVariable(name: "dom", scope: !3371, file: !3, line: 847, type: !483)
!3374 = !DILocation(line: 0, scope: !3359)
!3375 = !DILocation(line: 834, column: 3, scope: !3359)
!3376 = !DILocation(line: 834, column: 33, scope: !3359)
!3377 = !DILocation(line: 835, column: 3, scope: !3359)
!3378 = !DILocation(line: 836, column: 20, scope: !3359)
!3379 = !DILocation(line: 840, column: 8, scope: !3359)
!3380 = !DILocation(line: 840, column: 6, scope: !3359)
!3381 = !DILocation(line: 843, column: 7, scope: !3372)
!3382 = !DILocation(line: 843, column: 57, scope: !3372)
!3383 = !DILocation(line: 844, column: 7, scope: !3372)
!3384 = !DILocation(line: 844, column: 10, scope: !3372)
!3385 = !DILocation(line: 844, column: 54, scope: !3372)
!3386 = !DILocation(line: 843, column: 7, scope: !3359)
!3387 = !DILocation(line: 846, column: 7, scope: !3371)
!3388 = !DILocation(line: 848, column: 19, scope: !3371)
!3389 = !DILocation(line: 848, column: 12, scope: !3371)
!3390 = !DILocation(line: 848, column: 17, scope: !3371)
!3391 = !DILocation(line: 849, column: 12, scope: !3371)
!3392 = !DILocation(line: 849, column: 19, scope: !3371)
!3393 = !DILocation(line: 850, column: 18, scope: !3371)
!3394 = !DILocation(line: 850, column: 12, scope: !3371)
!3395 = !DILocation(line: 850, column: 16, scope: !3371)
!3396 = !DILocation(line: 851, column: 18, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 851, column: 11)
!3398 = !DILocation(line: 0, scope: !3371)
!3399 = !DILocation(line: 851, column: 16, scope: !3397)
!3400 = !DILocation(line: 852, column: 4, scope: !3397)
!3401 = !DILocation(line: 852, column: 7, scope: !3397)
!3402 = !DILocation(line: 851, column: 11, scope: !3371)
!3403 = !DILocation(line: 853, column: 11, scope: !3397)
!3404 = !DILocation(line: 853, column: 2, scope: !3397)
!3405 = !DILocation(line: 854, column: 23, scope: !3371)
!3406 = !DILocation(line: 854, column: 12, scope: !3371)
!3407 = !DILocation(line: 854, column: 16, scope: !3371)
!3408 = !DILocation(line: 855, column: 18, scope: !3371)
!3409 = !DILocation(line: 855, column: 12, scope: !3371)
!3410 = !DILocation(line: 855, column: 16, scope: !3371)
!3411 = !DILocation(line: 856, column: 7, scope: !3371)
!3412 = !DILocation(line: 857, column: 5, scope: !3372)
!3413 = !DILocation(line: 858, column: 32, scope: !3359)
!3414 = !DILocation(line: 857, column: 5, scope: !3371)
!3415 = !DILocation(line: 858, column: 3, scope: !3359)
!3416 = !DILocation(line: 861, column: 7, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 861, column: 7)
!3418 = !DILocation(line: 861, column: 43, scope: !3417)
!3419 = !DILocation(line: 861, column: 7, scope: !3359)
!3420 = !DILocation(line: 863, column: 7, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 862, column: 5)
!3422 = !DILocation(line: 865, column: 7, scope: !3421)
!3423 = !DILocation(line: 867, column: 5, scope: !3421)
!3424 = !DILocation(line: 868, column: 12, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 868, column: 12)
!3426 = !DILocation(line: 868, column: 48, scope: !3425)
!3427 = !DILocation(line: 868, column: 12, scope: !3417)
!3428 = !DILocation(line: 870, column: 7, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 869, column: 5)
!3430 = !DILocation(line: 872, column: 7, scope: !3429)
!3431 = !DILocation(line: 874, column: 5, scope: !3429)
!3432 = !DILocation(line: 875, column: 12, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 875, column: 12)
!3434 = !DILocation(line: 875, column: 48, scope: !3433)
!3435 = !DILocation(line: 875, column: 12, scope: !3425)
!3436 = !DILocation(line: 877, column: 7, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 876, column: 5)
!3438 = !DILocation(line: 879, column: 7, scope: !3437)
!3439 = !DILocation(line: 882, column: 12, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 882, column: 7)
!3441 = !DILocation(line: 0, scope: !3440)
!3442 = !DILocation(line: 882, column: 19, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 882, column: 7)
!3444 = !DILocation(line: 882, column: 7, scope: !3440)
!3445 = !DILocation(line: 883, column: 2, scope: !3443)
!3446 = !DILocation(line: 882, column: 65, scope: !3443)
!3447 = !DILocation(line: 882, column: 7, scope: !3443)
!3448 = distinct !{!3448, !3444, !3449}
!3449 = !DILocation(line: 883, column: 2, scope: !3440)
!3450 = !DILocation(line: 886, column: 5, scope: !3433)
!3451 = !DILocation(line: 888, column: 3, scope: !3359)
!3452 = !DILocation(line: 889, column: 8, scope: !3359)
!3453 = !DILocation(line: 890, column: 1, scope: !3359)
!3454 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_replace", scope: !480, file: !480, line: 83, type: !3455, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3457)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{!2807, !2835, !7, !1916}
!3457 = !{!3458, !3459, !3460, !3461}
!3458 = !DILocalVariable(name: "vec_", arg: 1, scope: !3454, file: !480, line: 83, type: !2835)
!3459 = !DILocalVariable(name: "ix_", arg: 2, scope: !3454, file: !480, line: 83, type: !7)
!3460 = !DILocalVariable(name: "obj_", arg: 3, scope: !3454, file: !480, line: 83, type: !1916)
!3461 = !DILocalVariable(name: "slot_", scope: !3454, file: !480, line: 83, type: !2807)
!3462 = !DILocation(line: 0, scope: !3454)
!3463 = !DILocation(line: 83, column: 1, scope: !3454)
!3464 = !DILocation(line: 83, column: 1, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3454, file: !480, line: 83, column: 1)
!3466 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_ordered_remove", scope: !480, file: !480, line: 83, type: !3467, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3469)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{null, !2835, !7}
!3469 = !{!3470, !3471, !3472}
!3470 = !DILocalVariable(name: "vec_", arg: 1, scope: !3466, file: !480, line: 83, type: !2835)
!3471 = !DILocalVariable(name: "ix_", arg: 2, scope: !3466, file: !480, line: 83, type: !7)
!3472 = !DILocalVariable(name: "slot_", scope: !3466, file: !480, line: 83, type: !2807)
!3473 = !DILocation(line: 0, scope: !3466)
!3474 = !DILocation(line: 83, column: 1, scope: !3466)
!3475 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_safe_insert", scope: !480, file: !480, line: 84, type: !3476, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3478)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{!2807, !2975, !7, !1916}
!3478 = !{!3479, !3480, !3481}
!3479 = !DILocalVariable(name: "vec_", arg: 1, scope: !3475, file: !480, line: 84, type: !2975)
!3480 = !DILocalVariable(name: "ix_", arg: 2, scope: !3475, file: !480, line: 84, type: !7)
!3481 = !DILocalVariable(name: "obj_", arg: 3, scope: !3475, file: !480, line: 84, type: !1916)
!3482 = !DILocation(line: 0, scope: !3475)
!3483 = !DILocation(line: 84, column: 1, scope: !3475)
!3484 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_free", scope: !480, file: !480, line: 84, type: !3485, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3487)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{null, !2975}
!3487 = !{!3488}
!3488 = !DILocalVariable(name: "vec_", arg: 1, scope: !3484, file: !480, line: 84, type: !2975)
!3489 = !DILocation(line: 0, scope: !3484)
!3490 = !DILocation(line: 84, column: 1, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !480, line: 84, column: 1)
!3492 = !DILocation(line: 84, column: 1, scope: !3484)
!3493 = distinct !DISubprogram(name: "vn_reference_lookup_pieces", scope: !3, file: !3, line: 1191, type: !3494, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3497)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!483, !483, !1116, !483, !1862, !3496, !470}
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!3497 = !{!3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506}
!3498 = !DILocalVariable(name: "vuse", arg: 1, scope: !3493, file: !3, line: 1191, type: !483)
!3499 = !DILocalVariable(name: "set", arg: 2, scope: !3493, file: !3, line: 1191, type: !1116)
!3500 = !DILocalVariable(name: "type", arg: 3, scope: !3493, file: !3, line: 1191, type: !483)
!3501 = !DILocalVariable(name: "operands", arg: 4, scope: !3493, file: !3, line: 1192, type: !1862)
!3502 = !DILocalVariable(name: "vnresult", arg: 5, scope: !3493, file: !3, line: 1193, type: !3496)
!3503 = !DILocalVariable(name: "maywalk", arg: 6, scope: !3493, file: !3, line: 1193, type: !470)
!3504 = !DILocalVariable(name: "vr1", scope: !3493, file: !3, line: 1195, type: !1854)
!3505 = !DILocalVariable(name: "tmp", scope: !3493, file: !3, line: 1196, type: !1884)
!3506 = !DILocalVariable(name: "r", scope: !3507, file: !3, line: 1221, type: !3114)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !3, line: 1220, column: 5)
!3508 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 1217, column: 7)
!3509 = !DILocation(line: 0, scope: !3493)
!3510 = !DILocation(line: 1195, column: 3, scope: !3493)
!3511 = !DILocation(line: 1196, column: 3, scope: !3493)
!3512 = !DILocation(line: 1198, column: 8, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 1198, column: 7)
!3514 = !DILocation(line: 1198, column: 7, scope: !3493)
!3515 = !DILocation(line: 1200, column: 13, scope: !3493)
!3516 = !DILocation(line: 1202, column: 14, scope: !3493)
!3517 = !DILocation(line: 1202, column: 21, scope: !3493)
!3518 = !DILocation(line: 1202, column: 7, scope: !3493)
!3519 = !DILocation(line: 1202, column: 12, scope: !3493)
!3520 = !DILocation(line: 1203, column: 3, scope: !3493)
!3521 = !DILocation(line: 1204, column: 3, scope: !3493)
!3522 = !DILocation(line: 1206, column: 11, scope: !3493)
!3523 = !DILocation(line: 1207, column: 4, scope: !3493)
!3524 = !DILocation(line: 1209, column: 6, scope: !3493)
!3525 = !DILocation(line: 1209, column: 4, scope: !3493)
!3526 = !DILocation(line: 1206, column: 3, scope: !3493)
!3527 = !DILocation(line: 1211, column: 22, scope: !3493)
!3528 = !DILocation(line: 1211, column: 7, scope: !3493)
!3529 = !DILocation(line: 1211, column: 5, scope: !3493)
!3530 = !DILocation(line: 1210, column: 7, scope: !3493)
!3531 = !DILocation(line: 1210, column: 16, scope: !3493)
!3532 = !DILocation(line: 1212, column: 7, scope: !3493)
!3533 = !DILocation(line: 1212, column: 12, scope: !3493)
!3534 = !DILocation(line: 1213, column: 7, scope: !3493)
!3535 = !DILocation(line: 1213, column: 11, scope: !3493)
!3536 = !DILocation(line: 1214, column: 18, scope: !3493)
!3537 = !DILocation(line: 1214, column: 7, scope: !3493)
!3538 = !DILocation(line: 1214, column: 16, scope: !3493)
!3539 = !DILocation(line: 1215, column: 3, scope: !3493)
!3540 = !DILocation(line: 1217, column: 8, scope: !3508)
!3541 = !DILocation(line: 1218, column: 10, scope: !3508)
!3542 = !DILocation(line: 1218, column: 7, scope: !3508)
!3543 = !DILocation(line: 1219, column: 14, scope: !3508)
!3544 = !DILocation(line: 1219, column: 10, scope: !3508)
!3545 = !DILocation(line: 1217, column: 7, scope: !3493)
!3546 = !DILocation(line: 1221, column: 7, scope: !3507)
!3547 = !DILocation(line: 1222, column: 61, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 1222, column: 11)
!3549 = !DILocation(line: 0, scope: !3507)
!3550 = !DILocation(line: 1222, column: 11, scope: !3548)
!3551 = !DILocation(line: 1222, column: 11, scope: !3507)
!3552 = !DILocation(line: 1224, column: 52, scope: !3548)
!3553 = !DILocation(line: 1224, column: 20, scope: !3548)
!3554 = !DILocation(line: 1223, column: 12, scope: !3548)
!3555 = !DILocation(line: 1223, column: 2, scope: !3548)
!3556 = !DILocation(line: 1227, column: 15, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 1227, column: 11)
!3558 = !DILocation(line: 1227, column: 24, scope: !3557)
!3559 = !DILocation(line: 1227, column: 11, scope: !3507)
!3560 = !DILocation(line: 1228, column: 2, scope: !3557)
!3561 = !DILocation(line: 1229, column: 5, scope: !3508)
!3562 = !DILocation(line: 1231, column: 7, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 1231, column: 7)
!3564 = !DILocation(line: 1229, column: 5, scope: !3507)
!3565 = !DILocation(line: 1231, column: 7, scope: !3493)
!3566 = !DILocation(line: 1232, column: 26, scope: !3563)
!3567 = !DILocation(line: 1232, column: 6, scope: !3563)
!3568 = !DILocation(line: 1235, column: 1, scope: !3493)
!3569 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_truncate", scope: !480, file: !480, line: 83, type: !3467, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3570)
!3570 = !{!3571, !3572}
!3571 = !DILocalVariable(name: "vec_", arg: 1, scope: !3569, file: !480, line: 83, type: !2835)
!3572 = !DILocalVariable(name: "size_", arg: 2, scope: !3569, file: !480, line: 83, type: !7)
!3573 = !DILocation(line: 0, scope: !3569)
!3574 = !DILocation(line: 83, column: 1, scope: !3569)
!3575 = !DILocation(line: 83, column: 1, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3569, file: !480, line: 83, column: 1)
!3577 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_safe_grow", scope: !480, file: !480, line: 84, type: !3578, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3580)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{null, !2975, !471}
!3580 = !{!3581, !3582}
!3581 = !DILocalVariable(name: "vec_", arg: 1, scope: !3577, file: !480, line: 84, type: !2975)
!3582 = !DILocalVariable(name: "size_", arg: 2, scope: !3577, file: !480, line: 84, type: !471)
!3583 = !DILocation(line: 0, scope: !3577)
!3584 = !DILocation(line: 84, column: 1, scope: !3577)
!3585 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_address", scope: !480, file: !480, line: 83, type: !3586, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3588)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!2807, !2835}
!3588 = !{!3589}
!3589 = !DILocalVariable(name: "vec_", arg: 1, scope: !3585, file: !480, line: 83, type: !2835)
!3590 = !DILocation(line: 0, scope: !3585)
!3591 = !DILocation(line: 83, column: 1, scope: !3585)
!3592 = distinct !DISubprogram(name: "valueize_refs", scope: !3, file: !3, line: 897, type: !3593, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3595)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{!1862, !1862}
!3595 = !{!3596, !3597, !3598}
!3596 = !DILocalVariable(name: "orig", arg: 1, scope: !3592, file: !3, line: 897, type: !1862)
!3597 = !DILocalVariable(name: "vro", scope: !3592, file: !3, line: 899, type: !2806)
!3598 = !DILocalVariable(name: "i", scope: !3592, file: !3, line: 900, type: !7)
!3599 = !DILocation(line: 0, scope: !3592)
!3600 = !DILocation(line: 899, column: 3, scope: !3592)
!3601 = !DILocation(line: 900, column: 3, scope: !3592)
!3602 = !DILocation(line: 902, column: 8, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 902, column: 3)
!3604 = !DILocation(line: 902, column: 15, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 902, column: 3)
!3606 = !DILocation(line: 0, scope: !3603)
!3607 = !DILocation(line: 902, column: 3, scope: !3603)
!3608 = !DILocation(line: 904, column: 11, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 904, column: 11)
!3610 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 903, column: 5)
!3611 = !DILocation(line: 904, column: 16, scope: !3609)
!3612 = !DILocation(line: 904, column: 23, scope: !3609)
!3613 = !DILocation(line: 905, column: 4, scope: !3609)
!3614 = !DILocation(line: 0, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 906, column: 2)
!3616 = !DILocation(line: 907, column: 15, scope: !3615)
!3617 = !DILocation(line: 905, column: 13, scope: !3609)
!3618 = !DILocation(line: 905, column: 8, scope: !3609)
!3619 = !DILocation(line: 905, column: 17, scope: !3609)
!3620 = !DILocation(line: 905, column: 20, scope: !3609)
!3621 = !DILocation(line: 905, column: 41, scope: !3609)
!3622 = !DILocation(line: 904, column: 11, scope: !3610)
!3623 = !DILocation(line: 907, column: 4, scope: !3615)
!3624 = !DILocation(line: 907, column: 9, scope: !3615)
!3625 = !DILocation(line: 907, column: 13, scope: !3615)
!3626 = !DILocation(line: 910, column: 8, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 910, column: 8)
!3628 = !DILocation(line: 910, column: 29, scope: !3627)
!3629 = !DILocation(line: 910, column: 41, scope: !3627)
!3630 = !DILocation(line: 910, column: 49, scope: !3627)
!3631 = !DILocation(line: 910, column: 56, scope: !3627)
!3632 = !DILocation(line: 910, column: 8, scope: !3615)
!3633 = !DILocation(line: 911, column: 20, scope: !3627)
!3634 = !DILocation(line: 911, column: 18, scope: !3627)
!3635 = !DILocation(line: 911, column: 6, scope: !3627)
!3636 = !DILocation(line: 914, column: 8, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 914, column: 8)
!3638 = !DILocation(line: 914, column: 10, scope: !3637)
!3639 = !DILocation(line: 914, column: 14, scope: !3637)
!3640 = !DILocation(line: 914, column: 17, scope: !3637)
!3641 = !DILocation(line: 914, column: 38, scope: !3637)
!3642 = !DILocation(line: 915, column: 8, scope: !3637)
!3643 = !DILocation(line: 915, column: 11, scope: !3637)
!3644 = !DILocation(line: 916, column: 22, scope: !3637)
!3645 = !DILocation(line: 916, column: 29, scope: !3637)
!3646 = !DILocation(line: 914, column: 8, scope: !3615)
!3647 = !DILocation(line: 918, column: 8, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 917, column: 6)
!3649 = !DILocation(line: 919, column: 8, scope: !3648)
!3650 = !DILocation(line: 922, column: 11, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 922, column: 11)
!3652 = !DILocation(line: 922, column: 16, scope: !3651)
!3653 = !DILocation(line: 922, column: 20, scope: !3651)
!3654 = !DILocation(line: 922, column: 23, scope: !3651)
!3655 = !DILocation(line: 922, column: 44, scope: !3651)
!3656 = !DILocation(line: 922, column: 11, scope: !3610)
!3657 = !DILocation(line: 923, column: 13, scope: !3651)
!3658 = !DILocation(line: 923, column: 2, scope: !3651)
!3659 = !DILocation(line: 923, column: 7, scope: !3651)
!3660 = !DILocation(line: 923, column: 11, scope: !3651)
!3661 = !DILocation(line: 924, column: 11, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 924, column: 11)
!3663 = !DILocation(line: 924, column: 16, scope: !3662)
!3664 = !DILocation(line: 924, column: 20, scope: !3662)
!3665 = !DILocation(line: 924, column: 23, scope: !3662)
!3666 = !DILocation(line: 924, column: 44, scope: !3662)
!3667 = !DILocation(line: 924, column: 11, scope: !3610)
!3668 = !DILocation(line: 925, column: 13, scope: !3662)
!3669 = !DILocation(line: 925, column: 2, scope: !3662)
!3670 = !DILocation(line: 925, column: 7, scope: !3662)
!3671 = !DILocation(line: 925, column: 11, scope: !3662)
!3672 = !DILocation(line: 902, column: 63, scope: !3605)
!3673 = !DILocation(line: 902, column: 3, scope: !3605)
!3674 = distinct !{!3674, !3607, !3675}
!3675 = !DILocation(line: 926, column: 5, scope: !3603)
!3676 = !DILocation(line: 928, column: 10, scope: !3592)
!3677 = !DILocation(line: 929, column: 1, scope: !3592)
!3678 = !DILocation(line: 928, column: 3, scope: !3592)
!3679 = distinct !DISubprogram(name: "vn_reference_lookup_1", scope: !3, file: !3, line: 969, type: !3680, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3682)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!483, !1884, !3496}
!3682 = !{!3683, !3684, !3685, !3686}
!3683 = !DILocalVariable(name: "vr", arg: 1, scope: !3679, file: !3, line: 969, type: !1884)
!3684 = !DILocalVariable(name: "vnresult", arg: 2, scope: !3679, file: !3, line: 969, type: !3496)
!3685 = !DILocalVariable(name: "slot", scope: !3679, file: !3, line: 971, type: !1315)
!3686 = !DILocalVariable(name: "hash", scope: !3679, file: !3, line: 972, type: !1301)
!3687 = !DILocation(line: 0, scope: !3679)
!3688 = !DILocation(line: 974, column: 14, scope: !3679)
!3689 = !DILocation(line: 975, column: 36, scope: !3679)
!3690 = !DILocation(line: 975, column: 50, scope: !3679)
!3691 = !DILocation(line: 975, column: 62, scope: !3679)
!3692 = !DILocation(line: 975, column: 10, scope: !3679)
!3693 = !DILocation(line: 977, column: 8, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 977, column: 7)
!3695 = !DILocation(line: 977, column: 13, scope: !3694)
!3696 = !DILocation(line: 977, column: 16, scope: !3694)
!3697 = !DILocation(line: 977, column: 32, scope: !3694)
!3698 = !DILocation(line: 977, column: 29, scope: !3694)
!3699 = !DILocation(line: 977, column: 7, scope: !3679)
!3700 = !DILocation(line: 978, column: 38, scope: !3694)
!3701 = !DILocation(line: 978, column: 50, scope: !3694)
!3702 = !DILocation(line: 978, column: 12, scope: !3694)
!3703 = !DILocation(line: 978, column: 5, scope: !3694)
!3704 = !DILocation(line: 980, column: 7, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 980, column: 7)
!3706 = !DILocation(line: 980, column: 7, scope: !3679)
!3707 = !DILocation(line: 982, column: 11, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 982, column: 11)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 981, column: 5)
!3710 = !DILocation(line: 982, column: 11, scope: !3709)
!3711 = !DILocation(line: 983, column: 30, scope: !3708)
!3712 = !DILocation(line: 983, column: 12, scope: !3708)
!3713 = !DILocation(line: 983, column: 2, scope: !3708)
!3714 = !DILocation(line: 984, column: 31, scope: !3709)
!3715 = !DILocation(line: 984, column: 39, scope: !3709)
!3716 = !DILocation(line: 984, column: 7, scope: !3709)
!3717 = !DILocation(line: 988, column: 1, scope: !3679)
!3718 = distinct !DISubprogram(name: "vn_reference_lookup_2", scope: !3, file: !3, line: 996, type: !3719, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3721)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!475, !3113, !483, !475}
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727}
!3722 = !DILocalVariable(name: "op", arg: 1, scope: !3718, file: !3, line: 996, type: !3113)
!3723 = !DILocalVariable(name: "vuse", arg: 2, scope: !3718, file: !3, line: 996, type: !483)
!3724 = !DILocalVariable(name: "vr_", arg: 3, scope: !3718, file: !3, line: 996, type: !475)
!3725 = !DILocalVariable(name: "vr", scope: !3718, file: !3, line: 998, type: !1884)
!3726 = !DILocalVariable(name: "slot", scope: !3718, file: !3, line: 999, type: !1315)
!3727 = !DILocalVariable(name: "hash", scope: !3718, file: !3, line: 1000, type: !1301)
!3728 = !DILocation(line: 0, scope: !3718)
!3729 = !DILocation(line: 1002, column: 7, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3718, file: !3, line: 1002, column: 7)
!3731 = !DILocation(line: 1002, column: 7, scope: !3718)
!3732 = !DILocation(line: 1003, column: 20, scope: !3730)
!3733 = !DILocation(line: 1003, column: 5, scope: !3730)
!3734 = !DILocation(line: 1006, column: 11, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3718, file: !3, line: 1006, column: 7)
!3736 = !DILocation(line: 1006, column: 7, scope: !3735)
!3737 = !DILocation(line: 1006, column: 7, scope: !3718)
!3738 = !DILocation(line: 1007, column: 24, scope: !3735)
!3739 = !DILocation(line: 1007, column: 35, scope: !3735)
!3740 = !DILocation(line: 1007, column: 33, scope: !3735)
!3741 = !DILocation(line: 1007, column: 18, scope: !3735)
!3742 = !DILocation(line: 1007, column: 5, scope: !3735)
!3743 = !DILocation(line: 1008, column: 14, scope: !3718)
!3744 = !DILocation(line: 1008, column: 12, scope: !3718)
!3745 = !DILocation(line: 1009, column: 7, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3718, file: !3, line: 1009, column: 7)
!3747 = !DILocation(line: 1009, column: 7, scope: !3718)
!3748 = !DILocation(line: 1012, column: 14, scope: !3718)
!3749 = !DILocation(line: 1010, column: 24, scope: !3746)
!3750 = !DILocation(line: 1010, column: 35, scope: !3746)
!3751 = !DILocation(line: 1010, column: 33, scope: !3746)
!3752 = !DILocation(line: 1010, column: 18, scope: !3746)
!3753 = !DILocation(line: 1010, column: 5, scope: !3746)
!3754 = !DILocation(line: 1013, column: 36, scope: !3718)
!3755 = !DILocation(line: 1013, column: 50, scope: !3718)
!3756 = !DILocation(line: 1013, column: 10, scope: !3718)
!3757 = !DILocation(line: 1015, column: 8, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3718, file: !3, line: 1015, column: 7)
!3759 = !DILocation(line: 1015, column: 13, scope: !3758)
!3760 = !DILocation(line: 1015, column: 16, scope: !3758)
!3761 = !DILocation(line: 1015, column: 32, scope: !3758)
!3762 = !DILocation(line: 1015, column: 29, scope: !3758)
!3763 = !DILocation(line: 1015, column: 7, scope: !3718)
!3764 = !DILocation(line: 1016, column: 38, scope: !3758)
!3765 = !DILocation(line: 1016, column: 50, scope: !3758)
!3766 = !DILocation(line: 1016, column: 12, scope: !3758)
!3767 = !DILocation(line: 1016, column: 5, scope: !3758)
!3768 = !DILocation(line: 1018, column: 7, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3718, file: !3, line: 1018, column: 7)
!3770 = !DILocation(line: 1018, column: 7, scope: !3718)
!3771 = !DILocation(line: 1019, column: 12, scope: !3769)
!3772 = !DILocation(line: 1019, column: 5, scope: !3769)
!3773 = !DILocation(line: 1022, column: 1, scope: !3718)
!3774 = distinct !DISubprogram(name: "vn_reference_lookup_3", scope: !3, file: !3, line: 1030, type: !3719, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3775)
!3775 = !{!3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3788, !3789, !3790, !3791, !3792, !3795, !3796, !3799, !3800, !3801, !3802, !3805, !3806, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818}
!3776 = !DILocalVariable(name: "ref", arg: 1, scope: !3774, file: !3, line: 1030, type: !3113)
!3777 = !DILocalVariable(name: "vuse", arg: 2, scope: !3774, file: !3, line: 1030, type: !483)
!3778 = !DILocalVariable(name: "vr_", arg: 3, scope: !3774, file: !3, line: 1030, type: !475)
!3779 = !DILocalVariable(name: "vr", scope: !3774, file: !3, line: 1032, type: !1884)
!3780 = !DILocalVariable(name: "def_stmt", scope: !3774, file: !3, line: 1033, type: !807)
!3781 = !DILocalVariable(name: "fndecl", scope: !3774, file: !3, line: 1034, type: !483)
!3782 = !DILocalVariable(name: "base", scope: !3774, file: !3, line: 1035, type: !483)
!3783 = !DILocalVariable(name: "offset", scope: !3774, file: !3, line: 1036, type: !539)
!3784 = !DILocalVariable(name: "maxsize", scope: !3774, file: !3, line: 1036, type: !539)
!3785 = !DILocalVariable(name: "ref2", scope: !3786, file: !3, line: 1059, type: !483)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1058, column: 5)
!3787 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1050, column: 7)
!3788 = !DILocalVariable(name: "base2", scope: !3786, file: !3, line: 1060, type: !483)
!3789 = !DILocalVariable(name: "offset2", scope: !3786, file: !3, line: 1061, type: !539)
!3790 = !DILocalVariable(name: "size2", scope: !3786, file: !3, line: 1061, type: !539)
!3791 = !DILocalVariable(name: "maxsize2", scope: !3786, file: !3, line: 1061, type: !539)
!3792 = !DILocalVariable(name: "val", scope: !3793, file: !3, line: 1070, type: !483)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 1069, column: 2)
!3794 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 1064, column: 11)
!3795 = !DILocalVariable(name: "value_id", scope: !3793, file: !3, line: 1071, type: !7)
!3796 = !DILocalVariable(name: "base2", scope: !3797, file: !3, line: 1085, type: !483)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1084, column: 5)
!3798 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1080, column: 12)
!3799 = !DILocalVariable(name: "offset2", scope: !3797, file: !3, line: 1086, type: !539)
!3800 = !DILocalVariable(name: "size2", scope: !3797, file: !3, line: 1086, type: !539)
!3801 = !DILocalVariable(name: "maxsize2", scope: !3797, file: !3, line: 1086, type: !539)
!3802 = !DILocalVariable(name: "val", scope: !3803, file: !3, line: 1093, type: !483)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 1092, column: 2)
!3804 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 1089, column: 11)
!3805 = !DILocalVariable(name: "value_id", scope: !3803, file: !3, line: 1094, type: !7)
!3806 = !DILocalVariable(name: "base2", scope: !3807, file: !3, line: 1109, type: !483)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 1108, column: 5)
!3808 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1104, column: 12)
!3809 = !DILocalVariable(name: "offset2", scope: !3807, file: !3, line: 1110, type: !539)
!3810 = !DILocalVariable(name: "size2", scope: !3807, file: !3, line: 1110, type: !539)
!3811 = !DILocalVariable(name: "maxsize2", scope: !3807, file: !3, line: 1110, type: !539)
!3812 = !DILocalVariable(name: "i", scope: !3807, file: !3, line: 1111, type: !471)
!3813 = !DILocalVariable(name: "j", scope: !3807, file: !3, line: 1111, type: !471)
!3814 = !DILocalVariable(name: "lhs", scope: !3807, file: !3, line: 1112, type: !1862)
!3815 = !DILocalVariable(name: "rhs", scope: !3807, file: !3, line: 1112, type: !1862)
!3816 = !DILocalVariable(name: "vro", scope: !3807, file: !3, line: 1113, type: !2806)
!3817 = !DILocalVariable(name: "r", scope: !3807, file: !3, line: 1114, type: !3114)
!3818 = !DILocalVariable(name: "old", scope: !3819, file: !3, line: 1151, type: !1862)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 1150, column: 2)
!3820 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1148, column: 11)
!3821 = !DILocation(line: 0, scope: !3774)
!3822 = !DILocation(line: 1032, column: 23, scope: !3774)
!3823 = !DILocation(line: 1033, column: 21, scope: !3774)
!3824 = !DILocation(line: 1038, column: 10, scope: !3774)
!3825 = !DILocation(line: 1039, column: 17, scope: !3774)
!3826 = !DILocation(line: 1040, column: 18, scope: !3774)
!3827 = !DILocation(line: 1044, column: 15, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1044, column: 7)
!3829 = !DILocation(line: 1044, column: 7, scope: !3774)
!3830 = !DILocation(line: 1050, column: 31, scope: !3787)
!3831 = !DILocation(line: 1050, column: 7, scope: !3787)
!3832 = !DILocation(line: 1051, column: 7, scope: !3787)
!3833 = !DILocation(line: 1051, column: 10, scope: !3787)
!3834 = !DILocation(line: 1052, column: 7, scope: !3787)
!3835 = !DILocation(line: 1052, column: 20, scope: !3787)
!3836 = !DILocation(line: 1052, column: 18, scope: !3787)
!3837 = !DILocation(line: 1053, column: 7, scope: !3787)
!3838 = !DILocation(line: 1053, column: 10, scope: !3787)
!3839 = !DILocation(line: 1053, column: 39, scope: !3787)
!3840 = !DILocation(line: 1054, column: 7, scope: !3787)
!3841 = !DILocation(line: 1054, column: 10, scope: !3787)
!3842 = !DILocation(line: 1054, column: 38, scope: !3787)
!3843 = !DILocation(line: 1055, column: 7, scope: !3787)
!3844 = !DILocation(line: 1055, column: 25, scope: !3787)
!3845 = !DILocation(line: 1055, column: 10, scope: !3787)
!3846 = !DILocation(line: 1056, column: 7, scope: !3787)
!3847 = !DILocation(line: 1056, column: 25, scope: !3787)
!3848 = !DILocation(line: 1056, column: 10, scope: !3787)
!3849 = !DILocation(line: 1057, column: 7, scope: !3787)
!3850 = !DILocation(line: 1057, column: 10, scope: !3787)
!3851 = !DILocation(line: 1057, column: 52, scope: !3787)
!3852 = !DILocation(line: 1050, column: 7, scope: !3774)
!3853 = !DILocation(line: 1059, column: 19, scope: !3786)
!3854 = !DILocation(line: 0, scope: !3786)
!3855 = !DILocation(line: 1061, column: 7, scope: !3786)
!3856 = !DILocation(line: 1062, column: 15, scope: !3786)
!3857 = !DILocation(line: 1063, column: 15, scope: !3786)
!3858 = !DILocation(line: 1063, column: 64, scope: !3786)
!3859 = !DILocation(line: 1063, column: 13, scope: !3786)
!3860 = !DILocation(line: 1064, column: 41, scope: !3794)
!3861 = !DILocation(line: 1065, column: 7, scope: !3794)
!3862 = !DILocation(line: 1065, column: 4, scope: !3794)
!3863 = !DILocation(line: 1066, column: 4, scope: !3794)
!3864 = !DILocation(line: 1066, column: 7, scope: !3794)
!3865 = !DILocation(line: 1067, column: 7, scope: !3794)
!3866 = !DILocation(line: 1067, column: 15, scope: !3794)
!3867 = !DILocation(line: 1067, column: 4, scope: !3794)
!3868 = !DILocation(line: 1068, column: 17, scope: !3794)
!3869 = !DILocation(line: 1068, column: 15, scope: !3794)
!3870 = !DILocation(line: 1068, column: 33, scope: !3794)
!3871 = !DILocation(line: 1068, column: 23, scope: !3794)
!3872 = !DILocation(line: 1064, column: 11, scope: !3786)
!3873 = !DILocation(line: 1070, column: 15, scope: !3793)
!3874 = !DILocation(line: 0, scope: !3793)
!3875 = !DILocation(line: 1071, column: 28, scope: !3793)
!3876 = !DILocation(line: 1072, column: 49, scope: !3793)
!3877 = !DILocation(line: 1072, column: 58, scope: !3793)
!3878 = !DILocation(line: 1073, column: 11, scope: !3793)
!3879 = !DILocation(line: 1072, column: 11, scope: !3793)
!3880 = !DILocation(line: 1077, column: 5, scope: !3787)
!3881 = !DILocation(line: 1080, column: 36, scope: !3798)
!3882 = !DILocation(line: 1080, column: 12, scope: !3798)
!3883 = !DILocation(line: 1081, column: 5, scope: !3798)
!3884 = !DILocation(line: 1081, column: 8, scope: !3798)
!3885 = !DILocation(line: 1082, column: 5, scope: !3798)
!3886 = !DILocation(line: 1082, column: 8, scope: !3798)
!3887 = !DILocation(line: 1082, column: 42, scope: !3798)
!3888 = !DILocation(line: 1083, column: 5, scope: !3798)
!3889 = !DILocation(line: 1083, column: 8, scope: !3798)
!3890 = !DILocation(line: 1083, column: 58, scope: !3798)
!3891 = !DILocation(line: 1080, column: 12, scope: !3787)
!3892 = !DILocation(line: 1086, column: 7, scope: !3797)
!3893 = !DILocation(line: 1087, column: 40, scope: !3797)
!3894 = !DILocation(line: 0, scope: !3797)
!3895 = !DILocation(line: 1087, column: 15, scope: !3797)
!3896 = !DILocation(line: 1089, column: 11, scope: !3804)
!3897 = !DILocation(line: 1090, column: 7, scope: !3804)
!3898 = !DILocation(line: 1090, column: 15, scope: !3804)
!3899 = !DILocation(line: 1090, column: 4, scope: !3804)
!3900 = !DILocation(line: 1091, column: 17, scope: !3804)
!3901 = !DILocation(line: 1091, column: 15, scope: !3804)
!3902 = !DILocation(line: 1091, column: 33, scope: !3804)
!3903 = !DILocation(line: 1091, column: 23, scope: !3804)
!3904 = !DILocation(line: 1089, column: 11, scope: !3797)
!3905 = !DILocation(line: 1093, column: 15, scope: !3803)
!3906 = !DILocation(line: 0, scope: !3803)
!3907 = !DILocation(line: 1094, column: 28, scope: !3803)
!3908 = !DILocation(line: 1095, column: 49, scope: !3803)
!3909 = !DILocation(line: 1095, column: 58, scope: !3803)
!3910 = !DILocation(line: 1096, column: 11, scope: !3803)
!3911 = !DILocation(line: 1095, column: 11, scope: !3803)
!3912 = !DILocation(line: 1100, column: 5, scope: !3798)
!3913 = !DILocation(line: 1104, column: 12, scope: !3808)
!3914 = !DILocation(line: 1105, column: 5, scope: !3808)
!3915 = !DILocation(line: 1105, column: 9, scope: !3808)
!3916 = !DILocation(line: 1106, column: 9, scope: !3808)
!3917 = !DILocation(line: 1106, column: 12, scope: !3808)
!3918 = !DILocation(line: 1107, column: 9, scope: !3808)
!3919 = !DILocation(line: 1107, column: 33, scope: !3808)
!3920 = !DILocation(line: 1107, column: 12, scope: !3808)
!3921 = !DILocation(line: 1104, column: 12, scope: !3798)
!3922 = !DILocation(line: 1110, column: 7, scope: !3807)
!3923 = !DILocation(line: 1112, column: 7, scope: !3807)
!3924 = !DILocation(line: 0, scope: !3807)
!3925 = !DILocation(line: 1112, column: 38, scope: !3807)
!3926 = !DILocation(line: 1112, column: 51, scope: !3807)
!3927 = !DILocation(line: 1113, column: 7, scope: !3807)
!3928 = !DILocation(line: 1114, column: 7, scope: !3807)
!3929 = !DILocation(line: 1117, column: 40, scope: !3807)
!3930 = !DILocation(line: 1117, column: 15, scope: !3807)
!3931 = !DILocation(line: 1119, column: 12, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1119, column: 11)
!3933 = !DILocation(line: 1120, column: 7, scope: !3932)
!3934 = !DILocation(line: 1120, column: 15, scope: !3932)
!3935 = !DILocation(line: 1120, column: 4, scope: !3932)
!3936 = !DILocation(line: 1121, column: 17, scope: !3932)
!3937 = !DILocation(line: 1121, column: 15, scope: !3932)
!3938 = !DILocation(line: 1121, column: 32, scope: !3932)
!3939 = !DILocation(line: 1121, column: 23, scope: !3932)
!3940 = !DILocation(line: 1119, column: 11, scope: !3807)
!3941 = !DILocation(line: 1125, column: 36, scope: !3807)
!3942 = !DILocation(line: 1125, column: 7, scope: !3807)
!3943 = !DILocation(line: 1126, column: 11, scope: !3807)
!3944 = !DILocation(line: 1127, column: 11, scope: !3807)
!3945 = !DILocation(line: 1128, column: 7, scope: !3807)
!3946 = !DILocation(line: 1128, column: 21, scope: !3807)
!3947 = !DILocation(line: 1129, column: 30, scope: !3807)
!3948 = !DILocation(line: 1131, column: 9, scope: !3807)
!3949 = !DILocation(line: 1129, column: 10, scope: !3807)
!3950 = !DILocation(line: 1129, column: 7, scope: !3807)
!3951 = distinct !{!3951, !3945, !3952}
!3952 = !DILocation(line: 1135, column: 2, scope: !3807)
!3953 = !DILocation(line: 1137, column: 7, scope: !3807)
!3954 = !DILocation(line: 1142, column: 13, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1142, column: 11)
!3956 = !DILocation(line: 1142, column: 11, scope: !3807)
!3957 = !DILocation(line: 1146, column: 36, scope: !3807)
!3958 = !DILocation(line: 1146, column: 7, scope: !3807)
!3959 = !DILocation(line: 1148, column: 19, scope: !3820)
!3960 = !DILocation(line: 1148, column: 17, scope: !3820)
!3961 = !DILocation(line: 1149, column: 6, scope: !3820)
!3962 = !DILocation(line: 1149, column: 4, scope: !3820)
!3963 = !DILocation(line: 0, scope: !3820)
!3964 = !DILocation(line: 1148, column: 11, scope: !3807)
!3965 = !DILocation(line: 0, scope: !3819)
!3966 = !DILocation(line: 1152, column: 4, scope: !3819)
!3967 = !DILocation(line: 1154, column: 15, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1154, column: 8)
!3969 = !DILocation(line: 1154, column: 12, scope: !3968)
!3970 = !DILocation(line: 1155, column: 8, scope: !3968)
!3971 = !DILocation(line: 1155, column: 15, scope: !3968)
!3972 = !DILocation(line: 1155, column: 24, scope: !3968)
!3973 = !DILocation(line: 1154, column: 8, scope: !3819)
!3974 = !DILocation(line: 1156, column: 31, scope: !3968)
!3975 = !DILocation(line: 1156, column: 6, scope: !3968)
!3976 = !DILocation(line: 1159, column: 2, scope: !3820)
!3977 = !DILocation(line: 1161, column: 12, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1161, column: 7)
!3979 = !DILocation(line: 0, scope: !3978)
!3980 = !DILocation(line: 1161, column: 19, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1161, column: 7)
!3982 = !DILocation(line: 1161, column: 7, scope: !3978)
!3983 = !DILocation(line: 1162, column: 2, scope: !3981)
!3984 = !DILocation(line: 1161, column: 65, scope: !3981)
!3985 = !DILocation(line: 1161, column: 7, scope: !3981)
!3986 = distinct !{!3986, !3982, !3987}
!3987 = !DILocation(line: 1162, column: 2, scope: !3978)
!3988 = !DILocation(line: 1163, column: 7, scope: !3807)
!3989 = !DILocation(line: 1164, column: 22, scope: !3807)
!3990 = !DILocation(line: 1164, column: 11, scope: !3807)
!3991 = !DILocation(line: 1164, column: 20, scope: !3807)
!3992 = !DILocation(line: 1167, column: 51, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1167, column: 11)
!3994 = !DILocation(line: 1167, column: 60, scope: !3993)
!3995 = !DILocation(line: 1167, column: 70, scope: !3993)
!3996 = !DILocation(line: 1167, column: 12, scope: !3993)
!3997 = !DILocation(line: 1167, column: 11, scope: !3807)
!3998 = !DILocation(line: 1170, column: 16, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1170, column: 11)
!4000 = !DILocation(line: 1170, column: 26, scope: !3999)
!4001 = !DILocation(line: 1170, column: 21, scope: !3999)
!4002 = !DILocation(line: 1170, column: 11, scope: !3807)
!4003 = !DILocation(line: 1172, column: 14, scope: !3807)
!4004 = !DILocation(line: 1175, column: 21, scope: !3807)
!4005 = !DILocation(line: 1178, column: 7, scope: !3807)
!4006 = !DILocation(line: 1179, column: 5, scope: !3808)
!4007 = !DILocation(line: 1182, column: 3, scope: !3774)
!4008 = !DILocation(line: 1183, column: 1, scope: !3774)
!4009 = distinct !DISubprogram(name: "vn_reference_lookup", scope: !3, file: !3, line: 1244, type: !4010, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4012)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!483, !483, !483, !470, !3496}
!4012 = !{!4013, !4014, !4015, !4016, !4017, !4018, !4019, !4022}
!4013 = !DILocalVariable(name: "op", arg: 1, scope: !4009, file: !3, line: 1244, type: !483)
!4014 = !DILocalVariable(name: "vuse", arg: 2, scope: !4009, file: !3, line: 1244, type: !483)
!4015 = !DILocalVariable(name: "maywalk", arg: 3, scope: !4009, file: !3, line: 1244, type: !470)
!4016 = !DILocalVariable(name: "vnresult", arg: 4, scope: !4009, file: !3, line: 1245, type: !3496)
!4017 = !DILocalVariable(name: "operands", scope: !4009, file: !3, line: 1247, type: !1862)
!4018 = !DILocalVariable(name: "vr1", scope: !4009, file: !3, line: 1248, type: !1854)
!4019 = !DILocalVariable(name: "wvnresult", scope: !4020, file: !3, line: 1262, type: !1884)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 1261, column: 5)
!4021 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1259, column: 7)
!4022 = !DILocalVariable(name: "r", scope: !4020, file: !3, line: 1263, type: !3114)
!4023 = !DILocation(line: 0, scope: !4009)
!4024 = !DILocation(line: 1248, column: 3, scope: !4009)
!4025 = !DILocation(line: 1250, column: 7, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1250, column: 7)
!4027 = !DILocation(line: 1250, column: 7, scope: !4009)
!4028 = !DILocation(line: 1251, column: 15, scope: !4026)
!4029 = !DILocation(line: 1251, column: 5, scope: !4026)
!4030 = !DILocation(line: 1253, column: 14, scope: !4009)
!4031 = !DILocation(line: 1253, column: 21, scope: !4009)
!4032 = !DILocation(line: 1253, column: 7, scope: !4009)
!4033 = !DILocation(line: 1253, column: 12, scope: !4009)
!4034 = !DILocation(line: 1254, column: 29, scope: !4009)
!4035 = !DILocation(line: 1254, column: 7, scope: !4009)
!4036 = !DILocation(line: 1254, column: 16, scope: !4009)
!4037 = !DILocation(line: 1255, column: 14, scope: !4009)
!4038 = !DILocation(line: 1255, column: 7, scope: !4009)
!4039 = !DILocation(line: 1255, column: 12, scope: !4009)
!4040 = !DILocation(line: 1256, column: 13, scope: !4009)
!4041 = !DILocation(line: 1256, column: 7, scope: !4009)
!4042 = !DILocation(line: 1256, column: 11, scope: !4009)
!4043 = !DILocation(line: 1257, column: 18, scope: !4009)
!4044 = !DILocation(line: 1257, column: 7, scope: !4009)
!4045 = !DILocation(line: 1257, column: 16, scope: !4009)
!4046 = !DILocation(line: 1259, column: 7, scope: !4021)
!4047 = !DILocation(line: 1260, column: 7, scope: !4021)
!4048 = !DILocation(line: 1260, column: 14, scope: !4021)
!4049 = !DILocation(line: 1260, column: 10, scope: !4021)
!4050 = !DILocation(line: 1259, column: 7, scope: !4009)
!4051 = !DILocation(line: 1263, column: 7, scope: !4020)
!4052 = !DILocation(line: 0, scope: !4020)
!4053 = !DILocation(line: 1264, column: 7, scope: !4020)
!4054 = !DILocation(line: 1266, column: 50, scope: !4020)
!4055 = !DILocation(line: 1266, column: 18, scope: !4020)
!4056 = !DILocation(line: 1269, column: 15, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 1269, column: 11)
!4058 = !DILocation(line: 1269, column: 24, scope: !4057)
!4059 = !DILocation(line: 1269, column: 11, scope: !4020)
!4060 = !DILocation(line: 1270, column: 2, scope: !4057)
!4061 = !DILocation(line: 1271, column: 11, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 1271, column: 11)
!4063 = !DILocation(line: 1271, column: 11, scope: !4020)
!4064 = !DILocation(line: 1273, column: 8, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 1272, column: 2)
!4066 = !DILocation(line: 1274, column: 16, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1273, column: 8)
!4068 = !DILocation(line: 1274, column: 6, scope: !4067)
!4069 = !DILocation(line: 1275, column: 22, scope: !4065)
!4070 = !DILocation(line: 1275, column: 4, scope: !4065)
!4071 = !DILocation(line: 1279, column: 5, scope: !4021)
!4072 = !DILocation(line: 1281, column: 10, scope: !4009)
!4073 = !DILocation(line: 1281, column: 3, scope: !4009)
!4074 = !DILocation(line: 1282, column: 1, scope: !4009)
!4075 = distinct !DISubprogram(name: "valueize_shared_reference_ops_from_ref", scope: !3, file: !3, line: 938, type: !4076, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4078)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{!1862, !483}
!4078 = !{!4079}
!4079 = !DILocalVariable(name: "ref", arg: 1, scope: !4075, file: !3, line: 938, type: !483)
!4080 = !DILocation(line: 0, scope: !4075)
!4081 = !DILocation(line: 940, column: 8, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 940, column: 7)
!4083 = !DILocation(line: 940, column: 7, scope: !4075)
!4084 = !DILocation(line: 942, column: 3, scope: !4075)
!4085 = !DILocation(line: 943, column: 3, scope: !4075)
!4086 = !DILocation(line: 944, column: 45, scope: !4075)
!4087 = !DILocation(line: 944, column: 30, scope: !4075)
!4088 = !DILocation(line: 944, column: 28, scope: !4075)
!4089 = !DILocation(line: 945, column: 3, scope: !4075)
!4090 = !DILocation(line: 946, column: 1, scope: !4075)
!4091 = distinct !DISubprogram(name: "vn_reference_insert", scope: !3, file: !3, line: 1289, type: !4092, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4094)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!1884, !483, !483, !483}
!4094 = !{!4095, !4096, !4097, !4098, !4099}
!4095 = !DILocalVariable(name: "op", arg: 1, scope: !4091, file: !3, line: 1289, type: !483)
!4096 = !DILocalVariable(name: "result", arg: 2, scope: !4091, file: !3, line: 1289, type: !483)
!4097 = !DILocalVariable(name: "vuse", arg: 3, scope: !4091, file: !3, line: 1289, type: !483)
!4098 = !DILocalVariable(name: "slot", scope: !4091, file: !3, line: 1291, type: !1315)
!4099 = !DILocalVariable(name: "vr1", scope: !4091, file: !3, line: 1292, type: !1884)
!4100 = !DILocation(line: 0, scope: !4091)
!4101 = !DILocation(line: 1294, column: 38, scope: !4091)
!4102 = !DILocation(line: 1294, column: 52, scope: !4091)
!4103 = !DILocation(line: 1294, column: 26, scope: !4091)
!4104 = !DILocation(line: 1294, column: 9, scope: !4091)
!4105 = !DILocation(line: 1295, column: 7, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 1295, column: 7)
!4107 = !DILocation(line: 1295, column: 26, scope: !4106)
!4108 = !DILocation(line: 1295, column: 7, scope: !4091)
!4109 = !DILocation(line: 1296, column: 21, scope: !4106)
!4110 = !DILocation(line: 1296, column: 39, scope: !4106)
!4111 = !DILocation(line: 1296, column: 10, scope: !4106)
!4112 = !DILocation(line: 1296, column: 19, scope: !4106)
!4113 = !DILocation(line: 1296, column: 5, scope: !4106)
!4114 = !DILocation(line: 1298, column: 21, scope: !4106)
!4115 = !DILocation(line: 1298, column: 10, scope: !4106)
!4116 = !DILocation(line: 1298, column: 19, scope: !4106)
!4117 = !DILocation(line: 1299, column: 15, scope: !4091)
!4118 = !DILocation(line: 1299, column: 22, scope: !4091)
!4119 = !DILocation(line: 1299, column: 8, scope: !4091)
!4120 = !DILocation(line: 1299, column: 13, scope: !4091)
!4121 = !DILocation(line: 1300, column: 34, scope: !4091)
!4122 = !DILocation(line: 1300, column: 19, scope: !4091)
!4123 = !DILocation(line: 1300, column: 8, scope: !4091)
!4124 = !DILocation(line: 1300, column: 17, scope: !4091)
!4125 = !DILocation(line: 1301, column: 15, scope: !4091)
!4126 = !DILocation(line: 1301, column: 8, scope: !4091)
!4127 = !DILocation(line: 1301, column: 13, scope: !4091)
!4128 = !DILocation(line: 1302, column: 14, scope: !4091)
!4129 = !DILocation(line: 1302, column: 8, scope: !4091)
!4130 = !DILocation(line: 1302, column: 12, scope: !4091)
!4131 = !DILocation(line: 1303, column: 19, scope: !4091)
!4132 = !DILocation(line: 1303, column: 8, scope: !4091)
!4133 = !DILocation(line: 1303, column: 17, scope: !4091)
!4134 = !DILocation(line: 1304, column: 17, scope: !4091)
!4135 = !DILocation(line: 1304, column: 36, scope: !4091)
!4136 = !DILocation(line: 1304, column: 50, scope: !4091)
!4137 = !DILocation(line: 1306, column: 72, scope: !4091)
!4138 = !DILocation(line: 1304, column: 8, scope: !4091)
!4139 = !DILocation(line: 1304, column: 15, scope: !4091)
!4140 = !DILocation(line: 1306, column: 36, scope: !4091)
!4141 = !DILocation(line: 1306, column: 50, scope: !4091)
!4142 = !DILocation(line: 1306, column: 10, scope: !4091)
!4143 = !DILocation(line: 1318, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 1318, column: 7)
!4145 = !DILocation(line: 1318, column: 7, scope: !4091)
!4146 = !DILocation(line: 1319, column: 5, scope: !4144)
!4147 = !DILocation(line: 1321, column: 9, scope: !4091)
!4148 = !DILocation(line: 1322, column: 3, scope: !4091)
!4149 = distinct !DISubprogram(name: "create_reference_ops_from_ref", scope: !3, file: !3, line: 808, type: !4076, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4150)
!4150 = !{!4151, !4152}
!4151 = !DILocalVariable(name: "ref", arg: 1, scope: !4149, file: !3, line: 808, type: !483)
!4152 = !DILocalVariable(name: "result", scope: !4149, file: !3, line: 810, type: !1862)
!4153 = !DILocation(line: 0, scope: !4149)
!4154 = !DILocation(line: 810, column: 3, scope: !4149)
!4155 = !DILocation(line: 810, column: 34, scope: !4149)
!4156 = !DILocation(line: 812, column: 3, scope: !4149)
!4157 = !DILocation(line: 813, column: 10, scope: !4149)
!4158 = !DILocation(line: 814, column: 1, scope: !4149)
!4159 = !DILocation(line: 813, column: 3, scope: !4149)
!4160 = distinct !DISubprogram(name: "free_reference", scope: !3, file: !3, line: 306, type: !1312, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4161)
!4161 = !{!4162, !4163}
!4162 = !DILocalVariable(name: "vp", arg: 1, scope: !4160, file: !3, line: 306, type: !475)
!4163 = !DILocalVariable(name: "vr", scope: !4160, file: !3, line: 308, type: !1884)
!4164 = !DILocation(line: 0, scope: !4160)
!4165 = !DILocation(line: 309, column: 3, scope: !4160)
!4166 = !DILocation(line: 310, column: 1, scope: !4160)
!4167 = distinct !DISubprogram(name: "vn_reference_insert_pieces", scope: !3, file: !3, line: 1330, type: !4168, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4170)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{!1884, !483, !1116, !483, !1862, !483, !7}
!4170 = !{!4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178}
!4171 = !DILocalVariable(name: "vuse", arg: 1, scope: !4167, file: !3, line: 1330, type: !483)
!4172 = !DILocalVariable(name: "set", arg: 2, scope: !4167, file: !3, line: 1330, type: !1116)
!4173 = !DILocalVariable(name: "type", arg: 3, scope: !4167, file: !3, line: 1330, type: !483)
!4174 = !DILocalVariable(name: "operands", arg: 4, scope: !4167, file: !3, line: 1331, type: !1862)
!4175 = !DILocalVariable(name: "result", arg: 5, scope: !4167, file: !3, line: 1332, type: !483)
!4176 = !DILocalVariable(name: "value_id", arg: 6, scope: !4167, file: !3, line: 1332, type: !7)
!4177 = !DILocalVariable(name: "slot", scope: !4167, file: !3, line: 1335, type: !1315)
!4178 = !DILocalVariable(name: "vr1", scope: !4167, file: !3, line: 1336, type: !1884)
!4179 = !DILocation(line: 0, scope: !4167)
!4180 = !DILocation(line: 1338, column: 38, scope: !4167)
!4181 = !DILocation(line: 1338, column: 52, scope: !4167)
!4182 = !DILocation(line: 1338, column: 26, scope: !4167)
!4183 = !DILocation(line: 1338, column: 9, scope: !4167)
!4184 = !DILocation(line: 1339, column: 8, scope: !4167)
!4185 = !DILocation(line: 1339, column: 17, scope: !4167)
!4186 = !DILocation(line: 1340, column: 15, scope: !4167)
!4187 = !DILocation(line: 1340, column: 22, scope: !4167)
!4188 = !DILocation(line: 1340, column: 8, scope: !4167)
!4189 = !DILocation(line: 1340, column: 13, scope: !4167)
!4190 = !DILocation(line: 1341, column: 19, scope: !4167)
!4191 = !DILocation(line: 1341, column: 8, scope: !4167)
!4192 = !DILocation(line: 1341, column: 17, scope: !4167)
!4193 = !DILocation(line: 1342, column: 8, scope: !4167)
!4194 = !DILocation(line: 1342, column: 13, scope: !4167)
!4195 = !DILocation(line: 1343, column: 8, scope: !4167)
!4196 = !DILocation(line: 1343, column: 12, scope: !4167)
!4197 = !DILocation(line: 1344, column: 19, scope: !4167)
!4198 = !DILocation(line: 1344, column: 8, scope: !4167)
!4199 = !DILocation(line: 1344, column: 17, scope: !4167)
!4200 = !DILocation(line: 1345, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 1345, column: 7)
!4202 = !DILocation(line: 1345, column: 14, scope: !4201)
!4203 = !DILocation(line: 1345, column: 17, scope: !4201)
!4204 = !DILocation(line: 1345, column: 36, scope: !4201)
!4205 = !DILocation(line: 1345, column: 7, scope: !4167)
!4206 = !DILocation(line: 1346, column: 14, scope: !4201)
!4207 = !DILocation(line: 1349, column: 72, scope: !4167)
!4208 = !DILocation(line: 1346, column: 5, scope: !4201)
!4209 = !DILocation(line: 1347, column: 8, scope: !4167)
!4210 = !DILocation(line: 1347, column: 15, scope: !4167)
!4211 = !DILocation(line: 1349, column: 36, scope: !4167)
!4212 = !DILocation(line: 1349, column: 50, scope: !4167)
!4213 = !DILocation(line: 1349, column: 10, scope: !4167)
!4214 = !DILocation(line: 1355, column: 3, scope: !4167)
!4215 = !DILocation(line: 1356, column: 7, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 1356, column: 7)
!4217 = !DILocation(line: 1356, column: 7, scope: !4167)
!4218 = !DILocation(line: 1357, column: 5, scope: !4216)
!4219 = !DILocation(line: 1359, column: 9, scope: !4167)
!4220 = !DILocation(line: 1360, column: 3, scope: !4167)
!4221 = distinct !DISubprogram(name: "vn_nary_op_compute_hash", scope: !3, file: !3, line: 1366, type: !4222, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4225)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!1301, !4224}
!4224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1899)
!4225 = !{!4226, !4227, !4228, !4229}
!4226 = !DILocalVariable(name: "vno1", arg: 1, scope: !4221, file: !3, line: 1366, type: !4224)
!4227 = !DILocalVariable(name: "hash", scope: !4221, file: !3, line: 1368, type: !1301)
!4228 = !DILocalVariable(name: "i", scope: !4221, file: !3, line: 1369, type: !7)
!4229 = !DILocalVariable(name: "temp", scope: !4230, file: !3, line: 1379, type: !483)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 1378, column: 5)
!4231 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 1375, column: 7)
!4232 = !DILocation(line: 0, scope: !4221)
!4233 = !DILocation(line: 0, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1371, column: 3)
!4235 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 1371, column: 3)
!4236 = !DILocation(line: 1371, column: 8, scope: !4235)
!4237 = !DILocation(line: 0, scope: !4235)
!4238 = !DILocation(line: 1371, column: 25, scope: !4234)
!4239 = !DILocation(line: 1371, column: 17, scope: !4234)
!4240 = !DILocation(line: 1371, column: 3, scope: !4235)
!4241 = !DILocation(line: 1372, column: 9, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 1372, column: 9)
!4243 = !DILocation(line: 1372, column: 33, scope: !4242)
!4244 = !DILocation(line: 1372, column: 9, scope: !4234)
!4245 = !DILocation(line: 1373, column: 21, scope: !4242)
!4246 = !DILocation(line: 1373, column: 19, scope: !4242)
!4247 = !DILocation(line: 1373, column: 7, scope: !4242)
!4248 = !DILocation(line: 1371, column: 33, scope: !4234)
!4249 = !DILocation(line: 1371, column: 3, scope: !4234)
!4250 = distinct !{!4250, !4240, !4251}
!4251 = !DILocation(line: 1373, column: 21, scope: !4235)
!4252 = !DILocation(line: 1375, column: 20, scope: !4231)
!4253 = !DILocation(line: 1376, column: 7, scope: !4231)
!4254 = !DILocation(line: 1376, column: 39, scope: !4231)
!4255 = !DILocation(line: 1376, column: 10, scope: !4231)
!4256 = !DILocation(line: 1377, column: 7, scope: !4231)
!4257 = !DILocation(line: 1377, column: 32, scope: !4231)
!4258 = !DILocation(line: 1377, column: 45, scope: !4231)
!4259 = !DILocation(line: 1377, column: 10, scope: !4231)
!4260 = !DILocation(line: 1375, column: 7, scope: !4221)
!4261 = !DILocation(line: 1379, column: 19, scope: !4230)
!4262 = !DILocation(line: 1380, column: 21, scope: !4230)
!4263 = !DILocation(line: 1380, column: 13, scope: !4230)
!4264 = !DILocation(line: 1380, column: 19, scope: !4230)
!4265 = !DILocation(line: 1381, column: 19, scope: !4230)
!4266 = !DILocation(line: 1382, column: 5, scope: !4230)
!4267 = !DILocation(line: 1384, column: 42, scope: !4221)
!4268 = !DILocation(line: 1384, column: 10, scope: !4221)
!4269 = !DILocation(line: 1385, column: 8, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 1385, column: 3)
!4271 = !DILocation(line: 1385, column: 25, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 1385, column: 3)
!4273 = !DILocation(line: 1385, column: 17, scope: !4272)
!4274 = !DILocation(line: 1385, column: 3, scope: !4270)
!4275 = !DILocation(line: 1386, column: 33, scope: !4272)
!4276 = !DILocation(line: 1386, column: 12, scope: !4272)
!4277 = !DILocation(line: 1385, column: 33, scope: !4272)
!4278 = !DILocation(line: 1385, column: 3, scope: !4272)
!4279 = distinct !{!4279, !4274, !4280}
!4280 = !DILocation(line: 1386, column: 50, scope: !4270)
!4281 = !DILocation(line: 1388, column: 3, scope: !4221)
!4282 = distinct !DISubprogram(name: "vn_nary_op_eq", scope: !3, file: !3, line: 1404, type: !1307, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4283)
!4283 = !{!4284, !4285, !4286, !4288, !4289}
!4284 = !DILocalVariable(name: "p1", arg: 1, scope: !4282, file: !3, line: 1404, type: !1302)
!4285 = !DILocalVariable(name: "p2", arg: 2, scope: !4282, file: !3, line: 1404, type: !1302)
!4286 = !DILocalVariable(name: "vno1", scope: !4282, file: !3, line: 1406, type: !4287)
!4287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!4288 = !DILocalVariable(name: "vno2", scope: !4282, file: !3, line: 1407, type: !4287)
!4289 = !DILocalVariable(name: "i", scope: !4282, file: !3, line: 1408, type: !7)
!4290 = !DILocation(line: 0, scope: !4282)
!4291 = !DILocation(line: 1410, column: 13, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 1410, column: 7)
!4293 = !DILocation(line: 1410, column: 31, scope: !4292)
!4294 = !DILocation(line: 1410, column: 22, scope: !4292)
!4295 = !DILocation(line: 1410, column: 7, scope: !4282)
!4296 = !DILocation(line: 1413, column: 13, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 1413, column: 7)
!4298 = !DILocation(line: 1413, column: 29, scope: !4297)
!4299 = !DILocation(line: 1413, column: 20, scope: !4297)
!4300 = !DILocation(line: 1414, column: 7, scope: !4297)
!4301 = !DILocation(line: 1414, column: 37, scope: !4297)
!4302 = !DILocation(line: 1414, column: 49, scope: !4297)
!4303 = !DILocation(line: 1414, column: 11, scope: !4297)
!4304 = !DILocation(line: 1413, column: 7, scope: !4282)
!4305 = !DILocation(line: 1418, column: 37, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 1418, column: 9)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 1417, column: 3)
!4308 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 1417, column: 3)
!4309 = !DILocation(line: 0, scope: !4306)
!4310 = !DILocation(line: 1417, column: 3, scope: !4308)
!4311 = !DILocation(line: 0, scope: !4308)
!4312 = !DILocation(line: 1417, column: 25, scope: !4307)
!4313 = !DILocation(line: 1417, column: 17, scope: !4307)
!4314 = !DILocation(line: 1418, column: 31, scope: !4306)
!4315 = !DILocation(line: 1418, column: 44, scope: !4306)
!4316 = !DILocation(line: 1418, column: 10, scope: !4306)
!4317 = !DILocation(line: 1418, column: 9, scope: !4307)
!4318 = !DILocation(line: 1417, column: 33, scope: !4307)
!4319 = !DILocation(line: 1417, column: 3, scope: !4307)
!4320 = distinct !{!4320, !4310, !4321}
!4321 = !DILocation(line: 1419, column: 14, scope: !4308)
!4322 = !DILocation(line: 1422, column: 1, scope: !4282)
!4323 = distinct !DISubprogram(name: "expressions_equal_p", scope: !3, file: !3, line: 3316, type: !4324, scopeLine: 3317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4326)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{!470, !483, !483}
!4326 = !{!4327, !4328}
!4327 = !DILocalVariable(name: "e1", arg: 1, scope: !4323, file: !3, line: 3316, type: !483)
!4328 = !DILocalVariable(name: "e2", arg: 2, scope: !4323, file: !3, line: 3316, type: !483)
!4329 = !DILocation(line: 0, scope: !4323)
!4330 = !DILocation(line: 3319, column: 10, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 3319, column: 7)
!4332 = !DILocation(line: 3319, column: 7, scope: !4323)
!4333 = !DILocation(line: 3323, column: 8, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 3323, column: 7)
!4335 = !DILocation(line: 3323, column: 15, scope: !4334)
!4336 = !DILocation(line: 3323, column: 11, scope: !4334)
!4337 = !DILocation(line: 3327, column: 7, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 3327, column: 7)
!4339 = !DILocation(line: 3327, column: 25, scope: !4338)
!4340 = !DILocation(line: 3327, column: 22, scope: !4338)
!4341 = !DILocation(line: 3328, column: 7, scope: !4338)
!4342 = !DILocation(line: 3328, column: 10, scope: !4338)
!4343 = !DILocation(line: 3327, column: 7, scope: !4323)
!4344 = !DILocation(line: 3331, column: 3, scope: !4323)
!4345 = !DILocation(line: 3332, column: 1, scope: !4323)
!4346 = distinct !DISubprogram(name: "vn_nary_op_lookup_pieces", scope: !3, file: !3, line: 1431, type: !4347, scopeLine: 1434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4350)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!483, !7, !134, !483, !483, !483, !483, !483, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!4350 = !{!4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360}
!4351 = !DILocalVariable(name: "length", arg: 1, scope: !4346, file: !3, line: 1431, type: !7)
!4352 = !DILocalVariable(name: "code", arg: 2, scope: !4346, file: !3, line: 1431, type: !134)
!4353 = !DILocalVariable(name: "type", arg: 3, scope: !4346, file: !3, line: 1432, type: !483)
!4354 = !DILocalVariable(name: "op0", arg: 4, scope: !4346, file: !3, line: 1432, type: !483)
!4355 = !DILocalVariable(name: "op1", arg: 5, scope: !4346, file: !3, line: 1432, type: !483)
!4356 = !DILocalVariable(name: "op2", arg: 6, scope: !4346, file: !3, line: 1432, type: !483)
!4357 = !DILocalVariable(name: "op3", arg: 7, scope: !4346, file: !3, line: 1433, type: !483)
!4358 = !DILocalVariable(name: "vnresult", arg: 8, scope: !4346, file: !3, line: 1433, type: !4349)
!4359 = !DILocalVariable(name: "slot", scope: !4346, file: !3, line: 1435, type: !1315)
!4360 = !DILocalVariable(name: "vno1", scope: !4346, file: !3, line: 1436, type: !1889)
!4361 = !DILocation(line: 0, scope: !4346)
!4362 = !DILocation(line: 1436, column: 3, scope: !4346)
!4363 = !DILocation(line: 1437, column: 7, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1437, column: 7)
!4365 = !DILocation(line: 1437, column: 7, scope: !4346)
!4366 = !DILocation(line: 1438, column: 15, scope: !4364)
!4367 = !DILocation(line: 1438, column: 5, scope: !4364)
!4368 = !DILocation(line: 1439, column: 15, scope: !4346)
!4369 = !DILocation(line: 1440, column: 8, scope: !4346)
!4370 = !DILocation(line: 1440, column: 15, scope: !4346)
!4371 = !DILocation(line: 1441, column: 8, scope: !4346)
!4372 = !DILocation(line: 1441, column: 13, scope: !4346)
!4373 = !DILocation(line: 1442, column: 3, scope: !4346)
!4374 = !DILocation(line: 1442, column: 14, scope: !4346)
!4375 = !DILocation(line: 1443, column: 3, scope: !4346)
!4376 = !DILocation(line: 1443, column: 14, scope: !4346)
!4377 = !DILocation(line: 1444, column: 3, scope: !4346)
!4378 = !DILocation(line: 1444, column: 14, scope: !4346)
!4379 = !DILocation(line: 1445, column: 3, scope: !4346)
!4380 = !DILocation(line: 1445, column: 14, scope: !4346)
!4381 = !DILocation(line: 1446, column: 19, scope: !4346)
!4382 = !DILocation(line: 1446, column: 8, scope: !4346)
!4383 = !DILocation(line: 1446, column: 17, scope: !4346)
!4384 = !DILocation(line: 1447, column: 36, scope: !4346)
!4385 = !DILocation(line: 1447, column: 50, scope: !4346)
!4386 = !DILocation(line: 1447, column: 10, scope: !4346)
!4387 = !DILocation(line: 1449, column: 8, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1449, column: 7)
!4389 = !DILocation(line: 1449, column: 13, scope: !4388)
!4390 = !DILocation(line: 1449, column: 16, scope: !4388)
!4391 = !DILocation(line: 1449, column: 32, scope: !4388)
!4392 = !DILocation(line: 1449, column: 29, scope: !4388)
!4393 = !DILocation(line: 1449, column: 7, scope: !4346)
!4394 = !DILocation(line: 1450, column: 38, scope: !4388)
!4395 = !DILocation(line: 1450, column: 50, scope: !4388)
!4396 = !DILocation(line: 1450, column: 68, scope: !4388)
!4397 = !DILocation(line: 1450, column: 12, scope: !4388)
!4398 = !DILocation(line: 1450, column: 5, scope: !4388)
!4399 = !DILocation(line: 1452, column: 8, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1452, column: 7)
!4401 = !DILocation(line: 1452, column: 7, scope: !4346)
!4402 = !DILocation(line: 1454, column: 7, scope: !4346)
!4403 = !DILocation(line: 1455, column: 31, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1454, column: 7)
!4405 = !DILocation(line: 1455, column: 15, scope: !4404)
!4406 = !DILocation(line: 1455, column: 5, scope: !4404)
!4407 = !DILocation(line: 1456, column: 25, scope: !4346)
!4408 = !DILocation(line: 1456, column: 33, scope: !4346)
!4409 = !DILocation(line: 1456, column: 3, scope: !4346)
!4410 = !DILocation(line: 1457, column: 1, scope: !4346)
!4411 = distinct !DISubprogram(name: "vn_nary_op_lookup", scope: !3, file: !3, line: 1466, type: !4412, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4414)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{!483, !483, !4349}
!4414 = !{!4415, !4416, !4417, !4418, !4419}
!4415 = !DILocalVariable(name: "op", arg: 1, scope: !4411, file: !3, line: 1466, type: !483)
!4416 = !DILocalVariable(name: "vnresult", arg: 2, scope: !4411, file: !3, line: 1466, type: !4349)
!4417 = !DILocalVariable(name: "slot", scope: !4411, file: !3, line: 1468, type: !1315)
!4418 = !DILocalVariable(name: "vno1", scope: !4411, file: !3, line: 1469, type: !1889)
!4419 = !DILocalVariable(name: "i", scope: !4411, file: !3, line: 1470, type: !7)
!4420 = !DILocation(line: 0, scope: !4411)
!4421 = !DILocation(line: 1469, column: 3, scope: !4411)
!4422 = !DILocation(line: 1472, column: 7, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1472, column: 7)
!4424 = !DILocation(line: 1472, column: 7, scope: !4411)
!4425 = !DILocation(line: 1473, column: 15, scope: !4423)
!4426 = !DILocation(line: 1473, column: 5, scope: !4423)
!4427 = !DILocation(line: 1474, column: 17, scope: !4411)
!4428 = !DILocation(line: 1474, column: 8, scope: !4411)
!4429 = !DILocation(line: 1475, column: 17, scope: !4411)
!4430 = !DILocation(line: 1475, column: 15, scope: !4411)
!4431 = !DILocation(line: 1476, column: 15, scope: !4411)
!4432 = !DILocation(line: 1476, column: 8, scope: !4411)
!4433 = !DILocation(line: 1476, column: 13, scope: !4411)
!4434 = !DILocation(line: 0, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 1477, column: 3)
!4436 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1477, column: 3)
!4437 = !DILocation(line: 1477, column: 17, scope: !4435)
!4438 = !DILocation(line: 1477, column: 8, scope: !4436)
!4439 = !DILocation(line: 0, scope: !4436)
!4440 = !DILocation(line: 1477, column: 3, scope: !4436)
!4441 = !DILocation(line: 1478, column: 18, scope: !4435)
!4442 = !DILocation(line: 1478, column: 5, scope: !4435)
!4443 = !DILocation(line: 1478, column: 16, scope: !4435)
!4444 = !DILocation(line: 1477, column: 32, scope: !4435)
!4445 = !DILocation(line: 1477, column: 3, scope: !4435)
!4446 = distinct !{!4446, !4440, !4447}
!4447 = !DILocation(line: 1478, column: 18, scope: !4436)
!4448 = !DILocation(line: 1479, column: 19, scope: !4411)
!4449 = !DILocation(line: 1479, column: 8, scope: !4411)
!4450 = !DILocation(line: 1479, column: 17, scope: !4411)
!4451 = !DILocation(line: 1480, column: 36, scope: !4411)
!4452 = !DILocation(line: 1480, column: 50, scope: !4411)
!4453 = !DILocation(line: 1480, column: 10, scope: !4411)
!4454 = !DILocation(line: 1482, column: 8, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1482, column: 7)
!4456 = !DILocation(line: 1482, column: 13, scope: !4455)
!4457 = !DILocation(line: 1482, column: 16, scope: !4455)
!4458 = !DILocation(line: 1482, column: 32, scope: !4455)
!4459 = !DILocation(line: 1482, column: 29, scope: !4455)
!4460 = !DILocation(line: 1482, column: 7, scope: !4411)
!4461 = !DILocation(line: 1483, column: 38, scope: !4455)
!4462 = !DILocation(line: 1483, column: 50, scope: !4455)
!4463 = !DILocation(line: 1483, column: 68, scope: !4455)
!4464 = !DILocation(line: 1483, column: 12, scope: !4455)
!4465 = !DILocation(line: 1483, column: 5, scope: !4455)
!4466 = !DILocation(line: 1485, column: 8, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1485, column: 7)
!4468 = !DILocation(line: 1485, column: 7, scope: !4411)
!4469 = !DILocation(line: 1487, column: 7, scope: !4411)
!4470 = !DILocation(line: 1488, column: 31, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1487, column: 7)
!4472 = !DILocation(line: 1488, column: 15, scope: !4471)
!4473 = !DILocation(line: 1488, column: 5, scope: !4471)
!4474 = !DILocation(line: 1489, column: 25, scope: !4411)
!4475 = !DILocation(line: 1489, column: 33, scope: !4411)
!4476 = !DILocation(line: 1489, column: 3, scope: !4411)
!4477 = !DILocation(line: 1490, column: 1, scope: !4411)
!4478 = distinct !DISubprogram(name: "vn_nary_op_lookup_stmt", scope: !3, file: !3, line: 1498, type: !4479, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4481)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!483, !807, !4349}
!4481 = !{!4482, !4483, !4484, !4485, !4486}
!4482 = !DILocalVariable(name: "stmt", arg: 1, scope: !4478, file: !3, line: 1498, type: !807)
!4483 = !DILocalVariable(name: "vnresult", arg: 2, scope: !4478, file: !3, line: 1498, type: !4349)
!4484 = !DILocalVariable(name: "slot", scope: !4478, file: !3, line: 1500, type: !1315)
!4485 = !DILocalVariable(name: "vno1", scope: !4478, file: !3, line: 1501, type: !1889)
!4486 = !DILocalVariable(name: "i", scope: !4478, file: !3, line: 1502, type: !7)
!4487 = !DILocation(line: 0, scope: !4478)
!4488 = !DILocation(line: 1501, column: 3, scope: !4478)
!4489 = !DILocation(line: 1504, column: 7, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 1504, column: 7)
!4491 = !DILocation(line: 1504, column: 7, scope: !4478)
!4492 = !DILocation(line: 1505, column: 15, scope: !4490)
!4493 = !DILocation(line: 1505, column: 5, scope: !4490)
!4494 = !DILocation(line: 1506, column: 17, scope: !4478)
!4495 = !DILocation(line: 1506, column: 8, scope: !4478)
!4496 = !DILocation(line: 1506, column: 15, scope: !4478)
!4497 = !DILocation(line: 1507, column: 17, scope: !4478)
!4498 = !DILocation(line: 1507, column: 15, scope: !4478)
!4499 = !DILocation(line: 1508, column: 15, scope: !4478)
!4500 = !DILocation(line: 1508, column: 8, scope: !4478)
!4501 = !DILocation(line: 1508, column: 13, scope: !4478)
!4502 = !DILocation(line: 1509, column: 8, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 1509, column: 3)
!4504 = !DILocation(line: 1509, column: 17, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 1509, column: 3)
!4506 = !DILocation(line: 0, scope: !4503)
!4507 = !DILocation(line: 1509, column: 3, scope: !4503)
!4508 = !DILocation(line: 1510, column: 37, scope: !4505)
!4509 = !DILocation(line: 1510, column: 18, scope: !4505)
!4510 = !DILocation(line: 1510, column: 5, scope: !4505)
!4511 = !DILocation(line: 1510, column: 16, scope: !4505)
!4512 = !DILocation(line: 1509, column: 3, scope: !4505)
!4513 = distinct !{!4513, !4507, !4514}
!4514 = !DILocation(line: 1510, column: 40, scope: !4503)
!4515 = !DILocation(line: 1511, column: 19, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 1511, column: 7)
!4517 = !DILocation(line: 1512, column: 7, scope: !4516)
!4518 = !DILocation(line: 1512, column: 22, scope: !4516)
!4519 = !DILocation(line: 1513, column: 7, scope: !4516)
!4520 = !DILocation(line: 1513, column: 22, scope: !4516)
!4521 = !DILocation(line: 1511, column: 7, scope: !4478)
!4522 = !DILocation(line: 1514, column: 18, scope: !4516)
!4523 = !DILocation(line: 1514, column: 10, scope: !4516)
!4524 = !DILocation(line: 1514, column: 16, scope: !4516)
!4525 = !DILocation(line: 1514, column: 5, scope: !4516)
!4526 = !DILocation(line: 1515, column: 19, scope: !4478)
!4527 = !DILocation(line: 1515, column: 8, scope: !4478)
!4528 = !DILocation(line: 1515, column: 17, scope: !4478)
!4529 = !DILocation(line: 1516, column: 36, scope: !4478)
!4530 = !DILocation(line: 1516, column: 50, scope: !4478)
!4531 = !DILocation(line: 1516, column: 10, scope: !4478)
!4532 = !DILocation(line: 1518, column: 8, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 1518, column: 7)
!4534 = !DILocation(line: 1518, column: 13, scope: !4533)
!4535 = !DILocation(line: 1518, column: 16, scope: !4533)
!4536 = !DILocation(line: 1518, column: 32, scope: !4533)
!4537 = !DILocation(line: 1518, column: 29, scope: !4533)
!4538 = !DILocation(line: 1518, column: 7, scope: !4478)
!4539 = !DILocation(line: 1519, column: 38, scope: !4533)
!4540 = !DILocation(line: 1519, column: 50, scope: !4533)
!4541 = !DILocation(line: 1519, column: 68, scope: !4533)
!4542 = !DILocation(line: 1519, column: 12, scope: !4533)
!4543 = !DILocation(line: 1519, column: 5, scope: !4533)
!4544 = !DILocation(line: 1521, column: 8, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 1521, column: 7)
!4546 = !DILocation(line: 1521, column: 7, scope: !4478)
!4547 = !DILocation(line: 1523, column: 7, scope: !4478)
!4548 = !DILocation(line: 1524, column: 31, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 1523, column: 7)
!4550 = !DILocation(line: 1524, column: 15, scope: !4549)
!4551 = !DILocation(line: 1524, column: 5, scope: !4549)
!4552 = !DILocation(line: 1525, column: 25, scope: !4478)
!4553 = !DILocation(line: 1525, column: 33, scope: !4478)
!4554 = !DILocation(line: 1525, column: 3, scope: !4478)
!4555 = !DILocation(line: 1526, column: 1, scope: !4478)
!4556 = distinct !DISubprogram(name: "gimple_num_ops", scope: !391, file: !391, line: 1596, type: !3340, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4557)
!4557 = !{!4558}
!4558 = !DILocalVariable(name: "gs", arg: 1, scope: !4556, file: !391, line: 1596, type: !2623)
!4559 = !DILocation(line: 0, scope: !4556)
!4560 = !DILocation(line: 1598, column: 21, scope: !4556)
!4561 = !DILocation(line: 1598, column: 3, scope: !4556)
!4562 = distinct !DISubprogram(name: "gimple_op", scope: !391, file: !391, line: 1631, type: !3350, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4563)
!4563 = !{!4564, !4565}
!4564 = !DILocalVariable(name: "gs", arg: 1, scope: !4562, file: !391, line: 1631, type: !2623)
!4565 = !DILocalVariable(name: "i", arg: 2, scope: !4562, file: !391, line: 1631, type: !7)
!4566 = !DILocation(line: 0, scope: !4562)
!4567 = !DILocation(line: 1633, column: 7, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4562, file: !391, line: 1633, column: 7)
!4569 = !DILocation(line: 1633, column: 7, scope: !4562)
!4570 = !DILocation(line: 1638, column: 14, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4568, file: !391, line: 1634, column: 5)
!4572 = !DILocation(line: 1638, column: 7, scope: !4571)
!4573 = !DILocation(line: 0, scope: !4568)
!4574 = !DILocation(line: 1642, column: 1, scope: !4562)
!4575 = distinct !DISubprogram(name: "vn_nary_op_insert_pieces", scope: !3, file: !3, line: 1533, type: !4576, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4578)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!1899, !7, !134, !483, !483, !483, !483, !483, !483, !7}
!4578 = !{!4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589}
!4579 = !DILocalVariable(name: "length", arg: 1, scope: !4575, file: !3, line: 1533, type: !7)
!4580 = !DILocalVariable(name: "code", arg: 2, scope: !4575, file: !3, line: 1533, type: !134)
!4581 = !DILocalVariable(name: "type", arg: 3, scope: !4575, file: !3, line: 1534, type: !483)
!4582 = !DILocalVariable(name: "op0", arg: 4, scope: !4575, file: !3, line: 1534, type: !483)
!4583 = !DILocalVariable(name: "op1", arg: 5, scope: !4575, file: !3, line: 1535, type: !483)
!4584 = !DILocalVariable(name: "op2", arg: 6, scope: !4575, file: !3, line: 1535, type: !483)
!4585 = !DILocalVariable(name: "op3", arg: 7, scope: !4575, file: !3, line: 1535, type: !483)
!4586 = !DILocalVariable(name: "result", arg: 8, scope: !4575, file: !3, line: 1536, type: !483)
!4587 = !DILocalVariable(name: "value_id", arg: 9, scope: !4575, file: !3, line: 1537, type: !7)
!4588 = !DILocalVariable(name: "slot", scope: !4575, file: !3, line: 1539, type: !1315)
!4589 = !DILocalVariable(name: "vno1", scope: !4575, file: !3, line: 1540, type: !1899)
!4590 = !DILocation(line: 0, scope: !4575)
!4591 = !DILocation(line: 1542, column: 25, scope: !4575)
!4592 = !DILocation(line: 1545, column: 9, scope: !4575)
!4593 = !DILocation(line: 1545, column: 18, scope: !4575)
!4594 = !DILocation(line: 1546, column: 16, scope: !4575)
!4595 = !DILocation(line: 1547, column: 9, scope: !4575)
!4596 = !DILocation(line: 1547, column: 16, scope: !4575)
!4597 = !DILocation(line: 1548, column: 9, scope: !4575)
!4598 = !DILocation(line: 1548, column: 14, scope: !4575)
!4599 = !DILocation(line: 1549, column: 14, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 1549, column: 7)
!4601 = !DILocation(line: 1549, column: 7, scope: !4575)
!4602 = !DILocation(line: 1550, column: 5, scope: !4600)
!4603 = !DILocation(line: 1550, column: 17, scope: !4600)
!4604 = !DILocation(line: 1551, column: 14, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 1551, column: 7)
!4606 = !DILocation(line: 1551, column: 7, scope: !4575)
!4607 = !DILocation(line: 1552, column: 5, scope: !4605)
!4608 = !DILocation(line: 1552, column: 17, scope: !4605)
!4609 = !DILocation(line: 1553, column: 14, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 1553, column: 7)
!4611 = !DILocation(line: 1553, column: 7, scope: !4575)
!4612 = !DILocation(line: 1554, column: 5, scope: !4610)
!4613 = !DILocation(line: 1554, column: 17, scope: !4610)
!4614 = !DILocation(line: 1555, column: 14, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 1555, column: 7)
!4616 = !DILocation(line: 1555, column: 7, scope: !4575)
!4617 = !DILocation(line: 1556, column: 5, scope: !4615)
!4618 = !DILocation(line: 1556, column: 17, scope: !4615)
!4619 = !DILocation(line: 1557, column: 9, scope: !4575)
!4620 = !DILocation(line: 1557, column: 16, scope: !4575)
!4621 = !DILocation(line: 1558, column: 20, scope: !4575)
!4622 = !DILocation(line: 1558, column: 9, scope: !4575)
!4623 = !DILocation(line: 1558, column: 18, scope: !4575)
!4624 = !DILocation(line: 1559, column: 36, scope: !4575)
!4625 = !DILocation(line: 1559, column: 50, scope: !4575)
!4626 = !DILocation(line: 1559, column: 10, scope: !4575)
!4627 = !DILocation(line: 1561, column: 3, scope: !4575)
!4628 = !DILocation(line: 1563, column: 9, scope: !4575)
!4629 = !DILocation(line: 1564, column: 3, scope: !4575)
!4630 = distinct !DISubprogram(name: "vn_nary_op_insert", scope: !3, file: !3, line: 1573, type: !4631, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4633)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!1899, !483, !483}
!4633 = !{!4634, !4635, !4636, !4637, !4638, !4639}
!4634 = !DILocalVariable(name: "op", arg: 1, scope: !4630, file: !3, line: 1573, type: !483)
!4635 = !DILocalVariable(name: "result", arg: 2, scope: !4630, file: !3, line: 1573, type: !483)
!4636 = !DILocalVariable(name: "length", scope: !4630, file: !3, line: 1575, type: !7)
!4637 = !DILocalVariable(name: "slot", scope: !4630, file: !3, line: 1576, type: !1315)
!4638 = !DILocalVariable(name: "vno1", scope: !4630, file: !3, line: 1577, type: !1899)
!4639 = !DILocalVariable(name: "i", scope: !4630, file: !3, line: 1578, type: !7)
!4640 = !DILocation(line: 0, scope: !4630)
!4641 = !DILocation(line: 1575, column: 21, scope: !4630)
!4642 = !DILocation(line: 1580, column: 25, scope: !4630)
!4643 = !DILocation(line: 1583, column: 20, scope: !4630)
!4644 = !DILocation(line: 1583, column: 38, scope: !4630)
!4645 = !DILocation(line: 1583, column: 9, scope: !4630)
!4646 = !DILocation(line: 1583, column: 18, scope: !4630)
!4647 = !DILocation(line: 1584, column: 18, scope: !4630)
!4648 = !DILocation(line: 1585, column: 9, scope: !4630)
!4649 = !DILocation(line: 1585, column: 16, scope: !4630)
!4650 = !DILocation(line: 1586, column: 16, scope: !4630)
!4651 = !DILocation(line: 1586, column: 9, scope: !4630)
!4652 = !DILocation(line: 1586, column: 14, scope: !4630)
!4653 = !DILocation(line: 0, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 1587, column: 3)
!4655 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1587, column: 3)
!4656 = !DILocation(line: 1587, column: 17, scope: !4654)
!4657 = !DILocation(line: 1587, column: 8, scope: !4655)
!4658 = !DILocation(line: 0, scope: !4655)
!4659 = !DILocation(line: 1587, column: 3, scope: !4655)
!4660 = !DILocation(line: 1588, column: 19, scope: !4654)
!4661 = !DILocation(line: 1588, column: 5, scope: !4654)
!4662 = !DILocation(line: 1588, column: 17, scope: !4654)
!4663 = !DILocation(line: 1587, column: 33, scope: !4654)
!4664 = !DILocation(line: 1587, column: 3, scope: !4654)
!4665 = distinct !{!4665, !4659, !4666}
!4666 = !DILocation(line: 1588, column: 19, scope: !4655)
!4667 = !DILocation(line: 1589, column: 9, scope: !4630)
!4668 = !DILocation(line: 1589, column: 16, scope: !4630)
!4669 = !DILocation(line: 1590, column: 20, scope: !4630)
!4670 = !DILocation(line: 1590, column: 9, scope: !4630)
!4671 = !DILocation(line: 1590, column: 18, scope: !4630)
!4672 = !DILocation(line: 1591, column: 36, scope: !4630)
!4673 = !DILocation(line: 1591, column: 50, scope: !4630)
!4674 = !DILocation(line: 1591, column: 10, scope: !4630)
!4675 = !DILocation(line: 1593, column: 3, scope: !4630)
!4676 = !DILocation(line: 1595, column: 9, scope: !4630)
!4677 = !DILocation(line: 1596, column: 3, scope: !4630)
!4678 = distinct !DISubprogram(name: "vn_nary_op_insert_stmt", scope: !3, file: !3, line: 1603, type: !4679, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4681)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!1899, !807, !483}
!4681 = !{!4682, !4683, !4684, !4685, !4686, !4687}
!4682 = !DILocalVariable(name: "stmt", arg: 1, scope: !4678, file: !3, line: 1603, type: !807)
!4683 = !DILocalVariable(name: "result", arg: 2, scope: !4678, file: !3, line: 1603, type: !483)
!4684 = !DILocalVariable(name: "length", scope: !4678, file: !3, line: 1605, type: !7)
!4685 = !DILocalVariable(name: "slot", scope: !4678, file: !3, line: 1606, type: !1315)
!4686 = !DILocalVariable(name: "vno1", scope: !4678, file: !3, line: 1607, type: !1899)
!4687 = !DILocalVariable(name: "i", scope: !4678, file: !3, line: 1608, type: !7)
!4688 = !DILocation(line: 0, scope: !4678)
!4689 = !DILocation(line: 1605, column: 21, scope: !4678)
!4690 = !DILocation(line: 1610, column: 25, scope: !4678)
!4691 = !DILocation(line: 1613, column: 20, scope: !4678)
!4692 = !DILocation(line: 1613, column: 38, scope: !4678)
!4693 = !DILocation(line: 1613, column: 9, scope: !4678)
!4694 = !DILocation(line: 1613, column: 18, scope: !4678)
!4695 = !DILocation(line: 1614, column: 18, scope: !4678)
!4696 = !DILocation(line: 1614, column: 16, scope: !4678)
!4697 = !DILocation(line: 1615, column: 9, scope: !4678)
!4698 = !DILocation(line: 1615, column: 16, scope: !4678)
!4699 = !DILocation(line: 1616, column: 16, scope: !4678)
!4700 = !DILocation(line: 1616, column: 9, scope: !4678)
!4701 = !DILocation(line: 1616, column: 14, scope: !4678)
!4702 = !DILocation(line: 1617, column: 8, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 1617, column: 3)
!4704 = !DILocation(line: 0, scope: !4703)
!4705 = !DILocation(line: 1617, column: 25, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 1617, column: 3)
!4707 = !DILocation(line: 1617, column: 17, scope: !4706)
!4708 = !DILocation(line: 1617, column: 3, scope: !4703)
!4709 = !DILocation(line: 1618, column: 38, scope: !4706)
!4710 = !DILocation(line: 1618, column: 19, scope: !4706)
!4711 = !DILocation(line: 1618, column: 5, scope: !4706)
!4712 = !DILocation(line: 1618, column: 17, scope: !4706)
!4713 = !DILocation(line: 1617, column: 3, scope: !4706)
!4714 = distinct !{!4714, !4708, !4715}
!4715 = !DILocation(line: 1618, column: 41, scope: !4703)
!4716 = !DILocation(line: 1619, column: 13, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 1619, column: 7)
!4718 = !DILocation(line: 1619, column: 20, scope: !4717)
!4719 = !DILocation(line: 1620, column: 7, scope: !4717)
!4720 = !DILocation(line: 1620, column: 23, scope: !4717)
!4721 = !DILocation(line: 1621, column: 7, scope: !4717)
!4722 = !DILocation(line: 1621, column: 23, scope: !4717)
!4723 = !DILocation(line: 1619, column: 7, scope: !4678)
!4724 = !DILocation(line: 1622, column: 19, scope: !4717)
!4725 = !DILocation(line: 1622, column: 11, scope: !4717)
!4726 = !DILocation(line: 1622, column: 17, scope: !4717)
!4727 = !DILocation(line: 1622, column: 5, scope: !4717)
!4728 = !DILocation(line: 1623, column: 9, scope: !4678)
!4729 = !DILocation(line: 1623, column: 16, scope: !4678)
!4730 = !DILocation(line: 1624, column: 20, scope: !4678)
!4731 = !DILocation(line: 1624, column: 9, scope: !4678)
!4732 = !DILocation(line: 1624, column: 18, scope: !4678)
!4733 = !DILocation(line: 1625, column: 36, scope: !4678)
!4734 = !DILocation(line: 1625, column: 50, scope: !4678)
!4735 = !DILocation(line: 1625, column: 10, scope: !4678)
!4736 = !DILocation(line: 1627, column: 3, scope: !4678)
!4737 = !DILocation(line: 1629, column: 9, scope: !4678)
!4738 = !DILocation(line: 1630, column: 3, scope: !4678)
!4739 = distinct !DISubprogram(name: "free_scc_vn", scope: !3, file: !3, line: 3118, type: !4740, scopeLine: 3119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4742)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{null}
!4742 = !{!4743, !4744}
!4743 = !DILocalVariable(name: "i", scope: !4739, file: !3, line: 3120, type: !952)
!4744 = !DILocalVariable(name: "name", scope: !4745, file: !3, line: 3130, type: !483)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 3129, column: 5)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 3128, column: 3)
!4747 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 3128, column: 3)
!4748 = !DILocation(line: 3122, column: 16, scope: !4739)
!4749 = !DILocation(line: 3122, column: 3, scope: !4739)
!4750 = !DILocation(line: 3123, column: 3, scope: !4739)
!4751 = !DILocation(line: 3124, column: 3, scope: !4739)
!4752 = !DILocation(line: 3125, column: 3, scope: !4739)
!4753 = !DILocation(line: 3126, column: 3, scope: !4739)
!4754 = !DILocation(line: 0, scope: !4739)
!4755 = !DILocation(line: 3128, column: 8, scope: !4747)
!4756 = !DILocation(line: 0, scope: !4747)
!4757 = !DILocation(line: 3128, column: 19, scope: !4746)
!4758 = !DILocation(line: 3128, column: 17, scope: !4746)
!4759 = !DILocation(line: 3128, column: 3, scope: !4747)
!4760 = !DILocation(line: 3130, column: 19, scope: !4745)
!4761 = !DILocation(line: 0, scope: !4745)
!4762 = !DILocation(line: 3131, column: 11, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 3131, column: 11)
!4764 = !DILocation(line: 3132, column: 4, scope: !4763)
!4765 = !DILocation(line: 3132, column: 7, scope: !4763)
!4766 = !DILocation(line: 3132, column: 23, scope: !4763)
!4767 = !DILocation(line: 3131, column: 11, scope: !4745)
!4768 = !DILocation(line: 3133, column: 2, scope: !4763)
!4769 = !DILocation(line: 3128, column: 35, scope: !4746)
!4770 = !DILocation(line: 3128, column: 3, scope: !4746)
!4771 = distinct !{!4771, !4759, !4772}
!4772 = !DILocation(line: 3134, column: 5, scope: !4747)
!4773 = !DILocation(line: 3135, column: 3, scope: !4739)
!4774 = !DILocation(line: 3136, column: 3, scope: !4739)
!4775 = !DILocation(line: 3138, column: 3, scope: !4739)
!4776 = !DILocation(line: 3139, column: 18, scope: !4739)
!4777 = !DILocation(line: 3139, column: 3, scope: !4739)
!4778 = !DILocation(line: 3140, column: 3, scope: !4739)
!4779 = !DILocation(line: 3141, column: 18, scope: !4739)
!4780 = !DILocation(line: 3141, column: 3, scope: !4739)
!4781 = !DILocation(line: 3142, column: 3, scope: !4739)
!4782 = !DILocation(line: 3143, column: 1, scope: !4739)
!4783 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !135, file: !135, line: 184, type: !4784, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4787)
!4784 = !DISubroutineType(types: !4785)
!4785 = !{null, !4786}
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!4787 = !{!4788}
!4788 = !DILocalVariable(name: "vec_", arg: 1, scope: !4783, file: !135, line: 184, type: !4786)
!4789 = !DILocation(line: 0, scope: !4783)
!4790 = !DILocation(line: 184, column: 1, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4783, file: !135, line: 184, column: 1)
!4792 = !DILocation(line: 184, column: 1, scope: !4783)
!4793 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !4794, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4798)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!7, !4796}
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!4798 = !{!4799}
!4799 = !DILocalVariable(name: "vec_", arg: 1, scope: !4793, file: !135, line: 182, type: !4796)
!4800 = !DILocation(line: 0, scope: !4793)
!4801 = !DILocation(line: 182, column: 1, scope: !4793)
!4802 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !4803, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4805)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{!483, !4796, !7}
!4805 = !{!4806, !4807}
!4806 = !DILocalVariable(name: "vec_", arg: 1, scope: !4802, file: !135, line: 182, type: !4796)
!4807 = !DILocalVariable(name: "ix_", arg: 2, scope: !4802, file: !135, line: 182, type: !7)
!4808 = !DILocation(line: 0, scope: !4802)
!4809 = !DILocation(line: 182, column: 1, scope: !4802)
!4810 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_heap_free", scope: !3, file: !3, line: 164, type: !4811, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4813)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{null, !2529}
!4813 = !{!4814}
!4814 = !DILocalVariable(name: "vec_", arg: 1, scope: !4810, file: !3, line: 164, type: !2529)
!4815 = !DILocation(line: 0, scope: !4810)
!4816 = !DILocation(line: 164, column: 1, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 164, column: 1)
!4818 = !DILocation(line: 164, column: 1, scope: !4810)
!4819 = distinct !DISubprogram(name: "free_vn_table", scope: !3, file: !3, line: 3046, type: !4820, scopeLine: 3047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4822)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{null, !2010}
!4822 = !{!4823}
!4823 = !DILocalVariable(name: "table", arg: 1, scope: !4819, file: !3, line: 3046, type: !2010)
!4824 = !DILocation(line: 0, scope: !4819)
!4825 = !DILocation(line: 3048, column: 23, scope: !4819)
!4826 = !DILocation(line: 3048, column: 3, scope: !4819)
!4827 = !DILocation(line: 3049, column: 23, scope: !4819)
!4828 = !DILocation(line: 3049, column: 3, scope: !4819)
!4829 = !DILocation(line: 3050, column: 23, scope: !4819)
!4830 = !DILocation(line: 3050, column: 3, scope: !4819)
!4831 = !DILocation(line: 3051, column: 3, scope: !4819)
!4832 = !DILocation(line: 3052, column: 27, scope: !4819)
!4833 = !DILocation(line: 3052, column: 3, scope: !4819)
!4834 = !DILocation(line: 3053, column: 27, scope: !4819)
!4835 = !DILocation(line: 3053, column: 3, scope: !4819)
!4836 = !DILocation(line: 3054, column: 1, scope: !4819)
!4837 = distinct !DISubprogram(name: "run_scc_vn", scope: !3, file: !3, line: 3199, type: !4838, scopeLine: 3200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4840)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!470, !470}
!4840 = !{!4841, !4842, !4843, !4844, !4845, !4851, !4855, !4859, !4860, !4865, !4866}
!4841 = !DILocalVariable(name: "may_insert_arg", arg: 1, scope: !4837, file: !3, line: 3199, type: !470)
!4842 = !DILocalVariable(name: "i", scope: !4837, file: !3, line: 3201, type: !952)
!4843 = !DILocalVariable(name: "param", scope: !4837, file: !3, line: 3202, type: !483)
!4844 = !DILocalVariable(name: "changed", scope: !4837, file: !3, line: 3203, type: !470)
!4845 = !DILocalVariable(name: "def", scope: !4846, file: !3, line: 3216, type: !483)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 3215, column: 2)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 3214, column: 11)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 3213, column: 5)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 3210, column: 3)
!4850 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 3210, column: 3)
!4851 = !DILocalVariable(name: "name", scope: !4852, file: !3, line: 3223, type: !483)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 3222, column: 5)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 3221, column: 3)
!4854 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 3221, column: 3)
!4855 = !DILocalVariable(name: "name", scope: !4856, file: !3, line: 3239, type: !483)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 3238, column: 5)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 3237, column: 3)
!4858 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 3237, column: 3)
!4859 = !DILocalVariable(name: "info", scope: !4856, file: !3, line: 3240, type: !1914)
!4860 = !DILocalVariable(name: "name", scope: !4861, file: !3, line: 3257, type: !483)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 3256, column: 2)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 3255, column: 7)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 3255, column: 7)
!4864 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 3253, column: 5)
!4865 = !DILocalVariable(name: "info", scope: !4861, file: !3, line: 3258, type: !1914)
!4866 = !DILocalVariable(name: "name", scope: !4867, file: !3, line: 3279, type: !483)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 3278, column: 2)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 3277, column: 7)
!4869 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 3277, column: 7)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 3275, column: 5)
!4871 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 3274, column: 7)
!4872 = !DILocation(line: 0, scope: !4837)
!4873 = !DILocation(line: 3205, column: 14, scope: !4837)
!4874 = !DILocation(line: 3207, column: 3, scope: !4837)
!4875 = !DILocation(line: 3208, column: 18, scope: !4837)
!4876 = !DILocation(line: 3208, column: 16, scope: !4837)
!4877 = !DILocation(line: 3210, column: 16, scope: !4850)
!4878 = !DILocation(line: 3210, column: 8, scope: !4850)
!4879 = !DILocation(line: 0, scope: !4850)
!4880 = !DILocation(line: 3210, column: 3, scope: !4850)
!4881 = !DILocation(line: 3221, column: 3, scope: !4854)
!4882 = !DILocation(line: 3214, column: 31, scope: !4847)
!4883 = !DILocation(line: 3214, column: 11, scope: !4847)
!4884 = !DILocation(line: 3214, column: 44, scope: !4847)
!4885 = !DILocation(line: 3214, column: 11, scope: !4848)
!4886 = !DILocation(line: 3216, column: 35, scope: !4846)
!4887 = !DILocation(line: 3216, column: 15, scope: !4846)
!4888 = !DILocation(line: 0, scope: !4846)
!4889 = !DILocation(line: 3217, column: 4, scope: !4846)
!4890 = !DILocation(line: 3217, column: 19, scope: !4846)
!4891 = !DILocation(line: 3217, column: 26, scope: !4846)
!4892 = !DILocation(line: 3218, column: 2, scope: !4846)
!4893 = !DILocation(line: 3212, column: 16, scope: !4849)
!4894 = !DILocation(line: 3210, column: 3, scope: !4849)
!4895 = distinct !{!4895, !4880, !4896}
!4896 = !DILocation(line: 3219, column: 5, scope: !4850)
!4897 = !DILocation(line: 0, scope: !4854)
!4898 = !DILocation(line: 3221, column: 19, scope: !4853)
!4899 = !DILocation(line: 3221, column: 17, scope: !4853)
!4900 = !DILocation(line: 3237, column: 3, scope: !4858)
!4901 = !DILocation(line: 3223, column: 19, scope: !4852)
!4902 = !DILocation(line: 0, scope: !4852)
!4903 = !DILocation(line: 3224, column: 11, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 3224, column: 11)
!4905 = !DILocation(line: 3225, column: 4, scope: !4904)
!4906 = !DILocation(line: 3225, column: 7, scope: !4904)
!4907 = !DILocation(line: 3225, column: 23, scope: !4904)
!4908 = !DILocation(line: 3225, column: 31, scope: !4904)
!4909 = !DILocation(line: 3226, column: 4, scope: !4904)
!4910 = !DILocation(line: 3226, column: 8, scope: !4904)
!4911 = !DILocation(line: 3224, column: 11, scope: !4852)
!4912 = !DILocation(line: 3227, column: 7, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 3227, column: 6)
!4914 = !DILocation(line: 3227, column: 6, scope: !4904)
!4915 = !DILocation(line: 3229, column: 6, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 3228, column: 4)
!4917 = !DILocation(line: 3230, column: 17, scope: !4916)
!4918 = !DILocation(line: 3231, column: 6, scope: !4916)
!4919 = !DILocation(line: 3221, column: 34, scope: !4853)
!4920 = !DILocation(line: 3221, column: 3, scope: !4853)
!4921 = distinct !{!4921, !4881, !4922}
!4922 = !DILocation(line: 3233, column: 5, scope: !4854)
!4923 = !DILocation(line: 0, scope: !4858)
!4924 = !DILocation(line: 3237, column: 19, scope: !4857)
!4925 = !DILocation(line: 3237, column: 17, scope: !4857)
!4926 = !DILocation(line: 3252, column: 3, scope: !4837)
!4927 = !DILocation(line: 3239, column: 19, scope: !4856)
!4928 = !DILocation(line: 0, scope: !4856)
!4929 = !DILocation(line: 3241, column: 12, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 3241, column: 11)
!4931 = !DILocation(line: 3241, column: 11, scope: !4856)
!4932 = !DILocation(line: 3243, column: 14, scope: !4856)
!4933 = !DILocation(line: 3244, column: 17, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 3244, column: 11)
!4935 = !DILocation(line: 3244, column: 24, scope: !4934)
!4936 = !DILocation(line: 3245, column: 4, scope: !4934)
!4937 = !DILocation(line: 3245, column: 23, scope: !4934)
!4938 = !DILocation(line: 3245, column: 20, scope: !4934)
!4939 = !DILocation(line: 3244, column: 11, scope: !4856)
!4940 = !DILocation(line: 3246, column: 19, scope: !4934)
!4941 = !DILocation(line: 3246, column: 8, scope: !4934)
!4942 = !DILocation(line: 3246, column: 17, scope: !4934)
!4943 = !DILocation(line: 3246, column: 2, scope: !4934)
!4944 = !DILocation(line: 3247, column: 16, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 3247, column: 16)
!4946 = !DILocation(line: 3247, column: 16, scope: !4934)
!4947 = !DILocation(line: 3248, column: 57, scope: !4945)
!4948 = !DILocation(line: 3248, column: 19, scope: !4945)
!4949 = !DILocation(line: 3248, column: 8, scope: !4945)
!4950 = !DILocation(line: 3248, column: 17, scope: !4945)
!4951 = !DILocation(line: 3248, column: 2, scope: !4945)
!4952 = !DILocation(line: 3237, column: 34, scope: !4857)
!4953 = !DILocation(line: 3237, column: 3, scope: !4857)
!4954 = distinct !{!4954, !4900, !4955}
!4955 = !DILocation(line: 3249, column: 5, scope: !4858)
!4956 = !DILocation(line: 0, scope: !4864)
!4957 = !DILocation(line: 3255, column: 7, scope: !4863)
!4958 = !DILocation(line: 0, scope: !4863)
!4959 = !DILocation(line: 3255, column: 23, scope: !4862)
!4960 = !DILocation(line: 3255, column: 21, scope: !4862)
!4961 = distinct !{!4961, !4926, !4962}
!4962 = !DILocation(line: 3270, column: 5, scope: !4837)
!4963 = !DILocation(line: 3257, column: 16, scope: !4861)
!4964 = !DILocation(line: 0, scope: !4861)
!4965 = !DILocation(line: 3259, column: 9, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 3259, column: 8)
!4967 = !DILocation(line: 3259, column: 8, scope: !4861)
!4968 = !DILocation(line: 3261, column: 11, scope: !4861)
!4969 = !DILocation(line: 3262, column: 8, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 3262, column: 8)
!4971 = !DILocation(line: 3262, column: 33, scope: !4970)
!4972 = !DILocation(line: 3263, column: 8, scope: !4970)
!4973 = !DILocation(line: 3263, column: 17, scope: !4970)
!4974 = !DILocation(line: 3263, column: 24, scope: !4970)
!4975 = !DILocation(line: 3264, column: 8, scope: !4970)
!4976 = !DILocation(line: 3264, column: 17, scope: !4970)
!4977 = !DILocation(line: 3264, column: 29, scope: !4970)
!4978 = !DILocation(line: 3264, column: 53, scope: !4970)
!4979 = !DILocation(line: 3264, column: 26, scope: !4970)
!4980 = !DILocation(line: 3262, column: 8, scope: !4861)
!4981 = !DILocation(line: 3267, column: 40, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 3265, column: 6)
!4983 = !DILocation(line: 3267, column: 25, scope: !4982)
!4984 = !DILocation(line: 3267, column: 49, scope: !4982)
!4985 = !DILocation(line: 3267, column: 23, scope: !4982)
!4986 = !DILocation(line: 3268, column: 6, scope: !4982)
!4987 = !DILocation(line: 3255, column: 38, scope: !4862)
!4988 = !DILocation(line: 3255, column: 7, scope: !4862)
!4989 = distinct !{!4989, !4957, !4990}
!4990 = !DILocation(line: 3269, column: 2, scope: !4863)
!4991 = !DILocation(line: 3272, column: 3, scope: !4837)
!4992 = !DILocation(line: 3274, column: 7, scope: !4871)
!4993 = !DILocation(line: 3274, column: 17, scope: !4871)
!4994 = !DILocation(line: 3274, column: 21, scope: !4871)
!4995 = !DILocation(line: 3274, column: 32, scope: !4871)
!4996 = !DILocation(line: 3274, column: 7, scope: !4837)
!4997 = !DILocation(line: 3276, column: 7, scope: !4870)
!4998 = !DILocation(line: 3277, column: 12, scope: !4869)
!4999 = !DILocation(line: 0, scope: !4869)
!5000 = !DILocation(line: 3277, column: 23, scope: !4868)
!5001 = !DILocation(line: 3277, column: 21, scope: !4868)
!5002 = !DILocation(line: 3277, column: 7, scope: !4869)
!5003 = !DILocation(line: 3279, column: 16, scope: !4867)
!5004 = !DILocation(line: 0, scope: !4867)
!5005 = !DILocation(line: 3280, column: 8, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 3280, column: 8)
!5007 = !DILocation(line: 3281, column: 8, scope: !5006)
!5008 = !DILocation(line: 3281, column: 11, scope: !5006)
!5009 = !DILocation(line: 3281, column: 27, scope: !5006)
!5010 = !DILocation(line: 3282, column: 8, scope: !5006)
!5011 = !DILocation(line: 3282, column: 11, scope: !5006)
!5012 = !DILocation(line: 3282, column: 26, scope: !5006)
!5013 = !DILocation(line: 3280, column: 8, scope: !4867)
!5014 = !DILocation(line: 3284, column: 28, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 3283, column: 6)
!5016 = !DILocation(line: 3284, column: 8, scope: !5015)
!5017 = !DILocation(line: 3285, column: 17, scope: !5015)
!5018 = !DILocation(line: 3285, column: 8, scope: !5015)
!5019 = !DILocation(line: 3286, column: 28, scope: !5015)
!5020 = !DILocation(line: 3286, column: 39, scope: !5015)
!5021 = !DILocation(line: 3286, column: 8, scope: !5015)
!5022 = !DILocation(line: 3287, column: 17, scope: !5015)
!5023 = !DILocation(line: 3287, column: 8, scope: !5015)
!5024 = !DILocation(line: 3288, column: 6, scope: !5015)
!5025 = !DILocation(line: 3277, column: 39, scope: !4868)
!5026 = !DILocation(line: 3277, column: 7, scope: !4868)
!5027 = distinct !{!5027, !5002, !5028}
!5028 = !DILocation(line: 3289, column: 2, scope: !4869)
!5029 = !DILocation(line: 3292, column: 14, scope: !4837)
!5030 = !DILocation(line: 3293, column: 3, scope: !4837)
!5031 = !DILocation(line: 3294, column: 1, scope: !4837)
!5032 = distinct !DISubprogram(name: "init_scc_vn", scope: !3, file: !3, line: 3057, type: !4740, scopeLine: 3058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5033)
!5033 = !{!5034, !5035, !5036, !5037}
!5034 = !DILocalVariable(name: "i", scope: !5032, file: !3, line: 3059, type: !952)
!5035 = !DILocalVariable(name: "j", scope: !5032, file: !3, line: 3060, type: !471)
!5036 = !DILocalVariable(name: "rpo_numbers_temp", scope: !5032, file: !3, line: 3061, type: !1923)
!5037 = !DILocalVariable(name: "name", scope: !5038, file: !3, line: 3099, type: !483)
!5038 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 3098, column: 5)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 3097, column: 3)
!5040 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 3097, column: 3)
!5041 = !DILocation(line: 3063, column: 3, scope: !5032)
!5042 = !DILocation(line: 3064, column: 12, scope: !5032)
!5043 = !DILocation(line: 3065, column: 26, scope: !5032)
!5044 = !DILocation(line: 3065, column: 24, scope: !5032)
!5045 = !DILocation(line: 3068, column: 24, scope: !5032)
!5046 = !DILocation(line: 3068, column: 22, scope: !5032)
!5047 = !DILocation(line: 3070, column: 16, scope: !5032)
!5048 = !DILocation(line: 3071, column: 17, scope: !5032)
!5049 = !DILocation(line: 3073, column: 22, scope: !5032)
!5050 = !DILocation(line: 3073, column: 20, scope: !5032)
!5051 = !DILocation(line: 3076, column: 3, scope: !5032)
!5052 = !DILocation(line: 3077, column: 3, scope: !5032)
!5053 = !DILocation(line: 3079, column: 25, scope: !5032)
!5054 = !DILocation(line: 3080, column: 28, scope: !5032)
!5055 = !DILocation(line: 3081, column: 17, scope: !5032)
!5056 = !DILocation(line: 3081, column: 15, scope: !5032)
!5057 = !DILocation(line: 3082, column: 22, scope: !5032)
!5058 = !DILocation(line: 0, scope: !5032)
!5059 = !DILocation(line: 3083, column: 3, scope: !5032)
!5060 = !DILocation(line: 3088, column: 8, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 3088, column: 3)
!5062 = !DILocation(line: 0, scope: !5061)
!5063 = !DILocation(line: 3088, column: 19, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 3088, column: 3)
!5065 = !DILocation(line: 3088, column: 34, scope: !5064)
!5066 = !DILocation(line: 3088, column: 17, scope: !5064)
!5067 = !DILocation(line: 3088, column: 3, scope: !5061)
!5068 = !DILocation(line: 3089, column: 5, scope: !5064)
!5069 = !DILocation(line: 3089, column: 17, scope: !5064)
!5070 = !DILocation(line: 3089, column: 38, scope: !5064)
!5071 = !DILocation(line: 3088, column: 55, scope: !5064)
!5072 = !DILocation(line: 3088, column: 3, scope: !5064)
!5073 = distinct !{!5073, !5067, !5074}
!5074 = !DILocation(line: 3089, column: 40, scope: !5061)
!5075 = !DILocation(line: 3091, column: 3, scope: !5032)
!5076 = !DILocation(line: 3093, column: 32, scope: !5032)
!5077 = !DILocation(line: 3093, column: 12, scope: !5032)
!5078 = !DILocation(line: 3093, column: 10, scope: !5032)
!5079 = !DILocation(line: 3097, column: 8, scope: !5040)
!5080 = !DILocation(line: 0, scope: !5040)
!5081 = !DILocation(line: 3097, column: 19, scope: !5039)
!5082 = !DILocation(line: 3097, column: 17, scope: !5039)
!5083 = !DILocation(line: 3097, column: 3, scope: !5040)
!5084 = !DILocation(line: 3099, column: 19, scope: !5038)
!5085 = !DILocation(line: 0, scope: !5038)
!5086 = !DILocation(line: 3100, column: 11, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 3100, column: 11)
!5088 = !DILocation(line: 3100, column: 11, scope: !5038)
!5089 = !DILocation(line: 3102, column: 33, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 3101, column: 2)
!5091 = !DILocation(line: 3102, column: 4, scope: !5090)
!5092 = !DILocation(line: 3102, column: 31, scope: !5090)
!5093 = !DILocation(line: 3103, column: 4, scope: !5090)
!5094 = !DILocation(line: 3103, column: 20, scope: !5090)
!5095 = !DILocation(line: 3103, column: 25, scope: !5090)
!5096 = !DILocation(line: 3104, column: 4, scope: !5090)
!5097 = !DILocation(line: 3104, column: 20, scope: !5090)
!5098 = !DILocation(line: 3104, column: 29, scope: !5090)
!5099 = !DILocation(line: 3105, column: 2, scope: !5090)
!5100 = !DILocation(line: 3097, column: 35, scope: !5039)
!5101 = !DILocation(line: 3097, column: 3, scope: !5039)
!5102 = distinct !{!5102, !5083, !5103}
!5103 = !DILocation(line: 3106, column: 5, scope: !5040)
!5104 = !DILocation(line: 3108, column: 3, scope: !5032)
!5105 = !DILocation(line: 3111, column: 16, scope: !5032)
!5106 = !DILocation(line: 3111, column: 14, scope: !5032)
!5107 = !DILocation(line: 3112, column: 22, scope: !5032)
!5108 = !DILocation(line: 3112, column: 3, scope: !5032)
!5109 = !DILocation(line: 3113, column: 21, scope: !5032)
!5110 = !DILocation(line: 3113, column: 19, scope: !5032)
!5111 = !DILocation(line: 3114, column: 22, scope: !5032)
!5112 = !DILocation(line: 3114, column: 3, scope: !5032)
!5113 = !DILocation(line: 3115, column: 1, scope: !5032)
!5114 = distinct !DISubprogram(name: "has_zero_uses", scope: !5115, file: !5115, line: 332, type: !5116, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5121)
!5115 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!470, !5118}
!5118 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !484, line: 59, baseType: !5119)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !486)
!5121 = !{!5122, !5123}
!5122 = !DILocalVariable(name: "var", arg: 1, scope: !5114, file: !5115, line: 332, type: !5118)
!5123 = !DILocalVariable(name: "ptr", scope: !5114, file: !5115, line: 334, type: !5124)
!5124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5125)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!5127 = !DILocation(line: 0, scope: !5114)
!5128 = !DILocation(line: 334, column: 42, scope: !5114)
!5129 = !DILocation(line: 337, column: 19, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5114, file: !5115, line: 337, column: 7)
!5131 = !DILocation(line: 337, column: 11, scope: !5130)
!5132 = !DILocation(line: 337, column: 7, scope: !5114)
!5133 = !DILocation(line: 342, column: 8, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5114, file: !5115, line: 342, column: 7)
!5135 = !DILocation(line: 342, column: 7, scope: !5114)
!5136 = !DILocation(line: 345, column: 10, scope: !5114)
!5137 = !DILocation(line: 345, column: 3, scope: !5114)
!5138 = !DILocation(line: 346, column: 1, scope: !5114)
!5139 = distinct !DISubprogram(name: "DFS", scope: !3, file: !3, line: 2930, type: !5140, scopeLine: 2931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5142)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!470, !483}
!5142 = !{!5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151}
!5143 = !DILocalVariable(name: "name", arg: 1, scope: !5139, file: !3, line: 2930, type: !483)
!5144 = !DILocalVariable(name: "itervec", scope: !5139, file: !3, line: 2932, type: !1979)
!5145 = !DILocalVariable(name: "namevec", scope: !5139, file: !3, line: 2933, type: !1964)
!5146 = !DILocalVariable(name: "usep", scope: !5139, file: !3, line: 2934, type: !1973)
!5147 = !DILocalVariable(name: "defstmt", scope: !5139, file: !3, line: 2935, type: !807)
!5148 = !DILocalVariable(name: "use", scope: !5139, file: !3, line: 2936, type: !483)
!5149 = !DILocalVariable(name: "iter", scope: !5139, file: !3, line: 2937, type: !1991)
!5150 = !DILabel(scope: !5139, name: "start_over", file: !3, line: 2939)
!5151 = !DILabel(scope: !5152, name: "continue_walking", file: !3, line: 3008)
!5152 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 3000, column: 6)
!5153 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 2999, column: 8)
!5154 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 2998, column: 2)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 2997, column: 11)
!5156 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2962, column: 5)
!5157 = !DILocation(line: 0, scope: !5139)
!5158 = !DILocation(line: 2932, column: 3, scope: !5139)
!5159 = !DILocation(line: 2932, column: 27, scope: !5139)
!5160 = !DILocation(line: 2933, column: 3, scope: !5139)
!5161 = !DILocation(line: 2933, column: 20, scope: !5139)
!5162 = !DILocation(line: 2937, column: 3, scope: !5139)
!5163 = !DILocation(line: 2934, column: 17, scope: !5139)
!5164 = !DILocation(line: 2939, column: 1, scope: !5139)
!5165 = !DILocation(line: 2941, column: 40, scope: !5139)
!5166 = !DILocation(line: 2941, column: 3, scope: !5139)
!5167 = !DILocation(line: 2941, column: 19, scope: !5139)
!5168 = !DILocation(line: 2941, column: 26, scope: !5139)
!5169 = !DILocation(line: 2942, column: 3, scope: !5139)
!5170 = !DILocation(line: 2942, column: 19, scope: !5139)
!5171 = !DILocation(line: 2942, column: 27, scope: !5139)
!5172 = !DILocation(line: 2943, column: 25, scope: !5139)
!5173 = !DILocation(line: 2943, column: 41, scope: !5139)
!5174 = !DILocation(line: 2943, column: 3, scope: !5139)
!5175 = !DILocation(line: 2943, column: 19, scope: !5139)
!5176 = !DILocation(line: 2943, column: 23, scope: !5139)
!5177 = !DILocation(line: 2945, column: 3, scope: !5139)
!5178 = !DILocation(line: 2946, column: 3, scope: !5139)
!5179 = !DILocation(line: 2946, column: 19, scope: !5139)
!5180 = !DILocation(line: 2946, column: 31, scope: !5139)
!5181 = !DILocation(line: 2947, column: 13, scope: !5139)
!5182 = !DILocation(line: 2950, column: 8, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2950, column: 7)
!5184 = !DILocation(line: 2950, column: 7, scope: !5139)
!5185 = !DILocation(line: 2953, column: 11, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 2953, column: 11)
!5187 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 2951, column: 5)
!5188 = !DILocation(line: 2953, column: 33, scope: !5186)
!5189 = !DILocation(line: 2953, column: 11, scope: !5187)
!5190 = !DILocation(line: 2954, column: 9, scope: !5186)
!5191 = !DILocation(line: 2954, column: 2, scope: !5186)
!5192 = !DILocation(line: 2956, column: 9, scope: !5186)
!5193 = !DILocation(line: 2959, column: 5, scope: !5183)
!5194 = !DILocation(line: 2961, column: 3, scope: !5139)
!5195 = !DILocation(line: 2965, column: 11, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 2965, column: 11)
!5197 = !DILocation(line: 2965, column: 11, scope: !5156)
!5198 = !DILocation(line: 2968, column: 8, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2968, column: 8)
!5200 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 2966, column: 2)
!5201 = !DILocation(line: 2968, column: 24, scope: !5199)
!5202 = !DILocation(line: 2968, column: 31, scope: !5199)
!5203 = !DILocation(line: 2968, column: 47, scope: !5199)
!5204 = !DILocation(line: 2968, column: 28, scope: !5199)
!5205 = !DILocation(line: 2968, column: 8, scope: !5200)
!5206 = !DILocation(line: 2969, column: 11, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2969, column: 10)
!5208 = !DILocation(line: 2969, column: 10, scope: !5199)
!5209 = !DILocation(line: 2971, column: 3, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 2970, column: 8)
!5211 = !DILocation(line: 2972, column: 3, scope: !5210)
!5212 = !DILocation(line: 2973, column: 3, scope: !5210)
!5213 = !DILocation(line: 2977, column: 8, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2977, column: 8)
!5215 = !DILocation(line: 2977, column: 8, scope: !5200)
!5216 = !DILocation(line: 2979, column: 8, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 2978, column: 6)
!5218 = !DILocation(line: 2980, column: 8, scope: !5217)
!5219 = !DILocation(line: 2981, column: 8, scope: !5217)
!5220 = !DILocation(line: 2986, column: 11, scope: !5200)
!5221 = !DILocation(line: 2987, column: 19, scope: !5200)
!5222 = !DILocation(line: 2987, column: 4, scope: !5200)
!5223 = !DILocation(line: 2989, column: 4, scope: !5200)
!5224 = !DILocation(line: 3008, column: 1, scope: !5152)
!5225 = !DILocation(line: 3009, column: 30, scope: !5152)
!5226 = !DILocation(line: 2993, column: 13, scope: !5156)
!5227 = !DILocation(line: 2997, column: 11, scope: !5155)
!5228 = !DILocation(line: 2997, column: 27, scope: !5155)
!5229 = !DILocation(line: 2997, column: 11, scope: !5156)
!5230 = !DILocation(line: 2999, column: 11, scope: !5153)
!5231 = !DILocation(line: 2999, column: 26, scope: !5153)
!5232 = !DILocation(line: 2999, column: 10, scope: !5153)
!5233 = !DILocation(line: 2999, column: 8, scope: !5154)
!5234 = !DILocation(line: 3003, column: 8, scope: !5152)
!5235 = !DILocation(line: 3004, column: 8, scope: !5152)
!5236 = !DILocation(line: 3006, column: 8, scope: !5152)
!5237 = !DILocation(line: 3009, column: 8, scope: !5152)
!5238 = !DILocation(line: 3009, column: 24, scope: !5152)
!5239 = !DILocation(line: 3009, column: 28, scope: !5152)
!5240 = !DILocation(line: 3011, column: 6, scope: !5152)
!5241 = !DILocation(line: 0, scope: !5156)
!5242 = !DILocation(line: 3012, column: 8, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 3012, column: 8)
!5244 = !DILocation(line: 3012, column: 23, scope: !5243)
!5245 = !DILocation(line: 3012, column: 32, scope: !5243)
!5246 = !DILocation(line: 3012, column: 48, scope: !5243)
!5247 = !DILocation(line: 3012, column: 30, scope: !5243)
!5248 = !DILocation(line: 3013, column: 8, scope: !5243)
!5249 = !DILocation(line: 3013, column: 11, scope: !5243)
!5250 = !DILocation(line: 3013, column: 26, scope: !5243)
!5251 = !DILocation(line: 3012, column: 8, scope: !5154)
!5252 = !DILocation(line: 3015, column: 30, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 3014, column: 6)
!5254 = !DILocation(line: 3015, column: 8, scope: !5253)
!5255 = !DILocation(line: 3015, column: 24, scope: !5253)
!5256 = !DILocation(line: 3015, column: 28, scope: !5253)
!5257 = !DILocation(line: 3017, column: 6, scope: !5253)
!5258 = !DILocation(line: 3020, column: 14, scope: !5156)
!5259 = distinct !{!5259, !5194, !5260}
!5260 = !DILocation(line: 3021, column: 5, scope: !5139)
!5261 = !DILocation(line: 0, scope: !5200)
!5262 = !DILocation(line: 3022, column: 1, scope: !5139)
!5263 = distinct !DISubprogram(name: "set_hashtable_value_ids", scope: !3, file: !3, line: 3148, type: !4740, scopeLine: 3149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5264)
!5264 = !{!5265, !5272, !5273, !5274}
!5265 = !DILocalVariable(name: "hi", scope: !5263, file: !3, line: 3150, type: !5266)
!5266 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_iterator", file: !1199, line: 98, baseType: !5267)
!5267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1199, line: 93, size: 192, elements: !5268)
!5268 = !{!5269, !5270, !5271}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "htab", scope: !5267, file: !1199, line: 95, baseType: !1291, size: 64)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5267, file: !1199, line: 96, baseType: !1315, size: 64, offset: 64)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5267, file: !1199, line: 97, baseType: !1315, size: 64, offset: 128)
!5272 = !DILocalVariable(name: "vno", scope: !5263, file: !3, line: 3151, type: !1899)
!5273 = !DILocalVariable(name: "vr", scope: !5263, file: !3, line: 3152, type: !1884)
!5274 = !DILocalVariable(name: "vp", scope: !5263, file: !3, line: 3153, type: !1971)
!5275 = !DILocation(line: 3150, column: 3, scope: !5263)
!5276 = !DILocation(line: 3158, column: 3, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 3158, column: 3)
!5278 = !DILocation(line: 0, scope: !5263)
!5279 = !DILocation(line: 3158, column: 3, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 3158, column: 3)
!5281 = !DILocation(line: 3161, column: 16, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 3161, column: 11)
!5283 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 3160, column: 5)
!5284 = !DILocation(line: 3161, column: 11, scope: !5282)
!5285 = !DILocation(line: 3161, column: 11, scope: !5283)
!5286 = !DILocation(line: 3163, column: 8, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 3163, column: 8)
!5288 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 3162, column: 2)
!5289 = !DILocation(line: 3163, column: 32, scope: !5287)
!5290 = !DILocation(line: 3163, column: 8, scope: !5288)
!5291 = !DILocation(line: 3164, column: 22, scope: !5287)
!5292 = !DILocation(line: 3164, column: 45, scope: !5287)
!5293 = !DILocation(line: 3164, column: 11, scope: !5287)
!5294 = !DILocation(line: 3164, column: 20, scope: !5287)
!5295 = !DILocation(line: 3164, column: 6, scope: !5287)
!5296 = !DILocation(line: 3165, column: 13, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 3165, column: 13)
!5298 = !DILocation(line: 3165, column: 13, scope: !5287)
!5299 = !DILocation(line: 3166, column: 59, scope: !5297)
!5300 = !DILocation(line: 3166, column: 22, scope: !5297)
!5301 = !DILocation(line: 3166, column: 11, scope: !5297)
!5302 = !DILocation(line: 3166, column: 20, scope: !5297)
!5303 = !DILocation(line: 3166, column: 6, scope: !5297)
!5304 = distinct !{!5304, !5276, !5305}
!5305 = !DILocation(line: 3168, column: 5, scope: !5277)
!5306 = !DILocation(line: 3170, column: 3, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 3170, column: 3)
!5308 = !DILocation(line: 3170, column: 3, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 3170, column: 3)
!5310 = !DILocation(line: 3173, column: 15, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 3173, column: 11)
!5312 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 3172, column: 5)
!5313 = !DILocation(line: 3173, column: 11, scope: !5311)
!5314 = !DILocation(line: 3173, column: 11, scope: !5312)
!5315 = !DILocation(line: 3175, column: 8, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 3175, column: 8)
!5317 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 3174, column: 2)
!5318 = !DILocation(line: 3175, column: 31, scope: !5316)
!5319 = !DILocation(line: 3175, column: 8, scope: !5317)
!5320 = !DILocation(line: 3176, column: 21, scope: !5316)
!5321 = !DILocation(line: 3176, column: 43, scope: !5316)
!5322 = !DILocation(line: 3176, column: 10, scope: !5316)
!5323 = !DILocation(line: 3176, column: 19, scope: !5316)
!5324 = !DILocation(line: 3176, column: 6, scope: !5316)
!5325 = !DILocation(line: 3177, column: 13, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 3177, column: 13)
!5327 = !DILocation(line: 3177, column: 13, scope: !5316)
!5328 = !DILocation(line: 3178, column: 57, scope: !5326)
!5329 = !DILocation(line: 3178, column: 21, scope: !5326)
!5330 = !DILocation(line: 3178, column: 10, scope: !5326)
!5331 = !DILocation(line: 3178, column: 19, scope: !5326)
!5332 = !DILocation(line: 3178, column: 6, scope: !5326)
!5333 = distinct !{!5333, !5306, !5334}
!5334 = !DILocation(line: 3180, column: 5, scope: !5307)
!5335 = !DILocation(line: 3182, column: 3, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 3182, column: 3)
!5337 = !DILocation(line: 3182, column: 3, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 3182, column: 3)
!5339 = !DILocation(line: 3185, column: 15, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 3185, column: 11)
!5341 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 3184, column: 5)
!5342 = !DILocation(line: 3185, column: 11, scope: !5340)
!5343 = !DILocation(line: 3185, column: 11, scope: !5341)
!5344 = !DILocation(line: 3187, column: 8, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 3187, column: 8)
!5346 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 3186, column: 2)
!5347 = !DILocation(line: 3187, column: 31, scope: !5345)
!5348 = !DILocation(line: 3187, column: 8, scope: !5346)
!5349 = !DILocation(line: 3188, column: 21, scope: !5345)
!5350 = !DILocation(line: 3188, column: 43, scope: !5345)
!5351 = !DILocation(line: 3188, column: 10, scope: !5345)
!5352 = !DILocation(line: 3188, column: 19, scope: !5345)
!5353 = !DILocation(line: 3188, column: 6, scope: !5345)
!5354 = !DILocation(line: 3189, column: 13, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 3189, column: 13)
!5356 = !DILocation(line: 3189, column: 13, scope: !5345)
!5357 = !DILocation(line: 3190, column: 57, scope: !5355)
!5358 = !DILocation(line: 3190, column: 21, scope: !5355)
!5359 = !DILocation(line: 3190, column: 10, scope: !5355)
!5360 = !DILocation(line: 3190, column: 19, scope: !5355)
!5361 = !DILocation(line: 3190, column: 6, scope: !5355)
!5362 = distinct !{!5362, !5335, !5363}
!5363 = !DILocation(line: 3192, column: 5, scope: !5336)
!5364 = !DILocation(line: 3193, column: 1, scope: !5263)
!5365 = distinct !DISubprogram(name: "get_max_value_id", scope: !3, file: !3, line: 3299, type: !2784, scopeLine: 3300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2061)
!5366 = !DILocation(line: 3301, column: 10, scope: !5365)
!5367 = !DILocation(line: 3301, column: 3, scope: !5365)
!5368 = distinct !DISubprogram(name: "vn_nary_may_trap", scope: !3, file: !3, line: 3339, type: !5369, scopeLine: 3340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5371)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{!470, !1899}
!5371 = !{!5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381}
!5372 = !DILocalVariable(name: "nary", arg: 1, scope: !5368, file: !3, line: 3339, type: !1899)
!5373 = !DILocalVariable(name: "type", scope: !5368, file: !3, line: 3341, type: !483)
!5374 = !DILocalVariable(name: "rhs2", scope: !5368, file: !3, line: 3342, type: !483)
!5375 = !DILocalVariable(name: "honor_nans", scope: !5368, file: !3, line: 3343, type: !470)
!5376 = !DILocalVariable(name: "honor_snans", scope: !5368, file: !3, line: 3344, type: !470)
!5377 = !DILocalVariable(name: "fp_operation", scope: !5368, file: !3, line: 3345, type: !470)
!5378 = !DILocalVariable(name: "honor_trapv", scope: !5368, file: !3, line: 3346, type: !470)
!5379 = !DILocalVariable(name: "handled", scope: !5368, file: !3, line: 3347, type: !470)
!5380 = !DILocalVariable(name: "ret", scope: !5368, file: !3, line: 3347, type: !470)
!5381 = !DILocalVariable(name: "i", scope: !5368, file: !3, line: 3348, type: !7)
!5382 = !DILocation(line: 0, scope: !5368)
!5383 = !DILocation(line: 3347, column: 3, scope: !5368)
!5384 = !DILocation(line: 3350, column: 7, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 3350, column: 7)
!5386 = !DILocation(line: 3350, column: 38, scope: !5385)
!5387 = !DILocation(line: 3351, column: 7, scope: !5385)
!5388 = !DILocation(line: 3351, column: 41, scope: !5385)
!5389 = !DILocation(line: 3352, column: 7, scope: !5385)
!5390 = !DILocation(line: 3352, column: 41, scope: !5385)
!5391 = !DILocation(line: 3350, column: 7, scope: !5368)
!5392 = !DILocation(line: 3354, column: 20, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 3353, column: 5)
!5394 = !DILocation(line: 3355, column: 22, scope: !5393)
!5395 = !DILocation(line: 3356, column: 11, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 3356, column: 11)
!5397 = !DILocation(line: 3356, column: 11, scope: !5393)
!5398 = !DILocation(line: 3358, column: 17, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3357, column: 2)
!5400 = !DILocation(line: 3358, column: 36, scope: !5399)
!5401 = !DILocation(line: 3358, column: 40, scope: !5399)
!5402 = !DILocation(line: 3358, column: 39, scope: !5399)
!5403 = !DILocation(line: 3359, column: 18, scope: !5399)
!5404 = !DILocation(line: 3359, column: 38, scope: !5399)
!5405 = !DILocation(line: 3360, column: 2, scope: !5399)
!5406 = !DILocation(line: 3361, column: 16, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3361, column: 16)
!5408 = !DILocation(line: 3362, column: 9, scope: !5407)
!5409 = !DILocation(line: 3362, column: 12, scope: !5407)
!5410 = !DILocation(line: 3346, column: 8, scope: !5368)
!5411 = !DILocation(line: 3365, column: 10, scope: !5368)
!5412 = !DILocation(line: 3366, column: 9, scope: !5368)
!5413 = !DILocation(line: 3370, column: 7, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 3370, column: 7)
!5415 = !DILocation(line: 3371, column: 10, scope: !5414)
!5416 = !DILocation(line: 3371, column: 7, scope: !5414)
!5417 = !DILocation(line: 3374, column: 3, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 3374, column: 3)
!5419 = !DILocation(line: 0, scope: !5418)
!5420 = !DILocation(line: 3374, column: 25, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 3374, column: 3)
!5422 = !DILocation(line: 3374, column: 17, scope: !5421)
!5423 = !DILocation(line: 3375, column: 28, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 3375, column: 9)
!5425 = !DILocation(line: 3375, column: 9, scope: !5424)
!5426 = !DILocation(line: 3375, column: 9, scope: !5421)
!5427 = !DILocation(line: 3374, column: 33, scope: !5421)
!5428 = !DILocation(line: 3374, column: 3, scope: !5421)
!5429 = distinct !{!5429, !5417, !5430}
!5430 = !DILocation(line: 3376, column: 14, scope: !5418)
!5431 = !DILocation(line: 3379, column: 1, scope: !5368)
!5432 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_heap_reserve_exact", scope: !3, file: !3, line: 164, type: !5433, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5435)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{!471, !2529, !471}
!5435 = !{!5436, !5437, !5438}
!5436 = !DILocalVariable(name: "vec_", arg: 1, scope: !5432, file: !3, line: 164, type: !2529)
!5437 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5432, file: !3, line: 164, type: !471)
!5438 = !DILocalVariable(name: "extend", scope: !5432, file: !3, line: 164, type: !471)
!5439 = !DILocation(line: 0, scope: !5432)
!5440 = !DILocation(line: 164, column: 1, scope: !5432)
!5441 = !DILocation(line: 164, column: 1, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 164, column: 1)
!5443 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_base_space", scope: !3, file: !3, line: 163, type: !5444, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5446)
!5444 = !DISubroutineType(types: !5445)
!5445 = !{!471, !2538, !471}
!5446 = !{!5447, !5448}
!5447 = !DILocalVariable(name: "vec_", arg: 1, scope: !5443, file: !3, line: 163, type: !2538)
!5448 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5443, file: !3, line: 163, type: !471)
!5449 = !DILocation(line: 0, scope: !5443)
!5450 = !DILocation(line: 163, column: 1, scope: !5443)
!5451 = distinct !DISubprogram(name: "gimple_expr_code", scope: !391, file: !391, line: 1438, type: !2646, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5452)
!5452 = !{!5453, !5454}
!5453 = !DILocalVariable(name: "stmt", arg: 1, scope: !5451, file: !391, line: 1438, type: !2623)
!5454 = !DILocalVariable(name: "code", scope: !5451, file: !391, line: 1440, type: !390)
!5455 = !DILocation(line: 0, scope: !5451)
!5456 = !DILocation(line: 1440, column: 27, scope: !5451)
!5457 = !DILocation(line: 1441, column: 29, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5451, file: !391, line: 1441, column: 7)
!5459 = !DILocation(line: 1442, column: 42, scope: !5458)
!5460 = !DILocation(line: 1442, column: 5, scope: !5458)
!5461 = !DILocation(line: 1446, column: 5, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5458, file: !391, line: 1443, column: 12)
!5463 = !DILocation(line: 1448, column: 5, scope: !5451)
!5464 = !DILocation(line: 1450, column: 1, scope: !5451)
!5465 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !391, file: !391, line: 1686, type: !5466, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5468)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!429, !134}
!5468 = !{!5469}
!5469 = !DILocalVariable(name: "code", arg: 1, scope: !5465, file: !391, line: 1686, type: !134)
!5470 = !DILocation(line: 0, scope: !5465)
!5471 = !DILocation(line: 1688, column: 34, scope: !5465)
!5472 = !DILocation(line: 1688, column: 10, scope: !5465)
!5473 = !DILocation(line: 1688, column: 3, scope: !5465)
!5474 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_reserve", scope: !480, file: !480, line: 84, type: !5475, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5477)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{!471, !2975, !471}
!5477 = !{!5478, !5479, !5480}
!5478 = !DILocalVariable(name: "vec_", arg: 1, scope: !5474, file: !480, line: 84, type: !2975)
!5479 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5474, file: !480, line: 84, type: !471)
!5480 = !DILocalVariable(name: "extend", scope: !5474, file: !480, line: 84, type: !471)
!5481 = !DILocation(line: 0, scope: !5474)
!5482 = !DILocation(line: 84, column: 1, scope: !5474)
!5483 = !DILocation(line: 84, column: 1, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5474, file: !480, line: 84, column: 1)
!5485 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_quick_push", scope: !480, file: !480, line: 83, type: !5486, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5488)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{!2807, !2835, !1916}
!5488 = !{!5489, !5490, !5491}
!5489 = !DILocalVariable(name: "vec_", arg: 1, scope: !5485, file: !480, line: 83, type: !2835)
!5490 = !DILocalVariable(name: "obj_", arg: 2, scope: !5485, file: !480, line: 83, type: !1916)
!5491 = !DILocalVariable(name: "slot_", scope: !5485, file: !480, line: 83, type: !2807)
!5492 = !DILocation(line: 0, scope: !5485)
!5493 = !DILocation(line: 83, column: 1, scope: !5485)
!5494 = !DILocation(line: 83, column: 1, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5485, file: !480, line: 83, column: 1)
!5496 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_space", scope: !480, file: !480, line: 83, type: !5497, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5499)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!471, !2835, !471}
!5499 = !{!5500, !5501}
!5500 = !DILocalVariable(name: "vec_", arg: 1, scope: !5496, file: !480, line: 83, type: !2835)
!5501 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5496, file: !480, line: 83, type: !471)
!5502 = !DILocation(line: 0, scope: !5496)
!5503 = !DILocation(line: 83, column: 1, scope: !5496)
!5504 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_base_quick_insert", scope: !480, file: !480, line: 83, type: !3455, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5505)
!5505 = !{!5506, !5507, !5508, !5509}
!5506 = !DILocalVariable(name: "vec_", arg: 1, scope: !5504, file: !480, line: 83, type: !2835)
!5507 = !DILocalVariable(name: "ix_", arg: 2, scope: !5504, file: !480, line: 83, type: !7)
!5508 = !DILocalVariable(name: "obj_", arg: 3, scope: !5504, file: !480, line: 83, type: !1916)
!5509 = !DILocalVariable(name: "slot_", scope: !5504, file: !480, line: 83, type: !2807)
!5510 = !DILocation(line: 0, scope: !5504)
!5511 = !DILocation(line: 83, column: 1, scope: !5504)
!5512 = !DILocation(line: 83, column: 1, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5504, file: !480, line: 83, column: 1)
!5514 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_reserve_exact", scope: !480, file: !480, line: 84, type: !5475, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5515)
!5515 = !{!5516, !5517, !5518}
!5516 = !DILocalVariable(name: "vec_", arg: 1, scope: !5514, file: !480, line: 84, type: !2975)
!5517 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5514, file: !480, line: 84, type: !471)
!5518 = !DILocalVariable(name: "extend", scope: !5514, file: !480, line: 84, type: !471)
!5519 = !DILocation(line: 0, scope: !5514)
!5520 = !DILocation(line: 84, column: 1, scope: !5514)
!5521 = !DILocation(line: 84, column: 1, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5514, file: !480, line: 84, column: 1)
!5523 = distinct !DISubprogram(name: "is_gimple_call", scope: !391, file: !391, line: 1870, type: !2621, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5524)
!5524 = !{!5525}
!5525 = !DILocalVariable(name: "gs", arg: 1, scope: !5523, file: !391, line: 1870, type: !2623)
!5526 = !DILocation(line: 0, scope: !5523)
!5527 = !DILocation(line: 1872, column: 10, scope: !5523)
!5528 = !DILocation(line: 1872, column: 27, scope: !5523)
!5529 = !DILocation(line: 1872, column: 3, scope: !5523)
!5530 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !391, file: !391, line: 1954, type: !2661, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5531)
!5531 = !{!5532, !5533}
!5532 = !DILocalVariable(name: "gs", arg: 1, scope: !5530, file: !391, line: 1954, type: !2623)
!5533 = !DILocalVariable(name: "addr", scope: !5530, file: !391, line: 1956, type: !483)
!5534 = !DILocation(line: 0, scope: !5530)
!5535 = !DILocation(line: 1956, column: 15, scope: !5530)
!5536 = !DILocation(line: 1957, column: 7, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5530, file: !391, line: 1957, column: 7)
!5538 = !DILocation(line: 1957, column: 24, scope: !5537)
!5539 = !DILocation(line: 1957, column: 7, scope: !5530)
!5540 = !DILocation(line: 1958, column: 12, scope: !5537)
!5541 = !DILocation(line: 1958, column: 5, scope: !5537)
!5542 = !DILocation(line: 1960, column: 1, scope: !5530)
!5543 = distinct !DISubprogram(name: "VEC_vn_reference_op_s_heap_copy", scope: !480, file: !480, line: 84, type: !5544, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5546)
!5544 = !DISubroutineType(types: !5545)
!5545 = !{!1862, !2835}
!5546 = !{!5547, !5548, !5549}
!5547 = !DILocalVariable(name: "vec_", arg: 1, scope: !5543, file: !480, line: 84, type: !2835)
!5548 = !DILocalVariable(name: "len_", scope: !5543, file: !480, line: 84, type: !952)
!5549 = !DILocalVariable(name: "new_vec_", scope: !5543, file: !480, line: 84, type: !1862)
!5550 = !DILocation(line: 0, scope: !5543)
!5551 = !DILocation(line: 84, column: 1, scope: !5543)
!5552 = !DILocation(line: 84, column: 1, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5543, file: !480, line: 84, column: 1)
!5554 = !DILocation(line: 84, column: 1, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5553, file: !480, line: 84, column: 1)
!5556 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !135, file: !135, line: 1537, type: !5557, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5561)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{!7, !5559}
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1618)
!5561 = !{!5562}
!5562 = !DILocalVariable(name: "vec_", arg: 1, scope: !5556, file: !135, line: 1537, type: !5559)
!5563 = !DILocation(line: 0, scope: !5556)
!5564 = !DILocation(line: 1537, column: 1, scope: !5556)
!5565 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !391, file: !391, line: 1694, type: !2661, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5566)
!5566 = !{!5567}
!5567 = !DILocalVariable(name: "gs", arg: 1, scope: !5565, file: !391, line: 1694, type: !2623)
!5568 = !DILocation(line: 0, scope: !5565)
!5569 = !DILocation(line: 1697, column: 10, scope: !5565)
!5570 = !DILocation(line: 1697, column: 3, scope: !5565)
!5571 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !5116, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5572)
!5572 = !{!5573}
!5573 = !DILocalVariable(name: "t", arg: 1, scope: !5571, file: !135, line: 4551, type: !5118)
!5574 = !DILocation(line: 0, scope: !5571)
!5575 = !DILocation(line: 4553, column: 11, scope: !5571)
!5576 = !DILocation(line: 4553, column: 3, scope: !5571)
!5577 = !DILocation(line: 4565, column: 7, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5571, file: !135, line: 4554, column: 5)
!5579 = !DILocation(line: 0, scope: !5578)
!5580 = !DILocation(line: 4567, column: 1, scope: !5571)
!5581 = distinct !DISubprogram(name: "gimple_has_ops", scope: !391, file: !391, line: 1274, type: !2621, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5582)
!5582 = !{!5583}
!5583 = !DILocalVariable(name: "g", arg: 1, scope: !5581, file: !391, line: 1274, type: !2623)
!5584 = !DILocation(line: 0, scope: !5581)
!5585 = !DILocation(line: 1276, column: 10, scope: !5581)
!5586 = !DILocation(line: 1276, column: 26, scope: !5581)
!5587 = !DILocation(line: 1276, column: 41, scope: !5581)
!5588 = !DILocation(line: 1276, column: 44, scope: !5581)
!5589 = !DILocation(line: 1276, column: 60, scope: !5581)
!5590 = !DILocation(line: 1276, column: 3, scope: !5581)
!5591 = distinct !DISubprogram(name: "gimple_ops", scope: !391, file: !391, line: 1614, type: !5592, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5594)
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!841, !807}
!5594 = !{!5595, !5596}
!5595 = !DILocalVariable(name: "gs", arg: 1, scope: !5591, file: !391, line: 1614, type: !807)
!5596 = !DILocalVariable(name: "off", scope: !5591, file: !391, line: 1616, type: !952)
!5597 = !DILocation(line: 0, scope: !5591)
!5598 = !DILocation(line: 1621, column: 28, scope: !5591)
!5599 = !DILocation(line: 1621, column: 9, scope: !5591)
!5600 = !DILocation(line: 1622, column: 3, scope: !5591)
!5601 = !DILocation(line: 1624, column: 20, scope: !5591)
!5602 = !DILocation(line: 1624, column: 32, scope: !5591)
!5603 = !DILocation(line: 1624, column: 10, scope: !5591)
!5604 = !DILocation(line: 1624, column: 3, scope: !5591)
!5605 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !391, file: !391, line: 1073, type: !5606, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5608)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!435, !807}
!5608 = !{!5609}
!5609 = !DILocalVariable(name: "gs", arg: 1, scope: !5605, file: !391, line: 1073, type: !807)
!5610 = !DILocation(line: 0, scope: !5605)
!5611 = !DILocation(line: 1075, column: 24, scope: !5605)
!5612 = !DILocation(line: 1075, column: 10, scope: !5605)
!5613 = !DILocation(line: 1075, column: 3, scope: !5605)
!5614 = distinct !DISubprogram(name: "gss_for_code", scope: !391, file: !391, line: 1061, type: !5615, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5617)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!435, !390}
!5617 = !{!5618}
!5618 = !DILocalVariable(name: "code", arg: 1, scope: !5614, file: !391, line: 1061, type: !390)
!5619 = !DILocation(line: 0, scope: !5614)
!5620 = !DILocation(line: 1066, column: 10, scope: !5614)
!5621 = !DILocation(line: 1066, column: 3, scope: !5614)
!5622 = distinct !DISubprogram(name: "vn_constant_hash", scope: !3, file: !3, line: 329, type: !1299, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5623)
!5623 = !{!5624, !5625}
!5624 = !DILocalVariable(name: "p1", arg: 1, scope: !5622, file: !3, line: 329, type: !1302)
!5625 = !DILocalVariable(name: "vc1", scope: !5622, file: !3, line: 331, type: !1954)
!5626 = !DILocation(line: 0, scope: !5622)
!5627 = !DILocation(line: 332, column: 15, scope: !5622)
!5628 = !DILocation(line: 332, column: 3, scope: !5622)
!5629 = distinct !DISubprogram(name: "vn_constant_eq", scope: !3, file: !3, line: 315, type: !1307, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5630)
!5630 = !{!5631, !5632, !5633, !5634}
!5631 = !DILocalVariable(name: "p1", arg: 1, scope: !5629, file: !3, line: 315, type: !1302)
!5632 = !DILocalVariable(name: "p2", arg: 2, scope: !5629, file: !3, line: 315, type: !1302)
!5633 = !DILocalVariable(name: "vc1", scope: !5629, file: !3, line: 317, type: !1954)
!5634 = !DILocalVariable(name: "vc2", scope: !5629, file: !3, line: 318, type: !1954)
!5635 = !DILocation(line: 0, scope: !5629)
!5636 = !DILocation(line: 320, column: 12, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 320, column: 7)
!5638 = !DILocation(line: 320, column: 29, scope: !5637)
!5639 = !DILocation(line: 320, column: 21, scope: !5637)
!5640 = !DILocation(line: 320, column: 7, scope: !5629)
!5641 = !DILocation(line: 323, column: 41, scope: !5629)
!5642 = !DILocation(line: 323, column: 56, scope: !5629)
!5643 = !DILocation(line: 323, column: 10, scope: !5629)
!5644 = !DILocation(line: 323, column: 3, scope: !5629)
!5645 = !DILocation(line: 324, column: 1, scope: !5629)
!5646 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_heap_alloc", scope: !3, file: !3, line: 164, type: !5647, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5649)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{!1902, !471}
!5649 = !{!5650}
!5650 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5646, file: !3, line: 164, type: !471)
!5651 = !DILocation(line: 0, scope: !5646)
!5652 = !DILocation(line: 164, column: 1, scope: !5646)
!5653 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_heap_safe_grow_cleared", scope: !3, file: !3, line: 164, type: !2527, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5654)
!5654 = !{!5655, !5656, !5657}
!5655 = !DILocalVariable(name: "vec_", arg: 1, scope: !5653, file: !3, line: 164, type: !2529)
!5656 = !DILocalVariable(name: "size_", arg: 2, scope: !5653, file: !3, line: 164, type: !471)
!5657 = !DILocalVariable(name: "oldsize", scope: !5653, file: !3, line: 164, type: !471)
!5658 = !DILocation(line: 0, scope: !5653)
!5659 = !DILocation(line: 164, column: 1, scope: !5653)
!5660 = distinct !DISubprogram(name: "allocate_vn_table", scope: !3, file: !3, line: 3027, type: !4820, scopeLine: 3028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5661)
!5661 = !{!5662}
!5662 = !DILocalVariable(name: "table", arg: 1, scope: !5660, file: !3, line: 3027, type: !2010)
!5663 = !DILocation(line: 0, scope: !5660)
!5664 = !DILocation(line: 3029, column: 17, scope: !5660)
!5665 = !DILocation(line: 3029, column: 10, scope: !5660)
!5666 = !DILocation(line: 3029, column: 15, scope: !5660)
!5667 = !DILocation(line: 3030, column: 17, scope: !5660)
!5668 = !DILocation(line: 3030, column: 10, scope: !5660)
!5669 = !DILocation(line: 3030, column: 15, scope: !5660)
!5670 = !DILocation(line: 3031, column: 23, scope: !5660)
!5671 = !DILocation(line: 3031, column: 10, scope: !5660)
!5672 = !DILocation(line: 3031, column: 21, scope: !5660)
!5673 = !DILocation(line: 3034, column: 3, scope: !5660)
!5674 = !DILocation(line: 3035, column: 22, scope: !5660)
!5675 = !DILocation(line: 3035, column: 10, scope: !5660)
!5676 = !DILocation(line: 3035, column: 20, scope: !5660)
!5677 = !DILocation(line: 3038, column: 28, scope: !5660)
!5678 = !DILocation(line: 3038, column: 10, scope: !5660)
!5679 = !DILocation(line: 3038, column: 26, scope: !5660)
!5680 = !DILocation(line: 3041, column: 1, scope: !5660)
!5681 = distinct !DISubprogram(name: "vn_constant_eq_with_type", scope: !480, file: !480, line: 130, type: !4324, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5682)
!5682 = !{!5683, !5684}
!5683 = !DILocalVariable(name: "c1", arg: 1, scope: !5681, file: !480, line: 130, type: !483)
!5684 = !DILocalVariable(name: "c2", arg: 2, scope: !5681, file: !480, line: 130, type: !483)
!5685 = !DILocation(line: 0, scope: !5681)
!5686 = !DILocation(line: 132, column: 11, scope: !5681)
!5687 = !DILocation(line: 133, column: 4, scope: !5681)
!5688 = !DILocation(line: 133, column: 27, scope: !5681)
!5689 = !DILocation(line: 133, column: 43, scope: !5681)
!5690 = !DILocation(line: 133, column: 7, scope: !5681)
!5691 = !DILocation(line: 132, column: 3, scope: !5681)
!5692 = distinct !DISubprogram(name: "VEC_vn_ssa_aux_t_base_address", scope: !3, file: !3, line: 163, type: !5693, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5696)
!5693 = !DISubroutineType(types: !5694)
!5694 = !{!5695, !2538}
!5695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!5696 = !{!5697}
!5697 = !DILocalVariable(name: "vec_", arg: 1, scope: !5692, file: !3, line: 163, type: !2538)
!5698 = !DILocation(line: 0, scope: !5692)
!5699 = !DILocation(line: 163, column: 1, scope: !5692)
!5700 = distinct !DISubprogram(name: "vn_phi_hash", scope: !3, file: !3, line: 1665, type: !1299, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5701)
!5701 = !{!5702, !5703}
!5702 = !DILocalVariable(name: "p1", arg: 1, scope: !5700, file: !3, line: 1665, type: !1302)
!5703 = !DILocalVariable(name: "vp1", scope: !5700, file: !3, line: 1667, type: !5704)
!5704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1956)
!5705 = !DILocation(line: 0, scope: !5700)
!5706 = !DILocation(line: 1668, column: 15, scope: !5700)
!5707 = !DILocation(line: 1668, column: 3, scope: !5700)
!5708 = distinct !DISubprogram(name: "vn_phi_eq", scope: !3, file: !3, line: 1674, type: !1307, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5709)
!5709 = !{!5710, !5711, !5712, !5713, !5714, !5717, !5718}
!5710 = !DILocalVariable(name: "p1", arg: 1, scope: !5708, file: !3, line: 1674, type: !1302)
!5711 = !DILocalVariable(name: "p2", arg: 2, scope: !5708, file: !3, line: 1674, type: !1302)
!5712 = !DILocalVariable(name: "vp1", scope: !5708, file: !3, line: 1676, type: !5704)
!5713 = !DILocalVariable(name: "vp2", scope: !5708, file: !3, line: 1677, type: !5704)
!5714 = !DILocalVariable(name: "i", scope: !5715, file: !3, line: 1684, type: !471)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1683, column: 5)
!5716 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 1682, column: 7)
!5717 = !DILocalVariable(name: "phi1op", scope: !5715, file: !3, line: 1685, type: !483)
!5718 = !DILocalVariable(name: "phi2op", scope: !5719, file: !3, line: 1697, type: !483)
!5719 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1696, column: 2)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 1695, column: 7)
!5721 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1695, column: 7)
!5722 = !DILocation(line: 0, scope: !5708)
!5723 = !DILocation(line: 1679, column: 12, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 1679, column: 7)
!5725 = !DILocation(line: 1679, column: 29, scope: !5724)
!5726 = !DILocation(line: 1679, column: 21, scope: !5724)
!5727 = !DILocation(line: 1679, column: 7, scope: !5708)
!5728 = !DILocation(line: 1682, column: 12, scope: !5716)
!5729 = !DILocation(line: 1682, column: 26, scope: !5716)
!5730 = !DILocation(line: 1682, column: 18, scope: !5716)
!5731 = !DILocation(line: 1682, column: 7, scope: !5708)
!5732 = !DILocation(line: 1685, column: 7, scope: !5715)
!5733 = !DILocation(line: 1689, column: 32, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1689, column: 11)
!5735 = !DILocation(line: 1690, column: 11, scope: !5734)
!5736 = !DILocation(line: 1689, column: 12, scope: !5734)
!5737 = !DILocation(line: 1689, column: 11, scope: !5715)
!5738 = !DILocation(line: 1695, column: 7, scope: !5721)
!5739 = !DILocation(line: 0, scope: !5721)
!5740 = !DILocation(line: 0, scope: !5715)
!5741 = !DILocation(line: 1695, column: 19, scope: !5720)
!5742 = !DILocation(line: 1697, column: 18, scope: !5719)
!5743 = !DILocation(line: 0, scope: !5719)
!5744 = !DILocation(line: 1698, column: 8, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 1698, column: 8)
!5746 = !DILocation(line: 1698, column: 18, scope: !5745)
!5747 = !DILocation(line: 1698, column: 15, scope: !5745)
!5748 = !DILocation(line: 1698, column: 35, scope: !5745)
!5749 = !DILocation(line: 1698, column: 25, scope: !5745)
!5750 = !DILocation(line: 1700, column: 9, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 1700, column: 8)
!5752 = !DILocation(line: 0, scope: !5720)
!5753 = !DILocation(line: 1695, column: 65, scope: !5720)
!5754 = !DILocation(line: 1695, column: 7, scope: !5720)
!5755 = distinct !{!5755, !5738, !5756}
!5756 = !DILocation(line: 1702, column: 2, scope: !5721)
!5757 = !DILocation(line: 1704, column: 5, scope: !5716)
!5758 = !DILocation(line: 1706, column: 1, scope: !5708)
!5759 = distinct !DISubprogram(name: "free_phi", scope: !3, file: !3, line: 297, type: !1312, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5760)
!5760 = !{!5761, !5762}
!5761 = !DILocalVariable(name: "vp", arg: 1, scope: !5759, file: !3, line: 297, type: !475)
!5762 = !DILocalVariable(name: "phi", scope: !5759, file: !3, line: 299, type: !1971)
!5763 = !DILocation(line: 0, scope: !5759)
!5764 = !DILocation(line: 300, column: 3, scope: !5759)
!5765 = !DILocation(line: 301, column: 1, scope: !5759)
!5766 = distinct !DISubprogram(name: "vn_nary_op_hash", scope: !3, file: !3, line: 1394, type: !1299, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5767)
!5767 = !{!5768, !5769}
!5768 = !DILocalVariable(name: "p1", arg: 1, scope: !5766, file: !3, line: 1394, type: !1302)
!5769 = !DILocalVariable(name: "vno1", scope: !5766, file: !3, line: 1396, type: !4287)
!5770 = !DILocation(line: 0, scope: !5766)
!5771 = !DILocation(line: 1397, column: 16, scope: !5766)
!5772 = !DILocation(line: 1397, column: 3, scope: !5766)
!5773 = distinct !DISubprogram(name: "vn_reference_hash", scope: !3, file: !3, line: 421, type: !1299, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5774)
!5774 = !{!5775, !5776}
!5775 = !DILocalVariable(name: "p1", arg: 1, scope: !5773, file: !3, line: 421, type: !1302)
!5776 = !DILocalVariable(name: "vr1", scope: !5773, file: !3, line: 423, type: !2886)
!5777 = !DILocation(line: 0, scope: !5773)
!5778 = !DILocation(line: 424, column: 15, scope: !5773)
!5779 = !DILocation(line: 424, column: 3, scope: !5773)
!5780 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !135, file: !135, line: 182, type: !5781, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{!471, !4796, !7, !841}
!5783 = !{!5784, !5785, !5786}
!5784 = !DILocalVariable(name: "vec_", arg: 1, scope: !5780, file: !135, line: 182, type: !4796)
!5785 = !DILocalVariable(name: "ix_", arg: 2, scope: !5780, file: !135, line: 182, type: !7)
!5786 = !DILocalVariable(name: "ptr", arg: 3, scope: !5780, file: !135, line: 182, type: !841)
!5787 = !DILocation(line: 0, scope: !5780)
!5788 = !DILocation(line: 182, column: 1, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5780, file: !135, line: 182, column: 1)
!5790 = !DILocation(line: 182, column: 1, scope: !5780)
!5791 = !DILocation(line: 182, column: 1, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5789, file: !135, line: 182, column: 1)
!5793 = !DILocation(line: 182, column: 1, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5789, file: !135, line: 182, column: 1)
!5795 = !DILocation(line: 0, scope: !5789)
!5796 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !135, file: !135, line: 184, type: !5797, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5799)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!841, !4786, !483}
!5799 = !{!5800, !5801}
!5800 = !DILocalVariable(name: "vec_", arg: 1, scope: !5796, file: !135, line: 184, type: !4786)
!5801 = !DILocalVariable(name: "obj_", arg: 2, scope: !5796, file: !135, line: 184, type: !483)
!5802 = !DILocation(line: 0, scope: !5796)
!5803 = !DILocation(line: 184, column: 1, scope: !5796)
!5804 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !5115, file: !5115, line: 910, type: !5805, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5808)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!1973, !5807, !807, !471}
!5807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!5808 = !{!5809, !5810, !5811, !5812, !5813}
!5809 = !DILocalVariable(name: "ptr", arg: 1, scope: !5804, file: !5115, line: 910, type: !5807)
!5810 = !DILocalVariable(name: "phi", arg: 2, scope: !5804, file: !5115, line: 910, type: !807)
!5811 = !DILocalVariable(name: "flags", arg: 3, scope: !5804, file: !5115, line: 910, type: !471)
!5812 = !DILocalVariable(name: "phi_def", scope: !5804, file: !5115, line: 912, type: !483)
!5813 = !DILocalVariable(name: "comp", scope: !5804, file: !5115, line: 913, type: !471)
!5814 = !DILocation(line: 0, scope: !5804)
!5815 = !DILocation(line: 912, column: 18, scope: !5804)
!5816 = !DILocation(line: 915, column: 3, scope: !5804)
!5817 = !DILocation(line: 916, column: 8, scope: !5804)
!5818 = !DILocation(line: 916, column: 13, scope: !5804)
!5819 = !DILocation(line: 920, column: 11, scope: !5804)
!5820 = !DILocation(line: 923, column: 7, scope: !5804)
!5821 = !DILocation(line: 926, column: 7, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5823, file: !5115, line: 924, column: 5)
!5823 = distinct !DILexicalBlock(scope: !5804, file: !5115, line: 923, column: 7)
!5824 = !DILocation(line: 929, column: 8, scope: !5804)
!5825 = !DILocation(line: 929, column: 17, scope: !5804)
!5826 = !DILocation(line: 930, column: 18, scope: !5804)
!5827 = !DILocation(line: 930, column: 8, scope: !5804)
!5828 = !DILocation(line: 930, column: 16, scope: !5804)
!5829 = !DILocation(line: 931, column: 8, scope: !5804)
!5830 = !DILocation(line: 931, column: 18, scope: !5804)
!5831 = !DILocation(line: 932, column: 10, scope: !5804)
!5832 = !DILocation(line: 932, column: 3, scope: !5804)
!5833 = !DILocation(line: 933, column: 1, scope: !5804)
!5834 = distinct !DISubprogram(name: "op_iter_init_use", scope: !5115, file: !5115, line: 768, type: !5805, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5835)
!5835 = !{!5836, !5837, !5838}
!5836 = !DILocalVariable(name: "ptr", arg: 1, scope: !5834, file: !5115, line: 768, type: !5807)
!5837 = !DILocalVariable(name: "stmt", arg: 2, scope: !5834, file: !5115, line: 768, type: !807)
!5838 = !DILocalVariable(name: "flags", arg: 3, scope: !5834, file: !5115, line: 768, type: !471)
!5839 = !DILocation(line: 0, scope: !5834)
!5840 = !DILocation(line: 772, column: 3, scope: !5834)
!5841 = !DILocation(line: 773, column: 8, scope: !5834)
!5842 = !DILocation(line: 773, column: 18, scope: !5834)
!5843 = !DILocation(line: 774, column: 10, scope: !5834)
!5844 = !DILocation(line: 774, column: 3, scope: !5834)
!5845 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !5115, file: !5115, line: 729, type: !5846, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{null, !5807}
!5848 = !{!5849}
!5849 = !DILocalVariable(name: "ptr", arg: 1, scope: !5845, file: !5115, line: 729, type: !5807)
!5850 = !DILocation(line: 0, scope: !5845)
!5851 = !DILocation(line: 731, column: 8, scope: !5845)
!5852 = !DILocation(line: 731, column: 13, scope: !5845)
!5853 = !DILocation(line: 732, column: 8, scope: !5845)
!5854 = !DILocation(line: 732, column: 13, scope: !5845)
!5855 = !DILocation(line: 733, column: 8, scope: !5845)
!5856 = !DILocation(line: 733, column: 18, scope: !5845)
!5857 = !DILocation(line: 734, column: 8, scope: !5845)
!5858 = !DILocation(line: 734, column: 14, scope: !5845)
!5859 = !DILocation(line: 735, column: 8, scope: !5845)
!5860 = !DILocation(line: 735, column: 16, scope: !5845)
!5861 = !DILocation(line: 736, column: 8, scope: !5845)
!5862 = !DILocation(line: 736, column: 17, scope: !5845)
!5863 = !DILocation(line: 737, column: 8, scope: !5845)
!5864 = !DILocation(line: 737, column: 13, scope: !5845)
!5865 = !DILocation(line: 738, column: 1, scope: !5845)
!5866 = distinct !DISubprogram(name: "op_iter_done", scope: !5115, file: !5115, line: 652, type: !5867, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5871)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!470, !5869}
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!5870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1991)
!5871 = !{!5872}
!5872 = !DILocalVariable(name: "ptr", arg: 1, scope: !5866, file: !5115, line: 652, type: !5869)
!5873 = !DILocation(line: 0, scope: !5866)
!5874 = !DILocation(line: 654, column: 15, scope: !5866)
!5875 = !DILocation(line: 654, column: 3, scope: !5866)
!5876 = distinct !DISubprogram(name: "extract_and_process_scc_for_name", scope: !3, file: !3, line: 2883, type: !5140, scopeLine: 2884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5877)
!5877 = !{!5878, !5879, !5880}
!5878 = !DILocalVariable(name: "name", arg: 1, scope: !5876, file: !3, line: 2883, type: !483)
!5879 = !DILocalVariable(name: "scc", scope: !5876, file: !3, line: 2885, type: !1964)
!5880 = !DILocalVariable(name: "x", scope: !5876, file: !3, line: 2886, type: !483)
!5881 = !DILocation(line: 0, scope: !5876)
!5882 = !DILocation(line: 2885, column: 3, scope: !5876)
!5883 = !DILocation(line: 2885, column: 21, scope: !5876)
!5884 = !DILocation(line: 2890, column: 3, scope: !5876)
!5885 = !DILocation(line: 2892, column: 11, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2891, column: 5)
!5887 = !DILocation(line: 2894, column: 7, scope: !5886)
!5888 = !DILocation(line: 2894, column: 20, scope: !5886)
!5889 = !DILocation(line: 2894, column: 32, scope: !5886)
!5890 = !DILocation(line: 2895, column: 7, scope: !5886)
!5891 = !DILocation(line: 2896, column: 16, scope: !5876)
!5892 = !DILocation(line: 2896, column: 5, scope: !5886)
!5893 = distinct !{!5893, !5884, !5894}
!5894 = !DILocation(line: 2896, column: 23, scope: !5876)
!5895 = !DILocation(line: 2899, column: 7, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2899, column: 7)
!5897 = !DILocation(line: 2900, column: 19, scope: !5896)
!5898 = !DILocation(line: 2900, column: 7, scope: !5896)
!5899 = !DILocation(line: 2899, column: 7, scope: !5876)
!5900 = !DILocation(line: 2902, column: 11, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2902, column: 11)
!5902 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2901, column: 5)
!5903 = !DILocation(line: 2902, column: 11, scope: !5902)
!5904 = !DILocation(line: 2904, column: 34, scope: !5901)
!5905 = !DILocation(line: 2905, column: 14, scope: !5901)
!5906 = !DILocation(line: 2903, column: 2, scope: !5901)
!5907 = !DILocation(line: 2909, column: 7, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2909, column: 7)
!5909 = !DILocation(line: 2909, column: 30, scope: !5908)
!5910 = !DILocation(line: 2909, column: 7, scope: !5876)
!5911 = !DILocation(line: 2910, column: 15, scope: !5908)
!5912 = !DILocation(line: 2910, column: 5, scope: !5908)
!5913 = !DILocation(line: 2912, column: 7, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2912, column: 7)
!5915 = !DILocation(line: 2912, column: 17, scope: !5914)
!5916 = !DILocation(line: 2912, column: 21, scope: !5914)
!5917 = !DILocation(line: 2912, column: 32, scope: !5914)
!5918 = !DILocation(line: 2912, column: 7, scope: !5876)
!5919 = !DILocation(line: 2913, column: 27, scope: !5914)
!5920 = !DILocation(line: 2913, column: 5, scope: !5914)
!5921 = !DILocation(line: 2915, column: 16, scope: !5876)
!5922 = !DILocation(line: 2915, column: 3, scope: !5876)
!5923 = !DILocation(line: 2917, column: 3, scope: !5876)
!5924 = !DILocation(line: 2919, column: 3, scope: !5876)
!5925 = !DILocation(line: 2920, column: 1, scope: !5876)
!5926 = distinct !DISubprogram(name: "VEC_ssa_op_iter_heap_free", scope: !3, file: !3, line: 2876, type: !5927, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5930)
!5927 = !DISubroutineType(types: !5928)
!5928 = !{null, !5929}
!5929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!5930 = !{!5931}
!5931 = !DILocalVariable(name: "vec_", arg: 1, scope: !5926, file: !3, line: 2876, type: !5929)
!5932 = !DILocation(line: 0, scope: !5926)
!5933 = !DILocation(line: 2876, column: 1, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 2876, column: 1)
!5935 = !DILocation(line: 2876, column: 1, scope: !5926)
!5936 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !135, file: !135, line: 182, type: !5937, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5940)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!483, !5939}
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!5940 = !{!5941, !5942}
!5941 = !DILocalVariable(name: "vec_", arg: 1, scope: !5936, file: !135, line: 182, type: !5939)
!5942 = !DILocalVariable(name: "obj_", scope: !5936, file: !135, line: 182, type: !483)
!5943 = !DILocation(line: 0, scope: !5936)
!5944 = !DILocation(line: 182, column: 1, scope: !5936)
!5945 = distinct !DISubprogram(name: "VEC_ssa_op_iter_base_last", scope: !3, file: !3, line: 2875, type: !5946, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5949)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{!5807, !5948}
!5948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!5949 = !{!5950}
!5950 = !DILocalVariable(name: "vec_", arg: 1, scope: !5945, file: !3, line: 2875, type: !5948)
!5951 = !DILocation(line: 0, scope: !5945)
!5952 = !DILocation(line: 2875, column: 1, scope: !5945)
!5953 = distinct !DISubprogram(name: "VEC_ssa_op_iter_base_pop", scope: !3, file: !3, line: 2875, type: !5954, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5956)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{null, !5948}
!5956 = !{!5957}
!5957 = !DILocalVariable(name: "vec_", arg: 1, scope: !5953, file: !3, line: 2875, type: !5948)
!5958 = !DILocation(line: 0, scope: !5953)
!5959 = !DILocation(line: 2875, column: 1, scope: !5953)
!5960 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !5115, file: !5115, line: 427, type: !5961, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5963)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!483, !1973}
!5963 = !{!5964}
!5964 = !DILocalVariable(name: "use", arg: 1, scope: !5960, file: !5115, line: 427, type: !1973)
!5965 = !DILocation(line: 0, scope: !5960)
!5966 = !DILocation(line: 429, column: 17, scope: !5960)
!5967 = !DILocation(line: 429, column: 10, scope: !5960)
!5968 = !DILocation(line: 429, column: 3, scope: !5960)
!5969 = distinct !DISubprogram(name: "VEC_ssa_op_iter_heap_safe_push", scope: !3, file: !3, line: 2876, type: !5970, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5972)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!5807, !5929, !5869}
!5972 = !{!5973, !5974}
!5973 = !DILocalVariable(name: "vec_", arg: 1, scope: !5969, file: !3, line: 2876, type: !5929)
!5974 = !DILocalVariable(name: "obj_", arg: 2, scope: !5969, file: !3, line: 2876, type: !5869)
!5975 = !DILocation(line: 0, scope: !5969)
!5976 = !DILocation(line: 2876, column: 1, scope: !5969)
!5977 = distinct !DISubprogram(name: "op_iter_next_use", scope: !5115, file: !5115, line: 659, type: !5978, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5980)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!1973, !5807}
!5980 = !{!5981, !5982}
!5981 = !DILocalVariable(name: "ptr", arg: 1, scope: !5977, file: !5115, line: 659, type: !5807)
!5982 = !DILocalVariable(name: "use_p", scope: !5977, file: !5115, line: 661, type: !1973)
!5983 = !DILocation(line: 0, scope: !5977)
!5984 = !DILocation(line: 665, column: 12, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5977, file: !5115, line: 665, column: 7)
!5986 = !DILocation(line: 665, column: 7, scope: !5985)
!5987 = !DILocation(line: 665, column: 7, scope: !5977)
!5988 = !DILocation(line: 667, column: 15, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5985, file: !5115, line: 666, column: 5)
!5990 = !DILocation(line: 668, column: 30, scope: !5989)
!5991 = !DILocation(line: 668, column: 17, scope: !5989)
!5992 = !DILocation(line: 669, column: 7, scope: !5989)
!5993 = !DILocation(line: 671, column: 12, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5977, file: !5115, line: 671, column: 7)
!5995 = !DILocation(line: 671, column: 25, scope: !5994)
!5996 = !DILocation(line: 671, column: 18, scope: !5994)
!5997 = !DILocation(line: 671, column: 7, scope: !5977)
!5998 = !DILocation(line: 673, column: 14, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5994, file: !5115, line: 672, column: 5)
!6000 = !DILocation(line: 673, column: 7, scope: !5999)
!6001 = !DILocation(line: 675, column: 8, scope: !5977)
!6002 = !DILocation(line: 675, column: 13, scope: !5977)
!6003 = !DILocation(line: 676, column: 3, scope: !5977)
!6004 = !DILocation(line: 677, column: 1, scope: !5977)
!6005 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !135, file: !135, line: 184, type: !6006, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6008)
!6006 = !DISubroutineType(types: !6007)
!6007 = !{!471, !4786, !471}
!6008 = !{!6009, !6010, !6011}
!6009 = !DILocalVariable(name: "vec_", arg: 1, scope: !6005, file: !135, line: 184, type: !4786)
!6010 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6005, file: !135, line: 184, type: !471)
!6011 = !DILocalVariable(name: "extend", scope: !6005, file: !135, line: 184, type: !471)
!6012 = !DILocation(line: 0, scope: !6005)
!6013 = !DILocation(line: 184, column: 1, scope: !6005)
!6014 = !DILocation(line: 184, column: 1, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6005, file: !135, line: 184, column: 1)
!6016 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !135, file: !135, line: 182, type: !6017, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6019)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!841, !5939, !483}
!6019 = !{!6020, !6021, !6022}
!6020 = !DILocalVariable(name: "vec_", arg: 1, scope: !6016, file: !135, line: 182, type: !5939)
!6021 = !DILocalVariable(name: "obj_", arg: 2, scope: !6016, file: !135, line: 182, type: !483)
!6022 = !DILocalVariable(name: "slot_", scope: !6016, file: !135, line: 182, type: !841)
!6023 = !DILocation(line: 0, scope: !6016)
!6024 = !DILocation(line: 182, column: 1, scope: !6016)
!6025 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !135, file: !135, line: 182, type: !6026, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6028)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!471, !5939, !471}
!6028 = !{!6029, !6030}
!6029 = !DILocalVariable(name: "vec_", arg: 1, scope: !6025, file: !135, line: 182, type: !5939)
!6030 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6025, file: !135, line: 182, type: !471)
!6031 = !DILocation(line: 0, scope: !6025)
!6032 = !DILocation(line: 182, column: 1, scope: !6025)
!6033 = distinct !DISubprogram(name: "gimple_phi_result", scope: !391, file: !391, line: 3071, type: !2661, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6034)
!6034 = !{!6035}
!6035 = !DILocalVariable(name: "gs", arg: 1, scope: !6033, file: !391, line: 3071, type: !2623)
!6036 = !DILocation(line: 0, scope: !6033)
!6037 = !DILocation(line: 3074, column: 25, scope: !6033)
!6038 = !DILocation(line: 3074, column: 3, scope: !6033)
!6039 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !391, file: !391, line: 3061, type: !3340, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6040)
!6040 = !{!6041}
!6041 = !DILocalVariable(name: "gs", arg: 1, scope: !6039, file: !391, line: 3061, type: !2623)
!6042 = !DILocation(line: 0, scope: !6039)
!6043 = !DILocation(line: 3064, column: 25, scope: !6039)
!6044 = !DILocation(line: 3064, column: 3, scope: !6039)
!6045 = distinct !DISubprogram(name: "op_iter_init", scope: !5115, file: !5115, line: 742, type: !6046, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6048)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{null, !5807, !807, !471}
!6048 = !{!6049, !6050, !6051}
!6049 = !DILocalVariable(name: "ptr", arg: 1, scope: !6045, file: !5115, line: 742, type: !5807)
!6050 = !DILocalVariable(name: "stmt", arg: 2, scope: !6045, file: !5115, line: 742, type: !807)
!6051 = !DILocalVariable(name: "flags", arg: 3, scope: !6045, file: !5115, line: 742, type: !471)
!6052 = !DILocation(line: 0, scope: !6045)
!6053 = !DILocation(line: 746, column: 3, scope: !6045)
!6054 = !DILocation(line: 748, column: 22, scope: !6045)
!6055 = !DILocation(line: 748, column: 15, scope: !6045)
!6056 = !DILocation(line: 748, column: 52, scope: !6045)
!6057 = !DILocation(line: 748, column: 8, scope: !6045)
!6058 = !DILocation(line: 748, column: 13, scope: !6045)
!6059 = !DILocation(line: 749, column: 15, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6045, file: !5115, line: 749, column: 7)
!6061 = !DILocation(line: 750, column: 7, scope: !6060)
!6062 = !DILocation(line: 750, column: 10, scope: !6060)
!6063 = !DILocation(line: 751, column: 7, scope: !6060)
!6064 = !DILocation(line: 751, column: 10, scope: !6060)
!6065 = !DILocation(line: 751, column: 29, scope: !6060)
!6066 = !DILocation(line: 749, column: 7, scope: !6045)
!6067 = !DILocation(line: 752, column: 22, scope: !6060)
!6068 = !DILocation(line: 752, column: 28, scope: !6060)
!6069 = !DILocation(line: 752, column: 15, scope: !6060)
!6070 = !DILocation(line: 752, column: 5, scope: !6060)
!6071 = !DILocation(line: 753, column: 22, scope: !6045)
!6072 = !DILocation(line: 753, column: 15, scope: !6045)
!6073 = !DILocation(line: 753, column: 52, scope: !6045)
!6074 = !DILocation(line: 753, column: 8, scope: !6045)
!6075 = !DILocation(line: 753, column: 13, scope: !6045)
!6076 = !DILocation(line: 754, column: 15, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6045, file: !5115, line: 754, column: 7)
!6078 = !DILocation(line: 755, column: 7, scope: !6077)
!6079 = !DILocation(line: 755, column: 10, scope: !6077)
!6080 = !DILocation(line: 756, column: 7, scope: !6077)
!6081 = !DILocation(line: 756, column: 10, scope: !6077)
!6082 = !DILocation(line: 756, column: 29, scope: !6077)
!6083 = !DILocation(line: 754, column: 7, scope: !6045)
!6084 = !DILocation(line: 757, column: 22, scope: !6077)
!6085 = !DILocation(line: 757, column: 28, scope: !6077)
!6086 = !DILocation(line: 757, column: 15, scope: !6077)
!6087 = !DILocation(line: 757, column: 5, scope: !6077)
!6088 = !DILocation(line: 758, column: 8, scope: !6045)
!6089 = !DILocation(line: 758, column: 13, scope: !6045)
!6090 = !DILocation(line: 760, column: 8, scope: !6045)
!6091 = !DILocation(line: 760, column: 14, scope: !6045)
!6092 = !DILocation(line: 761, column: 8, scope: !6045)
!6093 = !DILocation(line: 761, column: 16, scope: !6045)
!6094 = !DILocation(line: 762, column: 8, scope: !6045)
!6095 = !DILocation(line: 762, column: 17, scope: !6045)
!6096 = !DILocation(line: 763, column: 1, scope: !6045)
!6097 = distinct !DISubprogram(name: "gimple_def_ops", scope: !391, file: !391, line: 1292, type: !6098, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!836, !2623}
!6100 = !{!6101}
!6101 = !DILocalVariable(name: "g", arg: 1, scope: !6097, file: !391, line: 1292, type: !2623)
!6102 = !DILocation(line: 0, scope: !6097)
!6103 = !DILocation(line: 1294, column: 8, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6097, file: !391, line: 1294, column: 7)
!6105 = !DILocation(line: 1294, column: 7, scope: !6097)
!6106 = !DILocation(line: 1296, column: 26, scope: !6097)
!6107 = !DILocation(line: 1296, column: 3, scope: !6097)
!6108 = !DILocation(line: 1297, column: 1, scope: !6097)
!6109 = distinct !DISubprogram(name: "gimple_vdef", scope: !391, file: !391, line: 1375, type: !2661, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6110)
!6110 = !{!6111}
!6111 = !DILocalVariable(name: "g", arg: 1, scope: !6109, file: !391, line: 1375, type: !2623)
!6112 = !DILocation(line: 0, scope: !6109)
!6113 = !DILocation(line: 1377, column: 8, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6109, file: !391, line: 1377, column: 7)
!6115 = !DILocation(line: 1377, column: 7, scope: !6109)
!6116 = !DILocation(line: 1379, column: 23, scope: !6109)
!6117 = !DILocation(line: 1379, column: 3, scope: !6109)
!6118 = !DILocation(line: 1380, column: 1, scope: !6109)
!6119 = distinct !DISubprogram(name: "gimple_use_ops", scope: !391, file: !391, line: 1313, type: !6120, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6122)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{!843, !2623}
!6122 = !{!6123}
!6123 = !DILocalVariable(name: "g", arg: 1, scope: !6119, file: !391, line: 1313, type: !2623)
!6124 = !DILocation(line: 0, scope: !6119)
!6125 = !DILocation(line: 1315, column: 8, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6119, file: !391, line: 1315, column: 7)
!6127 = !DILocation(line: 1315, column: 7, scope: !6119)
!6128 = !DILocation(line: 1317, column: 26, scope: !6119)
!6129 = !DILocation(line: 1317, column: 3, scope: !6119)
!6130 = !DILocation(line: 1318, column: 1, scope: !6119)
!6131 = distinct !DISubprogram(name: "gimple_vuse", scope: !391, file: !391, line: 1365, type: !2661, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6132)
!6132 = !{!6133}
!6133 = !DILocalVariable(name: "g", arg: 1, scope: !6131, file: !391, line: 1365, type: !2623)
!6134 = !DILocation(line: 0, scope: !6131)
!6135 = !DILocation(line: 1367, column: 8, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6131, file: !391, line: 1367, column: 7)
!6137 = !DILocation(line: 1367, column: 7, scope: !6131)
!6138 = !DILocation(line: 1369, column: 23, scope: !6131)
!6139 = !DILocation(line: 1369, column: 3, scope: !6131)
!6140 = !DILocation(line: 1370, column: 1, scope: !6131)
!6141 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !391, file: !391, line: 1283, type: !2621, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6142)
!6142 = !{!6143}
!6143 = !DILocalVariable(name: "g", arg: 1, scope: !6141, file: !391, line: 1283, type: !2623)
!6144 = !DILocation(line: 0, scope: !6141)
!6145 = !DILocation(line: 1285, column: 10, scope: !6141)
!6146 = !DILocation(line: 1285, column: 26, scope: !6141)
!6147 = !DILocation(line: 1285, column: 43, scope: !6141)
!6148 = !DILocation(line: 1285, column: 46, scope: !6141)
!6149 = !DILocation(line: 1285, column: 62, scope: !6141)
!6150 = !DILocation(line: 1285, column: 3, scope: !6141)
!6151 = distinct !DISubprogram(name: "sort_scc", scope: !3, file: !3, line: 2752, type: !6152, scopeLine: 2753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6154)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{null, !1964}
!6154 = !{!6155}
!6155 = !DILocalVariable(name: "scc", arg: 1, scope: !6151, file: !3, line: 2752, type: !1964)
!6156 = !DILocation(line: 0, scope: !6151)
!6157 = !DILocation(line: 2755, column: 15, scope: !6151)
!6158 = !DILocation(line: 2756, column: 15, scope: !6151)
!6159 = !DILocation(line: 2755, column: 3, scope: !6151)
!6160 = !DILocation(line: 2765, column: 1, scope: !6151)
!6161 = distinct !DISubprogram(name: "print_scc", scope: !3, file: !3, line: 1780, type: !6162, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6164)
!6162 = !DISubroutineType(types: !6163)
!6163 = !{null, !2068, !1964}
!6164 = !{!6165, !6166, !6167, !6168}
!6165 = !DILocalVariable(name: "out", arg: 1, scope: !6161, file: !3, line: 1780, type: !2068)
!6166 = !DILocalVariable(name: "scc", arg: 2, scope: !6161, file: !3, line: 1780, type: !1964)
!6167 = !DILocalVariable(name: "var", scope: !6161, file: !3, line: 1782, type: !483)
!6168 = !DILocalVariable(name: "i", scope: !6161, file: !3, line: 1783, type: !7)
!6169 = !DILocation(line: 0, scope: !6161)
!6170 = !DILocation(line: 1782, column: 3, scope: !6161)
!6171 = !DILocation(line: 1785, column: 3, scope: !6161)
!6172 = !DILocation(line: 0, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 1786, column: 3)
!6174 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 1786, column: 3)
!6175 = !DILocation(line: 1786, column: 8, scope: !6174)
!6176 = !DILocation(line: 0, scope: !6174)
!6177 = !DILocation(line: 1786, column: 15, scope: !6173)
!6178 = !DILocation(line: 1786, column: 3, scope: !6174)
!6179 = !DILocation(line: 1788, column: 32, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1787, column: 5)
!6181 = !DILocation(line: 1788, column: 7, scope: !6180)
!6182 = !DILocation(line: 1789, column: 7, scope: !6180)
!6183 = !DILocation(line: 1786, column: 49, scope: !6173)
!6184 = !DILocation(line: 1786, column: 3, scope: !6173)
!6185 = distinct !{!6185, !6178, !6186}
!6186 = !DILocation(line: 1790, column: 5, scope: !6174)
!6187 = !DILocation(line: 1791, column: 3, scope: !6161)
!6188 = !DILocation(line: 1792, column: 1, scope: !6161)
!6189 = distinct !DISubprogram(name: "process_scc", scope: !3, file: !3, line: 2824, type: !6152, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6190)
!6190 = !{!6191, !6192, !6195, !6197, !6198, !6199}
!6191 = !DILocalVariable(name: "scc", arg: 1, scope: !6189, file: !3, line: 2824, type: !1964)
!6192 = !DILocalVariable(name: "use", scope: !6193, file: !3, line: 2830, type: !483)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 2829, column: 5)
!6194 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2828, column: 7)
!6195 = !DILocalVariable(name: "var", scope: !6196, file: !3, line: 2836, type: !483)
!6196 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 2835, column: 5)
!6197 = !DILocalVariable(name: "i", scope: !6196, file: !3, line: 2837, type: !7)
!6198 = !DILocalVariable(name: "iterations", scope: !6196, file: !3, line: 2838, type: !7)
!6199 = !DILocalVariable(name: "changed", scope: !6196, file: !3, line: 2839, type: !470)
!6200 = !DILocation(line: 0, scope: !6189)
!6201 = !DILocation(line: 2828, column: 7, scope: !6194)
!6202 = !DILocation(line: 2828, column: 30, scope: !6194)
!6203 = !DILocation(line: 2828, column: 7, scope: !6189)
!6204 = !DILocation(line: 2830, column: 18, scope: !6193)
!6205 = !DILocation(line: 0, scope: !6193)
!6206 = !DILocation(line: 2831, column: 12, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 2831, column: 11)
!6208 = !DILocation(line: 2831, column: 27, scope: !6207)
!6209 = !DILocation(line: 2831, column: 11, scope: !6193)
!6210 = !DILocation(line: 2832, column: 2, scope: !6207)
!6211 = !DILocation(line: 2836, column: 7, scope: !6196)
!6212 = !DILocation(line: 0, scope: !6196)
!6213 = !DILocation(line: 2843, column: 22, scope: !6196)
!6214 = !DILocation(line: 2843, column: 20, scope: !6196)
!6215 = !DILocation(line: 2844, column: 7, scope: !6196)
!6216 = !DILocation(line: 0, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 2845, column: 2)
!6218 = !DILocation(line: 2847, column: 14, scope: !6217)
!6219 = !DILocation(line: 2851, column: 16, scope: !6217)
!6220 = !DILocation(line: 2851, column: 33, scope: !6217)
!6221 = !DILocation(line: 2851, column: 4, scope: !6217)
!6222 = !DILocation(line: 2852, column: 16, scope: !6217)
!6223 = !DILocation(line: 2852, column: 33, scope: !6217)
!6224 = !DILocation(line: 2852, column: 4, scope: !6217)
!6225 = !DILocation(line: 2853, column: 16, scope: !6217)
!6226 = !DILocation(line: 2853, column: 33, scope: !6217)
!6227 = !DILocation(line: 2853, column: 4, scope: !6217)
!6228 = !DILocation(line: 2854, column: 4, scope: !6217)
!6229 = !DILocation(line: 2855, column: 4, scope: !6217)
!6230 = !DILocation(line: 2856, column: 22, scope: !6217)
!6231 = !DILocation(line: 2856, column: 39, scope: !6217)
!6232 = !DILocation(line: 2856, column: 4, scope: !6217)
!6233 = !DILocation(line: 2857, column: 22, scope: !6217)
!6234 = !DILocation(line: 2857, column: 39, scope: !6217)
!6235 = !DILocation(line: 2857, column: 4, scope: !6217)
!6236 = !DILocation(line: 2858, column: 9, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2858, column: 4)
!6238 = !DILocation(line: 0, scope: !6237)
!6239 = !DILocation(line: 2858, column: 16, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 2858, column: 4)
!6241 = !DILocation(line: 2858, column: 4, scope: !6237)
!6242 = !DILocation(line: 2860, column: 4, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2860, column: 4)
!6244 = !DILocation(line: 2859, column: 15, scope: !6240)
!6245 = !DILocation(line: 2859, column: 6, scope: !6240)
!6246 = !DILocation(line: 2859, column: 21, scope: !6240)
!6247 = !DILocation(line: 2859, column: 26, scope: !6240)
!6248 = !DILocation(line: 2858, column: 50, scope: !6240)
!6249 = !DILocation(line: 2858, column: 4, scope: !6240)
!6250 = distinct !{!6250, !6241, !6251}
!6251 = !DILocation(line: 2859, column: 28, scope: !6237)
!6252 = !DILocation(line: 0, scope: !6243)
!6253 = !DILocation(line: 2860, column: 16, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 2860, column: 4)
!6255 = distinct !{!6255, !6215, !6256}
!6256 = !DILocation(line: 2862, column: 2, scope: !6196)
!6257 = !DILocation(line: 2861, column: 28, scope: !6254)
!6258 = !DILocation(line: 2861, column: 17, scope: !6254)
!6259 = !DILocation(line: 2861, column: 14, scope: !6254)
!6260 = !DILocation(line: 2860, column: 50, scope: !6254)
!6261 = !DILocation(line: 2860, column: 4, scope: !6254)
!6262 = distinct !{!6262, !6242, !6263}
!6263 = !DILocation(line: 2861, column: 31, scope: !6243)
!6264 = !DILocation(line: 2864, column: 35, scope: !6196)
!6265 = !DILocation(line: 2864, column: 7, scope: !6196)
!6266 = !DILocation(line: 2868, column: 22, scope: !6196)
!6267 = !DILocation(line: 2868, column: 20, scope: !6196)
!6268 = !DILocation(line: 2869, column: 22, scope: !6196)
!6269 = !DILocation(line: 2869, column: 39, scope: !6196)
!6270 = !DILocation(line: 2869, column: 7, scope: !6196)
!6271 = !DILocation(line: 2870, column: 22, scope: !6196)
!6272 = !DILocation(line: 2870, column: 39, scope: !6196)
!6273 = !DILocation(line: 2870, column: 7, scope: !6196)
!6274 = !DILocation(line: 2871, column: 22, scope: !6196)
!6275 = !DILocation(line: 2871, column: 39, scope: !6196)
!6276 = !DILocation(line: 2871, column: 7, scope: !6196)
!6277 = !DILocation(line: 2872, column: 5, scope: !6194)
!6278 = !DILocation(line: 2873, column: 1, scope: !6189)
!6279 = distinct !DISubprogram(name: "VEC_tree_base_address", scope: !135, file: !135, line: 182, type: !6280, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6282)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{!841, !5939}
!6282 = !{!6283}
!6283 = !DILocalVariable(name: "vec_", arg: 1, scope: !6279, file: !135, line: 182, type: !5939)
!6284 = !DILocation(line: 0, scope: !6279)
!6285 = !DILocation(line: 182, column: 1, scope: !6279)
!6286 = distinct !DISubprogram(name: "compare_ops", scope: !3, file: !3, line: 2703, type: !1307, scopeLine: 2704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6287)
!6287 = !{!6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295}
!6288 = !DILocalVariable(name: "pa", arg: 1, scope: !6286, file: !3, line: 2703, type: !1302)
!6289 = !DILocalVariable(name: "pb", arg: 2, scope: !6286, file: !3, line: 2703, type: !1302)
!6290 = !DILocalVariable(name: "opa", scope: !6286, file: !3, line: 2705, type: !1977)
!6291 = !DILocalVariable(name: "opb", scope: !6286, file: !3, line: 2706, type: !1977)
!6292 = !DILocalVariable(name: "opstmta", scope: !6286, file: !3, line: 2707, type: !807)
!6293 = !DILocalVariable(name: "opstmtb", scope: !6286, file: !3, line: 2708, type: !807)
!6294 = !DILocalVariable(name: "bba", scope: !6286, file: !3, line: 2709, type: !1259)
!6295 = !DILocalVariable(name: "bbb", scope: !6286, file: !3, line: 2710, type: !1259)
!6296 = !DILocation(line: 0, scope: !6286)
!6297 = !DILocation(line: 2705, column: 22, scope: !6286)
!6298 = !DILocation(line: 2705, column: 20, scope: !6286)
!6299 = !DILocation(line: 2706, column: 22, scope: !6286)
!6300 = !DILocation(line: 2706, column: 20, scope: !6286)
!6301 = !DILocation(line: 2707, column: 20, scope: !6286)
!6302 = !DILocation(line: 2708, column: 20, scope: !6286)
!6303 = !DILocation(line: 2712, column: 7, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 2712, column: 7)
!6305 = !DILocation(line: 2712, column: 30, scope: !6304)
!6306 = !DILocation(line: 2712, column: 33, scope: !6304)
!6307 = !DILocation(line: 2712, column: 7, scope: !6286)
!6308 = !DILocation(line: 2713, column: 12, scope: !6304)
!6309 = !DILocation(line: 2713, column: 37, scope: !6304)
!6310 = !DILocation(line: 2713, column: 35, scope: !6304)
!6311 = !DILocation(line: 2713, column: 5, scope: !6304)
!6312 = !DILocation(line: 2714, column: 12, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 2714, column: 12)
!6314 = !DILocation(line: 2714, column: 12, scope: !6304)
!6315 = !DILocation(line: 2716, column: 12, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 2716, column: 12)
!6317 = !DILocation(line: 2716, column: 12, scope: !6313)
!6318 = !DILocation(line: 2719, column: 9, scope: !6286)
!6319 = !DILocation(line: 2720, column: 9, scope: !6286)
!6320 = !DILocation(line: 2722, column: 8, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 2722, column: 7)
!6322 = !DILocation(line: 2722, column: 16, scope: !6321)
!6323 = !DILocation(line: 2722, column: 12, scope: !6321)
!6324 = !DILocation(line: 2723, column: 12, scope: !6321)
!6325 = !DILocation(line: 2723, column: 37, scope: !6321)
!6326 = !DILocation(line: 2723, column: 35, scope: !6321)
!6327 = !DILocation(line: 2723, column: 5, scope: !6321)
!6328 = !DILocation(line: 2724, column: 13, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 2724, column: 12)
!6330 = !DILocation(line: 2724, column: 12, scope: !6321)
!6331 = !DILocation(line: 2726, column: 13, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 2726, column: 12)
!6333 = !DILocation(line: 2726, column: 12, scope: !6329)
!6334 = !DILocation(line: 2729, column: 11, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 2729, column: 7)
!6336 = !DILocation(line: 2729, column: 7, scope: !6286)
!6337 = !DILocation(line: 2731, column: 11, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2731, column: 11)
!6339 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 2730, column: 5)
!6340 = !DILocation(line: 2731, column: 33, scope: !6338)
!6341 = !DILocation(line: 2732, column: 4, scope: !6338)
!6342 = !DILocation(line: 2732, column: 7, scope: !6338)
!6343 = !DILocation(line: 2732, column: 29, scope: !6338)
!6344 = !DILocation(line: 2731, column: 11, scope: !6339)
!6345 = !DILocation(line: 2733, column: 9, scope: !6338)
!6346 = !DILocation(line: 2733, column: 34, scope: !6338)
!6347 = !DILocation(line: 2733, column: 32, scope: !6338)
!6348 = !DILocation(line: 2733, column: 2, scope: !6338)
!6349 = !DILocation(line: 2734, column: 16, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 2734, column: 16)
!6351 = !DILocation(line: 2734, column: 38, scope: !6350)
!6352 = !DILocation(line: 2734, column: 16, scope: !6338)
!6353 = !DILocation(line: 2736, column: 16, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 2736, column: 16)
!6355 = !DILocation(line: 2736, column: 38, scope: !6354)
!6356 = !DILocation(line: 2736, column: 16, scope: !6350)
!6357 = !DILocation(line: 2738, column: 16, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 2738, column: 16)
!6359 = !DILocation(line: 2738, column: 40, scope: !6358)
!6360 = !DILocation(line: 2738, column: 37, scope: !6358)
!6361 = !DILocation(line: 2738, column: 16, scope: !6354)
!6362 = !DILocation(line: 2739, column: 16, scope: !6358)
!6363 = !DILocation(line: 2739, column: 39, scope: !6358)
!6364 = !DILocation(line: 2739, column: 37, scope: !6358)
!6365 = !DILocation(line: 2739, column: 9, scope: !6358)
!6366 = !DILocation(line: 2741, column: 9, scope: !6358)
!6367 = !DILocation(line: 2741, column: 34, scope: !6358)
!6368 = !DILocation(line: 2741, column: 32, scope: !6358)
!6369 = !DILocation(line: 2741, column: 2, scope: !6358)
!6370 = !DILocation(line: 2743, column: 10, scope: !6286)
!6371 = !DILocation(line: 2743, column: 27, scope: !6286)
!6372 = !DILocation(line: 2743, column: 53, scope: !6286)
!6373 = !DILocation(line: 2743, column: 36, scope: !6286)
!6374 = !DILocation(line: 2743, column: 34, scope: !6286)
!6375 = !DILocation(line: 2743, column: 3, scope: !6286)
!6376 = !DILocation(line: 2744, column: 1, scope: !6286)
!6377 = distinct !DISubprogram(name: "gimple_bb", scope: !391, file: !391, line: 1112, type: !6378, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6380)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{!771, !2623}
!6380 = !{!6381}
!6381 = !DILocalVariable(name: "g", arg: 1, scope: !6377, file: !391, line: 1112, type: !2623)
!6382 = !DILocation(line: 0, scope: !6377)
!6383 = !DILocation(line: 1114, column: 20, scope: !6377)
!6384 = !DILocation(line: 1114, column: 3, scope: !6377)
!6385 = distinct !DISubprogram(name: "gimple_uid", scope: !391, file: !391, line: 1265, type: !3340, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6386)
!6386 = !{!6387}
!6387 = !DILocalVariable(name: "g", arg: 1, scope: !6385, file: !391, line: 1265, type: !2623)
!6388 = !DILocation(line: 0, scope: !6385)
!6389 = !DILocation(line: 1267, column: 20, scope: !6385)
!6390 = !DILocation(line: 1267, column: 3, scope: !6385)
!6391 = distinct !DISubprogram(name: "visit_use", scope: !3, file: !3, line: 2481, type: !5140, scopeLine: 2482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6392)
!6392 = !{!6393, !6394, !6395, !6396, !6403, !6404, !6407}
!6393 = !DILocalVariable(name: "use", arg: 1, scope: !6391, file: !3, line: 2481, type: !483)
!6394 = !DILocalVariable(name: "changed", scope: !6391, file: !3, line: 2483, type: !470)
!6395 = !DILocalVariable(name: "stmt", scope: !6391, file: !3, line: 2484, type: !807)
!6396 = !DILocalVariable(name: "lhs", scope: !6397, file: !3, line: 2511, type: !483)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2510, column: 2)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 2509, column: 16)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2505, column: 16)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2503, column: 11)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 2502, column: 5)
!6402 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2499, column: 7)
!6403 = !DILocalVariable(name: "simplified", scope: !6397, file: !3, line: 2512, type: !483)
!6404 = !DILocalVariable(name: "lhs", scope: !6405, file: !3, line: 2664, type: !483)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 2663, column: 2)
!6406 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2662, column: 16)
!6407 = !DILabel(scope: !6391, name: "done", file: !3, line: 2696)
!6408 = !DILocation(line: 0, scope: !6391)
!6409 = !DILocation(line: 2484, column: 17, scope: !6391)
!6410 = !DILocation(line: 2486, column: 3, scope: !6391)
!6411 = !DILocation(line: 2486, column: 18, scope: !6391)
!6412 = !DILocation(line: 2486, column: 32, scope: !6391)
!6413 = !DILocation(line: 2488, column: 3, scope: !6391)
!6414 = !DILocation(line: 2489, column: 7, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2489, column: 7)
!6416 = !DILocation(line: 2489, column: 17, scope: !6415)
!6417 = !DILocation(line: 2489, column: 21, scope: !6415)
!6418 = !DILocation(line: 2489, column: 32, scope: !6415)
!6419 = !DILocation(line: 2490, column: 7, scope: !6415)
!6420 = !DILocation(line: 2490, column: 11, scope: !6415)
!6421 = !DILocation(line: 2489, column: 7, scope: !6391)
!6422 = !DILocation(line: 2492, column: 7, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 2491, column: 5)
!6424 = !DILocation(line: 2493, column: 27, scope: !6423)
!6425 = !DILocation(line: 2493, column: 7, scope: !6423)
!6426 = !DILocation(line: 2494, column: 16, scope: !6423)
!6427 = !DILocation(line: 2494, column: 7, scope: !6423)
!6428 = !DILocation(line: 2495, column: 26, scope: !6423)
!6429 = !DILocation(line: 2495, column: 7, scope: !6423)
!6430 = !DILocation(line: 2496, column: 5, scope: !6423)
!6431 = !DILocation(line: 2499, column: 7, scope: !6402)
!6432 = !DILocation(line: 2499, column: 7, scope: !6391)
!6433 = !DILocation(line: 2500, column: 15, scope: !6402)
!6434 = !DILocation(line: 2500, column: 5, scope: !6402)
!6435 = !DILocation(line: 2503, column: 11, scope: !6400)
!6436 = !DILocation(line: 2503, column: 30, scope: !6400)
!6437 = !DILocation(line: 2503, column: 11, scope: !6401)
!6438 = !DILocation(line: 2504, column: 12, scope: !6400)
!6439 = !DILocation(line: 2504, column: 2, scope: !6400)
!6440 = !DILocation(line: 2505, column: 17, scope: !6399)
!6441 = !DILocation(line: 2506, column: 9, scope: !6399)
!6442 = !DILocation(line: 2506, column: 12, scope: !6399)
!6443 = !DILocation(line: 2507, column: 9, scope: !6399)
!6444 = !DILocation(line: 2507, column: 12, scope: !6399)
!6445 = !DILocation(line: 2505, column: 16, scope: !6400)
!6446 = !DILocation(line: 2508, column: 12, scope: !6399)
!6447 = !DILocation(line: 2508, column: 2, scope: !6399)
!6448 = !DILocation(line: 2509, column: 16, scope: !6398)
!6449 = !DILocation(line: 2509, column: 16, scope: !6399)
!6450 = !DILocation(line: 2511, column: 15, scope: !6397)
!6451 = !DILocation(line: 0, scope: !6397)
!6452 = !DILocation(line: 2516, column: 8, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 2516, column: 8)
!6454 = !DILocation(line: 2517, column: 8, scope: !6453)
!6455 = !DILocation(line: 2517, column: 11, scope: !6453)
!6456 = !DILocation(line: 2517, column: 49, scope: !6453)
!6457 = !DILocation(line: 2518, column: 8, scope: !6453)
!6458 = !DILocation(line: 2518, column: 11, scope: !6453)
!6459 = !DILocation(line: 2518, column: 27, scope: !6453)
!6460 = !DILocation(line: 2516, column: 8, scope: !6397)
!6461 = !DILocation(line: 2520, column: 35, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 2519, column: 6)
!6463 = !DILocation(line: 2520, column: 18, scope: !6462)
!6464 = !DILocation(line: 2521, column: 8, scope: !6462)
!6465 = !DILocation(line: 2523, column: 17, scope: !6397)
!6466 = !DILocation(line: 2524, column: 8, scope: !6397)
!6467 = !DILocation(line: 2526, column: 12, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 2526, column: 12)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2525, column: 6)
!6470 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 2524, column: 8)
!6471 = !DILocation(line: 2526, column: 22, scope: !6468)
!6472 = !DILocation(line: 2526, column: 26, scope: !6468)
!6473 = !DILocation(line: 2526, column: 37, scope: !6468)
!6474 = !DILocation(line: 2526, column: 12, scope: !6469)
!6475 = !DILocation(line: 2528, column: 5, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2527, column: 3)
!6477 = !DILocation(line: 2529, column: 24, scope: !6476)
!6478 = !DILocation(line: 2529, column: 5, scope: !6476)
!6479 = !DILocation(line: 2530, column: 14, scope: !6476)
!6480 = !DILocation(line: 2530, column: 5, scope: !6476)
!6481 = !DILocation(line: 2531, column: 25, scope: !6476)
!6482 = !DILocation(line: 2531, column: 5, scope: !6476)
!6483 = !DILocation(line: 2532, column: 9, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2532, column: 9)
!6485 = !DILocation(line: 2532, column: 25, scope: !6484)
!6486 = !DILocation(line: 0, scope: !6484)
!6487 = !DILocation(line: 2532, column: 9, scope: !6476)
!6488 = !DILocation(line: 2534, column: 9, scope: !6484)
!6489 = !DILocation(line: 2533, column: 7, scope: !6484)
!6490 = !DILocation(line: 2536, column: 7, scope: !6484)
!6491 = !DILocation(line: 2544, column: 11, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 2543, column: 8)
!6493 = !DILocation(line: 2545, column: 8, scope: !6492)
!6494 = !DILocation(line: 2545, column: 11, scope: !6492)
!6495 = !DILocation(line: 2545, column: 27, scope: !6492)
!6496 = !DILocation(line: 2543, column: 8, scope: !6397)
!6497 = !DILocation(line: 2547, column: 8, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 2546, column: 6)
!6499 = !DILocation(line: 2547, column: 23, scope: !6498)
!6500 = !DILocation(line: 2547, column: 28, scope: !6498)
!6501 = !DILocation(line: 2548, column: 8, scope: !6498)
!6502 = !DILocation(line: 2548, column: 23, scope: !6498)
!6503 = !DILocation(line: 2548, column: 37, scope: !6498)
!6504 = !DILocation(line: 2549, column: 18, scope: !6498)
!6505 = !DILocation(line: 2550, column: 8, scope: !6498)
!6506 = !DILocation(line: 2553, column: 9, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 2552, column: 13)
!6508 = !DILocation(line: 2553, column: 32, scope: !6507)
!6509 = !DILocation(line: 2554, column: 6, scope: !6507)
!6510 = !DILocation(line: 0, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 2561, column: 12)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 2560, column: 6)
!6513 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 2559, column: 13)
!6514 = !DILocation(line: 2561, column: 12, scope: !6511)
!6515 = !DILocation(line: 2554, column: 9, scope: !6507)
!6516 = !DILocation(line: 2554, column: 25, scope: !6507)
!6517 = !DILocation(line: 2552, column: 13, scope: !6492)
!6518 = !DILocation(line: 2556, column: 18, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 2555, column: 6)
!6520 = !DILocation(line: 2557, column: 8, scope: !6519)
!6521 = !DILocation(line: 2561, column: 28, scope: !6511)
!6522 = !DILocation(line: 2561, column: 12, scope: !6512)
!6523 = !DILocation(line: 2563, column: 36, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 2562, column: 3)
!6525 = !DILocation(line: 2563, column: 5, scope: !6524)
!6526 = !DILocation(line: 2563, column: 20, scope: !6524)
!6527 = !DILocation(line: 2563, column: 34, scope: !6524)
!6528 = !DILocation(line: 2566, column: 27, scope: !6524)
!6529 = !DILocation(line: 2566, column: 5, scope: !6524)
!6530 = !DILocation(line: 2566, column: 20, scope: !6524)
!6531 = !DILocation(line: 2566, column: 25, scope: !6524)
!6532 = !DILocation(line: 2567, column: 3, scope: !6524)
!6533 = !DILocation(line: 2569, column: 13, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 2569, column: 13)
!6535 = !DILocation(line: 2570, column: 6, scope: !6534)
!6536 = !DILocation(line: 0, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2572, column: 13)
!6538 = !DILocation(line: 2572, column: 13, scope: !6537)
!6539 = !DILocation(line: 2570, column: 9, scope: !6534)
!6540 = !DILocation(line: 2570, column: 25, scope: !6534)
!6541 = !DILocation(line: 2569, column: 13, scope: !6513)
!6542 = !DILocation(line: 2571, column: 6, scope: !6534)
!6543 = !DILocation(line: 2571, column: 21, scope: !6534)
!6544 = !DILocation(line: 2571, column: 35, scope: !6534)
!6545 = !DILocation(line: 2572, column: 29, scope: !6537)
!6546 = !DILocation(line: 2572, column: 13, scope: !6534)
!6547 = !DILocation(line: 2579, column: 8, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 2573, column: 6)
!6549 = !DILocation(line: 2579, column: 23, scope: !6548)
!6550 = !DILocation(line: 2579, column: 37, scope: !6548)
!6551 = !DILocation(line: 2580, column: 8, scope: !6548)
!6552 = !DILocation(line: 2580, column: 23, scope: !6548)
!6553 = !DILocation(line: 2580, column: 28, scope: !6548)
!6554 = !DILocation(line: 2581, column: 6, scope: !6548)
!6555 = !DILocation(line: 2583, column: 9, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 2583, column: 8)
!6557 = !DILocation(line: 2583, column: 25, scope: !6556)
!6558 = !DILocation(line: 2586, column: 9, scope: !6556)
!6559 = !DILocation(line: 2586, column: 14, scope: !6556)
!6560 = !DILocation(line: 2587, column: 7, scope: !6556)
!6561 = !DILocation(line: 2587, column: 35, scope: !6556)
!6562 = !DILocation(line: 2587, column: 10, scope: !6556)
!6563 = !DILocation(line: 2588, column: 9, scope: !6556)
!6564 = !DILocation(line: 2589, column: 7, scope: !6556)
!6565 = !DILocation(line: 2589, column: 10, scope: !6556)
!6566 = !DILocation(line: 2590, column: 9, scope: !6556)
!6567 = !DILocation(line: 2590, column: 12, scope: !6556)
!6568 = !DILocation(line: 2593, column: 8, scope: !6556)
!6569 = !DILocation(line: 2593, column: 12, scope: !6556)
!6570 = !DILocation(line: 2594, column: 5, scope: !6556)
!6571 = !DILocation(line: 2594, column: 8, scope: !6556)
!6572 = !DILocation(line: 2594, column: 46, scope: !6556)
!6573 = !DILocation(line: 2595, column: 5, scope: !6556)
!6574 = !DILocation(line: 2595, column: 8, scope: !6556)
!6575 = !DILocation(line: 2583, column: 8, scope: !6397)
!6576 = !DILocation(line: 2596, column: 16, scope: !6556)
!6577 = !DILocation(line: 2596, column: 6, scope: !6556)
!6578 = !DILocation(line: 2597, column: 13, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 2597, column: 13)
!6580 = !DILocation(line: 2597, column: 37, scope: !6579)
!6581 = !DILocation(line: 2597, column: 40, scope: !6579)
!6582 = !DILocation(line: 2597, column: 13, scope: !6556)
!6583 = !DILocation(line: 2599, column: 49, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2598, column: 6)
!6585 = !DILocation(line: 2599, column: 18, scope: !6584)
!6586 = !DILocation(line: 2600, column: 6, scope: !6584)
!6587 = !DILocation(line: 2601, column: 29, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2601, column: 13)
!6589 = !DILocation(line: 2601, column: 13, scope: !6579)
!6590 = !DILocation(line: 2603, column: 13, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2603, column: 12)
!6592 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 2602, column: 6)
!6593 = !DILocation(line: 2604, column: 6, scope: !6591)
!6594 = !DILocation(line: 2604, column: 34, scope: !6591)
!6595 = !DILocation(line: 2604, column: 9, scope: !6591)
!6596 = !DILocation(line: 2605, column: 5, scope: !6591)
!6597 = !DILocation(line: 2606, column: 9, scope: !6591)
!6598 = !DILocation(line: 2606, column: 12, scope: !6591)
!6599 = !DILocation(line: 2603, column: 12, scope: !6592)
!6600 = !DILocation(line: 2608, column: 5, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2607, column: 3)
!6602 = !DILocation(line: 2608, column: 20, scope: !6601)
!6603 = !DILocation(line: 2608, column: 34, scope: !6601)
!6604 = !DILocation(line: 2609, column: 9, scope: !6601)
!6605 = !DILocation(line: 2610, column: 17, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 2609, column: 9)
!6607 = !DILocation(line: 2610, column: 7, scope: !6606)
!6608 = !DILocation(line: 2612, column: 38, scope: !6606)
!6609 = !DILocation(line: 2612, column: 17, scope: !6606)
!6610 = !DILocation(line: 2616, column: 35, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2615, column: 3)
!6612 = !DILocation(line: 2616, column: 13, scope: !6611)
!6613 = !DILocation(line: 2616, column: 5, scope: !6611)
!6614 = !DILocation(line: 2619, column: 19, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 2617, column: 7)
!6616 = !DILocation(line: 2620, column: 9, scope: !6615)
!6617 = !DILocation(line: 2622, column: 19, scope: !6615)
!6618 = !DILocation(line: 2623, column: 9, scope: !6615)
!6619 = !DILocation(line: 2625, column: 17, scope: !6615)
!6620 = !DILocation(line: 2625, column: 9, scope: !6615)
!6621 = !DILocation(line: 2629, column: 11, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 2629, column: 10)
!6623 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2626, column: 4)
!6624 = !DILocation(line: 2629, column: 41, scope: !6622)
!6625 = !DILocation(line: 2630, column: 11, scope: !6622)
!6626 = !DILocation(line: 2630, column: 14, scope: !6622)
!6627 = !DILocation(line: 2630, column: 44, scope: !6622)
!6628 = !DILocation(line: 2631, column: 11, scope: !6622)
!6629 = !DILocation(line: 2631, column: 14, scope: !6622)
!6630 = !DILocation(line: 2631, column: 44, scope: !6622)
!6631 = !DILocation(line: 2632, column: 10, scope: !6622)
!6632 = !DILocation(line: 2632, column: 13, scope: !6622)
!6633 = !DILocation(line: 2632, column: 69, scope: !6622)
!6634 = !DILocation(line: 2629, column: 10, scope: !6623)
!6635 = !DILocation(line: 2634, column: 20, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 2633, column: 8)
!6637 = !DILocation(line: 2635, column: 10, scope: !6636)
!6638 = !DILocation(line: 2640, column: 16, scope: !6623)
!6639 = !DILocation(line: 2639, column: 16, scope: !6623)
!6640 = !DILocation(line: 2641, column: 6, scope: !6623)
!6641 = !DILocation(line: 2643, column: 10, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 2643, column: 10)
!6643 = !DILocation(line: 2643, column: 40, scope: !6642)
!6644 = !DILocation(line: 2643, column: 10, scope: !6623)
!6645 = !DILocation(line: 2645, column: 20, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 2644, column: 8)
!6647 = !DILocation(line: 2646, column: 10, scope: !6646)
!6648 = !DILocation(line: 2650, column: 16, scope: !6623)
!6649 = !DILocation(line: 2651, column: 4, scope: !6623)
!6650 = !DILocation(line: 2654, column: 19, scope: !6615)
!6651 = !DILocation(line: 2655, column: 9, scope: !6615)
!6652 = !DILocation(line: 2660, column: 16, scope: !6588)
!6653 = !DILocation(line: 2662, column: 16, scope: !6406)
!6654 = !DILocation(line: 2662, column: 16, scope: !6398)
!6655 = !DILocation(line: 2664, column: 15, scope: !6405)
!6656 = !DILocation(line: 0, scope: !6405)
!6657 = !DILocation(line: 2668, column: 8, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2668, column: 8)
!6659 = !DILocation(line: 2669, column: 8, scope: !6658)
!6660 = !DILocation(line: 0, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2671, column: 13)
!6662 = !DILocation(line: 2671, column: 13, scope: !6661)
!6663 = !DILocation(line: 2669, column: 11, scope: !6658)
!6664 = !DILocation(line: 2669, column: 27, scope: !6658)
!6665 = !DILocation(line: 2668, column: 8, scope: !6405)
!6666 = !DILocation(line: 2670, column: 6, scope: !6658)
!6667 = !DILocation(line: 2670, column: 21, scope: !6658)
!6668 = !DILocation(line: 2670, column: 35, scope: !6658)
!6669 = !DILocation(line: 2671, column: 29, scope: !6661)
!6670 = !DILocation(line: 2671, column: 13, scope: !6658)
!6671 = !DILocation(line: 2677, column: 8, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 2672, column: 6)
!6673 = !DILocation(line: 2677, column: 23, scope: !6672)
!6674 = !DILocation(line: 2677, column: 37, scope: !6672)
!6675 = !DILocation(line: 2678, column: 8, scope: !6672)
!6676 = !DILocation(line: 2678, column: 23, scope: !6672)
!6677 = !DILocation(line: 2678, column: 28, scope: !6672)
!6678 = !DILocation(line: 2679, column: 6, scope: !6672)
!6679 = !DILocation(line: 2681, column: 8, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2681, column: 8)
!6681 = !DILocation(line: 2681, column: 24, scope: !6680)
!6682 = !DILocation(line: 2682, column: 8, scope: !6680)
!6683 = !DILocation(line: 2682, column: 11, scope: !6680)
!6684 = !DILocation(line: 2681, column: 8, scope: !6405)
!6685 = !DILocation(line: 2683, column: 16, scope: !6680)
!6686 = !DILocation(line: 2683, column: 6, scope: !6680)
!6687 = !DILocation(line: 2685, column: 13, scope: !6680)
!6688 = !DILocation(line: 2687, column: 12, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 2687, column: 12)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 2686, column: 6)
!6691 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 2685, column: 13)
!6692 = !DILocation(line: 2687, column: 37, scope: !6689)
!6693 = !DILocation(line: 2687, column: 12, scope: !6690)
!6694 = !DILocation(line: 2688, column: 13, scope: !6689)
!6695 = !DILocation(line: 2688, column: 3, scope: !6689)
!6696 = !DILocation(line: 2690, column: 13, scope: !6689)
!6697 = !DILocation(line: 2693, column: 16, scope: !6691)
!6698 = !DILocation(line: 2698, column: 1, scope: !6391)
!6699 = distinct !DISubprogram(name: "copy_nary", scope: !3, file: !3, line: 2770, type: !6700, scopeLine: 2771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6702)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{!471, !1315, !475}
!6702 = !{!6703, !6704, !6705, !6706, !6707, !6708}
!6703 = !DILocalVariable(name: "entry", arg: 1, scope: !6699, file: !3, line: 2770, type: !1315)
!6704 = !DILocalVariable(name: "data", arg: 2, scope: !6699, file: !3, line: 2770, type: !475)
!6705 = !DILocalVariable(name: "onary", scope: !6699, file: !3, line: 2772, type: !1899)
!6706 = !DILocalVariable(name: "size", scope: !6699, file: !3, line: 2773, type: !952)
!6707 = !DILocalVariable(name: "nary", scope: !6699, file: !3, line: 2775, type: !1899)
!6708 = !DILocalVariable(name: "slot", scope: !6699, file: !3, line: 2777, type: !1315)
!6709 = !DILocation(line: 0, scope: !6699)
!6710 = !DILocation(line: 2772, column: 39, scope: !6699)
!6711 = !DILocation(line: 2774, column: 34, scope: !6699)
!6712 = !DILocation(line: 2774, column: 25, scope: !6699)
!6713 = !DILocation(line: 2774, column: 22, scope: !6699)
!6714 = !DILocation(line: 2774, column: 20, scope: !6699)
!6715 = !DILocation(line: 2774, column: 4, scope: !6699)
!6716 = !DILocation(line: 2775, column: 38, scope: !6699)
!6717 = !DILocation(line: 2778, column: 17, scope: !6699)
!6718 = !DILocation(line: 2778, column: 3, scope: !6699)
!6719 = !DILocation(line: 2779, column: 36, scope: !6699)
!6720 = !DILocation(line: 2779, column: 50, scope: !6699)
!6721 = !DILocation(line: 2779, column: 68, scope: !6699)
!6722 = !DILocation(line: 2779, column: 10, scope: !6699)
!6723 = !DILocation(line: 2781, column: 3, scope: !6699)
!6724 = !DILocation(line: 2782, column: 9, scope: !6699)
!6725 = !DILocation(line: 2783, column: 3, scope: !6699)
!6726 = distinct !DISubprogram(name: "copy_phis", scope: !3, file: !3, line: 2789, type: !6700, scopeLine: 2790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6727)
!6727 = !{!6728, !6729, !6730, !6731, !6732}
!6728 = !DILocalVariable(name: "entry", arg: 1, scope: !6726, file: !3, line: 2789, type: !1315)
!6729 = !DILocalVariable(name: "data", arg: 2, scope: !6726, file: !3, line: 2789, type: !475)
!6730 = !DILocalVariable(name: "ophi", scope: !6726, file: !3, line: 2791, type: !1971)
!6731 = !DILocalVariable(name: "phi", scope: !6726, file: !3, line: 2792, type: !1971)
!6732 = !DILocalVariable(name: "slot", scope: !6726, file: !3, line: 2793, type: !1315)
!6733 = !DILocation(line: 0, scope: !6726)
!6734 = !DILocation(line: 2791, column: 30, scope: !6726)
!6735 = !DILocation(line: 2792, column: 41, scope: !6726)
!6736 = !DILocation(line: 2792, column: 55, scope: !6726)
!6737 = !DILocation(line: 2792, column: 29, scope: !6726)
!6738 = !DILocation(line: 2794, column: 16, scope: !6726)
!6739 = !DILocation(line: 2794, column: 3, scope: !6726)
!6740 = !DILocation(line: 2795, column: 9, scope: !6726)
!6741 = !DILocation(line: 2795, column: 17, scope: !6726)
!6742 = !DILocation(line: 2796, column: 36, scope: !6726)
!6743 = !DILocation(line: 2796, column: 50, scope: !6726)
!6744 = !DILocation(line: 2796, column: 66, scope: !6726)
!6745 = !DILocation(line: 2796, column: 10, scope: !6726)
!6746 = !DILocation(line: 2798, column: 9, scope: !6726)
!6747 = !DILocation(line: 2799, column: 3, scope: !6726)
!6748 = distinct !DISubprogram(name: "copy_references", scope: !3, file: !3, line: 2805, type: !6700, scopeLine: 2806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6749)
!6749 = !{!6750, !6751, !6752, !6753, !6754}
!6750 = !DILocalVariable(name: "entry", arg: 1, scope: !6748, file: !3, line: 2805, type: !1315)
!6751 = !DILocalVariable(name: "data", arg: 2, scope: !6748, file: !3, line: 2805, type: !475)
!6752 = !DILocalVariable(name: "oref", scope: !6748, file: !3, line: 2807, type: !1884)
!6753 = !DILocalVariable(name: "ref", scope: !6748, file: !3, line: 2808, type: !1884)
!6754 = !DILocalVariable(name: "slot", scope: !6748, file: !3, line: 2809, type: !1315)
!6755 = !DILocation(line: 0, scope: !6748)
!6756 = !DILocation(line: 2807, column: 42, scope: !6748)
!6757 = !DILocation(line: 2810, column: 38, scope: !6748)
!6758 = !DILocation(line: 2810, column: 52, scope: !6748)
!6759 = !DILocation(line: 2810, column: 26, scope: !6748)
!6760 = !DILocation(line: 2811, column: 16, scope: !6748)
!6761 = !DILocation(line: 2811, column: 3, scope: !6748)
!6762 = !DILocation(line: 2812, column: 9, scope: !6748)
!6763 = !DILocation(line: 2812, column: 18, scope: !6748)
!6764 = !DILocation(line: 2813, column: 36, scope: !6748)
!6765 = !DILocation(line: 2813, column: 50, scope: !6748)
!6766 = !DILocation(line: 2813, column: 72, scope: !6748)
!6767 = !DILocation(line: 2813, column: 10, scope: !6748)
!6768 = !DILocation(line: 2815, column: 7, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 2815, column: 7)
!6770 = !DILocation(line: 2815, column: 7, scope: !6748)
!6771 = !DILocation(line: 2816, column: 5, scope: !6769)
!6772 = !DILocation(line: 2817, column: 9, scope: !6748)
!6773 = !DILocation(line: 2818, column: 3, scope: !6748)
!6774 = distinct !DISubprogram(name: "set_ssa_val_to", scope: !3, file: !3, line: 1798, type: !4324, scopeLine: 1799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6775)
!6775 = !{!6776, !6777, !6778}
!6776 = !DILocalVariable(name: "from", arg: 1, scope: !6774, file: !3, line: 1798, type: !483)
!6777 = !DILocalVariable(name: "to", arg: 2, scope: !6774, file: !3, line: 1798, type: !483)
!6778 = !DILocalVariable(name: "currval", scope: !6774, file: !3, line: 1800, type: !483)
!6779 = !DILocation(line: 0, scope: !6774)
!6780 = !DILocation(line: 1802, column: 12, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1802, column: 7)
!6782 = !DILocation(line: 1803, column: 7, scope: !6781)
!6783 = !DILocation(line: 1803, column: 10, scope: !6781)
!6784 = !DILocation(line: 1803, column: 25, scope: !6781)
!6785 = !DILocation(line: 1804, column: 7, scope: !6781)
!6786 = !DILocation(line: 1804, column: 10, scope: !6781)
!6787 = !DILocation(line: 1802, column: 7, scope: !6774)
!6788 = !DILocation(line: 1809, column: 3, scope: !6774)
!6789 = !DILocation(line: 1814, column: 7, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1814, column: 7)
!6791 = !DILocation(line: 1814, column: 17, scope: !6790)
!6792 = !DILocation(line: 1814, column: 21, scope: !6790)
!6793 = !DILocation(line: 1814, column: 32, scope: !6790)
!6794 = !DILocation(line: 1814, column: 7, scope: !6774)
!6795 = !DILocation(line: 1816, column: 7, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 1815, column: 5)
!6797 = !DILocation(line: 1817, column: 27, scope: !6796)
!6798 = !DILocation(line: 1817, column: 7, scope: !6796)
!6799 = !DILocation(line: 1818, column: 16, scope: !6796)
!6800 = !DILocation(line: 1818, column: 7, scope: !6796)
!6801 = !DILocation(line: 1819, column: 27, scope: !6796)
!6802 = !DILocation(line: 1819, column: 7, scope: !6796)
!6803 = !DILocation(line: 1820, column: 5, scope: !6796)
!6804 = !DILocation(line: 1822, column: 13, scope: !6774)
!6805 = !DILocation(line: 1824, column: 15, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1824, column: 7)
!6807 = !DILocation(line: 1824, column: 22, scope: !6806)
!6808 = !DILocation(line: 1824, column: 26, scope: !6806)
!6809 = !DILocation(line: 1824, column: 7, scope: !6774)
!6810 = !DILocation(line: 1826, column: 7, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1825, column: 5)
!6812 = !DILocation(line: 1826, column: 23, scope: !6811)
!6813 = !DILocation(line: 1826, column: 30, scope: !6811)
!6814 = !DILocation(line: 1827, column: 11, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 1827, column: 11)
!6816 = !DILocation(line: 1827, column: 21, scope: !6815)
!6817 = !DILocation(line: 1827, column: 25, scope: !6815)
!6818 = !DILocation(line: 1827, column: 36, scope: !6815)
!6819 = !DILocation(line: 1827, column: 11, scope: !6811)
!6820 = !DILocation(line: 1828, column: 2, scope: !6815)
!6821 = !DILocation(line: 1831, column: 7, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1831, column: 7)
!6823 = !DILocation(line: 1831, column: 17, scope: !6822)
!6824 = !DILocation(line: 1831, column: 21, scope: !6822)
!6825 = !DILocation(line: 1831, column: 32, scope: !6822)
!6826 = !DILocation(line: 1831, column: 7, scope: !6774)
!6827 = !DILocation(line: 1832, column: 5, scope: !6822)
!6828 = !DILocation(line: 1834, column: 1, scope: !6774)
!6829 = distinct !DISubprogram(name: "visit_phi", scope: !3, file: !3, line: 2162, type: !6830, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6832)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!470, !807}
!6832 = !{!6833, !6834, !6835, !6836, !6837, !6838, !6839}
!6833 = !DILocalVariable(name: "phi", arg: 1, scope: !6829, file: !3, line: 2162, type: !807)
!6834 = !DILocalVariable(name: "changed", scope: !6829, file: !3, line: 2164, type: !470)
!6835 = !DILocalVariable(name: "result", scope: !6829, file: !3, line: 2165, type: !483)
!6836 = !DILocalVariable(name: "sameval", scope: !6829, file: !3, line: 2166, type: !483)
!6837 = !DILocalVariable(name: "allsame", scope: !6829, file: !3, line: 2167, type: !470)
!6838 = !DILocalVariable(name: "i", scope: !6829, file: !3, line: 2168, type: !7)
!6839 = !DILocalVariable(name: "def", scope: !6840, file: !3, line: 2179, type: !483)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 2178, column: 5)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 2177, column: 3)
!6842 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 2177, column: 3)
!6843 = !DILocation(line: 0, scope: !6829)
!6844 = !DILocation(line: 2166, column: 18, scope: !6829)
!6845 = !DILocation(line: 2172, column: 7, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 2172, column: 7)
!6847 = !DILocation(line: 2172, column: 7, scope: !6829)
!6848 = !DILocation(line: 2177, column: 3, scope: !6842)
!6849 = !DILocation(line: 2173, column: 28, scope: !6846)
!6850 = !DILocation(line: 2173, column: 46, scope: !6846)
!6851 = !DILocation(line: 2173, column: 12, scope: !6846)
!6852 = !DILocation(line: 2173, column: 5, scope: !6846)
!6853 = !DILocation(line: 0, scope: !6842)
!6854 = !DILocation(line: 2167, column: 8, scope: !6829)
!6855 = !DILocation(line: 2166, column: 8, scope: !6829)
!6856 = !DILocation(line: 2177, column: 19, scope: !6841)
!6857 = !DILocation(line: 2177, column: 17, scope: !6841)
!6858 = !DILocation(line: 2179, column: 18, scope: !6840)
!6859 = !DILocation(line: 0, scope: !6840)
!6860 = !DILocation(line: 2181, column: 11, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 2181, column: 11)
!6862 = !DILocation(line: 2181, column: 27, scope: !6861)
!6863 = !DILocation(line: 2181, column: 11, scope: !6840)
!6864 = !DILocation(line: 2182, column: 8, scope: !6861)
!6865 = !DILocation(line: 2182, column: 2, scope: !6861)
!6866 = !DILocation(line: 2183, column: 18, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 2183, column: 11)
!6868 = !DILocation(line: 2183, column: 15, scope: !6867)
!6869 = !DILocation(line: 2183, column: 11, scope: !6840)
!6870 = !DILocation(line: 2185, column: 19, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 2185, column: 11)
!6872 = !DILocation(line: 2185, column: 11, scope: !6840)
!6873 = !DILocation(line: 2191, column: 9, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2191, column: 8)
!6875 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 2190, column: 2)
!6876 = !DILocation(line: 2191, column: 8, scope: !6875)
!6877 = !DILocation(line: 2197, column: 5, scope: !6841)
!6878 = !DILocation(line: 2177, column: 47, scope: !6841)
!6879 = !DILocation(line: 2177, column: 3, scope: !6841)
!6880 = distinct !{!6880, !6848, !6881}
!6881 = !DILocation(line: 2197, column: 5, scope: !6842)
!6882 = !DILocation(line: 2201, column: 7, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 2201, column: 7)
!6884 = !DILocation(line: 2201, column: 7, scope: !6829)
!6885 = !DILocation(line: 2203, column: 11, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 2203, column: 11)
!6887 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2202, column: 5)
!6888 = !DILocation(line: 0, scope: !6886)
!6889 = !DILocation(line: 2203, column: 11, scope: !6887)
!6890 = !DILocation(line: 2205, column: 46, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 2204, column: 2)
!6892 = !DILocation(line: 2206, column: 13, scope: !6891)
!6893 = !DILocation(line: 2206, column: 4, scope: !6891)
!6894 = !DILocation(line: 2206, column: 32, scope: !6891)
!6895 = !DILocation(line: 2206, column: 37, scope: !6891)
!6896 = !DILocation(line: 2207, column: 2, scope: !6891)
!6897 = !DILocation(line: 2210, column: 46, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 2209, column: 2)
!6899 = !DILocation(line: 2211, column: 13, scope: !6898)
!6900 = !DILocation(line: 2211, column: 4, scope: !6898)
!6901 = !DILocation(line: 2211, column: 32, scope: !6898)
!6902 = !DILocation(line: 2211, column: 37, scope: !6898)
!6903 = !DILocation(line: 2214, column: 11, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 2214, column: 11)
!6905 = !DILocation(line: 2214, column: 31, scope: !6904)
!6906 = !DILocation(line: 0, scope: !6887)
!6907 = !DILocation(line: 2214, column: 11, scope: !6887)
!6908 = !DILocation(line: 2215, column: 9, scope: !6904)
!6909 = !DILocation(line: 2215, column: 2, scope: !6904)
!6910 = !DILocation(line: 2217, column: 14, scope: !6887)
!6911 = !DILocation(line: 2217, column: 7, scope: !6887)
!6912 = !DILocation(line: 2221, column: 12, scope: !6829)
!6913 = !DILocation(line: 2222, column: 7, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 2222, column: 7)
!6915 = !DILocation(line: 2222, column: 7, scope: !6829)
!6916 = !DILocation(line: 2224, column: 11, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 2224, column: 11)
!6918 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 2223, column: 5)
!6919 = !DILocation(line: 2224, column: 30, scope: !6917)
!6920 = !DILocation(line: 0, scope: !6917)
!6921 = !DILocation(line: 2224, column: 11, scope: !6918)
!6922 = !DILocation(line: 2225, column: 12, scope: !6917)
!6923 = !DILocation(line: 2225, column: 2, scope: !6917)
!6924 = !DILocation(line: 2227, column: 12, scope: !6917)
!6925 = !DILocation(line: 2231, column: 27, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 2230, column: 5)
!6927 = !DILocation(line: 2231, column: 7, scope: !6926)
!6928 = !DILocation(line: 2232, column: 16, scope: !6926)
!6929 = !DILocation(line: 2232, column: 7, scope: !6926)
!6930 = !DILocation(line: 2232, column: 35, scope: !6926)
!6931 = !DILocation(line: 2232, column: 49, scope: !6926)
!6932 = !DILocation(line: 2233, column: 42, scope: !6926)
!6933 = !DILocation(line: 2233, column: 16, scope: !6926)
!6934 = !DILocation(line: 2233, column: 7, scope: !6926)
!6935 = !DILocation(line: 2233, column: 35, scope: !6926)
!6936 = !DILocation(line: 2233, column: 40, scope: !6926)
!6937 = !DILocation(line: 2234, column: 33, scope: !6926)
!6938 = !DILocation(line: 2234, column: 51, scope: !6926)
!6939 = !DILocation(line: 2234, column: 17, scope: !6926)
!6940 = !DILocation(line: 2238, column: 1, scope: !6829)
!6941 = distinct !DISubprogram(name: "gimple_has_lhs", scope: !391, file: !391, line: 2210, type: !6830, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6942)
!6942 = !{!6943}
!6943 = !DILocalVariable(name: "stmt", arg: 1, scope: !6941, file: !391, line: 2210, type: !807)
!6944 = !DILocation(line: 0, scope: !6941)
!6945 = !DILocation(line: 2212, column: 11, scope: !6941)
!6946 = !DILocation(line: 2213, column: 4, scope: !6941)
!6947 = !DILocation(line: 2213, column: 8, scope: !6941)
!6948 = !DILocation(line: 2214, column: 8, scope: !6941)
!6949 = !DILocation(line: 2214, column: 11, scope: !6941)
!6950 = !DILocation(line: 2214, column: 34, scope: !6941)
!6951 = !DILocation(line: 2212, column: 3, scope: !6941)
!6952 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !391, file: !391, line: 1477, type: !2621, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6953)
!6953 = !{!6954}
!6954 = !DILocalVariable(name: "stmt", arg: 1, scope: !6952, file: !391, line: 1477, type: !2623)
!6955 = !DILocation(line: 0, scope: !6952)
!6956 = !DILocation(line: 1479, column: 7, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6952, file: !391, line: 1479, column: 7)
!6958 = !DILocation(line: 1479, column: 7, scope: !6952)
!6959 = !DILocation(line: 1480, column: 25, scope: !6957)
!6960 = !DILocation(line: 1480, column: 12, scope: !6957)
!6961 = !DILocation(line: 1480, column: 5, scope: !6957)
!6962 = !DILocation(line: 0, scope: !6957)
!6963 = !DILocation(line: 1483, column: 1, scope: !6952)
!6964 = distinct !DISubprogram(name: "defs_to_varying", scope: !3, file: !3, line: 1840, type: !6830, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6965)
!6965 = !{!6966, !6967, !6968, !6969, !6970}
!6966 = !DILocalVariable(name: "stmt", arg: 1, scope: !6964, file: !3, line: 1840, type: !807)
!6967 = !DILocalVariable(name: "changed", scope: !6964, file: !3, line: 1842, type: !470)
!6968 = !DILocalVariable(name: "iter", scope: !6964, file: !3, line: 1843, type: !1991)
!6969 = !DILocalVariable(name: "defp", scope: !6964, file: !3, line: 1844, type: !1978)
!6970 = !DILocalVariable(name: "def", scope: !6971, file: !3, line: 1848, type: !483)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 1847, column: 5)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 1846, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 1846, column: 3)
!6974 = !DILocation(line: 0, scope: !6964)
!6975 = !DILocation(line: 1843, column: 3, scope: !6964)
!6976 = !DILocation(line: 1846, column: 3, scope: !6973)
!6977 = !DILocation(line: 0, scope: !6973)
!6978 = !DILocation(line: 1846, column: 3, scope: !6972)
!6979 = !DILocation(line: 1848, column: 18, scope: !6971)
!6980 = !DILocation(line: 0, scope: !6971)
!6981 = !DILocation(line: 1850, column: 7, scope: !6971)
!6982 = !DILocation(line: 1850, column: 22, scope: !6971)
!6983 = !DILocation(line: 1850, column: 36, scope: !6971)
!6984 = !DILocation(line: 1851, column: 18, scope: !6971)
!6985 = !DILocation(line: 1851, column: 15, scope: !6971)
!6986 = distinct !{!6986, !6976, !6987}
!6987 = !DILocation(line: 1852, column: 5, scope: !6973)
!6988 = !DILocation(line: 1854, column: 1, scope: !6964)
!6989 = !DILocation(line: 1853, column: 3, scope: !6964)
!6990 = distinct !DISubprogram(name: "visit_copy", scope: !3, file: !3, line: 1863, type: !4324, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6991)
!6991 = !{!6992, !6993}
!6992 = !DILocalVariable(name: "lhs", arg: 1, scope: !6990, file: !3, line: 1863, type: !483)
!6993 = !DILocalVariable(name: "rhs", arg: 2, scope: !6990, file: !3, line: 1863, type: !483)
!6994 = !DILocation(line: 0, scope: !6990)
!6995 = !DILocation(line: 1866, column: 3, scope: !6990)
!6996 = !DILocation(line: 1866, column: 10, scope: !6990)
!6997 = !DILocation(line: 1866, column: 26, scope: !6990)
!6998 = !DILocation(line: 1867, column: 3, scope: !6990)
!6999 = !DILocation(line: 1867, column: 6, scope: !6990)
!7000 = !DILocation(line: 1867, column: 20, scope: !6990)
!7001 = !DILocation(line: 1872, column: 7, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 1872, column: 7)
!7003 = !DILocation(line: 1868, column: 11, scope: !6990)
!7004 = distinct !{!7004, !6995, !7003}
!7005 = !DILocation(line: 1872, column: 23, scope: !7002)
!7006 = !DILocation(line: 1872, column: 7, scope: !6990)
!7007 = !DILocation(line: 1874, column: 38, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 1873, column: 5)
!7009 = !DILocation(line: 1874, column: 53, scope: !7008)
!7010 = !DILocation(line: 1874, column: 7, scope: !7008)
!7011 = !DILocation(line: 1874, column: 22, scope: !7008)
!7012 = !DILocation(line: 1874, column: 36, scope: !7008)
!7013 = !DILocation(line: 1875, column: 29, scope: !7008)
!7014 = !DILocation(line: 1875, column: 44, scope: !7008)
!7015 = !DILocation(line: 1875, column: 7, scope: !7008)
!7016 = !DILocation(line: 1875, column: 22, scope: !7008)
!7017 = !DILocation(line: 1875, column: 27, scope: !7008)
!7018 = !DILocation(line: 1876, column: 5, scope: !7008)
!7019 = !DILocation(line: 1878, column: 10, scope: !6990)
!7020 = !DILocation(line: 1878, column: 3, scope: !6990)
!7021 = distinct !DISubprogram(name: "try_to_simplify", scope: !3, file: !3, line: 2431, type: !7022, scopeLine: 2432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7024)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{!483, !807}
!7024 = !{!7025, !7026}
!7025 = !DILocalVariable(name: "stmt", arg: 1, scope: !7021, file: !3, line: 2431, type: !807)
!7026 = !DILocalVariable(name: "tem", scope: !7021, file: !3, line: 2433, type: !483)
!7027 = !DILocation(line: 0, scope: !7021)
!7028 = !DILocation(line: 2437, column: 7, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 2437, column: 7)
!7030 = !DILocation(line: 2438, column: 7, scope: !7029)
!7031 = !DILocation(line: 2438, column: 10, scope: !7029)
!7032 = !DILocation(line: 2438, column: 48, scope: !7029)
!7033 = !DILocation(line: 2437, column: 7, scope: !7021)
!7034 = !DILocation(line: 2441, column: 11, scope: !7021)
!7035 = !DILocation(line: 2441, column: 3, scope: !7021)
!7036 = !DILocation(line: 2444, column: 40, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 2442, column: 5)
!7038 = !DILocation(line: 2444, column: 13, scope: !7037)
!7039 = !DILocation(line: 2445, column: 11, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2445, column: 11)
!7041 = !DILocation(line: 2445, column: 11, scope: !7037)
!7042 = !DILocation(line: 2452, column: 39, scope: !7037)
!7043 = !DILocation(line: 2452, column: 13, scope: !7037)
!7044 = !DILocation(line: 2453, column: 11, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2453, column: 11)
!7046 = !DILocation(line: 2453, column: 11, scope: !7037)
!7047 = !DILocation(line: 2457, column: 13, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2457, column: 11)
!7049 = !DILocation(line: 2457, column: 51, scope: !7048)
!7050 = !DILocation(line: 2458, column: 6, scope: !7048)
!7051 = !DILocation(line: 2458, column: 9, scope: !7048)
!7052 = !DILocation(line: 2458, column: 47, scope: !7048)
!7053 = !DILocation(line: 2459, column: 6, scope: !7048)
!7054 = !DILocation(line: 2459, column: 9, scope: !7048)
!7055 = !DILocation(line: 2459, column: 47, scope: !7048)
!7056 = !DILocation(line: 2457, column: 11, scope: !7037)
!7057 = !DILocation(line: 2464, column: 14, scope: !7037)
!7058 = !DILocation(line: 2464, column: 7, scope: !7037)
!7059 = !DILocation(line: 2468, column: 14, scope: !7037)
!7060 = !DILocation(line: 2468, column: 7, scope: !7037)
!7061 = !DILocation(line: 2474, column: 3, scope: !7021)
!7062 = !DILocation(line: 2475, column: 1, scope: !7021)
!7063 = distinct !DISubprogram(name: "expr_has_constants", scope: !3, file: !3, line: 2243, type: !5140, scopeLine: 2244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7064)
!7064 = !{!7065}
!7065 = !DILocalVariable(name: "expr", arg: 1, scope: !7063, file: !3, line: 2243, type: !483)
!7066 = !DILocation(line: 0, scope: !7063)
!7067 = !DILocation(line: 2245, column: 11, scope: !7063)
!7068 = !DILocation(line: 2245, column: 3, scope: !7063)
!7069 = !DILocation(line: 2248, column: 39, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 2246, column: 5)
!7071 = !DILocation(line: 2248, column: 14, scope: !7070)
!7072 = !DILocation(line: 2248, column: 7, scope: !7070)
!7073 = !DILocation(line: 2251, column: 39, scope: !7070)
!7074 = !DILocation(line: 2251, column: 14, scope: !7070)
!7075 = !DILocation(line: 2252, column: 2, scope: !7070)
!7076 = !DILocation(line: 2252, column: 30, scope: !7070)
!7077 = !DILocation(line: 2252, column: 5, scope: !7070)
!7078 = !DILocation(line: 2251, column: 7, scope: !7070)
!7079 = !DILocation(line: 2259, column: 14, scope: !7070)
!7080 = !DILocation(line: 2259, column: 7, scope: !7070)
!7081 = !DILocation(line: 0, scope: !7070)
!7082 = !DILocation(line: 2262, column: 1, scope: !7063)
!7083 = distinct !DISubprogram(name: "stmt_has_constants", scope: !3, file: !3, line: 2267, type: !6830, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7084)
!7084 = !{!7085}
!7085 = !DILocalVariable(name: "stmt", arg: 1, scope: !7083, file: !3, line: 2267, type: !807)
!7086 = !DILocation(line: 0, scope: !7083)
!7087 = !DILocation(line: 2269, column: 7, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2269, column: 7)
!7089 = !DILocation(line: 2269, column: 26, scope: !7088)
!7090 = !DILocation(line: 2269, column: 7, scope: !7083)
!7091 = !DILocation(line: 2272, column: 33, scope: !7083)
!7092 = !DILocation(line: 2272, column: 11, scope: !7083)
!7093 = !DILocation(line: 2272, column: 3, scope: !7083)
!7094 = !DILocation(line: 2275, column: 39, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2273, column: 5)
!7096 = !DILocation(line: 2275, column: 14, scope: !7095)
!7097 = !DILocation(line: 2275, column: 7, scope: !7095)
!7098 = !DILocation(line: 2278, column: 40, scope: !7095)
!7099 = !DILocation(line: 2278, column: 15, scope: !7095)
!7100 = !DILocation(line: 2279, column: 8, scope: !7095)
!7101 = !DILocation(line: 2279, column: 36, scope: !7095)
!7102 = !DILocation(line: 2279, column: 11, scope: !7095)
!7103 = !DILocation(line: 2278, column: 7, scope: !7095)
!7104 = !DILocation(line: 2283, column: 39, scope: !7095)
!7105 = !DILocation(line: 2283, column: 14, scope: !7095)
!7106 = !DILocation(line: 2283, column: 7, scope: !7095)
!7107 = !DILocation(line: 2285, column: 7, scope: !7095)
!7108 = !DILocation(line: 2287, column: 3, scope: !7083)
!7109 = !DILocation(line: 2288, column: 1, scope: !7083)
!7110 = distinct !DISubprogram(name: "visit_reference_op_store", scope: !3, file: !3, line: 2079, type: !7111, scopeLine: 2080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7113)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{!470, !483, !483, !807}
!7113 = !{!7114, !7115, !7116, !7117, !7118, !7119, !7120, !7123, !7125}
!7114 = !DILocalVariable(name: "lhs", arg: 1, scope: !7110, file: !3, line: 2079, type: !483)
!7115 = !DILocalVariable(name: "op", arg: 2, scope: !7110, file: !3, line: 2079, type: !483)
!7116 = !DILocalVariable(name: "stmt", arg: 3, scope: !7110, file: !3, line: 2079, type: !807)
!7117 = !DILocalVariable(name: "changed", scope: !7110, file: !3, line: 2081, type: !470)
!7118 = !DILocalVariable(name: "result", scope: !7110, file: !3, line: 2082, type: !483)
!7119 = !DILocalVariable(name: "resultsame", scope: !7110, file: !3, line: 2083, type: !470)
!7120 = !DILocalVariable(name: "vdef", scope: !7121, file: !3, line: 2114, type: !483)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 2113, column: 5)
!7122 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 2112, column: 7)
!7123 = !DILocalVariable(name: "def", scope: !7124, file: !3, line: 2142, type: !483)
!7124 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 2139, column: 5)
!7125 = !DILocalVariable(name: "use", scope: !7124, file: !3, line: 2142, type: !483)
!7126 = !DILocation(line: 0, scope: !7110)
!7127 = !DILocation(line: 2101, column: 38, scope: !7110)
!7128 = !DILocation(line: 2101, column: 12, scope: !7110)
!7129 = !DILocation(line: 2103, column: 7, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 2103, column: 7)
!7131 = !DILocation(line: 2103, column: 7, scope: !7110)
!7132 = !DILocation(line: 2105, column: 11, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2105, column: 11)
!7134 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2104, column: 5)
!7135 = !DILocation(line: 2105, column: 30, scope: !7133)
!7136 = !DILocation(line: 2105, column: 11, scope: !7134)
!7137 = !DILocation(line: 2106, column: 11, scope: !7133)
!7138 = !DILocation(line: 2106, column: 2, scope: !7133)
!7139 = !DILocation(line: 2107, column: 11, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2107, column: 11)
!7141 = !DILocation(line: 2107, column: 26, scope: !7140)
!7142 = !DILocation(line: 2107, column: 11, scope: !7134)
!7143 = !DILocation(line: 2108, column: 7, scope: !7140)
!7144 = !DILocation(line: 2108, column: 2, scope: !7140)
!7145 = !DILocation(line: 2109, column: 20, scope: !7134)
!7146 = !DILocation(line: 2110, column: 5, scope: !7134)
!7147 = !DILocation(line: 2112, column: 8, scope: !7122)
!7148 = !DILocation(line: 2112, column: 15, scope: !7122)
!7149 = !DILocation(line: 0, scope: !7122)
!7150 = !DILocation(line: 2116, column: 21, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 2116, column: 11)
!7152 = !DILocation(line: 2116, column: 25, scope: !7151)
!7153 = !DILocation(line: 2116, column: 36, scope: !7151)
!7154 = !DILocation(line: 2116, column: 11, scope: !7121)
!7155 = !DILocation(line: 2118, column: 4, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 2117, column: 2)
!7157 = !DILocation(line: 2119, column: 13, scope: !7156)
!7158 = !DILocation(line: 2119, column: 4, scope: !7156)
!7159 = !DILocation(line: 2120, column: 24, scope: !7156)
!7160 = !DILocation(line: 2120, column: 4, scope: !7156)
!7161 = !DILocation(line: 2121, column: 13, scope: !7156)
!7162 = !DILocation(line: 2121, column: 4, scope: !7156)
!7163 = !DILocation(line: 2122, column: 24, scope: !7156)
!7164 = !DILocation(line: 2122, column: 4, scope: !7156)
!7165 = !DILocation(line: 2123, column: 13, scope: !7156)
!7166 = !DILocation(line: 2123, column: 4, scope: !7156)
!7167 = !DILocation(line: 2124, column: 2, scope: !7156)
!7168 = !DILocation(line: 2127, column: 19, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 2127, column: 11)
!7170 = !DILocation(line: 0, scope: !7121)
!7171 = !DILocation(line: 2127, column: 17, scope: !7169)
!7172 = !DILocation(line: 2127, column: 11, scope: !7121)
!7173 = !DILocation(line: 2129, column: 4, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 2128, column: 2)
!7175 = !DILocation(line: 2129, column: 20, scope: !7174)
!7176 = !DILocation(line: 2129, column: 34, scope: !7174)
!7177 = !DILocation(line: 2130, column: 15, scope: !7174)
!7178 = !DILocation(line: 2131, column: 2, scope: !7174)
!7179 = !DILocation(line: 2134, column: 11, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 2134, column: 11)
!7181 = !DILocation(line: 2135, column: 4, scope: !7180)
!7182 = !DILocation(line: 2135, column: 7, scope: !7180)
!7183 = !DILocation(line: 2134, column: 11, scope: !7121)
!7184 = !DILocation(line: 2136, column: 9, scope: !7180)
!7185 = !DILocation(line: 2144, column: 21, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 2144, column: 11)
!7187 = !DILocation(line: 2144, column: 25, scope: !7186)
!7188 = !DILocation(line: 2144, column: 36, scope: !7186)
!7189 = !DILocation(line: 2144, column: 11, scope: !7124)
!7190 = !DILocation(line: 2145, column: 2, scope: !7186)
!7191 = !DILocation(line: 2148, column: 13, scope: !7124)
!7192 = !DILocation(line: 0, scope: !7124)
!7193 = !DILocation(line: 2149, column: 13, scope: !7124)
!7194 = !DILocation(line: 2151, column: 7, scope: !7124)
!7195 = !DILocation(line: 2151, column: 22, scope: !7124)
!7196 = !DILocation(line: 2151, column: 36, scope: !7124)
!7197 = !DILocation(line: 2152, column: 39, scope: !7124)
!7198 = !DILocation(line: 2152, column: 18, scope: !7124)
!7199 = !DILocation(line: 2155, column: 3, scope: !7110)
!7200 = distinct !DISubprogram(name: "visit_unary_op", scope: !3, file: !3, line: 1885, type: !7201, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7203)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{!470, !483, !807}
!7203 = !{!7204, !7205, !7206, !7207}
!7204 = !DILocalVariable(name: "lhs", arg: 1, scope: !7200, file: !3, line: 1885, type: !483)
!7205 = !DILocalVariable(name: "stmt", arg: 2, scope: !7200, file: !3, line: 1885, type: !807)
!7206 = !DILocalVariable(name: "changed", scope: !7200, file: !3, line: 1887, type: !470)
!7207 = !DILocalVariable(name: "result", scope: !7200, file: !3, line: 1888, type: !483)
!7208 = !DILocation(line: 0, scope: !7200)
!7209 = !DILocation(line: 1888, column: 17, scope: !7200)
!7210 = !DILocation(line: 1890, column: 7, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 1890, column: 7)
!7212 = !DILocation(line: 1890, column: 7, scope: !7200)
!7213 = !DILocation(line: 1892, column: 17, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1891, column: 5)
!7215 = !DILocation(line: 1893, column: 5, scope: !7214)
!7216 = !DILocation(line: 1896, column: 17, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1895, column: 5)
!7218 = !DILocation(line: 1897, column: 7, scope: !7217)
!7219 = !DILocation(line: 0, scope: !7211)
!7220 = !DILocation(line: 1900, column: 3, scope: !7200)
!7221 = distinct !DISubprogram(name: "visit_binary_op", scope: !3, file: !3, line: 1907, type: !7201, scopeLine: 1908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7222)
!7222 = !{!7223, !7224, !7225, !7226}
!7223 = !DILocalVariable(name: "lhs", arg: 1, scope: !7221, file: !3, line: 1907, type: !483)
!7224 = !DILocalVariable(name: "stmt", arg: 2, scope: !7221, file: !3, line: 1907, type: !807)
!7225 = !DILocalVariable(name: "changed", scope: !7221, file: !3, line: 1909, type: !470)
!7226 = !DILocalVariable(name: "result", scope: !7221, file: !3, line: 1910, type: !483)
!7227 = !DILocation(line: 0, scope: !7221)
!7228 = !DILocation(line: 1910, column: 17, scope: !7221)
!7229 = !DILocation(line: 1912, column: 7, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 1912, column: 7)
!7231 = !DILocation(line: 1912, column: 7, scope: !7221)
!7232 = !DILocation(line: 1914, column: 17, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1913, column: 5)
!7234 = !DILocation(line: 1915, column: 5, scope: !7233)
!7235 = !DILocation(line: 1918, column: 17, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1917, column: 5)
!7237 = !DILocation(line: 1919, column: 7, scope: !7236)
!7238 = !DILocation(line: 0, scope: !7230)
!7239 = !DILocation(line: 1922, column: 3, scope: !7221)
!7240 = distinct !DISubprogram(name: "visit_reference_op_load", scope: !3, file: !3, line: 1975, type: !7111, scopeLine: 1976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7241)
!7241 = !{!7242, !7243, !7244, !7245, !7246, !7247, !7248, !7251}
!7242 = !DILocalVariable(name: "lhs", arg: 1, scope: !7240, file: !3, line: 1975, type: !483)
!7243 = !DILocalVariable(name: "op", arg: 2, scope: !7240, file: !3, line: 1975, type: !483)
!7244 = !DILocalVariable(name: "stmt", arg: 3, scope: !7240, file: !3, line: 1975, type: !807)
!7245 = !DILocalVariable(name: "changed", scope: !7240, file: !3, line: 1977, type: !470)
!7246 = !DILocalVariable(name: "last_vuse", scope: !7240, file: !3, line: 1978, type: !483)
!7247 = !DILocalVariable(name: "result", scope: !7240, file: !3, line: 1979, type: !483)
!7248 = !DILocalVariable(name: "val", scope: !7249, file: !3, line: 2002, type: !483)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 1997, column: 5)
!7250 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1995, column: 7)
!7251 = !DILocalVariable(name: "tem", scope: !7252, file: !3, line: 2007, type: !483)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 2006, column: 9)
!7253 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2003, column: 11)
!7254 = !DILocation(line: 0, scope: !7240)
!7255 = !DILocation(line: 1978, column: 3, scope: !7240)
!7256 = !DILocation(line: 1981, column: 15, scope: !7240)
!7257 = !DILocation(line: 1981, column: 13, scope: !7240)
!7258 = !DILocation(line: 1982, column: 17, scope: !7240)
!7259 = !DILocation(line: 1983, column: 37, scope: !7240)
!7260 = !DILocation(line: 1983, column: 12, scope: !7240)
!7261 = !DILocation(line: 1984, column: 17, scope: !7240)
!7262 = !DILocation(line: 1988, column: 8, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1988, column: 7)
!7264 = !DILocation(line: 1988, column: 15, scope: !7263)
!7265 = !DILocation(line: 1988, column: 18, scope: !7263)
!7266 = !DILocation(line: 1988, column: 33, scope: !7263)
!7267 = !DILocation(line: 1988, column: 7, scope: !7240)
!7268 = !DILocation(line: 1989, column: 35, scope: !7263)
!7269 = !DILocation(line: 1989, column: 57, scope: !7263)
!7270 = !DILocation(line: 1989, column: 14, scope: !7263)
!7271 = !DILocation(line: 1989, column: 5, scope: !7263)
!7272 = !DILocation(line: 1995, column: 7, scope: !7250)
!7273 = !DILocation(line: 1996, column: 7, scope: !7250)
!7274 = !DILocation(line: 1996, column: 38, scope: !7250)
!7275 = !DILocation(line: 1996, column: 58, scope: !7250)
!7276 = !DILocation(line: 1996, column: 11, scope: !7250)
!7277 = !DILocation(line: 1995, column: 7, scope: !7240)
!7278 = !DILocation(line: 2002, column: 18, scope: !7249)
!7279 = !DILocation(line: 0, scope: !7249)
!7280 = !DILocation(line: 2003, column: 12, scope: !7253)
!7281 = !DILocation(line: 2004, column: 5, scope: !7253)
!7282 = !DILocation(line: 2004, column: 24, scope: !7253)
!7283 = !DILocation(line: 2005, column: 4, scope: !7253)
!7284 = !DILocation(line: 2005, column: 7, scope: !7253)
!7285 = !DILocation(line: 2005, column: 41, scope: !7253)
!7286 = !DILocation(line: 2003, column: 11, scope: !7249)
!7287 = !DILocation(line: 2007, column: 30, scope: !7252)
!7288 = !DILocation(line: 2007, column: 15, scope: !7252)
!7289 = !DILocation(line: 0, scope: !7252)
!7290 = !DILocation(line: 2008, column: 9, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 2008, column: 8)
!7292 = !DILocation(line: 2009, column: 9, scope: !7291)
!7293 = !DILocation(line: 2009, column: 28, scope: !7291)
!7294 = !DILocation(line: 2010, column: 8, scope: !7291)
!7295 = !DILocation(line: 2010, column: 18, scope: !7291)
!7296 = !DILocation(line: 2010, column: 16, scope: !7291)
!7297 = !DILocation(line: 2008, column: 8, scope: !7252)
!7298 = !DILocation(line: 2015, column: 12, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2015, column: 11)
!7300 = !DILocation(line: 2016, column: 4, scope: !7299)
!7301 = !DILocation(line: 2016, column: 7, scope: !7299)
!7302 = !DILocation(line: 2016, column: 23, scope: !7299)
!7303 = !DILocation(line: 2015, column: 11, scope: !7249)
!7304 = !DILocation(line: 2017, column: 11, scope: !7299)
!7305 = !DILocation(line: 2017, column: 2, scope: !7299)
!7306 = !DILocation(line: 2020, column: 12, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2020, column: 11)
!7308 = !DILocation(line: 2020, column: 19, scope: !7307)
!7309 = !DILocation(line: 2020, column: 22, scope: !7307)
!7310 = !DILocation(line: 2020, column: 11, scope: !7249)
!7311 = !DILocation(line: 2022, column: 28, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 2021, column: 9)
!7313 = !DILocation(line: 2022, column: 13, scope: !7312)
!7314 = !DILocation(line: 2024, column: 4, scope: !7312)
!7315 = !DILocation(line: 2024, column: 26, scope: !7312)
!7316 = !DILocation(line: 2024, column: 33, scope: !7312)
!7317 = !DILocation(line: 2025, column: 33, scope: !7312)
!7318 = !DILocation(line: 2025, column: 4, scope: !7312)
!7319 = !DILocation(line: 2025, column: 22, scope: !7312)
!7320 = !DILocation(line: 2025, column: 31, scope: !7312)
!7321 = !DILocation(line: 2026, column: 4, scope: !7312)
!7322 = !DILocation(line: 2026, column: 22, scope: !7312)
!7323 = !DILocation(line: 2026, column: 27, scope: !7312)
!7324 = !DILocation(line: 2027, column: 38, scope: !7312)
!7325 = !DILocation(line: 2027, column: 4, scope: !7312)
!7326 = !DILocation(line: 2027, column: 22, scope: !7312)
!7327 = !DILocation(line: 2027, column: 36, scope: !7312)
!7328 = !DILocation(line: 2028, column: 4, scope: !7312)
!7329 = !DILocation(line: 2028, column: 22, scope: !7312)
!7330 = !DILocation(line: 2028, column: 38, scope: !7312)
!7331 = !DILocation(line: 2036, column: 8, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2036, column: 8)
!7333 = !DILocation(line: 2036, column: 24, scope: !7332)
!7334 = !DILocation(line: 2036, column: 21, scope: !7332)
!7335 = !DILocation(line: 2036, column: 8, scope: !7312)
!7336 = !DILocation(line: 2038, column: 23, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 2037, column: 6)
!7338 = !DILocation(line: 2038, column: 21, scope: !7337)
!7339 = !DILocation(line: 2039, column: 8, scope: !7337)
!7340 = !DILocation(line: 2040, column: 23, scope: !7337)
!7341 = !DILocation(line: 2040, column: 21, scope: !7337)
!7342 = !DILocation(line: 2041, column: 6, scope: !7337)
!7343 = !DILocation(line: 2043, column: 6, scope: !7332)
!7344 = !DILocation(line: 2044, column: 8, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2044, column: 8)
!7346 = !DILocation(line: 2044, column: 18, scope: !7345)
!7347 = !DILocation(line: 2044, column: 22, scope: !7345)
!7348 = !DILocation(line: 2044, column: 33, scope: !7345)
!7349 = !DILocation(line: 2044, column: 8, scope: !7312)
!7350 = !DILocation(line: 2046, column: 8, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 2045, column: 6)
!7352 = !DILocation(line: 2047, column: 28, scope: !7351)
!7353 = !DILocation(line: 2047, column: 8, scope: !7351)
!7354 = !DILocation(line: 2048, column: 17, scope: !7351)
!7355 = !DILocation(line: 2048, column: 8, scope: !7351)
!7356 = !DILocation(line: 2049, column: 28, scope: !7351)
!7357 = !DILocation(line: 2049, column: 8, scope: !7351)
!7358 = !DILocation(line: 2050, column: 17, scope: !7351)
!7359 = !DILocation(line: 2050, column: 8, scope: !7351)
!7360 = !DILocation(line: 2051, column: 6, scope: !7351)
!7361 = !DILocation(line: 2055, column: 7, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 2055, column: 7)
!7363 = !DILocation(line: 2055, column: 7, scope: !7240)
!7364 = !DILocation(line: 2057, column: 17, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2056, column: 5)
!7366 = !DILocation(line: 2058, column: 11, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 2058, column: 11)
!7368 = !DILocation(line: 2058, column: 30, scope: !7367)
!7369 = !DILocation(line: 2059, column: 4, scope: !7367)
!7370 = !DILocation(line: 2059, column: 7, scope: !7367)
!7371 = !DILocation(line: 2059, column: 25, scope: !7367)
!7372 = !DILocation(line: 2058, column: 11, scope: !7365)
!7373 = !DILocation(line: 2061, column: 26, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 2060, column: 2)
!7375 = !DILocation(line: 2061, column: 44, scope: !7374)
!7376 = !DILocation(line: 2061, column: 4, scope: !7374)
!7377 = !DILocation(line: 2061, column: 19, scope: !7374)
!7378 = !DILocation(line: 2061, column: 24, scope: !7374)
!7379 = !DILocation(line: 2062, column: 4, scope: !7374)
!7380 = !DILocation(line: 2062, column: 19, scope: !7374)
!7381 = !DILocation(line: 2062, column: 33, scope: !7374)
!7382 = !DILocation(line: 2063, column: 2, scope: !7374)
!7383 = !DILocation(line: 2067, column: 17, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2066, column: 5)
!7385 = !DILocation(line: 2068, column: 37, scope: !7384)
!7386 = !DILocation(line: 2068, column: 7, scope: !7384)
!7387 = !DILocation(line: 0, scope: !7362)
!7388 = !DILocation(line: 2072, column: 1, scope: !7240)
!7389 = !DILocation(line: 2071, column: 3, scope: !7240)
!7390 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !391, file: !391, line: 1878, type: !2661, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7391)
!7391 = !{!7392}
!7392 = !DILocalVariable(name: "gs", arg: 1, scope: !7390, file: !391, line: 1878, type: !2623)
!7393 = !DILocation(line: 0, scope: !7390)
!7394 = !DILocation(line: 1881, column: 10, scope: !7390)
!7395 = !DILocation(line: 1881, column: 3, scope: !7390)
!7396 = distinct !DISubprogram(name: "visit_reference_op_call", scope: !3, file: !3, line: 1929, type: !7201, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7397)
!7397 = !{!7398, !7399, !7400, !7401, !7402, !7403, !7404, !7407}
!7398 = !DILocalVariable(name: "lhs", arg: 1, scope: !7396, file: !3, line: 1929, type: !483)
!7399 = !DILocalVariable(name: "stmt", arg: 2, scope: !7396, file: !3, line: 1929, type: !807)
!7400 = !DILocalVariable(name: "changed", scope: !7396, file: !3, line: 1931, type: !470)
!7401 = !DILocalVariable(name: "vr1", scope: !7396, file: !3, line: 1932, type: !1854)
!7402 = !DILocalVariable(name: "result", scope: !7396, file: !3, line: 1933, type: !483)
!7403 = !DILocalVariable(name: "vuse", scope: !7396, file: !3, line: 1934, type: !483)
!7404 = !DILocalVariable(name: "slot", scope: !7405, file: !3, line: 1951, type: !1315)
!7405 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 1950, column: 5)
!7406 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 1942, column: 7)
!7407 = !DILocalVariable(name: "vr2", scope: !7405, file: !3, line: 1952, type: !1884)
!7408 = !DILocation(line: 0, scope: !7396)
!7409 = !DILocation(line: 1932, column: 3, scope: !7396)
!7410 = !DILocation(line: 1934, column: 15, scope: !7396)
!7411 = !DILocation(line: 1936, column: 14, scope: !7396)
!7412 = !DILocation(line: 1936, column: 21, scope: !7396)
!7413 = !DILocation(line: 1936, column: 7, scope: !7396)
!7414 = !DILocation(line: 1936, column: 12, scope: !7396)
!7415 = !DILocation(line: 1937, column: 18, scope: !7396)
!7416 = !DILocation(line: 1937, column: 7, scope: !7396)
!7417 = !DILocation(line: 1937, column: 16, scope: !7396)
!7418 = !DILocation(line: 1938, column: 14, scope: !7396)
!7419 = !DILocation(line: 1938, column: 7, scope: !7396)
!7420 = !DILocation(line: 1938, column: 12, scope: !7396)
!7421 = !DILocation(line: 1939, column: 7, scope: !7396)
!7422 = !DILocation(line: 1939, column: 11, scope: !7396)
!7423 = !DILocation(line: 1940, column: 18, scope: !7396)
!7424 = !DILocation(line: 1940, column: 7, scope: !7396)
!7425 = !DILocation(line: 1940, column: 16, scope: !7396)
!7426 = !DILocation(line: 1941, column: 12, scope: !7396)
!7427 = !DILocation(line: 1942, column: 7, scope: !7406)
!7428 = !DILocation(line: 1942, column: 7, scope: !7396)
!7429 = !DILocation(line: 1944, column: 17, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 1943, column: 5)
!7431 = !DILocation(line: 1945, column: 11, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 1945, column: 11)
!7433 = !DILocation(line: 1945, column: 30, scope: !7432)
!7434 = !DILocation(line: 1946, column: 4, scope: !7432)
!7435 = !DILocation(line: 1946, column: 7, scope: !7432)
!7436 = !DILocation(line: 1946, column: 25, scope: !7432)
!7437 = !DILocation(line: 1945, column: 11, scope: !7430)
!7438 = !DILocation(line: 1947, column: 2, scope: !7432)
!7439 = !DILocation(line: 1947, column: 17, scope: !7432)
!7440 = !DILocation(line: 1947, column: 31, scope: !7432)
!7441 = !DILocation(line: 1953, column: 17, scope: !7405)
!7442 = !DILocation(line: 1954, column: 42, scope: !7405)
!7443 = !DILocation(line: 1954, column: 56, scope: !7405)
!7444 = !DILocation(line: 1954, column: 30, scope: !7405)
!7445 = !DILocation(line: 0, scope: !7405)
!7446 = !DILocation(line: 1955, column: 23, scope: !7405)
!7447 = !DILocation(line: 1955, column: 12, scope: !7405)
!7448 = !DILocation(line: 1955, column: 17, scope: !7405)
!7449 = !DILocation(line: 1956, column: 38, scope: !7405)
!7450 = !DILocation(line: 1956, column: 23, scope: !7405)
!7451 = !DILocation(line: 1956, column: 12, scope: !7405)
!7452 = !DILocation(line: 1956, column: 21, scope: !7405)
!7453 = !DILocation(line: 1957, column: 23, scope: !7405)
!7454 = !DILocation(line: 1957, column: 12, scope: !7405)
!7455 = !DILocation(line: 1957, column: 17, scope: !7405)
!7456 = !DILocation(line: 1958, column: 22, scope: !7405)
!7457 = !DILocation(line: 1958, column: 12, scope: !7405)
!7458 = !DILocation(line: 1958, column: 16, scope: !7405)
!7459 = !DILocation(line: 1959, column: 27, scope: !7405)
!7460 = !DILocation(line: 1959, column: 12, scope: !7405)
!7461 = !DILocation(line: 1959, column: 21, scope: !7405)
!7462 = !DILocation(line: 1960, column: 12, scope: !7405)
!7463 = !DILocation(line: 1960, column: 19, scope: !7405)
!7464 = !DILocation(line: 1961, column: 40, scope: !7405)
!7465 = !DILocation(line: 1961, column: 54, scope: !7405)
!7466 = !DILocation(line: 1961, column: 14, scope: !7405)
!7467 = !DILocation(line: 1963, column: 11, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 1963, column: 11)
!7469 = !DILocation(line: 1963, column: 11, scope: !7405)
!7470 = !DILocation(line: 1964, column: 2, scope: !7468)
!7471 = !DILocation(line: 1965, column: 13, scope: !7405)
!7472 = !DILocation(line: 0, scope: !7406)
!7473 = !DILocation(line: 1969, column: 1, scope: !7396)
!7474 = !DILocation(line: 1968, column: 3, scope: !7396)
!7475 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !5115, file: !5115, line: 434, type: !7476, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7478)
!7476 = !DISubroutineType(types: !7477)
!7477 = !{!483, !1978}
!7478 = !{!7479}
!7479 = !DILocalVariable(name: "def", arg: 1, scope: !7475, file: !5115, line: 434, type: !1978)
!7480 = !DILocation(line: 0, scope: !7475)
!7481 = !DILocation(line: 436, column: 10, scope: !7475)
!7482 = !DILocation(line: 436, column: 3, scope: !7475)
!7483 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !391, file: !391, line: 3080, type: !5592, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7484)
!7484 = !{!7485}
!7485 = !DILocalVariable(name: "gs", arg: 1, scope: !7483, file: !391, line: 3080, type: !807)
!7486 = !DILocation(line: 0, scope: !7483)
!7487 = !DILocation(line: 3083, column: 26, scope: !7483)
!7488 = !DILocation(line: 3083, column: 3, scope: !7483)
!7489 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !5115, file: !5115, line: 442, type: !7490, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7492)
!7490 = !DISubroutineType(types: !7491)
!7491 = !{!1973, !807, !471}
!7492 = !{!7493, !7494}
!7493 = !DILocalVariable(name: "gs", arg: 1, scope: !7489, file: !5115, line: 442, type: !807)
!7494 = !DILocalVariable(name: "i", arg: 2, scope: !7489, file: !5115, line: 442, type: !471)
!7495 = !DILocation(line: 0, scope: !7489)
!7496 = !DILocation(line: 444, column: 11, scope: !7489)
!7497 = !DILocation(line: 444, column: 35, scope: !7489)
!7498 = !DILocation(line: 444, column: 3, scope: !7489)
!7499 = distinct !DISubprogram(name: "vn_phi_lookup", scope: !3, file: !3, line: 1715, type: !7022, scopeLine: 1716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7500)
!7500 = !{!7501, !7502, !7503, !7504, !7505}
!7501 = !DILocalVariable(name: "phi", arg: 1, scope: !7499, file: !3, line: 1715, type: !807)
!7502 = !DILocalVariable(name: "slot", scope: !7499, file: !3, line: 1717, type: !1315)
!7503 = !DILocalVariable(name: "vp1", scope: !7499, file: !3, line: 1718, type: !1959)
!7504 = !DILocalVariable(name: "i", scope: !7499, file: !3, line: 1719, type: !7)
!7505 = !DILocalVariable(name: "def", scope: !7506, file: !3, line: 1726, type: !483)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 1725, column: 5)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1724, column: 3)
!7508 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 1724, column: 3)
!7509 = !DILocation(line: 0, scope: !7499)
!7510 = !DILocation(line: 1718, column: 3, scope: !7499)
!7511 = !DILocation(line: 1721, column: 3, scope: !7499)
!7512 = !DILocation(line: 1724, column: 8, scope: !7508)
!7513 = !DILocation(line: 0, scope: !7508)
!7514 = !DILocation(line: 1724, column: 19, scope: !7507)
!7515 = !DILocation(line: 1724, column: 17, scope: !7507)
!7516 = !DILocation(line: 1724, column: 3, scope: !7508)
!7517 = !DILocation(line: 1726, column: 18, scope: !7506)
!7518 = !DILocation(line: 0, scope: !7506)
!7519 = !DILocation(line: 1727, column: 13, scope: !7506)
!7520 = !DILocation(line: 1727, column: 29, scope: !7506)
!7521 = !DILocation(line: 1727, column: 43, scope: !7506)
!7522 = !DILocation(line: 1728, column: 7, scope: !7506)
!7523 = !DILocation(line: 1724, column: 47, scope: !7507)
!7524 = !DILocation(line: 1724, column: 3, scope: !7507)
!7525 = distinct !{!7525, !7516, !7526}
!7526 = !DILocation(line: 1729, column: 5, scope: !7508)
!7527 = !DILocation(line: 1730, column: 17, scope: !7499)
!7528 = !DILocation(line: 1730, column: 7, scope: !7499)
!7529 = !DILocation(line: 1730, column: 15, scope: !7499)
!7530 = !DILocation(line: 1731, column: 15, scope: !7499)
!7531 = !DILocation(line: 1731, column: 7, scope: !7499)
!7532 = !DILocation(line: 1731, column: 13, scope: !7499)
!7533 = !DILocation(line: 1732, column: 18, scope: !7499)
!7534 = !DILocation(line: 1732, column: 7, scope: !7499)
!7535 = !DILocation(line: 1732, column: 16, scope: !7499)
!7536 = !DILocation(line: 1733, column: 36, scope: !7499)
!7537 = !DILocation(line: 1733, column: 50, scope: !7499)
!7538 = !DILocation(line: 1733, column: 10, scope: !7499)
!7539 = !DILocation(line: 1735, column: 8, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 1735, column: 7)
!7541 = !DILocation(line: 1735, column: 13, scope: !7540)
!7542 = !DILocation(line: 1735, column: 16, scope: !7540)
!7543 = !DILocation(line: 1735, column: 32, scope: !7540)
!7544 = !DILocation(line: 1735, column: 29, scope: !7540)
!7545 = !DILocation(line: 1735, column: 7, scope: !7499)
!7546 = !DILocation(line: 1736, column: 38, scope: !7540)
!7547 = !DILocation(line: 1736, column: 50, scope: !7540)
!7548 = !DILocation(line: 1736, column: 66, scope: !7540)
!7549 = !DILocation(line: 1736, column: 12, scope: !7540)
!7550 = !DILocation(line: 1736, column: 5, scope: !7540)
!7551 = !DILocation(line: 1738, column: 8, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 1738, column: 7)
!7553 = !DILocation(line: 1738, column: 7, scope: !7499)
!7554 = !DILocation(line: 1740, column: 21, scope: !7499)
!7555 = !DILocation(line: 1740, column: 29, scope: !7499)
!7556 = !DILocation(line: 1740, column: 3, scope: !7499)
!7557 = !DILocation(line: 1741, column: 1, scope: !7499)
!7558 = distinct !DISubprogram(name: "vn_phi_insert", scope: !3, file: !3, line: 1747, type: !7559, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7561)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{!1971, !807, !483}
!7561 = !{!7562, !7563, !7564, !7565, !7566, !7567, !7568}
!7562 = !DILocalVariable(name: "phi", arg: 1, scope: !7558, file: !3, line: 1747, type: !807)
!7563 = !DILocalVariable(name: "result", arg: 2, scope: !7558, file: !3, line: 1747, type: !483)
!7564 = !DILocalVariable(name: "slot", scope: !7558, file: !3, line: 1749, type: !1315)
!7565 = !DILocalVariable(name: "vp1", scope: !7558, file: !3, line: 1750, type: !1971)
!7566 = !DILocalVariable(name: "i", scope: !7558, file: !3, line: 1751, type: !7)
!7567 = !DILocalVariable(name: "args", scope: !7558, file: !3, line: 1752, type: !1964)
!7568 = !DILocalVariable(name: "def", scope: !7569, file: !3, line: 1757, type: !483)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 1756, column: 5)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 1755, column: 3)
!7571 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 1755, column: 3)
!7572 = !DILocation(line: 0, scope: !7558)
!7573 = !DILocation(line: 1750, column: 41, scope: !7558)
!7574 = !DILocation(line: 1750, column: 55, scope: !7558)
!7575 = !DILocation(line: 1750, column: 29, scope: !7558)
!7576 = !DILocation(line: 1752, column: 3, scope: !7558)
!7577 = !DILocation(line: 1752, column: 21, scope: !7558)
!7578 = !DILocation(line: 1755, column: 8, scope: !7571)
!7579 = !DILocation(line: 0, scope: !7571)
!7580 = !DILocation(line: 1755, column: 19, scope: !7570)
!7581 = !DILocation(line: 1755, column: 17, scope: !7570)
!7582 = !DILocation(line: 1755, column: 3, scope: !7571)
!7583 = !DILocation(line: 1757, column: 18, scope: !7569)
!7584 = !DILocation(line: 0, scope: !7569)
!7585 = !DILocation(line: 1758, column: 13, scope: !7569)
!7586 = !DILocation(line: 1758, column: 29, scope: !7569)
!7587 = !DILocation(line: 1758, column: 43, scope: !7569)
!7588 = !DILocation(line: 1759, column: 7, scope: !7569)
!7589 = !DILocation(line: 1755, column: 47, scope: !7570)
!7590 = !DILocation(line: 1755, column: 3, scope: !7570)
!7591 = distinct !{!7591, !7582, !7592}
!7592 = !DILocation(line: 1760, column: 5, scope: !7571)
!7593 = !DILocation(line: 1750, column: 18, scope: !7558)
!7594 = !DILocation(line: 1761, column: 19, scope: !7558)
!7595 = !DILocation(line: 1761, column: 37, scope: !7558)
!7596 = !DILocation(line: 1761, column: 8, scope: !7558)
!7597 = !DILocation(line: 1761, column: 17, scope: !7558)
!7598 = !DILocation(line: 1762, column: 18, scope: !7558)
!7599 = !DILocation(line: 1762, column: 8, scope: !7558)
!7600 = !DILocation(line: 1762, column: 16, scope: !7558)
!7601 = !DILocation(line: 1763, column: 16, scope: !7558)
!7602 = !DILocation(line: 1763, column: 8, scope: !7558)
!7603 = !DILocation(line: 1763, column: 14, scope: !7558)
!7604 = !DILocation(line: 1764, column: 8, scope: !7558)
!7605 = !DILocation(line: 1764, column: 15, scope: !7558)
!7606 = !DILocation(line: 1765, column: 19, scope: !7558)
!7607 = !DILocation(line: 1765, column: 8, scope: !7558)
!7608 = !DILocation(line: 1765, column: 17, scope: !7558)
!7609 = !DILocation(line: 1767, column: 36, scope: !7558)
!7610 = !DILocation(line: 1767, column: 50, scope: !7558)
!7611 = !DILocation(line: 1767, column: 10, scope: !7558)
!7612 = !DILocation(line: 1772, column: 9, scope: !7558)
!7613 = !DILocation(line: 1774, column: 1, scope: !7558)
!7614 = !DILocation(line: 1773, column: 3, scope: !7558)
!7615 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !391, file: !391, line: 3100, type: !7616, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7619)
!7616 = !DISubroutineType(types: !7617)
!7617 = !{!7618, !807, !7}
!7618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!7619 = !{!7620, !7621}
!7620 = !DILocalVariable(name: "gs", arg: 1, scope: !7615, file: !391, line: 3100, type: !807)
!7621 = !DILocalVariable(name: "index", arg: 2, scope: !7615, file: !391, line: 3100, type: !7)
!7622 = !DILocation(line: 0, scope: !7615)
!7623 = !DILocation(line: 3103, column: 3, scope: !7615)
!7624 = !DILocation(line: 3104, column: 12, scope: !7615)
!7625 = !DILocation(line: 3104, column: 3, scope: !7615)
!7626 = distinct !DISubprogram(name: "VEC_tree_base_truncate", scope: !135, file: !135, line: 182, type: !7627, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7629)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{null, !5939, !7}
!7629 = !{!7630, !7631}
!7630 = !DILocalVariable(name: "vec_", arg: 1, scope: !7626, file: !135, line: 182, type: !5939)
!7631 = !DILocalVariable(name: "size_", arg: 2, scope: !7626, file: !135, line: 182, type: !7)
!7632 = !DILocation(line: 0, scope: !7626)
!7633 = !DILocation(line: 182, column: 1, scope: !7626)
!7634 = !DILocation(line: 182, column: 1, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7626, file: !135, line: 182, column: 1)
!7636 = distinct !DISubprogram(name: "vn_phi_compute_hash", scope: !3, file: !3, line: 1636, type: !7637, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7639)
!7637 = !DISubroutineType(types: !7638)
!7638 = !{!1301, !1971}
!7639 = !{!7640, !7641, !7642, !7643, !7644}
!7640 = !DILocalVariable(name: "vp1", arg: 1, scope: !7636, file: !3, line: 1636, type: !1971)
!7641 = !DILocalVariable(name: "result", scope: !7636, file: !3, line: 1638, type: !1301)
!7642 = !DILocalVariable(name: "i", scope: !7636, file: !3, line: 1639, type: !471)
!7643 = !DILocalVariable(name: "phi1op", scope: !7636, file: !3, line: 1640, type: !483)
!7644 = !DILocalVariable(name: "type", scope: !7636, file: !3, line: 1641, type: !483)
!7645 = !DILocation(line: 0, scope: !7636)
!7646 = !DILocation(line: 1640, column: 3, scope: !7636)
!7647 = !DILocation(line: 1643, column: 17, scope: !7636)
!7648 = !DILocation(line: 1643, column: 24, scope: !7636)
!7649 = !DILocation(line: 1647, column: 10, scope: !7636)
!7650 = !DILocation(line: 1648, column: 14, scope: !7636)
!7651 = !DILocation(line: 1649, column: 10, scope: !7636)
!7652 = !DILocation(line: 1650, column: 5, scope: !7636)
!7653 = !DILocation(line: 1650, column: 29, scope: !7636)
!7654 = !DILocation(line: 1650, column: 27, scope: !7636)
!7655 = !DILocation(line: 1649, column: 7, scope: !7636)
!7656 = !DILocation(line: 1648, column: 10, scope: !7636)
!7657 = !DILocation(line: 1652, column: 8, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 1652, column: 3)
!7659 = !DILocation(line: 0, scope: !7658)
!7660 = !DILocation(line: 1652, column: 15, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 1652, column: 3)
!7662 = !DILocation(line: 1652, column: 3, scope: !7658)
!7663 = !DILocation(line: 1654, column: 11, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 1654, column: 11)
!7665 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 1653, column: 5)
!7666 = !DILocation(line: 1654, column: 21, scope: !7664)
!7667 = !DILocation(line: 1654, column: 18, scope: !7664)
!7668 = !DILocation(line: 1654, column: 11, scope: !7665)
!7669 = !DILocation(line: 1656, column: 16, scope: !7665)
!7670 = !DILocation(line: 1657, column: 5, scope: !7665)
!7671 = !DILocation(line: 1652, column: 61, scope: !7661)
!7672 = !DILocation(line: 1652, column: 3, scope: !7661)
!7673 = distinct !{!7673, !7662, !7674}
!7674 = !DILocation(line: 1657, column: 5, scope: !7658)
!7675 = !DILocation(line: 1660, column: 1, scope: !7636)
!7676 = !DILocation(line: 1659, column: 3, scope: !7636)
!7677 = distinct !DISubprogram(name: "op_iter_init_def", scope: !5115, file: !5115, line: 780, type: !7678, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7680)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!1978, !5807, !807, !471}
!7680 = !{!7681, !7682, !7683}
!7681 = !DILocalVariable(name: "ptr", arg: 1, scope: !7677, file: !5115, line: 780, type: !5807)
!7682 = !DILocalVariable(name: "stmt", arg: 2, scope: !7677, file: !5115, line: 780, type: !807)
!7683 = !DILocalVariable(name: "flags", arg: 3, scope: !7677, file: !5115, line: 780, type: !471)
!7684 = !DILocation(line: 0, scope: !7677)
!7685 = !DILocation(line: 784, column: 3, scope: !7677)
!7686 = !DILocation(line: 785, column: 8, scope: !7677)
!7687 = !DILocation(line: 785, column: 18, scope: !7677)
!7688 = !DILocation(line: 786, column: 10, scope: !7677)
!7689 = !DILocation(line: 786, column: 3, scope: !7677)
!7690 = distinct !DISubprogram(name: "op_iter_next_def", scope: !5115, file: !5115, line: 681, type: !7691, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7693)
!7691 = !DISubroutineType(types: !7692)
!7692 = !{!1978, !5807}
!7693 = !{!7694, !7695}
!7694 = !DILocalVariable(name: "ptr", arg: 1, scope: !7690, file: !5115, line: 681, type: !5807)
!7695 = !DILocalVariable(name: "def_p", scope: !7690, file: !5115, line: 683, type: !1978)
!7696 = !DILocation(line: 0, scope: !7690)
!7697 = !DILocation(line: 687, column: 12, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7690, file: !5115, line: 687, column: 7)
!7699 = !DILocation(line: 687, column: 7, scope: !7698)
!7700 = !DILocation(line: 687, column: 7, scope: !7690)
!7701 = !DILocation(line: 689, column: 15, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !5115, line: 688, column: 5)
!7703 = !DILocation(line: 690, column: 30, scope: !7702)
!7704 = !DILocation(line: 690, column: 17, scope: !7702)
!7705 = !DILocation(line: 691, column: 7, scope: !7702)
!7706 = !DILocation(line: 693, column: 8, scope: !7690)
!7707 = !DILocation(line: 693, column: 13, scope: !7690)
!7708 = !DILocation(line: 694, column: 3, scope: !7690)
!7709 = !DILocation(line: 695, column: 1, scope: !7690)
!7710 = distinct !DISubprogram(name: "simplify_unary_expression", scope: !3, file: !3, line: 2378, type: !7022, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7711)
!7711 = !{!7712, !7713, !7714, !7715, !7716}
!7712 = !DILocalVariable(name: "stmt", arg: 1, scope: !7710, file: !3, line: 2378, type: !807)
!7713 = !DILocalVariable(name: "result", scope: !7710, file: !3, line: 2380, type: !483)
!7714 = !DILocalVariable(name: "orig_op0", scope: !7710, file: !3, line: 2381, type: !483)
!7715 = !DILocalVariable(name: "op0", scope: !7710, file: !3, line: 2381, type: !483)
!7716 = !DILocalVariable(name: "tem", scope: !7717, file: !3, line: 2403, type: !483)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 2400, column: 5)
!7718 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 2396, column: 12)
!7719 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2394, column: 7)
!7720 = !DILocation(line: 0, scope: !7710)
!7721 = !DILocation(line: 2381, column: 24, scope: !7710)
!7722 = !DILocation(line: 2385, column: 7, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2385, column: 7)
!7724 = !DILocation(line: 2385, column: 37, scope: !7723)
!7725 = !DILocation(line: 2386, column: 7, scope: !7723)
!7726 = !DILocation(line: 2386, column: 10, scope: !7723)
!7727 = !DILocation(line: 2386, column: 40, scope: !7723)
!7728 = !DILocation(line: 2387, column: 7, scope: !7723)
!7729 = !DILocation(line: 2387, column: 10, scope: !7723)
!7730 = !DILocation(line: 2387, column: 40, scope: !7723)
!7731 = !DILocation(line: 2385, column: 7, scope: !7710)
!7732 = !DILocation(line: 2388, column: 11, scope: !7723)
!7733 = !DILocation(line: 2388, column: 5, scope: !7723)
!7734 = !DILocation(line: 2390, column: 7, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2390, column: 7)
!7736 = !DILocation(line: 2390, column: 23, scope: !7735)
!7737 = !DILocation(line: 2390, column: 7, scope: !7710)
!7738 = !DILocation(line: 2394, column: 7, scope: !7719)
!7739 = !DILocation(line: 2394, column: 22, scope: !7719)
!7740 = !DILocation(line: 2394, column: 7, scope: !7710)
!7741 = !DILocation(line: 2395, column: 26, scope: !7719)
!7742 = !DILocation(line: 2395, column: 11, scope: !7719)
!7743 = !DILocation(line: 2395, column: 5, scope: !7719)
!7744 = !DILocation(line: 2396, column: 12, scope: !7718)
!7745 = !DILocation(line: 2397, column: 5, scope: !7718)
!7746 = !DILocation(line: 2397, column: 8, scope: !7718)
!7747 = !DILocation(line: 2397, column: 38, scope: !7718)
!7748 = !DILocation(line: 2398, column: 5, scope: !7718)
!7749 = !DILocation(line: 2398, column: 8, scope: !7718)
!7750 = !DILocation(line: 2398, column: 38, scope: !7718)
!7751 = !DILocation(line: 2399, column: 5, scope: !7718)
!7752 = !DILocation(line: 2399, column: 8, scope: !7718)
!7753 = !DILocation(line: 2399, column: 38, scope: !7718)
!7754 = !DILocation(line: 2396, column: 12, scope: !7719)
!7755 = !DILocation(line: 2403, column: 33, scope: !7717)
!7756 = !DILocation(line: 2403, column: 18, scope: !7717)
!7757 = !DILocation(line: 0, scope: !7717)
!7758 = !DILocation(line: 2404, column: 11, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 2404, column: 11)
!7760 = !DILocation(line: 2405, column: 4, scope: !7759)
!7761 = !DILocation(line: 2405, column: 7, scope: !7759)
!7762 = !DILocation(line: 2406, column: 4, scope: !7759)
!7763 = !DILocation(line: 2406, column: 23, scope: !7759)
!7764 = !DILocation(line: 2407, column: 4, scope: !7759)
!7765 = !DILocation(line: 2407, column: 23, scope: !7759)
!7766 = !DILocation(line: 2408, column: 4, scope: !7759)
!7767 = !DILocation(line: 2408, column: 7, scope: !7759)
!7768 = !DILocation(line: 2404, column: 11, scope: !7717)
!7769 = !DILocation(line: 2409, column: 2, scope: !7759)
!7770 = !DILocation(line: 0, scope: !7719)
!7771 = !DILocation(line: 2413, column: 11, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2413, column: 7)
!7773 = !DILocation(line: 2413, column: 7, scope: !7710)
!7774 = !DILocation(line: 2416, column: 12, scope: !7710)
!7775 = !DILocation(line: 2418, column: 7, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2418, column: 7)
!7777 = !DILocation(line: 2418, column: 7, scope: !7710)
!7778 = !DILocation(line: 2420, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 2419, column: 5)
!7780 = !DILocation(line: 2421, column: 11, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2421, column: 11)
!7782 = !DILocation(line: 2421, column: 11, scope: !7779)
!7783 = !DILocation(line: 2425, column: 3, scope: !7710)
!7784 = !DILocation(line: 2426, column: 1, scope: !7710)
!7785 = distinct !DISubprogram(name: "simplify_binary_expression", scope: !3, file: !3, line: 2322, type: !7022, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7786)
!7786 = !{!7787, !7788, !7789, !7790}
!7787 = !DILocalVariable(name: "stmt", arg: 1, scope: !7785, file: !3, line: 2322, type: !807)
!7788 = !DILocalVariable(name: "result", scope: !7785, file: !3, line: 2324, type: !483)
!7789 = !DILocalVariable(name: "op0", scope: !7785, file: !3, line: 2325, type: !483)
!7790 = !DILocalVariable(name: "op1", scope: !7785, file: !3, line: 2326, type: !483)
!7791 = !DILocation(line: 0, scope: !7785)
!7792 = !DILocation(line: 2325, column: 14, scope: !7785)
!7793 = !DILocation(line: 2326, column: 14, scope: !7785)
!7794 = !DILocation(line: 2332, column: 7, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2332, column: 7)
!7796 = !DILocation(line: 2332, column: 23, scope: !7795)
!7797 = !DILocation(line: 2332, column: 7, scope: !7785)
!7798 = !DILocation(line: 2334, column: 11, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 2334, column: 11)
!7800 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2333, column: 5)
!7801 = !DILocation(line: 2334, column: 26, scope: !7799)
!7802 = !DILocation(line: 2335, column: 4, scope: !7799)
!7803 = !DILocation(line: 2335, column: 7, scope: !7799)
!7804 = !DILocation(line: 2335, column: 55, scope: !7799)
!7805 = !DILocation(line: 2334, column: 11, scope: !7800)
!7806 = !DILocation(line: 2336, column: 23, scope: !7799)
!7807 = !DILocation(line: 2336, column: 8, scope: !7799)
!7808 = !DILocation(line: 2336, column: 2, scope: !7799)
!7809 = !DILocation(line: 2337, column: 16, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 2337, column: 16)
!7811 = !DILocation(line: 2337, column: 33, scope: !7810)
!7812 = !DILocation(line: 2337, column: 30, scope: !7810)
!7813 = !DILocation(line: 2337, column: 40, scope: !7810)
!7814 = !DILocation(line: 2337, column: 43, scope: !7810)
!7815 = !DILocation(line: 2337, column: 57, scope: !7810)
!7816 = !DILocation(line: 2337, column: 16, scope: !7799)
!7817 = !DILocation(line: 2338, column: 8, scope: !7810)
!7818 = !DILocation(line: 2338, column: 2, scope: !7810)
!7819 = !DILocation(line: 2341, column: 7, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2341, column: 7)
!7821 = !DILocation(line: 2341, column: 23, scope: !7820)
!7822 = !DILocation(line: 2341, column: 7, scope: !7785)
!7823 = !DILocation(line: 2343, column: 11, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 2343, column: 11)
!7825 = distinct !DILexicalBlock(scope: !7820, file: !3, line: 2342, column: 5)
!7826 = !DILocation(line: 2343, column: 26, scope: !7824)
!7827 = !DILocation(line: 2343, column: 11, scope: !7825)
!7828 = !DILocation(line: 2344, column: 23, scope: !7824)
!7829 = !DILocation(line: 2344, column: 8, scope: !7824)
!7830 = !DILocation(line: 2344, column: 2, scope: !7824)
!7831 = !DILocation(line: 2345, column: 16, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 2345, column: 16)
!7833 = !DILocation(line: 2345, column: 33, scope: !7832)
!7834 = !DILocation(line: 2345, column: 30, scope: !7832)
!7835 = !DILocation(line: 2345, column: 40, scope: !7832)
!7836 = !DILocation(line: 2345, column: 43, scope: !7832)
!7837 = !DILocation(line: 2345, column: 57, scope: !7832)
!7838 = !DILocation(line: 2345, column: 16, scope: !7824)
!7839 = !DILocation(line: 2346, column: 8, scope: !7832)
!7840 = !DILocation(line: 2346, column: 2, scope: !7832)
!7841 = !DILocation(line: 2350, column: 14, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2350, column: 7)
!7843 = !DILocation(line: 2350, column: 11, scope: !7842)
!7844 = !DILocation(line: 2351, column: 7, scope: !7842)
!7845 = !DILocation(line: 2351, column: 17, scope: !7842)
!7846 = !DILocation(line: 2351, column: 14, scope: !7842)
!7847 = !DILocation(line: 2350, column: 7, scope: !7785)
!7848 = !DILocation(line: 2354, column: 3, scope: !7785)
!7849 = !DILocation(line: 2356, column: 12, scope: !7785)
!7850 = !DILocation(line: 2358, column: 7, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2358, column: 7)
!7852 = !DILocation(line: 2358, column: 7, scope: !7785)
!7853 = !DILocation(line: 2359, column: 5, scope: !7851)
!7854 = !DILocation(line: 2361, column: 35, scope: !7785)
!7855 = !DILocation(line: 2361, column: 42, scope: !7785)
!7856 = !DILocation(line: 2361, column: 45, scope: !7785)
!7857 = !DILocation(line: 2361, column: 3, scope: !7785)
!7858 = !DILocation(line: 2368, column: 14, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2368, column: 7)
!7860 = !DILocation(line: 2368, column: 17, scope: !7859)
!7861 = !DILocation(line: 2368, column: 7, scope: !7785)
!7862 = !DILocation(line: 2371, column: 3, scope: !7785)
!7863 = !DILocation(line: 2372, column: 1, scope: !7785)
!7864 = distinct !DISubprogram(name: "valueize_expr", scope: !3, file: !3, line: 2295, type: !2547, scopeLine: 2296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7865)
!7865 = !{!7866}
!7866 = !DILocalVariable(name: "expr", arg: 1, scope: !7864, file: !3, line: 2295, type: !483)
!7867 = !DILocation(line: 0, scope: !7864)
!7868 = !DILocation(line: 2297, column: 11, scope: !7864)
!7869 = !DILocation(line: 2297, column: 3, scope: !7864)
!7870 = !DILocation(line: 2300, column: 11, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 2300, column: 11)
!7872 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 2298, column: 5)
!7873 = !DILocation(line: 2300, column: 46, scope: !7871)
!7874 = !DILocation(line: 2301, column: 4, scope: !7871)
!7875 = !DILocation(line: 2301, column: 7, scope: !7871)
!7876 = !DILocation(line: 2301, column: 43, scope: !7871)
!7877 = !DILocation(line: 2301, column: 40, scope: !7871)
!7878 = !DILocation(line: 2300, column: 11, scope: !7872)
!7879 = !DILocation(line: 2302, column: 27, scope: !7871)
!7880 = !DILocation(line: 2302, column: 25, scope: !7871)
!7881 = !DILocation(line: 2302, column: 2, scope: !7871)
!7882 = !DILocation(line: 2305, column: 11, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 2305, column: 11)
!7884 = !DILocation(line: 2305, column: 46, scope: !7883)
!7885 = !DILocation(line: 2306, column: 4, scope: !7883)
!7886 = !DILocation(line: 2306, column: 7, scope: !7883)
!7887 = !DILocation(line: 2306, column: 43, scope: !7883)
!7888 = !DILocation(line: 2306, column: 40, scope: !7883)
!7889 = !DILocation(line: 2305, column: 11, scope: !7872)
!7890 = !DILocation(line: 2307, column: 27, scope: !7883)
!7891 = !DILocation(line: 2307, column: 25, scope: !7883)
!7892 = !DILocation(line: 2307, column: 2, scope: !7883)
!7893 = !DILocation(line: 2308, column: 11, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 2308, column: 11)
!7895 = !DILocation(line: 2308, column: 46, scope: !7894)
!7896 = !DILocation(line: 2309, column: 4, scope: !7894)
!7897 = !DILocation(line: 2309, column: 7, scope: !7894)
!7898 = !DILocation(line: 2309, column: 43, scope: !7894)
!7899 = !DILocation(line: 2309, column: 40, scope: !7894)
!7900 = !DILocation(line: 2308, column: 11, scope: !7872)
!7901 = !DILocation(line: 2310, column: 27, scope: !7894)
!7902 = !DILocation(line: 2310, column: 25, scope: !7894)
!7903 = !DILocation(line: 2310, column: 2, scope: !7894)
!7904 = !DILocation(line: 2315, column: 3, scope: !7864)
!7905 = distinct !DISubprogram(name: "gimple_assign_cast_p", scope: !391, file: !391, line: 1853, type: !6830, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7906)
!7906 = !{!7907, !7908}
!7907 = !DILocalVariable(name: "s", arg: 1, scope: !7905, file: !391, line: 1853, type: !807)
!7908 = !DILocalVariable(name: "sc", scope: !7909, file: !391, line: 1857, type: !134)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !391, line: 1856, column: 5)
!7910 = distinct !DILexicalBlock(scope: !7905, file: !391, line: 1855, column: 7)
!7911 = !DILocation(line: 0, scope: !7905)
!7912 = !DILocation(line: 1855, column: 7, scope: !7910)
!7913 = !DILocation(line: 1855, column: 7, scope: !7905)
!7914 = !DILocation(line: 1857, column: 27, scope: !7909)
!7915 = !DILocation(line: 0, scope: !7909)
!7916 = !DILocation(line: 1858, column: 14, scope: !7909)
!7917 = !DILocation(line: 1860, column: 7, scope: !7909)
!7918 = !DILocation(line: 1864, column: 1, scope: !7905)
!7919 = distinct !DISubprogram(name: "make_ssa_name", scope: !5115, file: !5115, line: 1245, type: !7920, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7922)
!7920 = !DISubroutineType(types: !7921)
!7921 = !{!483, !483, !807}
!7922 = !{!7923, !7924}
!7923 = !DILocalVariable(name: "var", arg: 1, scope: !7919, file: !5115, line: 1245, type: !483)
!7924 = !DILocalVariable(name: "stmt", arg: 2, scope: !7919, file: !5115, line: 1245, type: !807)
!7925 = !DILocation(line: 0, scope: !7919)
!7926 = !DILocation(line: 1247, column: 28, scope: !7919)
!7927 = !DILocation(line: 1247, column: 10, scope: !7919)
!7928 = !DILocation(line: 1247, column: 3, scope: !7919)
!7929 = distinct !DISubprogram(name: "valueize_shared_reference_ops_from_call", scope: !3, file: !3, line: 953, type: !7930, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!1862, !807}
!7932 = !{!7933}
!7933 = !DILocalVariable(name: "call", arg: 1, scope: !7929, file: !3, line: 953, type: !807)
!7934 = !DILocation(line: 0, scope: !7929)
!7935 = !DILocation(line: 955, column: 8, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 955, column: 7)
!7937 = !DILocation(line: 955, column: 7, scope: !7929)
!7938 = !DILocation(line: 957, column: 3, scope: !7929)
!7939 = !DILocation(line: 958, column: 3, scope: !7929)
!7940 = !DILocation(line: 959, column: 45, scope: !7929)
!7941 = !DILocation(line: 959, column: 30, scope: !7929)
!7942 = !DILocation(line: 959, column: 28, scope: !7929)
!7943 = !DILocation(line: 960, column: 3, scope: !7929)
!7944 = !DILocation(line: 961, column: 1, scope: !7929)
!7945 = distinct !DISubprogram(name: "create_reference_ops_from_call", scope: !3, file: !3, line: 820, type: !7930, scopeLine: 821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7946)
!7946 = !{!7947, !7948}
!7947 = !DILocalVariable(name: "call", arg: 1, scope: !7945, file: !3, line: 820, type: !807)
!7948 = !DILocalVariable(name: "result", scope: !7945, file: !3, line: 822, type: !1862)
!7949 = !DILocation(line: 0, scope: !7945)
!7950 = !DILocation(line: 822, column: 3, scope: !7945)
!7951 = !DILocation(line: 822, column: 34, scope: !7945)
!7952 = !DILocation(line: 824, column: 3, scope: !7945)
!7953 = !DILocation(line: 825, column: 10, scope: !7945)
!7954 = !DILocation(line: 826, column: 1, scope: !7945)
!7955 = !DILocation(line: 825, column: 3, scope: !7945)
!7956 = distinct !DISubprogram(name: "VEC_ssa_op_iter_heap_reserve", scope: !3, file: !3, line: 2876, type: !7957, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7959)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{!471, !5929, !471}
!7959 = !{!7960, !7961, !7962}
!7960 = !DILocalVariable(name: "vec_", arg: 1, scope: !7956, file: !3, line: 2876, type: !5929)
!7961 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7956, file: !3, line: 2876, type: !471)
!7962 = !DILocalVariable(name: "extend", scope: !7956, file: !3, line: 2876, type: !471)
!7963 = !DILocation(line: 0, scope: !7956)
!7964 = !DILocation(line: 2876, column: 1, scope: !7956)
!7965 = !DILocation(line: 2876, column: 1, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 2876, column: 1)
!7967 = distinct !DISubprogram(name: "VEC_ssa_op_iter_base_quick_push", scope: !3, file: !3, line: 2875, type: !7968, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7970)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!5807, !5948, !5869}
!7970 = !{!7971, !7972, !7973}
!7971 = !DILocalVariable(name: "vec_", arg: 1, scope: !7967, file: !3, line: 2875, type: !5948)
!7972 = !DILocalVariable(name: "obj_", arg: 2, scope: !7967, file: !3, line: 2875, type: !5869)
!7973 = !DILocalVariable(name: "slot_", scope: !7967, file: !3, line: 2875, type: !5807)
!7974 = !DILocation(line: 0, scope: !7967)
!7975 = !DILocation(line: 2875, column: 1, scope: !7967)
!7976 = !DILocation(line: 2875, column: 1, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 2875, column: 1)
!7978 = distinct !DISubprogram(name: "VEC_ssa_op_iter_base_space", scope: !3, file: !3, line: 2875, type: !7979, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7981)
!7979 = !DISubroutineType(types: !7980)
!7980 = !{!471, !5948, !471}
!7981 = !{!7982, !7983}
!7982 = !DILocalVariable(name: "vec_", arg: 1, scope: !7978, file: !3, line: 2875, type: !5948)
!7983 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7978, file: !3, line: 2875, type: !471)
!7984 = !DILocation(line: 0, scope: !7978)
!7985 = !DILocation(line: 2875, column: 1, scope: !7978)
!7986 = distinct !DISubprogram(name: "first_htab_element", scope: !5115, file: !5115, line: 58, type: !7987, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7990)
!7987 = !DISubroutineType(types: !7988)
!7988 = !{!475, !7989, !1291}
!7989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!7990 = !{!7991, !7992, !7993}
!7991 = !DILocalVariable(name: "hti", arg: 1, scope: !7986, file: !5115, line: 58, type: !7989)
!7992 = !DILocalVariable(name: "table", arg: 2, scope: !7986, file: !5115, line: 58, type: !1291)
!7993 = !DILocalVariable(name: "x", scope: !7994, file: !5115, line: 65, type: !475)
!7994 = distinct !DILexicalBlock(scope: !7986, file: !5115, line: 64, column: 5)
!7995 = !DILocation(line: 0, scope: !7986)
!7996 = !DILocation(line: 60, column: 8, scope: !7986)
!7997 = !DILocation(line: 60, column: 13, scope: !7986)
!7998 = !DILocation(line: 61, column: 22, scope: !7986)
!7999 = !DILocation(line: 61, column: 8, scope: !7986)
!8000 = !DILocation(line: 61, column: 13, scope: !7986)
!8001 = !DILocation(line: 62, column: 21, scope: !7986)
!8002 = !DILocation(line: 62, column: 28, scope: !7986)
!8003 = !DILocation(line: 62, column: 26, scope: !7986)
!8004 = !DILocation(line: 62, column: 8, scope: !7986)
!8005 = !DILocation(line: 62, column: 14, scope: !7986)
!8006 = !DILocation(line: 65, column: 22, scope: !7994)
!8007 = !DILocation(line: 63, column: 3, scope: !7986)
!8008 = !DILocation(line: 65, column: 15, scope: !7994)
!8009 = !DILocation(line: 66, column: 33, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7994, file: !5115, line: 66, column: 11)
!8011 = !DILocation(line: 68, column: 14, scope: !7986)
!8012 = !DILocation(line: 68, column: 28, scope: !7986)
!8013 = !DILocation(line: 68, column: 5, scope: !7994)
!8014 = distinct !{!8014, !8007, !8015}
!8015 = !DILocation(line: 68, column: 40, scope: !7986)
!8016 = !DILocation(line: 70, column: 12, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7986, file: !5115, line: 70, column: 7)
!8018 = !DILocation(line: 70, column: 17, scope: !8017)
!8019 = !DILocation(line: 70, column: 7, scope: !7986)
!8020 = !DILocation(line: 71, column: 12, scope: !8017)
!8021 = !DILocation(line: 71, column: 5, scope: !8017)
!8022 = !DILocation(line: 73, column: 1, scope: !7986)
!8023 = distinct !DISubprogram(name: "end_htab_p", scope: !5115, file: !5115, line: 79, type: !8024, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8028)
!8024 = !DISubroutineType(types: !8025)
!8025 = !{!470, !8026}
!8026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8027, size: 64)
!8027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5266)
!8028 = !{!8029}
!8029 = !DILocalVariable(name: "hti", arg: 1, scope: !8023, file: !5115, line: 79, type: !8026)
!8030 = !DILocation(line: 0, scope: !8023)
!8031 = !DILocation(line: 81, column: 12, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8023, file: !5115, line: 81, column: 7)
!8033 = !DILocation(line: 81, column: 25, scope: !8032)
!8034 = !DILocation(line: 81, column: 17, scope: !8032)
!8035 = !DILocation(line: 84, column: 1, scope: !8023)
!8036 = distinct !DISubprogram(name: "next_htab_element", scope: !5115, file: !5115, line: 90, type: !8037, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8039)
!8037 = !DISubroutineType(types: !8038)
!8038 = !{!475, !7989}
!8039 = !{!8040, !8041}
!8040 = !DILocalVariable(name: "hti", arg: 1, scope: !8036, file: !5115, line: 90, type: !7989)
!8041 = !DILocalVariable(name: "x", scope: !8042, file: !5115, line: 94, type: !475)
!8042 = distinct !DILexicalBlock(scope: !8036, file: !5115, line: 93, column: 5)
!8043 = !DILocation(line: 0, scope: !8036)
!8044 = !DILocation(line: 94, column: 22, scope: !8042)
!8045 = !DILocation(line: 92, column: 10, scope: !8036)
!8046 = !DILocation(line: 92, column: 31, scope: !8036)
!8047 = !DILocation(line: 92, column: 3, scope: !8036)
!8048 = !DILocation(line: 92, column: 24, scope: !8036)
!8049 = !DILocation(line: 94, column: 15, scope: !8042)
!8050 = !DILocation(line: 0, scope: !8042)
!8051 = !DILocation(line: 95, column: 33, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8042, file: !5115, line: 95, column: 11)
!8053 = distinct !{!8053, !8047, !8054}
!8054 = !DILocation(line: 97, column: 5, scope: !8036)
!8055 = !DILocation(line: 99, column: 1, scope: !8036)
