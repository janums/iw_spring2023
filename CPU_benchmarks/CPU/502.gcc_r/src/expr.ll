; ModuleID = 'expr.bc'
source_filename = "expr.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.insn_data = type { i8*, %union.anon.0, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%union.anon.0 = type { i8* }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.convert_optab_d = type { i32, i8*, void (%struct.convert_optab_d*, i8*, i32, i32)*, [87 x [87 x %struct.optab_handlers]] }
%struct.optab_handlers = type { i32 }
%struct.processor_costs = type { i32, i32, i32, i32, [5 x i32], i32, [5 x i32], i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [3 x i32], [3 x i32], i32, [2 x i32], [2 x i32], i32, [3 x i32], [3 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x %struct.stringop_algs], [2 x %struct.stringop_algs], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.stringop_algs = type { i32, [4 x %struct.stringop_strategy] }
%struct.stringop_strategy = type { i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.ssaexpand = type { %struct._var_map*, %struct.bitmap_head_def*, %struct.rtx_def**, %struct.bitmap_head_def* }
%struct._var_map = type { %struct.partition_def*, i32*, i32*, i32, i32, i32, i32*, %struct.VEC_tree_heap* }
%struct.partition_def = type { i32, [1 x %struct.partition_elem] }
%struct.partition_elem = type { i32, %struct.partition_elem*, i32 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.move_by_pieces_d = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i64, i64, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.store_by_pieces_d = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i64, i64, %struct.rtx_def* (i8*, i64, i32)*, i8*, i32 }
%struct.tree_complex = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.real_value = type { i32, [3 x i64] }
%struct.double_int = type { i64, i64 }
%struct.tree_field_decl = type { %struct.tree_decl_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_vector = type { %struct.tree_common, %union.tree_node* }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.separate_ops = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.mem_address = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_stmt_iterator = type { %struct.tree_statement_list_node*, %union.tree_node* }
%struct.tree_statement_list_node = type { %struct.tree_statement_list_node*, %struct.tree_statement_list_node*, %union.tree_node* }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@direct_store = internal unnamed_addr global [87 x i8] zeroinitializer, align 16, !dbg !0
@direct_load = internal unnamed_addr global [87 x i8] zeroinitializer, align 16, !dbg !3630
@class_narrowest_mode = external dso_local local_unnamed_addr constant [18 x i8], align 16
@insn_data = external dso_local local_unnamed_addr constant [0 x %struct.insn_data], align 8
@float_extend_from_mem = internal unnamed_addr global [87 x [87 x i8]] zeroinitializer, align 16, !dbg !3635
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@x_rtl = external dso_local global %struct.rtl_data, align 8
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str = private unnamed_addr constant [7 x i8] c"expr.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@rtl_hooks = external dso_local local_unnamed_addr global %struct.rtl_hooks, align 8
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@mode_precision = external dso_local local_unnamed_addr constant [87 x i16], align 16
@convert_optab_table = external dso_local global [17 x %struct.convert_optab_d], align 16
@optimize = external dso_local local_unnamed_addr global i32, align 4
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@ix86_cost = external dso_local local_unnamed_addr global %struct.processor_costs*, align 8
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@optab_table = external dso_local global [159 x %struct.optab_d], align 16
@ptr_mode = external dso_local local_unnamed_addr global i32, align 4
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@block_move_fn = internal global %union.tree_node* null, align 8, !dbg !3692
@.str.2 = private unnamed_addr constant [7 x i8] c"memcpy\00", align 1
@const_tiny_rtx = external dso_local local_unnamed_addr global [3 x [87 x %struct.rtx_def*]], align 16
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@block_clear_fn = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !3694
@.str.3 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@setmem_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3642
@mode_mask_array = external dso_local local_unnamed_addr constant [87 x i64], align 16
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@reload_in_progress = external dso_local local_unnamed_addr global i32, align 4
@target_flags = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@libfunc_table = external dso_local local_unnamed_addr global [14 x %struct.rtx_def*], align 16
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@pic_offset_table_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@input_location = external dso_local local_unnamed_addr global i32, align 4
@mode_2xwider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_trapv = external dso_local local_unnamed_addr global i32, align 4
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@currently_expanding_to_rtl = external dso_local local_unnamed_addr global i32, align 4
@.str.4 = private unnamed_addr constant [46 x i8] c"%Kinvalid use of %<__builtin_va_arg_pack ()%>\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.6 = private unnamed_addr constant [48 x i8] c"%Kcall to %qs declared with attribute error: %s\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.8 = private unnamed_addr constant [50 x i8] c"%Kcall to %qs declared with attribute warning: %s\00", align 1
@gt_ggc_r_gt_expr_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%union.tree_node** @block_move_fn to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !3614
@cse_not_expected = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !3628
@movmem_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3639
@cmpstr_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3644
@cmpstrn_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3646
@cmpmem_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3648
@sync_add_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3650
@sync_sub_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3652
@sync_ior_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3654
@sync_and_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3656
@sync_xor_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3658
@sync_nand_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3660
@sync_old_add_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3662
@sync_old_sub_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3664
@sync_old_ior_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3666
@sync_old_and_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3668
@sync_old_xor_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3670
@sync_old_nand_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3672
@sync_new_add_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3674
@sync_new_sub_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3676
@sync_new_ior_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3678
@sync_new_and_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3680
@sync_new_xor_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3682
@sync_new_nand_optab = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3684
@sync_compare_and_swap = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3686
@sync_lock_test_and_set = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3688
@sync_lock_release = common dso_local local_unnamed_addr global [87 x i32] zeroinitializer, align 16, !dbg !3690
@volatile_ok = external dso_local local_unnamed_addr global i32, align 4
@emit_block_move_libcall_fn.emitted_extern = internal unnamed_addr global i1 false, align 1, !dbg !3708
@clear_storage_libcall_fn.emitted_extern = internal unnamed_addr global i1 false, align 1, !dbg !3709
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@flag_optimize_sibling_calls = external dso_local local_unnamed_addr global i32, align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@flag_evaluation_order = external dso_local local_unnamed_addr global i32, align 4
@SA = external dso_local local_unnamed_addr global %struct.ssaexpand, align 8
@.str.10 = private unnamed_addr constant [14 x i8] c"./ssaexpand.h\00", align 1
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@mode_nunits = external dso_local local_unnamed_addr constant [87 x i8], align 16

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !3714 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !3727, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !3728, metadata !DIExpression()), !dbg !3729
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3730
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !3731
  ret i32 %call, !dbg !3732
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !3733 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3737
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !3738
  ret i32 %call, !dbg !3739
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3740 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3794, metadata !DIExpression()), !dbg !3795
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3796
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3796
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3796
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3796
  %cmp = icmp uge i8* %0, %1, !dbg !3796
  %conv1 = zext i1 %cmp to i64, !dbg !3796
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3796
  %tobool = icmp eq i64 %expval, 0, !dbg !3796
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3796

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !3796
  br label %cond.end, !dbg !3796

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3796
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3796
  %2 = load i8, i8* %0, align 1, !dbg !3796
  %conv3 = zext i8 %2 to i32, !dbg !3796
  br label %cond.end, !dbg !3796

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3796
  ret i32 %cond, !dbg !3797
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3798 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3800, metadata !DIExpression()), !dbg !3801
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3802
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3802
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3802
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3802
  %cmp = icmp uge i8* %0, %1, !dbg !3802
  %conv1 = zext i1 %cmp to i64, !dbg !3802
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3802
  %tobool = icmp eq i64 %expval, 0, !dbg !3802
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3802

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !3802
  br label %cond.end, !dbg !3802

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3802
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3802
  %2 = load i8, i8* %0, align 1, !dbg !3802
  %conv3 = zext i8 %2 to i32, !dbg !3802
  br label %cond.end, !dbg !3802

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3802
  ret i32 %cond, !dbg !3803
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !3804 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3805
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !3805
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3805
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !3805
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !3805
  %cmp = icmp uge i8* %1, %2, !dbg !3805
  %conv1 = zext i1 %cmp to i64, !dbg !3805
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3805
  %tobool = icmp eq i64 %expval, 0, !dbg !3805
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3805

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !3805
  br label %cond.end, !dbg !3805

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3805
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3805
  %3 = load i8, i8* %1, align 1, !dbg !3805
  %conv3 = zext i8 %3 to i32, !dbg !3805
  br label %cond.end, !dbg !3805

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3805
  ret i32 %cond, !dbg !3806
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !3807 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3811, metadata !DIExpression()), !dbg !3812
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3813
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !3814
  ret i32 %call, !dbg !3815
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3816 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3820, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3821, metadata !DIExpression()), !dbg !3822
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3823
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3823
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3823
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3823
  %cmp = icmp uge i8* %0, %1, !dbg !3823
  %conv1 = zext i1 %cmp to i64, !dbg !3823
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3823
  %tobool = icmp eq i64 %expval, 0, !dbg !3823
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3823

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3823
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !3823
  br label %cond.end, !dbg !3823

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3823
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3823
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3823
  store i8 %conv2, i8* %0, align 1, !dbg !3823
  %conv6 = and i32 %__c, 255, !dbg !3823
  br label %cond.end, !dbg !3823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3823
  ret i32 %cond, !dbg !3824
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3825 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3827, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3828, metadata !DIExpression()), !dbg !3829
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3830
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3830
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3830
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3830
  %cmp = icmp uge i8* %0, %1, !dbg !3830
  %conv1 = zext i1 %cmp to i64, !dbg !3830
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3830
  %tobool = icmp eq i64 %expval, 0, !dbg !3830
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3830

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3830
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !3830
  br label %cond.end, !dbg !3830

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3830
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3830
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3830
  store i8 %conv2, i8* %0, align 1, !dbg !3830
  %conv6 = and i32 %__c, 255, !dbg !3830
  br label %cond.end, !dbg !3830

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3830
  ret i32 %cond, !dbg !3831
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !3832 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3834, metadata !DIExpression()), !dbg !3835
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3836
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !3836
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3836
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !3836
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !3836
  %cmp = icmp uge i8* %1, %2, !dbg !3836
  %conv1 = zext i1 %cmp to i64, !dbg !3836
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3836
  %tobool = icmp eq i64 %expval, 0, !dbg !3836
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3836

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3836
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !3836
  br label %cond.end, !dbg !3836

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !3836
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3836
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3836
  store i8 %conv4, i8* %1, align 1, !dbg !3836
  %conv6 = and i32 %__c, 255, !dbg !3836
  br label %cond.end, !dbg !3836

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3836
  ret i32 %cond, !dbg !3837
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3838 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !3844, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i64* %__n, metadata !3845, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3846, metadata !DIExpression()), !dbg !3847
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !3848
  ret i64 %call, !dbg !3849
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3850 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3852, metadata !DIExpression()), !dbg !3853
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3854
  %0 = load i32, i32* %_flags, align 8, !dbg !3854
  %and = lshr i32 %0, 4, !dbg !3854
  %and.lobit = and i32 %and, 1, !dbg !3854
  ret i32 %and.lobit, !dbg !3855
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3856 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3858, metadata !DIExpression()), !dbg !3859
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3860
  %0 = load i32, i32* %_flags, align 8, !dbg !3860
  %and = lshr i32 %0, 5, !dbg !3860
  %and.lobit = and i32 %and, 1, !dbg !3860
  ret i32 %and.lobit, !dbg !3861
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !3862 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3865, metadata !DIExpression()), !dbg !3866
  %__c.off = add i32 %__c, 128, !dbg !3867
  %0 = icmp ult i32 %__c.off, 384, !dbg !3867
  br i1 %0, label %cond.true, label %cond.end, !dbg !3867

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !3868
  %1 = load i32*, i32** %call, align 8, !dbg !3869
  %idxprom = sext i32 %__c to i64, !dbg !3870
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3870
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3870
  br label %cond.end, !dbg !3871

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3871
  ret i32 %cond, !dbg !3872
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !3873 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3875, metadata !DIExpression()), !dbg !3876
  %__c.off = add i32 %__c, 128, !dbg !3877
  %0 = icmp ult i32 %__c.off, 384, !dbg !3877
  br i1 %0, label %cond.true, label %cond.end, !dbg !3877

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !3878
  %1 = load i32*, i32** %call, align 8, !dbg !3879
  %idxprom = sext i32 %__c to i64, !dbg !3880
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3880
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3880
  br label %cond.end, !dbg !3881

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3881
  ret i32 %cond, !dbg !3882
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !3883 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3888, metadata !DIExpression()), !dbg !3889
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !3890
  %conv = trunc i64 %call to i32, !dbg !3891
  ret i32 %conv, !dbg !3892
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !3893 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3897, metadata !DIExpression()), !dbg !3898
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !3899
  ret i64 %call, !dbg !3900
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !3901 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3906, metadata !DIExpression()), !dbg !3907
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !3908
  ret i64 %call, !dbg !3909
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !3910 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !3916, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i8* %__base, metadata !3917, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3918, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i64 %__size, metadata !3919, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !3920, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i64 0, metadata !3921, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3922, metadata !DIExpression()), !dbg !3926
  br label %while.cond, !dbg !3927

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !3928
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !3926
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !3922, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !3921, metadata !DIExpression()), !dbg !3926
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !3929
  br i1 %cmp, label %while.body, label %cleanup, !dbg !3927

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !3930
  %div = lshr i64 %add, 1, !dbg !3932
  call void @llvm.dbg.value(metadata i64 %div, metadata !3923, metadata !DIExpression()), !dbg !3926
  %mul = mul i64 %div, %__size, !dbg !3933
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !3934
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3924, metadata !DIExpression()), !dbg !3926
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %call, metadata !3925, metadata !DIExpression()), !dbg !3926
  %cmp1 = icmp slt i32 %call, 0, !dbg !3936
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !3938

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !3939
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !3941

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !3942
  call void @llvm.dbg.value(metadata i64 %add4, metadata !3921, metadata !DIExpression()), !dbg !3926
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !3926
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !3926
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !3922, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !3921, metadata !DIExpression()), !dbg !3926
  br label %while.cond, !dbg !3927, !llvm.loop !3943

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !3926
  ret i8* %retval.0, !dbg !3945
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !3946 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3952, metadata !DIExpression()), !dbg !3953
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !3954
  ret double %call, !dbg !3955
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3956 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3965, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3966, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i32 %base, metadata !3967, metadata !DIExpression()), !dbg !3968
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3969
  ret i64 %call, !dbg !3970
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3971 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3977, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3978, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %base, metadata !3979, metadata !DIExpression()), !dbg !3980
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3981
  ret i64 %call, !dbg !3982
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3983 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3994, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3995, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 %base, metadata !3996, metadata !DIExpression()), !dbg !3997
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !3998
  ret i64 %call, !dbg !3999
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4000 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !4004, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !4005, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %base, metadata !4006, metadata !DIExpression()), !dbg !4007
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !4008
  ret i64 %call, !dbg !4009
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4010 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4050, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4051, metadata !DIExpression()), !dbg !4052
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !4053
  ret i32 %call, !dbg !4054
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4055 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4057, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4058, metadata !DIExpression()), !dbg !4059
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !4060
  ret i32 %call, !dbg !4061
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4062 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4066, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4067, metadata !DIExpression()), !dbg !4068
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !4069
  ret i32 %call, !dbg !4070
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !4071 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4075, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !4076, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4077, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !4078, metadata !DIExpression()), !dbg !4079
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !4080
  ret i32 %call, !dbg !4081
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !4082 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4086, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !4087, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !4088, metadata !DIExpression()), !dbg !4089
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !4088, metadata !DIExpression(DW_OP_deref)), !dbg !4089
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !4090
  ret i32 %call, !dbg !4091
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !4092 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4096, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4097, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !4098, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !4099, metadata !DIExpression()), !dbg !4100
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !4099, metadata !DIExpression(DW_OP_deref)), !dbg !4100
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !4101
  ret i32 %call, !dbg !4102
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4103 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4127, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4128, metadata !DIExpression()), !dbg !4129
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !4130
  ret i32 %call, !dbg !4131
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4132 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4134, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4135, metadata !DIExpression()), !dbg !4136
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !4137
  ret i32 %call, !dbg !4138
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4139 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4143, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4144, metadata !DIExpression()), !dbg !4145
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !4146
  ret i32 %call, !dbg !4147
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !4148 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4152, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !4153, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4154, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !4155, metadata !DIExpression()), !dbg !4156
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !4157
  ret i32 %call, !dbg !4158
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @init_expr_target() local_unnamed_addr #4 !dbg !4159 {
entry:
  %num_clobbers = alloca i32, align 4
  %0 = bitcast i32* %num_clobbers to i8*, !dbg !4182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4182
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !4183
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %1) #6, !dbg !4184
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4167, metadata !DIExpression()), !dbg !4185
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !4186
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %2) #6, !dbg !4187
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4168, metadata !DIExpression()), !dbg !4185
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 -1) #6, !dbg !4188
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4169, metadata !DIExpression()), !dbg !4185
  %call3 = tail call %struct.rtx_def* @rtx_alloc_stat(i32 8) #6, !dbg !4189
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !4163, metadata !DIExpression()), !dbg !4185
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* null, %struct.rtx_def* null) #6, !dbg !4190
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !4164, metadata !DIExpression()), !dbg !4185
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call3, i64 0, i32 1, !dbg !4191
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4191
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !4191
  store %struct.rtx_def* %call4, %struct.rtx_def** %rt_rtx, align 8, !dbg !4192
  call void @llvm.dbg.value(metadata i32 0, metadata !4165, metadata !DIExpression()), !dbg !4185
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4193
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 0, !dbg !4193
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2, i64 0, i32 0, !dbg !4193
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4194
  %rt_uint = bitcast %union.rtunion_def* %arrayidx37 to i32*, !dbg !4194
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4194
  %rt_rtx41 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !4194
  %arrayidx44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4194
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !4194
  br label %for.cond, !dbg !4199

for.cond:                                         ; preds = %for.inc99, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc99 ], [ 0, %entry ], !dbg !4200
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4165, metadata !DIExpression()), !dbg !4185
  %exitcond4 = icmp eq i64 %indvars.iv, 87, !dbg !4201
  br i1 %exitcond4, label %for.end100, label %for.body, !dbg !4202

for.body:                                         ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @direct_store, i64 0, i64 %indvars.iv, !dbg !4203
  store i8 0, i8* %arrayidx5, align 1, !dbg !4204
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @direct_load, i64 0, i64 %indvars.iv, !dbg !4205
  store i8 0, i8* %arrayidx7, align 1, !dbg !4206
  %bf.load = load i32, i32* %4, align 8, !dbg !4207
  %8 = shl i64 %indvars.iv, 16, !dbg !4207
  %bf.clear = and i32 %bf.load, -16711681, !dbg !4207
  %9 = trunc i64 %8 to i32, !dbg !4207
  %bf.set = or i32 %bf.clear, %9, !dbg !4207
  store i32 %bf.set, i32* %4, align 8, !dbg !4207
  %bf.load8 = load i32, i32* %5, align 8, !dbg !4208
  %bf.clear11 = and i32 %bf.load8, -16711681, !dbg !4208
  %10 = trunc i64 %8 to i32, !dbg !4208
  %bf.set12 = or i32 %bf.clear11, %10, !dbg !4208
  store i32 %bf.set12, i32* %5, align 8, !dbg !4208
  %bf.load13 = load i32, i32* %6, align 8, !dbg !4209
  %bf.clear16 = and i32 %bf.load13, -16711681, !dbg !4209
  %11 = trunc i64 %8 to i32, !dbg !4209
  %bf.set17 = or i32 %bf.clear16, %11, !dbg !4209
  store i32 %bf.set17, i32* %6, align 8, !dbg !4209
  %switch1 = icmp ult i64 %indvars.iv, 2, !dbg !4210
  br i1 %switch1, label %for.inc99, label %for.cond20.preheader, !dbg !4210

for.cond20.preheader:                             ; preds = %for.body
  br label %for.cond20, !dbg !4211

for.cond20:                                       ; preds = %for.cond20.preheader, %for.inc
  %regno.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond20.preheader ], !dbg !4212
  call void @llvm.dbg.value(metadata i32 %regno.0, metadata !4170, metadata !DIExpression()), !dbg !4193
  %exitcond = icmp eq i32 %regno.0, 53, !dbg !4213
  br i1 %exitcond, label %for.inc99.loopexit, label %land.rhs, !dbg !4214

land.rhs:                                         ; preds = %for.cond20
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !4215
  %cmp24 = icmp eq i8 %12, 0, !dbg !4216
  br i1 %cmp24, label %for.body31, label %lor.rhs, !dbg !4217

lor.rhs:                                          ; preds = %land.rhs
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !4218
  %cmp29 = icmp eq i8 %13, 0, !dbg !4219
  br i1 %cmp29, label %for.body31, label %for.inc99.loopexit, !dbg !4211

for.body31:                                       ; preds = %land.rhs, %lor.rhs
  %14 = trunc i64 %indvars.iv to i32, !dbg !4220
  %call32 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %regno.0, i32 %14) #6, !dbg !4220
  %tobool = icmp eq i8 %call32, 0, !dbg !4220
  br i1 %tobool, label %for.inc, label %if.end, !dbg !4222

if.end:                                           ; preds = %for.body31
  %call34 = call fastcc i32 @rhs_regno(%struct.rtx_def* %call2) #8, !dbg !4223
  call void @df_ref_change_reg_with_loc(i32 %call34, i32 %regno.0, %struct.rtx_def* %call2) #6, !dbg !4223
  store i32 %regno.0, i32* %rt_uint, align 8, !dbg !4223
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx41, align 8, !dbg !4224
  store %struct.rtx_def* %call2, %struct.rtx_def** %rt_rtx45, align 8, !dbg !4225
  call void @llvm.dbg.value(metadata i32* %num_clobbers, metadata !4166, metadata !DIExpression(DW_OP_deref)), !dbg !4185
  %call46 = call i32 @recog(%struct.rtx_def* %call4, %struct.rtx_def* %call3, i32* nonnull %num_clobbers) #6, !dbg !4226
  %cmp47 = icmp sgt i32 %call46, -1, !dbg !4228
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !4229

if.then49:                                        ; preds = %if.end
  store i8 1, i8* %arrayidx7, align 1, !dbg !4230
  br label %if.end52, !dbg !4231

if.end52:                                         ; preds = %if.then49, %if.end
  store %struct.rtx_def* %call1, %struct.rtx_def** %rt_rtx41, align 8, !dbg !4232
  store %struct.rtx_def* %call2, %struct.rtx_def** %rt_rtx45, align 8, !dbg !4233
  call void @llvm.dbg.value(metadata i32* %num_clobbers, metadata !4166, metadata !DIExpression(DW_OP_deref)), !dbg !4185
  %call61 = call i32 @recog(%struct.rtx_def* %call4, %struct.rtx_def* %call3, i32* nonnull %num_clobbers) #6, !dbg !4234
  %cmp62 = icmp sgt i32 %call61, -1, !dbg !4236
  br i1 %cmp62, label %if.then64, label %if.end67, !dbg !4237

if.then64:                                        ; preds = %if.end52
  store i8 1, i8* %arrayidx7, align 1, !dbg !4238
  br label %if.end67, !dbg !4239

if.end67:                                         ; preds = %if.then64, %if.end52
  store %struct.rtx_def* %call2, %struct.rtx_def** %rt_rtx41, align 8, !dbg !4240
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx45, align 8, !dbg !4241
  call void @llvm.dbg.value(metadata i32* %num_clobbers, metadata !4166, metadata !DIExpression(DW_OP_deref)), !dbg !4185
  %call76 = call i32 @recog(%struct.rtx_def* %call4, %struct.rtx_def* %call3, i32* nonnull %num_clobbers) #6, !dbg !4242
  %cmp77 = icmp sgt i32 %call76, -1, !dbg !4244
  br i1 %cmp77, label %if.then79, label %if.end82, !dbg !4245

if.then79:                                        ; preds = %if.end67
  store i8 1, i8* %arrayidx5, align 1, !dbg !4246
  br label %if.end82, !dbg !4247

if.end82:                                         ; preds = %if.then79, %if.end67
  store %struct.rtx_def* %call2, %struct.rtx_def** %rt_rtx41, align 8, !dbg !4248
  store %struct.rtx_def* %call1, %struct.rtx_def** %rt_rtx45, align 8, !dbg !4249
  call void @llvm.dbg.value(metadata i32* %num_clobbers, metadata !4166, metadata !DIExpression(DW_OP_deref)), !dbg !4185
  %call91 = call i32 @recog(%struct.rtx_def* %call4, %struct.rtx_def* %call3, i32* nonnull %num_clobbers) #6, !dbg !4250
  %cmp92 = icmp sgt i32 %call91, -1, !dbg !4252
  br i1 %cmp92, label %if.then94, label %for.inc, !dbg !4253

if.then94:                                        ; preds = %if.end82
  store i8 1, i8* %arrayidx5, align 1, !dbg !4254
  br label %for.inc, !dbg !4255

for.inc:                                          ; preds = %for.body31, %if.end82, %if.then94
  %inc = add nuw nsw i32 %regno.0, 1, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4170, metadata !DIExpression()), !dbg !4193
  br label %for.cond20, !dbg !4257, !llvm.loop !4258

for.inc99.loopexit:                               ; preds = %for.cond20, %lor.rhs
  br label %for.inc99, !dbg !4260

for.inc99:                                        ; preds = %for.inc99.loopexit, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4260
  call void @llvm.dbg.value(metadata i32 undef, metadata !4165, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4185
  br label %for.cond, !dbg !4261, !llvm.loop !4262

for.end100:                                       ; preds = %for.cond
  %call101 = call %struct.rtx_def* @gen_rtx_fmt_i00_stat(i32 37, i32 16, i32 10000) #6, !dbg !4264
  %call102 = call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %call101) #6, !dbg !4265
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call102, metadata !4167, metadata !DIExpression()), !dbg !4185
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call102, i64 0, i32 0, !dbg !4266
  br label %for.cond104, !dbg !4267

for.cond104:                                      ; preds = %for.inc139, %for.end100
  %mode.1.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 8), %for.end100 ], [ %arrayidx141, %for.inc139 ]
  %mode.1.in = load i8, i8* %mode.1.in.in, align 1, !dbg !4268
  %mode.1 = zext i8 %mode.1.in to i32, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %mode.1, metadata !4165, metadata !DIExpression()), !dbg !4185
  %cmp105 = icmp eq i8 %mode.1.in, 0, !dbg !4269
  br i1 %cmp105, label %for.end143, label %for.body107, !dbg !4270

for.body107:                                      ; preds = %for.cond104
  %idxprom129 = zext i8 %mode.1.in to i64, !dbg !4271
  br label %for.cond109, !dbg !4273

for.cond109:                                      ; preds = %cleanup, %for.body107
  %srcmode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 8), %for.body107 ], [ %arrayidx136, %cleanup ]
  %srcmode.0.in = load i8, i8* %srcmode.0.in.in, align 1, !dbg !4274
  %srcmode.0 = zext i8 %srcmode.0.in to i32, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %srcmode.0, metadata !4174, metadata !DIExpression()), !dbg !4275
  %cmp110 = icmp eq i8 %srcmode.0.in, %mode.1.in, !dbg !4276
  br i1 %cmp110, label %for.inc139, label %for.body112, !dbg !4277

for.body112:                                      ; preds = %for.cond109
  %call113 = call i32 @can_extend_p(i32 %mode.1, i32 %srcmode.0, i32 0) #6, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %call113, metadata !4178, metadata !DIExpression()), !dbg !4266
  %cmp114 = icmp eq i32 %call113, 2956, !dbg !4279
  br i1 %cmp114, label %cleanup, label %if.end117, !dbg !4281

if.end117:                                        ; preds = %for.body112
  %bf.load118 = load i32, i32* %15, align 8, !dbg !4282
  %bf.shl120 = shl nuw nsw i32 %srcmode.0, 16, !dbg !4282
  %bf.clear121 = and i32 %bf.load118, -16711681, !dbg !4282
  %bf.set122 = or i32 %bf.clear121, %bf.shl120, !dbg !4282
  store i32 %bf.set122, i32* %15, align 8, !dbg !4282
  %idxprom123 = zext i32 %call113 to i64, !dbg !4283
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom123, i32 3, !dbg !4284
  %16 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !4284
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %16, i64 1, i32 0, !dbg !4285
  %17 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !4285
  %call126 = call i32 %17(%struct.rtx_def* %call102, i32 %srcmode.0) #6, !dbg !4286
  %tobool127 = icmp eq i32 %call126, 0, !dbg !4286
  br i1 %tobool127, label %cleanup, label %if.then128, !dbg !4287

if.then128:                                       ; preds = %if.end117
  %idxprom131 = zext i8 %srcmode.0.in to i64, !dbg !4288
  %arrayidx132 = getelementptr inbounds [87 x [87 x i8]], [87 x [87 x i8]]* @float_extend_from_mem, i64 0, i64 %idxprom129, i64 %idxprom131, !dbg !4288
  store i8 1, i8* %arrayidx132, align 1, !dbg !4289
  br label %cleanup, !dbg !4288

cleanup:                                          ; preds = %if.end117, %if.then128, %for.body112
  %idxprom135 = zext i8 %srcmode.0.in to i64, !dbg !4290
  %arrayidx136 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom135, !dbg !4290
  br label %for.cond109, !dbg !4291, !llvm.loop !4292

for.inc139:                                       ; preds = %for.cond109
  %arrayidx141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom129, !dbg !4294
  br label %for.cond104, !dbg !4295, !llvm.loop !4296

for.end143:                                       ; preds = %for.cond104
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4298
  ret void, !dbg !4298
}

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @rtx_alloc_stat(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) local_unnamed_addr #1

declare dso_local void @df_ref_change_reg_with_loc(i32, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !4299 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4306, metadata !DIExpression()), !dbg !4307
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4308
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4308
  %0 = load i32, i32* %rt_uint, align 8, !dbg !4308
  ret i32 %0, !dbg !4309
}

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_i00_stat(i32, i32, i32) local_unnamed_addr #1

declare dso_local i32 @can_extend_p(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @init_expr() local_unnamed_addr #4 !dbg !4310 {
entry:
  %call = tail call i8* @memset(i8* bitcast (%struct.rtl_data* @x_rtl to i8*), i32 0, i64 40) #6, !dbg !4311
  ret void, !dbg !4312
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @convert_move(%struct.rtx_def* %to, %struct.rtx_def* %from, i32 %unsignedp) local_unnamed_addr #4 !dbg !4313 {
entry:
  br label %tailrecurse.outer, !dbg !4383

tailrecurse.outer:                                ; preds = %if.then259, %entry
  %to.tr.ph = phi %struct.rtx_def* [ %22, %if.then259 ], [ %to, %entry ]
  %from.tr.ph = phi %struct.rtx_def* [ %24, %if.then259 ], [ %from, %entry ]
  %unsignedp.tr.ph = phi i32 [ %unsignedp.tr.ph5.lcssa446, %if.then259 ], [ %unsignedp, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to.tr.ph, i64 0, i32 0, !dbg !4388
  br label %tailrecurse.outer3, !dbg !4389

tailrecurse.outer3:                               ; preds = %tailrecurse.outer, %if.end734
  %from.tr.ph4 = phi %struct.rtx_def* [ %from.tr.ph, %tailrecurse.outer ], [ %call735, %if.end734 ]
  %unsignedp.tr.ph5 = phi i32 [ %unsignedp.tr.ph, %tailrecurse.outer ], [ 0, %if.end734 ]
  %cmp23 = icmp slt i32 %unsignedp.tr.ph5, 0, !dbg !4388
  %tobool = icmp eq i32 %unsignedp.tr.ph5, 0, !dbg !4388
  %cond = select i1 %tobool, i32 98, i32 99, !dbg !4388
  br label %tailrecurse, !dbg !4389

tailrecurse:                                      ; preds = %tailrecurse.outer3, %if.then850
  %from.tr = phi %struct.rtx_def* [ %call851, %if.then850 ], [ %from.tr.ph4, %tailrecurse.outer3 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to.tr.ph, metadata !4317, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.tr, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %unsignedp.tr.ph5, metadata !4319, metadata !DIExpression()), !dbg !4388
  %bf.load = load i32, i32* %0, align 8, !dbg !4390
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4390
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4320, metadata !DIExpression()), !dbg !4388
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.tr, i64 0, i32 0, !dbg !4391
  %bf.load1 = load i32, i32* %1, align 8, !dbg !4391
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !4391
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %bf.clear3, metadata !4321, metadata !DIExpression()), !dbg !4388
  %idxprom = zext i32 %bf.clear to i64, !dbg !4389
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4389
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4389
  %cmp = icmp eq i8 %2, 8, !dbg !4389
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4389

lor.rhs:                                          ; preds = %tailrecurse
  %cmp8 = icmp eq i8 %2, 9, !dbg !4389
  br label %lor.end, !dbg !4389

lor.end:                                          ; preds = %lor.rhs, %tailrecurse
  %3 = phi i1 [ true, %tailrecurse ], [ %cmp8, %lor.rhs ]
  call void @llvm.dbg.value(metadata i1 %3, metadata !4322, metadata !DIExpression()), !dbg !4388
  %idxprom10 = zext i32 %bf.clear3 to i64, !dbg !4392
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom10, !dbg !4392
  %4 = load i8, i8* %arrayidx11, align 1, !dbg !4392
  %cmp13 = icmp eq i8 %4, 8, !dbg !4392
  br i1 %cmp13, label %lor.end21, label %lor.rhs15, !dbg !4392

lor.rhs15:                                        ; preds = %lor.end
  %cmp19 = icmp eq i8 %4, 9, !dbg !4392
  br label %lor.end21, !dbg !4392

lor.end21:                                        ; preds = %lor.rhs15, %lor.end
  %5 = phi i1 [ true, %lor.end ], [ %cmp19, %lor.rhs15 ]
  call void @llvm.dbg.value(metadata i1 %5, metadata !4323, metadata !DIExpression()), !dbg !4388
  br i1 %cmp23, label %cond.end, label %cond.false, !dbg !4393

cond.false:                                       ; preds = %lor.end21
  br label %cond.end, !dbg !4393

cond.end:                                         ; preds = %lor.end21, %cond.false
  %cond25 = phi i32 [ %cond, %cond.false ], [ 0, %lor.end21 ], !dbg !4393
  call void @llvm.dbg.value(metadata i32 %cond25, metadata !4326, metadata !DIExpression()), !dbg !4388
  %6 = xor i1 %3, %5, !dbg !4394
  br i1 %6, label %cond.true28, label %cond.end30, !dbg !4394

cond.true28:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 371, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4394
  br label %cond.end30, !dbg !4394

cond.end30:                                       ; preds = %cond.end, %cond.true28
  %cmp32 = icmp eq i32 %bf.clear, 1, !dbg !4395
  br i1 %cmp32, label %cond.true34, label %cond.end36, !dbg !4395

cond.true34:                                      ; preds = %cond.end30
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 372, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4395
  br label %cond.end36, !dbg !4395

cond.end36:                                       ; preds = %cond.end30, %cond.true34
  %cmp38 = icmp eq i32 %bf.clear3, 1, !dbg !4396
  br i1 %cmp38, label %cond.true40, label %cond.end42, !dbg !4396

cond.true40:                                      ; preds = %cond.end36
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4396
  br label %cond.end42, !dbg !4396

cond.end42:                                       ; preds = %cond.end36, %cond.true40
  %cmp44 = icmp eq %struct.rtx_def* %to.tr.ph, %from.tr, !dbg !4397
  br i1 %cmp44, label %cleanup.cont932.loopexit, label %if.end, !dbg !4399

if.end:                                           ; preds = %cond.end42
  %bf.load46 = load i32, i32* %1, align 8, !dbg !4400
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !4400
  %cmp48 = icmp eq i32 %bf.clear47, 39, !dbg !4402
  br i1 %cmp48, label %land.lhs.true, label %if.end84, !dbg !4403

land.lhs.true:                                    ; preds = %if.end
  %bf.clear52 = and i32 %bf.load46, 268435456, !dbg !4404
  %tobool53 = icmp eq i32 %bf.clear52, 0, !dbg !4404
  br i1 %tobool53, label %if.end84, label %land.lhs.true54, !dbg !4405

land.lhs.true54:                                  ; preds = %land.lhs.true
  %arrayidx55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4406
  %7 = bitcast %union.rtunion_def* %arrayidx55 to i32**, !dbg !4406
  %8 = load i32*, i32** %7, align 8, !dbg !4406
  %bf.load56 = load i32, i32* %8, align 8, !dbg !4406
  %bf.lshr57 = lshr i32 %bf.load56, 16, !dbg !4406
  %bf.clear58 = and i32 %bf.lshr57, 255, !dbg !4406
  %idxprom59 = zext i32 %bf.clear58 to i64, !dbg !4406
  %arrayidx60 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom59, !dbg !4406
  %9 = load i8, i8* %arrayidx60, align 1, !dbg !4406
  %arrayidx64 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4407
  %10 = load i8, i8* %arrayidx64, align 1, !dbg !4407
  %cmp67 = icmp ult i8 %9, %10, !dbg !4408
  br i1 %cmp67, label %if.end84, label %land.lhs.true69, !dbg !4409

land.lhs.true69:                                  ; preds = %land.lhs.true54
  %bf.clear72 = and i32 %bf.load46, 134217728, !dbg !4410
  %tobool73 = icmp eq i32 %bf.clear72, 0, !dbg !4410
  br i1 %tobool73, label %cond.false75, label %cond.end79, !dbg !4410

cond.false75:                                     ; preds = %land.lhs.true69
  %bf.lshr77 = lshr i32 %bf.load46, 26, !dbg !4410
  %bf.clear78 = and i32 %bf.lshr77, 1, !dbg !4410
  br label %cond.end79, !dbg !4410

cond.end79:                                       ; preds = %land.lhs.true69, %cond.false75
  %cond80 = phi i32 [ %bf.clear78, %cond.false75 ], [ -1, %land.lhs.true69 ], !dbg !4410
  %cmp81 = icmp eq i32 %cond80, %unsignedp.tr.ph5, !dbg !4411
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4412

if.then83:                                        ; preds = %cond.end79
  %11 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4413
  %call = tail call %struct.rtx_def* %11(i32 %bf.clear, %struct.rtx_def* %from.tr) #6, !dbg !4413
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4321, metadata !DIExpression()), !dbg !4388
  br label %if.end84, !dbg !4414

if.end84:                                         ; preds = %land.lhs.true54, %land.lhs.true, %if.then83, %cond.end79, %if.end
  %from_mode.0 = phi i32 [ %bf.clear, %if.then83 ], [ %bf.clear3, %cond.end79 ], [ %bf.clear3, %land.lhs.true54 ], [ %bf.clear3, %land.lhs.true ], [ %bf.clear3, %if.end ], !dbg !4388
  %from.addr.0 = phi %struct.rtx_def* [ %call, %if.then83 ], [ %from.tr, %cond.end79 ], [ %from.tr, %land.lhs.true54 ], [ %from.tr, %land.lhs.true ], [ %from.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0, metadata !4321, metadata !DIExpression()), !dbg !4388
  %bf.load85 = load i32, i32* %0, align 8, !dbg !4415
  %bf.clear86 = and i32 %bf.load85, 65535, !dbg !4415
  %cmp87 = icmp eq i32 %bf.clear86, 39, !dbg !4415
  br i1 %cmp87, label %lor.lhs.false, label %cond.end95, !dbg !4415

lor.lhs.false:                                    ; preds = %if.end84
  %bf.clear91 = and i32 %bf.load85, 268435456, !dbg !4415
  %tobool92 = icmp eq i32 %bf.clear91, 0, !dbg !4415
  br i1 %tobool92, label %cond.end95, label %cond.true93, !dbg !4415

cond.true93:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4415
  br label %cond.end95, !dbg !4415

cond.end95:                                       ; preds = %lor.lhs.false, %if.end84, %cond.true93
  %cmp97 = icmp eq i32 %bf.clear, %from_mode.0, !dbg !4416
  br i1 %cmp97, label %if.then109, label %lor.lhs.false99, !dbg !4418

lor.lhs.false99:                                  ; preds = %cond.end95
  %cmp100 = icmp eq i32 %from_mode.0, 0, !dbg !4419
  br i1 %cmp100, label %land.lhs.true102, label %if.end111, !dbg !4420

land.lhs.true102:                                 ; preds = %lor.lhs.false99
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0, i64 0, i32 0, !dbg !4421
  %bf.load103 = load i32, i32* %12, align 8, !dbg !4421
  %bf.clear104 = and i32 %bf.load103, 65535, !dbg !4421
  %idxprom105 = zext i32 %bf.clear104 to i64, !dbg !4421
  %arrayidx106 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom105, !dbg !4421
  %13 = load i32, i32* %arrayidx106, align 4, !dbg !4421
  %cmp107 = icmp eq i32 %13, 9, !dbg !4421
  br i1 %cmp107, label %if.then109, label %if.end111, !dbg !4422

if.then109:                                       ; preds = %land.lhs.true102, %cond.end95
  %to.tr.ph.lcssa465 = phi %struct.rtx_def* [ %to.tr.ph, %land.lhs.true102 ], [ %to.tr.ph, %cond.end95 ]
  %from.addr.0.lcssa = phi %struct.rtx_def* [ %from.addr.0, %land.lhs.true102 ], [ %from.addr.0, %cond.end95 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  %call110 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.tr.ph.lcssa465, %struct.rtx_def* %from.addr.0.lcssa) #8, !dbg !4423
  br label %cleanup.cont932, !dbg !4425

if.end111:                                        ; preds = %land.lhs.true102, %lor.lhs.false99
  %cmp115 = icmp eq i8 %2, 12, !dbg !4426
  br i1 %cmp115, label %if.then183, label %lor.lhs.false117, !dbg !4426

lor.lhs.false117:                                 ; preds = %if.end111
  %cmp121 = icmp eq i8 %2, 17, !dbg !4426
  br i1 %cmp121, label %if.then183, label %lor.lhs.false123, !dbg !4426

lor.lhs.false123:                                 ; preds = %lor.lhs.false117
  %cmp127 = icmp eq i8 %2, 13, !dbg !4426
  br i1 %cmp127, label %if.then183, label %lor.lhs.false129, !dbg !4426

lor.lhs.false129:                                 ; preds = %lor.lhs.false123
  %cmp133 = icmp eq i8 %2, 14, !dbg !4426
  br i1 %cmp133, label %if.then183, label %lor.lhs.false135, !dbg !4426

lor.lhs.false135:                                 ; preds = %lor.lhs.false129
  %cmp139 = icmp eq i8 %2, 15, !dbg !4426
  br i1 %cmp139, label %if.then183, label %lor.lhs.false141, !dbg !4426

lor.lhs.false141:                                 ; preds = %lor.lhs.false135
  %cmp145 = icmp eq i8 %2, 16, !dbg !4426
  br i1 %cmp145, label %if.then183, label %lor.lhs.false147, !dbg !4428

lor.lhs.false147:                                 ; preds = %lor.lhs.false141
  %idxprom148 = zext i32 %from_mode.0 to i64, !dbg !4429
  %arrayidx149 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom148, !dbg !4429
  %14 = load i8, i8* %arrayidx149, align 1, !dbg !4429
  %cmp151 = icmp eq i8 %14, 12, !dbg !4429
  br i1 %cmp151, label %if.then183, label %lor.lhs.false153, !dbg !4429

lor.lhs.false153:                                 ; preds = %lor.lhs.false147
  %cmp157 = icmp eq i8 %14, 17, !dbg !4429
  br i1 %cmp157, label %if.then183, label %lor.lhs.false159, !dbg !4429

lor.lhs.false159:                                 ; preds = %lor.lhs.false153
  %cmp163 = icmp eq i8 %14, 13, !dbg !4429
  br i1 %cmp163, label %if.then183, label %lor.lhs.false165, !dbg !4429

lor.lhs.false165:                                 ; preds = %lor.lhs.false159
  %cmp169 = icmp eq i8 %14, 14, !dbg !4429
  br i1 %cmp169, label %if.then183, label %lor.lhs.false171, !dbg !4429

lor.lhs.false171:                                 ; preds = %lor.lhs.false165
  %cmp175 = icmp eq i8 %14, 15, !dbg !4429
  br i1 %cmp175, label %if.then183, label %lor.lhs.false177, !dbg !4429

lor.lhs.false177:                                 ; preds = %lor.lhs.false171
  %cmp181 = icmp eq i8 %14, 16, !dbg !4429
  br i1 %cmp181, label %if.then183, label %if.end249, !dbg !4430

if.then183:                                       ; preds = %lor.lhs.false177, %lor.lhs.false171, %lor.lhs.false165, %lor.lhs.false159, %lor.lhs.false153, %lor.lhs.false147, %lor.lhs.false141, %lor.lhs.false135, %lor.lhs.false129, %lor.lhs.false123, %lor.lhs.false117, %if.end111
  %to.tr.ph.lcssa466 = phi %struct.rtx_def* [ %to.tr.ph, %lor.lhs.false177 ], [ %to.tr.ph, %lor.lhs.false171 ], [ %to.tr.ph, %lor.lhs.false165 ], [ %to.tr.ph, %lor.lhs.false159 ], [ %to.tr.ph, %lor.lhs.false153 ], [ %to.tr.ph, %lor.lhs.false147 ], [ %to.tr.ph, %lor.lhs.false141 ], [ %to.tr.ph, %lor.lhs.false135 ], [ %to.tr.ph, %lor.lhs.false129 ], [ %to.tr.ph, %lor.lhs.false123 ], [ %to.tr.ph, %lor.lhs.false117 ], [ %to.tr.ph, %if.end111 ]
  %.lcssa456 = phi i32* [ %0, %lor.lhs.false177 ], [ %0, %lor.lhs.false171 ], [ %0, %lor.lhs.false165 ], [ %0, %lor.lhs.false159 ], [ %0, %lor.lhs.false153 ], [ %0, %lor.lhs.false147 ], [ %0, %lor.lhs.false141 ], [ %0, %lor.lhs.false135 ], [ %0, %lor.lhs.false129 ], [ %0, %lor.lhs.false123 ], [ %0, %lor.lhs.false117 ], [ %0, %if.end111 ], !dbg !4388
  %cmp115.lcssa = phi i1 [ %cmp115, %lor.lhs.false177 ], [ %cmp115, %lor.lhs.false171 ], [ %cmp115, %lor.lhs.false165 ], [ %cmp115, %lor.lhs.false159 ], [ %cmp115, %lor.lhs.false153 ], [ %cmp115, %lor.lhs.false147 ], [ %cmp115, %lor.lhs.false141 ], [ %cmp115, %lor.lhs.false135 ], [ %cmp115, %lor.lhs.false129 ], [ %cmp115, %lor.lhs.false123 ], [ %cmp115, %lor.lhs.false117 ], [ %cmp115, %if.end111 ], !dbg !4426
  %from_mode.0.lcssa351 = phi i32 [ %from_mode.0, %lor.lhs.false177 ], [ %from_mode.0, %lor.lhs.false171 ], [ %from_mode.0, %lor.lhs.false165 ], [ %from_mode.0, %lor.lhs.false159 ], [ %from_mode.0, %lor.lhs.false153 ], [ %from_mode.0, %lor.lhs.false147 ], [ %from_mode.0, %lor.lhs.false141 ], [ %from_mode.0, %lor.lhs.false135 ], [ %from_mode.0, %lor.lhs.false129 ], [ %from_mode.0, %lor.lhs.false123 ], [ %from_mode.0, %lor.lhs.false117 ], [ %from_mode.0, %if.end111 ], !dbg !4388
  %from.addr.0.lcssa340 = phi %struct.rtx_def* [ %from.addr.0, %lor.lhs.false177 ], [ %from.addr.0, %lor.lhs.false171 ], [ %from.addr.0, %lor.lhs.false165 ], [ %from.addr.0, %lor.lhs.false159 ], [ %from.addr.0, %lor.lhs.false153 ], [ %from.addr.0, %lor.lhs.false147 ], [ %from.addr.0, %lor.lhs.false141 ], [ %from.addr.0, %lor.lhs.false135 ], [ %from.addr.0, %lor.lhs.false129 ], [ %from.addr.0, %lor.lhs.false123 ], [ %from.addr.0, %lor.lhs.false117 ], [ %from.addr.0, %if.end111 ]
  %bf.clear.lcssa317 = phi i32 [ %bf.clear, %lor.lhs.false177 ], [ %bf.clear, %lor.lhs.false171 ], [ %bf.clear, %lor.lhs.false165 ], [ %bf.clear, %lor.lhs.false159 ], [ %bf.clear, %lor.lhs.false153 ], [ %bf.clear, %lor.lhs.false147 ], [ %bf.clear, %lor.lhs.false141 ], [ %bf.clear, %lor.lhs.false135 ], [ %bf.clear, %lor.lhs.false129 ], [ %bf.clear, %lor.lhs.false123 ], [ %bf.clear, %lor.lhs.false117 ], [ %bf.clear, %if.end111 ], !dbg !4390
  %idxprom.lcssa305 = phi i64 [ %idxprom, %lor.lhs.false177 ], [ %idxprom, %lor.lhs.false171 ], [ %idxprom, %lor.lhs.false165 ], [ %idxprom, %lor.lhs.false159 ], [ %idxprom, %lor.lhs.false153 ], [ %idxprom, %lor.lhs.false147 ], [ %idxprom, %lor.lhs.false141 ], [ %idxprom, %lor.lhs.false135 ], [ %idxprom, %lor.lhs.false129 ], [ %idxprom, %lor.lhs.false123 ], [ %idxprom, %lor.lhs.false117 ], [ %idxprom, %if.end111 ], !dbg !4389
  %.lcssa293 = phi i8 [ %2, %lor.lhs.false177 ], [ %2, %lor.lhs.false171 ], [ %2, %lor.lhs.false165 ], [ %2, %lor.lhs.false159 ], [ %2, %lor.lhs.false153 ], [ %2, %lor.lhs.false147 ], [ %2, %lor.lhs.false141 ], [ %2, %lor.lhs.false135 ], [ %2, %lor.lhs.false129 ], [ %2, %lor.lhs.false123 ], [ %2, %lor.lhs.false117 ], [ %2, %if.end111 ], !dbg !4389
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa351, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa340, metadata !4318, metadata !DIExpression()), !dbg !4388
  %idxprom184 = zext i32 %from_mode.0.lcssa351 to i64, !dbg !4431
  %arrayidx185 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom184, !dbg !4431
  %15 = load i8, i8* %arrayidx185, align 1, !dbg !4431
  %arrayidx191 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom.lcssa305, !dbg !4431
  %16 = load i8, i8* %arrayidx191, align 1, !dbg !4431
  %cmp197 = icmp eq i8 %15, %16, !dbg !4431
  br i1 %cmp197, label %cond.end201, label %cond.true199, !dbg !4431

cond.true199:                                     ; preds = %if.then183
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 401, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4431
  br label %cond.end201, !dbg !4431

cond.end201:                                      ; preds = %if.then183, %cond.true199
  br i1 %cmp115.lcssa, label %if.then238, label %lor.lhs.false208, !dbg !4433

lor.lhs.false208:                                 ; preds = %cond.end201
  %cmp212 = icmp eq i8 %.lcssa293, 17, !dbg !4433
  br i1 %cmp212, label %if.then238, label %lor.lhs.false214, !dbg !4433

lor.lhs.false214:                                 ; preds = %lor.lhs.false208
  %cmp218 = icmp eq i8 %.lcssa293, 13, !dbg !4433
  br i1 %cmp218, label %if.then238, label %lor.lhs.false220, !dbg !4433

lor.lhs.false220:                                 ; preds = %lor.lhs.false214
  %cmp224 = icmp eq i8 %.lcssa293, 14, !dbg !4433
  br i1 %cmp224, label %if.then238, label %lor.lhs.false226, !dbg !4433

lor.lhs.false226:                                 ; preds = %lor.lhs.false220
  %cmp230 = icmp eq i8 %.lcssa293, 15, !dbg !4433
  br i1 %cmp230, label %if.then238, label %lor.lhs.false232, !dbg !4433

lor.lhs.false232:                                 ; preds = %lor.lhs.false226
  %cmp236 = icmp eq i8 %.lcssa293, 16, !dbg !4433
  br i1 %cmp236, label %if.then238, label %if.else, !dbg !4435

if.then238:                                       ; preds = %lor.lhs.false232, %lor.lhs.false226, %lor.lhs.false220, %lor.lhs.false214, %lor.lhs.false208, %cond.end201
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0.lcssa340, i64 0, i32 0, !dbg !4436
  %bf.load239 = load i32, i32* %17, align 8, !dbg !4436
  %bf.lshr240 = lshr i32 %bf.load239, 16, !dbg !4436
  %bf.clear241 = and i32 %bf.lshr240, 255, !dbg !4436
  %call242 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear.lcssa317, %struct.rtx_def* %from.addr.0.lcssa340, i32 %bf.clear241, i32 0) #6, !dbg !4437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call242, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end247, !dbg !4438

if.else:                                          ; preds = %lor.lhs.false232
  %bf.load243 = load i32, i32* %.lcssa456, align 8, !dbg !4439
  %bf.lshr244 = lshr i32 %bf.load243, 16, !dbg !4439
  %bf.clear245 = and i32 %bf.lshr244, 255, !dbg !4439
  %call246 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %from_mode.0.lcssa351, %struct.rtx_def* %to.tr.ph.lcssa466, i32 %bf.clear245, i32 0) #6, !dbg !4440
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call246, metadata !4317, metadata !DIExpression()), !dbg !4388
  br label %if.end247

if.end247:                                        ; preds = %if.else, %if.then238
  %from.addr.1 = phi %struct.rtx_def* [ %call242, %if.then238 ], [ %from.addr.0.lcssa340, %if.else ], !dbg !4388
  %to.addr.0 = phi %struct.rtx_def* [ %to.tr.ph.lcssa466, %if.then238 ], [ %call246, %if.else ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to.addr.0, metadata !4317, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.1, metadata !4318, metadata !DIExpression()), !dbg !4388
  %call248 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.addr.0, %struct.rtx_def* %from.addr.1) #8, !dbg !4441
  br label %cleanup.cont932, !dbg !4442

if.end249:                                        ; preds = %lor.lhs.false177
  %bf.load250 = load i32, i32* %0, align 8, !dbg !4443
  %bf.clear251 = and i32 %bf.load250, 65535, !dbg !4443
  %cmp252 = icmp eq i32 %bf.clear251, 41, !dbg !4445
  br i1 %cmp252, label %land.lhs.true254, label %if.end276, !dbg !4446

land.lhs.true254:                                 ; preds = %if.end249
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0, i64 0, i32 0, !dbg !4447
  %bf.load255 = load i32, i32* %18, align 8, !dbg !4447
  %bf.clear256 = and i32 %bf.load255, 65535, !dbg !4447
  %cmp257 = icmp eq i32 %bf.clear256, 41, !dbg !4448
  br i1 %cmp257, label %if.then259, label %if.end276, !dbg !4449

if.then259:                                       ; preds = %land.lhs.true254
  %unsignedp.tr.ph5.lcssa446 = phi i32 [ %unsignedp.tr.ph5, %land.lhs.true254 ]
  %from.addr.0.lcssa341 = phi %struct.rtx_def* [ %from.addr.0, %land.lhs.true254 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa341, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa341, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa341, metadata !4318, metadata !DIExpression()), !dbg !4388
  %arrayidx262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to.tr.ph, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4450
  %rt_rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**, !dbg !4450
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx263, align 8, !dbg !4450
  %arrayidx266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0.lcssa341, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4452
  %rt_rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**, !dbg !4452
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !4452
  tail call void @convert_move(%struct.rtx_def* %19, %struct.rtx_def* %20, i32 %unsignedp.tr.ph5.lcssa446) #8, !dbg !4453
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to.tr.ph, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4454
  %rt_rtx271 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !4454
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx271, align 8, !dbg !4454
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.0.lcssa341, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4455
  %rt_rtx275 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !4455
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx275, align 8, !dbg !4455
  br label %tailrecurse.outer, !dbg !4456

if.end276:                                        ; preds = %land.lhs.true254, %if.end249
  br i1 %3, label %if.then278, label %if.end361, !dbg !4457

if.then278:                                       ; preds = %if.end276
  %to.tr.ph.lcssa467 = phi %struct.rtx_def* [ %to.tr.ph, %if.end276 ]
  %idxprom148.lcssa382 = phi i64 [ %idxprom148, %if.end276 ], !dbg !4429
  %.lcssa373 = phi i8 [ %14, %if.end276 ], !dbg !4429
  %from_mode.0.lcssa353 = phi i32 [ %from_mode.0, %if.end276 ], !dbg !4388
  %from.addr.0.lcssa342 = phi %struct.rtx_def* [ %from.addr.0, %if.end276 ]
  %bf.clear.lcssa319 = phi i32 [ %bf.clear, %if.end276 ], !dbg !4390
  %idxprom.lcssa307 = phi i64 [ %idxprom, %if.end276 ], !dbg !4389
  %.lcssa295 = phi i8 [ %2, %if.end276 ], !dbg !4389
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa353, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa342, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa353, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa342, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa353, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa342, metadata !4318, metadata !DIExpression()), !dbg !4388
  %arrayidx280 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom148.lcssa382, !dbg !4458
  %25 = load i16, i16* %arrayidx280, align 2, !dbg !4458
  %arrayidx283 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom.lcssa307, !dbg !4458
  %26 = load i16, i16* %arrayidx283, align 2, !dbg !4458
  %cmp285 = icmp eq i16 %25, %26, !dbg !4458
  br i1 %cmp285, label %lor.lhs.false287, label %cond.end302, !dbg !4458

lor.lhs.false287:                                 ; preds = %if.then278
  %cmp291 = icmp eq i8 %.lcssa373, 9, !dbg !4458
  %cmp296 = icmp eq i8 %.lcssa295, 9, !dbg !4458
  %cmp298 = xor i1 %cmp291, %cmp296, !dbg !4458
  br i1 %cmp298, label %cond.end302, label %cond.true300, !dbg !4458

cond.true300:                                     ; preds = %lor.lhs.false287
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 427, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4458
  br label %cond.end302, !dbg !4458

cond.end302:                                      ; preds = %if.then278, %lor.lhs.false287, %cond.true300
  br i1 %cmp285, label %if.then312, label %if.else319, !dbg !4459

if.then312:                                       ; preds = %cond.end302
  %cmp316 = icmp eq i8 %.lcssa373, 9, !dbg !4460
  %cond318 = select i1 %cmp316, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0), !dbg !4460
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %cond318, metadata !4331, metadata !DIExpression()), !dbg !4462
  br label %if.end331, !dbg !4463

if.else319:                                       ; preds = %cond.end302
  %cmp326 = icmp ult i16 %25, %26, !dbg !4464
  %. = select i1 %cmp326, %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0), %struct.convert_optab_d* getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2)
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %., metadata !4331, metadata !DIExpression()), !dbg !4462
  br label %if.end331

if.end331:                                        ; preds = %if.else319, %if.then312
  %tab.1 = phi %struct.convert_optab_d* [ %cond318, %if.then312 ], [ %., %if.else319 ], !dbg !4466
  call void @llvm.dbg.value(metadata %struct.convert_optab_d* %tab.1, metadata !4331, metadata !DIExpression()), !dbg !4462
  %insn_code = getelementptr inbounds %struct.convert_optab_d, %struct.convert_optab_d* %tab.1, i64 0, i32 3, i64 %idxprom.lcssa307, i64 %idxprom148.lcssa382, i32 0, !dbg !4467
  %27 = load i32, i32* %insn_code, align 4, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %27, metadata !4324, metadata !DIExpression()), !dbg !4388
  %cmp336 = icmp eq i32 %27, 2956, !dbg !4468
  br i1 %cmp336, label %if.end342, label %if.then338, !dbg !4470

if.then338:                                       ; preds = %if.end331
  %cmp339 = icmp eq %struct.convert_optab_d* %tab.1, getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0), !dbg !4471
  %cond341 = select i1 %cmp339, i32 101, i32 102, !dbg !4473
  tail call void @emit_unop_insn(i32 %27, %struct.rtx_def* %to.tr.ph.lcssa467, %struct.rtx_def* %from.addr.0.lcssa342, i32 %cond341) #6, !dbg !4474
  br label %cleanup.cont932, !dbg !4475

if.end342:                                        ; preds = %if.end331
  %call343 = tail call %struct.rtx_def* @convert_optab_libfunc(%struct.convert_optab_d* %tab.1, i32 %bf.clear.lcssa319, i32 %from_mode.0.lcssa353) #6, !dbg !4476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call343, metadata !4325, metadata !DIExpression()), !dbg !4388
  %tobool344 = icmp eq %struct.rtx_def* %call343, null, !dbg !4477
  br i1 %tobool344, label %cond.true345, label %cond.end347, !dbg !4477

cond.true345:                                     ; preds = %if.end342
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 451, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4477
  br label %cond.end347, !dbg !4477

cond.end347:                                      ; preds = %if.end342, %cond.true345
  tail call void @start_sequence() #6, !dbg !4478
  %call349 = tail call %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) @emit_library_call_value(%struct.rtx_def* %call343, %struct.rtx_def* null, i32 1, i32 %bf.clear.lcssa319, i32 1, %struct.rtx_def* %from.addr.0.lcssa342, i32 %from_mode.0.lcssa353) #6, !dbg !4479
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call349, metadata !4327, metadata !DIExpression()), !dbg !4462
  %call350 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4480
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call350, metadata !4330, metadata !DIExpression()), !dbg !4462
  tail call void @end_sequence() #6, !dbg !4481
  %cmp351 = icmp eq %struct.convert_optab_d* %tab.1, getelementptr inbounds ([17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2), !dbg !4482
  br i1 %cmp351, label %cond.true353, label %cond.false355, !dbg !4483

cond.true353:                                     ; preds = %cond.end347
  %call354 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 102, i32 %bf.clear.lcssa319, %struct.rtx_def* %from.addr.0.lcssa342) #6, !dbg !4484
  br label %cond.end357, !dbg !4483

cond.false355:                                    ; preds = %cond.end347
  %call356 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 101, i32 %bf.clear.lcssa319, %struct.rtx_def* %from.addr.0.lcssa342) #6, !dbg !4485
  br label %cond.end357, !dbg !4483

cond.end357:                                      ; preds = %cond.false355, %cond.true353
  %cond358 = phi %struct.rtx_def* [ %call354, %cond.true353 ], [ %call356, %cond.false355 ], !dbg !4483
  tail call void @emit_libcall_block(%struct.rtx_def* %call350, %struct.rtx_def* %to.tr.ph.lcssa467, %struct.rtx_def* %call349, %struct.rtx_def* %cond358) #6, !dbg !4486
  br label %cleanup.cont932, !dbg !4487

if.end361:                                        ; preds = %if.end276
  %cmp365 = icmp eq i8 %2, 3, !dbg !4488
  br i1 %cmp365, label %if.then367, label %if.end398, !dbg !4489

if.then367:                                       ; preds = %if.end361
  %to.tr.ph.lcssa468 = phi %struct.rtx_def* [ %to.tr.ph, %if.end361 ]
  %unsignedp.tr.ph5.lcssa448 = phi i32 [ %unsignedp.tr.ph5, %if.end361 ]
  %from_mode.0.lcssa354 = phi i32 [ %from_mode.0, %if.end361 ], !dbg !4388
  %from.addr.0.lcssa343 = phi %struct.rtx_def* [ %from.addr.0, %if.end361 ]
  %idxprom.lcssa308 = phi i64 [ %idxprom, %if.end361 ], !dbg !4389
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa354, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa343, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa354, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa343, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.0.lcssa354, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0.lcssa343, metadata !4318, metadata !DIExpression()), !dbg !4388
  %arrayidx369 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom.lcssa308, !dbg !4490
  %28 = load i8, i8* %arrayidx369, align 1, !dbg !4490
  %conv371 = zext i8 %28 to i32, !dbg !4490
  %mul372 = shl nuw nsw i32 %conv371, 3, !dbg !4490
  %call375 = tail call i32 @smallest_mode_for_size(i32 %mul372, i32 2) #6, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %call375, metadata !4348, metadata !DIExpression()), !dbg !4492
  %idxprom378 = sext i32 %call375 to i64, !dbg !4493
  %insn_code380 = getelementptr inbounds [17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2, i32 3, i64 %idxprom.lcssa308, i64 %idxprom378, i32 0, !dbg !4493
  %29 = load i32, i32* %insn_code380, align 4, !dbg !4493
  %cmp381 = icmp eq i32 %29, 2956, !dbg !4493
  br i1 %cmp381, label %cond.true383, label %cond.end385, !dbg !4493

cond.true383:                                     ; preds = %if.then367
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 474, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4493
  br label %cond.end385, !dbg !4493

cond.end385:                                      ; preds = %if.then367, %cond.true383
  %cmp387 = icmp eq i32 %call375, %from_mode.0.lcssa354, !dbg !4494
  br i1 %cmp387, label %if.end391, label %if.then389, !dbg !4496

if.then389:                                       ; preds = %cond.end385
  %call390 = tail call %struct.rtx_def* @convert_to_mode(i32 %call375, %struct.rtx_def* %from.addr.0.lcssa343, i32 %unsignedp.tr.ph5.lcssa448) #8, !dbg !4497
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call390, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end391, !dbg !4498

if.end391:                                        ; preds = %cond.end385, %if.then389
  %from.addr.2 = phi %struct.rtx_def* [ %call390, %if.then389 ], [ %from.addr.0.lcssa343, %cond.end385 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.2, metadata !4318, metadata !DIExpression()), !dbg !4388
  %30 = load i32, i32* %insn_code380, align 4, !dbg !4499
  tail call void @emit_unop_insn(i32 %30, %struct.rtx_def* %to.tr.ph.lcssa468, %struct.rtx_def* %from.addr.2, i32 0) #6, !dbg !4500
  br label %cleanup.cont932

if.end398:                                        ; preds = %if.end361
  %cmp402 = icmp eq i8 %14, 3, !dbg !4501
  br i1 %cmp402, label %if.then404, label %if.end442, !dbg !4502

if.then404:                                       ; preds = %if.end398
  %arrayidx407 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom148, !dbg !4503
  %31 = load i8, i8* %arrayidx407, align 1, !dbg !4503
  %conv409 = zext i8 %31 to i32, !dbg !4503
  %mul410 = shl nuw nsw i32 %conv409, 3, !dbg !4503
  %call413 = tail call i32 @smallest_mode_for_size(i32 %mul410, i32 2) #6, !dbg !4504
  call void @llvm.dbg.value(metadata i32 %call413, metadata !4354, metadata !DIExpression()), !dbg !4505
  %idxprom414 = sext i32 %call413 to i64, !dbg !4506
  %insn_code418 = getelementptr inbounds [17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0, i32 3, i64 %idxprom414, i64 %idxprom148, i32 0, !dbg !4506
  %32 = load i32, i32* %insn_code418, align 4, !dbg !4506
  %cmp419 = icmp eq i32 %32, 2956, !dbg !4506
  br i1 %cmp419, label %cond.true421, label %cond.end423, !dbg !4506

cond.true421:                                     ; preds = %if.then404
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 489, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4506
  br label %cond.end423, !dbg !4506

cond.end423:                                      ; preds = %if.then404, %cond.true421
  %cmp425 = icmp eq i32 %bf.clear, %call413, !dbg !4507
  br i1 %cmp425, label %if.then427, label %if.end433, !dbg !4509

if.then427:                                       ; preds = %cond.end423
  %idxprom428 = zext i32 %bf.clear to i64, !dbg !4510
  %insn_code432 = getelementptr inbounds [17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 0, i32 3, i64 %idxprom428, i64 %idxprom148, i32 0, !dbg !4512
  %33 = load i32, i32* %insn_code432, align 4, !dbg !4512
  tail call void @emit_unop_insn(i32 %33, %struct.rtx_def* %to.tr.ph, %struct.rtx_def* %from.addr.0, i32 0) #6, !dbg !4513
  br label %cleanup440, !dbg !4514

if.end433:                                        ; preds = %cond.end423
  %call434 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call413) #6, !dbg !4515
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call434, metadata !4351, metadata !DIExpression()), !dbg !4505
  %34 = load i32, i32* %insn_code418, align 4, !dbg !4516
  tail call void @emit_unop_insn(i32 %34, %struct.rtx_def* %call434, %struct.rtx_def* %from.addr.0, i32 0) #6, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %call413, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call434, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %cleanup440, !dbg !4518

cleanup440:                                       ; preds = %if.end433, %if.then427
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then427 ], [ true, %if.end433 ]
  %from_mode.1 = phi i32 [ %from_mode.0, %if.then427 ], [ %call413, %if.end433 ], !dbg !4388
  %from.addr.3 = phi %struct.rtx_def* [ %from.addr.0, %if.then427 ], [ %call434, %if.end433 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.3, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.1, metadata !4321, metadata !DIExpression()), !dbg !4388
  br i1 %cleanup.dest.slot.1, label %cleanup440.if.end442_crit_edge, label %cleanup.cont932.loopexit

cleanup440.if.end442_crit_edge:                   ; preds = %cleanup440
  %.pre100 = zext i32 %from_mode.1 to i64, !dbg !4519
  br label %if.end442

if.end442:                                        ; preds = %cleanup440.if.end442_crit_edge, %if.end398
  %idxprom443.pre-phi = phi i64 [ %.pre100, %cleanup440.if.end442_crit_edge ], [ %idxprom148, %if.end398 ], !dbg !4519
  %from_mode.2 = phi i32 [ %from_mode.1, %cleanup440.if.end442_crit_edge ], [ %from_mode.0, %if.end398 ], !dbg !4520
  %from.addr.4 = phi %struct.rtx_def* [ %from.addr.3, %cleanup440.if.end442_crit_edge ], [ %from.addr.0, %if.end398 ], !dbg !4521
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2, metadata !4321, metadata !DIExpression()), !dbg !4388
  %arrayidx444 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom443.pre-phi, !dbg !4519
  %35 = load i8, i8* %arrayidx444, align 1, !dbg !4519
  %cmp446 = icmp eq i8 %35, 4, !dbg !4519
  br i1 %cmp446, label %lor.end468, label %lor.lhs.false448, !dbg !4519

lor.lhs.false448:                                 ; preds = %if.end442
  %cmp452 = icmp eq i8 %35, 6, !dbg !4519
  br i1 %cmp452, label %lor.end468, label %lor.rhs454, !dbg !4519

lor.rhs454:                                       ; preds = %lor.lhs.false448
  %cmp458 = icmp eq i8 %35, 5, !dbg !4519
  br i1 %cmp458, label %lor.end468, label %lor.rhs460, !dbg !4519

lor.rhs460:                                       ; preds = %lor.rhs454
  %cmp464 = icmp eq i8 %35, 7, !dbg !4519
  br label %lor.end468, !dbg !4519

lor.end468:                                       ; preds = %lor.rhs454, %lor.rhs460, %lor.lhs.false448, %if.end442
  %36 = phi i1 [ true, %lor.lhs.false448 ], [ true, %if.end442 ], [ true, %lor.rhs454 ], [ %cmp464, %lor.rhs460 ]
  %cmp473 = icmp eq i8 %2, 4, !dbg !4519
  br i1 %cmp473, label %lor.end495, label %lor.lhs.false475, !dbg !4519

lor.lhs.false475:                                 ; preds = %lor.end468
  %cmp479 = icmp eq i8 %2, 6, !dbg !4519
  br i1 %cmp479, label %lor.end495, label %lor.rhs481, !dbg !4519

lor.rhs481:                                       ; preds = %lor.lhs.false475
  %cmp485 = icmp eq i8 %2, 5, !dbg !4519
  br i1 %cmp485, label %lor.end495, label %lor.rhs487, !dbg !4519

lor.rhs487:                                       ; preds = %lor.rhs481
  %cmp491 = icmp eq i8 %2, 7, !dbg !4519
  br label %lor.end495, !dbg !4519

lor.end495:                                       ; preds = %lor.rhs481, %lor.rhs487, %lor.lhs.false475, %lor.end468
  %37 = phi i1 [ true, %lor.lhs.false475 ], [ true, %lor.end468 ], [ true, %lor.rhs481 ], [ %cmp491, %lor.rhs487 ]
  %38 = xor i1 %36, %37, !dbg !4519
  br i1 %38, label %cond.true499, label %cond.end501, !dbg !4519

cond.true499:                                     ; preds = %lor.end495
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 509, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4519
  br label %cond.end501, !dbg !4519

cond.end501:                                      ; preds = %lor.end495, %cond.true499
  br i1 %cmp446, label %if.then526, label %lor.lhs.false508, !dbg !4522

lor.lhs.false508:                                 ; preds = %cond.end501
  %cmp512 = icmp eq i8 %35, 6, !dbg !4522
  br i1 %cmp512, label %if.then526, label %lor.lhs.false514, !dbg !4522

lor.lhs.false514:                                 ; preds = %lor.lhs.false508
  %cmp518 = icmp eq i8 %35, 5, !dbg !4522
  br i1 %cmp518, label %if.then526, label %lor.lhs.false520, !dbg !4522

lor.lhs.false520:                                 ; preds = %lor.lhs.false514
  %cmp524 = icmp eq i8 %35, 7, !dbg !4522
  br i1 %cmp524, label %if.then526, label %if.end549, !dbg !4524

if.then526:                                       ; preds = %lor.lhs.false520, %lor.lhs.false514, %lor.lhs.false508, %cond.end501
  %to.tr.ph.lcssa469 = phi %struct.rtx_def* [ %to.tr.ph, %lor.lhs.false520 ], [ %to.tr.ph, %lor.lhs.false514 ], [ %to.tr.ph, %lor.lhs.false508 ], [ %to.tr.ph, %cond.end501 ]
  %idxprom443.pre-phi.lcssa = phi i64 [ %idxprom443.pre-phi, %lor.lhs.false520 ], [ %idxprom443.pre-phi, %lor.lhs.false514 ], [ %idxprom443.pre-phi, %lor.lhs.false508 ], [ %idxprom443.pre-phi, %cond.end501 ], !dbg !4519
  %from.addr.4.lcssa = phi %struct.rtx_def* [ %from.addr.4, %lor.lhs.false520 ], [ %from.addr.4, %lor.lhs.false514 ], [ %from.addr.4, %lor.lhs.false508 ], [ %from.addr.4, %cond.end501 ], !dbg !4521
  %.lcssa391 = phi i8 [ %35, %lor.lhs.false520 ], [ %35, %lor.lhs.false514 ], [ %35, %lor.lhs.false508 ], [ %35, %cond.end501 ], !dbg !4519
  %idxprom.lcssa309 = phi i64 [ %idxprom, %lor.lhs.false520 ], [ %idxprom, %lor.lhs.false514 ], [ %idxprom, %lor.lhs.false508 ], [ %idxprom, %cond.end501 ], !dbg !4389
  %.lcssa297 = phi i8 [ %2, %lor.lhs.false520 ], [ %2, %lor.lhs.false514 ], [ %2, %lor.lhs.false508 ], [ %2, %cond.end501 ], !dbg !4389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa, metadata !4318, metadata !DIExpression()), !dbg !4388
  %cmp533 = icmp eq i8 %.lcssa391, %.lcssa297, !dbg !4525
  br i1 %cmp533, label %land.lhs.true535, label %if.else547, !dbg !4528

land.lhs.true535:                                 ; preds = %if.then526
  %arrayidx537 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom443.pre-phi.lcssa, !dbg !4529
  %39 = load i8, i8* %arrayidx537, align 1, !dbg !4529
  %arrayidx541 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom.lcssa309, !dbg !4530
  %40 = load i8, i8* %arrayidx541, align 1, !dbg !4530
  %cmp544 = icmp ult i8 %39, %40, !dbg !4531
  br i1 %cmp544, label %if.then546, label %if.else547, !dbg !4532

if.then546:                                       ; preds = %land.lhs.true535
  tail call void @expand_fixed_convert(%struct.rtx_def* %to.tr.ph.lcssa469, %struct.rtx_def* %from.addr.4.lcssa, i32 0, i32 0) #6, !dbg !4533
  br label %cleanup.cont932, !dbg !4533

if.else547:                                       ; preds = %land.lhs.true535, %if.then526
  tail call void @expand_fixed_convert(%struct.rtx_def* %to.tr.ph.lcssa469, %struct.rtx_def* %from.addr.4.lcssa, i32 0, i32 1) #6, !dbg !4534
  br label %cleanup.cont932

if.end549:                                        ; preds = %lor.lhs.false520
  %arrayidx551 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom443.pre-phi, !dbg !4535
  %41 = load i8, i8* %arrayidx551, align 1, !dbg !4535
  %arrayidx558 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4536
  %42 = load i8, i8* %arrayidx558, align 1, !dbg !4536
  %cmp564 = icmp ult i8 %41, %42, !dbg !4537
  br i1 %cmp564, label %land.lhs.true566, label %if.end680, !dbg !4538

land.lhs.true566:                                 ; preds = %if.end549
  %cmp574 = icmp ugt i8 %42, 4, !dbg !4539
  br i1 %cmp574, label %if.then576, label %if.end680, !dbg !4540

if.then576:                                       ; preds = %land.lhs.true566
  %to.tr.ph.lcssa470 = phi %struct.rtx_def* [ %to.tr.ph, %land.lhs.true566 ]
  %.lcssa460 = phi i32* [ %0, %land.lhs.true566 ], !dbg !4388
  %unsignedp.tr.ph5.lcssa450 = phi i32 [ %unsignedp.tr.ph5, %land.lhs.true566 ]
  %tobool.lcssa439 = phi i1 [ %tobool, %land.lhs.true566 ], !dbg !4388
  %arrayidx551.lcssa = phi i8* [ %arrayidx551, %land.lhs.true566 ], !dbg !4535
  %.lcssa416 = phi i8 [ %42, %land.lhs.true566 ], !dbg !4536
  %from_mode.2.lcssa404 = phi i32 [ %from_mode.2, %land.lhs.true566 ], !dbg !4520
  %from.addr.4.lcssa398 = phi %struct.rtx_def* [ %from.addr.4, %land.lhs.true566 ], !dbg !4521
  %cond25.lcssa334 = phi i32 [ %cond25, %land.lhs.true566 ], !dbg !4393
  %bf.clear.lcssa322 = phi i32 [ %bf.clear, %land.lhs.true566 ], !dbg !4390
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa404, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa398, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %cond25.lcssa334, metadata !4326, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa404, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa398, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %cond25.lcssa334, metadata !4326, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa404, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa398, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %cond25.lcssa334, metadata !4326, metadata !DIExpression()), !dbg !4388
  %conv581 = zext i8 %.lcssa416 to i32, !dbg !4541
  %sub = add nuw nsw i32 %conv581, 3, !dbg !4541
  %div = lshr i32 %sub, 2, !dbg !4541
  call void @llvm.dbg.value(metadata i32 %div, metadata !4363, metadata !DIExpression()), !dbg !4542
  %call582 = tail call i32 @can_extend_p(i32 %bf.clear.lcssa322, i32 %from_mode.2.lcssa404, i32 %unsignedp.tr.ph5.lcssa450) #6, !dbg !4543
  call void @llvm.dbg.value(metadata i32 %call582, metadata !4324, metadata !DIExpression()), !dbg !4388
  %cmp583 = icmp eq i32 %call582, 2956, !dbg !4544
  br i1 %cmp583, label %if.else596, label %if.then585, !dbg !4545

if.then585:                                       ; preds = %if.then576
  %43 = load i32, i32* @optimize, align 4, !dbg !4546
  %cmp586 = icmp sgt i32 %43, 0, !dbg !4549
  br i1 %cmp586, label %land.lhs.true588, label %if.end595, !dbg !4550

land.lhs.true588:                                 ; preds = %if.then585
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.4.lcssa398, i64 0, i32 0, !dbg !4551
  %bf.load589 = load i32, i32* %44, align 8, !dbg !4551
  %bf.clear590 = and i32 %bf.load589, 65535, !dbg !4551
  %cmp591 = icmp eq i32 %bf.clear590, 39, !dbg !4552
  br i1 %cmp591, label %if.then593, label %if.end595, !dbg !4553

if.then593:                                       ; preds = %land.lhs.true588
  %call594 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.2.lcssa404, %struct.rtx_def* %from.addr.4.lcssa398) #6, !dbg !4554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call594, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end595, !dbg !4555

if.end595:                                        ; preds = %if.then593, %land.lhs.true588, %if.then585
  %from.addr.5 = phi %struct.rtx_def* [ %call594, %if.then593 ], [ %from.addr.4.lcssa398, %land.lhs.true588 ], [ %from.addr.4.lcssa398, %if.then585 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.5, metadata !4318, metadata !DIExpression()), !dbg !4388
  tail call void @emit_unop_insn(i32 %call582, %struct.rtx_def* %to.tr.ph.lcssa470, %struct.rtx_def* %from.addr.5, i32 %cond25.lcssa334) #6, !dbg !4556
  br label %cleanup.cont932, !dbg !4557

if.else596:                                       ; preds = %if.then576
  %45 = load i8, i8* %arrayidx551.lcssa, align 1, !dbg !4558
  %cmp604 = icmp ult i8 %45, 4, !dbg !4559
  br i1 %cmp604, label %land.lhs.true606, label %if.end626, !dbg !4560

land.lhs.true606:                                 ; preds = %if.else596
  %46 = load i32, i32* @word_mode, align 4, !dbg !4561
  %call607 = tail call i32 @can_extend_p(i32 %bf.clear.lcssa322, i32 %46, i32 %unsignedp.tr.ph5.lcssa450) #6, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %call607, metadata !4324, metadata !DIExpression()), !dbg !4388
  %cmp608 = icmp eq i32 %call607, 2956, !dbg !4563
  br i1 %cmp608, label %if.end626, label %if.then610, !dbg !4564

if.then610:                                       ; preds = %land.lhs.true606
  %47 = load i32, i32* @word_mode, align 4, !dbg !4565
  %call611 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %47) #6, !dbg !4566
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call611, metadata !4364, metadata !DIExpression()), !dbg !4567
  %bf.load612 = load i32, i32* %.lcssa460, align 8, !dbg !4568
  %bf.clear613 = and i32 %bf.load612, 65535, !dbg !4568
  %cmp614 = icmp eq i32 %bf.clear613, 37, !dbg !4568
  br i1 %cmp614, label %if.then616, label %if.end623, !dbg !4570

if.then616:                                       ; preds = %if.then610
  %call617 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %to.tr.ph.lcssa470, %struct.rtx_def* %from.addr.4.lcssa398) #6, !dbg !4571
  %tobool618 = icmp eq i32 %call617, 0, !dbg !4571
  br i1 %tobool618, label %if.end621, label %if.then619, !dbg !4574

if.then619:                                       ; preds = %if.then616
  %call620 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.2.lcssa404, %struct.rtx_def* %from.addr.4.lcssa398) #6, !dbg !4575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call620, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end621, !dbg !4576

if.end621:                                        ; preds = %if.then616, %if.then619
  %from.addr.6 = phi %struct.rtx_def* [ %call620, %if.then619 ], [ %from.addr.4.lcssa398, %if.then616 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.6, metadata !4318, metadata !DIExpression()), !dbg !4388
  %call622 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %to.tr.ph.lcssa470) #6, !dbg !4577
  br label %if.end623, !dbg !4578

if.end623:                                        ; preds = %if.end621, %if.then610
  %from.addr.7 = phi %struct.rtx_def* [ %from.addr.6, %if.end621 ], [ %from.addr.4.lcssa398, %if.then610 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.7, metadata !4318, metadata !DIExpression()), !dbg !4388
  tail call void @convert_move(%struct.rtx_def* %call611, %struct.rtx_def* %from.addr.7, i32 %unsignedp.tr.ph5.lcssa450) #8, !dbg !4579
  tail call void @emit_unop_insn(i32 %call607, %struct.rtx_def* %to.tr.ph.lcssa470, %struct.rtx_def* %call611, i32 %cond25.lcssa334) #6, !dbg !4580
  ret void, !dbg !4581

if.end626:                                        ; preds = %land.lhs.true606, %if.else596
  %to.tr.ph475 = phi %struct.rtx_def* [ %to.tr.ph.lcssa470, %land.lhs.true606 ], [ %to.tr.ph.lcssa470, %if.else596 ]
  tail call void @start_sequence() #6, !dbg !4582
  %call627 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %to.tr.ph475, %struct.rtx_def* %from.addr.4.lcssa398) #6, !dbg !4583
  %tobool628 = icmp eq i32 %call627, 0, !dbg !4583
  br i1 %tobool628, label %if.end631, label %if.then629, !dbg !4585

if.then629:                                       ; preds = %if.end626
  %call630 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.2.lcssa404, %struct.rtx_def* %from.addr.4.lcssa398) #6, !dbg !4586
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call630, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end631, !dbg !4587

if.end631:                                        ; preds = %if.end626, %if.then629
  %from.addr.8 = phi %struct.rtx_def* [ %call630, %if.then629 ], [ %from.addr.4.lcssa398, %if.end626 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.8, metadata !4318, metadata !DIExpression()), !dbg !4388
  %48 = load i8, i8* %arrayidx551.lcssa, align 1, !dbg !4588
  %cmp639 = icmp ult i8 %48, 4, !dbg !4590
  %49 = load i32, i32* @word_mode, align 4, !dbg !4591
  %lowpart_mode.0 = select i1 %cmp639, i32 %49, i32 %from_mode.2.lcssa404, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %lowpart_mode.0, metadata !4362, metadata !DIExpression()), !dbg !4542
  %call644 = tail call %struct.rtx_def* @convert_to_mode(i32 %lowpart_mode.0, %struct.rtx_def* %from.addr.8, i32 %unsignedp.tr.ph5.lcssa450) #8, !dbg !4592
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call644, metadata !4360, metadata !DIExpression()), !dbg !4542
  %50 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4593
  %call645 = tail call %struct.rtx_def* %50(i32 %lowpart_mode.0, %struct.rtx_def* %to.tr.ph475) #6, !dbg !4593
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call645, metadata !4358, metadata !DIExpression()), !dbg !4542
  %call646 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call645, %struct.rtx_def* %call644) #8, !dbg !4594
  br i1 %tobool.lcssa439, label %if.else649, label %if.then648, !dbg !4595

if.then648:                                       ; preds = %if.end631
  %51 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4596
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !4359, metadata !DIExpression()), !dbg !4542
  br label %if.end652, !dbg !4598

if.else649:                                       ; preds = %if.end631
  %52 = load i32, i32* @word_mode, align 4, !dbg !4599
  %call650 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %52) #6, !dbg !4600
  %53 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4601
  %call651 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %call650, i32 85, %struct.rtx_def* %call644, %struct.rtx_def* %53, i32 0, i32 0, i32 -1) #6, !dbg !4602
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call651, metadata !4359, metadata !DIExpression()), !dbg !4542
  br label %if.end652

if.end652:                                        ; preds = %if.else649, %if.then648
  %fill_value.0 = phi %struct.rtx_def* [ %51, %if.then648 ], [ %call651, %if.else649 ], !dbg !4603
  call void @llvm.dbg.value(metadata %struct.rtx_def* %fill_value.0, metadata !4359, metadata !DIExpression()), !dbg !4542
  %idxprom653 = zext i32 %lowpart_mode.0 to i64, !dbg !4604
  %arrayidx654 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom653, !dbg !4604
  %54 = load i8, i8* %arrayidx654, align 1, !dbg !4604
  %55 = lshr i8 %54, 2, !dbg !4605
  %div657 = zext i8 %55 to i32, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %div657, metadata !4361, metadata !DIExpression()), !dbg !4542
  br label %for.cond, !dbg !4606

for.cond:                                         ; preds = %for.inc, %if.end652
  %i.0 = phi i32 [ %div657, %if.end652 ], [ %inc, %for.inc ], !dbg !4607
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4361, metadata !DIExpression()), !dbg !4542
  %cmp658 = icmp ult i32 %i.0, %div, !dbg !4608
  br i1 %cmp658, label %for.body, label %for.end, !dbg !4609

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4368, metadata !DIExpression()), !dbg !4610
  %call660 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %to.tr.ph475, i32 %i.0, i32 1, i32 %bf.clear.lcssa322) #6, !dbg !4611
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call660, metadata !4372, metadata !DIExpression()), !dbg !4610
  %tobool661 = icmp eq %struct.rtx_def* %call660, null, !dbg !4612
  br i1 %tobool661, label %cond.true662, label %cond.end664, !dbg !4612

cond.true662:                                     ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 601, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4612
  br label %cond.end664, !dbg !4612

cond.end664:                                      ; preds = %for.body, %cond.true662
  %cmp666 = icmp eq %struct.rtx_def* %fill_value.0, %call660, !dbg !4613
  br i1 %cmp666, label %for.inc, label %if.then668, !dbg !4615

if.then668:                                       ; preds = %cond.end664
  %call669 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call660, %struct.rtx_def* %fill_value.0) #8, !dbg !4616
  br label %for.inc, !dbg !4616

for.inc:                                          ; preds = %cond.end664, %if.then668
  %inc = add nuw nsw i32 %i.0, 1, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4361, metadata !DIExpression()), !dbg !4542
  br label %for.cond, !dbg !4618, !llvm.loop !4619

for.end:                                          ; preds = %for.cond
  %call671 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call671, metadata !4355, metadata !DIExpression()), !dbg !4542
  tail call void @end_sequence() #6, !dbg !4622
  %call672 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call671) #6, !dbg !4623
  br label %cleanup.cont932, !dbg !4624

if.end680:                                        ; preds = %land.lhs.true566, %if.end549
  %cmp688 = icmp ugt i8 %41, 4, !dbg !4625
  br i1 %cmp688, label %land.lhs.true690, label %if.end736, !dbg !4627

land.lhs.true690:                                 ; preds = %if.end680
  %cmp698 = icmp ult i8 %42, 5, !dbg !4628
  br i1 %cmp698, label %if.then700, label %if.end736, !dbg !4629

if.then700:                                       ; preds = %land.lhs.true690
  %from_mode.2.lcssa405 = phi i32 [ %from_mode.2, %land.lhs.true690 ], !dbg !4520
  %from.addr.4.lcssa399 = phi %struct.rtx_def* [ %from.addr.4, %land.lhs.true690 ], !dbg !4521
  %idxprom.lcssa311 = phi i64 [ %idxprom, %land.lhs.true690 ], !dbg !4389
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa405, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa399, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa405, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa399, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa405, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa399, metadata !4318, metadata !DIExpression()), !dbg !4388
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.4.lcssa399, i64 0, i32 0, !dbg !4630
  %bf.load701 = load i32, i32* %56, align 8, !dbg !4630
  %bf.clear702 = and i32 %bf.load701, 65535, !dbg !4630
  %cmp703 = icmp eq i32 %bf.clear702, 43, !dbg !4630
  br i1 %cmp703, label %land.lhs.true705, label %lor.lhs.false722, !dbg !4633

land.lhs.true705:                                 ; preds = %if.then700
  %bf.clear708 = and i32 %bf.load701, 134217728, !dbg !4634
  %tobool709 = icmp eq i32 %bf.clear708, 0, !dbg !4634
  br i1 %tobool709, label %land.lhs.true710, label %lor.lhs.false722, !dbg !4635

land.lhs.true710:                                 ; preds = %land.lhs.true705
  %arrayidx712 = getelementptr inbounds [87 x i8], [87 x i8]* @direct_load, i64 0, i64 %idxprom.lcssa311, !dbg !4636
  %57 = load i8, i8* %arrayidx712, align 1, !dbg !4636
  %tobool714 = icmp eq i8 %57, 0, !dbg !4636
  br i1 %tobool714, label %lor.lhs.false722, label %land.lhs.true715, !dbg !4637

land.lhs.true715:                                 ; preds = %land.lhs.true710
  %arrayidx718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.4.lcssa399, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4638
  %rt_rtx719 = bitcast %union.rtunion_def* %arrayidx718 to %struct.rtx_def**, !dbg !4638
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx719, align 8, !dbg !4638
  %call720 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %58) #6, !dbg !4639
  %tobool721 = icmp eq i32 %call720, 0, !dbg !4639
  br i1 %tobool721, label %if.end734, label %land.lhs.true715.lor.lhs.false722_crit_edge, !dbg !4640

land.lhs.true715.lor.lhs.false722_crit_edge:      ; preds = %land.lhs.true715
  %bf.load723.pre = load i32, i32* %56, align 8, !dbg !4641
  %.pre = and i32 %bf.load723.pre, 65535, !dbg !4641
  br label %lor.lhs.false722, !dbg !4640

lor.lhs.false722:                                 ; preds = %land.lhs.true715.lor.lhs.false722_crit_edge, %land.lhs.true710, %land.lhs.true705, %if.then700
  %bf.clear724.pre-phi = phi i32 [ %.pre, %land.lhs.true715.lor.lhs.false722_crit_edge ], [ 43, %land.lhs.true710 ], [ 43, %land.lhs.true705 ], [ %bf.clear702, %if.then700 ], !dbg !4641
  %cmp725 = icmp eq i32 %bf.clear724.pre-phi, 37, !dbg !4641
  br i1 %cmp725, label %if.end734, label %lor.lhs.false727, !dbg !4642

lor.lhs.false727:                                 ; preds = %lor.lhs.false722
  %cmp730 = icmp eq i32 %bf.clear724.pre-phi, 39, !dbg !4643
  br i1 %cmp730, label %if.end734, label %if.then732, !dbg !4644

if.then732:                                       ; preds = %lor.lhs.false727
  %call733 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.2.lcssa405, %struct.rtx_def* %from.addr.4.lcssa399) #6, !dbg !4645
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call733, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end734, !dbg !4646

if.end734:                                        ; preds = %land.lhs.true715, %if.then732, %lor.lhs.false727, %lor.lhs.false722
  %from.addr.9 = phi %struct.rtx_def* [ %from.addr.4.lcssa399, %lor.lhs.false722 ], [ %from.addr.4.lcssa399, %lor.lhs.false727 ], [ %call733, %if.then732 ], [ %from.addr.4.lcssa399, %land.lhs.true715 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.9, metadata !4318, metadata !DIExpression()), !dbg !4388
  %59 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4647
  %60 = load i32, i32* @word_mode, align 4, !dbg !4648
  %call735 = tail call %struct.rtx_def* %59(i32 %60, %struct.rtx_def* %from.addr.9) #6, !dbg !4647
  br label %tailrecurse.outer3, !dbg !4649

if.end736:                                        ; preds = %land.lhs.true690, %if.end680
  %cmp751 = icmp ult i8 %42, %41, !dbg !4650
  br i1 %cmp751, label %if.then753, label %if.end805, !dbg !4652

if.then753:                                       ; preds = %if.end736
  %to.tr.ph.lcssa471 = phi %struct.rtx_def* [ %to.tr.ph, %if.end736 ]
  %from_mode.2.lcssa406 = phi i32 [ %from_mode.2, %if.end736 ], !dbg !4520
  %from.addr.4.lcssa400 = phi %struct.rtx_def* [ %from.addr.4, %if.end736 ], !dbg !4521
  %bf.clear.lcssa324 = phi i32 [ %bf.clear, %if.end736 ], !dbg !4390
  %idxprom.lcssa312 = phi i64 [ %idxprom, %if.end736 ], !dbg !4389
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa406, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa400, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa406, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa400, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa406, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa400, metadata !4318, metadata !DIExpression()), !dbg !4388
  %61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.4.lcssa400, i64 0, i32 0, !dbg !4653
  %bf.load754 = load i32, i32* %61, align 8, !dbg !4653
  %bf.clear755 = and i32 %bf.load754, 65535, !dbg !4653
  %cmp756 = icmp eq i32 %bf.clear755, 43, !dbg !4653
  br i1 %cmp756, label %land.lhs.true758, label %lor.lhs.false775, !dbg !4656

land.lhs.true758:                                 ; preds = %if.then753
  %bf.clear761 = and i32 %bf.load754, 134217728, !dbg !4657
  %tobool762 = icmp eq i32 %bf.clear761, 0, !dbg !4657
  br i1 %tobool762, label %land.lhs.true763, label %lor.lhs.false775, !dbg !4658

land.lhs.true763:                                 ; preds = %land.lhs.true758
  %arrayidx765 = getelementptr inbounds [87 x i8], [87 x i8]* @direct_load, i64 0, i64 %idxprom.lcssa312, !dbg !4659
  %62 = load i8, i8* %arrayidx765, align 1, !dbg !4659
  %tobool767 = icmp eq i8 %62, 0, !dbg !4659
  br i1 %tobool767, label %lor.lhs.false775, label %land.lhs.true768, !dbg !4660

land.lhs.true768:                                 ; preds = %land.lhs.true763
  %arrayidx771 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.4.lcssa400, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4661
  %rt_rtx772 = bitcast %union.rtunion_def* %arrayidx771 to %struct.rtx_def**, !dbg !4661
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx772, align 8, !dbg !4661
  %call773 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %63) #6, !dbg !4662
  %tobool774 = icmp eq i32 %call773, 0, !dbg !4662
  br i1 %tobool774, label %if.end787, label %land.lhs.true768.lor.lhs.false775_crit_edge, !dbg !4663

land.lhs.true768.lor.lhs.false775_crit_edge:      ; preds = %land.lhs.true768
  %bf.load776.pre = load i32, i32* %61, align 8, !dbg !4664
  %.pre99 = and i32 %bf.load776.pre, 65535, !dbg !4664
  br label %lor.lhs.false775, !dbg !4663

lor.lhs.false775:                                 ; preds = %land.lhs.true768.lor.lhs.false775_crit_edge, %land.lhs.true763, %land.lhs.true758, %if.then753
  %bf.clear777.pre-phi = phi i32 [ %.pre99, %land.lhs.true768.lor.lhs.false775_crit_edge ], [ 43, %land.lhs.true763 ], [ 43, %land.lhs.true758 ], [ %bf.clear755, %if.then753 ], !dbg !4664
  %cmp778 = icmp eq i32 %bf.clear777.pre-phi, 37, !dbg !4664
  br i1 %cmp778, label %if.end787, label %lor.lhs.false780, !dbg !4665

lor.lhs.false780:                                 ; preds = %lor.lhs.false775
  %cmp783 = icmp eq i32 %bf.clear777.pre-phi, 39, !dbg !4666
  br i1 %cmp783, label %if.end787, label %if.then785, !dbg !4667

if.then785:                                       ; preds = %lor.lhs.false780
  %call786 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.2.lcssa406, %struct.rtx_def* %from.addr.4.lcssa400) #6, !dbg !4668
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call786, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end787, !dbg !4669

if.end787:                                        ; preds = %land.lhs.true768, %if.then785, %lor.lhs.false780, %lor.lhs.false775
  %from.addr.10 = phi %struct.rtx_def* [ %from.addr.4.lcssa400, %lor.lhs.false775 ], [ %from.addr.4.lcssa400, %lor.lhs.false780 ], [ %call786, %if.then785 ], [ %from.addr.4.lcssa400, %land.lhs.true768 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.10, metadata !4318, metadata !DIExpression()), !dbg !4388
  %64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from.addr.10, i64 0, i32 0, !dbg !4670
  %bf.load788 = load i32, i32* %64, align 8, !dbg !4670
  %bf.clear789 = and i32 %bf.load788, 65535, !dbg !4670
  %cmp790 = icmp eq i32 %bf.clear789, 37, !dbg !4670
  br i1 %cmp790, label %land.lhs.true792, label %if.end802, !dbg !4672

land.lhs.true792:                                 ; preds = %if.end787
  %call793 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %from.addr.10) #8, !dbg !4673
  %cmp794 = icmp ult i32 %call793, 53, !dbg !4674
  br i1 %cmp794, label %land.lhs.true796, label %if.end802, !dbg !4675

land.lhs.true796:                                 ; preds = %land.lhs.true792
  %call797 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %from.addr.10) #8, !dbg !4676
  %call798 = tail call zeroext i8 @ix86_hard_regno_mode_ok(i32 %call797, i32 %bf.clear.lcssa324) #6, !dbg !4676
  %tobool799 = icmp eq i8 %call798, 0, !dbg !4676
  br i1 %tobool799, label %if.then800, label %if.end802, !dbg !4677

if.then800:                                       ; preds = %land.lhs.true796
  %call801 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %from.addr.10) #6, !dbg !4678
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call801, metadata !4318, metadata !DIExpression()), !dbg !4388
  br label %if.end802, !dbg !4679

if.end802:                                        ; preds = %land.lhs.true796, %if.then800, %land.lhs.true792, %if.end787
  %from.addr.11 = phi %struct.rtx_def* [ %from.addr.10, %land.lhs.true796 ], [ %call801, %if.then800 ], [ %from.addr.10, %land.lhs.true792 ], [ %from.addr.10, %if.end787 ], !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.11, metadata !4318, metadata !DIExpression()), !dbg !4388
  %65 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4680
  %call803 = tail call %struct.rtx_def* %65(i32 %bf.clear.lcssa324, %struct.rtx_def* %from.addr.11) #6, !dbg !4680
  %call804 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.tr.ph.lcssa471, %struct.rtx_def* %call803) #8, !dbg !4681
  br label %cleanup.cont932, !dbg !4682

if.end805:                                        ; preds = %if.end736
  br i1 %cmp564, label %if.then822, label %if.end887, !dbg !4683

if.then822:                                       ; preds = %if.end805
  %call823 = tail call i32 @can_extend_p(i32 %bf.clear, i32 %from_mode.2, i32 %unsignedp.tr.ph5) #6, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %call823, metadata !4324, metadata !DIExpression()), !dbg !4388
  %cmp824 = icmp eq i32 %call823, 2956, !dbg !4685
  br i1 %cmp824, label %for.cond828.preheader, label %if.then826, !dbg !4686

for.cond828.preheader:                            ; preds = %if.then822
  br label %for.cond828, !dbg !4687

if.then826:                                       ; preds = %if.then822
  %to.tr.ph.lcssa473 = phi %struct.rtx_def* [ %to.tr.ph, %if.then822 ]
  %call823.lcssa = phi i32 [ %call823, %if.then822 ], !dbg !4684
  %from.addr.4.lcssa402 = phi %struct.rtx_def* [ %from.addr.4, %if.then822 ], !dbg !4521
  %cond25.lcssa338 = phi i32 [ %cond25, %if.then822 ], !dbg !4393
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa402, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %cond25.lcssa338, metadata !4326, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa402, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %cond25.lcssa338, metadata !4326, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa402, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %cond25.lcssa338, metadata !4326, metadata !DIExpression()), !dbg !4388
  tail call void @emit_unop_insn(i32 %call823.lcssa, %struct.rtx_def* %to.tr.ph.lcssa473, %struct.rtx_def* %from.addr.4.lcssa402, i32 %cond25.lcssa338) #6, !dbg !4688
  br label %cleanup.cont932, !dbg !4690

for.cond828:                                      ; preds = %for.cond828.preheader, %for.inc853
  %intermediate.0 = phi i32 [ %conv856, %for.inc853 ], [ %from_mode.2, %for.cond828.preheader ], !dbg !4691
  call void @llvm.dbg.value(metadata i32 %intermediate.0, metadata !4373, metadata !DIExpression()), !dbg !4692
  %cmp829 = icmp eq i32 %intermediate.0, 0, !dbg !4693
  br i1 %cmp829, label %for.end857, label %for.body831, !dbg !4687

for.body831:                                      ; preds = %for.cond828
  %call832 = tail call i32 @can_extend_p(i32 %bf.clear, i32 %intermediate.0, i32 %unsignedp.tr.ph5) #6, !dbg !4694
  %cmp833 = icmp eq i32 %call832, 2956, !dbg !4695
  br i1 %cmp833, label %lor.lhs.false835, label %land.lhs.true846, !dbg !4696

lor.lhs.false835:                                 ; preds = %for.body831
  %66 = load i8, i8* %arrayidx558, align 1, !dbg !4697
  %idxprom840 = zext i32 %intermediate.0 to i64, !dbg !4698
  %arrayidx841 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom840, !dbg !4698
  %67 = load i8, i8* %arrayidx841, align 1, !dbg !4698
  %cmp844 = icmp ult i8 %66, %67, !dbg !4699
  br i1 %cmp844, label %land.lhs.true846, label %for.inc853, !dbg !4700

land.lhs.true846:                                 ; preds = %for.body831, %lor.lhs.false835
  %call847 = tail call i32 @can_extend_p(i32 %intermediate.0, i32 %from_mode.2, i32 %unsignedp.tr.ph5) #6, !dbg !4701
  %cmp848 = icmp eq i32 %call847, 2956, !dbg !4702
  br i1 %cmp848, label %land.lhs.true846.for.inc853_crit_edge, label %if.then850, !dbg !4703

land.lhs.true846.for.inc853_crit_edge:            ; preds = %land.lhs.true846
  %.pre101 = zext i32 %intermediate.0 to i64, !dbg !4704
  br label %for.inc853, !dbg !4703

if.then850:                                       ; preds = %land.lhs.true846
  %intermediate.0.lcssa291 = phi i32 [ %intermediate.0, %land.lhs.true846 ], !dbg !4691
  call void @llvm.dbg.value(metadata i32 %intermediate.0.lcssa291, metadata !4373, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i32 %intermediate.0.lcssa291, metadata !4373, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i32 %intermediate.0.lcssa291, metadata !4373, metadata !DIExpression()), !dbg !4692
  %call851 = tail call %struct.rtx_def* @convert_to_mode(i32 %intermediate.0.lcssa291, %struct.rtx_def* %from.addr.4, i32 %unsignedp.tr.ph5) #8, !dbg !4705
  br label %tailrecurse, !dbg !4383

for.inc853:                                       ; preds = %land.lhs.true846.for.inc853_crit_edge, %lor.lhs.false835
  %idxprom854.pre-phi = phi i64 [ %.pre101, %land.lhs.true846.for.inc853_crit_edge ], [ %idxprom840, %lor.lhs.false835 ], !dbg !4704
  %arrayidx855 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom854.pre-phi, !dbg !4704
  %68 = load i8, i8* %arrayidx855, align 1, !dbg !4704
  %conv856 = zext i8 %68 to i32, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %conv856, metadata !4373, metadata !DIExpression()), !dbg !4692
  br label %for.cond828, !dbg !4706, !llvm.loop !4707

for.end857:                                       ; preds = %for.cond828
  %to.tr.ph.lcssa474 = phi %struct.rtx_def* [ %to.tr.ph, %for.cond828 ]
  %unsignedp.tr.ph5.lcssa454 = phi i32 [ %unsignedp.tr.ph5, %for.cond828 ]
  %arrayidx551.lcssa431 = phi i8* [ %arrayidx551, %for.cond828 ], !dbg !4535
  %arrayidx558.lcssa426 = phi i8* [ %arrayidx558, %for.cond828 ], !dbg !4536
  %from_mode.2.lcssa409 = phi i32 [ %from_mode.2, %for.cond828 ], !dbg !4520
  %from.addr.4.lcssa403 = phi %struct.rtx_def* [ %from.addr.4, %for.cond828 ], !dbg !4521
  %bf.clear.lcssa327 = phi i32 [ %bf.clear, %for.cond828 ], !dbg !4390
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa409, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa403, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa409, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa403, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa409, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa403, metadata !4318, metadata !DIExpression()), !dbg !4388
  %69 = load i8, i8* %arrayidx558.lcssa426, align 1, !dbg !4709
  %conv861 = zext i8 %69 to i32, !dbg !4709
  %70 = load i8, i8* %arrayidx551.lcssa431, align 1, !dbg !4710
  %conv868 = zext i8 %70 to i32, !dbg !4710
  %mul8622 = sub nsw i32 %conv861, %conv868, !dbg !4711
  %sub872 = shl nsw i32 %mul8622, 3, !dbg !4711
  %conv873 = sext i32 %sub872 to i64, !dbg !4709
  %call874 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv873) #6, !dbg !4712
  call void @llvm.dbg.value(metadata %union.tree_node* %call874, metadata !4379, metadata !DIExpression()), !dbg !4692
  %71 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4713
  %call875 = tail call %struct.rtx_def* @force_reg(i32 %from_mode.2.lcssa409, %struct.rtx_def* %from.addr.4.lcssa403) #6, !dbg !4714
  %call876 = tail call %struct.rtx_def* %71(i32 %bf.clear.lcssa327, %struct.rtx_def* %call875) #6, !dbg !4713
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call876, metadata !4318, metadata !DIExpression()), !dbg !4388
  %call877 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear.lcssa327, %struct.rtx_def* %call876, %union.tree_node* %call874, %struct.rtx_def* %to.tr.ph.lcssa474, i32 %unsignedp.tr.ph5.lcssa454) #6, !dbg !4715
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call877, metadata !4378, metadata !DIExpression()), !dbg !4692
  %call878 = tail call %struct.rtx_def* @expand_shift(i32 84, i32 %bf.clear.lcssa327, %struct.rtx_def* %call877, %union.tree_node* %call874, %struct.rtx_def* %to.tr.ph.lcssa474, i32 %unsignedp.tr.ph5.lcssa454) #6, !dbg !4716
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call878, metadata !4378, metadata !DIExpression()), !dbg !4692
  %cmp879 = icmp eq %struct.rtx_def* %call878, %to.tr.ph.lcssa474, !dbg !4717
  br i1 %cmp879, label %cleanup.cont932, label %if.then881, !dbg !4719

if.then881:                                       ; preds = %for.end857
  %call882 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %to.tr.ph.lcssa474, %struct.rtx_def* %call878) #8, !dbg !4720
  br label %cleanup.cont932, !dbg !4720

if.end887:                                        ; preds = %if.end805
  %to.tr.ph.lcssa472 = phi %struct.rtx_def* [ %to.tr.ph, %if.end805 ]
  %from_mode.2.lcssa407 = phi i32 [ %from_mode.2, %if.end805 ], !dbg !4520
  %from.addr.4.lcssa401 = phi %struct.rtx_def* [ %from.addr.4, %if.end805 ], !dbg !4521
  %idxprom.lcssa313 = phi i64 [ %idxprom, %if.end805 ], !dbg !4389
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa407, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa401, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa407, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa401, metadata !4318, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %from_mode.2.lcssa407, metadata !4321, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.4.lcssa401, metadata !4318, metadata !DIExpression()), !dbg !4388
  %idxprom890 = sext i32 %from_mode.2.lcssa407 to i64, !dbg !4721
  %insn_code892 = getelementptr inbounds [17 x %struct.convert_optab_d], [17 x %struct.convert_optab_d]* @convert_optab_table, i64 0, i64 2, i32 3, i64 %idxprom.lcssa313, i64 %idxprom890, i32 0, !dbg !4723
  %72 = load i32, i32* %insn_code892, align 4, !dbg !4723
  %cmp893 = icmp eq i32 %72, 2956, !dbg !4724
  br i1 %cmp893, label %if.end901, label %if.then895, !dbg !4725

if.then895:                                       ; preds = %if.end887
  tail call void @emit_unop_insn(i32 %72, %struct.rtx_def* %to.tr.ph.lcssa472, %struct.rtx_def* %from.addr.4.lcssa401, i32 0) #6, !dbg !4726
  br label %cleanup.cont932, !dbg !4728

if.end901:                                        ; preds = %if.end887
  br i1 false, label %if.then918, label %if.end923, !dbg !4729

if.then918:                                       ; preds = %if.end901
  br label %cleanup.cont932

if.end923:                                        ; preds = %if.end901
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 722, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4730
  br label %cleanup.cont932, !dbg !4581

cleanup.cont932.loopexit:                         ; preds = %cond.end42, %cleanup440
  br label %cleanup.cont932, !dbg !4581

cleanup.cont932:                                  ; preds = %cleanup.cont932.loopexit, %for.end857, %if.then109, %if.end247, %if.end391, %if.end802, %if.then826, %if.then895, %if.then918, %if.end923, %cond.end357, %if.then338, %if.else547, %if.then546, %for.end, %if.end595, %if.then881
  ret void, !dbg !4581
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !4731 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4735, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !4736, metadata !DIExpression()), !dbg !4741
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4742
  %bf.load = load i32, i32* %0, align 8, !dbg !4742
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4742
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4737, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4738, metadata !DIExpression()), !dbg !4741
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !4743
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !4743

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !4743
  %bf.load1 = load i32, i32* %1, align 8, !dbg !4743
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !4743
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !4743
  %cmp4 = icmp eq i32 %bf.clear3, %bf.clear, !dbg !4743
  br i1 %cmp4, label %cond.end, label %lor.lhs.false, !dbg !4743

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.clear7 = and i32 %bf.load1, 16711680, !dbg !4743
  %cmp8 = icmp eq i32 %bf.clear7, 0, !dbg !4743
  br i1 %cmp8, label %cond.end, label %cond.true, !dbg !4743

cond.true:                                        ; preds = %entry, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3432, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4743
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !4744
  %bf.load9.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4746
  br label %cond.end, !dbg !4743

cond.end:                                         ; preds = %land.lhs.true, %lor.lhs.false, %cond.true
  %bf.load9 = phi i32 [ %bf.load1, %land.lhs.true ], [ %bf.load1, %lor.lhs.false ], [ %bf.load9.pre, %cond.true ], !dbg !4746
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4746
  %idxprom = zext i32 %bf.clear10 to i64, !dbg !4746
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4746
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4746
  %cmp11 = icmp eq i32 %2, 9, !dbg !4746
  br i1 %cmp11, label %if.then, label %if.end41, !dbg !4747

if.then:                                          ; preds = %cond.end
  %3 = load i32, i32* @optimize, align 4, !dbg !4748
  %tobool = icmp eq i32 %3, 0, !dbg !4748
  br i1 %tobool, label %if.end, label %land.lhs.true12, !dbg !4751

land.lhs.true12:                                  ; preds = %if.then
  %bf.load13 = load i32, i32* %0, align 8, !dbg !4752
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !4752
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !4752
  %idxprom16 = zext i32 %bf.clear15 to i64, !dbg !4752
  %arrayidx17 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom16, !dbg !4752
  %4 = load i8, i8* %arrayidx17, align 1, !dbg !4752
  %cmp18 = icmp eq i8 %4, 8, !dbg !4752
  br i1 %cmp18, label %land.lhs.true29, label %lor.lhs.false20, !dbg !4752

lor.lhs.false20:                                  ; preds = %land.lhs.true12
  %cmp27 = icmp eq i8 %4, 9, !dbg !4752
  br i1 %cmp27, label %land.lhs.true29, label %if.end, !dbg !4753

land.lhs.true29:                                  ; preds = %lor.lhs.false20, %land.lhs.true12
  %call = tail call fastcc %struct.rtx_def* @compress_float_constant(%struct.rtx_def* %x, %struct.rtx_def* %y) #8, !dbg !4754
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4739, metadata !DIExpression()), !dbg !4741
  %tobool30 = icmp eq %struct.rtx_def* %call, null, !dbg !4755
  br i1 %tobool30, label %if.end, label %cleanup, !dbg !4756

if.end:                                           ; preds = %land.lhs.true29, %if.then, %lor.lhs.false20
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !4738, metadata !DIExpression()), !dbg !4741
  %call32 = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %y) #6, !dbg !4757
  %tobool33 = icmp eq i8 %call32, 0, !dbg !4757
  br i1 %tobool33, label %if.then34, label %if.end41, !dbg !4759

if.then34:                                        ; preds = %if.end
  %call35 = tail call %struct.rtx_def* @force_const_mem(i32 %bf.clear, %struct.rtx_def* %y) #6, !dbg !4760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !4736, metadata !DIExpression()), !dbg !4741
  %tobool36 = icmp eq %struct.rtx_def* %call35, null, !dbg !4762
  br i1 %tobool36, label %if.end41, label %if.else, !dbg !4764

if.else:                                          ; preds = %if.then34
  %call38 = tail call %struct.rtx_def* @use_anchored_address(%struct.rtx_def* nonnull %call35) #6, !dbg !4765
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !4736, metadata !DIExpression()), !dbg !4741
  br label %if.end41

if.end41:                                         ; preds = %if.then34, %if.end, %if.else, %cond.end
  %y_cst.0 = phi %struct.rtx_def* [ null, %cond.end ], [ %y, %if.else ], [ %y, %if.then34 ], [ %y, %if.end ], !dbg !4741
  %y.addr.2 = phi %struct.rtx_def* [ %y, %cond.end ], [ %call38, %if.else ], [ %y, %if.then34 ], [ %y, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2, metadata !4736, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y_cst.0, metadata !4738, metadata !DIExpression()), !dbg !4741
  %bf.load42 = load i32, i32* %0, align 8, !dbg !4766
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !4766
  %cmp44 = icmp eq i32 %bf.clear43, 43, !dbg !4766
  br i1 %cmp44, label %land.lhs.true46, label %if.end76, !dbg !4768

land.lhs.true46:                                  ; preds = %if.end41
  %bf.lshr48 = lshr i32 %bf.load42, 16, !dbg !4769
  %bf.clear49 = and i32 %bf.lshr48, 255, !dbg !4769
  %arrayidx50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4770
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !4770
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4770
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4771
  %rt_mem = bitcast %union.rtunion_def* %6 to %struct.mem_attrs**, !dbg !4771
  %7 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4771
  %cmp54 = icmp eq %struct.mem_attrs* %7, null, !dbg !4771
  br i1 %cmp54, label %cond.end63, label %cond.false57, !dbg !4771

cond.false57:                                     ; preds = %land.lhs.true46
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 5, !dbg !4771
  %8 = load i8, i8* %addrspace, align 8, !dbg !4771
  br label %cond.end63, !dbg !4771

cond.end63:                                       ; preds = %land.lhs.true46, %cond.false57
  %cond64 = phi i8 [ %8, %cond.false57 ], [ 0, %land.lhs.true46 ]
  %call66 = tail call i32 @memory_address_addr_space_p(i32 %bf.clear49, %struct.rtx_def* %5, i8 zeroext %cond64) #6, !dbg !4772
  %tobool67 = icmp eq i32 %call66, 0, !dbg !4772
  br i1 %tobool67, label %land.lhs.true68, label %if.end76, !dbg !4773

land.lhs.true68:                                  ; preds = %cond.end63
  %bf.load69 = load i32, i32* %0, align 8, !dbg !4774
  %bf.lshr70 = lshr i32 %bf.load69, 16, !dbg !4774
  %bf.clear71 = and i32 %bf.lshr70, 255, !dbg !4774
  %call72 = tail call i32 @push_operand(%struct.rtx_def* %x, i32 %bf.clear71) #6, !dbg !4775
  %tobool73 = icmp eq i32 %call72, 0, !dbg !4775
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !4776

if.then74:                                        ; preds = %land.lhs.true68
  %call75 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %x) #6, !dbg !4777
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call75, metadata !4735, metadata !DIExpression()), !dbg !4741
  br label %if.end76, !dbg !4778

if.end76:                                         ; preds = %land.lhs.true68, %cond.end63, %if.then74, %if.end41
  %x.addr.0 = phi %struct.rtx_def* [ %x, %cond.end63 ], [ %x, %land.lhs.true68 ], [ %call75, %if.then74 ], [ %x, %if.end41 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !4735, metadata !DIExpression()), !dbg !4741
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 0, !dbg !4779
  %bf.load77 = load i32, i32* %9, align 8, !dbg !4779
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !4779
  %cmp79 = icmp eq i32 %bf.clear78, 43, !dbg !4779
  br i1 %cmp79, label %land.lhs.true81, label %if.end110, !dbg !4781

land.lhs.true81:                                  ; preds = %if.end76
  %bf.lshr83 = lshr i32 %bf.load77, 16, !dbg !4782
  %bf.clear84 = and i32 %bf.lshr83, 255, !dbg !4782
  %arrayidx87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4783
  %rt_rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**, !dbg !4783
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !4783
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4784
  %rt_mem92 = bitcast %union.rtunion_def* %11 to %struct.mem_attrs**, !dbg !4784
  %12 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem92, align 8, !dbg !4784
  %cmp93 = icmp eq %struct.mem_attrs* %12, null, !dbg !4784
  br i1 %cmp93, label %cond.end103, label %cond.false96, !dbg !4784

cond.false96:                                     ; preds = %land.lhs.true81
  %addrspace101 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %12, i64 0, i32 5, !dbg !4784
  %13 = load i8, i8* %addrspace101, align 8, !dbg !4784
  br label %cond.end103, !dbg !4784

cond.end103:                                      ; preds = %land.lhs.true81, %cond.false96
  %cond104 = phi i8 [ %13, %cond.false96 ], [ 0, %land.lhs.true81 ]
  %call106 = tail call i32 @memory_address_addr_space_p(i32 %bf.clear84, %struct.rtx_def* %10, i8 zeroext %cond104) #6, !dbg !4785
  %tobool107 = icmp eq i32 %call106, 0, !dbg !4785
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !4786

if.then108:                                       ; preds = %cond.end103
  %call109 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %y.addr.2) #6, !dbg !4787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call109, metadata !4736, metadata !DIExpression()), !dbg !4741
  br label %if.end110, !dbg !4788

if.end110:                                        ; preds = %cond.end103, %if.then108, %if.end76
  %y.addr.3 = phi %struct.rtx_def* [ %y.addr.2, %cond.end103 ], [ %call109, %if.then108 ], [ %y.addr.2, %if.end76 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.3, metadata !4736, metadata !DIExpression()), !dbg !4741
  br i1 %cmp, label %cond.true113, label %cond.end115, !dbg !4789

cond.true113:                                     ; preds = %if.end110
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3470, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4789
  br label %cond.end115, !dbg !4789

cond.end115:                                      ; preds = %if.end110, %cond.true113
  %call117 = tail call %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.3) #8, !dbg !4790
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call117, metadata !4739, metadata !DIExpression()), !dbg !4741
  %tobool118 = icmp eq %struct.rtx_def* %y_cst.0, null, !dbg !4791
  br i1 %tobool118, label %cleanup, label %land.lhs.true119, !dbg !4793

land.lhs.true119:                                 ; preds = %cond.end115
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !4794
  %bf.load120 = load i32, i32* %14, align 8, !dbg !4794
  %bf.clear121 = and i32 %bf.load120, 65535, !dbg !4794
  %cmp122 = icmp eq i32 %bf.clear121, 37, !dbg !4794
  br i1 %cmp122, label %land.lhs.true124, label %cleanup, !dbg !4795

land.lhs.true124:                                 ; preds = %land.lhs.true119
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call117, i64 0, i32 0, !dbg !4796
  %bf.load125 = load i32, i32* %15, align 8, !dbg !4796
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !4796
  %cmp127 = icmp eq i32 %bf.clear126, 8, !dbg !4796
  br i1 %cmp127, label %cond.true144, label %lor.lhs.false129, !dbg !4796

lor.lhs.false129:                                 ; preds = %land.lhs.true124
  %cmp132 = icmp eq i32 %bf.clear126, 7, !dbg !4796
  br i1 %cmp132, label %cond.true144, label %lor.lhs.false134, !dbg !4796

lor.lhs.false134:                                 ; preds = %lor.lhs.false129
  %cmp137 = icmp eq i32 %bf.clear126, 9, !dbg !4796
  br i1 %cmp137, label %cond.true144, label %lor.lhs.false139, !dbg !4796

lor.lhs.false139:                                 ; preds = %lor.lhs.false134
  %cmp142 = icmp eq i32 %bf.clear126, 10, !dbg !4796
  br i1 %cmp142, label %cond.true144, label %cond.end167, !dbg !4796

cond.true144:                                     ; preds = %lor.lhs.false139, %lor.lhs.false134, %lor.lhs.false129, %land.lhs.true124
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call117, i64 0, i32 1, !dbg !4796
  %16 = getelementptr inbounds %union.u, %union.u* %u145, i64 1, i32 0, i32 0, i64 0, !dbg !4796
  %17 = bitcast %union.rtunion_def* %16 to i32**, !dbg !4796
  %18 = load i32*, i32** %17, align 8, !dbg !4796
  %bf.load149 = load i32, i32* %18, align 8, !dbg !4796
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !4796
  %cmp151 = icmp eq i32 %bf.clear150, 23, !dbg !4796
  %19 = bitcast i32* %18 to %struct.rtx_def*, !dbg !4796
  br i1 %cmp151, label %cond.end167, label %cond.false158, !dbg !4796

cond.false158:                                    ; preds = %cond.true144
  %call163 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call117, %struct.rtx_def* %19) #6, !dbg !4796
  br label %cond.end167, !dbg !4796

cond.end167:                                      ; preds = %lor.lhs.false139, %cond.false158, %cond.true144
  %cond168 = phi %struct.rtx_def* [ %call163, %cond.false158 ], [ %19, %cond.true144 ], [ null, %lor.lhs.false139 ], !dbg !4796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond168, metadata !4740, metadata !DIExpression()), !dbg !4741
  %cmp169 = icmp eq %struct.rtx_def* %cond168, null, !dbg !4797
  br i1 %cmp169, label %cleanup, label %land.lhs.true171, !dbg !4798

land.lhs.true171:                                 ; preds = %cond.end167
  %arrayidx174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond168, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4799
  %rt_rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**, !dbg !4799
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx175, align 8, !dbg !4799
  %cmp176 = icmp eq %struct.rtx_def* %20, %x.addr.0, !dbg !4800
  br i1 %cmp176, label %land.lhs.true178, label %cleanup, !dbg !4801

land.lhs.true178:                                 ; preds = %land.lhs.true171
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond168, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4802
  %rt_rtx182 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !4802
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx182, align 8, !dbg !4802
  %call183 = tail call i32 @rtx_equal_p(%struct.rtx_def* nonnull %y_cst.0, %struct.rtx_def* %22) #6, !dbg !4803
  %tobool184 = icmp eq i32 %call183, 0, !dbg !4803
  br i1 %tobool184, label %if.then185, label %cleanup, !dbg !4804

if.then185:                                       ; preds = %land.lhs.true178
  %call186 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call117, i32 4, %struct.rtx_def* nonnull %y_cst.0) #6, !dbg !4805
  br label %cleanup, !dbg !4805

cleanup:                                          ; preds = %land.lhs.true29, %land.lhs.true178, %cond.end167, %cond.end115, %land.lhs.true119, %land.lhs.true171, %if.then185
  %retval.0 = phi %struct.rtx_def* [ %call, %land.lhs.true29 ], [ %call117, %if.then185 ], [ %call117, %land.lhs.true178 ], [ %call117, %land.lhs.true171 ], [ %call117, %cond.end167 ], [ %call117, %land.lhs.true119 ], [ %call117, %cond.end115 ], !dbg !4741
  ret %struct.rtx_def* %retval.0, !dbg !4806
}

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local void @emit_unop_insn(i32, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @convert_optab_libfunc(%struct.convert_optab_d*, i32, i32) local_unnamed_addr #1

declare dso_local void @start_sequence() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_library_call_value(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, ...) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

declare dso_local void @end_sequence() local_unnamed_addr #1

declare dso_local void @emit_libcall_block(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @smallest_mode_for_size(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @convert_to_mode(i32 %mode, %struct.rtx_def* %x, i32 %unsignedp) local_unnamed_addr #4 !dbg !4807 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4811, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4812, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4813, metadata !DIExpression()), !dbg !4814
  %call = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 0, %struct.rtx_def* %x, i32 %unsignedp) #8, !dbg !4815
  ret %struct.rtx_def* %call, !dbg !4816
}

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #1

declare dso_local void @expand_fixed_convert(%struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_clobber(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_store_flag(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @mode_dependent_address_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_shift(i32, i32, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @convert_modes(i32 %mode, i32 %oldmode, %struct.rtx_def* %x, i32 %unsignedp) local_unnamed_addr #4 !dbg !4817 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4821, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.value(metadata i32 %oldmode, metadata !4822, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4823, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !4824, metadata !DIExpression()), !dbg !4838
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4839
  %bf.load = load i32, i32* %0, align 8, !dbg !4839
  %bf.clear = and i32 %bf.load, 65535, !dbg !4839
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !4841
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4842

land.lhs.true:                                    ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 268435456, !dbg !4843
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !4843
  br i1 %tobool, label %if.end, label %land.lhs.true3, !dbg !4844

land.lhs.true3:                                   ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4845
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4845
  %2 = load i32*, i32** %1, align 8, !dbg !4845
  %bf.load4 = load i32, i32* %2, align 8, !dbg !4845
  %bf.lshr5 = lshr i32 %bf.load4, 16, !dbg !4845
  %bf.clear6 = and i32 %bf.lshr5, 255, !dbg !4845
  %idxprom = zext i32 %bf.clear6 to i64, !dbg !4845
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4845
  %3 = load i8, i8* %arrayidx7, align 1, !dbg !4845
  %idxprom9 = zext i32 %mode to i64, !dbg !4846
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom9, !dbg !4846
  %4 = load i8, i8* %arrayidx10, align 1, !dbg !4846
  %cmp13 = icmp ult i8 %3, %4, !dbg !4847
  br i1 %cmp13, label %if.end, label %land.lhs.true15, !dbg !4848

land.lhs.true15:                                  ; preds = %land.lhs.true3
  %bf.clear18 = and i32 %bf.load, 134217728, !dbg !4849
  %tobool19 = icmp eq i32 %bf.clear18, 0, !dbg !4849
  br i1 %tobool19, label %cond.false, label %cond.end, !dbg !4849

cond.false:                                       ; preds = %land.lhs.true15
  %bf.lshr21 = lshr i32 %bf.load, 26, !dbg !4849
  %bf.clear22 = and i32 %bf.lshr21, 1, !dbg !4849
  br label %cond.end, !dbg !4849

cond.end:                                         ; preds = %land.lhs.true15, %cond.false
  %cond = phi i32 [ %bf.clear22, %cond.false ], [ -1, %land.lhs.true15 ], !dbg !4849
  %cmp23 = icmp eq i32 %cond, %unsignedp, !dbg !4850
  br i1 %cmp23, label %if.then, label %if.end, !dbg !4851

if.then:                                          ; preds = %cond.end
  %5 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4852
  %call = tail call %struct.rtx_def* %5(i32 %mode, %struct.rtx_def* %x) #6, !dbg !4852
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4823, metadata !DIExpression()), !dbg !4838
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4853
  %bf.load25.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4855
  br label %if.end, !dbg !4856

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %if.then, %cond.end, %entry
  %bf.load149 = phi i32 [ %bf.load25.pre, %if.then ], [ %bf.load, %cond.end ], [ %bf.load, %land.lhs.true3 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %entry ], !dbg !4855
  %x.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %x, %cond.end ], [ %x, %land.lhs.true3 ], [ %x, %land.lhs.true ], [ %x, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !4823, metadata !DIExpression()), !dbg !4838
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !4855
  %bf.clear27 = and i32 %bf.load149, 16711680, !dbg !4855
  %cmp28 = icmp eq i32 %bf.clear27, 0, !dbg !4857
  br i1 %cmp28, label %if.end34, label %if.then30, !dbg !4858

if.then30:                                        ; preds = %if.end
  %bf.lshr32 = lshr i32 %bf.load149, 16, !dbg !4859
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %bf.clear33, metadata !4822, metadata !DIExpression()), !dbg !4838
  br label %if.end34, !dbg !4860

if.end34:                                         ; preds = %if.end, %if.then30
  %oldmode.addr.0 = phi i32 [ %bf.clear33, %if.then30 ], [ %oldmode, %if.end ]
  call void @llvm.dbg.value(metadata i32 %oldmode.addr.0, metadata !4822, metadata !DIExpression()), !dbg !4838
  %cmp35 = icmp eq i32 %oldmode.addr.0, %mode, !dbg !4861
  br i1 %cmp35, label %cleanup, label %if.end38, !dbg !4863

if.end38:                                         ; preds = %if.end34
  %tobool39 = icmp eq i32 %unsignedp, 0, !dbg !4864
  br i1 %tobool39, label %if.end91, label %land.lhs.true40, !dbg !4865

land.lhs.true40:                                  ; preds = %if.end38
  %idxprom41 = zext i32 %mode to i64, !dbg !4866
  %arrayidx42 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom41, !dbg !4866
  %7 = load i8, i8* %arrayidx42, align 1, !dbg !4866
  %cmp44 = icmp eq i8 %7, 2, !dbg !4867
  br i1 %cmp44, label %land.lhs.true46, label %if.end91, !dbg !4868

land.lhs.true46:                                  ; preds = %land.lhs.true40
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom41, !dbg !4869
  %8 = load i8, i8* %arrayidx48, align 1, !dbg !4869
  %cmp53 = icmp eq i8 %8, 16, !dbg !4870
  br i1 %cmp53, label %land.lhs.true55, label %if.end91, !dbg !4871

land.lhs.true55:                                  ; preds = %land.lhs.true46
  %bf.clear57 = and i32 %bf.load149, 65535, !dbg !4872
  %cmp58 = icmp eq i32 %bf.clear57, 30, !dbg !4872
  br i1 %cmp58, label %land.lhs.true60, label %if.end91, !dbg !4873

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %u61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, !dbg !4874
  %arrayidx62 = bitcast %union.u* %u61 to i64*, !dbg !4874
  %9 = load i64, i64* %arrayidx62, align 8, !dbg !4874
  %cmp63 = icmp slt i64 %9, 0, !dbg !4875
  br i1 %cmp63, label %if.then65, label %if.end91, !dbg !4876

if.then65:                                        ; preds = %land.lhs.true60
  call void @llvm.dbg.value(metadata i64 %9, metadata !4826, metadata !DIExpression()), !dbg !4877
  %cmp69 = icmp eq i32 %oldmode.addr.0, 0, !dbg !4878
  br i1 %cmp69, label %if.end89, label %land.lhs.true71, !dbg !4879

land.lhs.true71:                                  ; preds = %if.then65
  %idxprom72 = zext i32 %oldmode.addr.0 to i64, !dbg !4880
  %arrayidx73 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom72, !dbg !4880
  %10 = load i8, i8* %arrayidx73, align 1, !dbg !4880
  %cmp79 = icmp ult i8 %10, 8, !dbg !4881
  br i1 %cmp79, label %if.then81, label %if.end89, !dbg !4882

if.then81:                                        ; preds = %land.lhs.true71
  %conv85 = zext i8 %10 to i64, !dbg !4883
  %mul86 = shl nuw nsw i64 %conv85, 3, !dbg !4883
  call void @llvm.dbg.value(metadata i64 %mul86, metadata !4829, metadata !DIExpression()), !dbg !4884
  %notmask1 = shl nsw i64 -1, %mul86, !dbg !4885
  %sub = xor i64 %notmask1, -1, !dbg !4885
  %and = and i64 %9, %sub, !dbg !4886
  call void @llvm.dbg.value(metadata i64 %and, metadata !4826, metadata !DIExpression()), !dbg !4877
  br label %if.end89, !dbg !4887

if.end89:                                         ; preds = %if.then65, %if.then81, %land.lhs.true71
  %val.0 = phi i64 [ %and, %if.then81 ], [ %9, %land.lhs.true71 ], [ %9, %if.then65 ], !dbg !4877
  call void @llvm.dbg.value(metadata i64 %val.0, metadata !4826, metadata !DIExpression()), !dbg !4877
  %call90 = tail call %struct.rtx_def* @immed_double_const(i64 %val.0, i64 0, i32 %mode) #6, !dbg !4888
  br label %cleanup

if.end91:                                         ; preds = %if.end38, %land.lhs.true60, %land.lhs.true55, %land.lhs.true46, %land.lhs.true40
  %bf.clear93 = and i32 %bf.load149, 65535, !dbg !4889
  %cmp94 = icmp eq i32 %bf.clear93, 30, !dbg !4889
  br i1 %cmp94, label %land.lhs.true96, label %if.end91.lor.lhs.false_crit_edge, !dbg !4890

if.end91.lor.lhs.false_crit_edge:                 ; preds = %if.end91
  %.pre = zext i32 %mode to i64, !dbg !4891
  br label %lor.lhs.false, !dbg !4890

land.lhs.true96:                                  ; preds = %if.end91
  %idxprom97 = zext i32 %mode to i64, !dbg !4892
  %arrayidx98 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom97, !dbg !4892
  %11 = load i8, i8* %arrayidx98, align 1, !dbg !4892
  %cmp104 = icmp ult i8 %11, 9, !dbg !4893
  br i1 %cmp104, label %if.then162, label %lor.lhs.false, !dbg !4894

lor.lhs.false:                                    ; preds = %if.end91.lor.lhs.false_crit_edge, %land.lhs.true96
  %idxprom106.pre-phi = phi i64 [ %.pre, %if.end91.lor.lhs.false_crit_edge ], [ %idxprom97, %land.lhs.true96 ], !dbg !4891
  %arrayidx107 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom106.pre-phi, !dbg !4891
  %12 = load i8, i8* %arrayidx107, align 1, !dbg !4891
  %cmp109 = icmp eq i8 %12, 2, !dbg !4895
  br i1 %cmp109, label %land.lhs.true111, label %if.end212, !dbg !4896

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %idxprom112 = zext i32 %oldmode.addr.0 to i64, !dbg !4897
  %arrayidx113 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom112, !dbg !4897
  %13 = load i8, i8* %arrayidx113, align 1, !dbg !4897
  %cmp115 = icmp eq i8 %13, 2, !dbg !4898
  br i1 %cmp115, label %land.lhs.true117, label %if.end212, !dbg !4899

land.lhs.true117:                                 ; preds = %land.lhs.true111
  %cmp120 = icmp eq i32 %bf.clear93, 32, !dbg !4900
  br i1 %cmp120, label %if.then162, label %lor.lhs.false122, !dbg !4901

lor.lhs.false122:                                 ; preds = %land.lhs.true117
  %arrayidx124 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom106.pre-phi, !dbg !4902
  %14 = load i8, i8* %arrayidx124, align 1, !dbg !4902
  %arrayidx128 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom112, !dbg !4903
  %15 = load i8, i8* %arrayidx128, align 1, !dbg !4903
  %cmp131 = icmp ugt i8 %14, %15, !dbg !4904
  br i1 %cmp131, label %if.end212, label %land.lhs.true133, !dbg !4905

land.lhs.true133:                                 ; preds = %lor.lhs.false122
  %cmp136 = icmp eq i32 %bf.clear93, 43, !dbg !4906
  br i1 %cmp136, label %land.lhs.true138, label %lor.lhs.false148, !dbg !4907

land.lhs.true138:                                 ; preds = %land.lhs.true133
  %bf.clear141 = and i32 %bf.load149, 134217728, !dbg !4908
  %tobool142 = icmp eq i32 %bf.clear141, 0, !dbg !4908
  br i1 %tobool142, label %land.lhs.true143, label %lor.lhs.false148, !dbg !4909

land.lhs.true143:                                 ; preds = %land.lhs.true138
  %idxprom144 = sext i32 %mode to i64, !dbg !4910
  %arrayidx145 = getelementptr inbounds [87 x i8], [87 x i8]* @direct_load, i64 0, i64 %idxprom144, !dbg !4910
  %16 = load i8, i8* %arrayidx145, align 1, !dbg !4910
  %tobool147 = icmp eq i8 %16, 0, !dbg !4910
  br i1 %tobool147, label %lor.lhs.false148, label %if.then162, !dbg !4911

lor.lhs.false148:                                 ; preds = %land.lhs.true143, %land.lhs.true138, %land.lhs.true133
  %cmp151 = icmp eq i32 %bf.clear93, 37, !dbg !4912
  br i1 %cmp151, label %land.lhs.true153, label %if.end212, !dbg !4913

land.lhs.true153:                                 ; preds = %lor.lhs.false148
  %call154 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0) #8, !dbg !4914
  %cmp155 = icmp ult i32 %call154, 53, !dbg !4914
  br i1 %cmp155, label %lor.lhs.false157, label %if.then162, !dbg !4915

lor.lhs.false157:                                 ; preds = %land.lhs.true153
  %call158 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0) #8, !dbg !4916
  %call159 = tail call zeroext i8 @ix86_hard_regno_mode_ok(i32 %call158, i32 %mode) #6, !dbg !4916
  %tobool161 = icmp eq i8 %call159, 0, !dbg !4916
  br i1 %tobool161, label %if.end212, label %if.then162, !dbg !4917

if.then162:                                       ; preds = %land.lhs.true143, %lor.lhs.false157, %land.lhs.true153, %land.lhs.true117, %land.lhs.true96
  %bf.load163 = load i32, i32* %6, align 8, !dbg !4918
  %bf.clear164 = and i32 %bf.load163, 65535, !dbg !4918
  %cmp165 = icmp eq i32 %bf.clear164, 30, !dbg !4918
  %cmp168 = icmp ne i32 %oldmode.addr.0, 0, !dbg !4919
  %or.cond = and i1 %cmp165, %cmp168, !dbg !4920
  br i1 %or.cond, label %land.lhs.true170, label %if.end210, !dbg !4920

land.lhs.true170:                                 ; preds = %if.then162
  %idxprom171 = zext i32 %mode to i64, !dbg !4921
  %arrayidx172 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom171, !dbg !4921
  %17 = load i8, i8* %arrayidx172, align 1, !dbg !4921
  %idxprom175 = zext i32 %oldmode.addr.0 to i64, !dbg !4922
  %arrayidx176 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom175, !dbg !4922
  %18 = load i8, i8* %arrayidx176, align 1, !dbg !4922
  %cmp179 = icmp ugt i8 %17, %18, !dbg !4923
  br i1 %cmp179, label %if.then181, label %if.end210, !dbg !4924

if.then181:                                       ; preds = %land.lhs.true170
  %u183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, !dbg !4925
  %arrayidx185 = bitcast %union.u* %u183 to i64*, !dbg !4925
  %19 = load i64, i64* %arrayidx185, align 8, !dbg !4925
  call void @llvm.dbg.value(metadata i64 %19, metadata !4832, metadata !DIExpression()), !dbg !4926
  %conv190 = zext i8 %18 to i32, !dbg !4927
  %mul191 = shl nuw nsw i32 %conv190, 3, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %mul191, metadata !4837, metadata !DIExpression()), !dbg !4926
  %sh_prom194 = zext i32 %mul191 to i64, !dbg !4928
  %notmask = shl i64 -1, %sh_prom194, !dbg !4929
  %sub196 = xor i64 %notmask, -1, !dbg !4929
  %and197 = and i64 %19, %sub196, !dbg !4930
  call void @llvm.dbg.value(metadata i64 %and197, metadata !4832, metadata !DIExpression()), !dbg !4926
  br i1 %tobool39, label %land.lhs.true199, label %if.end208, !dbg !4931

land.lhs.true199:                                 ; preds = %if.then181
  %sub200 = add nsw i32 %mul191, -1, !dbg !4933
  %sh_prom201 = zext i32 %sub200 to i64, !dbg !4934
  %shl202 = shl i64 1, %sh_prom201, !dbg !4934
  %and203 = and i64 %and197, %shl202, !dbg !4935
  %tobool204 = icmp eq i64 %and203, 0, !dbg !4935
  br i1 %tobool204, label %if.end208, label %if.then205, !dbg !4936

if.then205:                                       ; preds = %land.lhs.true199
  %or = or i64 %19, %notmask, !dbg !4937
  call void @llvm.dbg.value(metadata i64 %or, metadata !4832, metadata !DIExpression()), !dbg !4926
  br label %if.end208, !dbg !4938

if.end208:                                        ; preds = %land.lhs.true199, %if.then181, %if.then205
  %val182.0 = phi i64 [ %and197, %if.then181 ], [ %or, %if.then205 ], [ %and197, %land.lhs.true199 ], !dbg !4926
  call void @llvm.dbg.value(metadata i64 %val182.0, metadata !4832, metadata !DIExpression()), !dbg !4926
  %call209 = tail call %struct.rtx_def* @gen_int_mode(i64 %val182.0, i32 %mode) #6, !dbg !4939
  br label %cleanup

if.end210:                                        ; preds = %land.lhs.true170, %if.then162
  %20 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4940
  %call211 = tail call %struct.rtx_def* %20(i32 %mode, %struct.rtx_def* %x.addr.0) #6, !dbg !4940
  br label %cleanup, !dbg !4941

if.end212:                                        ; preds = %lor.lhs.false157, %lor.lhs.false122, %lor.lhs.false148, %land.lhs.true111, %lor.lhs.false
  %cmp216 = icmp eq i8 %12, 12, !dbg !4942
  br i1 %cmp216, label %land.lhs.true248, label %lor.lhs.false218, !dbg !4942

lor.lhs.false218:                                 ; preds = %if.end212
  %cmp222 = icmp eq i8 %12, 17, !dbg !4942
  br i1 %cmp222, label %land.lhs.true248, label %lor.lhs.false224, !dbg !4942

lor.lhs.false224:                                 ; preds = %lor.lhs.false218
  %cmp228 = icmp eq i8 %12, 13, !dbg !4942
  br i1 %cmp228, label %land.lhs.true248, label %lor.lhs.false230, !dbg !4942

lor.lhs.false230:                                 ; preds = %lor.lhs.false224
  %cmp234 = icmp eq i8 %12, 14, !dbg !4942
  br i1 %cmp234, label %land.lhs.true248, label %lor.lhs.false236, !dbg !4942

lor.lhs.false236:                                 ; preds = %lor.lhs.false230
  %cmp240 = icmp eq i8 %12, 15, !dbg !4942
  br i1 %cmp240, label %land.lhs.true248, label %lor.lhs.false242, !dbg !4942

lor.lhs.false242:                                 ; preds = %lor.lhs.false236
  %cmp246 = icmp eq i8 %12, 16, !dbg !4942
  br i1 %cmp246, label %land.lhs.true248, label %if.end276, !dbg !4944

land.lhs.true248:                                 ; preds = %lor.lhs.false242, %lor.lhs.false236, %lor.lhs.false230, %lor.lhs.false224, %lor.lhs.false218, %if.end212
  %bf.load249 = load i32, i32* %6, align 8, !dbg !4945
  %bf.clear251 = and i32 %bf.load249, 16711680, !dbg !4945
  %cmp252 = icmp eq i32 %bf.clear251, 0, !dbg !4946
  br i1 %cmp252, label %if.then254, label %if.end276, !dbg !4947

if.then254:                                       ; preds = %land.lhs.true248
  %arrayidx256 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom106.pre-phi, !dbg !4948
  %21 = load i8, i8* %arrayidx256, align 1, !dbg !4948
  %idxprom262 = zext i32 %oldmode.addr.0 to i64, !dbg !4948
  %arrayidx263 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom262, !dbg !4948
  %22 = load i8, i8* %arrayidx263, align 1, !dbg !4948
  %cmp269 = icmp eq i8 %21, %22, !dbg !4948
  br i1 %cmp269, label %cond.end273, label %cond.true271, !dbg !4948

cond.true271:                                     ; preds = %if.then254
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 836, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4948
  br label %cond.end273, !dbg !4948

cond.end273:                                      ; preds = %if.then254, %cond.true271
  %call275 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %mode, %struct.rtx_def* %x.addr.0, i32 %oldmode.addr.0, i32 0) #6, !dbg !4950
  br label %cleanup, !dbg !4951

if.end276:                                        ; preds = %land.lhs.true248, %lor.lhs.false242
  %call277 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !4952
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call277, metadata !4825, metadata !DIExpression()), !dbg !4838
  tail call void @convert_move(%struct.rtx_def* %call277, %struct.rtx_def* %x.addr.0, i32 %unsignedp) #8, !dbg !4953
  br label %cleanup, !dbg !4954

cleanup:                                          ; preds = %if.end34, %if.end276, %cond.end273, %if.end210, %if.end208, %if.end89
  %retval.0 = phi %struct.rtx_def* [ %call90, %if.end89 ], [ %call209, %if.end208 ], [ %call211, %if.end210 ], [ %call275, %cond.end273 ], [ %call277, %if.end276 ], [ %x.addr.0, %if.end34 ], !dbg !4838
  ret %struct.rtx_def* %retval.0, !dbg !4955
}

declare dso_local %struct.rtx_def* @immed_double_const(i64, i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @can_move_by_pieces(i64 %len, i32 %align) local_unnamed_addr #4 !dbg !4956 {
entry:
  call void @llvm.dbg.value(metadata i64 %len, metadata !4960, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.value(metadata i32 %align, metadata !4961, metadata !DIExpression()), !dbg !4962
  %call = tail call fastcc i64 @move_by_pieces_ninsns(i64 %len, i32 %align, i32 5) #8, !dbg !4963
  %call1 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !4963
  %tobool = icmp eq i8 %call1, 0, !dbg !4963
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4963

cond.true:                                        ; preds = %entry
  %0 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !4963
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %0, i64 0, i32 10, !dbg !4963
  %1 = load i32, i32* %move_ratio, align 4, !dbg !4963
  %phitmp = zext i32 %1 to i64, !dbg !4963
  br label %cond.end, !dbg !4963

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 3, %entry ]
  %cmp = icmp ult i64 %call, %cond, !dbg !4963
  %conv3 = zext i1 %cmp to i32, !dbg !4963
  ret i32 %conv3, !dbg !4964
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @move_by_pieces_ninsns(i64 %l, i32 %align, i32 %max_size) unnamed_addr #4 !dbg !4965 {
entry:
  call void @llvm.dbg.value(metadata i64 %l, metadata !4969, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %align, metadata !4970, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 5, metadata !4971, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i64 0, metadata !4972, metadata !DIExpression()), !dbg !4981
  %call = tail call i32 @mode_for_size(i32 32, i32 2, i32 1) #6, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %call, metadata !4973, metadata !DIExpression()), !dbg !4981
  %call1 = tail call i32 @get_mode_alignment(i32 %call) #6, !dbg !4983
  %cmp = icmp ugt i32 %call1, %align, !dbg !4984
  br i1 %cmp, label %if.else, label %if.then, !dbg !4985

if.then:                                          ; preds = %entry
  %call2 = tail call i32 @get_mode_alignment(i32 %call) #6, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %call2, metadata !4970, metadata !DIExpression()), !dbg !4981
  br label %if.end18, !dbg !4987

if.else:                                          ; preds = %entry
  %0 = load i8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), align 2, !dbg !4988
  %conv = zext i8 %0 to i32, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4974, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4977, metadata !DIExpression()), !dbg !4990
  br label %for.cond, !dbg !4991

for.cond:                                         ; preds = %for.inc, %if.else
  %xmode.0 = phi i32 [ %conv, %if.else ], [ %tmode3.0, %for.inc ], !dbg !4992
  %tmode3.0 = phi i32 [ %conv, %if.else ], [ %conv13, %for.inc ], !dbg !4992
  call void @llvm.dbg.value(metadata i32 %tmode3.0, metadata !4974, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %xmode.0, metadata !4977, metadata !DIExpression()), !dbg !4990
  %cmp4 = icmp eq i32 %tmode3.0, 0, !dbg !4993
  br i1 %cmp4, label %for.end, label %for.body, !dbg !4995

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %tmode3.0 to i64, !dbg !4996
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4996
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4996
  %cmp8 = icmp ugt i8 %1, 4, !dbg !4998
  br i1 %cmp8, label %for.end, label %for.inc, !dbg !4999

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %tmode3.0, metadata !4977, metadata !DIExpression()), !dbg !4990
  %arrayidx12 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !5000
  %2 = load i8, i8* %arrayidx12, align 1, !dbg !5000
  %conv13 = zext i8 %2 to i32, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %conv13, metadata !4974, metadata !DIExpression()), !dbg !4990
  br label %for.cond, !dbg !5001, !llvm.loop !5002

for.end:                                          ; preds = %for.cond, %for.body
  %xmode.0.lcssa = phi i32 [ %xmode.0, %for.cond ], [ %xmode.0, %for.body ], !dbg !4992
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !4977, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !4977, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !4977, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !4977, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !4977, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !4977, metadata !DIExpression()), !dbg !4990
  %call14 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !5004
  %cmp15 = icmp ult i32 %call14, %align, !dbg !5004
  br i1 %cmp15, label %if.end18, label %cond.false, !dbg !5004

cond.false:                                       ; preds = %for.end
  %call17 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !5004
  br label %if.end18, !dbg !5004

if.end18:                                         ; preds = %cond.false, %for.end, %if.then
  %align.addr.0 = phi i32 [ %call2, %if.then ], [ %call17, %cond.false ], [ %align, %for.end ], !dbg !5005
  call void @llvm.dbg.value(metadata i32 %align.addr.0, metadata !4970, metadata !DIExpression()), !dbg !4981
  br label %while.cond, !dbg !5006

while.cond:                                       ; preds = %cleanup, %if.end18
  %n_insns.0 = phi i64 [ 0, %if.end18 ], [ %n_insns.2, %cleanup ], !dbg !5007
  %max_size.addr.0 = phi i32 [ 5, %if.end18 ], [ %max_size.addr.1, %cleanup ]
  %l.addr.0 = phi i64 [ %l, %if.end18 ], [ %l.addr.2, %cleanup ]
  call void @llvm.dbg.value(metadata i64 %l.addr.0, metadata !4969, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %max_size.addr.0, metadata !4971, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i64 %n_insns.0, metadata !4972, metadata !DIExpression()), !dbg !4981
  %cmp19 = icmp ugt i32 %max_size.addr.0, 1, !dbg !5008
  br i1 %cmp19, label %while.body, label %while.end, !dbg !5006

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !4978, metadata !DIExpression()), !dbg !5009
  br label %for.cond22, !dbg !5010

for.cond22:                                       ; preds = %for.body25, %while.body
  %mode.0 = phi i32 [ 0, %while.body ], [ %spec.select, %for.body25 ], !dbg !5009
  %tmode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %while.body ], [ %arrayidx36, %for.body25 ]
  %tmode.0.in = load i8, i8* %tmode.0.in.in, align 1, !dbg !5012
  call void @llvm.dbg.value(metadata i8 %tmode.0.in, metadata !4973, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !4978, metadata !DIExpression()), !dbg !5009
  %cmp23 = icmp eq i8 %tmode.0.in, 0, !dbg !5013
  br i1 %cmp23, label %for.end38, label %for.body25, !dbg !5015

for.body25:                                       ; preds = %for.cond22
  %tmode.0 = zext i8 %tmode.0.in to i32, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %tmode.0, metadata !4973, metadata !DIExpression()), !dbg !4981
  %idxprom26 = zext i8 %tmode.0.in to i64, !dbg !5016
  %arrayidx27 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom26, !dbg !5016
  %3 = load i8, i8* %arrayidx27, align 1, !dbg !5016
  %conv29 = zext i8 %3 to i32, !dbg !5016
  %cmp30 = icmp ugt i32 %max_size.addr.0, %conv29, !dbg !5018
  %spec.select = select i1 %cmp30, i32 %tmode.0, i32 %mode.0, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4978, metadata !DIExpression()), !dbg !5009
  %arrayidx36 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom26, !dbg !5020
  br label %for.cond22, !dbg !5021, !llvm.loop !5022

for.end38:                                        ; preds = %for.cond22
  %mode.0.lcssa = phi i32 [ %mode.0, %for.cond22 ], !dbg !5009
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !4978, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !4978, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !4978, metadata !DIExpression()), !dbg !5009
  %cmp39 = icmp eq i32 %mode.0.lcssa, 0, !dbg !5024
  br i1 %cmp39, label %cleanup, label %if.end42, !dbg !5026

if.end42:                                         ; preds = %for.end38
  %idxprom43 = sext i32 %mode.0.lcssa to i64, !dbg !5027
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom43, i32 0, !dbg !5028
  %4 = load i32, i32* %insn_code, align 4, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %4, metadata !4980, metadata !DIExpression()), !dbg !5009
  %cmp45 = icmp eq i32 %4, 2956, !dbg !5029
  br i1 %cmp45, label %if.end59, label %land.lhs.true, !dbg !5031

land.lhs.true:                                    ; preds = %if.end42
  %call47 = tail call i32 @get_mode_alignment(i32 %mode.0.lcssa) #6, !dbg !5032
  %cmp48 = icmp ult i32 %align.addr.0, %call47, !dbg !5033
  br i1 %cmp48, label %if.end59, label %if.then50, !dbg !5034

if.then50:                                        ; preds = %land.lhs.true
  %idxprom51 = zext i32 %mode.0.lcssa to i64, !dbg !5035
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom51, !dbg !5035
  %5 = load i8, i8* %arrayidx52, align 1, !dbg !5035
  %conv54 = zext i8 %5 to i64, !dbg !5035
  %div = udiv i64 %l.addr.0, %conv54, !dbg !5036
  %add = add i64 %n_insns.0, %div, !dbg !5037
  call void @llvm.dbg.value(metadata i64 %add, metadata !4972, metadata !DIExpression()), !dbg !4981
  %rem = urem i64 %l.addr.0, %conv54, !dbg !5038
  call void @llvm.dbg.value(metadata i64 %rem, metadata !4969, metadata !DIExpression()), !dbg !4981
  br label %if.end59, !dbg !5039

if.end59:                                         ; preds = %land.lhs.true, %if.end42, %if.then50
  %n_insns.1 = phi i64 [ %add, %if.then50 ], [ %n_insns.0, %land.lhs.true ], [ %n_insns.0, %if.end42 ], !dbg !4981
  %l.addr.1 = phi i64 [ %rem, %if.then50 ], [ %l.addr.0, %land.lhs.true ], [ %l.addr.0, %if.end42 ]
  call void @llvm.dbg.value(metadata i64 %l.addr.1, metadata !4969, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i64 %n_insns.1, metadata !4972, metadata !DIExpression()), !dbg !4981
  %idxprom60 = zext i32 %mode.0.lcssa to i64, !dbg !5040
  %arrayidx61 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom60, !dbg !5040
  %6 = load i8, i8* %arrayidx61, align 1, !dbg !5040
  %conv63 = zext i8 %6 to i32, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %conv63, metadata !4971, metadata !DIExpression()), !dbg !4981
  br label %cleanup, !dbg !5041

cleanup:                                          ; preds = %for.end38, %if.end59
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end59 ], [ false, %for.end38 ]
  %n_insns.2 = phi i64 [ %n_insns.1, %if.end59 ], [ %n_insns.0, %for.end38 ], !dbg !4981
  %max_size.addr.1 = phi i32 [ %conv63, %if.end59 ], [ %max_size.addr.0, %for.end38 ]
  %l.addr.2 = phi i64 [ %l.addr.1, %if.end59 ], [ %l.addr.0, %for.end38 ]
  call void @llvm.dbg.value(metadata i64 %l.addr.2, metadata !4969, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %max_size.addr.1, metadata !4971, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i64 %n_insns.2, metadata !4972, metadata !DIExpression()), !dbg !4981
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !5042

while.end:                                        ; preds = %cleanup, %while.cond
  %n_insns.3 = phi i64 [ %n_insns.2, %cleanup ], [ %n_insns.0, %while.cond ], !dbg !5007
  %l.addr.3 = phi i64 [ %l.addr.2, %cleanup ], [ %l.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata i64 %l.addr.3, metadata !4969, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i64 %n_insns.3, metadata !4972, metadata !DIExpression()), !dbg !4981
  %tobool = icmp eq i64 %l.addr.3, 0, !dbg !5043
  br i1 %tobool, label %cond.end67, label %cond.true65, !dbg !5043

cond.true65:                                      ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1088, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5043
  br label %cond.end67, !dbg !5043

cond.end67:                                       ; preds = %while.end, %cond.true65
  ret i64 %n_insns.3, !dbg !5044
}

declare dso_local zeroext i8 @optimize_insn_for_speed_p() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @move_by_pieces(%struct.rtx_def* %to, %struct.rtx_def* %from, i64 %len, i32 %align, i32 %endp) local_unnamed_addr #4 !dbg !5045 {
entry:
  %data = alloca %struct.move_by_pieces_d, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !5049, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !5050, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i64 %len, metadata !5051, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %align, metadata !5052, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %endp, metadata !5053, metadata !DIExpression()), !dbg !5082
  %0 = bitcast %struct.move_by_pieces_d* %data to i8*, !dbg !5083
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %0) #7, !dbg !5083
  %1 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !5084
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5085
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !5085
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5085
  %cmp = icmp eq %struct.mem_attrs* %3, null, !dbg !5085
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5085

cond.false:                                       ; preds = %entry
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 5, !dbg !5085
  %4 = load i8, i8* %addrspace, align 8, !dbg !5085
  br label %cond.end, !dbg !5085

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %4, %cond.false ], [ 0, %entry ], !dbg !5085
  %call = tail call i32 %1(i8 zeroext %cond) #6, !dbg !5086
  call void @llvm.dbg.value(metadata i32 %call, metadata !5069, metadata !DIExpression()), !dbg !5082
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %from, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5087
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !5087
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5071, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 5, metadata !5072, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 0, metadata !5073, metadata !DIExpression()), !dbg !5082
  %tobool = icmp eq %struct.rtx_def* %to, null, !dbg !5088
  br i1 %tobool, label %cond.end26, label %cond.true9, !dbg !5088

cond.true9:                                       ; preds = %cond.end
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5088
  %rt_mem13 = bitcast %union.rtunion_def* %6 to %struct.mem_attrs**, !dbg !5088
  %7 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem13, align 8, !dbg !5088
  %cmp14 = icmp eq %struct.mem_attrs* %7, null, !dbg !5088
  br i1 %cmp14, label %cond.end26, label %cond.true16, !dbg !5088

cond.true16:                                      ; preds = %cond.true9
  %align21 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 4, !dbg !5088
  %8 = load i32, i32* %align21, align 4, !dbg !5088
  br label %cond.end26, !dbg !5088

cond.end26:                                       ; preds = %cond.true9, %cond.end, %cond.true16
  %cond27 = phi i32 [ %8, %cond.true16 ], [ 8, %cond.true9 ], [ %align, %cond.end ], !dbg !5088
  %9 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5088
  %cmp32 = icmp eq %struct.mem_attrs* %9, null, !dbg !5088
  br i1 %cmp32, label %cond.end41, label %cond.true34, !dbg !5088

cond.true34:                                      ; preds = %cond.end26
  %align39 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i64 0, i32 4, !dbg !5088
  %10 = load i32, i32* %align39, align 4, !dbg !5088
  br label %cond.end41, !dbg !5088

cond.end41:                                       ; preds = %cond.end26, %cond.true34
  %cond42 = phi i32 [ %10, %cond.true34 ], [ 8, %cond.end26 ], !dbg !5088
  %cmp43 = icmp ult i32 %cond27, %cond42, !dbg !5088
  br i1 %cmp43, label %cond.true45, label %cond.false66, !dbg !5088

cond.true45:                                      ; preds = %cond.end41
  br i1 %tobool, label %cond.end82, label %cond.true47, !dbg !5088

cond.true47:                                      ; preds = %cond.true45
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5088
  %rt_mem51 = bitcast %union.rtunion_def* %11 to %struct.mem_attrs**, !dbg !5088
  %12 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem51, align 8, !dbg !5088
  %cmp52 = icmp eq %struct.mem_attrs* %12, null, !dbg !5088
  br i1 %cmp52, label %cond.end82, label %cond.true54, !dbg !5088

cond.true54:                                      ; preds = %cond.true47
  %align59 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %12, i64 0, i32 4, !dbg !5088
  %13 = load i32, i32* %align59, align 4, !dbg !5088
  br label %cond.end82, !dbg !5088

cond.false66:                                     ; preds = %cond.end41
  br i1 %cmp32, label %cond.end82, label %cond.true73, !dbg !5088

cond.true73:                                      ; preds = %cond.false66
  %align78 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i64 0, i32 4, !dbg !5088
  %14 = load i32, i32* %align78, align 4, !dbg !5088
  br label %cond.end82, !dbg !5088

cond.end82:                                       ; preds = %cond.true47, %cond.true45, %cond.false66, %cond.true73, %cond.true54
  %cond83 = phi i32 [ %13, %cond.true54 ], [ 8, %cond.true47 ], [ %align, %cond.true45 ], [ %14, %cond.true73 ], [ 8, %cond.false66 ], !dbg !5088
  call void @llvm.dbg.value(metadata i32 %cond83, metadata !5052, metadata !DIExpression()), !dbg !5082
  %offset = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 9, !dbg !5089
  store i64 0, i64* %offset, align 8, !dbg !5090
  %from_addr84 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 5, !dbg !5091
  store %struct.rtx_def* %5, %struct.rtx_def** %from_addr84, align 8, !dbg !5092
  br i1 %tobool, label %if.else, label %if.then, !dbg !5093

if.then:                                          ; preds = %cond.end82
  %15 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !5094
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5097
  %rt_mem89 = bitcast %union.rtunion_def* %16 to %struct.mem_attrs**, !dbg !5097
  %17 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem89, align 8, !dbg !5097
  %cmp90 = icmp eq %struct.mem_attrs* %17, null, !dbg !5097
  br i1 %cmp90, label %cond.end100, label %cond.false93, !dbg !5097

cond.false93:                                     ; preds = %if.then
  %addrspace98 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %17, i64 0, i32 5, !dbg !5097
  %18 = load i8, i8* %addrspace98, align 8, !dbg !5097
  br label %cond.end100, !dbg !5097

cond.end100:                                      ; preds = %if.then, %cond.false93
  %cond101 = phi i8 [ %18, %cond.false93 ], [ 0, %if.then ], !dbg !5097
  %call103 = tail call i32 %15(i8 zeroext %cond101) #6, !dbg !5098
  call void @llvm.dbg.value(metadata i32 %call103, metadata !5068, metadata !DIExpression()), !dbg !5082
  %arrayidx106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5099
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !5099
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !5099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !5070, metadata !DIExpression()), !dbg !5082
  %to108 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 0, !dbg !5100
  store %struct.rtx_def* %to, %struct.rtx_def** %to108, align 8, !dbg !5101
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !5102
  %bf.load = load i32, i32* %20, align 8, !dbg !5102
  %bf.clear = and i32 %bf.load, 65535, !dbg !5102
  %cmp109 = icmp eq i32 %bf.clear, 75, !dbg !5103
  br i1 %cmp109, label %lor.end, label %lor.lhs.false, !dbg !5104

lor.lhs.false:                                    ; preds = %cond.end100
  %cmp113 = icmp eq i32 %bf.clear, 74, !dbg !5105
  br i1 %cmp113, label %lor.end, label %lor.lhs.false115, !dbg !5106

lor.lhs.false115:                                 ; preds = %lor.lhs.false
  %cmp118 = icmp eq i32 %bf.clear, 77, !dbg !5107
  br i1 %cmp118, label %lor.end, label %lor.rhs, !dbg !5108

lor.rhs:                                          ; preds = %lor.lhs.false115
  %cmp122 = icmp eq i32 %bf.clear, 76, !dbg !5109
  br label %lor.end, !dbg !5108

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false115, %lor.lhs.false, %cond.end100
  %21 = phi i1 [ true, %lor.lhs.false115 ], [ true, %lor.lhs.false ], [ true, %cond.end100 ], [ %cmp122, %lor.rhs ]
  %lor.ext = zext i1 %21 to i32, !dbg !5108
  %autinc_to = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 2, !dbg !5110
  store i32 %lor.ext, i32* %autinc_to, align 8, !dbg !5111
  %bf.load124 = load i32, i32* %20, align 8, !dbg !5112
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !5112
  %cmp126 = icmp eq i32 %bf.clear125, 74, !dbg !5113
  br i1 %cmp126, label %lor.end133, label %lor.rhs128, !dbg !5114

lor.rhs128:                                       ; preds = %lor.end
  %cmp131 = icmp eq i32 %bf.clear125, 76, !dbg !5115
  br label %lor.end133, !dbg !5114

lor.end133:                                       ; preds = %lor.rhs128, %lor.end
  %22 = phi i1 [ true, %lor.end ], [ %cmp131, %lor.rhs128 ]
  %lor.ext134 = zext i1 %22 to i32, !dbg !5114
  %reverse = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 10, !dbg !5116
  store i32 %lor.ext134, i32* %reverse, align 8, !dbg !5117
  br label %if.end, !dbg !5118

if.else:                                          ; preds = %cond.end82
  call void @llvm.dbg.value(metadata i32 0, metadata !5068, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5070, metadata !DIExpression()), !dbg !5082
  %to135 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 0, !dbg !5119
  store %struct.rtx_def* null, %struct.rtx_def** %to135, align 8, !dbg !5121
  %autinc_to136 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 2, !dbg !5122
  store i32 1, i32* %autinc_to136, align 8, !dbg !5123
  %reverse137 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 10, !dbg !5124
  store i32 1, i32* %reverse137, align 8, !dbg !5125
  br label %if.end

if.end:                                           ; preds = %if.else, %lor.end133
  %23 = phi i32 [ %lor.ext, %lor.end133 ], [ 1, %if.else ]
  %24 = phi i32 [ %lor.ext134, %lor.end133 ], [ 1, %if.else ]
  %to_addr.0 = phi %struct.rtx_def* [ %19, %lor.end133 ], [ null, %if.else ], !dbg !5126
  %to_addr_mode.0 = phi i32 [ %call103, %lor.end133 ], [ 0, %if.else ], !dbg !5126
  call void @llvm.dbg.value(metadata i32 %to_addr_mode.0, metadata !5068, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_addr.0, metadata !5070, metadata !DIExpression()), !dbg !5082
  %to_addr138 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 1, !dbg !5127
  store %struct.rtx_def* %to_addr.0, %struct.rtx_def** %to_addr138, align 8, !dbg !5128
  %from139 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 4, !dbg !5129
  store %struct.rtx_def* %from, %struct.rtx_def** %from139, align 8, !dbg !5130
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !5131
  %bf.load140 = load i32, i32* %25, align 8, !dbg !5131
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !5131
  %cmp142 = icmp eq i32 %bf.clear141, 75, !dbg !5132
  br i1 %cmp142, label %lor.end159, label %lor.lhs.false144, !dbg !5133

lor.lhs.false144:                                 ; preds = %if.end
  %cmp147 = icmp eq i32 %bf.clear141, 74, !dbg !5134
  br i1 %cmp147, label %lor.end159, label %lor.lhs.false149, !dbg !5135

lor.lhs.false149:                                 ; preds = %lor.lhs.false144
  %cmp152 = icmp eq i32 %bf.clear141, 77, !dbg !5136
  br i1 %cmp152, label %lor.end159, label %lor.rhs154, !dbg !5137

lor.rhs154:                                       ; preds = %lor.lhs.false149
  %cmp157 = icmp eq i32 %bf.clear141, 76, !dbg !5138
  br label %lor.end159, !dbg !5137

lor.end159:                                       ; preds = %lor.rhs154, %lor.lhs.false149, %lor.lhs.false144, %if.end
  %26 = phi i1 [ true, %lor.lhs.false149 ], [ true, %lor.lhs.false144 ], [ true, %if.end ], [ %cmp157, %lor.rhs154 ]
  %lor.ext160 = zext i1 %26 to i32, !dbg !5137
  %autinc_from = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 6, !dbg !5139
  store i32 %lor.ext160, i32* %autinc_from, align 8, !dbg !5140
  %explicit_inc_from = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 7, !dbg !5141
  store i32 0, i32* %explicit_inc_from, align 4, !dbg !5142
  %explicit_inc_to = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 3, !dbg !5143
  store i32 0, i32* %explicit_inc_to, align 4, !dbg !5144
  %reverse161 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 10, !dbg !5145
  %tobool162 = icmp eq i32 %24, 0, !dbg !5147
  br i1 %tobool162, label %if.end165, label %if.then163, !dbg !5148

if.then163:                                       ; preds = %lor.end159
  store i64 %len, i64* %offset, align 8, !dbg !5149
  br label %if.end165, !dbg !5150

if.end165:                                        ; preds = %lor.end159, %if.then163
  %len166 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 8, !dbg !5151
  store i64 %len, i64* %len166, align 8, !dbg !5152
  br i1 %26, label %land.lhs.true, label %land.lhs.true171, !dbg !5153

land.lhs.true:                                    ; preds = %if.end165
  %tobool170 = icmp eq i32 %23, 0, !dbg !5155
  br i1 %tobool170, label %land.lhs.true171, label %if.end215, !dbg !5156

land.lhs.true171:                                 ; preds = %if.end165, %land.lhs.true
  %call172 = tail call fastcc i64 @move_by_pieces_ninsns(i64 %len, i32 %cond83, i32 5) #8, !dbg !5157
  %cmp173 = icmp ugt i64 %call172, 2, !dbg !5158
  br i1 %cmp173, label %if.then175, label %if.end215, !dbg !5159

if.then175:                                       ; preds = %land.lhs.true171
  br label %for.cond, !dbg !5160

for.cond:                                         ; preds = %for.body, %if.then175
  %mode.0 = phi i32 [ 0, %if.then175 ], [ %spec.select, %for.body ], !dbg !5082
  %tmode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %if.then175 ], [ %arrayidx187, %for.body ]
  %tmode.0.in = load i8, i8* %tmode.0.in.in, align 1, !dbg !5163
  call void @llvm.dbg.value(metadata i8 %tmode.0.in, metadata !5074, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !5073, metadata !DIExpression()), !dbg !5082
  %cmp177 = icmp eq i8 %tmode.0.in, 0, !dbg !5164
  br i1 %cmp177, label %for.end, label %for.body, !dbg !5166

for.body:                                         ; preds = %for.cond
  %tmode.0 = zext i8 %tmode.0.in to i32, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %tmode.0, metadata !5074, metadata !DIExpression()), !dbg !5082
  %idxprom = zext i8 %tmode.0.in to i64, !dbg !5167
  %arrayidx179 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5167
  %27 = load i8, i8* %arrayidx179, align 1, !dbg !5167
  %cmp182 = icmp ult i8 %27, 5, !dbg !5169
  %spec.select = select i1 %cmp182, i32 %tmode.0, i32 %mode.0, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5073, metadata !DIExpression()), !dbg !5082
  %arrayidx187 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !5171
  br label %for.cond, !dbg !5172, !llvm.loop !5173

for.end:                                          ; preds = %for.cond
  %mode.0.lcssa = phi i32 [ %mode.0, %for.cond ], !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !5073, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !5073, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !5073, metadata !DIExpression()), !dbg !5082
  br i1 %26, label %if.end201, label %land.lhs.true191, !dbg !5175

land.lhs.true191:                                 ; preds = %for.end
  %bf.load192 = load i32, i32* %25, align 8, !dbg !5177
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !5177
  %idxprom194 = zext i32 %bf.clear193 to i64, !dbg !5177
  %arrayidx195 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom194, !dbg !5177
  %28 = load i32, i32* %arrayidx195, align 4, !dbg !5177
  %cmp196 = icmp eq i32 %28, 9, !dbg !5177
  br i1 %cmp196, label %if.then198, label %if.end201, !dbg !5178

if.then198:                                       ; preds = %land.lhs.true191
  %call199 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %call, %struct.rtx_def* %5) #6, !dbg !5179
  store %struct.rtx_def* %call199, %struct.rtx_def** %from_addr84, align 8, !dbg !5180
  br label %if.end201, !dbg !5181

if.end201:                                        ; preds = %for.end, %if.then198, %land.lhs.true191
  %tobool203 = icmp eq i32 %23, 0, !dbg !5182
  br i1 %tobool203, label %land.lhs.true204, label %if.end215, !dbg !5184

land.lhs.true204:                                 ; preds = %if.end201
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_addr.0, i64 0, i32 0, !dbg !5185
  %bf.load205 = load i32, i32* %29, align 8, !dbg !5185
  %bf.clear206 = and i32 %bf.load205, 65535, !dbg !5185
  %idxprom207 = zext i32 %bf.clear206 to i64, !dbg !5185
  %arrayidx208 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom207, !dbg !5185
  %30 = load i32, i32* %arrayidx208, align 4, !dbg !5185
  %cmp209 = icmp eq i32 %30, 9, !dbg !5185
  br i1 %cmp209, label %if.then211, label %if.end215, !dbg !5186

if.then211:                                       ; preds = %land.lhs.true204
  %call212 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %to_addr_mode.0, %struct.rtx_def* %to_addr.0) #6, !dbg !5187
  store %struct.rtx_def* %call212, %struct.rtx_def** %to_addr138, align 8, !dbg !5188
  br label %if.end215, !dbg !5189

if.end215:                                        ; preds = %land.lhs.true, %if.end201, %land.lhs.true204, %if.then211, %land.lhs.true171
  %mode.2 = phi i32 [ 0, %land.lhs.true ], [ 0, %land.lhs.true171 ], [ %mode.0.lcssa, %if.then211 ], [ %mode.0.lcssa, %land.lhs.true204 ], [ %mode.0.lcssa, %if.end201 ], !dbg !5190
  call void @llvm.dbg.value(metadata i32 %mode.2, metadata !5073, metadata !DIExpression()), !dbg !5082
  %call216 = tail call i32 @mode_for_size(i32 32, i32 2, i32 1) #6, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %call216, metadata !5074, metadata !DIExpression()), !dbg !5082
  %call217 = tail call i32 @get_mode_alignment(i32 %call216) #6, !dbg !5192
  %cmp218 = icmp ult i32 %cond83, %call217, !dbg !5193
  br i1 %cmp218, label %if.else222, label %if.then220, !dbg !5194

if.then220:                                       ; preds = %if.end215
  %call221 = tail call i32 @get_mode_alignment(i32 %call216) #6, !dbg !5195
  call void @llvm.dbg.value(metadata i32 %call221, metadata !5052, metadata !DIExpression()), !dbg !5082
  br label %if.end249, !dbg !5196

if.else222:                                       ; preds = %if.end215
  %31 = load i8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), align 2, !dbg !5197
  %conv223 = zext i8 %31 to i32, !dbg !5197
  call void @llvm.dbg.value(metadata i32 %conv223, metadata !5074, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %conv223, metadata !5076, metadata !DIExpression()), !dbg !5199
  br label %for.cond224, !dbg !5200

for.cond224:                                      ; preds = %for.inc236, %if.else222
  %tmode.1 = phi i32 [ %conv223, %if.else222 ], [ %conv239, %for.inc236 ], !dbg !5201
  %xmode.0 = phi i32 [ %conv223, %if.else222 ], [ %tmode.1, %for.inc236 ], !dbg !5201
  call void @llvm.dbg.value(metadata i32 %xmode.0, metadata !5076, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %tmode.1, metadata !5074, metadata !DIExpression()), !dbg !5082
  %cmp225 = icmp eq i32 %tmode.1, 0, !dbg !5202
  br i1 %cmp225, label %for.end240, label %for.body227, !dbg !5204

for.body227:                                      ; preds = %for.cond224
  %idxprom228 = zext i32 %tmode.1 to i64, !dbg !5205
  %arrayidx229 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom228, !dbg !5205
  %32 = load i8, i8* %arrayidx229, align 1, !dbg !5205
  %cmp232 = icmp ugt i8 %32, 4, !dbg !5207
  br i1 %cmp232, label %for.end240, label %for.inc236, !dbg !5208

for.inc236:                                       ; preds = %for.body227
  call void @llvm.dbg.value(metadata i32 %tmode.1, metadata !5076, metadata !DIExpression()), !dbg !5199
  %arrayidx238 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom228, !dbg !5209
  %33 = load i8, i8* %arrayidx238, align 1, !dbg !5209
  %conv239 = zext i8 %33 to i32, !dbg !5209
  call void @llvm.dbg.value(metadata i32 %conv239, metadata !5074, metadata !DIExpression()), !dbg !5082
  br label %for.cond224, !dbg !5210, !llvm.loop !5211

for.end240:                                       ; preds = %for.cond224, %for.body227
  %xmode.0.lcssa = phi i32 [ %xmode.0, %for.cond224 ], [ %xmode.0, %for.body227 ], !dbg !5201
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !5076, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !5076, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !5076, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !5076, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !5076, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !5076, metadata !DIExpression()), !dbg !5199
  %call241 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !5213
  %cmp242 = icmp ugt i32 %cond83, %call241, !dbg !5213
  br i1 %cmp242, label %if.end249, label %cond.false245, !dbg !5213

cond.false245:                                    ; preds = %for.end240
  %call246 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !5213
  br label %if.end249, !dbg !5213

if.end249:                                        ; preds = %cond.false245, %for.end240, %if.then220
  %align.addr.0 = phi i32 [ %call221, %if.then220 ], [ %call246, %cond.false245 ], [ %cond83, %for.end240 ], !dbg !5214
  call void @llvm.dbg.value(metadata i32 %align.addr.0, metadata !5052, metadata !DIExpression()), !dbg !5082
  br label %while.cond, !dbg !5215

while.cond:                                       ; preds = %if.end285, %if.end249
  %max_size.0 = phi i32 [ 5, %if.end249 ], [ %conv289, %if.end285 ], !dbg !5082
  %mode.3 = phi i32 [ %mode.2, %if.end249 ], [ %mode.4.lcssa, %if.end285 ], !dbg !5190
  call void @llvm.dbg.value(metadata i32 %mode.3, metadata !5073, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %max_size.0, metadata !5072, metadata !DIExpression()), !dbg !5082
  %cmp250 = icmp ugt i32 %max_size.0, 1, !dbg !5216
  br i1 %cmp250, label %while.body, label %while.end, !dbg !5215

while.body:                                       ; preds = %while.cond
  br label %for.cond253, !dbg !5217

for.cond253:                                      ; preds = %for.body256, %while.body
  %mode.4 = phi i32 [ %mode.3, %while.body ], [ %spec.select1, %for.body256 ], !dbg !5082
  %tmode.2.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %while.body ], [ %arrayidx267, %for.body256 ]
  %tmode.2.in = load i8, i8* %tmode.2.in.in, align 1, !dbg !5220
  call void @llvm.dbg.value(metadata i8 %tmode.2.in, metadata !5074, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.4, metadata !5073, metadata !DIExpression()), !dbg !5082
  %cmp254 = icmp eq i8 %tmode.2.in, 0, !dbg !5221
  br i1 %cmp254, label %for.end269, label %for.body256, !dbg !5223

for.body256:                                      ; preds = %for.cond253
  %tmode.2 = zext i8 %tmode.2.in to i32, !dbg !5220
  call void @llvm.dbg.value(metadata i32 %tmode.2, metadata !5074, metadata !DIExpression()), !dbg !5082
  %idxprom257 = zext i8 %tmode.2.in to i64, !dbg !5224
  %arrayidx258 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom257, !dbg !5224
  %34 = load i8, i8* %arrayidx258, align 1, !dbg !5224
  %conv260 = zext i8 %34 to i32, !dbg !5224
  %cmp261 = icmp ugt i32 %max_size.0, %conv260, !dbg !5226
  %spec.select1 = select i1 %cmp261, i32 %tmode.2, i32 %mode.4, !dbg !5227
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !5073, metadata !DIExpression()), !dbg !5082
  %arrayidx267 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom257, !dbg !5228
  br label %for.cond253, !dbg !5229, !llvm.loop !5230

for.end269:                                       ; preds = %for.cond253
  %mode.4.lcssa = phi i32 [ %mode.4, %for.cond253 ], !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.4.lcssa, metadata !5073, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.4.lcssa, metadata !5073, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %mode.4.lcssa, metadata !5073, metadata !DIExpression()), !dbg !5082
  %cmp270 = icmp eq i32 %mode.4.lcssa, 0, !dbg !5232
  br i1 %cmp270, label %while.end, label %if.end273, !dbg !5234

if.end273:                                        ; preds = %for.end269
  %idxprom274 = sext i32 %mode.4.lcssa to i64, !dbg !5235
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom274, i32 0, !dbg !5236
  %35 = load i32, i32* %insn_code, align 4, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %35, metadata !5075, metadata !DIExpression()), !dbg !5082
  %cmp276 = icmp eq i32 %35, 2956, !dbg !5237
  br i1 %cmp276, label %if.end285, label %land.lhs.true278, !dbg !5239

land.lhs.true278:                                 ; preds = %if.end273
  %call279 = call i32 @get_mode_alignment(i32 %mode.4.lcssa) #6, !dbg !5240
  %cmp280 = icmp ult i32 %align.addr.0, %call279, !dbg !5241
  br i1 %cmp280, label %if.end285, label %if.then282, !dbg !5242

if.then282:                                       ; preds = %land.lhs.true278
  %idxprom283 = zext i32 %35 to i64, !dbg !5243
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom283, i32 2, !dbg !5243
  %36 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !5243
  call void @llvm.dbg.value(metadata %struct.move_by_pieces_d* %data, metadata !5054, metadata !DIExpression(DW_OP_deref)), !dbg !5082
  call fastcc void @move_by_pieces_1(%struct.rtx_def* (%struct.rtx_def*, ...)* %36, i32 %mode.4.lcssa, %struct.move_by_pieces_d* nonnull %data) #8, !dbg !5244
  br label %if.end285, !dbg !5244

if.end285:                                        ; preds = %land.lhs.true278, %if.end273, %if.then282
  %idxprom286 = zext i32 %mode.4.lcssa to i64, !dbg !5245
  %arrayidx287 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom286, !dbg !5245
  %37 = load i8, i8* %arrayidx287, align 1, !dbg !5245
  %conv289 = zext i8 %37 to i32, !dbg !5245
  call void @llvm.dbg.value(metadata i32 %conv289, metadata !5072, metadata !DIExpression()), !dbg !5082
  br label %while.cond, !dbg !5215, !llvm.loop !5246

while.end:                                        ; preds = %for.end269, %while.cond
  %38 = load i64, i64* %len166, align 8, !dbg !5248
  %tobool291 = icmp eq i64 %38, 0, !dbg !5248
  br i1 %tobool291, label %cond.end294, label %cond.true292, !dbg !5248

cond.true292:                                     ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1008, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5248
  br label %cond.end294, !dbg !5248

cond.end294:                                      ; preds = %while.end, %cond.true292
  %tobool296 = icmp eq i32 %endp, 0, !dbg !5249
  br i1 %tobool296, label %if.else329, label %if.then297, !dbg !5250

if.then297:                                       ; preds = %cond.end294
  %39 = load i32, i32* %reverse161, align 8, !dbg !5251
  %tobool299 = icmp eq i32 %39, 0, !dbg !5251
  br i1 %tobool299, label %cond.end302, label %cond.true300, !dbg !5251

cond.true300:                                     ; preds = %if.then297
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5251
  br label %cond.end302, !dbg !5251

cond.end302:                                      ; preds = %if.then297, %cond.true300
  %autinc_to304 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 2, !dbg !5252
  %40 = load i32, i32* %autinc_to304, align 8, !dbg !5252
  %tobool305 = icmp eq i32 %40, 0, !dbg !5254
  %cmp307 = icmp eq i32 %endp, 2, !dbg !5255
  br i1 %tobool305, label %if.else319, label %if.then306, !dbg !5256

if.then306:                                       ; preds = %cond.end302
  br i1 %cmp307, label %if.then309, label %if.then306.if.end314_crit_edge, !dbg !5257

if.then306.if.end314_crit_edge:                   ; preds = %if.then306
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %to_addr138, align 8, !dbg !5259
  br label %if.end314, !dbg !5257

if.then309:                                       ; preds = %if.then306
  %41 = load %struct.rtx_def*, %struct.rtx_def** %to_addr138, align 8, !dbg !5260
  %call311 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %41, i64 -1) #6, !dbg !5264
  %call312 = call %struct.rtx_def* @copy_to_mode_reg(i32 %to_addr_mode.0, %struct.rtx_def* %call311) #6, !dbg !5265
  store %struct.rtx_def* %call312, %struct.rtx_def** %to_addr138, align 8, !dbg !5266
  br label %if.end314, !dbg !5267

if.end314:                                        ; preds = %if.then306.if.end314_crit_edge, %if.then309
  %42 = phi %struct.rtx_def* [ %.pre, %if.then306.if.end314_crit_edge ], [ %call312, %if.then309 ], !dbg !5259
  %to315 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 0, !dbg !5259
  %43 = load %struct.rtx_def*, %struct.rtx_def** %to315, align 8, !dbg !5259
  %44 = load i64, i64* %offset, align 8, !dbg !5259
  %call318 = call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %43, i32 14, %struct.rtx_def* %42, i64 %44, i32 1) #6, !dbg !5259
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call318, metadata !5079, metadata !DIExpression()), !dbg !5268
  br label %cleanup, !dbg !5269

if.else319:                                       ; preds = %cond.end302
  br i1 %cmp307, label %if.then322, label %if.else319.if.end324_crit_edge, !dbg !5270

if.else319.if.end324_crit_edge:                   ; preds = %if.else319
  %.pre2 = load i64, i64* %offset, align 8, !dbg !5272
  br label %if.end324, !dbg !5270

if.then322:                                       ; preds = %if.else319
  %45 = load i64, i64* %offset, align 8, !dbg !5273
  %dec = add nsw i64 %45, -1, !dbg !5273
  store i64 %dec, i64* %offset, align 8, !dbg !5273
  br label %if.end324, !dbg !5273

if.end324:                                        ; preds = %if.else319.if.end324_crit_edge, %if.then322
  %46 = phi i64 [ %.pre2, %if.else319.if.end324_crit_edge ], [ %dec, %if.then322 ], !dbg !5272
  %to325 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 0, !dbg !5272
  %47 = load %struct.rtx_def*, %struct.rtx_def** %to325, align 8, !dbg !5272
  %call327 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %47, i32 14, i64 %46, i32 1, i32 1) #6, !dbg !5272
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call327, metadata !5079, metadata !DIExpression()), !dbg !5268
  br label %cleanup

if.else329:                                       ; preds = %cond.end294
  %to330 = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 0, !dbg !5275
  %48 = load %struct.rtx_def*, %struct.rtx_def** %to330, align 8, !dbg !5275
  br label %cleanup, !dbg !5276

cleanup:                                          ; preds = %if.end314, %if.end324, %if.else329
  %retval.0 = phi %struct.rtx_def* [ %48, %if.else329 ], [ %call318, %if.end314 ], [ %call327, %if.end324 ], !dbg !5277
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %0) #7, !dbg !5278
  ret %struct.rtx_def* %retval.0, !dbg !5278
}

declare dso_local %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #1

declare dso_local i32 @get_mode_alignment(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @move_by_pieces_1(%struct.rtx_def* (%struct.rtx_def*, ...)* %genfun, i32 %mode, %struct.move_by_pieces_d* %data) unnamed_addr #4 !dbg !5279 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* (%struct.rtx_def*, ...)* %genfun, metadata !5287, metadata !DIExpression()), !dbg !5293
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5288, metadata !DIExpression()), !dbg !5293
  call void @llvm.dbg.value(metadata %struct.move_by_pieces_d* %data, metadata !5289, metadata !DIExpression()), !dbg !5293
  %idxprom = zext i32 %mode to i64, !dbg !5294
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5294
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5294
  call void @llvm.dbg.value(metadata i8 %0, metadata !5290, metadata !DIExpression()), !dbg !5293
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5291, metadata !DIExpression()), !dbg !5293
  %len = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 8, !dbg !5293
  %conv2 = zext i8 %0 to i64, !dbg !5293
  %reverse = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 10, !dbg !5295
  %offset = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 9, !dbg !5295
  %to = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 0, !dbg !5298
  %autinc_to = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 2, !dbg !5300
  %to_addr = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 1, !dbg !5300
  %autinc_from = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 6, !dbg !5303
  %from = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 4, !dbg !5303
  %from_addr = getelementptr inbounds %struct.move_by_pieces_d, %struct.move_by_pieces_d* %data, i64 0, i32 5, !dbg !5303
  %.pre = load i64, i64* %len, align 8, !dbg !5305
  br label %while.cond, !dbg !5306

while.cond:                                       ; preds = %if.end37, %entry
  %1 = phi i64 [ %.pre, %entry ], [ %sub40, %if.end37 ], !dbg !5305
  %to1.0 = phi %struct.rtx_def* [ null, %entry ], [ %to1.2, %if.end37 ], !dbg !5293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to1.0, metadata !5291, metadata !DIExpression()), !dbg !5293
  %cmp = icmp ult i64 %1, %conv2, !dbg !5307
  br i1 %cmp, label %while.end, label %while.body, !dbg !5306

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %reverse, align 8, !dbg !5308
  %tobool = icmp eq i32 %2, 0, !dbg !5309
  br i1 %tobool, label %if.end, label %if.then, !dbg !5310

if.then:                                          ; preds = %while.body
  %3 = load i64, i64* %offset, align 8, !dbg !5311
  %sub = sub nsw i64 %3, %conv2, !dbg !5311
  store i64 %sub, i64* %offset, align 8, !dbg !5311
  br label %if.end, !dbg !5312

if.end:                                           ; preds = %while.body, %if.then
  %4 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !5313
  %tobool5 = icmp eq %struct.rtx_def* %4, null, !dbg !5314
  br i1 %tobool5, label %if.end15, label %if.then6, !dbg !5315

if.then6:                                         ; preds = %if.end
  %5 = load i32, i32* %autinc_to, align 8, !dbg !5316
  %tobool7 = icmp eq i32 %5, 0, !dbg !5317
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !5318

if.then8:                                         ; preds = %if.then6
  %6 = load %struct.rtx_def*, %struct.rtx_def** %to_addr, align 8, !dbg !5319
  %7 = load i64, i64* %offset, align 8, !dbg !5319
  %call = tail call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* nonnull %4, i32 %mode, %struct.rtx_def* %6, i64 %7, i32 1) #6, !dbg !5319
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5291, metadata !DIExpression()), !dbg !5293
  br label %if.end15, !dbg !5320

if.else:                                          ; preds = %if.then6
  %8 = load i64, i64* %offset, align 8, !dbg !5321
  %call13 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* nonnull %4, i32 %mode, i64 %8, i32 1, i32 1) #6, !dbg !5321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !5291, metadata !DIExpression()), !dbg !5293
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then8, %if.else
  %to1.2 = phi %struct.rtx_def* [ %to1.0, %if.end ], [ %call, %if.then8 ], [ %call13, %if.else ], !dbg !5293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to1.2, metadata !5291, metadata !DIExpression()), !dbg !5293
  %9 = load i32, i32* %autinc_from, align 8, !dbg !5322
  %tobool16 = icmp eq i32 %9, 0, !dbg !5323
  %10 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8, !dbg !5303
  br i1 %tobool16, label %if.else20, label %if.then17, !dbg !5324

if.then17:                                        ; preds = %if.end15
  %11 = load %struct.rtx_def*, %struct.rtx_def** %from_addr, align 8, !dbg !5325
  %12 = load i64, i64* %offset, align 8, !dbg !5325
  %call19 = tail call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %10, i32 %mode, %struct.rtx_def* %11, i64 %12, i32 1) #6, !dbg !5325
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !5292, metadata !DIExpression()), !dbg !5293
  br label %if.end24, !dbg !5326

if.else20:                                        ; preds = %if.end15
  %13 = load i64, i64* %offset, align 8, !dbg !5327
  %call23 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %10, i32 %mode, i64 %13, i32 1, i32 1) #6, !dbg !5327
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call23, metadata !5292, metadata !DIExpression()), !dbg !5293
  br label %if.end24

if.end24:                                         ; preds = %if.else20, %if.then17
  %from1.0 = phi %struct.rtx_def* [ %call19, %if.then17 ], [ %call23, %if.else20 ], !dbg !5303
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from1.0, metadata !5292, metadata !DIExpression()), !dbg !5293
  %14 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !5328
  %tobool26 = icmp eq %struct.rtx_def* %14, null, !dbg !5330
  br i1 %tobool26, label %if.else30, label %if.then27, !dbg !5331

if.then27:                                        ; preds = %if.end24
  %call28 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %genfun(%struct.rtx_def* %to1.2, %struct.rtx_def* %from1.0) #6, !dbg !5332
  %call29 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call28) #6, !dbg !5333
  br label %if.end31, !dbg !5333

if.else30:                                        ; preds = %if.end24
  tail call fastcc void @emit_single_push_insn(i32 %mode, %struct.rtx_def* %from1.0, %union.tree_node* null) #8, !dbg !5334
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.then27
  %15 = load i32, i32* %reverse, align 8, !dbg !5336
  %tobool33 = icmp eq i32 %15, 0, !dbg !5338
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !5339

if.then34:                                        ; preds = %if.end31
  %16 = load i64, i64* %offset, align 8, !dbg !5340
  %add = add nsw i64 %16, %conv2, !dbg !5340
  store i64 %add, i64* %offset, align 8, !dbg !5340
  br label %if.end37, !dbg !5341

if.end37:                                         ; preds = %if.end31, %if.then34
  %17 = load i64, i64* %len, align 8, !dbg !5342
  %sub40 = sub i64 %17, %conv2, !dbg !5342
  store i64 %sub40, i64* %len, align 8, !dbg !5342
  br label %while.cond, !dbg !5306, !llvm.loop !5343

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5345
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def*, i32, %struct.rtx_def*, i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_block_move_hints(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %size, i32 %method, i32 %expected_align, i64 %expected_size) local_unnamed_addr #4 !dbg !5346 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5350, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5351, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !5352, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %method, metadata !5353, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %expected_align, metadata !5354, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i64 %expected_size, metadata !5355, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5357, metadata !DIExpression()), !dbg !5359
  switch i32 %method, label %sw.default [
    i32 0, label %sw.epilog
    i32 3, label %sw.epilog
    i32 2, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !5360

sw.bb2:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @block_move_libcall_safe_for_call_parm() #8, !dbg !5361
  call void @llvm.dbg.value(metadata i8 %call, metadata !5356, metadata !DIExpression()), !dbg !5359
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5363
  %add = add nsw i32 %0, 1, !dbg !5363
  store i32 %add, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5363
  %phitmp = zext i8 %call to i32, !dbg !5364
  br label %sw.epilog, !dbg !5364

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !5356, metadata !DIExpression()), !dbg !5359
  br label %sw.epilog, !dbg !5365

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5366
  br label %sw.epilog, !dbg !5367

sw.epilog:                                        ; preds = %entry, %entry, %sw.default, %sw.bb3, %sw.bb2
  %may_use_call.0 = phi i32 [ 0, %sw.default ], [ 0, %sw.bb3 ], [ %phitmp, %sw.bb2 ], [ 1, %entry ], [ 1, %entry ]
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5368
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !5368
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5368
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !5368
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5368

cond.true:                                        ; preds = %sw.epilog
  %align8 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 4, !dbg !5368
  %3 = load i32, i32* %align8, align 4, !dbg !5368
  br label %cond.end, !dbg !5368

cond.end:                                         ; preds = %sw.epilog, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 8, %sw.epilog ], !dbg !5368
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5368
  %rt_mem12 = bitcast %union.rtunion_def* %4 to %struct.mem_attrs**, !dbg !5368
  %5 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem12, align 8, !dbg !5368
  %cmp13 = icmp eq %struct.mem_attrs* %5, null, !dbg !5368
  br i1 %cmp13, label %cond.end21, label %cond.true14, !dbg !5368

cond.true14:                                      ; preds = %cond.end
  %align19 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %5, i64 0, i32 4, !dbg !5368
  %6 = load i32, i32* %align19, align 4, !dbg !5368
  br label %cond.end21, !dbg !5368

cond.end21:                                       ; preds = %cond.end, %cond.true14
  %cond22 = phi i32 [ %6, %cond.true14 ], [ 8, %cond.end ], !dbg !5368
  %cmp23 = icmp ult i32 %cond, %cond22, !dbg !5368
  br i1 %cmp23, label %cond.true24, label %cond.false39, !dbg !5368

cond.true24:                                      ; preds = %cond.end21
  br i1 %cmp, label %cond.end54, label %cond.true30, !dbg !5368

cond.true30:                                      ; preds = %cond.true24
  %align35 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 4, !dbg !5368
  %7 = load i32, i32* %align35, align 4, !dbg !5368
  br label %cond.end54, !dbg !5368

cond.false39:                                     ; preds = %cond.end21
  br i1 %cmp13, label %cond.end54, label %cond.true45, !dbg !5368

cond.true45:                                      ; preds = %cond.false39
  %align50 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %5, i64 0, i32 4, !dbg !5368
  %8 = load i32, i32* %align50, align 4, !dbg !5368
  br label %cond.end54, !dbg !5368

cond.end54:                                       ; preds = %cond.true24, %cond.false39, %cond.true45, %cond.true30
  %cond55 = phi i32 [ %7, %cond.true30 ], [ 8, %cond.true24 ], [ %8, %cond.true45 ], [ 8, %cond.false39 ], !dbg !5368
  call void @llvm.dbg.value(metadata i32 %cond55, metadata !5358, metadata !DIExpression()), !dbg !5359
  %cmp56 = icmp ugt i32 %cond55, 7, !dbg !5369
  br i1 %cmp56, label %cond.end59, label %cond.true57, !dbg !5369

cond.true57:                                      ; preds = %cond.end54
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5369
  br label %cond.end59, !dbg !5369

cond.end59:                                       ; preds = %cond.end54, %cond.true57
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5370
  %bf.load = load i32, i32* %9, align 8, !dbg !5370
  %bf.clear = and i32 %bf.load, 65535, !dbg !5370
  %cmp61 = icmp eq i32 %bf.clear, 43, !dbg !5370
  br i1 %cmp61, label %cond.end64, label %cond.true62, !dbg !5370

cond.true62:                                      ; preds = %cond.end59
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5370
  br label %cond.end64, !dbg !5370

cond.end64:                                       ; preds = %cond.end59, %cond.true62
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !5371
  %bf.load66 = load i32, i32* %10, align 8, !dbg !5371
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !5371
  %cmp68 = icmp eq i32 %bf.clear67, 43, !dbg !5371
  br i1 %cmp68, label %cond.end71, label %cond.true69, !dbg !5371

cond.true69:                                      ; preds = %cond.end64
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5371
  br label %cond.end71, !dbg !5371

cond.end71:                                       ; preds = %cond.end64, %cond.true69
  %tobool = icmp eq %struct.rtx_def* %size, null, !dbg !5372
  br i1 %tobool, label %cond.true73, label %cond.end75, !dbg !5372

cond.true73:                                      ; preds = %cond.end71
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1201, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5372
  br label %cond.end75, !dbg !5372

cond.end75:                                       ; preds = %cond.end71, %cond.true73
  %call77 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %x, i32 1, i64 0, i32 1, i32 1) #6, !dbg !5373
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call77, metadata !5350, metadata !DIExpression()), !dbg !5359
  %call78 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %y, i32 1, i64 0, i32 1, i32 1) #6, !dbg !5374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call78, metadata !5351, metadata !DIExpression()), !dbg !5359
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !5375
  %bf.load79 = load i32, i32* %11, align 8, !dbg !5375
  %bf.clear80 = and i32 %bf.load79, 65535, !dbg !5375
  %cmp81 = icmp eq i32 %bf.clear80, 30, !dbg !5375
  br i1 %cmp81, label %if.then, label %if.end88, !dbg !5377

if.then:                                          ; preds = %cond.end75
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !5378
  %arrayidx83 = bitcast %union.u* %u82 to i64*, !dbg !5378
  %12 = load i64, i64* %arrayidx83, align 8, !dbg !5378
  %cmp84 = icmp eq i64 %12, 0, !dbg !5381
  br i1 %cmp84, label %cleanup, label %if.end, !dbg !5382

if.end:                                           ; preds = %if.then
  %call86 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %call77) #6, !dbg !5383
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !5350, metadata !DIExpression()), !dbg !5359
  %call87 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %call78) #6, !dbg !5384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call87, metadata !5351, metadata !DIExpression()), !dbg !5359
  tail call void @set_mem_size(%struct.rtx_def* %call86, %struct.rtx_def* %size) #6, !dbg !5385
  tail call void @set_mem_size(%struct.rtx_def* %call87, %struct.rtx_def* %size) #6, !dbg !5386
  %bf.load89.pre = load i32, i32* %11, align 8, !dbg !5387
  br label %if.end88, !dbg !5389

if.end88:                                         ; preds = %if.end, %cond.end75
  %bf.load89 = phi i32 [ %bf.load89.pre, %if.end ], [ %bf.load79, %cond.end75 ], !dbg !5387
  %y.addr.0 = phi %struct.rtx_def* [ %call87, %if.end ], [ %call78, %cond.end75 ], !dbg !5359
  %x.addr.0 = phi %struct.rtx_def* [ %call86, %if.end ], [ %call77, %cond.end75 ], !dbg !5359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !5350, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0, metadata !5351, metadata !DIExpression()), !dbg !5359
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !5387
  %cmp91 = icmp eq i32 %bf.clear90, 30, !dbg !5387
  br i1 %cmp91, label %land.lhs.true, label %if.else, !dbg !5390

land.lhs.true:                                    ; preds = %if.end88
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !5391
  %arrayidx94 = bitcast %union.u* %u92 to i64*, !dbg !5391
  %13 = load i64, i64* %arrayidx94, align 8, !dbg !5391
  %call95 = tail call fastcc i64 @move_by_pieces_ninsns(i64 %13, i32 %cond55, i32 5) #8, !dbg !5391
  %call96 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !5391
  %tobool97 = icmp eq i8 %call96, 0, !dbg !5391
  br i1 %tobool97, label %cond.end100, label %cond.true98, !dbg !5391

cond.true98:                                      ; preds = %land.lhs.true
  %14 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5391
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %14, i64 0, i32 10, !dbg !5391
  %15 = load i32, i32* %move_ratio, align 4, !dbg !5391
  %phitmp3 = zext i32 %15 to i64, !dbg !5391
  br label %cond.end100, !dbg !5391

cond.end100:                                      ; preds = %land.lhs.true, %cond.true98
  %cond101 = phi i64 [ %phitmp3, %cond.true98 ], [ 3, %land.lhs.true ]
  %cmp103 = icmp ult i64 %call95, %cond101, !dbg !5391
  br i1 %cmp103, label %if.then105, label %if.else, !dbg !5392

if.then105:                                       ; preds = %cond.end100
  %16 = load i64, i64* %arrayidx94, align 8, !dbg !5393
  %call109 = tail call %struct.rtx_def* @move_by_pieces(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.0, i64 %16, i32 %cond55, i32 0) #8, !dbg !5394
  br label %if.end161, !dbg !5394

if.else:                                          ; preds = %cond.end100, %if.end88
  %call110 = tail call fastcc zeroext i8 @emit_block_move_via_movmem(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.0, %struct.rtx_def* %size, i32 %cond55, i32 %expected_align, i64 %expected_size) #8, !dbg !5395
  %tobool111 = icmp eq i8 %call110, 0, !dbg !5395
  br i1 %tobool111, label %if.else113, label %if.end161, !dbg !5397

if.else113:                                       ; preds = %if.else
  %tobool115 = icmp eq i32 %may_use_call.0, 0, !dbg !5398
  br i1 %tobool115, label %if.else158, label %land.lhs.true116, !dbg !5400

land.lhs.true116:                                 ; preds = %if.else113
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5401
  %rt_mem120 = bitcast %union.rtunion_def* %17 to %struct.mem_attrs**, !dbg !5401
  %18 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem120, align 8, !dbg !5401
  %cmp121 = icmp eq %struct.mem_attrs* %18, null, !dbg !5401
  br i1 %cmp121, label %cond.end130, label %cond.false124, !dbg !5401

cond.false124:                                    ; preds = %land.lhs.true116
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %18, i64 0, i32 5, !dbg !5401
  %19 = load i8, i8* %addrspace, align 8, !dbg !5401
  %phitmp1 = icmp eq i8 %19, 0, !dbg !5401
  br label %cond.end130, !dbg !5401

cond.end130:                                      ; preds = %land.lhs.true116, %cond.false124
  %cond131 = phi i1 [ %phitmp1, %cond.false124 ], [ true, %land.lhs.true116 ]
  br i1 %cond131, label %land.lhs.true134, label %if.else158, !dbg !5402

land.lhs.true134:                                 ; preds = %cond.end130
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5403
  %rt_mem138 = bitcast %union.rtunion_def* %20 to %struct.mem_attrs**, !dbg !5403
  %21 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem138, align 8, !dbg !5403
  %cmp139 = icmp eq %struct.mem_attrs* %21, null, !dbg !5403
  br i1 %cmp139, label %cond.end149, label %cond.false142, !dbg !5403

cond.false142:                                    ; preds = %land.lhs.true134
  %addrspace147 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %21, i64 0, i32 5, !dbg !5403
  %22 = load i8, i8* %addrspace147, align 8, !dbg !5403
  %phitmp2 = icmp eq i8 %22, 0, !dbg !5403
  br label %cond.end149, !dbg !5403

cond.end149:                                      ; preds = %land.lhs.true134, %cond.false142
  %cond150 = phi i1 [ %phitmp2, %cond.false142 ], [ true, %land.lhs.true134 ]
  br i1 %cond150, label %if.then153, label %if.else158, !dbg !5404

if.then153:                                       ; preds = %cond.end149
  %cmp154 = icmp eq i32 %method, 3, !dbg !5405
  %conv156 = zext i1 %cmp154 to i8, !dbg !5406
  %call157 = tail call %struct.rtx_def* @emit_block_move_via_libcall(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.0, %struct.rtx_def* %size, i8 zeroext %conv156) #8, !dbg !5407
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call157, metadata !5357, metadata !DIExpression()), !dbg !5359
  br label %if.end161, !dbg !5408

if.else158:                                       ; preds = %if.else113, %cond.end149, %cond.end130
  tail call fastcc void @emit_block_move_via_loop(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %y.addr.0, %struct.rtx_def* %size, i32 %cond55) #8, !dbg !5409
  br label %if.end161

if.end161:                                        ; preds = %if.else, %if.else158, %if.then153, %if.then105
  %retval1.2 = phi %struct.rtx_def* [ null, %if.then105 ], [ null, %if.else ], [ %call157, %if.then153 ], [ null, %if.else158 ], !dbg !5410
  call void @llvm.dbg.value(metadata %struct.rtx_def* %retval1.2, metadata !5357, metadata !DIExpression()), !dbg !5359
  %cmp162 = icmp eq i32 %method, 2, !dbg !5411
  br i1 %cmp162, label %if.then164, label %cleanup, !dbg !5413

if.then164:                                       ; preds = %if.end161
  %23 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5414
  %sub = add nsw i32 %23, -1, !dbg !5414
  store i32 %sub, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !5414
  br label %cleanup, !dbg !5414

cleanup:                                          ; preds = %if.end161, %if.then164, %if.then
  %retval.0 = phi %struct.rtx_def* [ null, %if.then ], [ %retval1.2, %if.then164 ], [ %retval1.2, %if.end161 ], !dbg !5359
  ret %struct.rtx_def* %retval.0, !dbg !5415
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @block_move_libcall_safe_for_call_parm() unnamed_addr #4 !dbg !5416 {
entry:
  %args_so_far = alloca %struct.ix86_args, align 4
  %0 = load i32, i32* @target_flags, align 4, !dbg !5449
  %and = and i32 %0, 8192, !dbg !5449
  %cmp = icmp eq i32 %and, 0, !dbg !5449
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5449

land.lhs.true:                                    ; preds = %entry
  %and1 = and i32 %0, 4, !dbg !5449
  %cmp2 = icmp eq i32 %and1, 0, !dbg !5449
  br i1 %cmp2, label %lor.lhs.false, label %if.end, !dbg !5449

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call = tail call i32 @ix86_cfun_abi() #6, !dbg !5449
  %cmp3 = icmp eq i32 %call, 1, !dbg !5449
  br i1 %cmp3, label %if.end, label %cleanup53, !dbg !5451

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false, %entry
  %call4 = tail call fastcc %union.tree_node* @emit_block_move_libcall_fn(i32 0) #8, !dbg !5452
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5420, metadata !DIExpression()), !dbg !5453
  %tobool = icmp eq %union.tree_node* %call4, null, !dbg !5454
  br i1 %tobool, label %cond.end, label %cond.false, !dbg !5454

cond.false:                                       ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5454
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5454
  br label %cond.end, !dbg !5454

cond.end:                                         ; preds = %if.end, %cond.false
  %cond = phi %union.tree_node* [ %1, %cond.false ], [ null, %if.end ], !dbg !5454
  %call5 = tail call i32 @ix86_function_type_abi(%union.tree_node* %cond) #6, !dbg !5454
  %cmp6 = icmp eq i32 %call5, 1, !dbg !5454
  br i1 %cmp6, label %land.lhs.true7, label %if.end11, !dbg !5456

land.lhs.true7:                                   ; preds = %cond.end
  %call8 = tail call i32 @ix86_reg_parm_stack_space(%union.tree_node* %call4) #6, !dbg !5457
  %cmp9 = icmp eq i32 %call8, 0, !dbg !5458
  br i1 %cmp9, label %if.end11, label %cleanup53, !dbg !5459

if.end11:                                         ; preds = %land.lhs.true7, %cond.end
  %2 = bitcast %struct.ix86_args* %args_so_far to i8*, !dbg !5460
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #7, !dbg !5460
  %call13 = tail call fastcc %union.tree_node* @emit_block_move_libcall_fn(i32 0) #8, !dbg !5461
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5442, metadata !DIExpression()), !dbg !5462
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5463
  %3 = load %union.tree_node*, %union.tree_node** %type15, align 8, !dbg !5463
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !5421, metadata !DIExpression(DW_OP_deref)), !dbg !5462
  call void @init_cumulative_args(%struct.ix86_args* nonnull %args_so_far, %union.tree_node* %3, %struct.rtx_def* null, %union.tree_node* null) #6, !dbg !5463
  %4 = bitcast %union.tree_node** %type15 to %struct.tree_type**, !dbg !5464
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !5464
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 1, !dbg !5464
  br label %for.cond, !dbg !5465

for.cond:                                         ; preds = %for.inc, %if.end11
  %arg.0.in = phi %union.tree_node** [ %values, %if.end11 ], [ %chain, %for.inc ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !5462
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !5443, metadata !DIExpression()), !dbg !5462
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 55), align 8, !dbg !5466
  %cmp19 = icmp eq %union.tree_node* %arg.0, %6, !dbg !5467
  br i1 %cmp19, label %cleanup48, label %for.body, !dbg !5468

for.body:                                         ; preds = %for.cond
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5469
  %8 = bitcast %union.tree_node** %7 to i64**, !dbg !5469
  %9 = load i64*, i64** %8, align 8, !dbg !5469
  %bf.load = load i64, i64* %9, align 8, !dbg !5469
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !5469
  %cmp20 = icmp eq i64 %bf.cast3, 14, !dbg !5469
  br i1 %cmp20, label %cond.true21, label %cond.false25, !dbg !5469

cond.true21:                                      ; preds = %for.body
  %.cast = bitcast i64* %9 to %union.tree_node*, !dbg !5469
  %call24 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !5469
  br label %cond.end32, !dbg !5469

cond.false25:                                     ; preds = %for.body
  %type28 = bitcast i64* %9 to %struct.tree_type*, !dbg !5469
  %mode29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i64 0, i32 6, !dbg !5469
  %bf.load30 = load i32, i32* %mode29, align 4, !dbg !5469
  %bf.lshr = lshr i32 %bf.load30, 16, !dbg !5469
  %bf.clear31 = and i32 %bf.lshr, 255, !dbg !5469
  br label %cond.end32, !dbg !5469

cond.end32:                                       ; preds = %cond.false25, %cond.true21
  %cond33 = phi i32 [ %call24, %cond.true21 ], [ %bf.clear31, %cond.false25 ], !dbg !5469
  call void @llvm.dbg.value(metadata i32 %cond33, metadata !5444, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !5421, metadata !DIExpression(DW_OP_deref)), !dbg !5462
  %call34 = call %struct.rtx_def* @function_arg(%struct.ix86_args* nonnull %args_so_far, i32 %cond33, %union.tree_node* null, i32 1) #6, !dbg !5471
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !5448, metadata !DIExpression()), !dbg !5470
  %tobool35 = icmp eq %struct.rtx_def* %call34, null, !dbg !5472
  br i1 %tobool35, label %cleanup, label %lor.lhs.false36, !dbg !5474

lor.lhs.false36:                                  ; preds = %cond.end32
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call34, i64 0, i32 0, !dbg !5475
  %bf.load37 = load i32, i32* %10, align 8, !dbg !5475
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !5475
  %cmp39 = icmp eq i32 %bf.clear38, 37, !dbg !5475
  br i1 %cmp39, label %if.end41, label %cleanup, !dbg !5476

if.end41:                                         ; preds = %lor.lhs.false36
  %11 = load i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 13), align 8, !dbg !5477
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !5421, metadata !DIExpression(DW_OP_deref)), !dbg !5462
  %call42 = call i32 %11(%struct.ix86_args* nonnull %args_so_far, i32 %cond33, %union.tree_node* null, i8 zeroext 1) #6, !dbg !5479
  %tobool43 = icmp eq i32 %call42, 0, !dbg !5479
  br i1 %tobool43, label %if.end45, label %cleanup, !dbg !5480

if.end45:                                         ; preds = %if.end41
  call void @llvm.dbg.value(metadata %struct.ix86_args* %args_so_far, metadata !5421, metadata !DIExpression(DW_OP_deref)), !dbg !5462
  call void @function_arg_advance(%struct.ix86_args* nonnull %args_so_far, i32 %cond33, %union.tree_node* null, i32 1) #6, !dbg !5481
  br label %cleanup, !dbg !5482

cleanup:                                          ; preds = %if.end41, %cond.end32, %lor.lhs.false36, %if.end45
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end45 ], [ 1, %lor.lhs.false36 ], [ 1, %cond.end32 ], [ 1, %if.end41 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %for.inc, label %cleanup48

for.inc:                                          ; preds = %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5483
  br label %for.cond, !dbg !5484, !llvm.loop !5485

cleanup48:                                        ; preds = %for.cond, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #7, !dbg !5487
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  %spec.select = zext i1 %cond1 to i8
  ret i8 %spec.select

cleanup53:                                        ; preds = %land.lhs.true7, %lor.lhs.false
  %retval.3 = phi i8 [ 1, %lor.lhs.false ], [ 0, %land.lhs.true7 ], !dbg !5453
  ret i8 %retval.3, !dbg !5488
}

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_mem_size(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @emit_block_move_via_movmem(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %size, i32 %align, i32 %expected_align, i64 %expected_size) unnamed_addr #4 !dbg !5489 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5493, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5494, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !5495, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i32 %align, metadata !5496, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i32 %expected_align, metadata !5497, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i64 %expected_size, metadata !5498, metadata !DIExpression()), !dbg !5517
  %div = lshr i32 %align, 3, !dbg !5518
  %conv = zext i32 %div to i64, !dbg !5518
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !5518
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5499, metadata !DIExpression()), !dbg !5517
  %0 = load i32, i32* @volatile_ok, align 4, !dbg !5519
  call void @llvm.dbg.value(metadata i32 %0, metadata !5500, metadata !DIExpression()), !dbg !5517
  %cmp = icmp ult i32 %expected_align, %align, !dbg !5520
  %spec.select = select i1 %cmp, i32 %align, i32 %expected_align, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5497, metadata !DIExpression()), !dbg !5517
  store i32 1, i32* @volatile_ok, align 4, !dbg !5523
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !5524
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !5524
  %arrayidx10 = bitcast %union.u* %u to i64*, !dbg !5524
  %div81 = lshr i32 %spec.select, 3, !dbg !5525
  %conv82 = zext i32 %div81 to i64, !dbg !5525
  br label %for.cond, !dbg !5527

for.cond:                                         ; preds = %for.inc, %entry
  %mode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %entry ], [ %arrayidx100, %for.inc ]
  %mode.0.in = load i8, i8* %mode.0.in.in, align 1, !dbg !5528
  %mode.0 = zext i8 %mode.0.in to i32, !dbg !5528
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !5501, metadata !DIExpression()), !dbg !5517
  %cmp3 = icmp eq i8 %mode.0.in, 0, !dbg !5529
  br i1 %cmp3, label %for.end, label %for.body, !dbg !5530

for.body:                                         ; preds = %for.cond
  %idxprom = zext i8 %mode.0.in to i64, !dbg !5531
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @movmem_optab, i64 0, i64 %idxprom, !dbg !5531
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5531
  call void @llvm.dbg.value(metadata i32 %2, metadata !5502, metadata !DIExpression()), !dbg !5532
  %cmp5 = icmp eq i32 %2, 2956, !dbg !5533
  br i1 %cmp5, label %if.end94, label %land.lhs.true, !dbg !5534

land.lhs.true:                                    ; preds = %for.body
  %bf.load = load i32, i32* %1, align 8, !dbg !5535
  %bf.clear = and i32 %bf.load, 65535, !dbg !5535
  %cmp7 = icmp eq i32 %bf.clear, 30, !dbg !5535
  br i1 %cmp7, label %land.lhs.true9, label %lor.lhs.false, !dbg !5536

land.lhs.true9:                                   ; preds = %land.lhs.true
  %3 = load i64, i64* %arrayidx10, align 8, !dbg !5537
  %arrayidx12 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !5538
  %4 = load i64, i64* %arrayidx12, align 8, !dbg !5538
  %shr = lshr i64 %4, 1, !dbg !5539
  %cmp13 = icmp ugt i64 %3, %shr, !dbg !5540
  br i1 %cmp13, label %lor.lhs.false, label %land.lhs.true23, !dbg !5541

lor.lhs.false:                                    ; preds = %land.lhs.true9, %land.lhs.true
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5542
  %5 = load i8, i8* %arrayidx16, align 1, !dbg !5542
  %cmp21 = icmp ugt i8 %5, 3, !dbg !5543
  br i1 %cmp21, label %land.lhs.true23, label %if.end94, !dbg !5544

land.lhs.true23:                                  ; preds = %land.lhs.true9, %lor.lhs.false
  %idxprom24 = sext i32 %2 to i64, !dbg !5545
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom24, i32 3, !dbg !5546
  %6 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !5546
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 0, i32 0, !dbg !5547
  %7 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !5547
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %7, metadata !5506, metadata !DIExpression()), !dbg !5532
  %cmp27 = icmp eq i32 (%struct.rtx_def*, i32)* %7, null, !dbg !5548
  br i1 %cmp27, label %land.lhs.true31, label %lor.lhs.false29, !dbg !5549

lor.lhs.false29:                                  ; preds = %land.lhs.true23
  %call30 = tail call i32 %7(%struct.rtx_def* %x, i32 1) #6, !dbg !5550
  %tobool = icmp eq i32 %call30, 0, !dbg !5550
  br i1 %tobool, label %if.end94, label %land.lhs.true31, !dbg !5551

land.lhs.true31:                                  ; preds = %lor.lhs.false29, %land.lhs.true23
  %predicate36 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 1, i32 0, !dbg !5552
  %8 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate36, align 8, !dbg !5552
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %8, metadata !5506, metadata !DIExpression()), !dbg !5532
  %cmp37 = icmp eq i32 (%struct.rtx_def*, i32)* %8, null, !dbg !5553
  br i1 %cmp37, label %land.lhs.true42, label %lor.lhs.false39, !dbg !5554

lor.lhs.false39:                                  ; preds = %land.lhs.true31
  %call40 = tail call i32 %8(%struct.rtx_def* %y, i32 1) #6, !dbg !5555
  %tobool41 = icmp eq i32 %call40, 0, !dbg !5555
  br i1 %tobool41, label %if.end94, label %land.lhs.true42, !dbg !5556

land.lhs.true42:                                  ; preds = %lor.lhs.false39, %land.lhs.true31
  %predicate47 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 3, i32 0, !dbg !5557
  %9 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate47, align 8, !dbg !5557
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %9, metadata !5506, metadata !DIExpression()), !dbg !5532
  %cmp48 = icmp eq i32 (%struct.rtx_def*, i32)* %9, null, !dbg !5558
  br i1 %cmp48, label %if.then53, label %lor.lhs.false50, !dbg !5559

lor.lhs.false50:                                  ; preds = %land.lhs.true42
  %call51 = tail call i32 %9(%struct.rtx_def* %call, i32 0) #6, !dbg !5560
  %tobool52 = icmp eq i32 %call51, 0, !dbg !5560
  br i1 %tobool52, label %if.end94, label %if.then53, !dbg !5561

if.then53:                                        ; preds = %lor.lhs.false50, %land.lhs.true42
  %call54 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !5562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !5515, metadata !DIExpression()), !dbg !5563
  %call55 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode.0, %struct.rtx_def* %size, i32 1) #8, !dbg !5564
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !5512, metadata !DIExpression()), !dbg !5563
  %predicate60 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %6, i64 2, i32 0, !dbg !5565
  %10 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate60, align 8, !dbg !5565
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %10, metadata !5506, metadata !DIExpression()), !dbg !5532
  %cmp61 = icmp eq i32 (%struct.rtx_def*, i32)* %10, null, !dbg !5566
  br i1 %cmp61, label %if.end68, label %land.lhs.true63, !dbg !5568

land.lhs.true63:                                  ; preds = %if.then53
  %call64 = tail call i32 %10(%struct.rtx_def* %call55, i32 %mode.0) #6, !dbg !5569
  %tobool65 = icmp eq i32 %call64, 0, !dbg !5569
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !5570

if.then66:                                        ; preds = %land.lhs.true63
  %call67 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.0, %struct.rtx_def* %call55) #6, !dbg !5571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call67, metadata !5512, metadata !DIExpression()), !dbg !5563
  br label %if.end68, !dbg !5572

if.end68:                                         ; preds = %land.lhs.true63, %if.then53, %if.then66
  %op2.0 = phi %struct.rtx_def* [ %call55, %land.lhs.true63 ], [ %call67, %if.then66 ], [ %call55, %if.then53 ], !dbg !5563
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.0, metadata !5512, metadata !DIExpression()), !dbg !5563
  %n_operands = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom24, i32 4, !dbg !5573
  %11 = load i8, i8* %n_operands, align 8, !dbg !5573
  %cmp72 = icmp eq i8 %11, 4, !dbg !5574
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom24, i32 2, !dbg !5525
  %12 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !5525
  br i1 %cmp72, label %if.then74, label %if.else, !dbg !5575

if.then74:                                        ; preds = %if.end68
  %call77 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %12(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %op2.0, %struct.rtx_def* %call) #6, !dbg !5576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call77, metadata !5516, metadata !DIExpression()), !dbg !5563
  br label %if.end86, !dbg !5577

if.else:                                          ; preds = %if.end68
  %call83 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv82) #6, !dbg !5578
  %call84 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %expected_size) #6, !dbg !5579
  %call85 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %12(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %op2.0, %struct.rtx_def* %call, %struct.rtx_def* %call83, %struct.rtx_def* %call84) #6, !dbg !5580
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !5516, metadata !DIExpression()), !dbg !5563
  br label %if.end86

if.end86:                                         ; preds = %if.else, %if.then74
  %pat.0 = phi %struct.rtx_def* [ %call77, %if.then74 ], [ %call85, %if.else ], !dbg !5525
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.0, metadata !5516, metadata !DIExpression()), !dbg !5563
  %tobool87 = icmp eq %struct.rtx_def* %pat.0, null, !dbg !5581
  br i1 %tobool87, label %if.else90, label %if.then88, !dbg !5583

if.then88:                                        ; preds = %if.end86
  %call89 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %pat.0) #6, !dbg !5584
  store i32 %0, i32* @volatile_ok, align 4, !dbg !5586
  br label %cleanup, !dbg !5587

if.else90:                                        ; preds = %if.end86
  tail call void @delete_insns_since(%struct.rtx_def* %call54) #6, !dbg !5588
  br label %cleanup, !dbg !5589

cleanup:                                          ; preds = %if.else90, %if.then88
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then88 ], [ 0, %if.else90 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end94, label %cleanup95

if.end94:                                         ; preds = %lor.lhs.false50, %lor.lhs.false39, %lor.lhs.false29, %for.body, %cleanup, %lor.lhs.false
  br label %cleanup95, !dbg !5590

cleanup95:                                        ; preds = %cleanup, %if.end94
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end94 ]
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %for.inc, label %cleanup102.loopexit

for.inc:                                          ; preds = %cleanup95
  %arrayidx100 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !5591
  br label %for.cond, !dbg !5592, !llvm.loop !5593

for.end:                                          ; preds = %for.cond
  store i32 %0, i32* @volatile_ok, align 4, !dbg !5595
  br label %cleanup102, !dbg !5596

cleanup102.loopexit:                              ; preds = %cleanup95
  br label %cleanup102, !dbg !5597

cleanup102:                                       ; preds = %cleanup102.loopexit, %for.end
  %retval.4 = phi i8 [ 0, %for.end ], [ 1, %cleanup102.loopexit ], !dbg !5517
  ret i8 %retval.4, !dbg !5597
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_block_move_via_libcall(%struct.rtx_def* %dst, %struct.rtx_def* %src, %struct.rtx_def* %size, i8 zeroext %tailcall) local_unnamed_addr #4 !dbg !5598 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst, metadata !5602, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !5603, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !5604, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i8 %tailcall, metadata !5605, metadata !DIExpression()), !dbg !5615
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5616
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5616
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5616
  %call = tail call %struct.rtx_def* @copy_to_mode_reg(i32 16, %struct.rtx_def* %0) #6, !dbg !5617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5606, metadata !DIExpression()), !dbg !5615
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5618
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !5618
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !5618
  %call6 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 16, %struct.rtx_def* %1) #6, !dbg !5619
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !5607, metadata !DIExpression()), !dbg !5615
  %2 = load i32, i32* @ptr_mode, align 4, !dbg !5620
  %call7 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 %2, %struct.rtx_def* %call, i8 zeroext 0) #6, !dbg !5620
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !5606, metadata !DIExpression()), !dbg !5615
  %3 = load i32, i32* @ptr_mode, align 4, !dbg !5621
  %call8 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 %3, %struct.rtx_def* %call6, i8 zeroext 0) #6, !dbg !5621
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !5607, metadata !DIExpression()), !dbg !5615
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5622
  %call9 = tail call %union.tree_node* @make_tree(%union.tree_node* %4, %struct.rtx_def* %call7) #6, !dbg !5623
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5611, metadata !DIExpression()), !dbg !5615
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5624
  %call10 = tail call %union.tree_node* @make_tree(%union.tree_node* %5, %struct.rtx_def* %call8) #6, !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5610, metadata !DIExpression()), !dbg !5615
  %6 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !5626
  %bf.load = load i64, i64* %6, align 8, !dbg !5626
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5626
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !5626
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5626

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %6 to %union.tree_node*, !dbg !5626
  %call11 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !5626
  br label %cond.end, !dbg !5626

cond.false:                                       ; preds = %entry
  %type = bitcast i64* %6 to %struct.tree_type*, !dbg !5626
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !5626
  %bf.load12 = load i32, i32* %mode, align 4, !dbg !5626
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !5626
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !5626
  br label %cond.end, !dbg !5626

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %bf.clear13, %cond.false ], !dbg !5626
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5613, metadata !DIExpression()), !dbg !5615
  %call14 = tail call %struct.rtx_def* @convert_to_mode(i32 %cond, %struct.rtx_def* %size, i32 1) #8, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !5604, metadata !DIExpression()), !dbg !5615
  %call15 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %cond, %struct.rtx_def* %call14) #6, !dbg !5628
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !5604, metadata !DIExpression()), !dbg !5615
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5629
  %call16 = tail call %union.tree_node* @make_tree(%union.tree_node* %7, %struct.rtx_def* %call15) #6, !dbg !5630
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !5612, metadata !DIExpression()), !dbg !5615
  %call17 = tail call fastcc %union.tree_node* @emit_block_move_libcall_fn(i32 1) #8, !dbg !5631
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !5609, metadata !DIExpression()), !dbg !5615
  %call18 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %call17, i32 3, %union.tree_node* %call9, %union.tree_node* %call10, %union.tree_node* %call16) #6, !dbg !5632
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !5608, metadata !DIExpression()), !dbg !5615
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5633
  %bf.load20 = load i64, i64* %8, align 8, !dbg !5634
  %9 = and i8 %tailcall, 1, !dbg !5634
  %bf.value = zext i8 %9 to i64, !dbg !5634
  %bf.shl = shl nuw nsw i64 %bf.value, 18, !dbg !5634
  %bf.clear21 = and i64 %bf.load20, -262145, !dbg !5634
  %bf.set = or i64 %bf.clear21, %bf.shl, !dbg !5634
  store i64 %bf.set, i64* %8, align 8, !dbg !5634
  %call22 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call18) #8, !dbg !5635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !5614, metadata !DIExpression()), !dbg !5615
  ret %struct.rtx_def* %call22, !dbg !5636
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_block_move_via_loop(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %size, i32 %align) unnamed_addr #4 !dbg !5637 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5641, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5642, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !5643, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata i32 %align, metadata !5644, metadata !DIExpression()), !dbg !5654
  %0 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !5655
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5656
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !5656
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5656
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !5656
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5656

cond.false:                                       ; preds = %entry
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 5, !dbg !5656
  %3 = load i8, i8* %addrspace, align 8, !dbg !5656
  br label %cond.end, !dbg !5656

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %3, %cond.false ], [ 0, %entry ]
  %call = tail call i32 %0(i8 zeroext %cond) #6, !dbg !5657
  call void @llvm.dbg.value(metadata i32 %call, metadata !5651, metadata !DIExpression()), !dbg !5654
  %4 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !5658
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5659
  %rt_mem9 = bitcast %union.rtunion_def* %5 to %struct.mem_attrs**, !dbg !5659
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem9, align 8, !dbg !5659
  %cmp10 = icmp eq %struct.mem_attrs* %6, null, !dbg !5659
  br i1 %cmp10, label %cond.end20, label %cond.false13, !dbg !5659

cond.false13:                                     ; preds = %cond.end
  %addrspace18 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %6, i64 0, i32 5, !dbg !5659
  %7 = load i8, i8* %addrspace18, align 8, !dbg !5659
  br label %cond.end20, !dbg !5659

cond.end20:                                       ; preds = %cond.end, %cond.false13
  %cond21 = phi i8 [ %7, %cond.false13 ], [ 0, %cond.end ]
  %call23 = tail call i32 %4(i8 zeroext %cond21) #6, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %call23, metadata !5652, metadata !DIExpression()), !dbg !5654
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !5661
  %bf.load = load i32, i32* %8, align 8, !dbg !5661
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5661
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5661
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5653, metadata !DIExpression()), !dbg !5654
  %cmp24 = icmp eq i32 %bf.clear, 0, !dbg !5662
  %9 = load i32, i32* @word_mode, align 4, !dbg !5664
  %spec.select = select i1 %cmp24, i32 %9, i32 %bf.clear, !dbg !5665
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5653, metadata !DIExpression()), !dbg !5654
  %call26 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !5666
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !5646, metadata !DIExpression()), !dbg !5654
  %call27 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !5667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !5645, metadata !DIExpression()), !dbg !5654
  %call28 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %spec.select) #6, !dbg !5668
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !5647, metadata !DIExpression()), !dbg !5654
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5669
  %call29 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call28, %struct.rtx_def* %10) #8, !dbg !5670
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5671
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !5671
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5671
  %call33 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %11, %struct.rtx_def* null) #8, !dbg !5672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !5648, metadata !DIExpression()), !dbg !5654
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5673
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !5673
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !5673
  %call38 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %12, %struct.rtx_def* null) #8, !dbg !5674
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !5649, metadata !DIExpression()), !dbg !5654
  tail call void @do_pending_stack_adjust() #6, !dbg !5675
  tail call void @emit_jump(%struct.rtx_def* %call27) #6, !dbg !5676
  %call39 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call26) #6, !dbg !5677
  %call40 = tail call %struct.rtx_def* @convert_modes(i32 %call, i32 %spec.select, %struct.rtx_def* %call28, i32 1) #8, !dbg !5678
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !5650, metadata !DIExpression()), !dbg !5654
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %call, %struct.rtx_def* %call33, %struct.rtx_def* %call40) #6, !dbg !5679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !5648, metadata !DIExpression()), !dbg !5654
  %cmp42 = icmp eq i32 %call, %call23, !dbg !5680
  br i1 %cmp42, label %if.end46, label %if.then44, !dbg !5682

if.then44:                                        ; preds = %cond.end20
  %call45 = tail call %struct.rtx_def* @convert_modes(i32 %call23, i32 %spec.select, %struct.rtx_def* %call28, i32 1) #8, !dbg !5683
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !5650, metadata !DIExpression()), !dbg !5654
  br label %if.end46, !dbg !5684

if.end46:                                         ; preds = %cond.end20, %if.then44
  %tmp.0 = phi %struct.rtx_def* [ %call45, %if.then44 ], [ %call40, %cond.end20 ], !dbg !5654
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !5650, metadata !DIExpression()), !dbg !5654
  %call47 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %call23, %struct.rtx_def* %call38, %struct.rtx_def* %tmp.0) #6, !dbg !5685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call47, metadata !5649, metadata !DIExpression()), !dbg !5654
  %call48 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %x, i32 14, %struct.rtx_def* %call41) #6, !dbg !5686
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call48, metadata !5641, metadata !DIExpression()), !dbg !5654
  %call49 = tail call %struct.rtx_def* @change_address(%struct.rtx_def* %y, i32 14, %struct.rtx_def* %call47) #6, !dbg !5687
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !5642, metadata !DIExpression()), !dbg !5654
  %call50 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call48, %struct.rtx_def* %call49) #8, !dbg !5688
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5689
  %call51 = tail call %struct.rtx_def* @expand_simple_binop(i32 %spec.select, i32 49, %struct.rtx_def* %call28, %struct.rtx_def* %13, %struct.rtx_def* %call28, i32 1, i32 3) #6, !dbg !5690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call51, metadata !5650, metadata !DIExpression()), !dbg !5654
  %cmp52 = icmp eq %struct.rtx_def* %call51, %call28, !dbg !5691
  br i1 %cmp52, label %if.end56, label %if.then54, !dbg !5693

if.then54:                                        ; preds = %if.end46
  %call55 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call28, %struct.rtx_def* %call51) #8, !dbg !5694
  br label %if.end56, !dbg !5694

if.end56:                                         ; preds = %if.end46, %if.then54
  %call57 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call27) #6, !dbg !5695
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call28, %struct.rtx_def* %size, i32 85, %struct.rtx_def* null, i32 %spec.select, i32 1, %struct.rtx_def* %call26) #6, !dbg !5696
  ret void, !dbg !5697
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_block_move(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %size, i32 %method) local_unnamed_addr #4 !dbg !5698 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5702, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5703, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !5704, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.value(metadata i32 %method, metadata !5705, metadata !DIExpression()), !dbg !5706
  %call = tail call %struct.rtx_def* @emit_block_move_hints(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %size, i32 %method, i32 0, i64 -1) #8, !dbg !5707
  ret %struct.rtx_def* %call, !dbg !5708
}

declare dso_local %struct.rtx_def* @convert_memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @emit_block_move_libcall_fn(i32 %for_call) unnamed_addr #4 !dbg !3698 {
entry:
  call void @llvm.dbg.value(metadata i32 %for_call, metadata !3702, metadata !DIExpression()), !dbg !5709
  %0 = load %union.tree_node*, %union.tree_node** @block_move_fn, align 8, !dbg !5710
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !5710
  br i1 %tobool, label %if.then, label %if.end, !dbg !5712

if.then:                                          ; preds = %entry
  tail call void @init_block_move_fn(i8* null) #8, !dbg !5713
  br label %if.end, !dbg !5713

if.end:                                           ; preds = %entry, %if.then
  %tobool1 = icmp eq i32 %for_call, 0, !dbg !5714
  %.b = load i1, i1* @emit_block_move_libcall_fn.emitted_extern, align 1, !dbg !5716
  %or.cond = or i1 %tobool1, %.b, !dbg !5717
  br i1 %or.cond, label %if.end4, label %if.then3, !dbg !5717

if.then3:                                         ; preds = %if.end
  store i1 true, i1* @emit_block_move_libcall_fn.emitted_extern, align 1, !dbg !5718
  %1 = load %union.tree_node*, %union.tree_node** @block_move_fn, align 8, !dbg !5720
  tail call void @make_decl_rtl(%union.tree_node* %1) #6, !dbg !5721
  %2 = load %union.tree_node*, %union.tree_node** @block_move_fn, align 8, !dbg !5722
  tail call void @assemble_external(%union.tree_node* %2) #6, !dbg !5723
  br label %if.end4, !dbg !5724

if.end4:                                          ; preds = %if.end, %if.then3
  %3 = load %union.tree_node*, %union.tree_node** @block_move_fn, align 8, !dbg !5725
  ret %union.tree_node* %3, !dbg !5726
}

declare dso_local %union.tree_node* @build_call_expr_loc(i32, %union.tree_node*, i32, ...) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %exp) unnamed_addr #0 !dbg !5727 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5731, metadata !DIExpression()), !dbg !5732
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0, %struct.rtx_def** null) #8, !dbg !5733
  ret %struct.rtx_def* %call, !dbg !5734
}

; Function Attrs: nounwind uwtable
define dso_local void @init_block_move_fn(i8* %asmspec) local_unnamed_addr #4 !dbg !5735 {
entry:
  call void @llvm.dbg.value(metadata i8* %asmspec, metadata !5739, metadata !DIExpression()), !dbg !5744
  %0 = load %union.tree_node*, %union.tree_node** @block_move_fn, align 8, !dbg !5745
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !5745
  br i1 %tobool, label %if.then, label %if.end, !dbg !5746

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5747
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5743, metadata !DIExpression()), !dbg !5748
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5749
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 40), align 16, !dbg !5750
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5751
  %call1 = tail call %union.tree_node* (%union.tree_node*, ...) @build_function_type_list(%union.tree_node* %1, %union.tree_node* %1, %union.tree_node* %2, %union.tree_node* %3, %union.tree_node* null) #6, !dbg !5752
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5740, metadata !DIExpression()), !dbg !5748
  %call2 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 29, %union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !5753
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5743, metadata !DIExpression()), !dbg !5748
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5754
  %4 = bitcast i40* %decl_flag_1 to i64*, !dbg !5754
  %bf.load = load i64, i64* %4, align 8, !dbg !5755
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5756
  %bf.load3 = load i64, i64* %5, align 8, !dbg !5757
  %bf.set9 = or i64 %bf.load, 33558528, !dbg !5758
  store i64 %bf.set9, i64* %4, align 8, !dbg !5758
  %bf.set13 = or i64 %bf.load3, 167772160, !dbg !5759
  store i64 %bf.set13, i64* %5, align 8, !dbg !5759
  %visibility = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !5760
  %6 = bitcast i24* %visibility to i32*, !dbg !5760
  %bf.load14 = load i32, i32* %6, align 8, !dbg !5761
  %bf.clear18 = and i32 %bf.load14, -7169, !dbg !5762
  %bf.set19 = or i32 %bf.clear18, 4096, !dbg !5762
  store i32 %bf.set19, i32* %6, align 8, !dbg !5762
  store %union.tree_node* %call2, %union.tree_node** @block_move_fn, align 8, !dbg !5763
  br label %if.end, !dbg !5764

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %union.tree_node* [ %0, %entry ], [ %call2, %if.then ]
  %tobool20 = icmp eq i8* %asmspec, null, !dbg !5765
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !5767

if.then21:                                        ; preds = %if.end
  tail call void @set_user_assembler_name(%union.tree_node* %7, i8* nonnull %asmspec) #6, !dbg !5768
  br label %if.end22, !dbg !5768

if.end22:                                         ; preds = %if.end, %if.then21
  ret void, !dbg !5769
}

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_function_type_list(%union.tree_node*, ...) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @set_user_assembler_name(%union.tree_node*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @move_block_to_reg(i32 %regno, %struct.rtx_def* %x, i32 %nregs, i32 %mode) local_unnamed_addr #4 !dbg !5770 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5774, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5775, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i32 %nregs, metadata !5776, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5777, metadata !DIExpression()), !dbg !5779
  %cmp = icmp eq i32 %nregs, 0, !dbg !5780
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5782

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5783
  %bf.load = load i32, i32* %0, align 8, !dbg !5783
  %bf.clear = and i32 %bf.load, 65535, !dbg !5783
  %idxprom = zext i32 %bf.clear to i64, !dbg !5783
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5783
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5783
  %cmp1 = icmp eq i32 %1, 9, !dbg !5783
  br i1 %cmp1, label %land.lhs.true, label %if.end5, !dbg !5785

land.lhs.true:                                    ; preds = %if.end
  %call = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %x) #6, !dbg !5786
  %tobool = icmp eq i8 %call, 0, !dbg !5786
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !5787

if.then2:                                         ; preds = %land.lhs.true
  %call3 = tail call %struct.rtx_def* @force_const_mem(i32 %mode, %struct.rtx_def* %x) #6, !dbg !5788
  %call4 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call3) #6, !dbg !5789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5775, metadata !DIExpression()), !dbg !5779
  br label %if.end5, !dbg !5790

if.end5:                                          ; preds = %land.lhs.true, %if.then2, %if.end
  %x.addr.0 = phi %struct.rtx_def* [ %x, %land.lhs.true ], [ %call4, %if.then2 ], [ %x, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !5775, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.value(metadata i32 0, metadata !5778, metadata !DIExpression()), !dbg !5779
  br label %for.cond, !dbg !5791

for.cond:                                         ; preds = %for.body, %if.end5
  %i.0 = phi i32 [ 0, %if.end5 ], [ %inc, %for.body ], !dbg !5793
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5778, metadata !DIExpression()), !dbg !5779
  %cmp6 = icmp slt i32 %i.0, %nregs, !dbg !5794
  br i1 %cmp6, label %for.body, label %cleanup.cont.loopexit, !dbg !5796

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* @word_mode, align 4, !dbg !5797
  %add = add nsw i32 %i.0, %regno, !dbg !5798
  %call7 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %2, i32 %add) #6, !dbg !5799
  %call8 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %x.addr.0, i32 %i.0, i32 %mode) #6, !dbg !5800
  %call9 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call7, %struct.rtx_def* %call8) #8, !dbg !5801
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5778, metadata !DIExpression()), !dbg !5779
  br label %for.cond, !dbg !5803, !llvm.loop !5804

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5806

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !5806
}

declare dso_local zeroext i8 @legitimate_constant_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @validize_mem(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @operand_subword_force(%struct.rtx_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @move_block_from_reg(i32 %regno, %struct.rtx_def* %x, i32 %nregs) local_unnamed_addr #4 !dbg !5807 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5811, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5812, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i32 %nregs, metadata !5813, metadata !DIExpression()), !dbg !5819
  %cmp = icmp eq i32 %nregs, 0, !dbg !5820
  br i1 %cmp, label %cleanup.cont, label %for.cond.preheader, !dbg !5822

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5823

for.cond:                                         ; preds = %for.cond.preheader, %cond.end
  %i.0 = phi i32 [ %inc, %cond.end ], [ 0, %for.cond.preheader ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5814, metadata !DIExpression()), !dbg !5819
  %cmp1 = icmp slt i32 %i.0, %nregs, !dbg !5825
  br i1 %cmp1, label %for.body, label %cleanup.cont.loopexit, !dbg !5823

for.body:                                         ; preds = %for.cond
  %call = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %x, i32 %i.0, i32 1, i32 1) #6, !dbg !5826
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5815, metadata !DIExpression()), !dbg !5827
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !5828
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5828

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1597, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5828
  br label %cond.end, !dbg !5828

cond.end:                                         ; preds = %for.body, %cond.true
  %0 = load i32, i32* @word_mode, align 4, !dbg !5829
  %add = add nsw i32 %i.0, %regno, !dbg !5830
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %0, i32 %add) #6, !dbg !5831
  %call3 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %call2) #8, !dbg !5832
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5814, metadata !DIExpression()), !dbg !5819
  br label %for.cond, !dbg !5834, !llvm.loop !5835

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5837

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !5837
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @gen_group_rtx(%struct.rtx_def* %orig) local_unnamed_addr #4 !dbg !5838 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig, metadata !5842, metadata !DIExpression()), !dbg !5851
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 0, !dbg !5852
  %bf.load = load i32, i32* %0, align 8, !dbg !5852
  %bf.clear = and i32 %bf.load, 65535, !dbg !5852
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !5852
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5852

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1615, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5852
  br label %cond.end, !dbg !5852

cond.end:                                         ; preds = %entry, %cond.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5853
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !5853
  %1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5853
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 0, !dbg !5853
  %2 = load i32, i32* %num_elem, align 8, !dbg !5853
  call void @llvm.dbg.value(metadata i32 %2, metadata !5844, metadata !DIExpression()), !dbg !5851
  %conv = sext i32 %2 to i64, !dbg !5854
  %3 = alloca %struct.rtx_def*, i64 %conv, align 16, !dbg !5854
  call void @llvm.dbg.value(metadata %struct.rtx_def** %3, metadata !5845, metadata !DIExpression()), !dbg !5851
  %arrayidx5 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %1, i64 0, i32 1, i64 0, !dbg !5855
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8, !dbg !5855
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5855
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !5855
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5855
  %tobool = icmp eq %struct.rtx_def* %5, null, !dbg !5855
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !5843, metadata !DIExpression()), !dbg !5851
  br i1 %tobool, label %if.then, label %if.end, !dbg !5856

if.then:                                          ; preds = %cond.end
  store %struct.rtx_def* null, %struct.rtx_def** %3, align 16, !dbg !5857
  br label %if.end, !dbg !5859

if.end:                                           ; preds = %if.then, %cond.end
  %6 = zext i1 %tobool to i64, !dbg !5860
  %7 = sext i32 %2 to i64, !dbg !5860
  br label %for.cond, !dbg !5860

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %6, %if.end ], !dbg !5851
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5843, metadata !DIExpression()), !dbg !5851
  %cmp12 = icmp slt i64 %indvars.iv, %7, !dbg !5861
  br i1 %cmp12, label %for.body, label %for.end, !dbg !5862

for.body:                                         ; preds = %for.cond
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5863
  %arrayidx19 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv, !dbg !5863
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx19, align 8, !dbg !5863
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5863
  %10 = bitcast %union.rtunion_def* %arrayidx22 to i32**, !dbg !5863
  %11 = load i32*, i32** %10, align 8, !dbg !5863
  %bf.load24 = load i32, i32* %11, align 8, !dbg !5863
  %bf.lshr = lshr i32 %bf.load24, 16, !dbg !5863
  %bf.clear25 = and i32 %bf.lshr, 255, !dbg !5863
  call void @llvm.dbg.value(metadata i32 %bf.clear25, metadata !5846, metadata !DIExpression()), !dbg !5864
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5865
  %rt_rtx36 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !5865
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !5865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !5850, metadata !DIExpression()), !dbg !5864
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear25) #6, !dbg !5866
  %call37 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %13) #6, !dbg !5866
  %arrayidx39 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %indvars.iv, !dbg !5867
  store %struct.rtx_def* %call37, %struct.rtx_def** %arrayidx39, align 8, !dbg !5868
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5869
  call void @llvm.dbg.value(metadata i32 undef, metadata !5843, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5851
  br label %for.cond, !dbg !5870, !llvm.loop !5871

for.end:                                          ; preds = %for.cond
  %bf.load40 = load i32, i32* %0, align 8, !dbg !5873
  %bf.lshr41 = lshr i32 %bf.load40, 16, !dbg !5873
  %bf.clear42 = and i32 %bf.lshr41, 255, !dbg !5873
  %call43 = call %struct.rtvec_def* @gen_rtvec_v(i32 %2, %struct.rtx_def** nonnull %3) #6, !dbg !5873
  %call44 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 %bf.clear42, %struct.rtvec_def* %call43) #6, !dbg !5873
  ret %struct.rtx_def* %call44, !dbg !5874
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) local_unnamed_addr #1

declare dso_local %struct.rtvec_def* @gen_rtvec_v(i32, %struct.rtx_def**) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @emit_group_load(%struct.rtx_def* %dst, %struct.rtx_def* %src, %union.tree_node* %type, i32 %ssize) local_unnamed_addr #4 !dbg !5875 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst, metadata !5879, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !5880, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5881, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %ssize, metadata !5882, metadata !DIExpression()), !dbg !5889
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5890
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !5890
  %0 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5890
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %0, i64 0, i32 0, !dbg !5890
  %1 = load i32, i32* %num_elem, align 8, !dbg !5890
  %conv = sext i32 %1 to i64, !dbg !5890
  %2 = alloca %struct.rtx_def*, i64 %conv, align 16, !dbg !5890
  call void @llvm.dbg.value(metadata %struct.rtx_def** %2, metadata !5883, metadata !DIExpression()), !dbg !5889
  call fastcc void @emit_group_load_1(%struct.rtx_def** nonnull %2, %struct.rtx_def* %dst, %struct.rtx_def* %src, %union.tree_node* %type, i32 %ssize) #8, !dbg !5891
  call void @llvm.dbg.value(metadata i32 0, metadata !5884, metadata !DIExpression()), !dbg !5889
  br label %for.cond, !dbg !5892

for.cond:                                         ; preds = %cleanup, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 0, %entry ], !dbg !5893
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5884, metadata !DIExpression()), !dbg !5889
  %3 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5894
  %num_elem5 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 0, !dbg !5894
  %4 = load i32, i32* %num_elem5, align 8, !dbg !5894
  %5 = sext i32 %4 to i64, !dbg !5895
  %cmp = icmp slt i64 %indvars.iv, %5, !dbg !5895
  br i1 %cmp, label %for.body, label %for.end, !dbg !5896

for.body:                                         ; preds = %for.cond
  %arrayidx11 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv, !dbg !5897
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx11, align 8, !dbg !5897
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5897
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !5897
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5897
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5885, metadata !DIExpression()), !dbg !5898
  %cmp15 = icmp eq %struct.rtx_def* %7, null, !dbg !5899
  br i1 %cmp15, label %cleanup, label %if.end, !dbg !5901

if.end:                                           ; preds = %for.body
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %indvars.iv, !dbg !5902
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !5902
  %call = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %7, %struct.rtx_def* %8) #8, !dbg !5903
  br label %cleanup, !dbg !5904

cleanup:                                          ; preds = %for.body, %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5905
  call void @llvm.dbg.value(metadata i32 undef, metadata !5884, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5889
  br label %for.cond, !dbg !5906, !llvm.loop !5907

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5909
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_group_load_1(%struct.rtx_def** %tmps, %struct.rtx_def* %dst, %struct.rtx_def* %orig_src, %union.tree_node* %type, i32 %ssize) unnamed_addr #4 !dbg !5910 {
entry:
  %first = alloca %struct.rtx_def*, align 8
  %second = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %tmps, metadata !5914, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst, metadata !5915, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig_src, metadata !5916, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5917, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i32 %ssize, metadata !5918, metadata !DIExpression()), !dbg !5954
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig_src, i64 0, i32 0, !dbg !5955
  %bf.load = load i32, i32* %0, align 8, !dbg !5955
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5955
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5922, metadata !DIExpression()), !dbg !5954
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst, i64 0, i32 0, !dbg !5956
  %bf.load1 = load i32, i32* %1, align 8, !dbg !5956
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !5956
  %cmp = icmp eq i32 %bf.clear2, 15, !dbg !5956
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5956

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1648, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5956
  br label %cond.end, !dbg !5956

cond.end:                                         ; preds = %entry, %cond.true
  %cmp3 = icmp eq i32 %bf.clear, 0, !dbg !5957
  br i1 %cmp3, label %if.end47, label %land.lhs.true, !dbg !5958

land.lhs.true:                                    ; preds = %cond.end
  %idxprom = zext i32 %bf.clear to i64, !dbg !5959
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5959
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5959
  %cmp4 = icmp eq i8 %2, 2, !dbg !5959
  br i1 %cmp4, label %if.end47, label %lor.lhs.false, !dbg !5959

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp9 = icmp eq i8 %2, 3, !dbg !5959
  br i1 %cmp9, label %if.end47, label %land.lhs.true11, !dbg !5960

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %bf.load12 = load i32, i32* %0, align 8, !dbg !5961
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5961
  %cmp14 = icmp eq i32 %bf.clear13, 43, !dbg !5961
  br i1 %cmp14, label %if.end47, label %land.lhs.true16, !dbg !5962

land.lhs.true16:                                  ; preds = %land.lhs.true11
  %cmp19 = icmp eq i32 %bf.clear13, 41, !dbg !5963
  br i1 %cmp19, label %if.end47, label %if.then, !dbg !5964

if.then:                                          ; preds = %land.lhs.true16
  %bf.lshr22 = lshr i32 %bf.load12, 16, !dbg !5965
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !5965
  %call = tail call i32 @int_mode_for_mode(i32 %bf.clear23) #6, !dbg !5966
  call void @llvm.dbg.value(metadata i32 %call, metadata !5923, metadata !DIExpression()), !dbg !5967
  %cmp24 = icmp eq i32 %call, 1, !dbg !5968
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !5970

if.then26:                                        ; preds = %if.then
  %bf.load27 = load i32, i32* %0, align 8, !dbg !5971
  %bf.lshr28 = lshr i32 %bf.load27, 16, !dbg !5971
  %bf.clear29 = and i32 %bf.lshr28, 255, !dbg !5971
  %conv30 = sext i32 %ssize to i64, !dbg !5972
  %call31 = tail call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear29, i64 %conv30, i32 0) #6, !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !5919, metadata !DIExpression()), !dbg !5954
  br label %if.end, !dbg !5974

if.else:                                          ; preds = %if.then
  %call32 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call) #6, !dbg !5975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call32, metadata !5919, metadata !DIExpression()), !dbg !5954
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then26
  %src.0 = phi %struct.rtx_def* [ %call31, %if.then26 ], [ %call32, %if.else ], !dbg !5976
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !5919, metadata !DIExpression()), !dbg !5954
  br i1 %cmp24, label %if.end40, label %if.then35, !dbg !5977

if.then35:                                        ; preds = %if.end
  %3 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !5978
  %bf.load36 = load i32, i32* %0, align 8, !dbg !5980
  %bf.lshr37 = lshr i32 %bf.load36, 16, !dbg !5980
  %bf.clear38 = and i32 %bf.lshr37, 255, !dbg !5980
  %call39 = tail call %struct.rtx_def* %3(i32 %bf.clear38, %struct.rtx_def* %src.0) #6, !dbg !5978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call39, metadata !5919, metadata !DIExpression()), !dbg !5954
  br label %if.end40, !dbg !5981

if.end40:                                         ; preds = %if.end, %if.then35
  %src.1 = phi %struct.rtx_def* [ %call39, %if.then35 ], [ %src.0, %if.end ], !dbg !5967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.1, metadata !5919, metadata !DIExpression()), !dbg !5954
  %call41 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %src.1, %struct.rtx_def* %orig_src) #8, !dbg !5982
  br i1 %cmp24, label %if.end46, label %if.then44, !dbg !5983

if.then44:                                        ; preds = %if.end40
  %4 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !5984
  %call45 = tail call %struct.rtx_def* %4(i32 %call, %struct.rtx_def* %src.1) #6, !dbg !5984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !5919, metadata !DIExpression()), !dbg !5954
  br label %if.end46, !dbg !5986

if.end46:                                         ; preds = %if.end40, %if.then44
  %src.2 = phi %struct.rtx_def* [ %call45, %if.then44 ], [ %src.1, %if.end40 ], !dbg !5967
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.2, metadata !5919, metadata !DIExpression()), !dbg !5954
  tail call fastcc void @emit_group_load_1(%struct.rtx_def** %tmps, %struct.rtx_def* %dst, %struct.rtx_def* %src.2, %union.tree_node* %type, i32 %ssize) #8, !dbg !5987
  br label %cleanup.cont

if.end47:                                         ; preds = %land.lhs.true16, %cond.end, %land.lhs.true11, %lor.lhs.false, %land.lhs.true
  %arrayidx48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5988
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtvec_def**, !dbg !5988
  %5 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5988
  %arrayidx49 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %5, i64 0, i32 1, i64 0, !dbg !5988
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx49, align 8, !dbg !5988
  %arrayidx52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5988
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !5988
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5988
  %tobool = icmp eq %struct.rtx_def* %7, null, !dbg !5988
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !5920, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !5921, metadata !DIExpression()), !dbg !5954
  %cmp93 = icmp sgt i32 %ssize, -1, !dbg !5990
  %conv97 = sext i32 %ssize to i64, !dbg !5990
  %8 = bitcast %struct.rtx_def** %first to i8*, !dbg !5992
  %9 = bitcast %struct.rtx_def** %second to i8*, !dbg !5992
  %10 = bitcast %struct.rtx_def** %second to i64*, !dbg !5993
  %11 = bitcast %struct.rtx_def** %first to i64*, !dbg !5993
  %12 = zext i1 %tobool to i64, !dbg !5995
  br label %for.cond, !dbg !5995

for.cond:                                         ; preds = %if.end469, %if.end47
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end469 ], [ %12, %if.end47 ], !dbg !5996
  %13 = phi %struct.rtvec_def* [ %.pre, %if.end469 ], [ %5, %if.end47 ], !dbg !5996
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5921, metadata !DIExpression()), !dbg !5954
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 0, !dbg !5996
  %14 = load i32, i32* %num_elem, align 8, !dbg !5996
  %15 = sext i32 %14 to i64, !dbg !5997
  %cmp60 = icmp slt i64 %indvars.iv, %15, !dbg !5997
  br i1 %cmp60, label %for.body, label %cleanup.cont.loopexit, !dbg !5998

for.body:                                         ; preds = %for.cond
  %arrayidx68 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv, !dbg !5999
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx68, align 8, !dbg !5999
  %arrayidx71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5999
  %17 = bitcast %union.rtunion_def* %arrayidx71 to i32**, !dbg !5999
  %18 = load i32*, i32** %17, align 8, !dbg !5999
  %bf.load73 = load i32, i32* %18, align 8, !dbg !5999
  %bf.lshr74 = lshr i32 %bf.load73, 16, !dbg !5999
  %bf.clear75 = and i32 %bf.lshr74, 255, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %bf.clear75, metadata !5926, metadata !DIExpression()), !dbg !6000
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6001
  %rt_rtx86 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !6001
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !6001
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, !dbg !6001
  %arrayidx88 = bitcast %union.u* %u87 to i64*, !dbg !6001
  %21 = load i64, i64* %arrayidx88, align 8, !dbg !6001
  call void @llvm.dbg.value(metadata i64 %21, metadata !5930, metadata !DIExpression()), !dbg !6000
  %idxprom89 = zext i32 %bf.clear75 to i64, !dbg !6002
  %arrayidx90 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom89, !dbg !6002
  %22 = load i8, i8* %arrayidx90, align 1, !dbg !6002
  %conv92 = zext i8 %22 to i32, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %conv92, metadata !5931, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i32 0, metadata !5932, metadata !DIExpression()), !dbg !6000
  br i1 %cmp93, label %land.lhs.true95, label %if.end109, !dbg !6003

land.lhs.true95:                                  ; preds = %for.body
  %conv96 = zext i8 %22 to i64, !dbg !6004
  %add = add nsw i64 %21, %conv96, !dbg !6005
  %cmp98 = icmp sgt i64 %add, %conv97, !dbg !6006
  br i1 %cmp98, label %if.then100, label %if.end109, !dbg !6007

if.then100:                                       ; preds = %land.lhs.true95
  %23 = trunc i64 %21 to i32, !dbg !6008
  %conv102 = sub i32 %ssize, %23, !dbg !6008
  call void @llvm.dbg.value(metadata i32 %conv102, metadata !5931, metadata !DIExpression()), !dbg !6000
  %cmp103 = icmp eq i32 %conv102, 0, !dbg !6010
  br i1 %cmp103, label %cond.true105, label %if.end109, !dbg !6010

cond.true105:                                     ; preds = %if.then100
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1700, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6010
  br label %if.end109, !dbg !6010

if.end109:                                        ; preds = %if.then100, %cond.true105, %land.lhs.true95, %for.body
  %bytelen.0 = phi i32 [ %conv92, %land.lhs.true95 ], [ %conv92, %for.body ], [ %conv102, %if.then100 ], [ 0, %cond.true105 ], !dbg !6000
  call void @llvm.dbg.value(metadata i32 %bytelen.0, metadata !5931, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig_src, metadata !5919, metadata !DIExpression()), !dbg !5954
  %bf.load110 = load i32, i32* %0, align 8, !dbg !6011
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !6011
  %cmp112 = icmp eq i32 %bf.clear111, 43, !dbg !6011
  br i1 %cmp112, label %if.end148, label %land.lhs.true114, !dbg !6013

land.lhs.true114:                                 ; preds = %if.end109
  %idxprom117 = zext i32 %bf.clear111 to i64, !dbg !6014
  %arrayidx118 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom117, !dbg !6014
  %24 = load i32, i32* %arrayidx118, align 4, !dbg !6014
  %cmp119 = icmp eq i32 %24, 9, !dbg !6014
  br i1 %cmp119, label %lor.lhs.false121, label %land.lhs.true114.if.then133_crit_edge, !dbg !6015

land.lhs.true114.if.then133_crit_edge:            ; preds = %land.lhs.true114
  %.pre8 = and i32 %bf.load110, 16711680, !dbg !6016
  br label %if.then133, !dbg !6015

lor.lhs.false121:                                 ; preds = %land.lhs.true114
  %bf.lshr123 = lshr i32 %bf.load110, 16, !dbg !6019
  %bf.clear124 = and i32 %bf.lshr123, 255, !dbg !6019
  %cmp125 = icmp eq i32 %bf.clear124, %bf.clear75, !dbg !6020
  br i1 %cmp125, label %if.end148, label %land.lhs.true127, !dbg !6021

land.lhs.true127:                                 ; preds = %lor.lhs.false121
  %bf.clear130 = and i32 %bf.load110, 16711680, !dbg !6022
  %cmp131 = icmp eq i32 %bf.clear130, 0, !dbg !6023
  br i1 %cmp131, label %if.end148, label %if.then133, !dbg !6024

if.then133:                                       ; preds = %land.lhs.true114.if.then133_crit_edge, %land.lhs.true127
  %bf.clear136.pre-phi = phi i32 [ %.pre8, %land.lhs.true114.if.then133_crit_edge ], [ %bf.clear130, %land.lhs.true127 ], !dbg !6016
  %cmp137 = icmp eq i32 %bf.clear136.pre-phi, 0, !dbg !6025
  br i1 %cmp137, label %if.then139, label %if.else141, !dbg !6026

if.then139:                                       ; preds = %if.then133
  %call140 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear75) #6, !dbg !6027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call140, metadata !5919, metadata !DIExpression()), !dbg !5954
  br label %if.end146, !dbg !6028

if.else141:                                       ; preds = %if.then133
  %bf.lshr143 = lshr i32 %bf.load110, 16, !dbg !6029
  %bf.clear144 = and i32 %bf.lshr143, 255, !dbg !6029
  %call145 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear144) #6, !dbg !6030
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call145, metadata !5919, metadata !DIExpression()), !dbg !5954
  br label %if.end146

if.end146:                                        ; preds = %if.else141, %if.then139
  %src.3 = phi %struct.rtx_def* [ %call140, %if.then139 ], [ %call145, %if.else141 ], !dbg !6031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.3, metadata !5919, metadata !DIExpression()), !dbg !5954
  %call147 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %src.3, %struct.rtx_def* %orig_src) #8, !dbg !6032
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.3, i64 0, i32 0, !dbg !6033
  %bf.load149.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !6034
  br label %if.end148, !dbg !6035

if.end148:                                        ; preds = %land.lhs.true127, %lor.lhs.false121, %if.end146, %if.end109
  %bf.load149 = phi i32 [ %bf.load110, %if.end109 ], [ %bf.load149.pre, %if.end146 ], [ %bf.load110, %land.lhs.true127 ], [ %bf.load110, %lor.lhs.false121 ], !dbg !6034
  %src.4 = phi %struct.rtx_def* [ %orig_src, %if.end109 ], [ %src.3, %if.end146 ], [ %orig_src, %land.lhs.true127 ], [ %orig_src, %lor.lhs.false121 ], !dbg !6000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.4, metadata !5919, metadata !DIExpression()), !dbg !5954
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.4, i64 0, i32 0, !dbg !6034
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !6034
  %cmp151 = icmp eq i32 %bf.clear150, 43, !dbg !6034
  br i1 %cmp151, label %land.lhs.true153, label %if.else173, !dbg !6036

land.lhs.true153:                                 ; preds = %if.end148
  %mul = shl nsw i64 %21, 3, !dbg !6037
  %call154 = call i32 @get_mode_alignment(i32 %bf.clear75) #6, !dbg !6038
  %conv155 = zext i32 %call154 to i64, !dbg !6038
  %rem = srem i64 %mul, %conv155, !dbg !6039
  %cmp156 = icmp eq i64 %rem, 0, !dbg !6040
  br i1 %cmp156, label %land.lhs.true158, label %if.else173, !dbg !6041

land.lhs.true158:                                 ; preds = %land.lhs.true153
  %26 = load i8, i8* %arrayidx90, align 1, !dbg !6042
  %conv162 = zext i8 %26 to i32, !dbg !6042
  %cmp163 = icmp eq i32 %bytelen.0, %conv162, !dbg !6043
  br i1 %cmp163, label %if.then165, label %if.else173, !dbg !6044

if.then165:                                       ; preds = %land.lhs.true158
  %call166 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear75) #6, !dbg !6045
  %arrayidx168 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6047
  store %struct.rtx_def* %call166, %struct.rtx_def** %arrayidx168, align 8, !dbg !6048
  %call171 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %src.4, i32 %bf.clear75, i64 %21, i32 1, i32 1) #6, !dbg !6049
  %call172 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call166, %struct.rtx_def* %call171) #8, !dbg !6050
  br label %if.end469, !dbg !6051

if.else173:                                       ; preds = %land.lhs.true158, %land.lhs.true153, %if.end148
  %arrayidx175 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom89, !dbg !6052
  %27 = load i8, i8* %arrayidx175, align 1, !dbg !6052
  %cmp177 = icmp eq i8 %27, 10, !dbg !6052
  br i1 %cmp177, label %land.lhs.true185, label %lor.lhs.false179, !dbg !6052

lor.lhs.false179:                                 ; preds = %if.else173
  %cmp183 = icmp eq i8 %27, 11, !dbg !6052
  br i1 %cmp183, label %land.lhs.true185, label %lor.lhs.false179.if.else201_crit_edge, !dbg !6053

lor.lhs.false179.if.else201_crit_edge:            ; preds = %lor.lhs.false179
  %bf.load202.pre = load i32, i32* %25, align 8, !dbg !6054
  br label %if.else201, !dbg !6053

land.lhs.true185:                                 ; preds = %lor.lhs.false179, %if.else173
  %bf.load186 = load i32, i32* %25, align 8, !dbg !6055
  %bf.lshr187 = lshr i32 %bf.load186, 16, !dbg !6055
  %bf.clear188 = and i32 %bf.lshr187, 255, !dbg !6055
  %cmp189 = icmp eq i32 %bf.clear188, %bf.clear75, !dbg !6056
  br i1 %cmp189, label %land.lhs.true191, label %if.else201, !dbg !6057

land.lhs.true191:                                 ; preds = %land.lhs.true185
  %28 = load i8, i8* %arrayidx90, align 1, !dbg !6058
  %conv195 = zext i8 %28 to i32, !dbg !6058
  %cmp196 = icmp eq i32 %bytelen.0, %conv195, !dbg !6059
  br i1 %cmp196, label %if.then198, label %if.else201, !dbg !6060

if.then198:                                       ; preds = %land.lhs.true191
  %arrayidx200 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6061
  store %struct.rtx_def* %src.4, %struct.rtx_def** %arrayidx200, align 8, !dbg !6062
  br label %if.end469, !dbg !6061

if.else201:                                       ; preds = %lor.lhs.false179.if.else201_crit_edge, %land.lhs.true191, %land.lhs.true185
  %bf.load207 = phi i32 [ %bf.load202.pre, %lor.lhs.false179.if.else201_crit_edge ], [ %bf.load186, %land.lhs.true191 ], [ %bf.load186, %land.lhs.true185 ], !dbg !6054
  %bf.clear203 = and i32 %bf.load207, 65535, !dbg !6054
  %cmp204 = icmp eq i32 %bf.clear203, 41, !dbg !6063
  br i1 %cmp204, label %if.then206, label %if.else300, !dbg !6064

if.then206:                                       ; preds = %if.else201
  %bf.lshr208 = lshr i32 %bf.load207, 16, !dbg !6065
  %bf.clear209 = and i32 %bf.lshr208, 255, !dbg !6065
  %idxprom210 = zext i32 %bf.clear209 to i64, !dbg !6065
  %arrayidx211 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom210, !dbg !6065
  %29 = load i8, i8* %arrayidx211, align 1, !dbg !6065
  call void @llvm.dbg.value(metadata i8 %29, metadata !5933, metadata !DIExpression()), !dbg !6066
  %arrayidx216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6067
  %30 = bitcast %union.rtunion_def* %arrayidx216 to i32**, !dbg !6067
  %31 = load i32*, i32** %30, align 8, !dbg !6067
  %bf.load218 = load i32, i32* %31, align 8, !dbg !6067
  %bf.lshr219 = lshr i32 %bf.load218, 16, !dbg !6067
  %bf.clear220 = and i32 %bf.lshr219, 255, !dbg !6067
  %idxprom221 = zext i32 %bf.clear220 to i64, !dbg !6067
  %arrayidx222 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom221, !dbg !6067
  %32 = load i8, i8* %arrayidx222, align 1, !dbg !6067
  %conv224 = zext i8 %32 to i32, !dbg !6067
  call void @llvm.dbg.value(metadata i32 %conv224, metadata !5938, metadata !DIExpression()), !dbg !6066
  %cmp225 = icmp eq i64 %21, 0, !dbg !6068
  %cmp228 = icmp eq i32 %bytelen.0, %conv224, !dbg !6069
  %or.cond = and i1 %cmp225, %cmp228, !dbg !6070
  br i1 %or.cond, label %if.then239, label %lor.lhs.false230, !dbg !6070

lor.lhs.false230:                                 ; preds = %if.then206
  br i1 %cmp225, label %lor.lhs.false230.cond.end286_crit_edge, label %land.lhs.true233, !dbg !6071

lor.lhs.false230.cond.end286_crit_edge:           ; preds = %lor.lhs.false230
  %.pre7 = zext i8 %29 to i64, !dbg !6072
  br label %cond.end286, !dbg !6071

land.lhs.true233:                                 ; preds = %lor.lhs.false230
  %conv234 = zext i32 %bytelen.0 to i64, !dbg !6073
  %add235 = add nsw i64 %21, %conv234, !dbg !6074
  %conv236 = zext i8 %29 to i64, !dbg !6075
  %cmp237 = icmp sgt i64 %add235, %conv236, !dbg !6076
  br i1 %cmp237, label %if.else282, label %if.then239, !dbg !6077

if.then239:                                       ; preds = %land.lhs.true233, %if.then206
  %u240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.4, i64 0, i32 1, !dbg !6078
  %fld241 = bitcast %union.u* %u240 to [1 x %union.rtunion_def]*, !dbg !6078
  %conv242 = zext i8 %32 to i64, !dbg !6078
  %div = sdiv i64 %21, %conv242, !dbg !6078
  %arrayidx243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i64 0, i64 %div, !dbg !6078
  %33 = bitcast %union.rtunion_def* %arrayidx243 to i64*, !dbg !6078
  %34 = load i64, i64* %33, align 8, !dbg !6078
  %arrayidx246 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6080
  %35 = bitcast %struct.rtx_def** %arrayidx246 to i64*, !dbg !6081
  store i64 %34, i64* %35, align 8, !dbg !6081
  %36 = inttoptr i64 %34 to i32*, !dbg !6082
  %bf.load249 = load i32, i32* %36, align 8, !dbg !6082
  %bf.clear250 = and i32 %bf.load249, 65535, !dbg !6082
  %idxprom251 = zext i32 %bf.clear250 to i64, !dbg !6082
  %arrayidx252 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom251, !dbg !6082
  %37 = load i32, i32* %arrayidx252, align 4, !dbg !6082
  %cmp253 = icmp eq i32 %37, 9, !dbg !6082
  %38 = inttoptr i64 %34 to %struct.rtx_def*, !dbg !6084
  br i1 %cmp253, label %if.end469, label %land.lhs.true255, !dbg !6084

land.lhs.true255:                                 ; preds = %if.then239
  %cmp260 = icmp eq i32 %bf.clear250, 37, !dbg !6085
  br i1 %cmp260, label %lor.lhs.false262, label %if.then270, !dbg !6086

lor.lhs.false262:                                 ; preds = %land.lhs.true255
  %bf.lshr266 = lshr i32 %bf.load249, 16, !dbg !6087
  %bf.clear267 = and i32 %bf.lshr266, 255, !dbg !6087
  %cmp268 = icmp eq i32 %bf.clear267, %bf.clear75, !dbg !6088
  br i1 %cmp268, label %if.end469, label %if.then270, !dbg !6089

if.then270:                                       ; preds = %lor.lhs.false262, %land.lhs.true255
  %mul273 = shl i32 %bytelen.0, 3, !dbg !6090
  %conv274 = zext i32 %mul273 to i64, !dbg !6091
  %rem276 = srem i64 %21, %conv242, !dbg !6092
  %mul277 = shl nsw i64 %rem276, 3, !dbg !6093
  %call278 = call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %38, i64 %conv274, i64 %mul277, i32 1, %struct.rtx_def* null, i32 %bf.clear75, i32 %bf.clear75) #6, !dbg !6094
  store %struct.rtx_def* %call278, %struct.rtx_def** %arrayidx246, align 8, !dbg !6095
  br label %if.end469, !dbg !6096

if.else282:                                       ; preds = %land.lhs.true233
  br i1 false, label %if.else282.cond.end286_crit_edge, label %cond.true284, !dbg !6097

if.else282.cond.end286_crit_edge:                 ; preds = %if.else282
  br label %cond.end286, !dbg !6097

cond.true284:                                     ; preds = %if.else282
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1758, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6097
  %bf.load288.pre = load i32, i32* %25, align 8, !dbg !6098
  %.pre5 = lshr i32 %bf.load288.pre, 16, !dbg !6098
  %.pre6 = and i32 %.pre5, 255, !dbg !6098
  br label %cond.end286, !dbg !6097

cond.end286:                                      ; preds = %lor.lhs.false230.cond.end286_crit_edge, %if.else282.cond.end286_crit_edge, %cond.true284
  %conv291.pre-phi = phi i64 [ %.pre7, %lor.lhs.false230.cond.end286_crit_edge ], [ %conv236, %if.else282.cond.end286_crit_edge ], [ %conv236, %cond.true284 ], !dbg !6072
  %bf.clear290.pre-phi = phi i32 [ %bf.clear209, %lor.lhs.false230.cond.end286_crit_edge ], [ %bf.clear209, %if.else282.cond.end286_crit_edge ], [ %.pre6, %cond.true284 ], !dbg !6098
  %call292 = call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear290.pre-phi, i64 %conv291.pre-phi, i32 0) #6, !dbg !6099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call292, metadata !5939, metadata !DIExpression()), !dbg !6100
  %call293 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call292, %struct.rtx_def* %src.4) #8, !dbg !6101
  %mul294 = shl i32 %bytelen.0, 3, !dbg !6102
  %conv295 = zext i32 %mul294 to i64, !dbg !6103
  %call296 = call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %call292, i64 %conv295, i64 0, i32 1, %struct.rtx_def* null, i32 %bf.clear75, i32 %bf.clear75) #6, !dbg !6104
  %arrayidx298 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6105
  store %struct.rtx_def* %call296, %struct.rtx_def** %arrayidx298, align 8, !dbg !6106
  br label %if.end469

if.else300:                                       ; preds = %if.else201
  %bf.load301 = load i32, i32* %1, align 8, !dbg !6107
  %bf.lshr302 = lshr i32 %bf.load301, 16, !dbg !6107
  %bf.clear303 = and i32 %bf.lshr302, 255, !dbg !6107
  %idxprom304 = zext i32 %bf.clear303 to i64, !dbg !6107
  %arrayidx305 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom304, !dbg !6107
  %39 = load i8, i8* %arrayidx305, align 1, !dbg !6107
  %cmp307 = icmp eq i8 %39, 12, !dbg !6107
  br i1 %cmp307, label %land.lhs.true354, label %lor.lhs.false309, !dbg !6107

lor.lhs.false309:                                 ; preds = %if.else300
  %cmp316 = icmp eq i8 %39, 17, !dbg !6107
  br i1 %cmp316, label %land.lhs.true354, label %lor.lhs.false318, !dbg !6107

lor.lhs.false318:                                 ; preds = %lor.lhs.false309
  %cmp325 = icmp eq i8 %39, 13, !dbg !6107
  br i1 %cmp325, label %land.lhs.true354, label %lor.lhs.false327, !dbg !6107

lor.lhs.false327:                                 ; preds = %lor.lhs.false318
  %cmp334 = icmp eq i8 %39, 14, !dbg !6107
  br i1 %cmp334, label %land.lhs.true354, label %lor.lhs.false336, !dbg !6107

lor.lhs.false336:                                 ; preds = %lor.lhs.false327
  %cmp343 = icmp eq i8 %39, 15, !dbg !6107
  br i1 %cmp343, label %land.lhs.true354, label %lor.lhs.false345, !dbg !6107

lor.lhs.false345:                                 ; preds = %lor.lhs.false336
  %cmp352 = icmp eq i8 %39, 16, !dbg !6107
  br i1 %cmp352, label %land.lhs.true354, label %if.else380, !dbg !6108

land.lhs.true354:                                 ; preds = %lor.lhs.false345, %lor.lhs.false336, %lor.lhs.false327, %lor.lhs.false318, %lor.lhs.false309, %if.else300
  %cmp357 = icmp eq i32 %bf.clear203, 37, !dbg !6109
  br i1 %cmp357, label %if.then359, label %if.else380, !dbg !6110

if.then359:                                       ; preds = %land.lhs.true354
  %bf.lshr362 = lshr i32 %bf.load207, 16, !dbg !6111
  %bf.clear363 = and i32 %bf.lshr362, 255, !dbg !6111
  %idxprom364 = zext i32 %bf.clear363 to i64, !dbg !6111
  %arrayidx365 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom364, !dbg !6111
  %40 = load i8, i8* %arrayidx365, align 1, !dbg !6111
  call void @llvm.dbg.value(metadata i8 %40, metadata !5942, metadata !DIExpression()), !dbg !6112
  %conv372 = zext i8 %40 to i64, !dbg !6113
  %call373 = call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear363, i64 %conv372, i32 0) #6, !dbg !6114
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call373, metadata !5945, metadata !DIExpression()), !dbg !6112
  %call374 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call373, %struct.rtx_def* %src.4) #8, !dbg !6115
  %sext = shl i64 %21, 32, !dbg !6116
  %conv376 = ashr exact i64 %sext, 32, !dbg !6116
  %call377 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call373, i32 %bf.clear75, i64 %conv376, i32 1, i32 1) #6, !dbg !6116
  %arrayidx379 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6117
  store %struct.rtx_def* %call377, %struct.rtx_def** %arrayidx379, align 8, !dbg !6118
  br label %if.end469, !dbg !6119

if.else380:                                       ; preds = %land.lhs.true354, %lor.lhs.false345
  %idxprom383 = zext i32 %bf.clear203 to i64, !dbg !6120
  %arrayidx384 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom383, !dbg !6120
  %41 = load i32, i32* %arrayidx384, align 4, !dbg !6120
  %cmp385 = icmp eq i32 %41, 9, !dbg !6120
  br i1 %cmp385, label %land.lhs.true387, label %if.else409, !dbg !6121

land.lhs.true387:                                 ; preds = %if.else380
  %bf.clear390 = and i32 %bf.load301, 16711680, !dbg !6122
  %cmp391 = icmp eq i32 %bf.clear390, 65536, !dbg !6123
  br i1 %cmp391, label %if.else409, label %land.lhs.true393, !dbg !6124

land.lhs.true393:                                 ; preds = %land.lhs.true387
  %42 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6125
  %num_elem398 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %42, i64 0, i32 0, !dbg !6125
  %43 = load i32, i32* %num_elem398, align 8, !dbg !6125
  %cmp399 = icmp sgt i32 %43, 1, !dbg !6126
  br i1 %cmp399, label %if.then401, label %if.else409, !dbg !6127

if.then401:                                       ; preds = %land.lhs.true393
  %conv405 = trunc i64 %21 to i32, !dbg !6128
  %call406 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear75, %struct.rtx_def* %src.4, i32 %bf.clear303, i32 %conv405) #6, !dbg !6129
  %arrayidx408 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6130
  store %struct.rtx_def* %call406, %struct.rtx_def** %arrayidx408, align 8, !dbg !6131
  br label %if.end469, !dbg !6130

if.else409:                                       ; preds = %land.lhs.true387, %land.lhs.true393, %if.else380
  br i1 %cmp385, label %if.then416, label %if.else442, !dbg !6132

if.then416:                                       ; preds = %if.else409
  %conv417 = zext i32 %bytelen.0 to i64, !dbg !6133
  call void @llvm.dbg.value(metadata i64 %conv417, metadata !5946, metadata !DIExpression()), !dbg !6134
  %cmp419 = icmp eq i64 %conv417, %conv97, !dbg !6135
  br i1 %cmp419, label %if.then421, label %if.else424, !dbg !6136

if.then421:                                       ; preds = %if.then416
  %arrayidx423 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6137
  store %struct.rtx_def* %src.4, %struct.rtx_def** %arrayidx423, align 8, !dbg !6138
  br label %if.end469, !dbg !6137

if.else424:                                       ; preds = %if.then416
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !6139
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !6139
  %mul425 = shl nuw nsw i64 %conv417, 1, !dbg !6140
  %cmp427 = icmp eq i64 %mul425, %conv97, !dbg !6140
  br i1 %cmp427, label %cond.end431, label %cond.true429, !dbg !6140

cond.true429:                                     ; preds = %if.else424
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1791, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6140
  br label %cond.end431, !dbg !6140

cond.end431:                                      ; preds = %if.else424, %cond.true429
  call void @llvm.dbg.value(metadata %struct.rtx_def** %first, metadata !5950, metadata !DIExpression(DW_OP_deref)), !dbg !5992
  call void @llvm.dbg.value(metadata %struct.rtx_def** %second, metadata !5953, metadata !DIExpression(DW_OP_deref)), !dbg !5992
  call void @split_double(%struct.rtx_def* %src.4, %struct.rtx_def** nonnull %first, %struct.rtx_def** nonnull %second) #6, !dbg !6141
  %tobool433 = icmp eq i64 %indvars.iv, 0, !dbg !6142
  br i1 %tobool433, label %if.else437, label %if.then434, !dbg !6143

if.then434:                                       ; preds = %cond.end431
  %44 = load i64, i64* %10, align 8, !dbg !6144
  %arrayidx436 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6145
  %45 = bitcast %struct.rtx_def** %arrayidx436 to i64*, !dbg !6146
  store i64 %44, i64* %45, align 8, !dbg !6146
  br label %if.end440, !dbg !6145

if.else437:                                       ; preds = %cond.end431
  %46 = load i64, i64* %11, align 8, !dbg !6147
  %47 = bitcast %struct.rtx_def** %tmps to i64*, !dbg !6148
  store i64 %46, i64* %47, align 8, !dbg !6148
  br label %if.end440

if.end440:                                        ; preds = %if.else437, %if.then434
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !6149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !6149
  br label %if.end469

if.else442:                                       ; preds = %if.else409
  %cmp445 = icmp eq i32 %bf.clear203, 37, !dbg !6150
  br i1 %cmp445, label %land.lhs.true447, label %if.else456, !dbg !6152

land.lhs.true447:                                 ; preds = %if.else442
  %bf.lshr449 = lshr i32 %bf.load207, 16, !dbg !6153
  %bf.clear450 = and i32 %bf.lshr449, 255, !dbg !6153
  %cmp451 = icmp eq i32 %bf.clear450, %bf.clear75, !dbg !6154
  br i1 %cmp451, label %if.then453, label %if.else456, !dbg !6155

if.then453:                                       ; preds = %land.lhs.true447
  %arrayidx455 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6156
  store %struct.rtx_def* %src.4, %struct.rtx_def** %arrayidx455, align 8, !dbg !6157
  br label %if.end469, !dbg !6156

if.else456:                                       ; preds = %land.lhs.true447, %if.else442
  %mul457 = shl i32 %bytelen.0, 3, !dbg !6158
  %conv458 = zext i32 %mul457 to i64, !dbg !6159
  %mul459 = shl nsw i64 %21, 3, !dbg !6160
  %call460 = call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %src.4, i64 %conv458, i64 %mul459, i32 1, %struct.rtx_def* null, i32 %bf.clear75, i32 %bf.clear75) #6, !dbg !6161
  %arrayidx462 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %tmps, i64 %indvars.iv, !dbg !6162
  store %struct.rtx_def* %call460, %struct.rtx_def** %arrayidx462, align 8, !dbg !6163
  br label %if.end469

if.end469:                                        ; preds = %lor.lhs.false262, %if.then198, %if.then359, %if.end440, %if.then421, %if.else456, %if.then453, %if.then401, %cond.end286, %if.then270, %if.then239, %if.then165
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6164
  call void @llvm.dbg.value(metadata i32 undef, metadata !5921, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5954
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5996
  br label %for.cond, !dbg !6165, !llvm.loop !6166

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !6168

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end46
  ret void, !dbg !6168
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_group_load_into_temps(%struct.rtx_def* %parallel, %struct.rtx_def* %src, %union.tree_node* %type, i32 %ssize) local_unnamed_addr #4 !dbg !6169 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %parallel, metadata !6173, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !6174, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6175, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata i32 %ssize, metadata !6176, metadata !DIExpression()), !dbg !6184
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %parallel, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6185
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !6185
  %0 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6185
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %0, i64 0, i32 0, !dbg !6185
  %1 = load i32, i32* %num_elem, align 8, !dbg !6185
  %call = tail call %struct.rtvec_def* @rtvec_alloc(i32 %1) #6, !dbg !6186
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call, metadata !6177, metadata !DIExpression()), !dbg !6184
  %arrayidx1 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call, i64 0, i32 1, i64 0, !dbg !6187
  tail call fastcc void @emit_group_load_1(%struct.rtx_def** nonnull %arrayidx1, %struct.rtx_def* %parallel, %struct.rtx_def* %src, %union.tree_node* %type, i32 %ssize) #8, !dbg !6188
  call void @llvm.dbg.value(metadata i32 0, metadata !6178, metadata !DIExpression()), !dbg !6184
  br label %for.cond, !dbg !6189

for.cond:                                         ; preds = %if.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %entry ], !dbg !6190
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6178, metadata !DIExpression()), !dbg !6184
  %2 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6191
  %num_elem6 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 0, !dbg !6191
  %3 = load i32, i32* %num_elem6, align 8, !dbg !6191
  %4 = sext i32 %3 to i64, !dbg !6192
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !6192
  br i1 %cmp, label %for.body, label %for.end, !dbg !6193

for.body:                                         ; preds = %for.cond
  %arrayidx12 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 1, i64 %indvars.iv, !dbg !6194
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8, !dbg !6194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6179, metadata !DIExpression()), !dbg !6195
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6196
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !6196
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6196
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !6183, metadata !DIExpression()), !dbg !6195
  %tobool = icmp eq %struct.rtx_def* %6, null, !dbg !6197
  br i1 %tobool, label %if.end, label %if.then, !dbg !6199

if.then:                                          ; preds = %for.body
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !6200
  %bf.load = load i32, i32* %7, align 8, !dbg !6200
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6200
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6200
  %arrayidx18 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call, i64 0, i32 1, i64 %indvars.iv, !dbg !6202
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !6202
  %call19 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %8) #6, !dbg !6203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !6183, metadata !DIExpression()), !dbg !6195
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !6204
  %bf.load20 = load i32, i32* %9, align 8, !dbg !6204
  %bf.lshr21 = lshr i32 %bf.load20, 16, !dbg !6204
  %bf.clear22 = and i32 %bf.lshr21, 255, !dbg !6204
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6205
  %rt_rtx26 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !6205
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !6205
  %call27 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 %bf.clear22, %struct.rtx_def* %call19, %struct.rtx_def* %11) #6, !dbg !6206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !6179, metadata !DIExpression()), !dbg !6195
  br label %if.end, !dbg !6207

if.end:                                           ; preds = %for.body, %if.then
  %e.0 = phi %struct.rtx_def* [ %call27, %if.then ], [ %5, %for.body ], !dbg !6195
  call void @llvm.dbg.value(metadata %struct.rtx_def* %e.0, metadata !6179, metadata !DIExpression()), !dbg !6195
  %arrayidx30 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call, i64 0, i32 1, i64 %indvars.iv, !dbg !6208
  store %struct.rtx_def* %e.0, %struct.rtx_def** %arrayidx30, align 8, !dbg !6209
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6210
  call void @llvm.dbg.value(metadata i32 undef, metadata !6178, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6184
  br label %for.cond, !dbg !6211, !llvm.loop !6212

for.end:                                          ; preds = %for.cond
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %parallel, i64 0, i32 0, !dbg !6214
  %bf.load31 = load i32, i32* %12, align 8, !dbg !6214
  %bf.lshr32 = lshr i32 %bf.load31, 16, !dbg !6214
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !6214
  %call34 = tail call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 %bf.clear33, %struct.rtvec_def* %call) #6, !dbg !6214
  ret %struct.rtx_def* %call34, !dbg !6215
}

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @emit_group_move(%struct.rtx_def* %dst, %struct.rtx_def* %src) local_unnamed_addr #4 !dbg !6216 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst, metadata !6220, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !6221, metadata !DIExpression()), !dbg !6223
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 0, !dbg !6224
  %bf.load = load i32, i32* %0, align 8, !dbg !6224
  %bf.clear = and i32 %bf.load, 65535, !dbg !6224
  %cmp = icmp eq i32 %bf.clear, 15, !dbg !6224
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !6224

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst, i64 0, i32 0, !dbg !6224
  %bf.load1 = load i32, i32* %1, align 8, !dbg !6224
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6224
  %cmp3 = icmp eq i32 %bf.clear2, 15, !dbg !6224
  br i1 %cmp3, label %land.lhs.true4, label %cond.true, !dbg !6224

land.lhs.true4:                                   ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6224
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !6224
  %2 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6224
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 0, !dbg !6224
  %3 = load i32, i32* %num_elem, align 8, !dbg !6224
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6224
  %rt_rtvec8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtvec_def**, !dbg !6224
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec8, align 8, !dbg !6224
  %num_elem9 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 0, !dbg !6224
  %5 = load i32, i32* %num_elem9, align 8, !dbg !6224
  %cmp10 = icmp eq i32 %3, %5, !dbg !6224
  br i1 %cmp10, label %cond.end, label %cond.true, !dbg !6224

cond.true:                                        ; preds = %land.lhs.true4, %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1877, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6224
  %arrayidx13.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6225
  %rt_rtvec14.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx13.phi.trans.insert to %struct.rtvec_def**, !dbg !6225
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec14.phi.trans.insert, align 8, !dbg !6227
  br label %cond.end, !dbg !6224

cond.end:                                         ; preds = %land.lhs.true4, %cond.true
  %rt_rtvec14.pre-phi = phi %struct.rtvec_def** [ %rt_rtvec, %land.lhs.true4 ], [ %rt_rtvec14.phi.trans.insert, %cond.true ], !dbg !6227
  %6 = phi %struct.rtvec_def* [ %2, %land.lhs.true4 ], [ %.pre, %cond.true ], !dbg !6227
  %arrayidx15 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 1, i64 0, !dbg !6227
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx15, align 8, !dbg !6227
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6227
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !6227
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6227
  %tobool = icmp eq %struct.rtx_def* %8, null, !dbg !6227
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !6222, metadata !DIExpression()), !dbg !6223
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6228
  %rt_rtvec29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtvec_def**, !dbg !6228
  %9 = zext i1 %tobool to i64, !dbg !6230
  br label %for.cond, !dbg !6230

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %9, %cond.end ], !dbg !6231
  %10 = phi %struct.rtvec_def* [ %.pre1, %for.body ], [ %6, %cond.end ], !dbg !6231
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6222, metadata !DIExpression()), !dbg !6223
  %num_elem24 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 0, !dbg !6231
  %11 = load i32, i32* %num_elem24, align 8, !dbg !6231
  %12 = sext i32 %11 to i64, !dbg !6232
  %cmp25 = icmp slt i64 %indvars.iv, %12, !dbg !6232
  br i1 %cmp25, label %for.body, label %for.end, !dbg !6233

for.body:                                         ; preds = %for.cond
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec29, align 8, !dbg !6234
  %arrayidx31 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv, !dbg !6234
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !6234
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6234
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !6234
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !6234
  %arrayidx42 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv, !dbg !6235
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !6235
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6235
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !6235
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !6235
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %15, %struct.rtx_def* %17) #8, !dbg !6236
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6237
  call void @llvm.dbg.value(metadata i32 undef, metadata !6222, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6223
  %.pre1 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec14.pre-phi, align 8, !dbg !6231
  br label %for.cond, !dbg !6238, !llvm.loop !6239

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6241
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_group_move_into_temps(%struct.rtx_def* %src) local_unnamed_addr #4 !dbg !6242 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !6244, metadata !DIExpression()), !dbg !6252
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6253
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !6253
  %0 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6253
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %0, i64 0, i32 0, !dbg !6253
  %1 = load i32, i32* %num_elem, align 8, !dbg !6253
  %call = tail call %struct.rtvec_def* @rtvec_alloc(i32 %1) #6, !dbg !6254
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call, metadata !6245, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i32 0, metadata !6246, metadata !DIExpression()), !dbg !6252
  br label %for.cond, !dbg !6255

for.cond:                                         ; preds = %if.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %entry ], !dbg !6256
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6246, metadata !DIExpression()), !dbg !6252
  %2 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6257
  %num_elem5 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 0, !dbg !6257
  %3 = load i32, i32* %num_elem5, align 8, !dbg !6257
  %4 = sext i32 %3 to i64, !dbg !6258
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !6258
  br i1 %cmp, label %for.body, label %for.end, !dbg !6259

for.body:                                         ; preds = %for.cond
  %arrayidx10 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2, i64 0, i32 1, i64 %indvars.iv, !dbg !6260
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx10, align 8, !dbg !6260
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6247, metadata !DIExpression()), !dbg !6261
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6262
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !6262
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6262
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !6251, metadata !DIExpression()), !dbg !6261
  %tobool = icmp eq %struct.rtx_def* %6, null, !dbg !6263
  br i1 %tobool, label %if.end, label %if.then, !dbg !6265

if.then:                                          ; preds = %for.body
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !6266
  %bf.load = load i32, i32* %7, align 8, !dbg !6266
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6266
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6266
  %call14 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* nonnull %6) #6, !dbg !6267
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6268
  %rt_rtx18 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !6268
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !6268
  %call19 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 %bf.clear, %struct.rtx_def* %call14, %struct.rtx_def* %9) #6, !dbg !6269
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !6247, metadata !DIExpression()), !dbg !6261
  br label %if.end, !dbg !6270

if.end:                                           ; preds = %for.body, %if.then
  %e.0 = phi %struct.rtx_def* [ %call19, %if.then ], [ %5, %for.body ], !dbg !6261
  call void @llvm.dbg.value(metadata %struct.rtx_def* %e.0, metadata !6247, metadata !DIExpression()), !dbg !6261
  %arrayidx22 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call, i64 0, i32 1, i64 %indvars.iv, !dbg !6271
  store %struct.rtx_def* %e.0, %struct.rtx_def** %arrayidx22, align 8, !dbg !6272
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6273
  call void @llvm.dbg.value(metadata i32 undef, metadata !6246, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6252
  br label %for.cond, !dbg !6274, !llvm.loop !6275

for.end:                                          ; preds = %for.cond
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 0, !dbg !6277
  %bf.load23 = load i32, i32* %10, align 8, !dbg !6277
  %bf.lshr24 = lshr i32 %bf.load23, 16, !dbg !6277
  %bf.clear25 = and i32 %bf.lshr24, 255, !dbg !6277
  %call26 = tail call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 %bf.clear25, %struct.rtvec_def* %call) #6, !dbg !6277
  ret %struct.rtx_def* %call26, !dbg !6278
}

; Function Attrs: nounwind uwtable
define dso_local void @emit_group_store(%struct.rtx_def* %orig_dst, %struct.rtx_def* %src, %union.tree_node* %type, i32 %ssize) local_unnamed_addr #4 !dbg !6279 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig_dst, metadata !6281, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src, metadata !6282, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6283, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %ssize, metadata !6284, metadata !DIExpression()), !dbg !6323
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %orig_dst, i64 0, i32 0, !dbg !6324
  %bf.load = load i32, i32* %0, align 8, !dbg !6324
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6324
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6290, metadata !DIExpression()), !dbg !6323
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 0, !dbg !6325
  %bf.load1 = load i32, i32* %1, align 8, !dbg !6325
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6325
  %cmp = icmp eq i32 %bf.clear2, 15, !dbg !6325
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6325

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6325
  br label %cond.end, !dbg !6325

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %bf.clear to i64, !dbg !6326
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6326
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6326
  %cmp3 = icmp eq i8 %2, 2, !dbg !6326
  br i1 %cmp3, label %if.end40, label %lor.lhs.false, !dbg !6326

lor.lhs.false:                                    ; preds = %cond.end
  %cmp8 = icmp eq i8 %2, 3, !dbg !6326
  br i1 %cmp8, label %if.end40, label %land.lhs.true, !dbg !6327

land.lhs.true:                                    ; preds = %lor.lhs.false
  %bf.load10 = load i32, i32* %0, align 8, !dbg !6328
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !6328
  %cmp12 = icmp eq i32 %bf.clear11, 43, !dbg !6328
  br i1 %cmp12, label %if.end40, label %land.lhs.true14, !dbg !6329

land.lhs.true14:                                  ; preds = %land.lhs.true
  %cmp17 = icmp eq i32 %bf.clear11, 41, !dbg !6330
  br i1 %cmp17, label %if.end40, label %if.then, !dbg !6331

if.then:                                          ; preds = %land.lhs.true14
  %bf.lshr20 = lshr i32 %bf.load10, 16, !dbg !6332
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !6332
  %call = tail call i32 @int_mode_for_mode(i32 %bf.clear21) #6, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %call, metadata !6291, metadata !DIExpression()), !dbg !6334
  %cmp22 = icmp eq i32 %call, 1, !dbg !6335
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !6337

if.then24:                                        ; preds = %if.then
  %bf.load25 = load i32, i32* %0, align 8, !dbg !6338
  %bf.lshr26 = lshr i32 %bf.load25, 16, !dbg !6338
  %bf.clear27 = and i32 %bf.lshr26, 255, !dbg !6338
  %conv28 = sext i32 %ssize to i64, !dbg !6339
  %call29 = tail call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear27, i64 %conv28, i32 0) #6, !dbg !6340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !6286, metadata !DIExpression()), !dbg !6323
  br label %if.end, !dbg !6341

if.else:                                          ; preds = %if.then
  %call30 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call) #6, !dbg !6342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !6286, metadata !DIExpression()), !dbg !6323
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then24
  %dst.0 = phi %struct.rtx_def* [ %call29, %if.then24 ], [ %call30, %if.else ], !dbg !6343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.0, metadata !6286, metadata !DIExpression()), !dbg !6323
  tail call void @emit_group_store(%struct.rtx_def* %dst.0, %struct.rtx_def* %src, %union.tree_node* %type, i32 %ssize) #8, !dbg !6344
  br i1 %cmp22, label %if.end38, label %if.then33, !dbg !6345

if.then33:                                        ; preds = %if.end
  %3 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !6346
  %bf.load34 = load i32, i32* %0, align 8, !dbg !6348
  %bf.lshr35 = lshr i32 %bf.load34, 16, !dbg !6348
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !6348
  %call37 = tail call %struct.rtx_def* %3(i32 %bf.clear36, %struct.rtx_def* %dst.0) #6, !dbg !6346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !6286, metadata !DIExpression()), !dbg !6323
  br label %if.end38, !dbg !6349

if.end38:                                         ; preds = %if.end, %if.then33
  %dst.1 = phi %struct.rtx_def* [ %call37, %if.then33 ], [ %dst.0, %if.end ], !dbg !6334
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.1, metadata !6286, metadata !DIExpression()), !dbg !6323
  %call39 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %orig_dst, %struct.rtx_def* %dst.1) #8, !dbg !6350
  br label %cleanup.cont421

if.end40:                                         ; preds = %land.lhs.true14, %land.lhs.true, %lor.lhs.false, %cond.end
  %arrayidx41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6351
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtvec_def**, !dbg !6351
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6351
  %arrayidx42 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 1, i64 0, !dbg !6351
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !6351
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6351
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !6351
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6351
  %tobool = icmp eq %struct.rtx_def* %6, null, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %., metadata !6287, metadata !DIExpression()), !dbg !6323
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 0, !dbg !6353
  %7 = load i32, i32* %num_elem, align 8, !dbg !6353
  call void @llvm.dbg.value(metadata i32 %7, metadata !6288, metadata !DIExpression()), !dbg !6323
  %conv53 = sext i32 %7 to i64, !dbg !6354
  %8 = alloca %struct.rtx_def*, i64 %conv53, align 16, !dbg !6354
  call void @llvm.dbg.value(metadata %struct.rtx_def** %8, metadata !6285, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %., metadata !6289, metadata !DIExpression()), !dbg !6323
  %9 = zext i1 %tobool to i64, !dbg !6355
  %10 = sext i32 %7 to i64, !dbg !6355
  br label %for.cond, !dbg !6355

for.cond:                                         ; preds = %for.inc, %if.end40
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc ], [ %9, %if.end40 ], !dbg !6356
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !6289, metadata !DIExpression()), !dbg !6323
  %cmp54 = icmp slt i64 %indvars.iv4, %10, !dbg !6357
  br i1 %cmp54, label %for.body, label %for.end, !dbg !6358

for.body:                                         ; preds = %for.cond
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6359
  %arrayidx62 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 %indvars.iv4, !dbg !6359
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx62, align 8, !dbg !6359
  %arrayidx65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6359
  %rt_rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !6359
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !6359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !6294, metadata !DIExpression()), !dbg !6360
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !6361
  %bf.load67 = load i32, i32* %14, align 8, !dbg !6361
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !6361
  %cmp69 = icmp eq i32 %bf.clear68, 37, !dbg !6361
  br i1 %cmp69, label %lor.lhs.false71, label %if.then75, !dbg !6363

lor.lhs.false71:                                  ; preds = %for.body
  %call72 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #8, !dbg !6364
  %cmp73 = icmp ult i32 %call72, 53, !dbg !6365
  br i1 %cmp73, label %lor.lhs.false71.if.then75_crit_edge, label %if.else85, !dbg !6366

lor.lhs.false71.if.then75_crit_edge:              ; preds = %lor.lhs.false71
  %bf.load76.pre = load i32, i32* %14, align 8, !dbg !6367
  br label %if.then75, !dbg !6366

if.then75:                                        ; preds = %lor.lhs.false71.if.then75_crit_edge, %for.body
  %bf.load76 = phi i32 [ %bf.load76.pre, %lor.lhs.false71.if.then75_crit_edge ], [ %bf.load67, %for.body ], !dbg !6367
  %bf.lshr77 = lshr i32 %bf.load76, 16, !dbg !6367
  %bf.clear78 = and i32 %bf.lshr77, 255, !dbg !6367
  %call79 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear78) #6, !dbg !6369
  %arrayidx81 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %indvars.iv4, !dbg !6370
  store %struct.rtx_def* %call79, %struct.rtx_def** %arrayidx81, align 8, !dbg !6371
  %call84 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call79, %struct.rtx_def* %13) #8, !dbg !6372
  br label %for.inc, !dbg !6373

if.else85:                                        ; preds = %lor.lhs.false71
  %arrayidx87 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %indvars.iv4, !dbg !6374
  store %struct.rtx_def* %13, %struct.rtx_def** %arrayidx87, align 8, !dbg !6375
  br label %for.inc

for.inc:                                          ; preds = %if.then75, %if.else85
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !6376
  call void @llvm.dbg.value(metadata i32 undef, metadata !6289, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6323
  br label %for.cond, !dbg !6377, !llvm.loop !6378

for.end:                                          ; preds = %for.cond
  %. = zext i1 %tobool to i32
  call void @llvm.dbg.value(metadata %struct.rtx_def* %orig_dst, metadata !6286, metadata !DIExpression()), !dbg !6323
  %bf.load89 = load i32, i32* %0, align 8, !dbg !6380
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !6380
  %cmp91 = icmp eq i32 %bf.clear90, 15, !dbg !6381
  br i1 %cmp91, label %if.then93, label %if.else103, !dbg !6382

if.then93:                                        ; preds = %for.end
  %call94 = tail call i32 @rtx_equal_p(%struct.rtx_def* %orig_dst, %struct.rtx_def* %src) #6, !dbg !6383
  %tobool95 = icmp eq i32 %call94, 0, !dbg !6383
  br i1 %tobool95, label %if.end97, label %cleanup.cont421, !dbg !6385

if.end97:                                         ; preds = %if.then93
  %bf.load98 = load i32, i32* %0, align 8, !dbg !6386
  %bf.lshr99 = lshr i32 %bf.load98, 16, !dbg !6386
  %bf.clear100 = and i32 %bf.lshr99, 255, !dbg !6386
  %conv101 = sext i32 %ssize to i64, !dbg !6387
  %call102 = tail call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear100, i64 %conv101, i32 0) #6, !dbg !6388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call102, metadata !6298, metadata !DIExpression()), !dbg !6389
  tail call void @emit_group_store(%struct.rtx_def* %call102, %struct.rtx_def* %src, %union.tree_node* %type, i32 %ssize) #8, !dbg !6390
  tail call void @emit_group_load(%struct.rtx_def* %orig_dst, %struct.rtx_def* %call102, %union.tree_node* %type, i32 %ssize) #8, !dbg !6391
  br label %cleanup.cont421, !dbg !6392

if.else103:                                       ; preds = %for.end
  %cmp106 = icmp eq i32 %bf.clear90, 43, !dbg !6393
  br i1 %cmp106, label %if.end213, label %land.lhs.true108, !dbg !6394

land.lhs.true108:                                 ; preds = %if.else103
  %cmp111 = icmp eq i32 %bf.clear90, 41, !dbg !6395
  br i1 %cmp111, label %if.end213, label %if.then113, !dbg !6396

if.then113:                                       ; preds = %land.lhs.true108
  %bf.lshr115 = lshr i32 %bf.load89, 16, !dbg !6397
  %bf.clear116 = and i32 %bf.lshr115, 255, !dbg !6397
  call void @llvm.dbg.value(metadata i32 %bf.clear116, metadata !6301, metadata !DIExpression()), !dbg !6398
  call void @llvm.dbg.value(metadata i8 0, metadata !6306, metadata !DIExpression()), !dbg !6398
  %cmp120 = icmp eq i32 %bf.clear90, 37, !dbg !6399
  br i1 %cmp120, label %lor.lhs.false122, label %if.then126, !dbg !6401

lor.lhs.false122:                                 ; preds = %if.then113
  %call123 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %orig_dst) #8, !dbg !6402
  %cmp124 = icmp ult i32 %call123, 53, !dbg !6403
  br i1 %cmp124, label %if.then126, label %if.end128, !dbg !6404

if.then126:                                       ; preds = %lor.lhs.false122, %if.then113
  %call127 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear116) #6, !dbg !6405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call127, metadata !6286, metadata !DIExpression()), !dbg !6323
  br label %if.end128, !dbg !6406

if.end128:                                        ; preds = %if.then126, %lor.lhs.false122
  %dst.2 = phi %struct.rtx_def* [ %call127, %if.then126 ], [ %orig_dst, %lor.lhs.false122 ], !dbg !6323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.2, metadata !6286, metadata !DIExpression()), !dbg !6323
  %cmp129 = icmp sgt i32 %7, %., !dbg !6407
  br i1 %cmp129, label %if.then131, label %if.end164, !dbg !6409

if.then131:                                       ; preds = %if.end128
  %idxprom132 = zext i1 %tobool to i64, !dbg !6410
  %arrayidx133 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom132, !dbg !6410
  %15 = bitcast %struct.rtx_def** %arrayidx133 to i32**, !dbg !6410
  %16 = load i32*, i32** %15, align 8, !dbg !6410
  %bf.load134 = load i32, i32* %16, align 8, !dbg !6410
  %bf.lshr135 = lshr i32 %bf.load134, 16, !dbg !6410
  %bf.clear136 = and i32 %bf.lshr135, 255, !dbg !6410
  call void @llvm.dbg.value(metadata i32 %bf.clear136, metadata !6304, metadata !DIExpression()), !dbg !6398
  %call137 = tail call i32 @subreg_lowpart_offset(i32 %bf.clear136, i32 %bf.clear116) #6, !dbg !6412
  %conv138 = zext i32 %call137 to i64, !dbg !6412
  call void @llvm.dbg.value(metadata i64 %conv138, metadata !6305, metadata !DIExpression()), !dbg !6398
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6413
  %arrayidx145 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i64 0, i32 1, i64 %idxprom132, !dbg !6413
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx145, align 8, !dbg !6413
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6413
  %rt_rtx149 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !6413
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx149, align 8, !dbg !6413
  %u150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, !dbg !6413
  %arrayidx151 = bitcast %union.u* %u150 to i64*, !dbg !6413
  %21 = load i64, i64* %arrayidx151, align 8, !dbg !6413
  %cmp152 = icmp eq i64 %21, %conv138, !dbg !6415
  br i1 %cmp152, label %if.then154, label %if.end164, !dbg !6416

if.then154:                                       ; preds = %if.then131
  %22 = bitcast i32* %16 to %struct.rtx_def*, !dbg !6416
  %call157 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear116, %struct.rtx_def* %22, i32 %bf.clear136, i32 0) #6, !dbg !6417
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call157, metadata !6307, metadata !DIExpression()), !dbg !6398
  %tobool158 = icmp eq %struct.rtx_def* %call157, null, !dbg !6419
  br i1 %tobool158, label %if.end164, label %if.then159, !dbg !6421

if.then159:                                       ; preds = %if.then154
  %call160 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %dst.2, %struct.rtx_def* nonnull %call157) #8, !dbg !6422
  call void @llvm.dbg.value(metadata i8 1, metadata !6306, metadata !DIExpression()), !dbg !6398
  %inc161 = select i1 %tobool, i32 2, i32 1, !dbg !6424
  call void @llvm.dbg.value(metadata i32 %inc161, metadata !6287, metadata !DIExpression()), !dbg !6323
  br label %if.end164, !dbg !6425

if.end164:                                        ; preds = %if.then154, %if.then131, %if.then159, %if.end128
  %done.2 = phi i8 [ 0, %if.end128 ], [ 0, %if.then131 ], [ 1, %if.then159 ], [ 0, %if.then154 ], !dbg !6398
  %start.3 = phi i32 [ %., %if.end128 ], [ %., %if.then131 ], [ %inc161, %if.then159 ], [ %., %if.then154 ], !dbg !6323
  call void @llvm.dbg.value(metadata i32 %start.3, metadata !6287, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8 %done.2, metadata !6306, metadata !DIExpression()), !dbg !6398
  %tobool165 = icmp eq i8 %done.2, 0, !dbg !6426
  %sub = add nsw i32 %7, -1, !dbg !6428
  %cmp167 = icmp slt i32 %start.3, %sub, !dbg !6429
  %or.cond = and i1 %tobool165, %cmp167, !dbg !6430
  br i1 %or.cond, label %if.then169, label %if.end205, !dbg !6430

if.then169:                                       ; preds = %if.end164
  %idxprom171 = sext i32 %sub to i64, !dbg !6431
  %arrayidx172 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom171, !dbg !6431
  %23 = bitcast %struct.rtx_def** %arrayidx172 to i32**, !dbg !6431
  %24 = load i32*, i32** %23, align 8, !dbg !6431
  %bf.load173 = load i32, i32* %24, align 8, !dbg !6431
  %bf.lshr174 = lshr i32 %bf.load173, 16, !dbg !6431
  %bf.clear175 = and i32 %bf.lshr174, 255, !dbg !6431
  call void @llvm.dbg.value(metadata i32 %bf.clear175, metadata !6304, metadata !DIExpression()), !dbg !6398
  %call176 = tail call i32 @subreg_lowpart_offset(i32 %bf.clear175, i32 %bf.clear116) #6, !dbg !6433
  %conv177 = zext i32 %call176 to i64, !dbg !6433
  call void @llvm.dbg.value(metadata i64 %conv177, metadata !6305, metadata !DIExpression()), !dbg !6398
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6434
  %arrayidx185 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i64 0, i32 1, i64 %idxprom171, !dbg !6434
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx185, align 8, !dbg !6434
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6434
  %rt_rtx189 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !6434
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx189, align 8, !dbg !6434
  %u190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, !dbg !6434
  %arrayidx192 = bitcast %union.u* %u190 to i64*, !dbg !6434
  %29 = load i64, i64* %arrayidx192, align 8, !dbg !6434
  %cmp193 = icmp eq i64 %29, %conv177, !dbg !6436
  br i1 %cmp193, label %if.then195, label %if.end205, !dbg !6437

if.then195:                                       ; preds = %if.then169
  %30 = bitcast i32* %24 to %struct.rtx_def*, !dbg !6437
  %call199 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear116, %struct.rtx_def* %30, i32 %bf.clear175, i32 0) #6, !dbg !6438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call199, metadata !6307, metadata !DIExpression()), !dbg !6398
  %tobool200 = icmp eq %struct.rtx_def* %call199, null, !dbg !6440
  br i1 %tobool200, label %if.end205, label %if.then201, !dbg !6442

if.then201:                                       ; preds = %if.then195
  %call202 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %dst.2, %struct.rtx_def* nonnull %call199) #8, !dbg !6443
  call void @llvm.dbg.value(metadata i8 1, metadata !6306, metadata !DIExpression()), !dbg !6398
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6288, metadata !DIExpression()), !dbg !6323
  br label %if.end205, !dbg !6445

if.end205:                                        ; preds = %if.then195, %if.then169, %if.then201, %if.end164
  %done.5 = phi i8 [ %done.2, %if.end164 ], [ 0, %if.then169 ], [ 1, %if.then201 ], [ 0, %if.then195 ], !dbg !6398
  %finish.2 = phi i32 [ %7, %if.end164 ], [ %7, %if.then169 ], [ %sub, %if.then201 ], [ %7, %if.then195 ], !dbg !6323
  call void @llvm.dbg.value(metadata i32 %finish.2, metadata !6288, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8 %done.5, metadata !6306, metadata !DIExpression()), !dbg !6398
  %tobool206 = icmp eq i8 %done.5, 0, !dbg !6446
  br i1 %tobool206, label %if.then207, label %if.end213, !dbg !6448

if.then207:                                       ; preds = %if.end205
  %idxprom208 = zext i32 %bf.clear116 to i64, !dbg !6449
  %arrayidx209 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom208, !dbg !6449
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx209, align 8, !dbg !6449
  %call210 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %dst.2, %struct.rtx_def* %31) #8, !dbg !6450
  br label %if.end213, !dbg !6450

if.end213:                                        ; preds = %if.end205, %land.lhs.true108, %if.else103, %if.then207
  %finish.3 = phi i32 [ %7, %if.else103 ], [ %7, %land.lhs.true108 ], [ %finish.2, %if.then207 ], [ %finish.2, %if.end205 ], !dbg !6451
  %start.4 = phi i32 [ %., %if.else103 ], [ %., %land.lhs.true108 ], [ %start.3, %if.then207 ], [ %start.3, %if.end205 ], !dbg !6323
  %dst.3 = phi %struct.rtx_def* [ %orig_dst, %if.else103 ], [ %orig_dst, %land.lhs.true108 ], [ %dst.2, %if.then207 ], [ %dst.2, %if.end205 ], !dbg !6323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.3, metadata !6286, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %start.4, metadata !6287, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %finish.3, metadata !6288, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %start.4, metadata !6289, metadata !DIExpression()), !dbg !6323
  %cmp242 = icmp sgt i32 %ssize, -1, !dbg !6452
  %conv246 = sext i32 %ssize to i64, !dbg !6452
  %32 = sext i32 %start.4 to i64, !dbg !6454
  %33 = sext i32 %finish.3 to i64, !dbg !6454
  br label %for.cond214, !dbg !6454

for.cond214:                                      ; preds = %for.inc406, %if.end213
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc406 ], [ %32, %if.end213 ], !dbg !6455
  %dst.4 = phi %struct.rtx_def* [ %dst.6, %for.inc406 ], [ %dst.3, %if.end213 ], !dbg !6456
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.4, metadata !6286, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6289, metadata !DIExpression()), !dbg !6323
  %cmp215 = icmp slt i64 %indvars.iv, %33, !dbg !6457
  br i1 %cmp215, label %for.body217, label %for.end408, !dbg !6458

for.body217:                                      ; preds = %for.cond214
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6459
  %arrayidx225 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i64 0, i32 1, i64 %indvars.iv, !dbg !6459
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx225, align 8, !dbg !6459
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6459
  %rt_rtx229 = bitcast %union.rtunion_def* %36 to %struct.rtx_def**, !dbg !6459
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx229, align 8, !dbg !6459
  %u230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i64 0, i32 1, !dbg !6459
  %arrayidx232 = bitcast %union.u* %u230 to i64*, !dbg !6459
  %38 = load i64, i64* %arrayidx232, align 8, !dbg !6459
  call void @llvm.dbg.value(metadata i64 %38, metadata !6308, metadata !DIExpression()), !dbg !6460
  %arrayidx234 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %indvars.iv, !dbg !6461
  %39 = bitcast %struct.rtx_def** %arrayidx234 to i32**, !dbg !6461
  %40 = load i32*, i32** %39, align 8, !dbg !6461
  %bf.load235 = load i32, i32* %40, align 8, !dbg !6461
  %bf.lshr236 = lshr i32 %bf.load235, 16, !dbg !6461
  %bf.clear237 = and i32 %bf.lshr236, 255, !dbg !6461
  call void @llvm.dbg.value(metadata i32 %bf.clear237, metadata !6312, metadata !DIExpression()), !dbg !6460
  %idxprom238 = zext i32 %bf.clear237 to i64, !dbg !6462
  %arrayidx239 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom238, !dbg !6462
  %41 = load i8, i8* %arrayidx239, align 1, !dbg !6462
  %conv241 = zext i8 %41 to i32, !dbg !6462
  call void @llvm.dbg.value(metadata i32 %conv241, metadata !6313, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i32 %conv241, metadata !6314, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.4, metadata !6315, metadata !DIExpression()), !dbg !6460
  %42 = bitcast i32* %40 to %struct.rtx_def*, !dbg !6463
  br i1 %cmp242, label %land.lhs.true244, label %if.end253, !dbg !6463

land.lhs.true244:                                 ; preds = %for.body217
  %conv245 = zext i8 %41 to i64, !dbg !6464
  %add = add nsw i64 %38, %conv245, !dbg !6465
  %cmp247 = icmp sgt i64 %add, %conv246, !dbg !6466
  br i1 %cmp247, label %if.then249, label %if.end253, !dbg !6467

if.then249:                                       ; preds = %land.lhs.true244
  %43 = trunc i64 %38 to i32, !dbg !6468
  %conv252 = sub i32 %ssize, %43, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %conv252, metadata !6314, metadata !DIExpression()), !dbg !6460
  br label %if.end253, !dbg !6469

if.end253:                                        ; preds = %if.then249, %land.lhs.true244, %for.body217
  %adj_bytelen.0 = phi i32 [ %conv252, %if.then249 ], [ %conv241, %land.lhs.true244 ], [ %conv241, %for.body217 ], !dbg !6460
  call void @llvm.dbg.value(metadata i32 %adj_bytelen.0, metadata !6314, metadata !DIExpression()), !dbg !6460
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst.4, i64 0, i32 0, !dbg !6470
  %bf.load254 = load i32, i32* %44, align 8, !dbg !6470
  %bf.clear255 = and i32 %bf.load254, 65535, !dbg !6470
  %cmp256 = icmp eq i32 %bf.clear255, 41, !dbg !6471
  br i1 %cmp256, label %if.then258, label %if.end361, !dbg !6472

if.then258:                                       ; preds = %if.end253
  %conv259 = zext i32 %adj_bytelen.0 to i64, !dbg !6473
  %add260 = add nsw i64 %38, %conv259, !dbg !6474
  %arrayidx263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst.4, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6475
  %45 = bitcast %union.rtunion_def* %arrayidx263 to i32**, !dbg !6475
  %46 = load i32*, i32** %45, align 8, !dbg !6475
  %bf.load265 = load i32, i32* %46, align 8, !dbg !6475
  %bf.lshr266 = lshr i32 %bf.load265, 16, !dbg !6475
  %bf.clear267 = and i32 %bf.lshr266, 255, !dbg !6475
  %idxprom268 = zext i32 %bf.clear267 to i64, !dbg !6475
  %arrayidx269 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom268, !dbg !6475
  %47 = load i8, i8* %arrayidx269, align 1, !dbg !6475
  %conv271 = zext i8 %47 to i64, !dbg !6475
  %cmp272 = icmp sgt i64 %add260, %conv271, !dbg !6476
  %48 = bitcast i32* %46 to %struct.rtx_def*, !dbg !6477
  br i1 %cmp272, label %if.else279, label %if.end361, !dbg !6478

if.else279:                                       ; preds = %if.then258
  %cmp291 = icmp slt i64 %38, %conv271, !dbg !6479
  br i1 %cmp291, label %if.else310, label %if.then293, !dbg !6480

if.then293:                                       ; preds = %if.else279
  %sub305 = sub nsw i64 %38, %conv271, !dbg !6481
  call void @llvm.dbg.value(metadata i64 %sub305, metadata !6308, metadata !DIExpression()), !dbg !6460
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dst.4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6483
  %rt_rtx309 = bitcast %union.rtunion_def* %49 to %struct.rtx_def**, !dbg !6483
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx309, align 8, !dbg !6483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %50, metadata !6315, metadata !DIExpression()), !dbg !6460
  br label %if.end361

if.else310:                                       ; preds = %if.else279
  %bf.lshr312 = lshr i32 %bf.load254, 16, !dbg !6484
  %bf.clear313 = and i32 %bf.lshr312, 255, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %bf.clear313, metadata !6316, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.value(metadata i32 %bf.clear237, metadata !6322, metadata !DIExpression()), !dbg !6485
  %cmp319 = icmp eq i64 %38, 0, !dbg !6486
  br i1 %cmp319, label %land.lhs.true321, label %cond.true328, !dbg !6486

land.lhs.true321:                                 ; preds = %if.else310
  %num_elem326 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i64 0, i32 0, !dbg !6486
  %51 = load i32, i32* %num_elem326, align 8, !dbg !6486
  %tobool327 = icmp eq i32 %51, 0, !dbg !6486
  br i1 %tobool327, label %cond.true328, label %cond.end330, !dbg !6486

cond.true328:                                     ; preds = %land.lhs.true321, %if.else310
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2064, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6486
  br label %cond.end330, !dbg !6486

cond.end330:                                      ; preds = %land.lhs.true321, %cond.true328
  %call332 = tail call i32 @get_mode_alignment(i32 %bf.clear313) #6, !dbg !6487
  %call333 = tail call i32 @get_mode_alignment(i32 %bf.clear237) #6, !dbg !6489
  %cmp334 = icmp ult i32 %call332, %call333, !dbg !6490
  br i1 %cmp334, label %if.else346, label %if.then336, !dbg !6491

if.then336:                                       ; preds = %cond.end330
  %idxprom337 = zext i32 %bf.clear313 to i64, !dbg !6492
  %arrayidx338 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom337, !dbg !6492
  %52 = load i8, i8* %arrayidx338, align 1, !dbg !6492
  %conv340 = zext i8 %52 to i64, !dbg !6492
  %call341 = tail call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear313, i64 %conv340, i32 0) #6, !dbg !6494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call341, metadata !6315, metadata !DIExpression()), !dbg !6460
  %call342 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call341, i32 %bf.clear237, i64 %38, i32 1, i32 1) #6, !dbg !6495
  %call345 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call342, %struct.rtx_def* %42) #8, !dbg !6496
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call341, metadata !6286, metadata !DIExpression()), !dbg !6323
  br label %cleanup401, !dbg !6497

if.else346:                                       ; preds = %cond.end330
  %53 = load i8, i8* %arrayidx239, align 1, !dbg !6498
  %conv350 = zext i8 %53 to i64, !dbg !6498
  %call351 = tail call %struct.rtx_def* @assign_stack_temp(i32 %bf.clear237, i64 %conv350, i32 0) #6, !dbg !6500
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call351, metadata !6315, metadata !DIExpression()), !dbg !6460
  %call354 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call351, %struct.rtx_def* %42) #8, !dbg !6501
  %call355 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call351, i32 %bf.clear313, i64 %38, i32 1, i32 1) #6, !dbg !6502
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call355, metadata !6286, metadata !DIExpression()), !dbg !6323
  br label %cleanup401

if.end361:                                        ; preds = %if.then258, %if.then293, %if.end253
  %bytepos218.1 = phi i64 [ %38, %if.end253 ], [ %sub305, %if.then293 ], [ %38, %if.then258 ], !dbg !6503
  %dest.1 = phi %struct.rtx_def* [ %dst.4, %if.end253 ], [ %50, %if.then293 ], [ %48, %if.then258 ], !dbg !6460
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest.1, metadata !6315, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i64 %bytepos218.1, metadata !6308, metadata !DIExpression()), !dbg !6460
  br i1 %cmp242, label %land.lhs.true364, label %if.end371, !dbg !6504

land.lhs.true364:                                 ; preds = %if.end361
  %conv365 = zext i8 %41 to i64, !dbg !6506
  %add366 = add nsw i64 %bytepos218.1, %conv365, !dbg !6507
  %cmp368 = icmp sgt i64 %add366, %conv246, !dbg !6508
  %spec.select = select i1 %cmp368, i32 %adj_bytelen.0, i32 %conv241, !dbg !6509
  br label %if.end371, !dbg !6509

if.end371:                                        ; preds = %land.lhs.true364, %if.end361
  %bytelen.0 = phi i32 [ %conv241, %if.end361 ], [ %spec.select, %land.lhs.true364 ], !dbg !6460
  call void @llvm.dbg.value(metadata i32 %bytelen.0, metadata !6313, metadata !DIExpression()), !dbg !6460
  %54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest.1, i64 0, i32 0, !dbg !6510
  %bf.load372 = load i32, i32* %54, align 8, !dbg !6510
  %bf.clear373 = and i32 %bf.load372, 65535, !dbg !6510
  %cmp374 = icmp eq i32 %bf.clear373, 43, !dbg !6510
  br i1 %cmp374, label %land.lhs.true376, label %if.end371.if.else394_crit_edge, !dbg !6512

if.end371.if.else394_crit_edge:                   ; preds = %if.end371
  %.pre = shl nsw i64 %bytepos218.1, 3, !dbg !6513
  br label %if.else394, !dbg !6512

land.lhs.true376:                                 ; preds = %if.end371
  %mul377 = shl nsw i64 %bytepos218.1, 3, !dbg !6514
  %call378 = tail call i32 @get_mode_alignment(i32 %bf.clear237) #6, !dbg !6515
  %conv379 = zext i32 %call378 to i64, !dbg !6515
  %rem = srem i64 %mul377, %conv379, !dbg !6516
  %cmp380 = icmp eq i64 %rem, 0, !dbg !6517
  br i1 %cmp380, label %land.lhs.true382, label %if.else394, !dbg !6518

land.lhs.true382:                                 ; preds = %land.lhs.true376
  %55 = load i8, i8* %arrayidx239, align 1, !dbg !6519
  %conv386 = zext i8 %55 to i32, !dbg !6519
  %cmp387 = icmp eq i32 %bytelen.0, %conv386, !dbg !6520
  br i1 %cmp387, label %if.then389, label %if.else394, !dbg !6521

if.then389:                                       ; preds = %land.lhs.true382
  %call390 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %dest.1, i32 %bf.clear237, i64 %bytepos218.1, i32 1, i32 1) #6, !dbg !6522
  %call393 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call390, %struct.rtx_def* %42) #8, !dbg !6523
  br label %cleanup401, !dbg !6523

if.else394:                                       ; preds = %if.end371.if.else394_crit_edge, %land.lhs.true382, %land.lhs.true376
  %mul397.pre-phi = phi i64 [ %.pre, %if.end371.if.else394_crit_edge ], [ %mul377, %land.lhs.true382 ], [ %mul377, %land.lhs.true376 ], !dbg !6513
  %mul395 = shl i32 %bytelen.0, 3, !dbg !6524
  %conv396 = zext i32 %mul395 to i64, !dbg !6525
  tail call void @store_bit_field(%struct.rtx_def* %dest.1, i64 %conv396, i64 %mul397.pre-phi, i32 %bf.clear237, %struct.rtx_def* %42) #6, !dbg !6526
  br label %cleanup401

cleanup401:                                       ; preds = %if.then389, %if.else394, %if.then336, %if.else346
  %cleanup.dest.slot.1 = phi i1 [ false, %if.else346 ], [ false, %if.then336 ], [ true, %if.else394 ], [ true, %if.then389 ]
  %dst.6 = phi %struct.rtx_def* [ %call355, %if.else346 ], [ %call341, %if.then336 ], [ %dst.4, %if.else394 ], [ %dst.4, %if.then389 ], !dbg !6323
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.6, metadata !6286, metadata !DIExpression()), !dbg !6323
  br i1 %cleanup.dest.slot.1, label %for.inc406, label %for.end408

for.inc406:                                       ; preds = %cleanup401
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6527
  call void @llvm.dbg.value(metadata i32 undef, metadata !6289, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6323
  br label %for.cond214, !dbg !6528, !llvm.loop !6529

for.end408:                                       ; preds = %cleanup401, %for.cond214
  %dst.7 = phi %struct.rtx_def* [ %dst.6, %cleanup401 ], [ %dst.4, %for.cond214 ], !dbg !6456
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.7, metadata !6286, metadata !DIExpression()), !dbg !6323
  %cmp409 = icmp eq %struct.rtx_def* %dst.7, %orig_dst, !dbg !6531
  br i1 %cmp409, label %cleanup.cont421, label %if.then411, !dbg !6533

if.then411:                                       ; preds = %for.end408
  %call412 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %orig_dst, %struct.rtx_def* %dst.7) #8, !dbg !6534
  br label %cleanup.cont421, !dbg !6534

cleanup.cont421:                                  ; preds = %if.then93, %for.end408, %if.end38, %if.end97, %if.then411
  ret void, !dbg !6535
}

declare dso_local i32 @int_mode_for_mode(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @assign_stack_temp(i32, i64, i32) local_unnamed_addr #1

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @subreg_lowpart_offset(i32, i32) local_unnamed_addr #1

declare dso_local void @store_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def* %tgtblk, %struct.rtx_def* %srcreg, %union.tree_node* %type) local_unnamed_addr #4 !dbg !6536 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tgtblk, metadata !6540, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %srcreg, metadata !6541, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6542, metadata !DIExpression()), !dbg !6554
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #6, !dbg !6555
  call void @llvm.dbg.value(metadata i64 %call, metadata !6543, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6544, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6545, metadata !DIExpression()), !dbg !6554
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6556
  %1 = load i32, i32* %0, align 8, !dbg !6556
  %cmp = icmp ult i32 %1, 32, !dbg !6556
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6556

cond.true:                                        ; preds = %entry
  %phitmp = zext i32 %1 to i64, !dbg !6556
  br label %cond.end, !dbg !6556

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 32, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !6546, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i64 0, metadata !6549, metadata !DIExpression()), !dbg !6554
  %cmp4 = icmp eq %struct.rtx_def* %tgtblk, null, !dbg !6557
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6559

if.then:                                          ; preds = %cond.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6560
  %bf.load = load i64, i64* %2, align 8, !dbg !6560
  %3 = lshr i64 %bf.load, 18, !dbg !6560
  %4 = trunc i64 %3 to i32, !dbg !6560
  %mul11 = and i32 %4, 2, !dbg !6560
  %type12 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !6560
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type12, i64 0, i32 6, !dbg !6560
  %bf.load13 = load i32, i32* %restrict_flag, align 4, !dbg !6560
  %5 = lshr i32 %bf.load13, 11, !dbg !6560
  %mul16 = and i32 %5, 4, !dbg !6560
  %or17 = or i32 %mul11, %mul16, !dbg !6560
  %6 = lshr i64 %bf.load, 48, !dbg !6560
  %7 = trunc i64 %6 to i32, !dbg !6560
  %shl = and i32 %7, 65280, !dbg !6560
  %or22 = or i32 %or17, %shl, !dbg !6560
  %or23 = or i32 %or22, 1, !dbg !6562
  %call24 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %type, i32 %or23) #6, !dbg !6563
  %call25 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call24, i32 0, i32 1, i32 1) #6, !dbg !6564
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !6540, metadata !DIExpression()), !dbg !6554
  tail call void @preserve_temp_slots(%struct.rtx_def* %call25) #6, !dbg !6565
  br label %if.end, !dbg !6566

if.end:                                           ; preds = %if.then, %cond.end
  %tgtblk.addr.0 = phi %struct.rtx_def* [ %call25, %if.then ], [ %tgtblk, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tgtblk.addr.0, metadata !6540, metadata !DIExpression()), !dbg !6554
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %srcreg, i64 0, i32 0, !dbg !6567
  %bf.load26 = load i32, i32* %8, align 8, !dbg !6567
  %bf.clear28 = and i32 %bf.load26, 16711680, !dbg !6567
  %cmp29 = icmp eq i32 %bf.clear28, 65536, !dbg !6569
  br i1 %cmp29, label %if.end45, label %land.lhs.true, !dbg !6570

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr32 = lshr i32 %bf.load26, 16, !dbg !6571
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !6571
  %idxprom = zext i32 %bf.clear33 to i64, !dbg !6571
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6571
  %9 = load i8, i8* %arrayidx, align 1, !dbg !6571
  %cmp36 = icmp ult i8 %9, 4, !dbg !6572
  br i1 %cmp36, label %if.then38, label %if.end45, !dbg !6573

if.then38:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* @word_mode, align 4, !dbg !6574
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6575
  %bf.load40 = load i64, i64* %11, align 8, !dbg !6575
  %bf.lshr41 = lshr i64 %bf.load40, 21, !dbg !6575
  %12 = trunc i64 %bf.lshr41 to i32, !dbg !6575
  %bf.cast43 = and i32 %12, 1, !dbg !6575
  %call44 = tail call %struct.rtx_def* @convert_to_mode(i32 %10, %struct.rtx_def* %srcreg, i32 %bf.cast43) #8, !dbg !6576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !6541, metadata !DIExpression()), !dbg !6554
  br label %if.end45, !dbg !6577

if.end45:                                         ; preds = %if.end, %if.then38, %land.lhs.true
  %srcreg.addr.0 = phi %struct.rtx_def* [ %call44, %if.then38 ], [ %srcreg, %land.lhs.true ], [ %srcreg, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %srcreg.addr.0, metadata !6541, metadata !DIExpression()), !dbg !6554
  %rem = and i64 %call, 3, !dbg !6578
  %cmp46 = icmp eq i64 %rem, 0, !dbg !6580
  br i1 %cmp46, label %if.end56, label %land.lhs.true48, !dbg !6581

land.lhs.true48:                                  ; preds = %if.end45
  %13 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 4), align 8, !dbg !6582
  %call49 = tail call zeroext i8 %13(%union.tree_node* %type) #6, !dbg !6583
  %tobool = icmp eq i8 %call49, 0, !dbg !6583
  br i1 %tobool, label %if.end56, label %if.then53, !dbg !6584

if.then53:                                        ; preds = %land.lhs.true48
  %rem54 = shl i64 %call, 3, !dbg !6585
  %mul55 = and i64 %rem54, 24, !dbg !6585
  %sub = sub nuw nsw i64 32, %mul55, !dbg !6586
  call void @llvm.dbg.value(metadata i64 %sub, metadata !6549, metadata !DIExpression()), !dbg !6554
  br label %if.end56, !dbg !6587

if.end56:                                         ; preds = %land.lhs.true48, %if.end45, %if.then53
  %padding_correction.0 = phi i64 [ %sub, %if.then53 ], [ 0, %if.end45 ], [ 0, %land.lhs.true48 ], !dbg !6554
  call void @llvm.dbg.value(metadata i64 %padding_correction.0, metadata !6549, metadata !DIExpression()), !dbg !6554
  %14 = load i32, i32* @word_mode, align 4, !dbg !6588
  call void @llvm.dbg.value(metadata i32 %14, metadata !6550, metadata !DIExpression()), !dbg !6554
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tgtblk.addr.0, i64 0, i32 0, !dbg !6589
  %bf.load57 = load i32, i32* %15, align 8, !dbg !6589
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !6589
  %cmp59 = icmp eq i32 %bf.clear58, 43, !dbg !6589
  br i1 %cmp59, label %if.then61, label %if.end68, !dbg !6590

if.then61:                                        ; preds = %if.end56
  %conv62 = trunc i64 %cond to i32, !dbg !6591
  %call63 = tail call i32 @mode_for_size(i32 %conv62, i32 2, i32 1) #6, !dbg !6592
  call void @llvm.dbg.value(metadata i32 %call63, metadata !6551, metadata !DIExpression()), !dbg !6593
  %cmp64 = icmp eq i32 %call63, 1, !dbg !6594
  %spec.select = select i1 %cmp64, i32 %14, i32 %call63, !dbg !6596
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6550, metadata !DIExpression()), !dbg !6554
  br label %if.end68, !dbg !6597

if.end68:                                         ; preds = %if.then61, %if.end56
  %copy_mode.1 = phi i32 [ %spec.select, %if.then61 ], [ %14, %if.end56 ], !dbg !6554
  call void @llvm.dbg.value(metadata i32 %copy_mode.1, metadata !6550, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i64 0, metadata !6547, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i64 %padding_correction.0, metadata !6548, metadata !DIExpression()), !dbg !6554
  %mul69 = shl i64 %call, 3, !dbg !6598
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %srcreg.addr.0, i64 0, i32 0, !dbg !6601
  br label %for.cond, !dbg !6604

for.cond:                                         ; preds = %if.end91, %if.end68
  %bitpos.0 = phi i64 [ 0, %if.end68 ], [ %add, %if.end91 ], !dbg !6605
  %xbitpos.0 = phi i64 [ %padding_correction.0, %if.end68 ], [ %add95, %if.end91 ], !dbg !6605
  %dst.0 = phi %struct.rtx_def* [ null, %if.end68 ], [ %dst.1, %if.end91 ], !dbg !6554
  %src.0 = phi %struct.rtx_def* [ null, %if.end68 ], [ %src.1, %if.end91 ], !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !6544, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.0, metadata !6545, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i64 %xbitpos.0, metadata !6548, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i64 %bitpos.0, metadata !6547, metadata !DIExpression()), !dbg !6554
  %cmp70 = icmp ult i64 %bitpos.0, %mul69, !dbg !6606
  br i1 %cmp70, label %for.body, label %for.end, !dbg !6607

for.body:                                         ; preds = %for.cond
  %rem72 = and i64 %xbitpos.0, 31, !dbg !6608
  %cmp73 = icmp eq i64 %rem72, 0, !dbg !6609
  %cmp75 = icmp eq i64 %xbitpos.0, %padding_correction.0, !dbg !6610
  %or.cond = or i1 %cmp73, %cmp75, !dbg !6611
  br i1 %or.cond, label %if.then77, label %if.end83, !dbg !6611

if.then77:                                        ; preds = %for.body
  %div = lshr i64 %xbitpos.0, 5, !dbg !6612
  %conv78 = trunc i64 %div to i32, !dbg !6613
  %bf.load79 = load i32, i32* %16, align 8, !dbg !6614
  %bf.lshr80 = lshr i32 %bf.load79, 16, !dbg !6614
  %bf.clear81 = and i32 %bf.lshr80, 255, !dbg !6614
  %call82 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %srcreg.addr.0, i32 %conv78, i32 %bf.clear81) #6, !dbg !6615
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call82, metadata !6544, metadata !DIExpression()), !dbg !6554
  br label %if.end83, !dbg !6616

if.end83:                                         ; preds = %for.body, %if.then77
  %src.1 = phi %struct.rtx_def* [ %call82, %if.then77 ], [ %src.0, %for.body ], !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.1, metadata !6544, metadata !DIExpression()), !dbg !6554
  %rem84 = and i64 %bitpos.0, 31, !dbg !6617
  %cmp85 = icmp eq i64 %rem84, 0, !dbg !6619
  br i1 %cmp85, label %if.then87, label %if.end91, !dbg !6620

if.then87:                                        ; preds = %if.end83
  %div88 = lshr i64 %bitpos.0, 5, !dbg !6621
  %conv89 = trunc i64 %div88 to i32, !dbg !6622
  %call90 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %tgtblk.addr.0, i32 %conv89, i32 1, i32 1) #6, !dbg !6623
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call90, metadata !6545, metadata !DIExpression()), !dbg !6554
  br label %if.end91, !dbg !6624

if.end91:                                         ; preds = %if.then87, %if.end83
  %dst.1 = phi %struct.rtx_def* [ %call90, %if.then87 ], [ %dst.0, %if.end83 ], !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.1, metadata !6545, metadata !DIExpression()), !dbg !6554
  %call94 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %src.1, i64 %cond, i64 %rem72, i32 1, %struct.rtx_def* null, i32 %copy_mode.1, i32 %copy_mode.1) #6, !dbg !6625
  tail call void @store_bit_field(%struct.rtx_def* %dst.1, i64 %cond, i64 %rem84, i32 %copy_mode.1, %struct.rtx_def* %call94) #6, !dbg !6626
  %add = add i64 %bitpos.0, %cond, !dbg !6627
  call void @llvm.dbg.value(metadata i64 %add, metadata !6547, metadata !DIExpression()), !dbg !6554
  %add95 = add i64 %xbitpos.0, %cond, !dbg !6628
  call void @llvm.dbg.value(metadata i64 %add95, metadata !6548, metadata !DIExpression()), !dbg !6554
  br label %for.cond, !dbg !6629, !llvm.loop !6630

for.end:                                          ; preds = %for.cond
  ret %struct.rtx_def* %tgtblk.addr.0, !dbg !6632
}

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @assign_temp(%union.tree_node*, i32, i32, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @preserve_temp_slots(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @extract_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @use_reg(%struct.rtx_def** %call_fusage, %struct.rtx_def* %reg) local_unnamed_addr #4 !dbg !6633 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !6637, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !6638, metadata !DIExpression()), !dbg !6639
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !6640
  %bf.load = load i32, i32* %0, align 8, !dbg !6640
  %bf.clear = and i32 %bf.load, 65535, !dbg !6640
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !6640
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !6640

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #8, !dbg !6640
  %cmp1 = icmp ult i32 %call, 53, !dbg !6640
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !6640

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6640
  br label %cond.end, !dbg !6640

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 0, %struct.rtx_def* %reg) #6, !dbg !6641
  %1 = load %struct.rtx_def*, %struct.rtx_def** %call_fusage, align 8, !dbg !6641
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call2, %struct.rtx_def* %1) #6, !dbg !6641
  store %struct.rtx_def* %call3, %struct.rtx_def** %call_fusage, align 8, !dbg !6642
  ret void, !dbg !6643
}

; Function Attrs: nounwind uwtable
define dso_local void @use_regs(%struct.rtx_def** %call_fusage, i32 %regno, i32 %nregs) local_unnamed_addr #4 !dbg !6644 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !6648, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32 %regno, metadata !6649, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32 %nregs, metadata !6650, metadata !DIExpression()), !dbg !6652
  %add = add nsw i32 %regno, %nregs, !dbg !6653
  %cmp = icmp slt i32 %add, 54, !dbg !6653
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6653

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2244, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6653
  br label %cond.end, !dbg !6653

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !6651, metadata !DIExpression()), !dbg !6652
  %0 = sext i32 %nregs to i64, !dbg !6654
  %1 = sext i32 %regno to i64, !dbg !6654
  br label %for.cond, !dbg !6654

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ], !dbg !6656
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6651, metadata !DIExpression()), !dbg !6652
  %cmp1 = icmp slt i64 %indvars.iv, %0, !dbg !6657
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6659

for.body:                                         ; preds = %for.cond
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6660
  %3 = add nsw i64 %indvars.iv, %1, !dbg !6661
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %3, !dbg !6660
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !6660
  tail call void @use_reg(%struct.rtx_def** %call_fusage, %struct.rtx_def* %4) #8, !dbg !6662
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6663
  call void @llvm.dbg.value(metadata i32 undef, metadata !6651, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6652
  br label %for.cond, !dbg !6664, !llvm.loop !6665

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6667
}

; Function Attrs: nounwind uwtable
define dso_local void @use_group_regs(%struct.rtx_def** %call_fusage, %struct.rtx_def* %regs) local_unnamed_addr #4 !dbg !6668 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %call_fusage, metadata !6670, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata %struct.rtx_def* %regs, metadata !6671, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i32 0, metadata !6672, metadata !DIExpression()), !dbg !6677
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %regs, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6678
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !6678
  br label %for.cond, !dbg !6679

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !6680
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6672, metadata !DIExpression()), !dbg !6677
  %0 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6681
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %0, i64 0, i32 0, !dbg !6681
  %1 = load i32, i32* %num_elem, align 8, !dbg !6681
  %2 = sext i32 %1 to i64, !dbg !6682
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !6682
  br i1 %cmp, label %for.body, label %for.end, !dbg !6683

for.body:                                         ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %0, i64 0, i32 1, i64 %indvars.iv, !dbg !6684
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8, !dbg !6684
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6684
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !6684
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6684
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6673, metadata !DIExpression()), !dbg !6685
  %cmp9 = icmp eq %struct.rtx_def* %4, null, !dbg !6686
  br i1 %cmp9, label %for.inc, label %land.lhs.true, !dbg !6688

land.lhs.true:                                    ; preds = %for.body
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !6689
  %bf.load = load i32, i32* %5, align 8, !dbg !6689
  %bf.clear = and i32 %bf.load, 65535, !dbg !6689
  %cmp10 = icmp eq i32 %bf.clear, 37, !dbg !6689
  br i1 %cmp10, label %if.then, label %for.inc, !dbg !6690

if.then:                                          ; preds = %land.lhs.true
  tail call void @use_reg(%struct.rtx_def** %call_fusage, %struct.rtx_def* nonnull %4) #8, !dbg !6691
  br label %for.inc, !dbg !6691

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6692
  call void @llvm.dbg.value(metadata i32 undef, metadata !6672, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6677
  br label %for.cond, !dbg !6693, !llvm.loop !6694

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6696
}

; Function Attrs: nounwind uwtable
define dso_local i32 @can_store_by_pieces(i64 %len, %struct.rtx_def* (i8*, i64, i32)* %constfun, i8* %constfundata, i32 %align, i8 zeroext %memsetp) local_unnamed_addr #4 !dbg !6697 {
entry:
  call void @llvm.dbg.value(metadata i64 %len, metadata !6704, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata %struct.rtx_def* (i8*, i64, i32)* %constfun, metadata !6705, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i8* %constfundata, metadata !6706, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %align, metadata !6707, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i8 %memsetp, metadata !6708, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 0, metadata !6711, metadata !DIExpression()), !dbg !6727
  %cmp = icmp eq i64 %len, 0, !dbg !6728
  br i1 %cmp, label %cleanup123, label %if.end, !dbg !6730

if.end:                                           ; preds = %entry
  %tobool = icmp eq i8 %memsetp, 0, !dbg !6731
  %call = tail call fastcc i64 @move_by_pieces_ninsns(i64 %len, i32 %align, i32 5) #8, !dbg !6733
  %call1 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !6733
  %tobool3 = icmp ne i8 %call1, 0, !dbg !6733
  br i1 %tobool, label %cond.false8, label %cond.true, !dbg !6734

cond.true:                                        ; preds = %if.end
  br i1 %tobool3, label %cond.true4, label %cond.end, !dbg !6735

cond.true4:                                       ; preds = %cond.true
  %0 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !6735
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %0, i64 0, i32 10, !dbg !6735
  %1 = load i32, i32* %move_ratio, align 4, !dbg !6735
  %phitmp2 = zext i32 %1 to i64, !dbg !6735
  br label %cond.end, !dbg !6735

cond.end:                                         ; preds = %cond.true, %cond.true4
  %cond = phi i64 [ %phitmp2, %cond.true4 ], [ 3, %cond.true ]
  %cmp6 = icmp ult i64 %call, %cond, !dbg !6735
  br i1 %cmp6, label %if.end22, label %cleanup123, !dbg !6731

cond.false8:                                      ; preds = %if.end
  br i1 %tobool3, label %cond.true13, label %cond.end16, !dbg !6736

cond.true13:                                      ; preds = %cond.false8
  %2 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !6736
  %move_ratio14 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %2, i64 0, i32 10, !dbg !6736
  %3 = load i32, i32* %move_ratio14, align 4, !dbg !6736
  %phitmp = zext i32 %3 to i64, !dbg !6736
  br label %cond.end16, !dbg !6736

cond.end16:                                       ; preds = %cond.false8, %cond.true13
  %cond17 = phi i64 [ %phitmp, %cond.true13 ], [ 3, %cond.false8 ]
  %cmp19 = icmp ult i64 %call, %cond17, !dbg !6736
  br i1 %cmp19, label %if.end22, label %cleanup123, !dbg !6734

if.end22:                                         ; preds = %cond.end16, %cond.end
  %call23 = tail call i32 @mode_for_size(i32 32, i32 2, i32 1) #6, !dbg !6737
  call void @llvm.dbg.value(metadata i32 %call23, metadata !6713, metadata !DIExpression()), !dbg !6727
  %call24 = tail call i32 @get_mode_alignment(i32 %call23) #6, !dbg !6738
  %cmp25 = icmp ugt i32 %call24, %align, !dbg !6739
  br i1 %cmp25, label %if.else, label %if.then27, !dbg !6740

if.then27:                                        ; preds = %if.end22
  %call28 = tail call i32 @get_mode_alignment(i32 %call23) #6, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %call28, metadata !6707, metadata !DIExpression()), !dbg !6727
  br label %if.end49, !dbg !6742

if.else:                                          ; preds = %if.end22
  %4 = load i8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), align 2, !dbg !6743
  %conv29 = zext i8 %4 to i32, !dbg !6743
  call void @llvm.dbg.value(metadata i32 %conv29, metadata !6713, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %conv29, metadata !6717, metadata !DIExpression()), !dbg !6745
  br label %for.cond, !dbg !6746

for.cond:                                         ; preds = %for.inc, %if.else
  %tmode.0 = phi i32 [ %conv29, %if.else ], [ %conv40, %for.inc ], !dbg !6747
  %xmode.0 = phi i32 [ %conv29, %if.else ], [ %tmode.0, %for.inc ], !dbg !6747
  call void @llvm.dbg.value(metadata i32 %xmode.0, metadata !6717, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.value(metadata i32 %tmode.0, metadata !6713, metadata !DIExpression()), !dbg !6727
  %cmp30 = icmp eq i32 %tmode.0, 0, !dbg !6748
  br i1 %cmp30, label %for.end, label %for.body, !dbg !6750

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %tmode.0 to i64, !dbg !6751
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6751
  %5 = load i8, i8* %arrayidx, align 1, !dbg !6751
  %cmp34 = icmp ugt i8 %5, 4, !dbg !6753
  br i1 %cmp34, label %for.end, label %for.inc, !dbg !6754

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %tmode.0, metadata !6717, metadata !DIExpression()), !dbg !6745
  %arrayidx39 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !6755
  %6 = load i8, i8* %arrayidx39, align 1, !dbg !6755
  %conv40 = zext i8 %6 to i32, !dbg !6755
  call void @llvm.dbg.value(metadata i32 %conv40, metadata !6713, metadata !DIExpression()), !dbg !6727
  br label %for.cond, !dbg !6756, !llvm.loop !6757

for.end:                                          ; preds = %for.cond, %for.body
  %xmode.0.lcssa = phi i32 [ %xmode.0, %for.cond ], [ %xmode.0, %for.body ], !dbg !6747
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6717, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6717, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6717, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6717, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6717, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6717, metadata !DIExpression()), !dbg !6745
  %call41 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !6759
  %cmp42 = icmp ult i32 %call41, %align, !dbg !6759
  br i1 %cmp42, label %if.end49, label %cond.false45, !dbg !6759

cond.false45:                                     ; preds = %for.end
  %call46 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !6759
  br label %if.end49, !dbg !6759

if.end49:                                         ; preds = %cond.false45, %for.end, %if.then27
  %align.addr.0 = phi i32 [ %call28, %if.then27 ], [ %call46, %cond.false45 ], [ %align, %for.end ], !dbg !6760
  call void @llvm.dbg.value(metadata i32 %align.addr.0, metadata !6707, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 0, metadata !6715, metadata !DIExpression()), !dbg !6727
  br label %for.cond50, !dbg !6761

for.cond50:                                       ; preds = %for.inc121, %if.end49
  %offset.0 = phi i64 [ 0, %if.end49 ], [ %offset.1.us.lcssa, %for.inc121 ], !dbg !6762
  %reverse.0 = phi i1 [ true, %if.end49 ], [ false, %for.inc121 ]
  call void @llvm.dbg.value(metadata i64 %offset.0, metadata !6711, metadata !DIExpression()), !dbg !6727
  br i1 %reverse.0, label %while.cond.preheader, label %cleanup123.loopexit3, !dbg !6763

while.cond.preheader:                             ; preds = %for.cond50
  br label %while.cond.us, !dbg !6764

while.cond.us:                                    ; preds = %if.end110.us, %while.cond.preheader
  %mode.0.us = phi i32 [ %mode.1.us.lcssa, %if.end110.us ], [ 0, %while.cond.preheader ], !dbg !6765
  %offset.1.us = phi i64 [ %offset.6.us, %if.end110.us ], [ %offset.0, %while.cond.preheader ], !dbg !6727
  %max_size.0.us = phi i32 [ %conv114.us, %if.end110.us ], [ 5, %while.cond.preheader ], !dbg !6766
  %l.0.us = phi i64 [ %l.2.us, %if.end110.us ], [ %len, %while.cond.preheader ], !dbg !6767
  call void @llvm.dbg.value(metadata i64 %l.0.us, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %max_size.0.us, metadata !6710, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.1.us, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %mode.0.us, metadata !6712, metadata !DIExpression()), !dbg !6727
  %cmp54.us = icmp ugt i32 %max_size.0.us, 1, !dbg !6768
  br i1 %cmp54.us, label %while.body.us, label %while.end115.us-lcssa.us, !dbg !6764

while.body.us:                                    ; preds = %while.cond.us
  br label %for.cond57.us, !dbg !6769

for.cond57.us:                                    ; preds = %for.body60.us, %while.body.us
  %mode.1.us = phi i32 [ %mode.0.us, %while.body.us ], [ %spec.select.us, %for.body60.us ], !dbg !6766
  %tmode.1.in.in.us = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %while.body.us ], [ %arrayidx71.us, %for.body60.us ]
  %tmode.1.in.us = load i8, i8* %tmode.1.in.in.us, align 1, !dbg !6771
  call void @llvm.dbg.value(metadata i8 %tmode.1.in.us, metadata !6713, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %mode.1.us, metadata !6712, metadata !DIExpression()), !dbg !6727
  %cmp58.us = icmp eq i8 %tmode.1.in.us, 0, !dbg !6772
  br i1 %cmp58.us, label %for.end73.us, label %for.body60.us, !dbg !6774

for.body60.us:                                    ; preds = %for.cond57.us
  %tmode.1.us = zext i8 %tmode.1.in.us to i32, !dbg !6771
  call void @llvm.dbg.value(metadata i32 %tmode.1.us, metadata !6713, metadata !DIExpression()), !dbg !6727
  %idxprom61.us = zext i8 %tmode.1.in.us to i64, !dbg !6775
  %arrayidx62.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom61.us, !dbg !6775
  %7 = load i8, i8* %arrayidx62.us, align 1, !dbg !6775
  %conv64.us = zext i8 %7 to i32, !dbg !6775
  %cmp65.us = icmp ugt i32 %max_size.0.us, %conv64.us, !dbg !6777
  %spec.select.us = select i1 %cmp65.us, i32 %tmode.1.us, i32 %mode.1.us, !dbg !6778
  call void @llvm.dbg.value(metadata i32 %spec.select.us, metadata !6712, metadata !DIExpression()), !dbg !6727
  %arrayidx71.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom61.us, !dbg !6779
  br label %for.cond57.us, !dbg !6780, !llvm.loop !6781

for.end73.us:                                     ; preds = %for.cond57.us
  %mode.1.us.lcssa = phi i32 [ %mode.1.us, %for.cond57.us ], !dbg !6766
  call void @llvm.dbg.value(metadata i32 %mode.1.us.lcssa, metadata !6712, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %mode.1.us.lcssa, metadata !6712, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %mode.1.us.lcssa, metadata !6712, metadata !DIExpression()), !dbg !6727
  %cmp74.us = icmp eq i32 %mode.1.us.lcssa, 0, !dbg !6783
  br i1 %cmp74.us, label %while.end115.us-lcssa.us, label %if.end77.us, !dbg !6785

if.end77.us:                                      ; preds = %for.end73.us
  %idxprom78.us = sext i32 %mode.1.us.lcssa to i64, !dbg !6786
  %insn_code.us = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom78.us, i32 0, !dbg !6787
  %8 = load i32, i32* %insn_code.us, align 4, !dbg !6787
  call void @llvm.dbg.value(metadata i32 %8, metadata !6714, metadata !DIExpression()), !dbg !6727
  %cmp80.us = icmp eq i32 %8, 2956, !dbg !6788
  br i1 %cmp80.us, label %if.end110.us, label %land.lhs.true.us, !dbg !6789

land.lhs.true.us:                                 ; preds = %if.end77.us
  %call82.us = tail call i32 @get_mode_alignment(i32 %mode.1.us.lcssa) #6, !dbg !6790
  %cmp83.us = icmp ult i32 %align.addr.0, %call82.us, !dbg !6791
  br i1 %cmp83.us, label %if.end110.us, label %if.then85.us, !dbg !6792

if.then85.us:                                     ; preds = %land.lhs.true.us
  %idxprom86.us = zext i32 %mode.1.us.lcssa to i64, !dbg !6793
  %arrayidx87.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom86.us, !dbg !6793
  %9 = load i8, i8* %arrayidx87.us, align 1, !dbg !6793
  call void @llvm.dbg.value(metadata i8 %9, metadata !6720, metadata !DIExpression()), !dbg !6794
  %conv91.us = zext i8 %9 to i64, !dbg !6794
  br label %while.cond90.us, !dbg !6795

while.cond90.us:                                  ; preds = %if.end103.us, %if.then85.us
  %offset.2.us = phi i64 [ %offset.1.us, %if.then85.us ], [ %offset.4.us, %if.end103.us ], !dbg !6727
  %l.1.us = phi i64 [ %l.0.us, %if.then85.us ], [ %sub109.us, %if.end103.us ], !dbg !6766
  call void @llvm.dbg.value(metadata i64 %l.1.us, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.2.us, metadata !6711, metadata !DIExpression()), !dbg !6727
  %cmp92.us = icmp ult i64 %l.1.us, %conv91.us, !dbg !6796
  br i1 %cmp92.us, label %cleanup.us, label %while.body94.us, !dbg !6795

while.body94.us:                                  ; preds = %while.cond90.us
  call void @llvm.dbg.value(metadata i64 %offset.2.us, metadata !6711, metadata !DIExpression()), !dbg !6727
  %call99.us = tail call %struct.rtx_def* %constfun(i8* %constfundata, i64 %offset.2.us, i32 %mode.1.us.lcssa) #6, !dbg !6797
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call99.us, metadata !6716, metadata !DIExpression()), !dbg !6727
  %call100.us = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %call99.us) #6, !dbg !6799
  %tobool101.us = icmp eq i8 %call100.us, 0, !dbg !6799
  br i1 %tobool101.us, label %cleanup.us, label %if.end103.us, !dbg !6801

if.end103.us:                                     ; preds = %while.body94.us
  %offset.4.us = add nsw i64 %offset.2.us, %conv91.us, !dbg !6802
  call void @llvm.dbg.value(metadata i64 %offset.4.us, metadata !6711, metadata !DIExpression()), !dbg !6727
  %sub109.us = sub i64 %l.1.us, %conv91.us, !dbg !6803
  call void @llvm.dbg.value(metadata i64 %sub109.us, metadata !6709, metadata !DIExpression()), !dbg !6727
  br label %while.cond90.us, !dbg !6795, !llvm.loop !6804

cleanup.us:                                       ; preds = %while.body94.us, %while.cond90.us
  %offset.2.us.lcssa = phi i64 [ %offset.2.us, %while.body94.us ], [ %offset.2.us, %while.cond90.us ], !dbg !6727
  %l.1.us.lcssa = phi i64 [ %l.1.us, %while.body94.us ], [ %l.1.us, %while.cond90.us ], !dbg !6766
  %cleanup.dest.slot.0.us = phi i1 [ false, %while.body94.us ], [ true, %while.cond90.us ]
  call void @llvm.dbg.value(metadata i64 %offset.2.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.2.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.1.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.1.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.2.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.2.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.1.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.1.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.1.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.1.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.2.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  br i1 %cleanup.dest.slot.0.us, label %if.end110.us, label %cleanup123.loopexit.us-lcssa.us

if.end110.us:                                     ; preds = %cleanup.us, %land.lhs.true.us, %if.end77.us
  %offset.6.us = phi i64 [ %offset.1.us, %land.lhs.true.us ], [ %offset.1.us, %if.end77.us ], [ %offset.2.us.lcssa, %cleanup.us ], !dbg !6727
  %l.2.us = phi i64 [ %l.0.us, %land.lhs.true.us ], [ %l.0.us, %if.end77.us ], [ %l.1.us.lcssa, %cleanup.us ], !dbg !6767
  call void @llvm.dbg.value(metadata i64 %l.2.us, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.6.us, metadata !6711, metadata !DIExpression()), !dbg !6727
  %idxprom111.us = zext i32 %mode.1.us.lcssa to i64, !dbg !6806
  %arrayidx112.us = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom111.us, !dbg !6806
  %10 = load i8, i8* %arrayidx112.us, align 1, !dbg !6806
  %conv114.us = zext i8 %10 to i32, !dbg !6806
  call void @llvm.dbg.value(metadata i32 %conv114.us, metadata !6710, metadata !DIExpression()), !dbg !6727
  br label %while.cond.us, !dbg !6764, !llvm.loop !6807

while.end115.us-lcssa.us:                         ; preds = %for.end73.us, %while.cond.us
  %offset.1.us.lcssa = phi i64 [ %offset.1.us, %for.end73.us ], [ %offset.1.us, %while.cond.us ], !dbg !6727
  %l.0.us.lcssa = phi i64 [ %l.0.us, %for.end73.us ], [ %l.0.us, %while.cond.us ], !dbg !6767
  call void @llvm.dbg.value(metadata i64 %offset.1.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.1.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.0.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.0.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.1.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.1.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.0.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.0.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.1.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %offset.1.us.lcssa, metadata !6711, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.0.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i64 %l.0.us.lcssa, metadata !6709, metadata !DIExpression()), !dbg !6727
  %tobool116 = icmp eq i64 %l.0.us.lcssa, 0, !dbg !6809
  br i1 %tobool116, label %for.inc121, label %cond.true117, !dbg !6809

cleanup123.loopexit.us-lcssa.us:                  ; preds = %cleanup.us
  br label %cleanup123, !dbg !6810

cond.true117:                                     ; preds = %while.end115.us-lcssa.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2383, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6809
  br label %for.inc121, !dbg !6809

for.inc121:                                       ; preds = %while.end115.us-lcssa.us, %cond.true117
  call void @llvm.dbg.value(metadata i32 1, metadata !6715, metadata !DIExpression()), !dbg !6727
  br label %for.cond50, !dbg !6811, !llvm.loop !6812

cleanup123.loopexit3:                             ; preds = %for.cond50
  br label %cleanup123, !dbg !6810

cleanup123:                                       ; preds = %cleanup123.loopexit3, %cleanup123.loopexit.us-lcssa.us, %cond.end, %cond.end16, %entry
  %retval.4 = phi i32 [ 1, %entry ], [ 0, %cond.end16 ], [ 0, %cond.end ], [ 0, %cleanup123.loopexit.us-lcssa.us ], [ 1, %cleanup123.loopexit3 ], !dbg !6727
  ret i32 %retval.4, !dbg !6810
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @store_by_pieces(%struct.rtx_def* %to, i64 %len, %struct.rtx_def* (i8*, i64, i32)* %constfun, i8* %constfundata, i32 %align, i8 zeroext %memsetp, i32 %endp) local_unnamed_addr #4 !dbg !6814 {
entry:
  %data = alloca %struct.store_by_pieces_d, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !6818, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i64 %len, metadata !6819, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata %struct.rtx_def* (i8*, i64, i32)* %constfun, metadata !6820, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i8* %constfundata, metadata !6821, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i32 %align, metadata !6822, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i8 %memsetp, metadata !6823, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i32 %endp, metadata !6824, metadata !DIExpression()), !dbg !6841
  %0 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !6842
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6843
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !6843
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !6843
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !6843
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !6843

cond.false:                                       ; preds = %entry
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 5, !dbg !6843
  %3 = load i8, i8* %addrspace, align 8, !dbg !6843
  br label %cond.end, !dbg !6843

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %3, %cond.false ], [ 0, %entry ]
  %call = tail call i32 %0(i8 zeroext %cond) #6, !dbg !6844
  call void @llvm.dbg.value(metadata i32 %call, metadata !6825, metadata !DIExpression()), !dbg !6841
  %4 = bitcast %struct.store_by_pieces_d* %data to i8*, !dbg !6845
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #7, !dbg !6845
  %cmp6 = icmp eq i64 %len, 0, !dbg !6846
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6848

if.then:                                          ; preds = %cond.end
  %cmp8 = icmp eq i32 %endp, 2, !dbg !6849
  br i1 %cmp8, label %cond.true10, label %cleanup, !dbg !6849

cond.true10:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2409, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6849
  br label %cleanup, !dbg !6849

if.end:                                           ; preds = %cond.end
  %tobool = icmp eq i8 %memsetp, 0, !dbg !6851
  %call16 = tail call fastcc i64 @move_by_pieces_ninsns(i64 %len, i32 %align, i32 5) #8, !dbg !6851
  %call17 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !6851
  %tobool19 = icmp ne i8 %call17, 0, !dbg !6851
  br i1 %tobool, label %cond.false27, label %cond.true15, !dbg !6851

cond.true15:                                      ; preds = %if.end
  br i1 %tobool19, label %cond.true20, label %cond.end22, !dbg !6851

cond.true20:                                      ; preds = %cond.true15
  %5 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !6851
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %5, i64 0, i32 10, !dbg !6851
  %6 = load i32, i32* %move_ratio, align 4, !dbg !6851
  %phitmp1 = zext i32 %6 to i64, !dbg !6851
  br label %cond.end22, !dbg !6851

cond.end22:                                       ; preds = %cond.true15, %cond.true20
  %cond23 = phi i64 [ %phitmp1, %cond.true20 ], [ 3, %cond.true15 ]
  %cmp25 = icmp ult i64 %call16, %cond23, !dbg !6851
  br i1 %cmp25, label %cond.end42, label %cond.true40, !dbg !6851

cond.false27:                                     ; preds = %if.end
  br i1 %tobool19, label %cond.true32, label %cond.end35, !dbg !6851

cond.true32:                                      ; preds = %cond.false27
  %7 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !6851
  %move_ratio33 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %7, i64 0, i32 10, !dbg !6851
  %8 = load i32, i32* %move_ratio33, align 4, !dbg !6851
  %phitmp = zext i32 %8 to i64, !dbg !6851
  br label %cond.end35, !dbg !6851

cond.end35:                                       ; preds = %cond.false27, %cond.true32
  %cond36 = phi i64 [ %phitmp, %cond.true32 ], [ 3, %cond.false27 ]
  %cmp38 = icmp ult i64 %call16, %cond36, !dbg !6851
  br i1 %cmp38, label %cond.end42, label %cond.true40, !dbg !6851

cond.true40:                                      ; preds = %cond.end35, %cond.end22
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2415, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6851
  br label %cond.end42, !dbg !6851

cond.end42:                                       ; preds = %cond.end22, %cond.end35, %cond.true40
  %constfun44 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 6, !dbg !6852
  store %struct.rtx_def* (i8*, i64, i32)* %constfun, %struct.rtx_def* (i8*, i64, i32)** %constfun44, align 8, !dbg !6853
  %constfundata45 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 7, !dbg !6854
  store i8* %constfundata, i8** %constfundata45, align 8, !dbg !6855
  %len46 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 4, !dbg !6856
  store i64 %len, i64* %len46, align 8, !dbg !6857
  %to47 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 0, !dbg !6858
  store %struct.rtx_def* %to, %struct.rtx_def** %to47, align 8, !dbg !6859
  call void @llvm.dbg.value(metadata %struct.store_by_pieces_d* %data, metadata !6826, metadata !DIExpression(DW_OP_deref)), !dbg !6841
  call fastcc void @store_by_pieces_1(%struct.store_by_pieces_d* nonnull %data, i32 %align) #8, !dbg !6860
  %tobool48 = icmp eq i32 %endp, 0, !dbg !6861
  br i1 %tobool48, label %if.else76, label %if.then49, !dbg !6862

if.then49:                                        ; preds = %cond.end42
  %reverse = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 8, !dbg !6863
  %9 = load i32, i32* %reverse, align 8, !dbg !6863
  %tobool50 = icmp eq i32 %9, 0, !dbg !6863
  br i1 %tobool50, label %cond.end53, label %cond.true51, !dbg !6863

cond.true51:                                      ; preds = %if.then49
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2425, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6863
  br label %cond.end53, !dbg !6863

cond.end53:                                       ; preds = %if.then49, %cond.true51
  %autinc_to = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 2, !dbg !6864
  %10 = load i32, i32* %autinc_to, align 8, !dbg !6864
  %tobool55 = icmp eq i32 %10, 0, !dbg !6866
  %cmp57 = icmp eq i32 %endp, 2, !dbg !6867
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !6868

if.then56:                                        ; preds = %cond.end53
  br i1 %cmp57, label %if.then59, label %if.then56.if.end63_crit_edge, !dbg !6869

if.then56.if.end63_crit_edge:                     ; preds = %if.then56
  %to_addr65.phi.trans.insert = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 1, !dbg !6871
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %to_addr65.phi.trans.insert, align 8, !dbg !6872
  br label %if.end63, !dbg !6869

if.then59:                                        ; preds = %if.then56
  %to_addr = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 1, !dbg !6873
  %11 = load %struct.rtx_def*, %struct.rtx_def** %to_addr, align 8, !dbg !6873
  %call60 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %11, i64 -1) #6, !dbg !6877
  %call61 = call %struct.rtx_def* @copy_to_mode_reg(i32 %call, %struct.rtx_def* %call60) #6, !dbg !6878
  store %struct.rtx_def* %call61, %struct.rtx_def** %to_addr, align 8, !dbg !6879
  br label %if.end63, !dbg !6880

if.end63:                                         ; preds = %if.then56.if.end63_crit_edge, %if.then59
  %12 = phi %struct.rtx_def* [ %.pre, %if.then56.if.end63_crit_edge ], [ %call61, %if.then59 ], !dbg !6872
  %13 = load %struct.rtx_def*, %struct.rtx_def** %to47, align 8, !dbg !6872
  %offset = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 5, !dbg !6872
  %14 = load i64, i64* %offset, align 8, !dbg !6872
  %call66 = call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %13, i32 14, %struct.rtx_def* %12, i64 %14, i32 1) #6, !dbg !6872
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !6838, metadata !DIExpression()), !dbg !6881
  br label %cleanup, !dbg !6882

if.else:                                          ; preds = %cond.end53
  br i1 %cmp57, label %if.then69, label %if.else.if.end71_crit_edge, !dbg !6883

if.else.if.end71_crit_edge:                       ; preds = %if.else
  %offset73.phi.trans.insert = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 5, !dbg !6885
  %.pre2 = load i64, i64* %offset73.phi.trans.insert, align 8, !dbg !6886
  br label %if.end71, !dbg !6883

if.then69:                                        ; preds = %if.else
  %offset70 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 5, !dbg !6887
  %15 = load i64, i64* %offset70, align 8, !dbg !6889
  %dec = add nsw i64 %15, -1, !dbg !6889
  store i64 %dec, i64* %offset70, align 8, !dbg !6889
  br label %if.end71, !dbg !6889

if.end71:                                         ; preds = %if.else.if.end71_crit_edge, %if.then69
  %16 = phi i64 [ %.pre2, %if.else.if.end71_crit_edge ], [ %dec, %if.then69 ], !dbg !6886
  %17 = load %struct.rtx_def*, %struct.rtx_def** %to47, align 8, !dbg !6886
  %call74 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %17, i32 14, i64 %16, i32 1, i32 1) #6, !dbg !6886
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !6838, metadata !DIExpression()), !dbg !6881
  br label %cleanup

if.else76:                                        ; preds = %cond.end42
  %18 = load %struct.rtx_def*, %struct.rtx_def** %to47, align 8, !dbg !6890
  br label %cleanup, !dbg !6891

cleanup:                                          ; preds = %if.then, %if.end63, %if.end71, %cond.true10, %if.else76
  %retval.0 = phi %struct.rtx_def* [ %18, %if.else76 ], [ %to, %if.then ], [ %to, %cond.true10 ], [ %call66, %if.end63 ], [ %call74, %if.end71 ], !dbg !6841
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #7, !dbg !6892
  ret %struct.rtx_def* %retval.0, !dbg !6892
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_by_pieces_1(%struct.store_by_pieces_d* %data, i32 %align) unnamed_addr #4 !dbg !6893 {
entry:
  call void @llvm.dbg.value(metadata %struct.store_by_pieces_d* %data, metadata !6898, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %align, metadata !6899, metadata !DIExpression()), !dbg !6909
  %0 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !6910
  %to = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 0, !dbg !6911
  %1 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !6911
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6911
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !6911
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !6911
  %cmp = icmp eq %struct.mem_attrs* %3, null, !dbg !6911
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !6911

cond.false:                                       ; preds = %entry
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 5, !dbg !6911
  %4 = load i8, i8* %addrspace, align 8, !dbg !6911
  br label %cond.end, !dbg !6911

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %4, %cond.false ], [ 0, %entry ]
  %call = tail call i32 %0(i8 zeroext %cond) #6, !dbg !6912
  call void @llvm.dbg.value(metadata i32 %call, metadata !6900, metadata !DIExpression()), !dbg !6909
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !6913
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6913
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !6913
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !6901, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 5, metadata !6902, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 0, metadata !6903, metadata !DIExpression()), !dbg !6909
  %offset = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 5, !dbg !6914
  store i64 0, i64* %offset, align 8, !dbg !6915
  %to_addr11 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 1, !dbg !6916
  store %struct.rtx_def* %6, %struct.rtx_def** %to_addr11, align 8, !dbg !6917
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !6918
  %bf.load = load i32, i32* %7, align 8, !dbg !6918
  %bf.clear = and i32 %bf.load, 65535, !dbg !6918
  %cmp12 = icmp eq i32 %bf.clear, 75, !dbg !6919
  br i1 %cmp12, label %lor.end, label %lor.lhs.false, !dbg !6920

lor.lhs.false:                                    ; preds = %cond.end
  %cmp16 = icmp eq i32 %bf.clear, 74, !dbg !6921
  br i1 %cmp16, label %lor.end, label %lor.lhs.false18, !dbg !6922

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i32 %bf.clear, 77, !dbg !6923
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !6924

lor.rhs:                                          ; preds = %lor.lhs.false18
  %cmp25 = icmp eq i32 %bf.clear, 76, !dbg !6925
  %phitmp = zext i1 %cmp25 to i32, !dbg !6924
  br label %lor.end, !dbg !6924

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false18, %lor.lhs.false, %cond.end
  %8 = phi i32 [ 1, %lor.lhs.false18 ], [ 1, %lor.lhs.false ], [ 1, %cond.end ], [ %phitmp, %lor.rhs ]
  %autinc_to = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 2, !dbg !6926
  store i32 %8, i32* %autinc_to, align 8, !dbg !6927
  %explicit_inc_to = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 3, !dbg !6928
  store i32 0, i32* %explicit_inc_to, align 4, !dbg !6929
  %bf.load27 = load i32, i32* %7, align 8, !dbg !6930
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !6930
  %cmp29 = icmp eq i32 %bf.clear28, 74, !dbg !6931
  br i1 %cmp29, label %lor.end36, label %lor.rhs31, !dbg !6932

lor.rhs31:                                        ; preds = %lor.end
  %cmp34 = icmp eq i32 %bf.clear28, 76, !dbg !6933
  %phitmp2 = zext i1 %cmp34 to i32, !dbg !6932
  br label %lor.end36, !dbg !6932

lor.end36:                                        ; preds = %lor.rhs31, %lor.end
  %9 = phi i32 [ 1, %lor.end ], [ %phitmp2, %lor.rhs31 ]
  %reverse = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 8, !dbg !6934
  store i32 %9, i32* %reverse, align 8, !dbg !6935
  %tobool = icmp eq i32 %9, 0, !dbg !6936
  br i1 %tobool, label %if.end, label %if.then, !dbg !6938

if.then:                                          ; preds = %lor.end36
  %len = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 4, !dbg !6939
  %10 = load i64, i64* %len, align 8, !dbg !6939
  store i64 %10, i64* %offset, align 8, !dbg !6940
  br label %if.end, !dbg !6941

if.end:                                           ; preds = %lor.end36, %if.then
  %tobool41 = icmp eq i32 %8, 0, !dbg !6942
  br i1 %tobool41, label %land.lhs.true, label %if.end73, !dbg !6944

land.lhs.true:                                    ; preds = %if.end
  %len42 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 4, !dbg !6945
  %11 = load i64, i64* %len42, align 8, !dbg !6945
  %call43 = tail call fastcc i64 @move_by_pieces_ninsns(i64 %11, i32 %align, i32 5) #8, !dbg !6946
  %cmp44 = icmp ugt i64 %call43, 2, !dbg !6947
  br i1 %cmp44, label %if.then46, label %if.end73, !dbg !6948

if.then46:                                        ; preds = %land.lhs.true
  br label %for.cond, !dbg !6949

for.cond:                                         ; preds = %for.body, %if.then46
  %mode.0 = phi i32 [ 0, %if.then46 ], [ %spec.select, %for.body ], !dbg !6909
  %tmode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %if.then46 ], [ %arrayidx58, %for.body ]
  %tmode.0.in = load i8, i8* %tmode.0.in.in, align 1, !dbg !6952
  call void @llvm.dbg.value(metadata i8 %tmode.0.in, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !6903, metadata !DIExpression()), !dbg !6909
  %cmp48 = icmp eq i8 %tmode.0.in, 0, !dbg !6953
  br i1 %cmp48, label %for.end, label %for.body, !dbg !6955

for.body:                                         ; preds = %for.cond
  %tmode.0 = zext i8 %tmode.0.in to i32, !dbg !6952
  call void @llvm.dbg.value(metadata i32 %tmode.0, metadata !6904, metadata !DIExpression()), !dbg !6909
  %idxprom = zext i8 %tmode.0.in to i64, !dbg !6956
  %arrayidx50 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6956
  %12 = load i8, i8* %arrayidx50, align 1, !dbg !6956
  %cmp53 = icmp ult i8 %12, 5, !dbg !6958
  %spec.select = select i1 %cmp53, i32 %tmode.0, i32 %mode.0, !dbg !6959
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6903, metadata !DIExpression()), !dbg !6909
  %arrayidx58 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !6960
  br label %for.cond, !dbg !6961, !llvm.loop !6962

for.end:                                          ; preds = %for.cond
  %mode.0.lcssa = phi i32 [ %mode.0, %for.cond ], !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !6903, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !6903, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.0.lcssa, metadata !6903, metadata !DIExpression()), !dbg !6909
  %13 = load i32, i32* %autinc_to, align 8, !dbg !6964
  %tobool61 = icmp eq i32 %13, 0, !dbg !6966
  br i1 %tobool61, label %land.lhs.true62, label %if.end73, !dbg !6967

land.lhs.true62:                                  ; preds = %for.end
  %bf.load63 = load i32, i32* %7, align 8, !dbg !6968
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !6968
  %idxprom65 = zext i32 %bf.clear64 to i64, !dbg !6968
  %arrayidx66 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom65, !dbg !6968
  %14 = load i32, i32* %arrayidx66, align 4, !dbg !6968
  %cmp67 = icmp eq i32 %14, 9, !dbg !6968
  br i1 %cmp67, label %if.then69, label %if.end73, !dbg !6969

if.then69:                                        ; preds = %land.lhs.true62
  %call70 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %call, %struct.rtx_def* %6) #6, !dbg !6970
  store %struct.rtx_def* %call70, %struct.rtx_def** %to_addr11, align 8, !dbg !6971
  br label %if.end73, !dbg !6972

if.end73:                                         ; preds = %for.end, %if.end, %land.lhs.true62, %if.then69, %land.lhs.true
  %mode.2 = phi i32 [ 0, %if.end ], [ 0, %land.lhs.true ], [ %mode.0.lcssa, %if.then69 ], [ %mode.0.lcssa, %land.lhs.true62 ], [ %mode.0.lcssa, %for.end ], !dbg !6973
  call void @llvm.dbg.value(metadata i32 %mode.2, metadata !6903, metadata !DIExpression()), !dbg !6909
  %call74 = tail call i32 @mode_for_size(i32 32, i32 2, i32 1) #6, !dbg !6974
  call void @llvm.dbg.value(metadata i32 %call74, metadata !6904, metadata !DIExpression()), !dbg !6909
  %call75 = tail call i32 @get_mode_alignment(i32 %call74) #6, !dbg !6975
  %cmp76 = icmp ugt i32 %call75, %align, !dbg !6976
  br i1 %cmp76, label %if.else, label %if.then78, !dbg !6977

if.then78:                                        ; preds = %if.end73
  %call79 = tail call i32 @get_mode_alignment(i32 %call74) #6, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %call79, metadata !6899, metadata !DIExpression()), !dbg !6909
  br label %if.end106, !dbg !6979

if.else:                                          ; preds = %if.end73
  %15 = load i8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), align 2, !dbg !6980
  %conv80 = zext i8 %15 to i32, !dbg !6980
  call void @llvm.dbg.value(metadata i32 %conv80, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %conv80, metadata !6906, metadata !DIExpression()), !dbg !6982
  br label %for.cond81, !dbg !6983

for.cond81:                                       ; preds = %for.inc93, %if.else
  %tmode.1 = phi i32 [ %conv80, %if.else ], [ %conv96, %for.inc93 ], !dbg !6984
  %xmode.0 = phi i32 [ %conv80, %if.else ], [ %tmode.1, %for.inc93 ], !dbg !6984
  call void @llvm.dbg.value(metadata i32 %xmode.0, metadata !6906, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 %tmode.1, metadata !6904, metadata !DIExpression()), !dbg !6909
  %cmp82 = icmp eq i32 %tmode.1, 0, !dbg !6985
  br i1 %cmp82, label %for.end97, label %for.body84, !dbg !6987

for.body84:                                       ; preds = %for.cond81
  %idxprom85 = zext i32 %tmode.1 to i64, !dbg !6988
  %arrayidx86 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom85, !dbg !6988
  %16 = load i8, i8* %arrayidx86, align 1, !dbg !6988
  %cmp89 = icmp ugt i8 %16, 4, !dbg !6990
  br i1 %cmp89, label %for.end97, label %for.inc93, !dbg !6991

for.inc93:                                        ; preds = %for.body84
  call void @llvm.dbg.value(metadata i32 %tmode.1, metadata !6906, metadata !DIExpression()), !dbg !6982
  %arrayidx95 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom85, !dbg !6992
  %17 = load i8, i8* %arrayidx95, align 1, !dbg !6992
  %conv96 = zext i8 %17 to i32, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %conv96, metadata !6904, metadata !DIExpression()), !dbg !6909
  br label %for.cond81, !dbg !6993, !llvm.loop !6994

for.end97:                                        ; preds = %for.cond81, %for.body84
  %xmode.0.lcssa = phi i32 [ %xmode.0, %for.cond81 ], [ %xmode.0, %for.body84 ], !dbg !6984
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6906, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6906, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6906, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6906, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6906, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i32 %xmode.0.lcssa, metadata !6906, metadata !DIExpression()), !dbg !6982
  %call98 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !6996
  %cmp99 = icmp ult i32 %call98, %align, !dbg !6996
  br i1 %cmp99, label %if.end106, label %cond.false102, !dbg !6996

cond.false102:                                    ; preds = %for.end97
  %call103 = tail call i32 @get_mode_alignment(i32 %xmode.0.lcssa) #6, !dbg !6996
  br label %if.end106, !dbg !6996

if.end106:                                        ; preds = %cond.false102, %for.end97, %if.then78
  %align.addr.0 = phi i32 [ %call79, %if.then78 ], [ %call103, %cond.false102 ], [ %align, %for.end97 ], !dbg !6997
  call void @llvm.dbg.value(metadata i32 %align.addr.0, metadata !6899, metadata !DIExpression()), !dbg !6909
  br label %while.cond, !dbg !6998

while.cond:                                       ; preds = %if.end142, %if.end106
  %max_size.0 = phi i32 [ 5, %if.end106 ], [ %conv146, %if.end142 ], !dbg !6909
  %mode.3 = phi i32 [ %mode.2, %if.end106 ], [ %mode.4.lcssa, %if.end142 ], !dbg !6973
  call void @llvm.dbg.value(metadata i32 %mode.3, metadata !6903, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %max_size.0, metadata !6902, metadata !DIExpression()), !dbg !6909
  %cmp107 = icmp ugt i32 %max_size.0, 1, !dbg !6999
  br i1 %cmp107, label %while.body, label %while.end, !dbg !6998

while.body:                                       ; preds = %while.cond
  br label %for.cond110, !dbg !7000

for.cond110:                                      ; preds = %for.body113, %while.body
  %mode.4 = phi i32 [ %mode.3, %while.body ], [ %spec.select1, %for.body113 ], !dbg !6909
  %tmode.2.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %while.body ], [ %arrayidx124, %for.body113 ]
  %tmode.2.in = load i8, i8* %tmode.2.in.in, align 1, !dbg !7003
  call void @llvm.dbg.value(metadata i8 %tmode.2.in, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.4, metadata !6903, metadata !DIExpression()), !dbg !6909
  %cmp111 = icmp eq i8 %tmode.2.in, 0, !dbg !7004
  br i1 %cmp111, label %for.end126, label %for.body113, !dbg !7006

for.body113:                                      ; preds = %for.cond110
  %tmode.2 = zext i8 %tmode.2.in to i32, !dbg !7003
  call void @llvm.dbg.value(metadata i32 %tmode.2, metadata !6904, metadata !DIExpression()), !dbg !6909
  %idxprom114 = zext i8 %tmode.2.in to i64, !dbg !7007
  %arrayidx115 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom114, !dbg !7007
  %18 = load i8, i8* %arrayidx115, align 1, !dbg !7007
  %conv117 = zext i8 %18 to i32, !dbg !7007
  %cmp118 = icmp ugt i32 %max_size.0, %conv117, !dbg !7009
  %spec.select1 = select i1 %cmp118, i32 %tmode.2, i32 %mode.4, !dbg !7010
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !6903, metadata !DIExpression()), !dbg !6909
  %arrayidx124 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom114, !dbg !7011
  br label %for.cond110, !dbg !7012, !llvm.loop !7013

for.end126:                                       ; preds = %for.cond110
  %mode.4.lcssa = phi i32 [ %mode.4, %for.cond110 ], !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.4.lcssa, metadata !6903, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.4.lcssa, metadata !6903, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata i32 %mode.4.lcssa, metadata !6903, metadata !DIExpression()), !dbg !6909
  %cmp127 = icmp eq i32 %mode.4.lcssa, 0, !dbg !7015
  br i1 %cmp127, label %while.end, label %if.end130, !dbg !7017

if.end130:                                        ; preds = %for.end126
  %idxprom131 = sext i32 %mode.4.lcssa to i64, !dbg !7018
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom131, i32 0, !dbg !7019
  %19 = load i32, i32* %insn_code, align 4, !dbg !7019
  call void @llvm.dbg.value(metadata i32 %19, metadata !6905, metadata !DIExpression()), !dbg !6909
  %cmp133 = icmp eq i32 %19, 2956, !dbg !7020
  br i1 %cmp133, label %if.end142, label %land.lhs.true135, !dbg !7022

land.lhs.true135:                                 ; preds = %if.end130
  %call136 = tail call i32 @get_mode_alignment(i32 %mode.4.lcssa) #6, !dbg !7023
  %cmp137 = icmp ult i32 %align.addr.0, %call136, !dbg !7024
  br i1 %cmp137, label %if.end142, label %if.then139, !dbg !7025

if.then139:                                       ; preds = %land.lhs.true135
  %idxprom140 = zext i32 %19 to i64, !dbg !7026
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom140, i32 2, !dbg !7026
  %20 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7026
  tail call fastcc void @store_by_pieces_2(%struct.rtx_def* (%struct.rtx_def*, ...)* %20, i32 %mode.4.lcssa, %struct.store_by_pieces_d* %data) #8, !dbg !7027
  br label %if.end142, !dbg !7027

if.end142:                                        ; preds = %land.lhs.true135, %if.end130, %if.then139
  %idxprom143 = zext i32 %mode.4.lcssa to i64, !dbg !7028
  %arrayidx144 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom143, !dbg !7028
  %21 = load i8, i8* %arrayidx144, align 1, !dbg !7028
  %conv146 = zext i8 %21 to i32, !dbg !7028
  call void @llvm.dbg.value(metadata i32 %conv146, metadata !6902, metadata !DIExpression()), !dbg !6909
  br label %while.cond, !dbg !6998, !llvm.loop !7029

while.end:                                        ; preds = %for.end126, %while.cond
  %len147 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 4, !dbg !7031
  %22 = load i64, i64* %len147, align 8, !dbg !7031
  %tobool148 = icmp eq i64 %22, 0, !dbg !7031
  br i1 %tobool148, label %cond.end151, label %cond.true149, !dbg !7031

cond.true149:                                     ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2578, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7031
  br label %cond.end151, !dbg !7031

cond.end151:                                      ; preds = %while.end, %cond.true149
  ret void, !dbg !7032
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @clear_storage_hints(%struct.rtx_def* %object, %struct.rtx_def* %size, i32 %method, i32 %expected_align, i64 %expected_size) local_unnamed_addr #4 !dbg !7033 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !7037, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7038, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i32 %method, metadata !7039, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i32 %expected_align, metadata !7040, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i64 %expected_size, metadata !7041, metadata !DIExpression()), !dbg !7047
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %object, i64 0, i32 0, !dbg !7048
  %bf.load = load i32, i32* %0, align 8, !dbg !7048
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7048
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7048
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7042, metadata !DIExpression()), !dbg !7047
  switch i32 %method, label %cond.true [
    i32 0, label %cond.end
    i32 3, label %cond.end
  ], !dbg !7049

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2630, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7049
  br label %cond.end, !dbg !7049

cond.end:                                         ; preds = %entry, %entry, %cond.true
  %cmp2 = icmp eq i32 %bf.clear, 1, !dbg !7050
  br i1 %cmp2, label %if.end38, label %land.lhs.true, !dbg !7051

land.lhs.true:                                    ; preds = %cond.end
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !7052
  %bf.load3 = load i32, i32* %1, align 8, !dbg !7052
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !7052
  %cmp5 = icmp eq i32 %bf.clear4, 30, !dbg !7052
  br i1 %cmp5, label %land.lhs.true6, label %if.end38, !dbg !7053

land.lhs.true6:                                   ; preds = %land.lhs.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !7054
  %arrayidx = bitcast %union.u* %u to i64*, !dbg !7054
  %2 = load i64, i64* %arrayidx, align 8, !dbg !7054
  %idxprom = zext i32 %bf.clear to i64, !dbg !7055
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7055
  %3 = load i8, i8* %arrayidx7, align 1, !dbg !7055
  %conv8 = zext i8 %3 to i64, !dbg !7056
  %cmp9 = icmp eq i64 %2, %conv8, !dbg !7057
  br i1 %cmp9, label %if.then, label %if.end38, !dbg !7058

if.then:                                          ; preds = %land.lhs.true6
  %arrayidx12 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !7059
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8, !dbg !7059
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !7044, metadata !DIExpression()), !dbg !7060
  %cmp13 = icmp eq %struct.rtx_def* %4, null, !dbg !7061
  br i1 %cmp13, label %if.end, label %if.then15, !dbg !7063

if.then15:                                        ; preds = %if.then
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %object, %struct.rtx_def* nonnull %4) #8, !dbg !7064
  br label %cleanup, !dbg !7066

if.end:                                           ; preds = %if.then
  %arrayidx17 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7067
  %5 = load i8, i8* %arrayidx17, align 1, !dbg !7067
  %cmp19 = icmp eq i8 %5, 10, !dbg !7067
  br i1 %cmp19, label %if.then27, label %lor.lhs.false21, !dbg !7067

lor.lhs.false21:                                  ; preds = %if.end
  %cmp25 = icmp eq i8 %5, 11, !dbg !7067
  br i1 %cmp25, label %if.then27, label %cleanup, !dbg !7069

if.then27:                                        ; preds = %lor.lhs.false21, %if.end
  %arrayidx29 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !7070
  %6 = load i8, i8* %arrayidx29, align 1, !dbg !7070
  %idxprom31 = zext i8 %6 to i64, !dbg !7070
  %arrayidx32 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom31, !dbg !7070
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !7070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !7044, metadata !DIExpression()), !dbg !7060
  %cmp33 = icmp eq %struct.rtx_def* %7, null, !dbg !7072
  br i1 %cmp33, label %cleanup, label %if.then35, !dbg !7074

if.then35:                                        ; preds = %if.then27
  tail call fastcc void @write_complex_part(%struct.rtx_def* %object, %struct.rtx_def* nonnull %7, i8 zeroext 0) #8, !dbg !7075
  tail call fastcc void @write_complex_part(%struct.rtx_def* %object, %struct.rtx_def* nonnull %7, i8 zeroext 1) #8, !dbg !7077
  br label %cleanup, !dbg !7078

cleanup:                                          ; preds = %if.then27, %lor.lhs.false21, %if.then35, %if.then15
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then15 ], [ false, %if.then35 ], [ true, %if.then27 ], [ true, %lor.lhs.false21 ]
  br i1 %cleanup.dest.slot.0, label %if.end38, label %cleanup115

if.end38:                                         ; preds = %cond.end, %cleanup, %land.lhs.true6, %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7079
  %cmp39 = icmp eq %struct.rtx_def* %8, %size, !dbg !7081
  br i1 %cmp39, label %cleanup115, label %if.end42, !dbg !7082

if.end42:                                         ; preds = %if.end38
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %object, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7083
  %rt_mem = bitcast %union.rtunion_def* %9 to %struct.mem_attrs**, !dbg !7083
  %10 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !7083
  %cmp45 = icmp eq %struct.mem_attrs* %10, null, !dbg !7083
  br i1 %cmp45, label %cond.end54, label %cond.true47, !dbg !7083

cond.true47:                                      ; preds = %if.end42
  %align52 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i64 0, i32 4, !dbg !7083
  %11 = load i32, i32* %align52, align 4, !dbg !7083
  br label %cond.end54, !dbg !7083

cond.end54:                                       ; preds = %if.end42, %cond.true47
  %cond55 = phi i32 [ %11, %cond.true47 ], [ 8, %if.end42 ], !dbg !7083
  call void @llvm.dbg.value(metadata i32 %cond55, metadata !7043, metadata !DIExpression()), !dbg !7047
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !7084
  %bf.load56 = load i32, i32* %12, align 8, !dbg !7084
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !7084
  %cmp58 = icmp eq i32 %bf.clear57, 30, !dbg !7084
  br i1 %cmp58, label %land.lhs.true60, label %if.else, !dbg !7086

land.lhs.true60:                                  ; preds = %cond.end54
  %u61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !7087
  %arrayidx63 = bitcast %union.u* %u61 to i64*, !dbg !7087
  %13 = load i64, i64* %arrayidx63, align 8, !dbg !7087
  %call64 = tail call fastcc i64 @move_by_pieces_ninsns(i64 %13, i32 %cond55, i32 5) #8, !dbg !7087
  %call65 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !7087
  %tobool = icmp eq i8 %call65, 0, !dbg !7087
  br i1 %tobool, label %cond.end76, label %cond.true67, !dbg !7087

cond.true67:                                      ; preds = %land.lhs.true60
  %14 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !7087
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %14, i64 0, i32 10, !dbg !7087
  %15 = load i32, i32* %move_ratio, align 4, !dbg !7087
  %cmp68 = icmp sgt i32 %15, 6, !dbg !7087
  br i1 %cmp68, label %cond.end76, label %cond.false71, !dbg !7087

cond.false71:                                     ; preds = %cond.true67
  %phitmp2 = zext i32 %15 to i64, !dbg !7087
  br label %cond.end76, !dbg !7087

cond.end76:                                       ; preds = %land.lhs.true60, %cond.false71, %cond.true67
  %cond77 = phi i64 [ %phitmp2, %cond.false71 ], [ 6, %cond.true67 ], [ 2, %land.lhs.true60 ]
  %cmp79 = icmp ult i64 %call64, %cond77, !dbg !7087
  br i1 %cmp79, label %if.then81, label %cond.end76.if.else_crit_edge, !dbg !7088

cond.end76.if.else_crit_edge:                     ; preds = %cond.end76
  %.pre = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7089
  br label %if.else, !dbg !7088

if.then81:                                        ; preds = %cond.end76
  %16 = load i64, i64* %arrayidx63, align 8, !dbg !7091
  tail call fastcc void @clear_by_pieces(%struct.rtx_def* %object, i64 %16, i32 %cond55) #8, !dbg !7092
  br label %cleanup115, !dbg !7092

if.else:                                          ; preds = %cond.end76.if.else_crit_edge, %cond.end54
  %17 = phi %struct.rtx_def* [ %.pre, %cond.end76.if.else_crit_edge ], [ %8, %cond.end54 ], !dbg !7089
  %call85 = tail call zeroext i8 @set_storage_via_setmem(%struct.rtx_def* %object, %struct.rtx_def* %size, %struct.rtx_def* %17, i32 %cond55, i32 %expected_align, i64 %expected_size) #8, !dbg !7093
  %tobool86 = icmp eq i8 %call85, 0, !dbg !7093
  br i1 %tobool86, label %if.else88, label %cleanup115, !dbg !7094

if.else88:                                        ; preds = %if.else
  %18 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !7095
  %cmp93 = icmp eq %struct.mem_attrs* %18, null, !dbg !7095
  br i1 %cmp93, label %cond.end102, label %cond.false96, !dbg !7095

cond.false96:                                     ; preds = %if.else88
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %18, i64 0, i32 5, !dbg !7095
  %19 = load i8, i8* %addrspace, align 8, !dbg !7095
  %phitmp = icmp eq i8 %19, 0, !dbg !7095
  br label %cond.end102, !dbg !7095

cond.end102:                                      ; preds = %if.else88, %cond.false96
  %cond103 = phi i1 [ %phitmp, %cond.false96 ], [ true, %if.else88 ]
  br i1 %cond103, label %if.then106, label %if.else111, !dbg !7097

if.then106:                                       ; preds = %cond.end102
  %20 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7098
  %cmp107 = icmp eq i32 %method, 3, !dbg !7099
  %conv109 = zext i1 %cmp107 to i8, !dbg !7100
  %call110 = tail call %struct.rtx_def* @set_storage_via_libcall(%struct.rtx_def* %object, %struct.rtx_def* %size, %struct.rtx_def* %20, i8 zeroext %conv109) #8, !dbg !7101
  br label %cleanup115, !dbg !7102

if.else111:                                       ; preds = %cond.end102
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2672, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7103
  br label %cleanup115

cleanup115:                                       ; preds = %if.else, %if.then81, %if.else111, %if.end38, %cleanup, %if.then106
  %retval.1 = phi %struct.rtx_def* [ null, %cleanup ], [ %call110, %if.then106 ], [ null, %if.end38 ], [ null, %if.else111 ], [ null, %if.else ], [ null, %if.then81 ], !dbg !7047
  ret %struct.rtx_def* %retval.1, !dbg !7104
}

; Function Attrs: nounwind uwtable
define internal fastcc void @write_complex_part(%struct.rtx_def* %cplx, %struct.rtx_def* %val, i8 zeroext %imag_p) unnamed_addr #4 !dbg !7105 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cplx, metadata !7109, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !7110, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i8 %imag_p, metadata !7111, metadata !DIExpression()), !dbg !7118
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cplx, i64 0, i32 0, !dbg !7119
  %bf.load = load i32, i32* %0, align 8, !dbg !7119
  %bf.clear = and i32 %bf.load, 65535, !dbg !7119
  %cmp = icmp eq i32 %bf.clear, 41, !dbg !7121
  br i1 %cmp, label %if.then, label %if.end, !dbg !7122

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cplx, i64 0, i32 1, !dbg !7123
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7123
  %idxprom = zext i8 %imag_p to i64, !dbg !7123
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom, !dbg !7123
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7123
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7123
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %1, %struct.rtx_def* %val) #8, !dbg !7125
  br label %cleanup.cont83, !dbg !7126

if.end:                                           ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7127
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !7127
  call void @llvm.dbg.value(metadata i32 %bf.clear2, metadata !7112, metadata !DIExpression()), !dbg !7118
  %idxprom3 = zext i32 %bf.clear2 to i64, !dbg !7128
  %arrayidx4 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom3, !dbg !7128
  %2 = load i8, i8* %arrayidx4, align 1, !dbg !7128
  %conv = zext i8 %2 to i32, !dbg !7128
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7113, metadata !DIExpression()), !dbg !7118
  %idxprom5 = zext i8 %2 to i64, !dbg !7129
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5, !dbg !7129
  %3 = load i8, i8* %arrayidx6, align 1, !dbg !7129
  %conv8 = zext i8 %3 to i64, !dbg !7129
  %mul = shl nuw nsw i64 %conv8, 3, !dbg !7129
  call void @llvm.dbg.value(metadata i8 %3, metadata !7114, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !7118
  %cmp13 = icmp eq i32 %bf.clear, 43, !dbg !7130
  br i1 %cmp13, label %if.then15, label %if.end24, !dbg !7132

if.then15:                                        ; preds = %if.end
  %tobool = icmp eq i8 %imag_p, 0, !dbg !7133
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7133

cond.true:                                        ; preds = %if.then15
  %phitmp = zext i8 %3 to i64, !dbg !7133
  br label %cond.end, !dbg !7133

cond.end:                                         ; preds = %if.then15, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %if.then15 ]
  %call22 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %cplx, i32 %conv, i64 %cond, i32 0, i32 1) #6, !dbg !7133
  %call23 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call22, %struct.rtx_def* %val) #8, !dbg !7135
  br label %cleanup.cont83, !dbg !7136

if.end24:                                         ; preds = %if.end
  %cmp25 = icmp ugt i8 %3, 3, !dbg !7137
  br i1 %cmp25, label %if.then43, label %lor.lhs.false, !dbg !7138

lor.lhs.false:                                    ; preds = %if.end24
  %cmp29 = icmp eq i32 %bf.clear, 37, !dbg !7139
  br i1 %cmp29, label %land.lhs.true, label %if.end70, !dbg !7140

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call31 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cplx) #8, !dbg !7141
  %cmp32 = icmp ult i32 %call31, 53, !dbg !7142
  br i1 %cmp32, label %land.lhs.true34, label %if.end70, !dbg !7143

land.lhs.true34:                                  ; preds = %land.lhs.true
  %call35 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cplx) #8, !dbg !7144
  %idxprom36 = zext i32 %call35 to i64, !dbg !7145
  %arrayidx39 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom36, i64 %idxprom3, !dbg !7145
  %4 = load i8, i8* %arrayidx39, align 1, !dbg !7145
  %5 = and i8 %4, 1, !dbg !7146
  %cmp41 = icmp eq i8 %5, 0, !dbg !7147
  br i1 %cmp41, label %if.then43, label %if.end70, !dbg !7148

if.then43:                                        ; preds = %land.lhs.true34, %if.end24
  %tobool45 = icmp eq i8 %imag_p, 0, !dbg !7149
  br i1 %tobool45, label %cond.end52, label %cond.true46, !dbg !7149

cond.true46:                                      ; preds = %if.then43
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !7150
  %conv50 = zext i8 %6 to i32, !dbg !7150
  br label %cond.end52, !dbg !7149

cond.end52:                                       ; preds = %if.then43, %cond.true46
  %cond53 = phi i32 [ %conv50, %cond.true46 ], [ 0, %if.then43 ], !dbg !7149
  %call54 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %conv, %struct.rtx_def* %cplx, i32 %bf.clear2, i32 %cond53) #6, !dbg !7151
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !7115, metadata !DIExpression()), !dbg !7152
  %tobool55 = icmp eq %struct.rtx_def* %call54, null, !dbg !7153
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !7155

if.then56:                                        ; preds = %cond.end52
  %call57 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %call54, %struct.rtx_def* %val) #8, !dbg !7156
  br label %cleanup, !dbg !7158

if.else:                                          ; preds = %cond.end52
  %bf.load58 = load i32, i32* %0, align 8, !dbg !7159
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !7159
  %cmp60 = icmp eq i32 %bf.clear59, 43, !dbg !7159
  %cmp63 = icmp ult i8 %3, 4, !dbg !7159
  %or.cond = and i1 %cmp60, %cmp63, !dbg !7159
  br i1 %or.cond, label %cleanup, label %cond.true65, !dbg !7159

cond.true65:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2907, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7159
  br label %cleanup, !dbg !7159

cleanup:                                          ; preds = %if.else, %cond.true65, %if.then56
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then56 ], [ true, %cond.true65 ], [ true, %if.else ]
  br i1 %cleanup.dest.slot.0, label %if.end70, label %cleanup.cont83

if.end70:                                         ; preds = %cleanup, %land.lhs.true34, %land.lhs.true, %lor.lhs.false
  %tobool73 = icmp eq i8 %imag_p, 0, !dbg !7160
  %conv78 = select i1 %tobool73, i64 0, i64 %mul, !dbg !7160
  tail call void @store_bit_field(%struct.rtx_def* %cplx, i64 %mul, i64 %conv78, i32 %conv, %struct.rtx_def* %val) #6, !dbg !7161
  br label %cleanup.cont83, !dbg !7162

cleanup.cont83:                                   ; preds = %if.then, %cond.end, %if.end70, %cleanup
  ret void, !dbg !7162
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_by_pieces(%struct.rtx_def* %to, i64 %len, i32 %align) unnamed_addr #4 !dbg !7163 {
entry:
  %data = alloca %struct.store_by_pieces_d, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !7167, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.value(metadata i64 %len, metadata !7168, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.value(metadata i32 %align, metadata !7169, metadata !DIExpression()), !dbg !7171
  %0 = bitcast %struct.store_by_pieces_d* %data to i8*, !dbg !7172
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !7172
  %cmp = icmp eq i64 %len, 0, !dbg !7173
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7175

if.end:                                           ; preds = %entry
  %constfun = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 6, !dbg !7176
  store %struct.rtx_def* (i8*, i64, i32)* @clear_by_pieces_1, %struct.rtx_def* (i8*, i64, i32)** %constfun, align 8, !dbg !7177
  %constfundata = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 7, !dbg !7178
  store i8* null, i8** %constfundata, align 8, !dbg !7179
  %len1 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 4, !dbg !7180
  store i64 %len, i64* %len1, align 8, !dbg !7181
  %to2 = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 0, !dbg !7182
  store %struct.rtx_def* %to, %struct.rtx_def** %to2, align 8, !dbg !7183
  call void @llvm.dbg.value(metadata %struct.store_by_pieces_d* %data, metadata !7170, metadata !DIExpression(DW_OP_deref)), !dbg !7171
  call fastcc void @store_by_pieces_1(%struct.store_by_pieces_d* nonnull %data, i32 %align) #8, !dbg !7184
  br label %cleanup, !dbg !7185

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !7185
  ret void, !dbg !7185
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @set_storage_via_setmem(%struct.rtx_def* %object, %struct.rtx_def* %size, %struct.rtx_def* %val, i32 %align, i32 %expected_align, i64 %expected_size) local_unnamed_addr #4 !dbg !7186 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !7188, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7189, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !7190, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i32 %align, metadata !7191, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i32 %expected_align, metadata !7192, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i64 %expected_size, metadata !7193, metadata !DIExpression()), !dbg !7208
  %div = lshr i32 %align, 3, !dbg !7209
  %conv = zext i32 %div to i64, !dbg !7209
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !7209
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7194, metadata !DIExpression()), !dbg !7208
  %cmp = icmp ult i32 %expected_align, %align, !dbg !7210
  %spec.select = select i1 %cmp, i32 %align, i32 %expected_align, !dbg !7212
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7192, metadata !DIExpression()), !dbg !7208
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !7213
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !7213
  %arrayidx10 = bitcast %union.u* %u to i64*, !dbg !7213
  %div94 = lshr i32 %spec.select, 3, !dbg !7214
  %conv95 = zext i32 %div94 to i64, !dbg !7214
  br label %for.cond, !dbg !7216

for.cond:                                         ; preds = %for.inc, %entry
  %mode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %entry ], [ %arrayidx115, %for.inc ]
  %mode.0.in = load i8, i8* %mode.0.in.in, align 1, !dbg !7217
  %mode.0 = zext i8 %mode.0.in to i32, !dbg !7217
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !7195, metadata !DIExpression()), !dbg !7208
  %cmp3 = icmp eq i8 %mode.0.in, 0, !dbg !7218
  br i1 %cmp3, label %cleanup117, label %for.body, !dbg !7219

for.body:                                         ; preds = %for.cond
  %idxprom = zext i8 %mode.0.in to i64, !dbg !7220
  %arrayidx = getelementptr inbounds [87 x i32], [87 x i32]* @setmem_optab, i64 0, i64 %idxprom, !dbg !7220
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7220
  call void @llvm.dbg.value(metadata i32 %1, metadata !7196, metadata !DIExpression()), !dbg !7221
  %cmp5 = icmp eq i32 %1, 2956, !dbg !7222
  br i1 %cmp5, label %if.end109, label %land.lhs.true, !dbg !7223

land.lhs.true:                                    ; preds = %for.body
  %bf.load = load i32, i32* %0, align 8, !dbg !7224
  %bf.clear = and i32 %bf.load, 65535, !dbg !7224
  %cmp7 = icmp eq i32 %bf.clear, 30, !dbg !7224
  br i1 %cmp7, label %land.lhs.true9, label %lor.lhs.false, !dbg !7225

land.lhs.true9:                                   ; preds = %land.lhs.true
  %2 = load i64, i64* %arrayidx10, align 8, !dbg !7226
  %arrayidx12 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !7227
  %3 = load i64, i64* %arrayidx12, align 8, !dbg !7227
  %shr = lshr i64 %3, 1, !dbg !7228
  %cmp13 = icmp ugt i64 %2, %shr, !dbg !7229
  br i1 %cmp13, label %lor.lhs.false, label %land.lhs.true23, !dbg !7230

lor.lhs.false:                                    ; preds = %land.lhs.true9, %land.lhs.true
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7231
  %4 = load i8, i8* %arrayidx16, align 1, !dbg !7231
  %cmp21 = icmp ugt i8 %4, 3, !dbg !7232
  br i1 %cmp21, label %land.lhs.true23, label %if.end109, !dbg !7233

land.lhs.true23:                                  ; preds = %land.lhs.true9, %lor.lhs.false
  %idxprom24 = sext i32 %1 to i64, !dbg !7234
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom24, i32 3, !dbg !7235
  %5 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7235
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 0, i32 0, !dbg !7236
  %6 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7236
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %6, metadata !7200, metadata !DIExpression()), !dbg !7221
  %cmp27 = icmp eq i32 (%struct.rtx_def*, i32)* %6, null, !dbg !7237
  br i1 %cmp27, label %land.lhs.true31, label %lor.lhs.false29, !dbg !7238

lor.lhs.false29:                                  ; preds = %land.lhs.true23
  %call30 = tail call i32 %6(%struct.rtx_def* %object, i32 1) #6, !dbg !7239
  %tobool = icmp eq i32 %call30, 0, !dbg !7239
  br i1 %tobool, label %if.end109, label %land.lhs.true31, !dbg !7240

land.lhs.true31:                                  ; preds = %lor.lhs.false29, %land.lhs.true23
  %predicate36 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 3, i32 0, !dbg !7241
  %7 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate36, align 8, !dbg !7241
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %7, metadata !7200, metadata !DIExpression()), !dbg !7221
  %cmp37 = icmp eq i32 (%struct.rtx_def*, i32)* %7, null, !dbg !7242
  br i1 %cmp37, label %if.then42, label %lor.lhs.false39, !dbg !7243

lor.lhs.false39:                                  ; preds = %land.lhs.true31
  %call40 = tail call i32 %7(%struct.rtx_def* %call, i32 0) #6, !dbg !7244
  %tobool41 = icmp eq i32 %call40, 0, !dbg !7244
  br i1 %tobool41, label %if.end109, label %if.then42, !dbg !7245

if.then42:                                        ; preds = %lor.lhs.false39, %land.lhs.true31
  %call43 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7246
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !7206, metadata !DIExpression()), !dbg !7247
  %call44 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode.0, %struct.rtx_def* %size, i32 1) #8, !dbg !7248
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !7201, metadata !DIExpression()), !dbg !7247
  %predicate49 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 1, i32 0, !dbg !7249
  %8 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate49, align 8, !dbg !7249
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %8, metadata !7200, metadata !DIExpression()), !dbg !7221
  %cmp50 = icmp eq i32 (%struct.rtx_def*, i32)* %8, null, !dbg !7250
  br i1 %cmp50, label %if.end57, label %land.lhs.true52, !dbg !7252

land.lhs.true52:                                  ; preds = %if.then42
  %call53 = tail call i32 %8(%struct.rtx_def* %call44, i32 %mode.0) #6, !dbg !7253
  %tobool54 = icmp eq i32 %call53, 0, !dbg !7253
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !7254

if.then55:                                        ; preds = %land.lhs.true52
  %call56 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.0, %struct.rtx_def* %call44) #6, !dbg !7255
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !7201, metadata !DIExpression()), !dbg !7247
  br label %if.end57, !dbg !7256

if.end57:                                         ; preds = %land.lhs.true52, %if.then42, %if.then55
  %opsize.0 = phi %struct.rtx_def* [ %call44, %land.lhs.true52 ], [ %call56, %if.then55 ], [ %call44, %if.then42 ], !dbg !7247
  call void @llvm.dbg.value(metadata %struct.rtx_def* %opsize.0, metadata !7201, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !7204, metadata !DIExpression()), !dbg !7247
  %mode62 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 2, i32 2, !dbg !7257
  %bf.load63 = load i16, i16* %mode62, align 8, !dbg !7257
  %bf.cast = zext i16 %bf.load63 to i32, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7205, metadata !DIExpression()), !dbg !7247
  %cmp64 = icmp eq i16 %bf.load63, 0, !dbg !7258
  br i1 %cmp64, label %if.end81, label %if.then66, !dbg !7260

if.then66:                                        ; preds = %if.end57
  %call67 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.cast, %struct.rtx_def* %val, i32 1) #8, !dbg !7261
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call67, metadata !7204, metadata !DIExpression()), !dbg !7247
  %predicate72 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 2, i32 0, !dbg !7263
  %9 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate72, align 8, !dbg !7263
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %9, metadata !7200, metadata !DIExpression()), !dbg !7221
  %cmp73 = icmp eq i32 (%struct.rtx_def*, i32)* %9, null, !dbg !7264
  br i1 %cmp73, label %if.end81, label %land.lhs.true75, !dbg !7266

land.lhs.true75:                                  ; preds = %if.then66
  %call76 = tail call i32 %9(%struct.rtx_def* %call67, i32 %bf.cast) #6, !dbg !7267
  %tobool77 = icmp eq i32 %call76, 0, !dbg !7267
  br i1 %tobool77, label %if.then78, label %if.end81, !dbg !7268

if.then78:                                        ; preds = %land.lhs.true75
  %call79 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast, %struct.rtx_def* %call67) #6, !dbg !7269
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !7204, metadata !DIExpression()), !dbg !7247
  br label %if.end81, !dbg !7270

if.end81:                                         ; preds = %land.lhs.true75, %if.then66, %if.end57, %if.then78
  %opchar.1 = phi %struct.rtx_def* [ %val, %if.end57 ], [ %call67, %land.lhs.true75 ], [ %call79, %if.then78 ], [ %call67, %if.then66 ], !dbg !7247
  call void @llvm.dbg.value(metadata %struct.rtx_def* %opchar.1, metadata !7204, metadata !DIExpression()), !dbg !7247
  %n_operands = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom24, i32 4, !dbg !7271
  %10 = load i8, i8* %n_operands, align 8, !dbg !7271
  %cmp85 = icmp eq i8 %10, 4, !dbg !7272
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom24, i32 2, !dbg !7214
  %11 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7214
  br i1 %cmp85, label %if.then87, label %if.else, !dbg !7273

if.then87:                                        ; preds = %if.end81
  %call90 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %11(%struct.rtx_def* %object, %struct.rtx_def* %opsize.0, %struct.rtx_def* %opchar.1, %struct.rtx_def* %call) #6, !dbg !7274
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call90, metadata !7207, metadata !DIExpression()), !dbg !7247
  br label %if.end99, !dbg !7275

if.else:                                          ; preds = %if.end81
  %call96 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv95) #6, !dbg !7276
  %call97 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %expected_size) #6, !dbg !7277
  %call98 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %11(%struct.rtx_def* %object, %struct.rtx_def* %opsize.0, %struct.rtx_def* %opchar.1, %struct.rtx_def* %call, %struct.rtx_def* %call96, %struct.rtx_def* %call97) #6, !dbg !7278
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call98, metadata !7207, metadata !DIExpression()), !dbg !7247
  br label %if.end99

if.end99:                                         ; preds = %if.else, %if.then87
  %pat.0 = phi %struct.rtx_def* [ %call90, %if.then87 ], [ %call98, %if.else ], !dbg !7214
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat.0, metadata !7207, metadata !DIExpression()), !dbg !7247
  %tobool100 = icmp eq %struct.rtx_def* %pat.0, null, !dbg !7279
  br i1 %tobool100, label %if.else103, label %if.then101, !dbg !7281

if.then101:                                       ; preds = %if.end99
  %call102 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %pat.0) #6, !dbg !7282
  br label %cleanup, !dbg !7284

if.else103:                                       ; preds = %if.end99
  tail call void @delete_insns_since(%struct.rtx_def* %call43) #6, !dbg !7285
  br label %cleanup, !dbg !7286

cleanup:                                          ; preds = %if.else103, %if.then101
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then101 ], [ 0, %if.else103 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end109, label %cleanup110

if.end109:                                        ; preds = %lor.lhs.false39, %lor.lhs.false29, %for.body, %cleanup, %lor.lhs.false
  br label %cleanup110, !dbg !7287

cleanup110:                                       ; preds = %cleanup, %if.end109
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end109 ]
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %for.inc, label %cleanup117

for.inc:                                          ; preds = %cleanup110
  %arrayidx115 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom, !dbg !7288
  br label %for.cond, !dbg !7289, !llvm.loop !7290

cleanup117:                                       ; preds = %for.cond, %cleanup110
  %retval.4 = phi i8 [ 1, %cleanup110 ], [ 0, %for.cond ], !dbg !7208
  ret i8 %retval.4, !dbg !7292
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @set_storage_via_libcall(%struct.rtx_def* %object, %struct.rtx_def* %size, %struct.rtx_def* %val, i8 zeroext %tailcall) local_unnamed_addr #4 !dbg !7293 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !7295, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7296, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !7297, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i8 %tailcall, metadata !7298, metadata !DIExpression()), !dbg !7306
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %object, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7307
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7307
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7307
  %call = tail call %struct.rtx_def* @copy_to_mode_reg(i32 16, %struct.rtx_def* %0) #6, !dbg !7308
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7295, metadata !DIExpression()), !dbg !7306
  %1 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !7309
  %bf.load = load i64, i64* %1, align 8, !dbg !7309
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7309
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !7309
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7309

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !7309
  %call2 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !7309
  br label %cond.end, !dbg !7309

cond.false:                                       ; preds = %entry
  %type = bitcast i64* %1 to %struct.tree_type*, !dbg !7309
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !7309
  %bf.load3 = load i32, i32* %mode, align 4, !dbg !7309
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !7309
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !7309
  br label %cond.end, !dbg !7309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ %bf.clear4, %cond.false ], !dbg !7309
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7304, metadata !DIExpression()), !dbg !7306
  %call5 = tail call %struct.rtx_def* @convert_to_mode(i32 %cond, %struct.rtx_def* %size, i32 1) #8, !dbg !7310
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !7296, metadata !DIExpression()), !dbg !7306
  %call6 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %cond, %struct.rtx_def* %call5) #6, !dbg !7311
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !7296, metadata !DIExpression()), !dbg !7306
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !7312
  %call7 = tail call %union.tree_node* @make_tree(%union.tree_node* %2, %struct.rtx_def* %call) #6, !dbg !7313
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !7301, metadata !DIExpression()), !dbg !7306
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %val, i64 0, i32 0, !dbg !7314
  %bf.load8 = load i32, i32* %3, align 8, !dbg !7314
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !7314
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !7314
  br i1 %cmp10, label %if.end, label %if.then, !dbg !7316

if.then:                                          ; preds = %cond.end
  %4 = load i64*, i64** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to i64**), align 8, !dbg !7317
  %bf.load12 = load i64, i64* %4, align 8, !dbg !7317
  %bf.cast142 = and i64 %bf.load12, 65535, !dbg !7317
  %cmp15 = icmp eq i64 %bf.cast142, 14, !dbg !7317
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !7317

cond.true16:                                      ; preds = %if.then
  %.cast3 = bitcast i64* %4 to %union.tree_node*, !dbg !7317
  %call17 = tail call i32 @vector_type_mode(%union.tree_node* %.cast3) #6, !dbg !7317
  br label %cond.end24, !dbg !7317

cond.false18:                                     ; preds = %if.then
  %type19 = bitcast i64* %4 to %struct.tree_type*, !dbg !7317
  %mode20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i64 0, i32 6, !dbg !7317
  %bf.load21 = load i32, i32* %mode20, align 4, !dbg !7317
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !7317
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !7317
  br label %cond.end24, !dbg !7317

cond.end24:                                       ; preds = %cond.false18, %cond.true16
  %cond25 = phi i32 [ %call17, %cond.true16 ], [ %bf.clear23, %cond.false18 ], !dbg !7317
  %call26 = tail call %struct.rtx_def* @convert_to_mode(i32 %cond25, %struct.rtx_def* %val, i32 1) #8, !dbg !7318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call26, metadata !7297, metadata !DIExpression()), !dbg !7306
  br label %if.end, !dbg !7319

if.end:                                           ; preds = %cond.end24, %cond.end
  %val.addr.0 = phi %struct.rtx_def* [ %val, %cond.end ], [ %call26, %cond.end24 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.0, metadata !7297, metadata !DIExpression()), !dbg !7306
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !7320
  %call27 = tail call %union.tree_node* @make_tree(%union.tree_node* %5, %struct.rtx_def* %call6) #6, !dbg !7321
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !7302, metadata !DIExpression()), !dbg !7306
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !7322
  %call28 = tail call %union.tree_node* @make_tree(%union.tree_node* %6, %struct.rtx_def* %val.addr.0) #6, !dbg !7323
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !7303, metadata !DIExpression()), !dbg !7306
  %call29 = tail call fastcc %union.tree_node* @clear_storage_libcall_fn(i32 1) #8, !dbg !7324
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !7300, metadata !DIExpression()), !dbg !7306
  %call30 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %call29, i32 3, %union.tree_node* %call7, %union.tree_node* %call28, %union.tree_node* %call27) #6, !dbg !7325
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !7299, metadata !DIExpression()), !dbg !7306
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7326
  %bf.load32 = load i64, i64* %7, align 8, !dbg !7327
  %8 = and i8 %tailcall, 1, !dbg !7327
  %bf.value = zext i8 %8 to i64, !dbg !7327
  %bf.shl = shl nuw nsw i64 %bf.value, 18, !dbg !7327
  %bf.clear33 = and i64 %bf.load32, -262145, !dbg !7327
  %bf.set = or i64 %bf.clear33, %bf.shl, !dbg !7327
  store i64 %bf.set, i64* %7, align 8, !dbg !7327
  %call34 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call30) #8, !dbg !7328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !7305, metadata !DIExpression()), !dbg !7306
  ret %struct.rtx_def* %call34, !dbg !7329
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @clear_storage(%struct.rtx_def* %object, %struct.rtx_def* %size, i32 %method) local_unnamed_addr #4 !dbg !7330 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %object, metadata !7334, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7335, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata i32 %method, metadata !7336, metadata !DIExpression()), !dbg !7337
  %call = tail call %struct.rtx_def* @clear_storage_hints(%struct.rtx_def* %object, %struct.rtx_def* %size, i32 %method, i32 0, i64 -1) #8, !dbg !7338
  ret %struct.rtx_def* %call, !dbg !7339
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @clear_storage_libcall_fn(i32 %for_call) unnamed_addr #4 !dbg !3705 {
entry:
  call void @llvm.dbg.value(metadata i32 1, metadata !3707, metadata !DIExpression()), !dbg !7340
  %0 = load %union.tree_node*, %union.tree_node** @block_clear_fn, align 8, !dbg !7341
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !7341
  br i1 %tobool, label %if.then, label %if.end, !dbg !7343

if.then:                                          ; preds = %entry
  tail call void @init_block_clear_fn(i8* null) #8, !dbg !7344
  br label %if.end, !dbg !7344

if.end:                                           ; preds = %entry, %if.then
  %.b = load i1, i1* @clear_storage_libcall_fn.emitted_extern, align 1, !dbg !7345
  br i1 %.b, label %if.end4, label %if.then3, !dbg !7347

if.then3:                                         ; preds = %if.end
  store i1 true, i1* @clear_storage_libcall_fn.emitted_extern, align 1, !dbg !7348
  %1 = load %union.tree_node*, %union.tree_node** @block_clear_fn, align 8, !dbg !7350
  tail call void @make_decl_rtl(%union.tree_node* %1) #6, !dbg !7351
  %2 = load %union.tree_node*, %union.tree_node** @block_clear_fn, align 8, !dbg !7352
  tail call void @assemble_external(%union.tree_node* %2) #6, !dbg !7353
  br label %if.end4, !dbg !7354

if.end4:                                          ; preds = %if.end, %if.then3
  %3 = load %union.tree_node*, %union.tree_node** @block_clear_fn, align 8, !dbg !7355
  ret %union.tree_node* %3, !dbg !7356
}

; Function Attrs: nounwind uwtable
define dso_local void @init_block_clear_fn(i8* %asmspec) local_unnamed_addr #4 !dbg !7357 {
entry:
  call void @llvm.dbg.value(metadata i8* %asmspec, metadata !7359, metadata !DIExpression()), !dbg !7364
  %0 = load %union.tree_node*, %union.tree_node** @block_clear_fn, align 8, !dbg !7365
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !7365
  br i1 %tobool, label %if.then, label %if.end, !dbg !7366

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7367
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7360, metadata !DIExpression()), !dbg !7368
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !7369
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !7370
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !7371
  %call1 = tail call %union.tree_node* (%union.tree_node*, ...) @build_function_type_list(%union.tree_node* %1, %union.tree_node* %1, %union.tree_node* %2, %union.tree_node* %3, %union.tree_node* null) #6, !dbg !7372
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7363, metadata !DIExpression()), !dbg !7368
  %call2 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 29, %union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !7373
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7360, metadata !DIExpression()), !dbg !7368
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7374
  %4 = bitcast i40* %decl_flag_1 to i64*, !dbg !7374
  %bf.load = load i64, i64* %4, align 8, !dbg !7375
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7376
  %bf.load3 = load i64, i64* %5, align 8, !dbg !7377
  %bf.set9 = or i64 %bf.load, 33558528, !dbg !7378
  store i64 %bf.set9, i64* %4, align 8, !dbg !7378
  %bf.set13 = or i64 %bf.load3, 167772160, !dbg !7379
  store i64 %bf.set13, i64* %5, align 8, !dbg !7379
  %visibility = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7380
  %6 = bitcast i24* %visibility to i32*, !dbg !7380
  %bf.load14 = load i32, i32* %6, align 8, !dbg !7381
  %bf.clear18 = and i32 %bf.load14, -7169, !dbg !7382
  %bf.set19 = or i32 %bf.clear18, 4096, !dbg !7382
  store i32 %bf.set19, i32* %6, align 8, !dbg !7382
  store %union.tree_node* %call2, %union.tree_node** @block_clear_fn, align 8, !dbg !7383
  br label %if.end, !dbg !7384

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %union.tree_node* [ %0, %entry ], [ %call2, %if.then ]
  %tobool20 = icmp eq i8* %asmspec, null, !dbg !7385
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !7387

if.then21:                                        ; preds = %if.end
  tail call void @set_user_assembler_name(%union.tree_node* %7, i8* nonnull %asmspec) #6, !dbg !7388
  br label %if.end22, !dbg !7388

if.end22:                                         ; preds = %if.end, %if.then21
  ret void, !dbg !7389
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #1

declare dso_local void @delete_insns_since(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_move_complex_push(i32 %mode, %struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !7390 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7394, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7395, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7396, metadata !DIExpression()), !dbg !7400
  %idxprom = zext i32 %mode to i64, !dbg !7401
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !7401
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7401
  %conv = zext i8 %0 to i32, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7397, metadata !DIExpression()), !dbg !7400
  %idxprom1 = zext i8 %0 to i64, !dbg !7402
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1, !dbg !7402
  %1 = load i8, i8* %arrayidx2, align 1, !dbg !7402
  %conv4 = zext i8 %1 to i32, !dbg !7402
  call void @llvm.dbg.value(metadata i32 %conv4, metadata !7399, metadata !DIExpression()), !dbg !7400
  %add = add nuw nsw i32 %conv4, 3, !dbg !7403
  %and = and i32 %add, 508, !dbg !7403
  %cmp = icmp eq i32 %and, %conv4, !dbg !7405
  br i1 %cmp, label %if.end, label %if.then, !dbg !7406

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.rtx_def* @emit_move_resolve_push(i32 %mode, %struct.rtx_def* %x) #8, !dbg !7407
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7395, metadata !DIExpression()), !dbg !7400
  %call6 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %y) #8, !dbg !7409
  br label %cleanup, !dbg !7410

if.end:                                           ; preds = %entry
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7411
  %2 = bitcast %union.rtunion_def* %arrayidx7 to i32**, !dbg !7411
  %3 = load i32*, i32** %2, align 8, !dbg !7411
  %bf.load = load i32, i32* %3, align 8, !dbg !7411
  %trunc = trunc i32 %bf.load to i16, !dbg !7412
  %4 = bitcast i32* %3 to %struct.rtx_def*, !dbg !7412
  switch i16 %trunc, label %sw.default [
    i16 74, label %sw.epilog
    i16 76, label %sw.epilog
    i16 75, label %sw.bb8
    i16 77, label %sw.bb8
  ], !dbg !7412

sw.bb8:                                           ; preds = %if.end, %if.end
  call void @llvm.dbg.value(metadata i8 0, metadata !7398, metadata !DIExpression()), !dbg !7400
  br label %sw.epilog, !dbg !7413

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7415
  %rt_rtx12.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !7400
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12.phi.trans.insert, align 8, !dbg !7416
  br label %sw.epilog, !dbg !7417

sw.epilog:                                        ; preds = %if.end, %if.end, %sw.default, %sw.bb8
  %5 = phi %struct.rtx_def* [ %.pre, %sw.default ], [ %4, %sw.bb8 ], [ %4, %if.end ], [ %4, %if.end ], !dbg !7416
  %imag_first.0 = phi i8 [ undef, %sw.default ], [ 0, %sw.bb8 ], [ 1, %if.end ], [ 1, %if.end ]
  call void @llvm.dbg.value(metadata i8 %imag_first.0, metadata !7398, metadata !DIExpression()), !dbg !7400
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !7416
  %call13 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %conv, %struct.rtx_def* %5) #6, !dbg !7418
  %call14 = tail call fastcc %struct.rtx_def* @read_complex_part(%struct.rtx_def* %y, i8 zeroext %imag_first.0) #8, !dbg !7419
  %call15 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call13, %struct.rtx_def* %call14) #8, !dbg !7420
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !7421
  %call20 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %conv, %struct.rtx_def* %6) #6, !dbg !7422
  %tobool = icmp eq i8 %imag_first.0, 0, !dbg !7423
  %conv21 = zext i1 %tobool to i8, !dbg !7423
  %call22 = tail call fastcc %struct.rtx_def* @read_complex_part(%struct.rtx_def* %y, i8 zeroext %conv21) #8, !dbg !7424
  %call23 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call20, %struct.rtx_def* %call22) #8, !dbg !7425
  br label %cleanup, !dbg !7426

cleanup:                                          ; preds = %sw.epilog, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call6, %if.then ], [ %call23, %sw.epilog ], !dbg !7400
  ret %struct.rtx_def* %retval.0, !dbg !7427
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_move_resolve_push(i32 %mode, %struct.rtx_def* %x) unnamed_addr #4 !dbg !7428 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7432, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7433, metadata !DIExpression()), !dbg !7442
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7443
  %0 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !7443
  %1 = load i32*, i32** %0, align 8, !dbg !7443
  %bf.load = load i32, i32* %1, align 8, !dbg !7443
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !7434, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !7442
  %idxprom = zext i32 %mode to i64, !dbg !7444
  %arrayidx1 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7444
  %2 = load i8, i8* %arrayidx1, align 1, !dbg !7444
  %conv2 = zext i8 %2 to i64, !dbg !7444
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !7435, metadata !DIExpression()), !dbg !7442
  %add = add nuw nsw i64 %conv2, 3, !dbg !7445
  %and = and i64 %add, 508, !dbg !7445
  call void @llvm.dbg.value(metadata i64 %and, metadata !7435, metadata !DIExpression()), !dbg !7442
  %trunc = trunc i32 %bf.load to i16, !dbg !7446
  switch i16 %trunc, label %if.end64 [
    i16 74, label %if.then
    i16 76, label %if.then
    i16 78, label %if.then11
    i16 79, label %if.then11
  ], !dbg !7446

if.then:                                          ; preds = %entry, %entry
  %sub = sub nsw i64 0, %and, !dbg !7447
  call void @llvm.dbg.value(metadata i64 %sub, metadata !7435, metadata !DIExpression()), !dbg !7442
  br label %if.end64, !dbg !7448

if.then11:                                        ; preds = %entry, %entry
  %3 = getelementptr inbounds i32, i32* %1, i64 4, !dbg !7449
  %rt_rtx19 = bitcast i32* %3 to %struct.rtx_def**, !dbg !7449
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !7449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !7437, metadata !DIExpression()), !dbg !7450
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !7451
  %bf.load20 = load i32, i32* %5, align 8, !dbg !7451
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !7451
  %cmp22 = icmp eq i32 %bf.clear21, 49, !dbg !7451
  br i1 %cmp22, label %cond.end, label %lor.lhs.false24, !dbg !7451

lor.lhs.false24:                                  ; preds = %if.then11
  %cmp27 = icmp eq i32 %bf.clear21, 50, !dbg !7451
  br i1 %cmp27, label %cond.end, label %cond.true, !dbg !7451

cond.true:                                        ; preds = %lor.lhs.false24
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3073, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7451
  br label %cond.end, !dbg !7451

cond.end:                                         ; preds = %if.then11, %lor.lhs.false24, %cond.true
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7452
  %7 = bitcast %union.rtunion_def* %6 to i32**, !dbg !7452
  %8 = load i32*, i32** %7, align 8, !dbg !7452
  %bf.load33 = load i32, i32* %8, align 8, !dbg !7452
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !7452
  %cmp35 = icmp eq i32 %bf.clear34, 30, !dbg !7452
  br i1 %cmp35, label %cond.end.cond.end39_crit_edge, label %cond.true37, !dbg !7452

cond.end.cond.end39_crit_edge:                    ; preds = %cond.end
  %9 = bitcast i32* %8 to %struct.rtx_def*, !dbg !7452
  br label %cond.end39, !dbg !7452

cond.true37:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3074, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7452
  %rt_rtx44.phi.trans.insert = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !7450
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44.phi.trans.insert, align 8, !dbg !7453
  br label %cond.end39, !dbg !7452

cond.end39:                                       ; preds = %cond.end.cond.end39_crit_edge, %cond.true37
  %10 = phi %struct.rtx_def* [ %9, %cond.end.cond.end39_crit_edge ], [ %.pre, %cond.true37 ], !dbg !7453
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, !dbg !7453
  %arrayidx46 = bitcast %union.u* %u45 to i64*, !dbg !7453
  %11 = load i64, i64* %arrayidx46, align 8, !dbg !7453
  call void @llvm.dbg.value(metadata i64 %11, metadata !7441, metadata !DIExpression()), !dbg !7450
  %bf.load47 = load i32, i32* %5, align 8, !dbg !7454
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !7454
  %cmp49 = icmp eq i32 %bf.clear48, 50, !dbg !7456
  %sub52 = sub nsw i64 0, %11, !dbg !7457
  %spec.select = select i1 %cmp49, i64 %sub52, i64 %11, !dbg !7458
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !7441, metadata !DIExpression()), !dbg !7450
  %cmp53 = icmp eq i64 %and, %spec.select, !dbg !7459
  %sub56 = sub nsw i64 0, %spec.select, !dbg !7459
  %cmp57 = icmp eq i64 %and, %sub56, !dbg !7459
  %or.cond = or i1 %cmp53, %cmp57, !dbg !7459
  br i1 %or.cond, label %if.end64, label %cond.true59, !dbg !7459

cond.true59:                                      ; preds = %cond.end39
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3078, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7459
  br label %if.end64, !dbg !7459

if.end64:                                         ; preds = %entry, %cond.end39, %cond.true59, %if.then
  %adjust.1 = phi i64 [ %sub, %if.then ], [ %and, %entry ], [ %spec.select, %cond.end39 ], [ %spec.select, %cond.true59 ], !dbg !7460
  call void @llvm.dbg.value(metadata i64 %adjust.1, metadata !7435, metadata !DIExpression()), !dbg !7442
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7461
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %adjust.1) #6, !dbg !7462
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7463
  %call65 = tail call %struct.rtx_def* @expand_simple_binop(i32 16, i32 49, %struct.rtx_def* %12, %struct.rtx_def* %call, %struct.rtx_def* %13, i32 0, i32 3) #6, !dbg !7464
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !7436, metadata !DIExpression()), !dbg !7442
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7465
  %cmp66 = icmp eq %struct.rtx_def* %call65, %14, !dbg !7467
  br i1 %cmp66, label %if.end70, label %if.then68, !dbg !7468

if.then68:                                        ; preds = %if.end64
  %call69 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %14, %struct.rtx_def* %call65) #8, !dbg !7469
  br label %if.end70, !dbg !7469

if.end70:                                         ; preds = %if.end64, %if.then68
  switch i16 %trunc, label %sw.default [
    i16 75, label %sw.bb
    i16 74, label %sw.bb
    i16 78, label %sw.bb
    i16 77, label %sw.bb71
    i16 76, label %sw.bb71
    i16 79, label %sw.bb71
  ], !dbg !7470

sw.bb:                                            ; preds = %if.end70, %if.end70, %if.end70
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7471
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !7436, metadata !DIExpression()), !dbg !7442
  br label %sw.epilog, !dbg !7473

sw.bb71:                                          ; preds = %if.end70, %if.end70, %if.end70
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7474
  %sub72 = sub nsw i64 0, %adjust.1, !dbg !7475
  %call73 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %16, i64 %sub72) #6, !dbg !7476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call73, metadata !7436, metadata !DIExpression()), !dbg !7442
  br label %sw.epilog, !dbg !7477

sw.default:                                       ; preds = %if.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7478
  br label %sw.epilog, !dbg !7479

sw.epilog:                                        ; preds = %sw.default, %sw.bb71, %sw.bb
  %temp.0 = phi %struct.rtx_def* [ %call65, %sw.default ], [ %call73, %sw.bb71 ], [ %15, %sw.bb ], !dbg !7442
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !7436, metadata !DIExpression()), !dbg !7442
  %call74 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %x, %struct.rtx_def* %temp.0) #6, !dbg !7480
  ret %struct.rtx_def* %call74, !dbg !7481
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @read_complex_part(%struct.rtx_def* %cplx, i8 zeroext %imag_p) unnamed_addr #4 !dbg !7482 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cplx, metadata !7486, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i8 %imag_p, metadata !7487, metadata !DIExpression()), !dbg !7500
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cplx, i64 0, i32 0, !dbg !7501
  %bf.load = load i32, i32* %0, align 8, !dbg !7501
  %bf.clear = and i32 %bf.load, 65535, !dbg !7501
  %cmp = icmp eq i32 %bf.clear, 41, !dbg !7503
  br i1 %cmp, label %if.then, label %if.end, !dbg !7504

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cplx, i64 0, i32 1, !dbg !7505
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7505
  %idxprom = zext i8 %imag_p to i64, !dbg !7505
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom, !dbg !7505
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7505
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7505
  br label %cleanup143, !dbg !7506

if.end:                                           ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7507
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !7507
  call void @llvm.dbg.value(metadata i32 %bf.clear2, metadata !7488, metadata !DIExpression()), !dbg !7500
  %idxprom3 = zext i32 %bf.clear2 to i64, !dbg !7508
  %arrayidx4 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom3, !dbg !7508
  %2 = load i8, i8* %arrayidx4, align 1, !dbg !7508
  %conv = zext i8 %2 to i32, !dbg !7508
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7489, metadata !DIExpression()), !dbg !7500
  %idxprom5 = zext i8 %2 to i64, !dbg !7509
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5, !dbg !7509
  %3 = load i8, i8* %arrayidx6, align 1, !dbg !7509
  %conv8 = zext i8 %3 to i64, !dbg !7509
  %mul = shl nuw nsw i64 %conv8, 3, !dbg !7509
  call void @llvm.dbg.value(metadata i8 %3, metadata !7490, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !7500
  %cmp13 = icmp eq i32 %bf.clear, 43, !dbg !7510
  br i1 %cmp13, label %land.lhs.true, label %if.end66, !dbg !7511

land.lhs.true:                                    ; preds = %if.end
  %arrayidx17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cplx, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7512
  %4 = bitcast %union.rtunion_def* %arrayidx17 to i32**, !dbg !7512
  %5 = load i32*, i32** %4, align 8, !dbg !7512
  %bf.load19 = load i32, i32* %5, align 8, !dbg !7512
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !7512
  %cmp21 = icmp eq i32 %bf.clear20, 45, !dbg !7513
  br i1 %cmp21, label %if.then23, label %if.end66, !dbg !7514

if.then23:                                        ; preds = %land.lhs.true
  %bf.clear30 = and i32 %bf.load19, 67108864, !dbg !7515
  %tobool = icmp eq i32 %bf.clear30, 0, !dbg !7515
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !7515

cond.false:                                       ; preds = %if.then23
  %6 = getelementptr inbounds i32, i32* %5, i64 6, !dbg !7515
  %rt_tree = bitcast i32* %6 to %union.tree_node**, !dbg !7515
  %7 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !7515
  %8 = bitcast %union.tree_node* %7 to %struct.tree_complex*, !dbg !7515
  br label %cond.end, !dbg !7515

cond.end:                                         ; preds = %if.then23, %cond.false
  %9 = phi %struct.tree_complex* [ %8, %cond.false ], [ null, %if.then23 ], !dbg !7515
  %cond = phi %union.tree_node* [ %7, %cond.false ], [ null, %if.then23 ], !dbg !7515
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !7491, metadata !DIExpression()), !dbg !7516
  %tobool38 = icmp eq %union.tree_node* %cond, null, !dbg !7517
  br i1 %tobool38, label %if.end62, label %land.lhs.true39, !dbg !7518

land.lhs.true39:                                  ; preds = %cond.end
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7519
  %bf.load40 = load i64, i64* %10, align 8, !dbg !7519
  %bf.cast4 = and i64 %bf.load40, 65535, !dbg !7520
  %cmp42 = icmp eq i64 %bf.cast4, 26, !dbg !7520
  br i1 %cmp42, label %if.then44, label %if.end62, !dbg !7521

if.then44:                                        ; preds = %land.lhs.true39
  %tobool46 = icmp eq i8 %imag_p, 0, !dbg !7522
  br i1 %tobool46, label %cond.false48, label %cond.true47, !dbg !7522

cond.true47:                                      ; preds = %if.then44
  %imag = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %9, i64 0, i32 2, !dbg !7523
  br label %cond.end50, !dbg !7522

cond.false48:                                     ; preds = %if.then44
  %real = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %9, i64 0, i32 1, !dbg !7524
  br label %cond.end50, !dbg !7522

cond.end50:                                       ; preds = %cond.false48, %cond.true47
  %cond51.in = phi %union.tree_node** [ %imag, %cond.true47 ], [ %real, %cond.false48 ]
  %cond51 = load %union.tree_node*, %union.tree_node** %cond51.in, align 8, !dbg !7522
  call void @llvm.dbg.value(metadata %union.tree_node* %cond51, metadata !7494, metadata !DIExpression()), !dbg !7525
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7526
  %bf.load53 = load i64, i64* %11, align 8, !dbg !7526
  %bf.cast55 = and i64 %bf.load53, 65535, !dbg !7526
  %arrayidx57 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast55, !dbg !7526
  %12 = load i32, i32* %arrayidx57, align 4, !dbg !7526
  %cmp58 = icmp eq i32 %12, 1, !dbg !7526
  br i1 %cmp58, label %if.then60, label %cleanup, !dbg !7528

if.then60:                                        ; preds = %cond.end50
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %cond51, %struct.rtx_def* null, i32 %conv, i32 0) #8, !dbg !7529
  br label %cleanup, !dbg !7530

cleanup:                                          ; preds = %cond.end50, %if.then60
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then60 ], [ 0, %cond.end50 ]
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then60 ], [ undef, %cond.end50 ]
  %cond3 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond3, label %if.end62, label %cleanup63

if.end62:                                         ; preds = %cond.end, %cleanup, %land.lhs.true39
  %retval.1 = phi %struct.rtx_def* [ undef, %land.lhs.true39 ], [ undef, %cond.end ], [ %retval.0, %cleanup ]
  br label %cleanup63, !dbg !7531

cleanup63:                                        ; preds = %cleanup, %if.end62
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end62 ]
  %retval.2 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ %retval.1, %if.end62 ], !dbg !7530
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %cleanup63.if.end66_crit_edge, label %cleanup143

cleanup63.if.end66_crit_edge:                     ; preds = %cleanup63
  %bf.load67.pre = load i32, i32* %0, align 8, !dbg !7532
  br label %if.end66

if.end66:                                         ; preds = %cleanup63.if.end66_crit_edge, %land.lhs.true, %if.end
  %bf.load87 = phi i32 [ %bf.load, %land.lhs.true ], [ %bf.load, %if.end ], [ %bf.load67.pre, %cleanup63.if.end66_crit_edge ], !dbg !7532
  %retval.3 = phi %struct.rtx_def* [ undef, %land.lhs.true ], [ undef, %if.end ], [ %retval.2, %cleanup63.if.end66_crit_edge ]
  %bf.clear68 = and i32 %bf.load87, 65535, !dbg !7532
  %cmp69 = icmp eq i32 %bf.clear68, 43, !dbg !7532
  br i1 %cmp69, label %if.then71, label %if.end84, !dbg !7534

if.then71:                                        ; preds = %if.end66
  %tobool73 = icmp eq i8 %imag_p, 0, !dbg !7535
  br i1 %tobool73, label %cond.end80, label %cond.true74, !dbg !7535

cond.true74:                                      ; preds = %if.then71
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !7535
  %phitmp = zext i8 %13 to i64, !dbg !7535
  br label %cond.end80, !dbg !7535

cond.end80:                                       ; preds = %if.then71, %cond.true74
  %cond81 = phi i64 [ %phitmp, %cond.true74 ], [ 0, %if.then71 ]
  %call83 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %cplx, i32 %conv, i64 %cond81, i32 0, i32 1) #6, !dbg !7535
  br label %cleanup143, !dbg !7536

if.end84:                                         ; preds = %if.end66
  %cmp85 = icmp ugt i8 %3, 3, !dbg !7537
  br i1 %cmp85, label %if.then104, label %lor.lhs.false, !dbg !7538

lor.lhs.false:                                    ; preds = %if.end84
  %cmp89 = icmp eq i32 %bf.clear68, 37, !dbg !7539
  br i1 %cmp89, label %land.lhs.true91, label %if.end133, !dbg !7540

land.lhs.true91:                                  ; preds = %lor.lhs.false
  %call92 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cplx) #8, !dbg !7541
  %cmp93 = icmp ult i32 %call92, 53, !dbg !7542
  br i1 %cmp93, label %land.lhs.true95, label %if.end133, !dbg !7543

land.lhs.true95:                                  ; preds = %land.lhs.true91
  %call96 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cplx) #8, !dbg !7544
  %idxprom97 = zext i32 %call96 to i64, !dbg !7545
  %arrayidx100 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom97, i64 %idxprom3, !dbg !7545
  %14 = load i8, i8* %arrayidx100, align 1, !dbg !7545
  %15 = and i8 %14, 1, !dbg !7546
  %cmp102 = icmp eq i8 %15, 0, !dbg !7547
  br i1 %cmp102, label %if.then104, label %if.end133, !dbg !7548

if.then104:                                       ; preds = %land.lhs.true95, %if.end84
  %tobool106 = icmp eq i8 %imag_p, 0, !dbg !7549
  br i1 %tobool106, label %cond.end113, label %cond.true107, !dbg !7549

cond.true107:                                     ; preds = %if.then104
  %16 = load i8, i8* %arrayidx6, align 1, !dbg !7550
  %conv111 = zext i8 %16 to i32, !dbg !7550
  br label %cond.end113, !dbg !7549

cond.end113:                                      ; preds = %if.then104, %cond.true107
  %cond114 = phi i32 [ %conv111, %cond.true107 ], [ 0, %if.then104 ], !dbg !7549
  %call115 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %conv, %struct.rtx_def* %cplx, i32 %bf.clear2, i32 %cond114) #6, !dbg !7551
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call115, metadata !7497, metadata !DIExpression()), !dbg !7552
  %tobool116 = icmp eq %struct.rtx_def* %call115, null, !dbg !7553
  br i1 %tobool116, label %if.else, label %cleanup130, !dbg !7555

if.else:                                          ; preds = %cond.end113
  %bf.load118 = load i32, i32* %0, align 8, !dbg !7556
  %bf.clear119 = and i32 %bf.load118, 65535, !dbg !7556
  %cmp120 = icmp eq i32 %bf.clear119, 43, !dbg !7556
  %cmp123 = icmp ult i8 %3, 4, !dbg !7556
  %or.cond = and i1 %cmp120, %cmp123, !dbg !7556
  br i1 %or.cond, label %cleanup130, label %cond.true125, !dbg !7556

cond.true125:                                     ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2969, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7556
  br label %cleanup130, !dbg !7556

cleanup130:                                       ; preds = %cond.end113, %if.else, %cond.true125
  %cleanup.dest.slot.2 = phi i1 [ false, %cond.end113 ], [ true, %cond.true125 ], [ true, %if.else ]
  %retval.4 = phi %struct.rtx_def* [ %call115, %cond.end113 ], [ %retval.3, %cond.true125 ], [ %retval.3, %if.else ], !dbg !7500
  br i1 %cleanup.dest.slot.2, label %if.end133, label %cleanup143

if.end133:                                        ; preds = %cleanup130, %land.lhs.true95, %land.lhs.true91, %lor.lhs.false
  %tobool136 = icmp eq i8 %imag_p, 0, !dbg !7557
  %conv141 = select i1 %tobool136, i64 0, i64 %mul, !dbg !7557
  %call142 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %cplx, i64 %mul, i64 %conv141, i32 1, %struct.rtx_def* null, i32 %conv, i32 %conv) #6, !dbg !7558
  br label %cleanup143, !dbg !7559

cleanup143:                                       ; preds = %cleanup63, %cleanup130, %if.end133, %cond.end80, %if.then
  %retval.5 = phi %struct.rtx_def* [ %1, %if.then ], [ %retval.2, %cleanup63 ], [ %call83, %cond.end80 ], [ %retval.4, %cleanup130 ], [ %call142, %if.end133 ], !dbg !7500
  ret %struct.rtx_def* %retval.5, !dbg !7560
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_move_complex_parts(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !7561 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7563, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7564, metadata !DIExpression()), !dbg !7565
  %0 = load i32, i32* @reload_completed, align 4, !dbg !7566
  %1 = load i32, i32* @reload_in_progress, align 4, !dbg !7568
  %2 = or i32 %0, %1, !dbg !7569
  %3 = icmp eq i32 %2, 0, !dbg !7569
  br i1 %3, label %land.lhs.true2, label %if.end, !dbg !7569

land.lhs.true2:                                   ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7570
  %bf.load = load i32, i32* %4, align 8, !dbg !7570
  %bf.clear = and i32 %bf.load, 65535, !dbg !7570
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !7570
  br i1 %cmp, label %land.lhs.true3, label %if.end, !dbg !7571

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !7572
  %tobool4 = icmp eq i32 %call, 0, !dbg !7572
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7573

if.then:                                          ; preds = %land.lhs.true3
  %call5 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %x) #6, !dbg !7574
  br label %if.end, !dbg !7574

if.end:                                           ; preds = %land.lhs.true3, %entry, %if.then, %land.lhs.true2
  %call6 = tail call fastcc %struct.rtx_def* @read_complex_part(%struct.rtx_def* %y, i8 zeroext 0) #8, !dbg !7575
  tail call fastcc void @write_complex_part(%struct.rtx_def* %x, %struct.rtx_def* %call6, i8 zeroext 0) #8, !dbg !7576
  %call7 = tail call fastcc %struct.rtx_def* @read_complex_part(%struct.rtx_def* %y, i8 zeroext 1) #8, !dbg !7577
  tail call fastcc void @write_complex_part(%struct.rtx_def* %x, %struct.rtx_def* %call7, i8 zeroext 1) #8, !dbg !7578
  %call8 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7579
  ret %struct.rtx_def* %call8, !dbg !7580
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @emit_move_insn_1(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !7581 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7583, metadata !DIExpression()), !dbg !7593
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7584, metadata !DIExpression()), !dbg !7593
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7594
  %bf.load = load i32, i32* %0, align 8, !dbg !7594
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7594
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7594
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7585, metadata !DIExpression()), !dbg !7593
  %cmp = icmp ult i32 %bf.clear, 87, !dbg !7595
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7595

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7595
  br label %cond.end, !dbg !7595

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %bf.clear to i64, !dbg !7596
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom, i32 0, !dbg !7597
  %1 = load i32, i32* %insn_code, align 4, !dbg !7597
  call void @llvm.dbg.value(metadata i32 %1, metadata !7586, metadata !DIExpression()), !dbg !7593
  %cmp1 = icmp eq i32 %1, 2956, !dbg !7598
  br i1 %cmp1, label %if.end, label %if.then, !dbg !7600

if.then:                                          ; preds = %cond.end
  %idxprom2 = zext i32 %1 to i64, !dbg !7601
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom2, i32 2, !dbg !7601
  %2 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7601
  %call = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %2(%struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !7601
  %call4 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #6, !dbg !7602
  br label %cleanup106, !dbg !7603

if.end:                                           ; preds = %cond.end
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7604
  %3 = load i8, i8* %arrayidx6, align 1, !dbg !7604
  %cmp7 = icmp eq i8 %3, 10, !dbg !7604
  br i1 %cmp7, label %if.then14, label %lor.lhs.false, !dbg !7604

lor.lhs.false:                                    ; preds = %if.end
  %cmp12 = icmp eq i8 %3, 11, !dbg !7604
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !7606

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  %call15 = tail call fastcc %struct.rtx_def* @emit_move_complex(i32 %bf.clear, %struct.rtx_def* %x, %struct.rtx_def* %y) #8, !dbg !7607
  br label %cleanup106, !dbg !7608

if.end16:                                         ; preds = %lor.lhs.false
  %cmp20 = icmp eq i8 %3, 9, !dbg !7609
  br i1 %cmp20, label %if.then70, label %lor.lhs.false22, !dbg !7610

lor.lhs.false22:                                  ; preds = %if.end16
  %cmp26 = icmp eq i8 %3, 4, !dbg !7611
  br i1 %cmp26, label %if.then70, label %lor.lhs.false28, !dbg !7611

lor.lhs.false28:                                  ; preds = %lor.lhs.false22
  %cmp32 = icmp eq i8 %3, 13, !dbg !7611
  br i1 %cmp32, label %if.then70, label %lor.lhs.false34, !dbg !7611

lor.lhs.false34:                                  ; preds = %lor.lhs.false28
  %cmp38 = icmp eq i8 %3, 6, !dbg !7611
  br i1 %cmp38, label %if.then70, label %lor.lhs.false40, !dbg !7611

lor.lhs.false40:                                  ; preds = %lor.lhs.false34
  %cmp44 = icmp eq i8 %3, 15, !dbg !7611
  br i1 %cmp44, label %if.then70, label %lor.lhs.false46, !dbg !7611

lor.lhs.false46:                                  ; preds = %lor.lhs.false40
  %cmp50 = icmp eq i8 %3, 5, !dbg !7611
  br i1 %cmp50, label %if.then70, label %lor.lhs.false52, !dbg !7611

lor.lhs.false52:                                  ; preds = %lor.lhs.false46
  %cmp56 = icmp eq i8 %3, 14, !dbg !7611
  br i1 %cmp56, label %if.then70, label %lor.lhs.false58, !dbg !7611

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %cmp62 = icmp eq i8 %3, 7, !dbg !7611
  br i1 %cmp62, label %if.then70, label %lor.lhs.false64, !dbg !7611

lor.lhs.false64:                                  ; preds = %lor.lhs.false58
  %cmp68 = icmp eq i8 %3, 16, !dbg !7611
  br i1 %cmp68, label %if.then70, label %if.end74, !dbg !7612

if.then70:                                        ; preds = %lor.lhs.false64, %lor.lhs.false58, %lor.lhs.false52, %lor.lhs.false46, %lor.lhs.false40, %lor.lhs.false34, %lor.lhs.false28, %lor.lhs.false22, %if.end16
  %call71 = tail call fastcc %struct.rtx_def* @emit_move_via_integer(i32 %bf.clear, %struct.rtx_def* %x, %struct.rtx_def* %y, i8 zeroext 1) #8, !dbg !7613
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call71, metadata !7587, metadata !DIExpression()), !dbg !7614
  %tobool = icmp eq %struct.rtx_def* %call71, null, !dbg !7615
  br i1 %tobool, label %if.else, label %cleanup106, !dbg !7617

if.else:                                          ; preds = %if.then70
  %call73 = tail call fastcc %struct.rtx_def* @emit_move_multi_word(i32 %bf.clear, %struct.rtx_def* %x, %struct.rtx_def* %y) #8, !dbg !7618
  br label %cleanup106, !dbg !7619

if.end74:                                         ; preds = %lor.lhs.false64
  %cmp78 = icmp eq i8 %3, 1, !dbg !7620
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !7622

if.then80:                                        ; preds = %if.end74
  %call81 = tail call fastcc %struct.rtx_def* @emit_move_ccmode(i32 %bf.clear, %struct.rtx_def* %x, %struct.rtx_def* %y) #8, !dbg !7623
  br label %cleanup106, !dbg !7624

if.end82:                                         ; preds = %if.end74
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !7625
  %bf.load83 = load i32, i32* %4, align 8, !dbg !7625
  %bf.clear84 = and i32 %bf.load83, 65535, !dbg !7625
  %idxprom85 = zext i32 %bf.clear84 to i64, !dbg !7625
  %arrayidx86 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom85, !dbg !7625
  %5 = load i32, i32* %arrayidx86, align 4, !dbg !7625
  %cmp87 = icmp eq i32 %5, 9, !dbg !7625
  br i1 %cmp87, label %lor.lhs.false89, label %if.then98, !dbg !7626

lor.lhs.false89:                                  ; preds = %if.end82
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7627
  %6 = load i8, i8* %arrayidx91, align 1, !dbg !7627
  %cmp96 = icmp ult i8 %6, 9, !dbg !7628
  br i1 %cmp96, label %if.then98, label %if.end104, !dbg !7629

if.then98:                                        ; preds = %lor.lhs.false89, %if.end82
  %call99 = tail call fastcc %struct.rtx_def* @emit_move_via_integer(i32 %bf.clear, %struct.rtx_def* %x, %struct.rtx_def* %y, i8 zeroext 0) #8, !dbg !7630
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call99, metadata !7590, metadata !DIExpression()), !dbg !7631
  %tobool100 = icmp eq %struct.rtx_def* %call99, null, !dbg !7632
  br i1 %tobool100, label %if.end104, label %cleanup106

if.end104:                                        ; preds = %if.then98, %lor.lhs.false89
  %call105 = tail call fastcc %struct.rtx_def* @emit_move_multi_word(i32 %bf.clear, %struct.rtx_def* %x, %struct.rtx_def* %y) #8, !dbg !7634
  br label %cleanup106, !dbg !7635

cleanup106:                                       ; preds = %if.then70, %if.else, %if.then98, %if.end104, %if.then80, %if.then14, %if.then
  %retval.2 = phi %struct.rtx_def* [ %call4, %if.then ], [ %call15, %if.then14 ], [ %call81, %if.then80 ], [ %call99, %if.then98 ], [ %call105, %if.end104 ], [ %call73, %if.else ], [ %call71, %if.then70 ], !dbg !7593
  ret %struct.rtx_def* %retval.2, !dbg !7636
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_move_complex(i32 %mode, %struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !7637 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7639, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7640, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7641, metadata !DIExpression()), !dbg !7646
  %call = tail call i32 @push_operand(%struct.rtx_def* %x, i32 %mode) #6, !dbg !7647
  %tobool = icmp eq i32 %call, 0, !dbg !7647
  br i1 %tobool, label %if.end, label %if.then, !dbg !7649

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @emit_move_complex_push(i32 %mode, %struct.rtx_def* %x, %struct.rtx_def* %y) #8, !dbg !7650
  br label %cleanup72, !dbg !7651

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %mode to i64, !dbg !7652
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7652
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7652
  %cmp = icmp eq i8 %0, 11, !dbg !7654
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7655

land.lhs.true:                                    ; preds = %if.end
  %arrayidx4 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !7656
  %1 = load i8, i8* %arrayidx4, align 1, !dbg !7656
  %idxprom6 = zext i8 %1 to i64, !dbg !7656
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom6, i32 0, !dbg !7657
  %2 = load i32, i32* %insn_code, align 4, !dbg !7657
  %cmp8 = icmp eq i32 %2, 2956, !dbg !7658
  br i1 %cmp8, label %if.else, label %if.end45, !dbg !7659

if.else:                                          ; preds = %land.lhs.true, %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7660
  %bf.load = load i32, i32* %3, align 8, !dbg !7660
  %bf.clear = and i32 %bf.load, 65535, !dbg !7660
  %cmp11 = icmp eq i32 %bf.clear, 41, !dbg !7662
  br i1 %cmp11, label %if.end45, label %lor.lhs.false, !dbg !7663

lor.lhs.false:                                    ; preds = %if.else
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !7664
  %bf.load13 = load i32, i32* %4, align 8, !dbg !7664
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7664
  %cmp15 = icmp eq i32 %bf.clear14, 41, !dbg !7665
  br i1 %cmp15, label %if.end45, label %if.else18, !dbg !7666

if.else18:                                        ; preds = %lor.lhs.false
  %call19 = tail call i32 @register_operand(%struct.rtx_def* %x, i32 %mode) #6, !dbg !7667
  %tobool20 = icmp eq i32 %call19, 0, !dbg !7667
  br i1 %tobool20, label %if.else25, label %land.lhs.true21, !dbg !7669

land.lhs.true21:                                  ; preds = %if.else18
  %call22 = tail call i32 @register_operand(%struct.rtx_def* %y, i32 %mode) #6, !dbg !7670
  %tobool23 = icmp eq i32 %call22, 0, !dbg !7670
  br i1 %tobool23, label %if.else25, label %if.end45, !dbg !7671

if.else25:                                        ; preds = %land.lhs.true21, %if.else18
  %bf.load26 = load i32, i32* %3, align 8, !dbg !7672
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !7672
  %cmp28 = icmp eq i32 %bf.clear27, 43, !dbg !7672
  %bf.load30 = load i32, i32* %4, align 8, !dbg !7674
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !7674
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !7675

cond.true:                                        ; preds = %if.else25
  %idxprom32 = zext i32 %bf.clear31 to i64, !dbg !7676
  %arrayidx33 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom32, !dbg !7676
  %5 = load i32, i32* %arrayidx33, align 4, !dbg !7676
  %cmp34 = icmp eq i32 %5, 9, !dbg !7676
  br i1 %cmp34, label %if.else41, label %if.end45, !dbg !7672

cond.false:                                       ; preds = %if.else25
  %cmp38 = icmp eq i32 %bf.clear31, 43, !dbg !7677
  br i1 %cmp38, label %if.end45, label %if.else41, !dbg !7675

if.else41:                                        ; preds = %cond.false, %cond.true
  call void @llvm.dbg.value(metadata i8 0, metadata !7642, metadata !DIExpression()), !dbg !7646
  br label %if.end45

if.end45:                                         ; preds = %land.lhs.true, %land.lhs.true21, %lor.lhs.false, %if.else, %if.else41, %cond.false, %cond.true
  %try_int.3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ false, %if.else ], [ true, %land.lhs.true21 ], [ false, %if.else41 ], [ true, %cond.false ], [ true, %cond.true ]
  br i1 %try_int.3, label %if.then47, label %if.end70, !dbg !7678

if.then47:                                        ; preds = %if.end45
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7679
  %bf.load48 = load i32, i32* %6, align 8, !dbg !7679
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !7679
  %cmp50 = icmp eq i32 %bf.clear49, 43, !dbg !7679
  br i1 %cmp50, label %land.lhs.true52, label %if.end65, !dbg !7681

land.lhs.true52:                                  ; preds = %if.then47
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !7682
  %bf.load53 = load i32, i32* %7, align 8, !dbg !7682
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !7682
  %cmp55 = icmp eq i32 %bf.clear54, 43, !dbg !7682
  br i1 %cmp55, label %if.then57, label %if.end65, !dbg !7683

if.then57:                                        ; preds = %land.lhs.true52
  %arrayidx59 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7684
  %8 = load i8, i8* %arrayidx59, align 1, !dbg !7684
  %conv61 = zext i8 %8 to i64, !dbg !7684
  %call62 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv61) #6, !dbg !7684
  %call63 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.rtx_def* %call62, i32 1) #8, !dbg !7686
  %call64 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !7687
  br label %cleanup, !dbg !7688

if.end65:                                         ; preds = %land.lhs.true52, %if.then47
  %call66 = tail call fastcc %struct.rtx_def* @emit_move_via_integer(i32 %mode, %struct.rtx_def* %x, %struct.rtx_def* %y, i8 zeroext 1) #8, !dbg !7689
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !7643, metadata !DIExpression()), !dbg !7690
  %tobool67 = icmp eq %struct.rtx_def* %call66, null, !dbg !7691
  br label %cleanup, !dbg !7693

cleanup:                                          ; preds = %if.end65, %if.then57
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then57 ], [ %tobool67, %if.end65 ]
  %retval.0 = phi %struct.rtx_def* [ %call64, %if.then57 ], [ %call66, %if.end65 ]
  br i1 %cleanup.dest.slot.0, label %if.end70, label %cleanup72

if.end70:                                         ; preds = %cleanup, %if.end45
  %call71 = tail call %struct.rtx_def* @emit_move_complex_parts(%struct.rtx_def* %x, %struct.rtx_def* %y) #8, !dbg !7694
  br label %cleanup72, !dbg !7695

cleanup72:                                        ; preds = %cleanup, %if.end70, %if.then
  %retval.1 = phi %struct.rtx_def* [ %call1, %if.then ], [ %retval.0, %cleanup ], [ %call71, %if.end70 ], !dbg !7646
  ret %struct.rtx_def* %retval.1, !dbg !7696
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_move_via_integer(i32 %mode, %struct.rtx_def* %x, %struct.rtx_def* %y, i8 zeroext %force) unnamed_addr #4 !dbg !7697 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7701, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7702, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7703, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i8 %force, metadata !7704, metadata !DIExpression()), !dbg !7707
  %call = tail call i32 @int_mode_for_mode(i32 %mode) #6, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %call, metadata !7705, metadata !DIExpression()), !dbg !7707
  %cmp = icmp eq i32 %call, 1, !dbg !7709
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7711

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %call to i64, !dbg !7712
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom, i32 0, !dbg !7713
  %0 = load i32, i32* %insn_code, align 4, !dbg !7713
  call void @llvm.dbg.value(metadata i32 %0, metadata !7706, metadata !DIExpression()), !dbg !7707
  %cmp1 = icmp eq i32 %0, 2956, !dbg !7714
  br i1 %cmp1, label %cleanup, label %if.end3, !dbg !7716

if.end3:                                          ; preds = %if.end
  %call4 = tail call fastcc %struct.rtx_def* @emit_move_change_mode(i32 %call, i32 %mode, %struct.rtx_def* %x, i8 zeroext %force) #8, !dbg !7717
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !7702, metadata !DIExpression()), !dbg !7707
  %cmp5 = icmp eq %struct.rtx_def* %call4, null, !dbg !7718
  br i1 %cmp5, label %cleanup, label %if.end7, !dbg !7720

if.end7:                                          ; preds = %if.end3
  %call8 = tail call fastcc %struct.rtx_def* @emit_move_change_mode(i32 %call, i32 %mode, %struct.rtx_def* %y, i8 zeroext %force) #8, !dbg !7721
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call8, metadata !7703, metadata !DIExpression()), !dbg !7707
  %cmp9 = icmp eq %struct.rtx_def* %call8, null, !dbg !7722
  br i1 %cmp9, label %cleanup, label %if.end11, !dbg !7724

if.end11:                                         ; preds = %if.end7
  %idxprom12 = zext i32 %0 to i64, !dbg !7725
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom12, i32 2, !dbg !7725
  %1 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7725
  %call14 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %1(%struct.rtx_def* nonnull %call4, %struct.rtx_def* nonnull %call8) #6, !dbg !7725
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #6, !dbg !7726
  br label %cleanup, !dbg !7727

cleanup:                                          ; preds = %if.end7, %if.end3, %if.end, %entry, %if.end11
  %retval.0 = phi %struct.rtx_def* [ %call15, %if.end11 ], [ null, %entry ], [ null, %if.end ], [ null, %if.end3 ], [ null, %if.end7 ], !dbg !7707
  ret %struct.rtx_def* %retval.0, !dbg !7728
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_move_multi_word(i32 %mode, %struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !7729 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7731, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7732, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7733, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7734, metadata !DIExpression()), !dbg !7744
  %idxprom = zext i32 %mode to i64, !dbg !7745
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7745
  %0 = load i8, i8* %arrayidx, align 1, !dbg !7745
  %cmp = icmp ugt i8 %0, 3, !dbg !7745
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7745

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3300, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7745
  br label %cond.end, !dbg !7745

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call i32 @push_operand(%struct.rtx_def* %x, i32 %mode) #6, !dbg !7746
  %tobool = icmp eq i32 %call, 0, !dbg !7746
  br i1 %tobool, label %if.end, label %if.then, !dbg !7748

if.then:                                          ; preds = %cond.end
  %call3 = tail call fastcc %struct.rtx_def* @emit_move_resolve_push(i32 %mode, %struct.rtx_def* %x) #8, !dbg !7749
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !7732, metadata !DIExpression()), !dbg !7744
  br label %if.end, !dbg !7750

if.end:                                           ; preds = %cond.end, %if.then
  %x.addr.0 = phi %struct.rtx_def* [ %call3, %if.then ], [ %x, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !7732, metadata !DIExpression()), !dbg !7744
  %1 = load i32, i32* @reload_in_progress, align 4, !dbg !7751
  %tobool4 = icmp eq i32 %1, 0, !dbg !7751
  br i1 %tobool4, label %if.end18, label %land.lhs.true, !dbg !7753

land.lhs.true:                                    ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !7754
  %bf.load = load i32, i32* %2, align 8, !dbg !7754
  %bf.clear = and i32 %bf.load, 65535, !dbg !7754
  %cmp5 = icmp eq i32 %bf.clear, 43, !dbg !7754
  br i1 %cmp5, label %land.lhs.true7, label %if.end18, !dbg !7755

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7756
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !7756
  %call9 = tail call %struct.rtx_def* @find_replacement(%struct.rtx_def** nonnull %rt_rtx) #6, !dbg !7757
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !7736, metadata !DIExpression()), !dbg !7744
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7758
  %cmp14 = icmp eq %struct.rtx_def* %call9, %3, !dbg !7759
  br i1 %cmp14, label %if.end18, label %if.then16, !dbg !7760

if.then16:                                        ; preds = %land.lhs.true7
  %call17 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %call9) #6, !dbg !7761
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17, metadata !7732, metadata !DIExpression()), !dbg !7744
  br label %if.end18, !dbg !7762

if.end18:                                         ; preds = %land.lhs.true7, %if.end, %if.then16, %land.lhs.true
  %x.addr.1 = phi %struct.rtx_def* [ %call17, %if.then16 ], [ %x.addr.0, %land.lhs.true7 ], [ %x.addr.0, %land.lhs.true ], [ %x.addr.0, %if.end ], !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1, metadata !7732, metadata !DIExpression()), !dbg !7744
  %4 = load i32, i32* @reload_in_progress, align 4, !dbg !7763
  %tobool19 = icmp eq i32 %4, 0, !dbg !7763
  br i1 %tobool19, label %if.end39, label %land.lhs.true20, !dbg !7765

land.lhs.true20:                                  ; preds = %if.end18
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !7766
  %bf.load21 = load i32, i32* %5, align 8, !dbg !7766
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !7766
  %cmp23 = icmp eq i32 %bf.clear22, 43, !dbg !7766
  br i1 %cmp23, label %land.lhs.true25, label %if.end39, !dbg !7767

land.lhs.true25:                                  ; preds = %land.lhs.true20
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7768
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !7768
  %call30 = tail call %struct.rtx_def* @find_replacement(%struct.rtx_def** nonnull %rt_rtx29) #6, !dbg !7769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !7736, metadata !DIExpression()), !dbg !7744
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !7770
  %cmp35 = icmp eq %struct.rtx_def* %call30, %6, !dbg !7771
  br i1 %cmp35, label %if.end39, label %if.then37, !dbg !7772

if.then37:                                        ; preds = %land.lhs.true25
  %call38 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %y, %struct.rtx_def* %call30) #6, !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !7733, metadata !DIExpression()), !dbg !7744
  br label %if.end39, !dbg !7774

if.end39:                                         ; preds = %land.lhs.true25, %if.end18, %if.then37, %land.lhs.true20
  %y.addr.0 = phi %struct.rtx_def* [ %call38, %if.then37 ], [ %y, %land.lhs.true25 ], [ %y, %land.lhs.true20 ], [ %y, %if.end18 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0, metadata !7733, metadata !DIExpression()), !dbg !7744
  tail call void @start_sequence() #6, !dbg !7775
  call void @llvm.dbg.value(metadata i8 0, metadata !7737, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 0, metadata !7738, metadata !DIExpression()), !dbg !7744
  br label %for.cond, !dbg !7776

for.cond:                                         ; preds = %cleanup, %if.end39
  %i.0 = phi i32 [ 0, %if.end39 ], [ %inc, %cleanup ], !dbg !7777
  %need_clobber.0 = phi i8 [ 0, %if.end39 ], [ %need_clobber.1, %cleanup ], !dbg !7778
  %last_insn.0 = phi %struct.rtx_def* [ null, %if.end39 ], [ %last_insn.1, %cleanup ], !dbg !7779
  %y.addr.1 = phi %struct.rtx_def* [ %y.addr.0, %if.end39 ], [ %y.addr.3, %cleanup ], !dbg !7780
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.1, metadata !7733, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0, metadata !7734, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8 %need_clobber.0, metadata !7737, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7738, metadata !DIExpression()), !dbg !7744
  %7 = load i8, i8* %arrayidx, align 1, !dbg !7781
  %conv43 = zext i8 %7 to i32, !dbg !7781
  %add = add nuw nsw i32 %conv43, 3, !dbg !7782
  %div = lshr i32 %add, 2, !dbg !7783
  %cmp44 = icmp ult i32 %i.0, %div, !dbg !7784
  br i1 %cmp44, label %for.body, label %for.end, !dbg !7785

for.body:                                         ; preds = %for.cond
  %call46 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %x.addr.1, i32 %i.0, i32 1, i32 %mode) #6, !dbg !7786
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call46, metadata !7739, metadata !DIExpression()), !dbg !7787
  %call47 = tail call fastcc zeroext i8 @undefined_operand_subword_p(%struct.rtx_def* %y.addr.1, i32 %i.0) #8, !dbg !7788
  %tobool48 = icmp eq i8 %call47, 0, !dbg !7788
  br i1 %tobool48, label %if.end50, label %cleanup, !dbg !7790

if.end50:                                         ; preds = %for.body
  %call51 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %y.addr.1, i32 %i.0, i32 1, i32 %mode) #6, !dbg !7791
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call51, metadata !7743, metadata !DIExpression()), !dbg !7787
  %cond = icmp eq %struct.rtx_def* %call51, null, !dbg !7792
  br i1 %cond, label %land.lhs.true54, label %if.end70, !dbg !7792

land.lhs.true54:                                  ; preds = %if.end50
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.1, i64 0, i32 0, !dbg !7794
  %bf.load55 = load i32, i32* %8, align 8, !dbg !7794
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !7794
  %idxprom57 = zext i32 %bf.clear56 to i64, !dbg !7794
  %arrayidx58 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom57, !dbg !7794
  %9 = load i32, i32* %arrayidx58, align 4, !dbg !7794
  %cmp59 = icmp eq i32 %9, 9, !dbg !7794
  br i1 %cmp59, label %if.then61, label %if.else, !dbg !7795

if.then61:                                        ; preds = %land.lhs.true54
  %call62 = tail call %struct.rtx_def* @force_const_mem(i32 %mode, %struct.rtx_def* %y.addr.1) #6, !dbg !7796
  %call63 = tail call %struct.rtx_def* @use_anchored_address(%struct.rtx_def* %call62) #6, !dbg !7798
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call63, metadata !7733, metadata !DIExpression()), !dbg !7744
  %call64 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %call63, i32 %i.0, i32 1, i32 %mode) #6, !dbg !7799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !7743, metadata !DIExpression()), !dbg !7787
  br label %if.end70, !dbg !7800

if.else:                                          ; preds = %land.lhs.true54
  br i1 true, label %if.then67, label %if.else.if.end70_crit_edge, !dbg !7801

if.else.if.end70_crit_edge:                       ; preds = %if.else
  br label %if.end70, !dbg !7801

if.then67:                                        ; preds = %if.else
  %call68 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %y.addr.1, i32 %i.0, i32 %mode) #6, !dbg !7802
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call68, metadata !7743, metadata !DIExpression()), !dbg !7787
  br label %if.end70, !dbg !7804

if.end70:                                         ; preds = %if.else.if.end70_crit_edge, %if.end50, %if.then67, %if.then61
  %ypart.1 = phi %struct.rtx_def* [ %call64, %if.then61 ], [ %call68, %if.then67 ], [ undef, %if.else.if.end70_crit_edge ], [ %call51, %if.end50 ], !dbg !7805
  %y.addr.2 = phi %struct.rtx_def* [ %call63, %if.then61 ], [ %y.addr.1, %if.then67 ], [ undef, %if.else.if.end70_crit_edge ], [ %y.addr.1, %if.end50 ], !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2, metadata !7733, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %ypart.1, metadata !7743, metadata !DIExpression()), !dbg !7787
  %tobool71 = icmp ne %struct.rtx_def* %call46, null, !dbg !7806
  %tobool73 = icmp ne %struct.rtx_def* %ypart.1, null, !dbg !7806
  %or.cond = and i1 %tobool71, %tobool73, !dbg !7806
  br i1 %or.cond, label %cond.end76, label %cond.true74, !dbg !7806

cond.true74:                                      ; preds = %if.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3344, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7806
  br label %cond.end76, !dbg !7806

cond.end76:                                       ; preds = %if.end70, %cond.true74
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call46, i64 0, i32 0, !dbg !7807
  %bf.load78 = load i32, i32* %10, align 8, !dbg !7807
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !7807
  %cmp80 = icmp eq i32 %bf.clear79, 39, !dbg !7808
  %conv81 = zext i1 %cmp80 to i8, !dbg !7808
  %or = or i8 %need_clobber.0, %conv81, !dbg !7809
  call void @llvm.dbg.value(metadata i8 %or, metadata !7737, metadata !DIExpression()), !dbg !7744
  %call84 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call46, %struct.rtx_def* %ypart.1) #8, !dbg !7810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !7734, metadata !DIExpression()), !dbg !7744
  br label %cleanup, !dbg !7811

cleanup:                                          ; preds = %for.body, %cond.end76
  %need_clobber.1 = phi i8 [ %or, %cond.end76 ], [ %need_clobber.0, %for.body ], !dbg !7744
  %last_insn.1 = phi %struct.rtx_def* [ %call84, %cond.end76 ], [ %last_insn.0, %for.body ], !dbg !7744
  %y.addr.3 = phi %struct.rtx_def* [ %y.addr.2, %cond.end76 ], [ %y.addr.1, %for.body ], !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.3, metadata !7733, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.1, metadata !7734, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8 %need_clobber.1, metadata !7737, metadata !DIExpression()), !dbg !7744
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7738, metadata !DIExpression()), !dbg !7744
  br label %for.cond, !dbg !7813, !llvm.loop !7814

for.end:                                          ; preds = %for.cond
  %need_clobber.0.lcssa = phi i8 [ %need_clobber.0, %for.cond ], !dbg !7778
  %last_insn.0.lcssa = phi %struct.rtx_def* [ %last_insn.0, %for.cond ], !dbg !7779
  %y.addr.1.lcssa = phi %struct.rtx_def* [ %y.addr.1, %for.cond ], !dbg !7780
  call void @llvm.dbg.value(metadata i8 %need_clobber.0.lcssa, metadata !7737, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !7734, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.1.lcssa, metadata !7733, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8 %need_clobber.0.lcssa, metadata !7737, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !7734, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.1.lcssa, metadata !7733, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8 %need_clobber.0.lcssa, metadata !7737, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0.lcssa, metadata !7734, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.1.lcssa, metadata !7733, metadata !DIExpression()), !dbg !7744
  %call86 = tail call %struct.rtx_def* @get_insns() #6, !dbg !7816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !7735, metadata !DIExpression()), !dbg !7744
  tail call void @end_sequence() #6, !dbg !7817
  %cmp87 = icmp ne %struct.rtx_def* %x.addr.1, %y.addr.1.lcssa, !dbg !7818
  %11 = load i32, i32* @reload_in_progress, align 4, !dbg !7820
  %12 = load i32, i32* @reload_completed, align 4, !dbg !7821
  %13 = or i32 %11, %12, !dbg !7822
  %14 = icmp eq i32 %13, 0, !dbg !7822
  %or.cond2.not = and i1 %cmp87, %14, !dbg !7822
  %cmp94 = icmp ne i8 %need_clobber.0.lcssa, 0, !dbg !7823
  %or.cond3 = and i1 %or.cond2.not, %cmp94, !dbg !7822
  br i1 %or.cond3, label %if.then96, label %if.end98, !dbg !7822

if.then96:                                        ; preds = %for.end
  %call97 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %x.addr.1) #6, !dbg !7824
  br label %if.end98, !dbg !7824

if.end98:                                         ; preds = %for.end, %if.then96
  %call99 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call86) #6, !dbg !7825
  ret %struct.rtx_def* %last_insn.0.lcssa, !dbg !7826
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_move_ccmode(i32 %mode, %struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !7827 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7829, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7830, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7831, metadata !DIExpression()), !dbg !7836
  %cmp = icmp eq i32 %mode, 2, !dbg !7837
  br i1 %cmp, label %if.end6, label %if.then, !dbg !7838

if.then:                                          ; preds = %entry
  %0 = load i32, i32* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 2, i32 0), align 8, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %0, metadata !7833, metadata !DIExpression()), !dbg !7840
  %cmp1 = icmp eq i32 %0, 2956, !dbg !7841
  br i1 %cmp1, label %cleanup, label %if.then2, !dbg !7843

if.then2:                                         ; preds = %if.then
  %call = tail call fastcc %struct.rtx_def* @emit_move_change_mode(i32 2, i32 %mode, %struct.rtx_def* %x, i8 zeroext 1) #8, !dbg !7844
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7830, metadata !DIExpression()), !dbg !7836
  %call3 = tail call fastcc %struct.rtx_def* @emit_move_change_mode(i32 2, i32 %mode, %struct.rtx_def* %y, i8 zeroext 1) #8, !dbg !7846
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !7831, metadata !DIExpression()), !dbg !7836
  %idxprom = zext i32 %0 to i64, !dbg !7847
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 2, !dbg !7847
  %1 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !7847
  %call4 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %1(%struct.rtx_def* %call, %struct.rtx_def* %call3) #6, !dbg !7847
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4) #6, !dbg !7848
  br label %cleanup, !dbg !7849

cleanup:                                          ; preds = %if.then, %if.then2
  %y.addr.0 = phi %struct.rtx_def* [ %call3, %if.then2 ], [ %y, %if.then ]
  %x.addr.0 = phi %struct.rtx_def* [ %call, %if.then2 ], [ %x, %if.then ]
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then2 ], [ true, %if.then ]
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.then2 ], [ undef, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !7830, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0, metadata !7831, metadata !DIExpression()), !dbg !7836
  br i1 %cleanup.dest.slot.0, label %if.end6, label %cleanup9

if.end6:                                          ; preds = %entry, %cleanup
  %y.addr.1 = phi %struct.rtx_def* [ %y, %entry ], [ %y.addr.0, %cleanup ]
  %x.addr.1 = phi %struct.rtx_def* [ %x, %entry ], [ %x.addr.0, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1, metadata !7830, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.1, metadata !7831, metadata !DIExpression()), !dbg !7836
  %call7 = tail call fastcc %struct.rtx_def* @emit_move_via_integer(i32 %mode, %struct.rtx_def* %x.addr.1, %struct.rtx_def* %y.addr.1, i8 zeroext 0) #8, !dbg !7850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call7, metadata !7832, metadata !DIExpression()), !dbg !7836
  %cmp8 = icmp eq %struct.rtx_def* %call7, null, !dbg !7851
  br i1 %cmp8, label %cond.true, label %cleanup9, !dbg !7851

cond.true:                                        ; preds = %if.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3251, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7851
  br label %cleanup9, !dbg !7851

cleanup9:                                         ; preds = %if.end6, %cond.true, %cleanup
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ %call7, %if.end6 ], [ null, %cond.true ], !dbg !7836
  ret %struct.rtx_def* %retval.1, !dbg !7852
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @compress_float_constant(%struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !7853 {
entry:
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7855, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !7856, metadata !DIExpression()), !dbg !7870
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7871
  %bf.load = load i32, i32* %0, align 8, !dbg !7871
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7871
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7857, metadata !DIExpression()), !dbg !7870
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !7872
  %bf.load1 = load i32, i32* %1, align 8, !dbg !7872
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !7872
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %bf.clear3, metadata !7858, metadata !DIExpression()), !dbg !7870
  %2 = bitcast %struct.real_value* %r to i8*, !dbg !7873
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7873
  %call = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !7874
  call void @llvm.dbg.value(metadata i8 %call, metadata !7863, metadata !DIExpression()), !dbg !7870
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, !dbg !7875
  %3 = bitcast %union.u* %u to i8*, !dbg !7875
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 32, i1 false), !dbg !7875
  %call4 = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %y) #6, !dbg !7876
  %tobool = icmp eq i8 %call4, 0, !dbg !7876
  br i1 %tobool, label %if.else, label %if.then, !dbg !7878

if.then:                                          ; preds = %entry
  %call5 = tail call i32 @rtx_cost(%struct.rtx_def* %y, i32 23, i8 zeroext %call) #6, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %call5, metadata !7861, metadata !DIExpression()), !dbg !7870
  br label %if.end, !dbg !7880

if.else:                                          ; preds = %entry
  %call6 = tail call %struct.rtx_def* @force_const_mem(i32 %bf.clear, %struct.rtx_def* %y) #6, !dbg !7881
  %call7 = tail call i32 @rtx_cost(%struct.rtx_def* %call6, i32 23, i8 zeroext %call) #6, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %call7, metadata !7861, metadata !DIExpression()), !dbg !7870
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %oldcost.0 = phi i32 [ %call5, %if.then ], [ %call7, %if.else ], !dbg !7883
  call void @llvm.dbg.value(metadata i32 %oldcost.0, metadata !7861, metadata !DIExpression()), !dbg !7870
  %idxprom = zext i32 %bf.clear3 to i64, !dbg !7884
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7884
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7884
  %idxprom8 = zext i8 %4 to i64, !dbg !7884
  %arrayidx9 = getelementptr inbounds [18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 %idxprom8, !dbg !7884
  %idxprom39 = zext i32 %bf.clear to i64, !dbg !7885
  br label %for.cond, !dbg !7888

for.cond:                                         ; preds = %for.inc, %if.end
  %srcmode.0.in.in = phi i8* [ %arrayidx9, %if.end ], [ %arrayidx68, %for.inc ]
  %retval.0 = phi %struct.rtx_def* [ undef, %if.end ], [ %retval.1, %for.inc ]
  %srcmode.0.in = load i8, i8* %srcmode.0.in.in, align 1, !dbg !7889
  %srcmode.0 = zext i8 %srcmode.0.in to i32, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %srcmode.0, metadata !7859, metadata !DIExpression()), !dbg !7870
  %cmp = icmp eq i32 %bf.clear3, %srcmode.0, !dbg !7890
  br i1 %cmp, label %cleanup70, label %for.body, !dbg !7891

for.body:                                         ; preds = %for.cond
  %call12 = call i32 @can_extend_p(i32 %bf.clear, i32 %srcmode.0, i32 0) #6, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %call12, metadata !7864, metadata !DIExpression()), !dbg !7893
  %cmp13 = icmp eq i32 %call12, 2956, !dbg !7894
  br i1 %cmp13, label %cleanup, label %if.end16, !dbg !7896

if.end16:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !7860, metadata !DIExpression(DW_OP_deref)), !dbg !7870
  %call17 = call zeroext i8 @exact_real_truncate(i32 %srcmode.0, %struct.real_value* nonnull %r) #6, !dbg !7897
  %tobool18 = icmp eq i8 %call17, 0, !dbg !7897
  br i1 %tobool18, label %cleanup, label %if.end20, !dbg !7899

if.end20:                                         ; preds = %if.end16
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !7860, metadata !DIExpression(DW_OP_deref)), !dbg !7870
  %call21 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* nonnull byval(%struct.real_value) align 8 %r, i32 %srcmode.0) #6, !dbg !7900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !7868, metadata !DIExpression()), !dbg !7893
  %call22 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %call21) #6, !dbg !7901
  %tobool23 = icmp eq i8 %call22, 0, !dbg !7901
  br i1 %tobool23, label %if.else38, label %if.then24, !dbg !7902

if.then24:                                        ; preds = %if.end20
  %idxprom25 = zext i32 %call12 to i64, !dbg !7903
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom25, i32 3, !dbg !7906
  %5 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7906
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %5, i64 1, i32 0, !dbg !7907
  %6 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !7907
  %call28 = call i32 %6(%struct.rtx_def* %call21, i32 %srcmode.0) #6, !dbg !7908
  %tobool29 = icmp eq i32 %call28, 0, !dbg !7908
  br i1 %tobool29, label %cleanup, label %if.end31, !dbg !7909

if.end31:                                         ; preds = %if.then24
  %call32 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 101, i32 %bf.clear, %struct.rtx_def* %call21) #6, !dbg !7910
  %call33 = call i32 @rtx_cost(%struct.rtx_def* %call32, i32 23, i8 zeroext %call) #6, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %call33, metadata !7862, metadata !DIExpression()), !dbg !7870
  %cmp34 = icmp slt i32 %oldcost.0, %call33, !dbg !7912
  br i1 %cmp34, label %cleanup, label %if.end55, !dbg !7914

if.else38:                                        ; preds = %if.end20
  %idxprom41 = zext i8 %srcmode.0.in to i64, !dbg !7915
  %arrayidx42 = getelementptr inbounds [87 x [87 x i8]], [87 x [87 x i8]]* @float_extend_from_mem, i64 0, i64 %idxprom39, i64 %idxprom41, !dbg !7915
  %7 = load i8, i8* %arrayidx42, align 1, !dbg !7915
  %tobool43 = icmp eq i8 %7, 0, !dbg !7915
  br i1 %tobool43, label %cleanup, label %if.then44, !dbg !7916

if.then44:                                        ; preds = %if.else38
  %call45 = call %struct.rtx_def* @force_const_mem(i32 %srcmode.0, %struct.rtx_def* %call21) #6, !dbg !7917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !7868, metadata !DIExpression()), !dbg !7893
  %call46 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 101, i32 %bf.clear, %struct.rtx_def* %call45) #6, !dbg !7919
  %call47 = call i32 @rtx_cost(%struct.rtx_def* %call46, i32 23, i8 zeroext %call) #6, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %call47, metadata !7862, metadata !DIExpression()), !dbg !7870
  %cmp48 = icmp slt i32 %oldcost.0, %call47, !dbg !7921
  br i1 %cmp48, label %cleanup, label %if.end51, !dbg !7923

if.end51:                                         ; preds = %if.then44
  %call52 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call45) #6, !dbg !7924
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !7868, metadata !DIExpression()), !dbg !7893
  br label %if.end55

if.end55:                                         ; preds = %if.end31, %if.end51
  %trunc_y.0 = phi %struct.rtx_def* [ %call52, %if.end51 ], [ %call21, %if.end31 ], !dbg !7893
  call void @llvm.dbg.value(metadata %struct.rtx_def* %trunc_y.0, metadata !7868, metadata !DIExpression()), !dbg !7893
  %call56 = call %struct.rtx_def* @force_reg(i32 %srcmode.0, %struct.rtx_def* %trunc_y.0) #6, !dbg !7925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !7868, metadata !DIExpression()), !dbg !7893
  call void @emit_unop_insn(i32 %call12, %struct.rtx_def* %x, %struct.rtx_def* %call56, i32 0) #6, !dbg !7926
  %call57 = call %struct.rtx_def* @get_last_insn() #6, !dbg !7927
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call57, metadata !7869, metadata !DIExpression()), !dbg !7893
  %bf.load58 = load i32, i32* %0, align 8, !dbg !7928
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !7928
  %cmp60 = icmp eq i32 %bf.clear59, 37, !dbg !7928
  br i1 %cmp60, label %if.then62, label %cleanup, !dbg !7930

if.then62:                                        ; preds = %if.end55
  %call63 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call57, i32 4, %struct.rtx_def* %y) #6, !dbg !7931
  br label %cleanup, !dbg !7931

cleanup:                                          ; preds = %if.then24, %if.else38, %if.end16, %if.end55, %if.then62, %if.then44, %if.end31, %for.body
  %cleanup.dest.slot.0 = phi i1 [ true, %for.body ], [ true, %if.end16 ], [ true, %if.then24 ], [ true, %if.end31 ], [ true, %if.then44 ], [ true, %if.else38 ], [ false, %if.then62 ], [ false, %if.end55 ]
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %for.body ], [ %retval.0, %if.end16 ], [ %retval.0, %if.then24 ], [ %retval.0, %if.end31 ], [ %retval.0, %if.then44 ], [ %retval.0, %if.else38 ], [ %call57, %if.then62 ], [ %call57, %if.end55 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup70

for.inc:                                          ; preds = %cleanup
  %idxprom67 = zext i8 %srcmode.0.in to i64, !dbg !7932
  %arrayidx68 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom67, !dbg !7932
  br label %for.cond, !dbg !7933, !llvm.loop !7934

cleanup70:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi %struct.rtx_def* [ %retval.1, %cleanup ], [ null, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #7, !dbg !7936
  ret %struct.rtx_def* %retval.2, !dbg !7936
}

declare dso_local %struct.rtx_def* @use_anchored_address(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local i32 @push_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @push_block(%struct.rtx_def* %size, i32 %extra, i32 %below) local_unnamed_addr #4 !dbg !7937 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7941, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i32 %extra, metadata !7942, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i32 %below, metadata !7943, metadata !DIExpression()), !dbg !7945
  %0 = load i32, i32* @ptr_mode, align 4, !dbg !7946
  %call = tail call %struct.rtx_def* @convert_modes(i32 16, i32 %0, %struct.rtx_def* %size, i32 1) #8, !dbg !7947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7941, metadata !DIExpression()), !dbg !7945
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !7948
  %bf.load = load i32, i32* %1, align 8, !dbg !7948
  %bf.clear = and i32 %bf.load, 65535, !dbg !7948
  %idxprom = zext i32 %bf.clear to i64, !dbg !7948
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7948
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7948
  %cmp = icmp eq i32 %2, 9, !dbg !7948
  br i1 %cmp, label %if.then, label %if.else, !dbg !7950

if.then:                                          ; preds = %entry
  %conv = sext i32 %extra to i64, !dbg !7951
  %call1 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call, i64 %conv) #6, !dbg !7952
  tail call void @anti_adjust_stack(%struct.rtx_def* %call1) #6, !dbg !7953
  br label %if.end18, !dbg !7953

if.else:                                          ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 37, !dbg !7954
  %cmp6 = icmp eq i32 %extra, 0, !dbg !7956
  %or.cond = and i1 %cmp4, %cmp6, !dbg !7957
  br i1 %or.cond, label %if.then8, label %if.else9, !dbg !7957

if.then8:                                         ; preds = %if.else
  tail call void @anti_adjust_stack(%struct.rtx_def* %call) #6, !dbg !7958
  br label %if.end18, !dbg !7958

if.else9:                                         ; preds = %if.else
  %call10 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 16, %struct.rtx_def* %call) #6, !dbg !7959
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !7944, metadata !DIExpression()), !dbg !7945
  br i1 %cmp6, label %if.end, label %if.then13, !dbg !7961

if.then13:                                        ; preds = %if.else9
  %conv14 = sext i32 %extra to i64, !dbg !7962
  %call15 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv14) #6, !dbg !7962
  %call16 = tail call %struct.rtx_def* @expand_binop(i32 16, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.rtx_def* %call10, %struct.rtx_def* %call15, %struct.rtx_def* %call10, i32 0, i32 3) #6, !dbg !7964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !7944, metadata !DIExpression()), !dbg !7945
  br label %if.end, !dbg !7965

if.end:                                           ; preds = %if.else9, %if.then13
  %temp.0 = phi %struct.rtx_def* [ %call16, %if.then13 ], [ %call10, %if.else9 ], !dbg !7966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !7944, metadata !DIExpression()), !dbg !7945
  tail call void @anti_adjust_stack(%struct.rtx_def* %temp.0) #6, !dbg !7967
  br label %if.end18

if.end18:                                         ; preds = %if.then8, %if.end, %if.then
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !7968
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7944, metadata !DIExpression()), !dbg !7945
  %cmp19 = icmp ne i32 %extra, 0, !dbg !7971
  %tobool = icmp ne i32 %below, 0, !dbg !7973
  %or.cond1 = and i1 %cmp19, %tobool, !dbg !7974
  br i1 %or.cond1, label %if.then22, label %if.end25, !dbg !7974

if.then22:                                        ; preds = %if.end18
  %conv23 = sext i32 %extra to i64, !dbg !7975
  %call24 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %3, i64 %conv23) #6, !dbg !7976
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !7944, metadata !DIExpression()), !dbg !7945
  br label %if.end25, !dbg !7977

if.end25:                                         ; preds = %if.then22, %if.end18
  %temp.1 = phi %struct.rtx_def* [ %call24, %if.then22 ], [ %3, %if.end18 ], !dbg !7978
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !7944, metadata !DIExpression()), !dbg !7945
  %4 = load i8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), align 2, !dbg !7979
  %conv26 = zext i8 %4 to i32, !dbg !7979
  %call27 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %conv26, %struct.rtx_def* %temp.1, i8 zeroext 0) #6, !dbg !7979
  ret %struct.rtx_def* %call27, !dbg !7980
}

declare dso_local void @anti_adjust_stack(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_binop(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @emit_push_insn(%struct.rtx_def* %x, i32 %mode, %union.tree_node* %type, %struct.rtx_def* %size, i32 %align, i32 %partial, %struct.rtx_def* %reg, i32 %extra, %struct.rtx_def* %args_addr, %struct.rtx_def* %args_so_far, i32 %reg_parm_stack_space, %struct.rtx_def* %alignment_pad) local_unnamed_addr #4 !dbg !7981 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7985, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 %mode, metadata !7986, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7987, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7988, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 %align, metadata !7989, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 %partial, metadata !7990, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !7991, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 %extra, metadata !7992, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %args_addr, metadata !7993, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %args_so_far, metadata !7994, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 %reg_parm_stack_space, metadata !7995, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %alignment_pad, metadata !7996, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 2, metadata !7998, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 1, metadata !7999, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7997, metadata !DIExpression()), !dbg !8020
  %cmp = icmp eq i32 %mode, 1, !dbg !8021
  br i1 %cmp, label %if.then, label %if.else171, !dbg !8022

if.then:                                          ; preds = %entry
  %rem = srem i32 %partial, 4, !dbg !8023
  call void @llvm.dbg.value(metadata i32 %rem, metadata !8004, metadata !DIExpression()), !dbg !8024
  %sub = sub nsw i32 %partial, %rem, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %sub, metadata !8003, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size, metadata !7988, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7997, metadata !DIExpression()), !dbg !8020
  %tobool = icmp eq %struct.rtx_def* %size, null, !dbg !8026
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8026

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 3793, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8026
  br label %cond.end, !dbg !8026

cond.end:                                         ; preds = %if.then, %cond.true
  %cmp10 = icmp eq i32 %partial, 0, !dbg !8027
  br i1 %cmp10, label %if.end15, label %if.then12, !dbg !8029

if.then12:                                        ; preds = %cond.end
  %conv13 = sext i32 %sub to i64, !dbg !8030
  %call14 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %x, i32 1, i64 %conv13, i32 1, i32 1) #6, !dbg !8030
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !7997, metadata !DIExpression()), !dbg !8020
  br label %if.end15, !dbg !8031

if.end15:                                         ; preds = %cond.end, %if.then12
  %xinner.2 = phi %struct.rtx_def* [ %call14, %if.then12 ], [ %x, %cond.end ], !dbg !8020
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xinner.2, metadata !7997, metadata !DIExpression()), !dbg !8020
  %cmp16 = icmp eq i32 %reg_parm_stack_space, 0, !dbg !8032
  %.sub = select i1 %cmp16, i32 0, i32 %sub, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %.sub, metadata !8005, metadata !DIExpression()), !dbg !8024
  %cmp22 = icmp eq %struct.rtx_def* %args_addr, null, !dbg !8034
  br i1 %cmp22, label %land.lhs.true, label %if.else, !dbg !8035

land.lhs.true:                                    ; preds = %if.end15
  %0 = load i32, i32* @target_flags, align 4, !dbg !8036
  %and = and i32 %0, 8192, !dbg !8036
  %cmp24 = icmp eq i32 %and, 0, !dbg !8036
  br i1 %cmp24, label %land.lhs.true26, label %if.else, !dbg !8036

land.lhs.true26:                                  ; preds = %land.lhs.true
  %and27 = and i32 %0, 4, !dbg !8036
  %cmp28 = icmp eq i32 %and27, 0, !dbg !8036
  br i1 %cmp28, label %lor.lhs.false, label %if.else, !dbg !8036

lor.lhs.false:                                    ; preds = %land.lhs.true26
  %call30 = tail call i32 @ix86_cfun_abi() #6, !dbg !8036
  %cmp31 = icmp eq i32 %call30, 1, !dbg !8036
  br i1 %cmp31, label %if.else, label %land.lhs.true33, !dbg !8037

land.lhs.true33:                                  ; preds = %lor.lhs.false
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !8038
  %bf.load34 = load i32, i32* %1, align 8, !dbg !8038
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !8038
  %cmp36 = icmp eq i32 %bf.clear35, 30, !dbg !8038
  %cmp39 = icmp eq i32 %.sub, 0, !dbg !8039
  %or.cond = and i1 %cmp36, %cmp39, !dbg !8040
  br i1 %or.cond, label %land.lhs.true41, label %if.else, !dbg !8040

land.lhs.true41:                                  ; preds = %land.lhs.true33
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %xinner.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8041
  %rt_mem = bitcast %union.rtunion_def* %2 to %struct.mem_attrs**, !dbg !8041
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8041
  %cmp43 = icmp eq %struct.mem_attrs* %3, null, !dbg !8041
  br i1 %cmp43, label %cond.end52, label %cond.true45, !dbg !8041

cond.true45:                                      ; preds = %land.lhs.true41
  %align50 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 4, !dbg !8041
  %4 = load i32, i32* %align50, align 4, !dbg !8041
  br label %cond.end52, !dbg !8041

cond.end52:                                       ; preds = %land.lhs.true41, %cond.true45
  %cond53 = phi i32 [ %4, %cond.true45 ], [ 8, %land.lhs.true41 ], !dbg !8041
  %cmp54 = icmp ult i32 %cond53, %align, !dbg !8042
  br i1 %cmp54, label %if.else, label %land.lhs.true56, !dbg !8043

land.lhs.true56:                                  ; preds = %cond.end52
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !8044
  %arrayidx58 = bitcast %union.u* %u57 to i64*, !dbg !8044
  %5 = load i64, i64* %arrayidx58, align 8, !dbg !8044
  %conv59 = trunc i64 %5 to i32, !dbg !8044
  %sub60 = sub i32 %conv59, %sub, !dbg !8044
  %conv61 = zext i32 %sub60 to i64, !dbg !8044
  %call62 = tail call fastcc i64 @move_by_pieces_ninsns(i64 %conv61, i32 %align, i32 5) #8, !dbg !8044
  %call63 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !8044
  %tobool65 = icmp eq i8 %call63, 0, !dbg !8044
  br i1 %tobool65, label %cond.end68, label %cond.true66, !dbg !8044

cond.true66:                                      ; preds = %land.lhs.true56
  %6 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !8044
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %6, i64 0, i32 10, !dbg !8044
  %7 = load i32, i32* %move_ratio, align 4, !dbg !8044
  %phitmp = zext i32 %7 to i64, !dbg !8044
  br label %cond.end68, !dbg !8044

cond.end68:                                       ; preds = %land.lhs.true56, %cond.true66
  %cond69 = phi i64 [ %phitmp, %cond.true66 ], [ 3, %land.lhs.true56 ]
  %cmp71 = icmp ult i64 %call62, %cond69, !dbg !8044
  br i1 %cmp71, label %land.lhs.true73, label %if.else, !dbg !8045

land.lhs.true73:                                  ; preds = %cond.end68
  %8 = load i64, i64* %arrayidx58, align 8, !dbg !8046
  %add = add nsw i64 %8, 3, !dbg !8046
  %and77 = and i64 %add, -4, !dbg !8046
  %cmp81 = icmp eq i64 %and77, %8, !dbg !8047
  br i1 %cmp81, label %if.then83, label %if.else, !dbg !8048

if.then83:                                        ; preds = %land.lhs.true73
  %tobool84 = icmp eq i32 %extra, 0, !dbg !8049
  br i1 %tobool84, label %if.end97, label %if.then94, !dbg !8052

if.then94:                                        ; preds = %if.then83
  %conv95 = sext i32 %extra to i64, !dbg !8053
  %call96 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv95) #6, !dbg !8053
  tail call void @anti_adjust_stack(%struct.rtx_def* %call96) #6, !dbg !8054
  %.pre = load i64, i64* %arrayidx58, align 8, !dbg !8055
  br label %if.end97, !dbg !8054

if.end97:                                         ; preds = %if.then83, %if.then94
  %9 = phi i64 [ %.pre, %if.then94 ], [ %8, %if.then83 ], !dbg !8055
  %conv101 = sext i32 %sub to i64, !dbg !8056
  %sub102 = sub nsw i64 %9, %conv101, !dbg !8057
  %call103 = tail call %struct.rtx_def* @move_by_pieces(%struct.rtx_def* null, %struct.rtx_def* %xinner.2, i64 %sub102, i32 %align, i32 0) #8, !dbg !8058
  br label %if.end310, !dbg !8059

if.else:                                          ; preds = %cond.end52, %land.lhs.true26, %land.lhs.true73, %cond.end68, %land.lhs.true33, %lor.lhs.false, %land.lhs.true, %if.end15
  br i1 %cmp10, label %if.end125, label %if.then106, !dbg !8060

if.then106:                                       ; preds = %if.else
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 0, !dbg !8061
  %bf.load107 = load i32, i32* %10, align 8, !dbg !8061
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !8061
  %cmp109 = icmp eq i32 %bf.clear108, 30, !dbg !8061
  br i1 %cmp109, label %if.then111, label %if.else118, !dbg !8065

if.then111:                                       ; preds = %if.then106
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %size, i64 0, i32 1, !dbg !8066
  %arrayidx114 = bitcast %union.u* %u112 to i64*, !dbg !8066
  %11 = load i64, i64* %arrayidx114, align 8, !dbg !8066
  %conv115 = sext i32 %sub to i64, !dbg !8066
  %sub116 = sub nsw i64 %11, %conv115, !dbg !8066
  %call117 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub116) #6, !dbg !8066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call117, metadata !7988, metadata !DIExpression()), !dbg !8020
  br label %if.end125, !dbg !8067

if.else118:                                       ; preds = %if.then106
  %bf.lshr = lshr i32 %bf.load107, 16, !dbg !8068
  %bf.clear120 = and i32 %bf.lshr, 255, !dbg !8068
  %conv121 = sext i32 %sub to i64, !dbg !8069
  %call122 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv121) #6, !dbg !8069
  %call123 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear120, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %size, %struct.rtx_def* %call122, %struct.rtx_def* null, i32 0, i32 3) #6, !dbg !8070
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call123, metadata !7988, metadata !DIExpression()), !dbg !8020
  br label %if.end125

if.end125:                                        ; preds = %if.else, %if.then111, %if.else118
  %size.addr.2 = phi %struct.rtx_def* [ %size, %if.else ], [ %call117, %if.then111 ], [ %call123, %if.else118 ], !dbg !8024
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.addr.2, metadata !7988, metadata !DIExpression()), !dbg !8020
  br i1 %cmp22, label %if.then127, label %if.else131, !dbg !8071

if.then127:                                       ; preds = %if.end125
  %call130 = tail call %struct.rtx_def* @push_block(%struct.rtx_def* %size.addr.2, i32 %extra, i32 0) #8, !dbg !8072
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call130, metadata !8000, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 0, metadata !7992, metadata !DIExpression()), !dbg !8020
  br label %if.end150, !dbg !8075

if.else131:                                       ; preds = %if.end125
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %args_so_far, i64 0, i32 0, !dbg !8076
  %bf.load132 = load i32, i32* %12, align 8, !dbg !8076
  %bf.clear133 = and i32 %bf.load132, 65535, !dbg !8076
  %cmp134 = icmp eq i32 %bf.clear133, 30, !dbg !8076
  br i1 %cmp134, label %if.then136, label %if.else144, !dbg !8078

if.then136:                                       ; preds = %if.else131
  %conv137 = sext i32 %.sub to i64, !dbg !8079
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %args_so_far, i64 0, i32 1, !dbg !8079
  %arrayidx140 = bitcast %union.u* %u138 to i64*, !dbg !8079
  %13 = load i64, i64* %arrayidx140, align 8, !dbg !8079
  %add141 = add nsw i64 %13, %conv137, !dbg !8079
  %call142 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* nonnull %args_addr, i64 %add141) #6, !dbg !8079
  %call143 = tail call %struct.rtx_def* @memory_address_addr_space(i32 1, %struct.rtx_def* %call142, i8 zeroext 0) #6, !dbg !8079
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call143, metadata !8000, metadata !DIExpression()), !dbg !8024
  br label %if.end150, !dbg !8080

if.else144:                                       ; preds = %if.else131
  %call145 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* nonnull %args_addr, %struct.rtx_def* %args_so_far) #6, !dbg !8081
  %conv146 = sext i32 %.sub to i64, !dbg !8081
  %call147 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call145, i64 %conv146) #6, !dbg !8081
  %call148 = tail call %struct.rtx_def* @memory_address_addr_space(i32 1, %struct.rtx_def* %call147, i8 zeroext 0) #6, !dbg !8081
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call148, metadata !8000, metadata !DIExpression()), !dbg !8024
  br label %if.end150

if.end150:                                        ; preds = %if.then136, %if.else144, %if.then127
  %temp.1 = phi %struct.rtx_def* [ %call130, %if.then127 ], [ %call148, %if.else144 ], [ %call143, %if.then136 ], !dbg !8082
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !8000, metadata !DIExpression()), !dbg !8024
  %14 = load i32, i32* @target_flags, align 4, !dbg !8083
  %and151 = and i32 %14, 4, !dbg !8083
  %cmp152 = icmp eq i32 %and151, 0, !dbg !8083
  br i1 %cmp152, label %lor.lhs.false154, label %if.end167, !dbg !8083

lor.lhs.false154:                                 ; preds = %if.end150
  %call155 = tail call i32 @ix86_cfun_abi() #6, !dbg !8083
  %cmp156 = icmp eq i32 %call155, 1, !dbg !8083
  br i1 %cmp156, label %if.end167, label %if.then158, !dbg !8085

if.then158:                                       ; preds = %lor.lhs.false154
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 16, !dbg !8086
  %call159 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %15, %struct.rtx_def* %temp.1) #6, !dbg !8089
  %tobool160 = icmp eq i32 %call159, 0, !dbg !8089
  br i1 %tobool160, label %lor.lhs.false161, label %if.then164, !dbg !8090

lor.lhs.false161:                                 ; preds = %if.then158
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !8091
  %call162 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %16, %struct.rtx_def* %temp.1) #6, !dbg !8092
  %tobool163 = icmp eq i32 %call162, 0, !dbg !8092
  br i1 %tobool163, label %if.end167, label %if.then164, !dbg !8093

if.then164:                                       ; preds = %lor.lhs.false161, %if.then158
  %call165 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %temp.1) #6, !dbg !8094
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call165, metadata !8000, metadata !DIExpression()), !dbg !8024
  br label %if.end167, !dbg !8095

if.end167:                                        ; preds = %lor.lhs.false161, %if.end150, %if.then164, %lor.lhs.false154
  %temp.3 = phi %struct.rtx_def* [ %temp.1, %if.end150 ], [ %temp.1, %lor.lhs.false154 ], [ %call165, %if.then164 ], [ %temp.1, %lor.lhs.false161 ], !dbg !8096
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.3, metadata !8000, metadata !DIExpression()), !dbg !8024
  %call168 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %temp.3) #6, !dbg !8097
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call168, metadata !8006, metadata !DIExpression()), !dbg !8096
  tail call void @set_mem_align(%struct.rtx_def* %call168, i32 %align) #6, !dbg !8098
  %call169 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call168, %struct.rtx_def* %xinner.2, %struct.rtx_def* %size.addr.2, i32 2) #8, !dbg !8099
  br label %if.end310

if.else171:                                       ; preds = %entry
  %cmp172 = icmp sgt i32 %partial, 0, !dbg !8100
  br i1 %cmp172, label %if.then174, label %if.else261, !dbg !8101

if.then174:                                       ; preds = %if.else171
  %idxprom176 = zext i32 %mode to i64, !dbg !8102
  %arrayidx177 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom176, !dbg !8102
  %17 = load i8, i8* %arrayidx177, align 1, !dbg !8102
  call void @llvm.dbg.value(metadata i8 %17, metadata !8009, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !8103
  %rem181 = srem i32 %partial, 4, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %rem181, metadata !8014, metadata !DIExpression()), !dbg !8103
  %u182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %args_so_far, i64 0, i32 1, !dbg !8105
  %arrayidx184 = bitcast %union.u* %u182 to i64*, !dbg !8105
  %18 = load i64, i64* %arrayidx184, align 8, !dbg !8105
  %conv185 = trunc i64 %18 to i32, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %conv185, metadata !8015, metadata !DIExpression()), !dbg !8103
  %tobool187 = icmp ne i32 %extra, 0, !dbg !8106
  %cmp189 = icmp eq %struct.rtx_def* %args_addr, null, !dbg !8108
  %or.cond4 = and i1 %tobool187, %cmp189, !dbg !8109
  br i1 %or.cond4, label %if.then197, label %if.end200, !dbg !8109

if.then197:                                       ; preds = %if.then174
  %conv198 = sext i32 %extra to i64, !dbg !8110
  %call199 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv198) #6, !dbg !8110
  tail call void @anti_adjust_stack(%struct.rtx_def* %call199) #6, !dbg !8111
  br label %if.end200, !dbg !8111

if.end200:                                        ; preds = %if.then197, %if.then174
  %spec.select = select i1 %cmp189, i32 0, i32 %rem181, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8014, metadata !DIExpression()), !dbg !8103
  %sub205 = sub nsw i32 %partial, %spec.select, !dbg !8113
  %div206 = sdiv i32 %sub205, 4, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %div206, metadata !8013, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 0, metadata !8014, metadata !DIExpression()), !dbg !8103
  %cmp208 = icmp eq i32 %reg_parm_stack_space, 0, !dbg !8115
  %cond213 = select i1 %cmp208, i32 0, i32 %div206, !dbg !8116
  call void @llvm.dbg.value(metadata i32 %cond213, metadata !8016, metadata !DIExpression()), !dbg !8103
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8117
  %bf.load214 = load i32, i32* %19, align 8, !dbg !8117
  %bf.clear215 = and i32 %bf.load214, 65535, !dbg !8117
  %idxprom216 = zext i32 %bf.clear215 to i64, !dbg !8117
  %arrayidx217 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom216, !dbg !8117
  %20 = load i32, i32* %arrayidx217, align 4, !dbg !8117
  %cmp218 = icmp eq i32 %20, 9, !dbg !8117
  br i1 %cmp218, label %land.lhs.true220, label %if.end226, !dbg !8119

land.lhs.true220:                                 ; preds = %if.end200
  %call221 = tail call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %x) #6, !dbg !8120
  %tobool222 = icmp eq i8 %call221, 0, !dbg !8120
  br i1 %tobool222, label %if.then223, label %if.end226, !dbg !8121

if.then223:                                       ; preds = %land.lhs.true220
  %call224 = tail call %struct.rtx_def* @force_const_mem(i32 %mode, %struct.rtx_def* %x) #6, !dbg !8122
  %call225 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call224) #6, !dbg !8123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call225, metadata !7985, metadata !DIExpression()), !dbg !8020
  br label %if.end226, !dbg !8124

if.end226:                                        ; preds = %land.lhs.true220, %if.then223, %if.end200
  %x.addr.0 = phi %struct.rtx_def* [ %x, %land.lhs.true220 ], [ %call225, %if.then223 ], [ %x, %if.end200 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !7985, metadata !DIExpression()), !dbg !8020
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !8125
  %bf.load227 = load i32, i32* %21, align 8, !dbg !8125
  %bf.clear228 = and i32 %bf.load227, 65535, !dbg !8125
  %cmp229 = icmp eq i32 %bf.clear228, 37, !dbg !8125
  br i1 %cmp229, label %land.lhs.true231, label %if.end246, !dbg !8127

land.lhs.true231:                                 ; preds = %if.end226
  %call232 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0) #8, !dbg !8128
  %cmp233 = icmp ult i32 %call232, 53, !dbg !8129
  br i1 %cmp233, label %land.lhs.true235, label %if.end246, !dbg !8130

land.lhs.true235:                                 ; preds = %land.lhs.true231
  %bf.load236 = load i32, i32* %21, align 8, !dbg !8131
  %bf.lshr237 = lshr i32 %bf.load236, 16, !dbg !8131
  %bf.clear238 = and i32 %bf.lshr237, 255, !dbg !8131
  %idxprom239 = zext i32 %bf.clear238 to i64, !dbg !8131
  %arrayidx240 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom239, !dbg !8131
  %22 = load i8, i8* %arrayidx240, align 1, !dbg !8131
  %cmp242 = icmp eq i8 %22, 2, !dbg !8132
  br i1 %cmp242, label %if.end246, label %if.then244, !dbg !8133

if.then244:                                       ; preds = %land.lhs.true235
  %call245 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %x.addr.0) #6, !dbg !8134
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call245, metadata !7985, metadata !DIExpression()), !dbg !8020
  br label %if.end246, !dbg !8135

if.end246:                                        ; preds = %land.lhs.true235, %if.then244, %land.lhs.true231, %if.end226
  %x.addr.1 = phi %struct.rtx_def* [ %call245, %if.then244 ], [ %x.addr.0, %land.lhs.true235 ], [ %x.addr.0, %land.lhs.true231 ], [ %x.addr.0, %if.end226 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1, metadata !7985, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i8 %17, metadata !8012, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8103
  %23 = lshr i8 %17, 2, !dbg !8136
  %24 = zext i8 %23 to i64, !dbg !8136
  %25 = sext i32 %div206 to i64, !dbg !8136
  br label %for.cond, !dbg !8136

for.cond:                                         ; preds = %for.body, %if.end246
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %24, %if.end246 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !8138
  call void @llvm.dbg.value(metadata i32 undef, metadata !8012, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8103
  %cmp248 = icmp sgt i64 %indvars.iv, %25, !dbg !8139
  br i1 %cmp248, label %for.body, label %if.end310.loopexit, !dbg !8141

for.body:                                         ; preds = %for.cond
  %26 = trunc i64 %indvars.iv.next to i32, !dbg !8142
  %call254 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %x.addr.1, i32 %26, i32 %mode) #6, !dbg !8142
  %27 = load i32, i32* @word_mode, align 4, !dbg !8144
  %28 = trunc i64 %indvars.iv.next to i32, !dbg !8145
  %29 = sub i32 %28, %div206, !dbg !8145
  %30 = add i32 %cond213, %29, !dbg !8145
  %mul = shl nsw i32 %30, 2, !dbg !8145
  %add257 = add nsw i32 %mul, %conv185, !dbg !8145
  %conv258 = sext i32 %add257 to i64, !dbg !8145
  %call259 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv258) #6, !dbg !8145
  tail call void @emit_push_insn(%struct.rtx_def* %call254, i32 %27, %union.tree_node* null, %struct.rtx_def* null, i32 %align, i32 0, %struct.rtx_def* null, i32 0, %struct.rtx_def* %args_addr, %struct.rtx_def* %call259, i32 %reg_parm_stack_space, %struct.rtx_def* %alignment_pad) #8, !dbg !8146
  call void @llvm.dbg.value(metadata i32 undef, metadata !8012, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8103
  br label %for.cond, !dbg !8147, !llvm.loop !8148

if.else261:                                       ; preds = %if.else171
  %tobool262 = icmp ne i32 %extra, 0, !dbg !8150
  %cmp264 = icmp eq %struct.rtx_def* %args_addr, null, !dbg !8152
  %or.cond7 = and i1 %tobool262, %cmp264, !dbg !8153
  br i1 %or.cond7, label %if.then272, label %if.end275, !dbg !8153

if.then272:                                       ; preds = %if.else261
  %conv273 = sext i32 %extra to i64, !dbg !8154
  %call274 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv273) #6, !dbg !8154
  tail call void @anti_adjust_stack(%struct.rtx_def* %call274) #6, !dbg !8155
  br label %if.end275, !dbg !8155

if.end275:                                        ; preds = %if.then272, %if.else261
  br i1 %cmp264, label %land.lhs.true278, label %if.else291, !dbg !8156

land.lhs.true278:                                 ; preds = %if.end275
  %31 = load i32, i32* @target_flags, align 4, !dbg !8158
  %and279 = and i32 %31, 8192, !dbg !8158
  %cmp280 = icmp eq i32 %and279, 0, !dbg !8158
  br i1 %cmp280, label %land.lhs.true282, label %if.else291, !dbg !8158

land.lhs.true282:                                 ; preds = %land.lhs.true278
  %and283 = and i32 %31, 4, !dbg !8158
  %cmp284 = icmp eq i32 %and283, 0, !dbg !8158
  br i1 %cmp284, label %lor.lhs.false286, label %if.else291, !dbg !8158

lor.lhs.false286:                                 ; preds = %land.lhs.true282
  %call287 = tail call i32 @ix86_cfun_abi() #6, !dbg !8158
  %cmp288 = icmp eq i32 %call287, 1, !dbg !8158
  br i1 %cmp288, label %if.else291, label %if.then290, !dbg !8159

if.then290:                                       ; preds = %lor.lhs.false286
  tail call fastcc void @emit_single_push_insn(i32 %mode, %struct.rtx_def* %x, %union.tree_node* %type) #8, !dbg !8160
  br label %if.end310, !dbg !8160

if.else291:                                       ; preds = %land.lhs.true282, %lor.lhs.false286, %land.lhs.true278, %if.end275
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %args_so_far, i64 0, i32 0, !dbg !8161
  %bf.load292 = load i32, i32* %32, align 8, !dbg !8161
  %bf.clear293 = and i32 %bf.load292, 65535, !dbg !8161
  %cmp294 = icmp eq i32 %bf.clear293, 30, !dbg !8161
  br i1 %cmp294, label %if.then296, label %if.else302, !dbg !8164

if.then296:                                       ; preds = %if.else291
  %u297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %args_so_far, i64 0, i32 1, !dbg !8165
  %arrayidx299 = bitcast %union.u* %u297 to i64*, !dbg !8165
  %33 = load i64, i64* %arrayidx299, align 8, !dbg !8165
  %call300 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %args_addr, i64 %33) #6, !dbg !8165
  %call301 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %mode, %struct.rtx_def* %call300, i8 zeroext 0) #6, !dbg !8165
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call301, metadata !8017, metadata !DIExpression()), !dbg !8166
  br label %if.end305, !dbg !8167

if.else302:                                       ; preds = %if.else291
  %call303 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %args_addr, %struct.rtx_def* %args_so_far) #6, !dbg !8168
  %call304 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %mode, %struct.rtx_def* %call303, i8 zeroext 0) #6, !dbg !8168
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call304, metadata !8017, metadata !DIExpression()), !dbg !8166
  br label %if.end305

if.end305:                                        ; preds = %if.else302, %if.then296
  %addr.0 = phi %struct.rtx_def* [ %call301, %if.then296 ], [ %call304, %if.else302 ], !dbg !8169
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0, metadata !8017, metadata !DIExpression()), !dbg !8166
  %call306 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %addr.0) #6, !dbg !8170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call306, metadata !8019, metadata !DIExpression()), !dbg !8166
  tail call void @set_mem_align(%struct.rtx_def* %call306, i32 %align) #6, !dbg !8171
  %call307 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call306, %struct.rtx_def* %x) #8, !dbg !8172
  br label %if.end310

if.end310.loopexit:                               ; preds = %for.cond
  br label %if.end310, !dbg !8173

if.end310:                                        ; preds = %if.end310.loopexit, %if.end305, %if.then290, %if.end97, %if.end167
  %x.addr.3 = phi %struct.rtx_def* [ %x, %if.end167 ], [ %x, %if.end97 ], [ %x, %if.then290 ], [ %x, %if.end305 ], [ %x.addr.1, %if.end310.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.3, metadata !7985, metadata !DIExpression()), !dbg !8020
  %cmp311 = icmp sgt i32 %partial, 0, !dbg !8173
  %cmp314 = icmp ne %struct.rtx_def* %reg, null, !dbg !8175
  %or.cond10 = and i1 %cmp311, %cmp314, !dbg !8176
  br i1 %or.cond10, label %if.then316, label %if.end333, !dbg !8176

if.then316:                                       ; preds = %if.end310
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !8177
  %bf.load317 = load i32, i32* %34, align 8, !dbg !8177
  %bf.clear318 = and i32 %bf.load317, 65535, !dbg !8177
  %cmp319 = icmp eq i32 %bf.clear318, 15, !dbg !8180
  br i1 %cmp319, label %if.then321, label %if.else322, !dbg !8181

if.then321:                                       ; preds = %if.then316
  tail call void @emit_group_load(%struct.rtx_def* nonnull %reg, %struct.rtx_def* %x.addr.3, %union.tree_node* %type, i32 -1) #8, !dbg !8182
  br label %if.end333, !dbg !8182

if.else322:                                       ; preds = %if.then316
  %rem32314 = and i32 %partial, 3, !dbg !8183
  %cmp324 = icmp eq i32 %rem32314, 0, !dbg !8183
  br i1 %cmp324, label %cond.end328, label %cond.true326, !dbg !8183

cond.true326:                                     ; preds = %if.else322
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 4012, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8183
  br label %cond.end328, !dbg !8183

cond.end328:                                      ; preds = %if.else322, %cond.true326
  %call330 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %reg) #8, !dbg !8185
  %div331 = sdiv i32 %partial, 4, !dbg !8186
  tail call void @move_block_to_reg(i32 %call330, %struct.rtx_def* %x.addr.3, i32 %div331, i32 %mode) #8, !dbg !8187
  br label %if.end333

if.end333:                                        ; preds = %if.then321, %cond.end328, %if.end310
  %tobool345 = icmp ne %struct.rtx_def* %alignment_pad, null, !dbg !8188
  %cmp347 = icmp eq %struct.rtx_def* %args_addr, null, !dbg !8190
  %or.cond13 = and i1 %tobool345, %cmp347, !dbg !8191
  br i1 %or.cond13, label %if.then349, label %if.end350, !dbg !8191

if.then349:                                       ; preds = %if.end333
  tail call void @anti_adjust_stack(%struct.rtx_def* nonnull %alignment_pad) #6, !dbg !8192
  br label %if.end350, !dbg !8192

if.end350:                                        ; preds = %if.then349, %if.end333
  ret void, !dbg !8193
}

declare dso_local i32 @ix86_cfun_abi() local_unnamed_addr #1

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_mem_align(%struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_single_push_insn(i32 %mode, %struct.rtx_def* %x, %union.tree_node* %type) unnamed_addr #4 !dbg !8194 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8198, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8199, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8200, metadata !DIExpression()), !dbg !8206
  %idxprom = zext i32 %mode to i64, !dbg !8207
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8207
  %0 = load i8, i8* %arrayidx, align 1, !dbg !8207
  %conv1 = zext i8 %0 to i32, !dbg !8207
  %add = add nuw nsw i32 %conv1, 3, !dbg !8207
  %and = and i32 %add, 508, !dbg !8207
  call void @llvm.dbg.value(metadata i32 %and, metadata !8202, metadata !DIExpression()), !dbg !8206
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !8208
  %add8 = add nsw i32 %1, %and, !dbg !8208
  store i32 %add8, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 2), align 8, !dbg !8208
  %idxprom9 = sext i32 %mode to i64, !dbg !8209
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 119, i32 4, i64 %idxprom9, i32 0, !dbg !8210
  %2 = load i32, i32* %insn_code, align 4, !dbg !8210
  call void @llvm.dbg.value(metadata i32 %2, metadata !8204, metadata !DIExpression()), !dbg !8206
  %cmp = icmp eq i32 %2, 2956, !dbg !8211
  br i1 %cmp, label %if.end22, label %if.then, !dbg !8213

if.then:                                          ; preds = %entry
  %idxprom12 = sext i32 %2 to i64, !dbg !8214
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom12, i32 3, !dbg !8217
  %3 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8217
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %3, i64 0, i32 0, !dbg !8218
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8218
  call void @llvm.dbg.value(metadata i32 (%struct.rtx_def*, i32)* %4, metadata !8205, metadata !DIExpression()), !dbg !8206
  %tobool = icmp eq i32 (%struct.rtx_def*, i32)* %4, null, !dbg !8219
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8220

land.lhs.true:                                    ; preds = %if.then
  %call = tail call i32 %4(%struct.rtx_def* %x, i32 %mode) #6, !dbg !8221
  %tobool15 = icmp eq i32 %call, 0, !dbg !8221
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !8222

if.then16:                                        ; preds = %land.lhs.true
  %call17 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %x) #6, !dbg !8223
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17, metadata !8199, metadata !DIExpression()), !dbg !8206
  br label %if.end, !dbg !8224

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then16
  %x.addr.0 = phi %struct.rtx_def* [ %x, %land.lhs.true ], [ %call17, %if.then16 ], [ %x, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !8199, metadata !DIExpression()), !dbg !8206
  %idxprom18 = zext i32 %2 to i64, !dbg !8225
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom18, i32 2, !dbg !8225
  %5 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8225
  %call20 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %5(%struct.rtx_def* %x.addr.0) #6, !dbg !8225
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #6, !dbg !8226
  br label %cleanup.cont, !dbg !8227

if.end22:                                         ; preds = %entry
  %cmp27 = icmp eq i32 %and, %conv1, !dbg !8228
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !8230
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !8231

if.then29:                                        ; preds = %if.end22
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 74, i32 16, %struct.rtx_def* %6) #6, !dbg !8232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !8201, metadata !DIExpression()), !dbg !8206
  br label %if.end35, !dbg !8233

if.else:                                          ; preds = %if.end22
  %conv31 = zext i32 %and to i64, !dbg !8234
  %sub = sub nsw i64 0, %conv31, !dbg !8234
  %call32 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #6, !dbg !8234
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %6, %struct.rtx_def* %call32) #6, !dbg !8234
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !8201, metadata !DIExpression()), !dbg !8206
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !8237
  %call34 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 78, i32 16, %struct.rtx_def* %7, %struct.rtx_def* %call33) #6, !dbg !8237
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !8201, metadata !DIExpression()), !dbg !8206
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then29
  %dest_addr.0 = phi %struct.rtx_def* [ %call30, %if.then29 ], [ %call34, %if.else ], !dbg !8230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest_addr.0, metadata !8201, metadata !DIExpression()), !dbg !8206
  %call36 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %dest_addr.0) #6, !dbg !8238
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call36, metadata !8203, metadata !DIExpression()), !dbg !8206
  %cmp37 = icmp eq %union.tree_node* %type, null, !dbg !8239
  br i1 %cmp37, label %if.end43, label %if.then39, !dbg !8241

if.then39:                                        ; preds = %if.end35
  tail call void @set_mem_attributes(%struct.rtx_def* %call36, %union.tree_node* nonnull %type, i32 1) #6, !dbg !8242
  %8 = load i32, i32* @flag_optimize_sibling_calls, align 4, !dbg !8244
  %tobool40 = icmp eq i32 %8, 0, !dbg !8244
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !8246

if.then41:                                        ; preds = %if.then39
  tail call void @set_mem_alias_set(%struct.rtx_def* %call36, i32 0) #6, !dbg !8247
  br label %if.end43, !dbg !8247

if.end43:                                         ; preds = %if.then39, %if.end35, %if.then41
  %call44 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call36, %struct.rtx_def* %x) #8, !dbg !8248
  br label %cleanup.cont, !dbg !8249

cleanup.cont:                                     ; preds = %if.end, %if.end43
  ret void, !dbg !8249
}

; Function Attrs: nounwind uwtable
define dso_local void @expand_assignment(%union.tree_node* %to, %union.tree_node* %from, i8 zeroext %nontemporal) local_unnamed_addr #4 !dbg !8250 {
entry:
  %mode1 = alloca i32, align 4
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %offset = alloca %union.tree_node*, align 8
  %unsignedp = alloca i32, align 4
  %volatilep = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !8254, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !8255, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i8 %nontemporal, metadata !8256, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8257, metadata !DIExpression()), !dbg !8293
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %to, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8294
  %bf.load = load i64, i64* %0, align 8, !dbg !8294
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8296
  %cmp = icmp eq i64 %bf.cast2, 0, !dbg !8296
  br i1 %cmp, label %if.then, label %if.end, !dbg !8297

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %from) #8, !dbg !8298
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !8258, metadata !DIExpression()), !dbg !8293
  br label %cleanup, !dbg !8300

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @operand_equal_p(%union.tree_node* %to, %union.tree_node* %from, i32 0) #6, !dbg !8301
  %tobool = icmp eq i32 %call1, 0, !dbg !8301
  br i1 %tobool, label %if.end3, label %cleanup, !dbg !8303

if.end3:                                          ; preds = %if.end
  %call4 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %to) #8, !dbg !8304
  %tobool5 = icmp eq i8 %call4, 0, !dbg !8304
  br i1 %tobool5, label %lor.lhs.false, label %if.then12, !dbg !8305

lor.lhs.false:                                    ; preds = %if.end3
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %to, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8306
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !8306
  %2 = load i64*, i64** %1, align 8, !dbg !8306
  %bf.load7 = load i64, i64* %2, align 8, !dbg !8306
  %bf.cast93 = and i64 %bf.load7, 65535, !dbg !8307
  %cmp10 = icmp eq i64 %bf.cast93, 15, !dbg !8307
  br i1 %cmp10, label %if.then12, label %if.else229, !dbg !8308

if.then12:                                        ; preds = %if.end3, %lor.lhs.false
  %3 = bitcast i32* %mode1 to i8*, !dbg !8309
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !8309
  %4 = bitcast i64* %bitsize to i8*, !dbg !8310
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8310
  %5 = bitcast i64* %bitpos to i8*, !dbg !8310
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !8310
  %6 = bitcast %union.tree_node** %offset to i8*, !dbg !8311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !8311
  %7 = bitcast i32* %unsignedp to i8*, !dbg !8312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7, !dbg !8312
  %8 = bitcast i32* %volatilep to i8*, !dbg !8313
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7, !dbg !8313
  call void @llvm.dbg.value(metadata i32 0, metadata !8266, metadata !DIExpression()), !dbg !8314
  store i32 0, i32* %volatilep, align 4, !dbg !8315
  tail call void @push_temp_slots() #6, !dbg !8316
  call void @llvm.dbg.value(metadata i32* %mode1, metadata !8259, metadata !DIExpression(DW_OP_deref)), !dbg !8314
  call void @llvm.dbg.value(metadata i64* %bitsize, metadata !8262, metadata !DIExpression(DW_OP_deref)), !dbg !8314
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !8263, metadata !DIExpression(DW_OP_deref)), !dbg !8314
  call void @llvm.dbg.value(metadata %union.tree_node** %offset, metadata !8264, metadata !DIExpression(DW_OP_deref)), !dbg !8314
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !8265, metadata !DIExpression(DW_OP_deref)), !dbg !8314
  call void @llvm.dbg.value(metadata i32* %volatilep, metadata !8266, metadata !DIExpression(DW_OP_deref)), !dbg !8314
  %call13 = call %union.tree_node* @get_inner_reference(%union.tree_node* %to, i64* nonnull %bitsize, i64* nonnull %bitpos, %union.tree_node** nonnull %offset, i32* nonnull %mode1, i32* nonnull %unsignedp, i32* nonnull %volatilep, i8 zeroext 1) #8, !dbg !8317
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !8267, metadata !DIExpression()), !dbg !8314
  %call14 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call13) #8, !dbg !8318
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !8257, metadata !DIExpression()), !dbg !8293
  %9 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !8319
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8264, metadata !DIExpression()), !dbg !8314
  %cmp15 = icmp eq %union.tree_node* %9, null, !dbg !8320
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8321
  br i1 %cmp15, label %if.end105, label %if.then17, !dbg !8321

if.then17:                                        ; preds = %if.then12
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 0, !dbg !8322
  %bf.load18 = load i32, i32* %11, align 8, !dbg !8322
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !8322
  %cmp20 = icmp eq i32 %bf.clear19, 43, !dbg !8322
  br i1 %cmp20, label %if.end30, label %if.then22, !dbg !8324

if.then22:                                        ; preds = %if.then17
  %bf.load24 = load i64, i64* %10, align 8, !dbg !8325
  %bf.cast2627 = and i64 %bf.load24, 65535, !dbg !8325
  %cmp27 = icmp eq i64 %bf.cast2627, 23, !dbg !8325
  br i1 %cmp27, label %cond.end, label %cond.true, !dbg !8325

cond.true:                                        ; preds = %if.then22
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 4245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8325
  br label %cond.end, !dbg !8325

cond.end:                                         ; preds = %if.then22, %cond.true
  call void @expand_builtin_trap() #6, !dbg !8327
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8328
  %call29 = call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %12) #6, !dbg !8329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !8257, metadata !DIExpression()), !dbg !8293
  %.pre31 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !8330
  br label %if.end30, !dbg !8331

if.end30:                                         ; preds = %cond.end, %if.then17
  %13 = phi %union.tree_node* [ %9, %if.then17 ], [ %.pre31, %cond.end ], !dbg !8330
  %to_rtx.0 = phi %struct.rtx_def* [ %call14, %if.then17 ], [ %call29, %cond.end ], !dbg !8314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_rtx.0, metadata !8257, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !8264, metadata !DIExpression()), !dbg !8314
  %call31 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %13, %struct.rtx_def* null, i32 0, i32 2) #8, !dbg !8332
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !8271, metadata !DIExpression()), !dbg !8333
  %14 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !8334
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8335
  %rt_mem = bitcast %union.rtunion_def* %15 to %struct.mem_attrs**, !dbg !8335
  %16 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8335
  %cmp32 = icmp eq %struct.mem_attrs* %16, null, !dbg !8335
  br i1 %cmp32, label %cond.end41, label %cond.false35, !dbg !8335

cond.false35:                                     ; preds = %if.end30
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %16, i64 0, i32 5, !dbg !8335
  %17 = load i8, i8* %addrspace, align 8, !dbg !8335
  br label %cond.end41, !dbg !8335

cond.end41:                                       ; preds = %if.end30, %cond.false35
  %cond42 = phi i8 [ %17, %cond.false35 ], [ 0, %if.end30 ], !dbg !8335
  %call44 = call i32 %14(i8 zeroext %cond42) #6, !dbg !8336
  call void @llvm.dbg.value(metadata i32 %call44, metadata !8268, metadata !DIExpression()), !dbg !8333
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 0, !dbg !8337
  %bf.load45 = load i32, i32* %18, align 8, !dbg !8337
  %bf.lshr = lshr i32 %bf.load45, 16, !dbg !8337
  %bf.clear46 = and i32 %bf.lshr, 255, !dbg !8337
  %cmp47 = icmp eq i32 %bf.clear46, %call44, !dbg !8339
  br i1 %cmp47, label %if.end51, label %if.then49, !dbg !8340

if.then49:                                        ; preds = %cond.end41
  %call50 = call %struct.rtx_def* @convert_to_mode(i32 %call44, %struct.rtx_def* %call31, i32 0) #8, !dbg !8341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !8271, metadata !DIExpression()), !dbg !8333
  br label %if.end51, !dbg !8342

if.end51:                                         ; preds = %cond.end41, %if.then49
  %offset_rtx.0 = phi %struct.rtx_def* [ %call50, %if.then49 ], [ %call31, %cond.end41 ], !dbg !8333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset_rtx.0, metadata !8271, metadata !DIExpression()), !dbg !8333
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.0, i64 0, i32 0, !dbg !8343
  %bf.load52 = load i32, i32* %19, align 8, !dbg !8343
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !8343
  %cmp54 = icmp eq i32 %bf.clear53, 43, !dbg !8343
  br i1 %cmp54, label %land.lhs.true, label %if.end102, !dbg !8345

land.lhs.true:                                    ; preds = %if.end51
  %bf.clear58 = and i32 %bf.load52, 16711680, !dbg !8346
  %cmp59 = icmp eq i32 %bf.clear58, 65536, !dbg !8347
  br i1 %cmp59, label %land.lhs.true61, label %if.end102, !dbg !8348

land.lhs.true61:                                  ; preds = %land.lhs.true
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8349
  %20 = bitcast %union.rtunion_def* %arrayidx64 to i32**, !dbg !8349
  %21 = load i32*, i32** %20, align 8, !dbg !8349
  %bf.load65 = load i32, i32* %21, align 8, !dbg !8349
  %bf.clear67 = and i32 %bf.load65, 16711680, !dbg !8349
  %cmp68 = icmp ne i32 %bf.clear67, 0, !dbg !8350
  %22 = load i64, i64* %bitsize, align 8, !dbg !8351
  call void @llvm.dbg.value(metadata i64 %22, metadata !8262, metadata !DIExpression()), !dbg !8314
  %cmp71 = icmp sgt i64 %22, 0, !dbg !8352
  %or.cond = and i1 %cmp68, %cmp71, !dbg !8353
  br i1 %or.cond, label %land.lhs.true73, label %if.end102, !dbg !8353

land.lhs.true73:                                  ; preds = %land.lhs.true61
  %23 = load i64, i64* %bitpos, align 8, !dbg !8354
  call void @llvm.dbg.value(metadata i64 %23, metadata !8263, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i64 %22, metadata !8262, metadata !DIExpression()), !dbg !8314
  %rem = srem i64 %23, %22, !dbg !8355
  %cmp74 = icmp eq i64 %rem, 0, !dbg !8356
  br i1 %cmp74, label %land.lhs.true76, label %if.end102, !dbg !8357

land.lhs.true76:                                  ; preds = %land.lhs.true73
  call void @llvm.dbg.value(metadata i64 %22, metadata !8262, metadata !DIExpression()), !dbg !8314
  %24 = load i32, i32* %mode1, align 4, !dbg !8358
  call void @llvm.dbg.value(metadata i32 %24, metadata !8259, metadata !DIExpression()), !dbg !8314
  %call77 = call i32 @get_mode_alignment(i32 %24) #6, !dbg !8358
  %conv78 = zext i32 %call77 to i64, !dbg !8358
  %rem79 = srem i64 %22, %conv78, !dbg !8359
  %cmp80 = icmp eq i64 %rem79, 0, !dbg !8360
  br i1 %cmp80, label %land.lhs.true82, label %if.end102, !dbg !8361

land.lhs.true82:                                  ; preds = %land.lhs.true76
  %25 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8362
  %cmp87 = icmp eq %struct.mem_attrs* %25, null, !dbg !8362
  br i1 %cmp87, label %cond.end95, label %cond.true89, !dbg !8362

cond.true89:                                      ; preds = %land.lhs.true82
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %25, i64 0, i32 4, !dbg !8362
  %26 = load i32, i32* %align, align 4, !dbg !8362
  br label %cond.end95, !dbg !8362

cond.end95:                                       ; preds = %land.lhs.true82, %cond.true89
  %cond96 = phi i32 [ %26, %cond.true89 ], [ 8, %land.lhs.true82 ], !dbg !8362
  %27 = load i32, i32* %mode1, align 4, !dbg !8363
  call void @llvm.dbg.value(metadata i32 %27, metadata !8259, metadata !DIExpression()), !dbg !8314
  %call97 = call i32 @get_mode_alignment(i32 %27) #6, !dbg !8363
  %cmp98 = icmp eq i32 %cond96, %call97, !dbg !8364
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !8365

if.then100:                                       ; preds = %cond.end95
  %28 = load i32, i32* %mode1, align 4, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %28, metadata !8259, metadata !DIExpression()), !dbg !8314
  %29 = load i64, i64* %bitpos, align 8, !dbg !8366
  call void @llvm.dbg.value(metadata i64 %29, metadata !8263, metadata !DIExpression()), !dbg !8314
  %div = sdiv i64 %29, 8, !dbg !8366
  %call101 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %to_rtx.0, i32 %28, i64 %div, i32 1, i32 1) #6, !dbg !8366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call101, metadata !8257, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i64 0, metadata !8263, metadata !DIExpression()), !dbg !8314
  store i64 0, i64* %bitpos, align 8, !dbg !8368
  br label %if.end102, !dbg !8369

if.end102:                                        ; preds = %if.then100, %cond.end95, %land.lhs.true76, %land.lhs.true73, %land.lhs.true61, %land.lhs.true, %if.end51
  %to_rtx.1 = phi %struct.rtx_def* [ %call101, %if.then100 ], [ %to_rtx.0, %cond.end95 ], [ %to_rtx.0, %land.lhs.true76 ], [ %to_rtx.0, %land.lhs.true73 ], [ %to_rtx.0, %land.lhs.true61 ], [ %to_rtx.0, %land.lhs.true ], [ %to_rtx.0, %if.end51 ], !dbg !8314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_rtx.1, metadata !8257, metadata !DIExpression()), !dbg !8293
  %30 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !8370
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !8264, metadata !DIExpression()), !dbg !8314
  %call103 = call fastcc i64 @highest_pow2_factor_for_target(%union.tree_node* %to, %union.tree_node* %30) #8, !dbg !8371
  %call104 = call %struct.rtx_def* @offset_address(%struct.rtx_def* %to_rtx.1, %struct.rtx_def* %offset_rtx.0, i64 %call103) #6, !dbg !8372
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !8257, metadata !DIExpression()), !dbg !8293
  br label %if.end105, !dbg !8373

if.end105:                                        ; preds = %if.then12, %if.end102
  %to_rtx.2 = phi %struct.rtx_def* [ %call104, %if.end102 ], [ %call14, %if.then12 ], !dbg !8314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_rtx.2, metadata !8257, metadata !DIExpression()), !dbg !8293
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.2, i64 0, i32 0, !dbg !8374
  %bf.load106 = load i32, i32* %31, align 8, !dbg !8374
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !8374
  %cmp108 = icmp eq i32 %bf.clear107, 41, !dbg !8376
  br i1 %cmp108, label %if.then110, label %if.else196, !dbg !8377

if.then110:                                       ; preds = %if.end105
  %type112 = getelementptr inbounds %union.tree_node, %union.tree_node* %from, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8378
  %32 = bitcast %union.tree_node** %type112 to i64**, !dbg !8378
  %33 = load i64*, i64** %32, align 8, !dbg !8378
  %bf.load114 = load i64, i64* %33, align 8, !dbg !8378
  %bf.cast11623 = and i64 %bf.load114, 65535, !dbg !8378
  %cmp117 = icmp eq i64 %bf.cast11623, 14, !dbg !8378
  br i1 %cmp117, label %cond.true119, label %cond.false123, !dbg !8378

cond.true119:                                     ; preds = %if.then110
  %.cast24 = bitcast i64* %33 to %union.tree_node*, !dbg !8378
  %call122 = call i32 @vector_type_mode(%union.tree_node* %.cast24) #6, !dbg !8378
  br label %cond.end130, !dbg !8378

cond.false123:                                    ; preds = %if.then110
  %type126 = bitcast i64* %33 to %struct.tree_type*, !dbg !8378
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type126, i64 0, i32 6, !dbg !8378
  %bf.load127 = load i32, i32* %mode, align 4, !dbg !8378
  %bf.lshr128 = lshr i32 %bf.load127, 16, !dbg !8378
  %bf.clear129 = and i32 %bf.lshr128, 255, !dbg !8378
  br label %cond.end130, !dbg !8378

cond.end130:                                      ; preds = %cond.false123, %cond.true119
  %cond131 = phi i32 [ %call122, %cond.true119 ], [ %bf.clear129, %cond.false123 ], !dbg !8378
  %idxprom = zext i32 %cond131 to i64, !dbg !8378
  %arrayidx132 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !8378
  %34 = load i8, i8* %arrayidx132, align 1, !dbg !8378
  %cmp134 = icmp eq i8 %34, 10, !dbg !8378
  br i1 %cmp134, label %if.then164, label %lor.lhs.false136, !dbg !8378

lor.lhs.false136:                                 ; preds = %cond.end130
  %35 = load i64*, i64** %32, align 8, !dbg !8378
  %bf.load140 = load i64, i64* %35, align 8, !dbg !8378
  %bf.cast14225 = and i64 %bf.load140, 65535, !dbg !8378
  %cmp143 = icmp eq i64 %bf.cast14225, 14, !dbg !8378
  br i1 %cmp143, label %cond.true145, label %cond.false149, !dbg !8378

cond.true145:                                     ; preds = %lor.lhs.false136
  %.cast26 = bitcast i64* %35 to %union.tree_node*, !dbg !8378
  %call148 = call i32 @vector_type_mode(%union.tree_node* %.cast26) #6, !dbg !8378
  br label %cond.end157, !dbg !8378

cond.false149:                                    ; preds = %lor.lhs.false136
  %type152 = bitcast i64* %35 to %struct.tree_type*, !dbg !8378
  %mode153 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type152, i64 0, i32 6, !dbg !8378
  %bf.load154 = load i32, i32* %mode153, align 4, !dbg !8378
  %bf.lshr155 = lshr i32 %bf.load154, 16, !dbg !8378
  %bf.clear156 = and i32 %bf.lshr155, 255, !dbg !8378
  br label %cond.end157, !dbg !8378

cond.end157:                                      ; preds = %cond.false149, %cond.true145
  %cond158 = phi i32 [ %call148, %cond.true145 ], [ %bf.clear156, %cond.false149 ], !dbg !8378
  %idxprom159 = zext i32 %cond158 to i64, !dbg !8378
  %arrayidx160 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom159, !dbg !8378
  %36 = load i8, i8* %arrayidx160, align 1, !dbg !8378
  %cmp162 = icmp eq i8 %36, 11, !dbg !8378
  br i1 %cmp162, label %if.then164, label %if.else, !dbg !8381

if.then164:                                       ; preds = %cond.end157, %cond.end130
  %37 = load i64, i64* %bitpos, align 8, !dbg !8382
  call void @llvm.dbg.value(metadata i64 %37, metadata !8263, metadata !DIExpression()), !dbg !8314
  %cmp165 = icmp eq i64 %37, 0, !dbg !8382
  br i1 %cmp165, label %cond.end169, label %cond.true167, !dbg !8382

cond.true167:                                     ; preds = %if.then164
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 4280, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8382
  br label %cond.end169, !dbg !8382

cond.end169:                                      ; preds = %if.then164, %cond.true167
  %call171 = call %struct.rtx_def* @store_expr(%union.tree_node* %from, %struct.rtx_def* %to_rtx.2, i32 0, i8 zeroext %nontemporal) #8, !dbg !8384
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8258, metadata !DIExpression()), !dbg !8293
  br label %if.end225, !dbg !8385

if.else:                                          ; preds = %cond.end157
  %38 = load i64, i64* %bitpos, align 8, !dbg !8386
  call void @llvm.dbg.value(metadata i64 %38, metadata !8263, metadata !DIExpression()), !dbg !8314
  %cmp172 = icmp eq i64 %38, 0, !dbg !8386
  br i1 %cmp172, label %cond.end185, label %lor.lhs.false174, !dbg !8386

lor.lhs.false174:                                 ; preds = %if.else
  call void @llvm.dbg.value(metadata i64 %38, metadata !8263, metadata !DIExpression()), !dbg !8314
  %39 = load i32, i32* %mode1, align 4, !dbg !8386
  call void @llvm.dbg.value(metadata i32 %39, metadata !8259, metadata !DIExpression()), !dbg !8314
  %idxprom175 = zext i32 %39 to i64, !dbg !8386
  %arrayidx176 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom175, !dbg !8386
  %40 = load i8, i8* %arrayidx176, align 1, !dbg !8386
  %conv178 = zext i8 %40 to i64, !dbg !8386
  %mul = shl nuw nsw i64 %conv178, 3, !dbg !8386
  %cmp181 = icmp eq i64 %38, %mul, !dbg !8386
  br i1 %cmp181, label %cond.end185, label %cond.true183, !dbg !8386

cond.true183:                                     ; preds = %lor.lhs.false174
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 4285, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8386
  %.pre32 = load i64, i64* %bitpos, align 8, !dbg !8388
  br label %cond.end185, !dbg !8386

cond.end185:                                      ; preds = %if.else, %lor.lhs.false174, %cond.true183
  %41 = phi i64 [ 0, %if.else ], [ %38, %lor.lhs.false174 ], [ %.pre32, %cond.true183 ], !dbg !8388
  %u187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.2, i64 0, i32 1, !dbg !8388
  %fld188 = bitcast %union.u* %u187 to [1 x %union.rtunion_def]*, !dbg !8388
  call void @llvm.dbg.value(metadata i64 %41, metadata !8263, metadata !DIExpression()), !dbg !8314
  %cmp189 = icmp ne i64 %41, 0, !dbg !8388
  %idxprom191 = zext i1 %cmp189 to i64, !dbg !8388
  %arrayidx192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld188, i64 0, i64 %idxprom191, !dbg !8388
  %rt_rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**, !dbg !8388
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx193, align 8, !dbg !8388
  %call194 = call %struct.rtx_def* @store_expr(%union.tree_node* %from, %struct.rtx_def* %42, i32 0, i8 zeroext %nontemporal) #8, !dbg !8389
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8258, metadata !DIExpression()), !dbg !8293
  br label %if.end225

if.else196:                                       ; preds = %if.end105
  %cmp199 = icmp eq i32 %bf.clear107, 43, !dbg !8390
  br i1 %cmp199, label %if.then201, label %if.end215, !dbg !8393

if.then201:                                       ; preds = %if.else196
  %call202 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %to_rtx.2) #6, !dbg !8394
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call202, metadata !8257, metadata !DIExpression()), !dbg !8293
  %43 = load i64, i64* %bitpos, align 8, !dbg !8396
  call void @llvm.dbg.value(metadata i64 %43, metadata !8263, metadata !DIExpression()), !dbg !8314
  call void @set_mem_attributes_minus_bitpos(%struct.rtx_def* %call202, %union.tree_node* %to, i32 0, i64 %43) #6, !dbg !8397
  %44 = load i32, i32* %volatilep, align 4, !dbg !8398
  call void @llvm.dbg.value(metadata i32 %44, metadata !8266, metadata !DIExpression()), !dbg !8314
  %tobool203 = icmp eq i32 %44, 0, !dbg !8398
  br i1 %tobool203, label %if.end207, label %if.then204, !dbg !8400

if.then204:                                       ; preds = %if.then201
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call202, i64 0, i32 0, !dbg !8401
  %bf.load205 = load i32, i32* %45, align 8, !dbg !8402
  %bf.set = or i32 %bf.load205, 134217728, !dbg !8402
  store i32 %bf.set, i32* %45, align 8, !dbg !8402
  br label %if.end207, !dbg !8401

if.end207:                                        ; preds = %if.then201, %if.then204
  %call208 = call zeroext i8 @component_uses_parent_alias_set(%union.tree_node* %to) #6, !dbg !8403
  %tobool209 = icmp eq i8 %call208, 0, !dbg !8403
  br i1 %tobool209, label %if.end215, label %if.then210, !dbg !8405

if.then210:                                       ; preds = %if.end207
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call202, i64 0, i32 0, !dbg !8406
  %bf.load211 = load i32, i32* %46, align 8, !dbg !8407
  %bf.set213 = or i32 %bf.load211, 16777216, !dbg !8407
  store i32 %bf.set213, i32* %46, align 8, !dbg !8407
  br label %if.end215, !dbg !8406

if.end215:                                        ; preds = %if.end207, %if.then210, %if.else196
  %to_rtx.3 = phi %struct.rtx_def* [ %to_rtx.2, %if.else196 ], [ %call202, %if.then210 ], [ %call202, %if.end207 ], !dbg !8314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_rtx.3, metadata !8257, metadata !DIExpression()), !dbg !8293
  %47 = load i64, i64* %bitsize, align 8, !dbg !8408
  call void @llvm.dbg.value(metadata i64 %47, metadata !8262, metadata !DIExpression()), !dbg !8314
  %48 = load i64, i64* %bitpos, align 8, !dbg !8410
  call void @llvm.dbg.value(metadata i64 %48, metadata !8263, metadata !DIExpression()), !dbg !8314
  %49 = load i32, i32* %mode1, align 4, !dbg !8411
  call void @llvm.dbg.value(metadata i32 %49, metadata !8259, metadata !DIExpression()), !dbg !8314
  %call216 = call fastcc zeroext i8 @optimize_bitfield_assignment_op(i64 %47, i64 %48, i32 %49, %struct.rtx_def* %to_rtx.3, %union.tree_node* %to, %union.tree_node* %from) #8, !dbg !8412
  %tobool217 = icmp eq i8 %call216, 0, !dbg !8412
  br i1 %tobool217, label %if.else219, label %if.end225, !dbg !8413

if.else219:                                       ; preds = %if.end215
  %50 = load i64, i64* %bitsize, align 8, !dbg !8414
  call void @llvm.dbg.value(metadata i64 %50, metadata !8262, metadata !DIExpression()), !dbg !8314
  %51 = load i64, i64* %bitpos, align 8, !dbg !8415
  call void @llvm.dbg.value(metadata i64 %51, metadata !8263, metadata !DIExpression()), !dbg !8314
  %52 = load i32, i32* %mode1, align 4, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %52, metadata !8259, metadata !DIExpression()), !dbg !8314
  %type221 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8417
  %53 = load %union.tree_node*, %union.tree_node** %type221, align 8, !dbg !8417
  %call222 = call i32 @get_alias_set(%union.tree_node* %to) #6, !dbg !8418
  %call223 = call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %to_rtx.3, i64 %50, i64 %51, i32 %52, %union.tree_node* %from, %union.tree_node* %53, i32 %call222, i8 zeroext %nontemporal) #8, !dbg !8419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call223, metadata !8258, metadata !DIExpression()), !dbg !8293
  br label %if.end225

if.end225:                                        ; preds = %if.end215, %if.else219, %cond.end169, %cond.end185
  %result.2 = phi %struct.rtx_def* [ null, %cond.end169 ], [ null, %cond.end185 ], [ %call223, %if.else219 ], [ null, %if.end215 ], !dbg !8420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result.2, metadata !8258, metadata !DIExpression()), !dbg !8293
  %tobool226 = icmp eq %struct.rtx_def* %result.2, null, !dbg !8421
  br i1 %tobool226, label %if.end228, label %if.then227, !dbg !8423

if.then227:                                       ; preds = %if.end225
  call void @preserve_temp_slots(%struct.rtx_def* nonnull %result.2) #6, !dbg !8424
  br label %if.end228, !dbg !8424

if.end228:                                        ; preds = %if.end225, %if.then227
  call void @free_temp_slots() #6, !dbg !8425
  call void @pop_temp_slots() #6, !dbg !8426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7, !dbg !8427
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7, !dbg !8427
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !8427
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !8427
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8427
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !8427
  br label %cleanup

if.else229:                                       ; preds = %lor.lhs.false
  %bf.load231 = load i64, i64* %0, align 8, !dbg !8428
  %bf.cast2334 = and i64 %bf.load231, 65535, !dbg !8429
  %cmp234 = icmp eq i64 %bf.cast2334, 49, !dbg !8429
  br i1 %cmp234, label %if.then236, label %if.end334, !dbg !8430

if.then236:                                       ; preds = %if.else229
  call void @llvm.dbg.value(metadata i8 0, metadata !8272, metadata !DIExpression()), !dbg !8431
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %to, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8432
  %54 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !8432
  %55 = load %struct.tree_common*, %struct.tree_common** %54, align 8, !dbg !8432
  %type240 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %55, i64 0, i32 2, !dbg !8432
  %56 = bitcast %union.tree_node** %type240 to i64**, !dbg !8432
  %57 = load i64*, i64** %56, align 8, !dbg !8432
  %bf.load242 = load i64, i64* %57, align 8, !dbg !8432
  %bf.cast24419 = and i64 %bf.load242, 65535, !dbg !8432
  %cmp245 = icmp eq i64 %bf.cast24419, 10, !dbg !8432
  br i1 %cmp245, label %if.then259, label %lor.lhs.false247, !dbg !8432

lor.lhs.false247:                                 ; preds = %if.then236
  %cmp257 = icmp eq i64 %bf.cast24419, 12, !dbg !8432
  br i1 %cmp257, label %if.then259, label %if.end272, !dbg !8434

if.then259:                                       ; preds = %lor.lhs.false247, %if.then236
  %type266 = getelementptr inbounds i64, i64* %57, i64 2, !dbg !8435
  %58 = bitcast i64* %type266 to i64**, !dbg !8435
  %59 = load i64*, i64** %58, align 8, !dbg !8435
  %bf.load268 = load i64, i64* %59, align 8, !dbg !8435
  %bf.lshr269 = lshr i64 %bf.load268, 56, !dbg !8435
  %conv271 = trunc i64 %bf.lshr269 to i8, !dbg !8435
  call void @llvm.dbg.value(metadata i8 %conv271, metadata !8272, metadata !DIExpression()), !dbg !8431
  br label %if.end272, !dbg !8436

if.end272:                                        ; preds = %if.then259, %lor.lhs.false247
  %as.0 = phi i8 [ %conv271, %if.then259 ], [ 0, %lor.lhs.false247 ], !dbg !8431
  call void @llvm.dbg.value(metadata i8 %as.0, metadata !8272, metadata !DIExpression()), !dbg !8431
  %call273 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %from, %struct.rtx_def* null, i32 0, i32 0) #8, !dbg !8437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call273, metadata !8279, metadata !DIExpression()), !dbg !8431
  %call274 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call273) #6, !dbg !8438
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !8279, metadata !DIExpression()), !dbg !8431
  %60 = load i64*, i64** %1, align 8, !dbg !8439
  %bf.load278 = load i64, i64* %60, align 8, !dbg !8439
  %bf.cast28021 = and i64 %bf.load278, 65535, !dbg !8439
  %cmp281 = icmp eq i64 %bf.cast28021, 14, !dbg !8439
  br i1 %cmp281, label %cond.true283, label %cond.false287, !dbg !8439

cond.true283:                                     ; preds = %if.end272
  %.cast22 = bitcast i64* %60 to %union.tree_node*, !dbg !8439
  %call286 = tail call i32 @vector_type_mode(%union.tree_node* %.cast22) #6, !dbg !8439
  br label %cond.end295, !dbg !8439

cond.false287:                                    ; preds = %if.end272
  %type290 = bitcast i64* %60 to %struct.tree_type*, !dbg !8439
  %mode291 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type290, i64 0, i32 6, !dbg !8439
  %bf.load292 = load i32, i32* %mode291, align 4, !dbg !8439
  %bf.lshr293 = lshr i32 %bf.load292, 16, !dbg !8439
  %bf.clear294 = and i32 %bf.lshr293, 255, !dbg !8439
  br label %cond.end295, !dbg !8439

cond.end295:                                      ; preds = %cond.false287, %cond.true283
  %cond296 = phi i32 [ %call286, %cond.true283 ], [ %bf.clear294, %cond.false287 ], !dbg !8439
  call void @llvm.dbg.value(metadata i32 %cond296, metadata !8276, metadata !DIExpression()), !dbg !8431
  %61 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8440
  %call300 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %61, %struct.rtx_def* null, i32 0, i32 2) #8, !dbg !8441
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call300, metadata !8280, metadata !DIExpression()), !dbg !8431
  %call301 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %cond296, %struct.rtx_def* %call300, i8 zeroext %as.0) #6, !dbg !8442
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call301, metadata !8280, metadata !DIExpression()), !dbg !8431
  %call302 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %cond296, %struct.rtx_def* %call301) #6, !dbg !8443
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call302, metadata !8281, metadata !DIExpression()), !dbg !8431
  tail call void @set_mem_attributes(%struct.rtx_def* %call302, %union.tree_node* %to, i32 0) #6, !dbg !8444
  tail call void @set_mem_addr_space(%struct.rtx_def* %call302, i8 zeroext %as.0) #6, !dbg !8445
  %idxprom303 = zext i32 %cond296 to i64, !dbg !8446
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 62, i32 4, i64 %idxprom303, i32 0, !dbg !8447
  %62 = load i32, i32* %insn_code, align 4, !dbg !8447
  call void @llvm.dbg.value(metadata i32 %62, metadata !8278, metadata !DIExpression()), !dbg !8431
  %cmp305 = icmp eq i32 %62, 2956, !dbg !8448
  br i1 %cmp305, label %cond.true307, label %cond.end309, !dbg !8448

cond.true307:                                     ; preds = %cond.end295
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 4347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8448
  br label %cond.end309, !dbg !8448

cond.end309:                                      ; preds = %cond.end295, %cond.true307
  %idxprom311 = zext i32 %62 to i64, !dbg !8449
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom311, i32 3, !dbg !8450
  %63 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !8450
  %mode314 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %63, i64 1, i32 2, !dbg !8451
  %bf.load315 = load i16, i16* %mode314, align 8, !dbg !8451
  %bf.cast316 = zext i16 %bf.load315 to i32, !dbg !8451
  call void @llvm.dbg.value(metadata i32 %bf.cast316, metadata !8277, metadata !DIExpression()), !dbg !8431
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %63, i64 1, i32 0, !dbg !8452
  %64 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !8452
  %call321 = tail call i32 %64(%struct.rtx_def* %call274, i32 %bf.cast316) #6, !dbg !8454
  %tobool322 = icmp eq i32 %call321, 0, !dbg !8454
  %cmp324 = icmp ne i16 %bf.load315, 0, !dbg !8455
  %or.cond1 = and i1 %tobool322, %cmp324, !dbg !8456
  br i1 %or.cond1, label %if.then326, label %if.end328, !dbg !8456

if.then326:                                       ; preds = %cond.end309
  %call327 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast316, %struct.rtx_def* %call274) #6, !dbg !8457
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call327, metadata !8279, metadata !DIExpression()), !dbg !8431
  br label %if.end328, !dbg !8458

if.end328:                                        ; preds = %cond.end309, %if.then326
  %reg.0 = phi %struct.rtx_def* [ %call274, %cond.end309 ], [ %call327, %if.then326 ], !dbg !8431
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg.0, metadata !8279, metadata !DIExpression()), !dbg !8431
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom311, i32 2, !dbg !8459
  %65 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !8459
  %call331 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %65(%struct.rtx_def* %call302, %struct.rtx_def* %reg.0) #6, !dbg !8459
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call331, metadata !8282, metadata !DIExpression()), !dbg !8431
  %call332 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call331) #6, !dbg !8460
  br label %cleanup

if.end334:                                        ; preds = %if.else229
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %from, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8461
  %bf.load336 = load i64, i64* %66, align 8, !dbg !8461
  %bf.cast3385 = and i64 %bf.load336, 65535, !dbg !8462
  %cmp339 = icmp eq i64 %bf.cast3385, 59, !dbg !8462
  br i1 %cmp339, label %land.lhs.true341, label %if.end459, !dbg !8463

land.lhs.true341:                                 ; preds = %if.end334
  %call342 = tail call i32 @aggregate_value_p(%union.tree_node* %from, %union.tree_node* %from) #6, !dbg !8464
  %tobool343 = icmp eq i32 %call342, 0, !dbg !8464
  br i1 %tobool343, label %land.lhs.true344, label %if.end459, !dbg !8465

land.lhs.true344:                                 ; preds = %land.lhs.true341
  %type346 = getelementptr inbounds %union.tree_node, %union.tree_node* %from, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8466
  %67 = bitcast %union.tree_node** %type346 to %struct.tree_type**, !dbg !8466
  %68 = load %struct.tree_type*, %struct.tree_type** %67, align 8, !dbg !8466
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %68, i64 0, i32 2, !dbg !8466
  %69 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !8466
  %cmp348 = icmp eq %union.tree_node* %69, null, !dbg !8466
  br i1 %cmp348, label %if.end459, label %land.lhs.true350, !dbg !8467

land.lhs.true350:                                 ; preds = %land.lhs.true344
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8467
  %bf.load356 = load i64, i64* %70, align 8, !dbg !8468
  %bf.cast35812 = and i64 %bf.load356, 65535, !dbg !8469
  %cmp359 = icmp eq i64 %bf.cast35812, 23, !dbg !8469
  br i1 %cmp359, label %land.lhs.true361, label %if.end459, !dbg !8470

land.lhs.true361:                                 ; preds = %land.lhs.true350
  %bf.load363 = load i64, i64* %0, align 8, !dbg !8471
  %bf.cast36513 = and i64 %bf.load363, 65535, !dbg !8472
  %cmp366 = icmp eq i64 %bf.cast36513, 32, !dbg !8472
  br i1 %cmp366, label %land.lhs.true375, label %lor.lhs.false368, !dbg !8473

lor.lhs.false368:                                 ; preds = %land.lhs.true361
  %cmp373 = icmp eq i64 %bf.cast36513, 34, !dbg !8474
  br i1 %cmp373, label %land.lhs.true375, label %lor.lhs.false389, !dbg !8475

land.lhs.true375:                                 ; preds = %lor.lhs.false368, %land.lhs.true361
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %to, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8476
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8476
  %tobool376 = icmp eq %struct.rtx_def* %71, null, !dbg !8476
  br i1 %tobool376, label %cond.false380, label %cond.true377, !dbg !8476

cond.true377:                                     ; preds = %land.lhs.true375
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i64 0, i32 0, !dbg !8476
  br label %cond.end383, !dbg !8476

cond.false380:                                    ; preds = %land.lhs.true375
  tail call void @make_decl_rtl(%union.tree_node* %to) #6, !dbg !8476
  %.phi.trans.insert = bitcast %struct.rtx_def** %rtl to i32**, !dbg !8477
  %cond38418.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !8476
  br label %cond.end383, !dbg !8476

cond.end383:                                      ; preds = %cond.false380, %cond.true377
  %cond38418 = phi i32* [ %cond38418.pre, %cond.false380 ], [ %72, %cond.true377 ], !dbg !8476
  %bf.load385 = load i32, i32* %cond38418, align 8, !dbg !8476
  %bf.clear386 = and i32 %bf.load385, 65535, !dbg !8476
  %cmp387 = icmp eq i32 %bf.clear386, 37, !dbg !8476
  br i1 %cmp387, label %if.end459, label %cond.end383.lor.lhs.false389_crit_edge, !dbg !8478

cond.end383.lor.lhs.false389_crit_edge:           ; preds = %cond.end383
  %bf.load391.pre = load i64, i64* %0, align 8, !dbg !8479
  %.pre34 = and i64 %bf.load391.pre, 65535, !dbg !8480
  br label %lor.lhs.false389, !dbg !8478

lor.lhs.false389:                                 ; preds = %cond.end383.lor.lhs.false389_crit_edge, %lor.lhs.false368
  %bf.cast39315.pre-phi = phi i64 [ %.pre34, %cond.end383.lor.lhs.false389_crit_edge ], [ %bf.cast36513, %lor.lhs.false368 ], !dbg !8480
  %cmp394 = icmp eq i64 %bf.cast39315.pre-phi, 141, !dbg !8480
  br i1 %cmp394, label %if.end459, label %if.then396, !dbg !8481

if.then396:                                       ; preds = %lor.lhs.false389
  tail call void @push_temp_slots() #6, !dbg !8482
  %call397 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %from) #8, !dbg !8483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call397, metadata !8283, metadata !DIExpression()), !dbg !8484
  %call401 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %to, %struct.rtx_def* null, i32 0, i32 5) #8, !dbg !8485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call401, metadata !8257, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call401, metadata !8257, metadata !DIExpression()), !dbg !8293
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call401, i64 0, i32 0, !dbg !8487
  %bf.load403 = load i32, i32* %73, align 8, !dbg !8487
  %bf.clear404 = and i32 %bf.load403, 65535, !dbg !8487
  %cmp405 = icmp eq i32 %bf.clear404, 15, !dbg !8489
  br i1 %cmp405, label %if.then407, label %if.else414, !dbg !8490

if.then407:                                       ; preds = %if.then396
  %74 = load %union.tree_node*, %union.tree_node** %type346, align 8, !dbg !8491
  %call412 = tail call i64 @int_size_in_bytes(%union.tree_node* %74) #6, !dbg !8492
  %conv413 = trunc i64 %call412 to i32, !dbg !8492
  tail call void @emit_group_load(%struct.rtx_def* %call401, %struct.rtx_def* %call397, %union.tree_node* %74, i32 %conv413) #8, !dbg !8493
  br label %if.end458, !dbg !8493

if.else414:                                       ; preds = %if.then396
  %bf.clear417 = and i32 %bf.load403, 16711680, !dbg !8494
  %cmp418 = icmp eq i32 %bf.clear417, 65536, !dbg !8496
  br i1 %cmp418, label %if.then420, label %if.else423, !dbg !8497

if.then420:                                       ; preds = %if.else414
  %call421 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %from) #6, !dbg !8498
  %call422 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call401, %struct.rtx_def* %call397, %struct.rtx_def* %call421, i32 0) #8, !dbg !8499
  br label %if.end458, !dbg !8499

if.else423:                                       ; preds = %if.else414
  %75 = load i64*, i64** %1, align 8, !dbg !8500
  %bf.load427 = load i64, i64* %75, align 8, !dbg !8500
  %bf.cast42916 = and i64 %bf.load427, 65535, !dbg !8500
  %cmp430 = icmp eq i64 %bf.cast42916, 10, !dbg !8500
  br i1 %cmp430, label %if.then441, label %lor.lhs.false432, !dbg !8500

lor.lhs.false432:                                 ; preds = %if.else423
  %cmp439 = icmp eq i64 %bf.cast42916, 12, !dbg !8500
  br i1 %cmp439, label %if.then441, label %if.end455, !dbg !8503

if.then441:                                       ; preds = %lor.lhs.false432, %if.else423
  %bf.lshr443 = lshr i32 %bf.load403, 16, !dbg !8504
  %bf.clear444 = and i32 %bf.lshr443, 255, !dbg !8504
  %type448 = getelementptr inbounds i64, i64* %75, i64 2, !dbg !8505
  %76 = bitcast i64* %type448 to i64**, !dbg !8505
  %77 = load i64*, i64** %76, align 8, !dbg !8505
  %bf.load450 = load i64, i64* %77, align 8, !dbg !8505
  %bf.lshr451 = lshr i64 %bf.load450, 56, !dbg !8505
  %conv453 = trunc i64 %bf.lshr451 to i8, !dbg !8505
  %call454 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 %bf.clear444, %struct.rtx_def* %call397, i8 zeroext %conv453) #6, !dbg !8506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call454, metadata !8283, metadata !DIExpression()), !dbg !8484
  br label %if.end455, !dbg !8507

if.end455:                                        ; preds = %if.then441, %lor.lhs.false432
  %value.0 = phi %struct.rtx_def* [ %call454, %if.then441 ], [ %call397, %lor.lhs.false432 ], !dbg !8484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.0, metadata !8283, metadata !DIExpression()), !dbg !8484
  %call456 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call401, %struct.rtx_def* %value.0) #8, !dbg !8508
  br label %if.end458

if.end458:                                        ; preds = %if.then420, %if.end455, %if.then407
  tail call void @preserve_temp_slots(%struct.rtx_def* %call401) #6, !dbg !8509
  tail call void @free_temp_slots() #6, !dbg !8510
  tail call void @pop_temp_slots() #6, !dbg !8511
  br label %cleanup

if.end459:                                        ; preds = %land.lhs.true344, %land.lhs.true341, %lor.lhs.false389, %cond.end383, %land.lhs.true350, %if.end334
  %call463 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %to, %struct.rtx_def* null, i32 0, i32 5) #8, !dbg !8512
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call463, metadata !8257, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call463, metadata !8257, metadata !DIExpression()), !dbg !8293
  %bf.load466 = load i64, i64* %0, align 8, !dbg !8514
  %bf.cast4686 = and i64 %bf.load466, 65535, !dbg !8515
  %cmp469 = icmp eq i64 %bf.cast4686, 36, !dbg !8515
  br i1 %cmp469, label %land.lhs.true471, label %if.end500, !dbg !8516

land.lhs.true471:                                 ; preds = %if.end459
  %78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call463, i64 0, i32 0, !dbg !8517
  %bf.load472 = load i32, i32* %78, align 8, !dbg !8517
  %bf.clear473 = and i32 %bf.load472, 65535, !dbg !8517
  %cmp474 = icmp eq i32 %bf.clear473, 37, !dbg !8517
  br i1 %cmp474, label %if.then481, label %lor.lhs.false476, !dbg !8518

lor.lhs.false476:                                 ; preds = %land.lhs.true471
  %cmp479 = icmp eq i32 %bf.clear473, 15, !dbg !8519
  br i1 %cmp479, label %if.then481, label %if.end500, !dbg !8520

if.then481:                                       ; preds = %lor.lhs.false476, %land.lhs.true471
  tail call void @push_temp_slots() #6, !dbg !8521
  %bf.load482 = load i32, i32* %78, align 8, !dbg !8522
  %bf.lshr483 = lshr i32 %bf.load482, 16, !dbg !8522
  %bf.clear484 = and i32 %bf.lshr483, 255, !dbg !8522
  %call485 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %from, %struct.rtx_def* null, i32 %bf.clear484, i32 0) #8, !dbg !8523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call485, metadata !8286, metadata !DIExpression()), !dbg !8524
  %bf.load486 = load i32, i32* %78, align 8, !dbg !8525
  %bf.clear487 = and i32 %bf.load486, 65535, !dbg !8525
  %cmp488 = icmp eq i32 %bf.clear487, 15, !dbg !8527
  br i1 %cmp488, label %if.then490, label %if.else497, !dbg !8528

if.then490:                                       ; preds = %if.then481
  %type492 = getelementptr inbounds %union.tree_node, %union.tree_node* %from, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8529
  %79 = load %union.tree_node*, %union.tree_node** %type492, align 8, !dbg !8529
  %call495 = tail call i64 @int_size_in_bytes(%union.tree_node* %79) #6, !dbg !8530
  %conv496 = trunc i64 %call495 to i32, !dbg !8530
  tail call void @emit_group_load(%struct.rtx_def* %call463, %struct.rtx_def* %call485, %union.tree_node* %79, i32 %conv496) #8, !dbg !8531
  br label %if.end499, !dbg !8531

if.else497:                                       ; preds = %if.then481
  %call498 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call463, %struct.rtx_def* %call485) #8, !dbg !8532
  br label %if.end499

if.end499:                                        ; preds = %if.else497, %if.then490
  tail call void @preserve_temp_slots(%struct.rtx_def* %call463) #6, !dbg !8533
  tail call void @free_temp_slots() #6, !dbg !8534
  tail call void @pop_temp_slots() #6, !dbg !8535
  br label %cleanup

if.end500:                                        ; preds = %lor.lhs.false476, %if.end459
  br i1 %cmp469, label %land.lhs.true507, label %if.end593, !dbg !8536

land.lhs.true507:                                 ; preds = %if.end500
  %bf.load509 = load i64, i64* %66, align 8, !dbg !8537
  %bf.cast5118 = and i64 %bf.load509, 65535, !dbg !8538
  %cmp512 = icmp eq i64 %bf.cast5118, 47, !dbg !8538
  br i1 %cmp512, label %land.lhs.true514, label %if.end593, !dbg !8539

land.lhs.true514:                                 ; preds = %land.lhs.true507
  %operands516 = getelementptr inbounds %union.tree_node, %union.tree_node* %from, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8540
  %80 = bitcast %union.tree_node** %operands516 to %struct.tree_common**, !dbg !8540
  %81 = load %struct.tree_common*, %struct.tree_common** %80, align 8, !dbg !8540
  %type519 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %81, i64 0, i32 2, !dbg !8540
  %82 = bitcast %union.tree_node** %type519 to %struct.tree_common**, !dbg !8540
  %83 = load %struct.tree_common*, %struct.tree_common** %82, align 8, !dbg !8540
  %type521 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %83, i64 0, i32 2, !dbg !8540
  %84 = bitcast %union.tree_node** %type521 to i64**, !dbg !8540
  %85 = load i64*, i64** %84, align 8, !dbg !8540
  %bf.load523 = load i64, i64* %85, align 8, !dbg !8540
  %cmp526 = icmp ult i64 %bf.load523, 72057594037927936, !dbg !8540
  br i1 %cmp526, label %land.lhs.true528, label %if.end593, !dbg !8541

land.lhs.true528:                                 ; preds = %land.lhs.true514
  %call529 = tail call zeroext i8 @refs_may_alias_p(%union.tree_node* %to, %union.tree_node* %from) #6, !dbg !8542
  %tobool531 = icmp eq i8 %call529, 0, !dbg !8542
  br i1 %tobool531, label %if.end593, label %land.lhs.true532, !dbg !8543

land.lhs.true532:                                 ; preds = %land.lhs.true528
  %86 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8544
  %returns_struct = getelementptr inbounds %struct.function, %struct.function* %86, i64 0, i32 20, !dbg !8545
  %bf.load533 = load i32, i32* %returns_struct, align 8, !dbg !8545
  %bf.clear535 = and i32 %bf.load533, 67108864, !dbg !8545
  %tobool536 = icmp eq i32 %bf.clear535, 0, !dbg !8544
  br i1 %tobool536, label %if.end593, label %land.lhs.true537, !dbg !8546

land.lhs.true537:                                 ; preds = %land.lhs.true532
  %bf.clear541 = and i32 %bf.load533, 134217728, !dbg !8547
  %tobool542 = icmp eq i32 %bf.clear541, 0, !dbg !8548
  br i1 %tobool542, label %if.then543, label %if.end593, !dbg !8549

if.then543:                                       ; preds = %land.lhs.true537
  tail call void @push_temp_slots() #6, !dbg !8550
  %call545 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %from) #6, !dbg !8551
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call545, metadata !8292, metadata !DIExpression()), !dbg !8552
  %call546 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %from) #8, !dbg !8553
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call546, metadata !8289, metadata !DIExpression()), !dbg !8552
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 2), align 16, !dbg !8554
  %arrayidx549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call463, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8555
  %rt_rtx550 = bitcast %union.rtunion_def* %arrayidx549 to %struct.rtx_def**, !dbg !8555
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx550, align 8, !dbg !8555
  %arrayidx553 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call546, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8556
  %rt_rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**, !dbg !8556
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx554, align 8, !dbg !8556
  %90 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !8557
  %bf.load556 = load i64, i64* %90, align 8, !dbg !8557
  %bf.cast5589 = and i64 %bf.load556, 65535, !dbg !8557
  %cmp559 = icmp eq i64 %bf.cast5589, 14, !dbg !8557
  br i1 %cmp559, label %cond.true561, label %cond.false563, !dbg !8557

cond.true561:                                     ; preds = %if.then543
  %.cast = bitcast i64* %90 to %union.tree_node*, !dbg !8557
  %call562 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !8557
  %.pre = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !8558
  %bf.load572.pre = load i64, i64* %.pre, align 8, !dbg !8558
  br label %cond.end569, !dbg !8557

cond.false563:                                    ; preds = %if.then543
  %type564 = bitcast i64* %90 to %struct.tree_type*, !dbg !8557
  %mode565 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type564, i64 0, i32 6, !dbg !8557
  %bf.load566 = load i32, i32* %mode565, align 4, !dbg !8557
  %bf.lshr567 = lshr i32 %bf.load566, 16, !dbg !8557
  %bf.clear568 = and i32 %bf.lshr567, 255, !dbg !8557
  br label %cond.end569, !dbg !8557

cond.end569:                                      ; preds = %cond.false563, %cond.true561
  %bf.load572 = phi i64 [ %bf.load572.pre, %cond.true561 ], [ %bf.load556, %cond.false563 ], !dbg !8558
  %cond570 = phi i32 [ %call562, %cond.true561 ], [ %bf.clear568, %cond.false563 ], !dbg !8557
  %bf.lshr573 = lshr i64 %bf.load572, 21, !dbg !8558
  %91 = trunc i64 %bf.lshr573 to i32, !dbg !8558
  %bf.cast575 = and i32 %91, 1, !dbg !8558
  %call576 = tail call %struct.rtx_def* @convert_to_mode(i32 %cond570, %struct.rtx_def* %call545, i32 %bf.cast575) #8, !dbg !8559
  %92 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !8560
  %bf.load578 = load i64, i64* %92, align 8, !dbg !8560
  %bf.cast58010 = and i64 %bf.load578, 65535, !dbg !8560
  %cmp581 = icmp eq i64 %bf.cast58010, 14, !dbg !8560
  br i1 %cmp581, label %cond.true583, label %cond.false585, !dbg !8560

cond.true583:                                     ; preds = %cond.end569
  %.cast11 = bitcast i64* %92 to %union.tree_node*, !dbg !8560
  %call584 = tail call i32 @vector_type_mode(%union.tree_node* %.cast11) #6, !dbg !8560
  br label %cond.end591, !dbg !8560

cond.false585:                                    ; preds = %cond.end569
  %type586 = bitcast i64* %92 to %struct.tree_type*, !dbg !8560
  %mode587 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type586, i64 0, i32 6, !dbg !8560
  %bf.load588 = load i32, i32* %mode587, align 4, !dbg !8560
  %bf.lshr589 = lshr i32 %bf.load588, 16, !dbg !8560
  %bf.clear590 = and i32 %bf.lshr589, 255, !dbg !8560
  br label %cond.end591, !dbg !8560

cond.end591:                                      ; preds = %cond.false585, %cond.true583
  %cond592 = phi i32 [ %call584, %cond.true583 ], [ %bf.clear590, %cond.false585 ], !dbg !8560
  tail call void (%struct.rtx_def*, i32, i32, i32, ...) @emit_library_call(%struct.rtx_def* %87, i32 0, i32 0, i32 3, %struct.rtx_def* %88, i32 16, %struct.rtx_def* %89, i32 16, %struct.rtx_def* %call576, i32 %cond592) #6, !dbg !8561
  tail call void @preserve_temp_slots(%struct.rtx_def* %call463) #6, !dbg !8562
  tail call void @free_temp_slots() #6, !dbg !8563
  tail call void @pop_temp_slots() #6, !dbg !8564
  br label %cleanup

if.end593:                                        ; preds = %land.lhs.true537, %land.lhs.true532, %land.lhs.true528, %land.lhs.true514, %land.lhs.true507, %if.end500
  tail call void @push_temp_slots() #6, !dbg !8565
  %call594 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %from, %struct.rtx_def* %call463, i32 0, i8 zeroext %nontemporal) #8, !dbg !8566
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8258, metadata !DIExpression()), !dbg !8293
  tail call void @preserve_temp_slots(%struct.rtx_def* null) #6, !dbg !8567
  tail call void @free_temp_slots() #6, !dbg !8568
  tail call void @pop_temp_slots() #6, !dbg !8569
  br label %cleanup, !dbg !8570

cleanup:                                          ; preds = %if.end, %if.end593, %cond.end591, %if.end499, %if.end458, %if.end328, %if.end228, %if.then
  ret void, !dbg !8571
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !8572 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !8577, metadata !DIExpression()), !dbg !8578
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8579
  %bf.load = load i64, i64* %0, align 8, !dbg !8579
  %1 = trunc i64 %bf.load to i16, !dbg !8579
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !8580

sw.default:                                       ; preds = %entry
  br label %return, !dbg !8581

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !8583
  ret i8 %retval.0, !dbg !8584
}

declare dso_local void @push_temp_slots() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* %pbitsize, i64* %pbitpos, %union.tree_node** %poffset, i32* %pmode, i32* %punsignedp, i32* %pvolatilep, i8 zeroext %keep_aligning) local_unnamed_addr #4 !dbg !8585 {
entry:
  %tem = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8592, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i64* %pbitsize, metadata !8593, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i64* %pbitpos, metadata !8594, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node** %poffset, metadata !8595, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i32* %pmode, metadata !8596, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i32* %punsignedp, metadata !8597, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i32* %pvolatilep, metadata !8598, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i8 %keep_aligning, metadata !8599, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8600, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i32 0, metadata !8601, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i8 0, metadata !8602, metadata !DIExpression()), !dbg !8621
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !8622
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8603, metadata !DIExpression()), !dbg !8621
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19), align 8, !dbg !8623
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8604, metadata !DIExpression()), !dbg !8621
  store i64 -1, i64* %pbitsize, align 8, !dbg !8624
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8625
  %bf.load = load i64, i64* %2, align 8, !dbg !8625
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8626
  %cmp = icmp eq i64 %bf.cast1, 41, !dbg !8626
  br i1 %cmp, label %if.then, label %if.else25, !dbg !8627

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8628
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8628
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8628
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8605, metadata !DIExpression()), !dbg !8629
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8630
  %4 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !8630
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8600, metadata !DIExpression()), !dbg !8621
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8631
  %5 = bitcast i40* %decl_flag_1 to i64*, !dbg !8631
  %bf.load3 = load i64, i64* %5, align 8, !dbg !8631
  %bf.cast514 = and i64 %bf.load3, 33554432, !dbg !8631
  %tobool = icmp ne i64 %bf.cast514, 0, !dbg !8631
  %6 = trunc i64 %bf.load3 to i32, !dbg !8633
  %bf.cast16 = and i32 %6, 255, !dbg !8633
  %cmp17 = icmp eq i32 %bf.cast16, 1, !dbg !8634
  %mode.0 = select i1 %tobool, i32 0, i32 %bf.cast16, !dbg !8634
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !8601, metadata !DIExpression()), !dbg !8621
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8635
  %bf.load21 = load i64, i64* %7, align 8, !dbg !8635
  %bf.lshr22 = lshr i64 %bf.load21, 21, !dbg !8635
  %8 = trunc i64 %bf.lshr22 to i32, !dbg !8635
  %bf.cast24 = and i32 %8, 1, !dbg !8635
  store i32 %bf.cast24, i32* %punsignedp, align 4, !dbg !8636
  %narrow = and i1 %tobool, %cmp17, !dbg !8637
  %phitmp = zext i1 %narrow to i32, !dbg !8637
  br label %if.end150, !dbg !8637

if.else25:                                        ; preds = %entry
  %cmp30 = icmp eq i64 %bf.cast1, 42, !dbg !8638
  br i1 %cmp30, label %if.then31, label %if.else108, !dbg !8640

if.then31:                                        ; preds = %if.else25
  %operands33 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8641
  %arrayidx34 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands33, i64 1, !dbg !8641
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx34, align 8, !dbg !8641
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !8600, metadata !DIExpression()), !dbg !8621
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8643
  %10 = bitcast %union.tree_node** %type to i64**, !dbg !8643
  %11 = load i64*, i64** %10, align 8, !dbg !8643
  %bf.load36 = load i64, i64* %11, align 8, !dbg !8643
  %bf.cast387 = and i64 %bf.load36, 65535, !dbg !8643
  %cmp39 = icmp eq i64 %bf.cast387, 6, !dbg !8643
  br i1 %cmp39, label %lor.rhs, label %lor.lhs.false, !dbg !8643

lor.lhs.false:                                    ; preds = %if.then31
  %cmp46 = icmp eq i64 %bf.cast387, 7, !dbg !8643
  br i1 %cmp46, label %lor.rhs, label %lor.lhs.false47, !dbg !8643

lor.lhs.false47:                                  ; preds = %lor.lhs.false
  %cmp54 = icmp eq i64 %bf.cast387, 8, !dbg !8643
  br i1 %cmp54, label %lor.rhs, label %lor.end, !dbg !8644

lor.rhs:                                          ; preds = %lor.lhs.false47, %lor.lhs.false, %if.then31
  %bf.lshr59 = lshr i64 %bf.load36, 21, !dbg !8645
  %12 = trunc i64 %bf.lshr59 to i32, !dbg !8645
  %bf.cast61 = and i32 %12, 1, !dbg !8645
  br label %lor.end, !dbg !8644

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false47
  %13 = phi i32 [ 1, %lor.lhs.false47 ], [ %bf.cast61, %lor.rhs ]
  store i32 %13, i32* %punsignedp, align 4, !dbg !8646
  %14 = bitcast %union.tree_node** %operands33 to %struct.tree_common**, !dbg !8647
  %15 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !8647
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !8647
  %16 = bitcast %union.tree_node** %type67 to i64**, !dbg !8647
  %17 = load i64*, i64** %16, align 8, !dbg !8647
  %bf.load69 = load i64, i64* %17, align 8, !dbg !8647
  %bf.cast7111 = and i64 %bf.load69, 65535, !dbg !8649
  %cmp72 = icmp eq i64 %bf.cast7111, 14, !dbg !8649
  br i1 %cmp72, label %land.lhs.true, label %if.end150, !dbg !8650

land.lhs.true:                                    ; preds = %lor.end
  %18 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8651
  %type81 = getelementptr inbounds i64, i64* %17, i64 2, !dbg !8652
  %19 = bitcast i64* %type81 to %union.tree_node**, !dbg !8652
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !8652
  %cmp82 = icmp eq %union.tree_node* %18, %20, !dbg !8653
  br i1 %cmp82, label %land.lhs.true83, label %if.end150, !dbg !8654

land.lhs.true83:                                  ; preds = %land.lhs.true
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8655
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !8655
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %9, %union.tree_node* %22) #6, !dbg !8656
  %tobool88 = icmp eq i32 %call, 0, !dbg !8656
  br i1 %tobool88, label %if.end150, label %if.then89, !dbg !8657

if.then89:                                        ; preds = %land.lhs.true83
  %23 = load i64*, i64** %10, align 8, !dbg !8658
  %bf.load93 = load i64, i64* %23, align 8, !dbg !8658
  %bf.cast9512 = and i64 %bf.load93, 65535, !dbg !8658
  %cmp96 = icmp eq i64 %bf.cast9512, 14, !dbg !8658
  br i1 %cmp96, label %cond.true, label %cond.false, !dbg !8658

cond.true:                                        ; preds = %if.then89
  %.cast13 = bitcast i64* %23 to %union.tree_node*, !dbg !8658
  %call99 = tail call i32 @vector_type_mode(%union.tree_node* %.cast13) #6, !dbg !8658
  br label %if.end150, !dbg !8658

cond.false:                                       ; preds = %if.then89
  %type102 = bitcast i64* %23 to %struct.tree_type*, !dbg !8658
  %mode103 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type102, i64 0, i32 6, !dbg !8658
  %bf.load104 = load i32, i32* %mode103, align 4, !dbg !8658
  %bf.lshr105 = lshr i32 %bf.load104, 16, !dbg !8658
  %bf.clear106 = and i32 %bf.lshr105, 255, !dbg !8658
  br label %if.end150, !dbg !8658

if.else108:                                       ; preds = %if.else25
  %type110 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8659
  %24 = bitcast %union.tree_node** %type110 to i64**, !dbg !8659
  %25 = load i64*, i64** %24, align 8, !dbg !8659
  %bf.load112 = load i64, i64* %25, align 8, !dbg !8659
  %bf.cast1143 = and i64 %bf.load112, 65535, !dbg !8659
  %cmp115 = icmp eq i64 %bf.cast1143, 14, !dbg !8659
  br i1 %cmp115, label %cond.true116, label %cond.false120, !dbg !8659

cond.true116:                                     ; preds = %if.else108
  %.cast = bitcast i64* %25 to %union.tree_node*, !dbg !8659
  %call119 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !8659
  %.pre = load i64*, i64** %24, align 8, !dbg !8661
  %bf.load133.pre = load i64, i64* %.pre, align 8, !dbg !8661
  br label %cond.end128, !dbg !8659

cond.false120:                                    ; preds = %if.else108
  %type123 = bitcast i64* %25 to %struct.tree_type*, !dbg !8659
  %mode124 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type123, i64 0, i32 6, !dbg !8659
  %bf.load125 = load i32, i32* %mode124, align 4, !dbg !8659
  %bf.lshr126 = lshr i32 %bf.load125, 16, !dbg !8659
  %bf.clear127 = and i32 %bf.lshr126, 255, !dbg !8659
  br label %cond.end128, !dbg !8659

cond.end128:                                      ; preds = %cond.false120, %cond.true116
  %bf.load133 = phi i64 [ %bf.load133.pre, %cond.true116 ], [ %bf.load112, %cond.false120 ], !dbg !8661
  %cond129 = phi i32 [ %call119, %cond.true116 ], [ %bf.clear127, %cond.false120 ], !dbg !8659
  call void @llvm.dbg.value(metadata i32 %cond129, metadata !8601, metadata !DIExpression()), !dbg !8621
  %bf.lshr134 = lshr i64 %bf.load133, 21, !dbg !8661
  %26 = trunc i64 %bf.lshr134 to i32, !dbg !8661
  %bf.cast136 = and i32 %26, 1, !dbg !8661
  store i32 %bf.cast136, i32* %punsignedp, align 4, !dbg !8662
  %cmp137 = icmp eq i32 %cond129, 1, !dbg !8663
  br i1 %cmp137, label %if.then138, label %if.else143, !dbg !8665

if.then138:                                       ; preds = %cond.end128
  %27 = bitcast %union.tree_node** %type110 to %struct.tree_type**, !dbg !8666
  %28 = load %struct.tree_type*, %struct.tree_type** %27, align 8, !dbg !8666
  %size142 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %28, i64 0, i32 2, !dbg !8666
  %29 = load %union.tree_node*, %union.tree_node** %size142, align 8, !dbg !8666
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !8600, metadata !DIExpression()), !dbg !8621
  br label %if.end150, !dbg !8667

if.else143:                                       ; preds = %cond.end128
  %idxprom = zext i32 %cond129 to i64, !dbg !8668
  %arrayidx144 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8668
  %30 = load i8, i8* %arrayidx144, align 1, !dbg !8668
  %conv145 = zext i8 %30 to i64, !dbg !8668
  %mul = shl nuw nsw i64 %conv145, 3, !dbg !8668
  store i64 %mul, i64* %pbitsize, align 8, !dbg !8669
  br label %if.end150

if.end150:                                        ; preds = %land.lhs.true83, %cond.true, %cond.false, %land.lhs.true, %lor.end, %if.else143, %if.then138, %if.then
  %size_tree.2 = phi %union.tree_node* [ %4, %if.then ], [ %9, %cond.true ], [ %9, %cond.false ], [ %9, %land.lhs.true83 ], [ %9, %land.lhs.true ], [ %9, %lor.end ], [ %29, %if.then138 ], [ null, %if.else143 ], !dbg !8670
  %mode.3 = phi i32 [ %mode.0, %if.then ], [ %call99, %cond.true ], [ %bf.clear106, %cond.false ], [ 0, %land.lhs.true83 ], [ 0, %land.lhs.true ], [ 0, %lor.end ], [ 1, %if.then138 ], [ %cond129, %if.else143 ], !dbg !8621
  %blkmode_bitfield.2 = phi i32 [ %phitmp, %if.then ], [ 0, %cond.true ], [ 0, %cond.false ], [ 0, %land.lhs.true83 ], [ 0, %land.lhs.true ], [ 0, %lor.end ], [ 0, %if.then138 ], [ 0, %if.else143 ]
  call void @llvm.dbg.value(metadata i32 %mode.3, metadata !8601, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %size_tree.2, metadata !8600, metadata !DIExpression()), !dbg !8621
  %cmp151 = icmp eq %union.tree_node* %size_tree.2, null, !dbg !8671
  br i1 %cmp151, label %if.end160, label %if.then153, !dbg !8673

if.then153:                                       ; preds = %if.end150
  %call154 = tail call i32 @host_integerp(%union.tree_node* nonnull %size_tree.2, i32 1) #6, !dbg !8674
  %tobool155 = icmp eq i32 %call154, 0, !dbg !8674
  br i1 %tobool155, label %if.then156, label %if.else157, !dbg !8677

if.then156:                                       ; preds = %if.then153
  call void @llvm.dbg.value(metadata i32 1, metadata !8601, metadata !DIExpression()), !dbg !8621
  store i64 -1, i64* %pbitsize, align 8, !dbg !8678
  br label %if.end160, !dbg !8679

if.else157:                                       ; preds = %if.then153
  %call158 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %size_tree.2, i32 1) #6, !dbg !8680
  store i64 %call158, i64* %pbitsize, align 8, !dbg !8681
  br label %if.end160

if.end160:                                        ; preds = %if.end150, %if.then156, %if.else157
  %mode.5 = phi i32 [ %mode.3, %if.end150 ], [ %mode.3, %if.else157 ], [ 1, %if.then156 ], !dbg !8682
  call void @llvm.dbg.value(metadata i32 %mode.5, metadata !8601, metadata !DIExpression()), !dbg !8621
  br label %while.cond, !dbg !8683

while.cond:                                       ; preds = %if.end262, %if.end160
  %offset.0 = phi %union.tree_node* [ %0, %if.end160 ], [ %offset.2, %if.end262 ], !dbg !8684
  %bit_offset.0 = phi %union.tree_node* [ %1, %if.end160 ], [ %bit_offset.2, %if.end262 ], !dbg !8685
  %exp.addr.0 = phi %union.tree_node* [ %exp, %if.end160 ], [ %41, %if.end262 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !8592, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %bit_offset.0, metadata !8604, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.0, metadata !8603, metadata !DIExpression()), !dbg !8621
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8686
  %bf.load162 = load i64, i64* %31, align 8, !dbg !8686
  %32 = trunc i64 %bf.load162 to i16, !dbg !8686
  switch i16 %32, label %done [
    i16 42, label %sw.bb
    i16 41, label %sw.bb169
    i16 45, label %sw.bb183
    i16 46, label %sw.bb183
    i16 43, label %sw.epilog
    i16 44, label %sw.bb199
    i16 118, label %sw.bb202
  ], !dbg !8687

sw.bb:                                            ; preds = %while.cond
  %operands166 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8688
  %arrayidx167 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands166, i64 2, !dbg !8688
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx167, align 8, !dbg !8688
  %call168 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %bit_offset.0, %union.tree_node* %33) #6, !dbg !8688
  call void @llvm.dbg.value(metadata %union.tree_node* %call168, metadata !8604, metadata !DIExpression()), !dbg !8621
  br label %sw.epilog, !dbg !8689

sw.bb169:                                         ; preds = %while.cond
  %operands172 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8690
  %arrayidx173 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands172, i64 1, !dbg !8690
  %34 = bitcast %union.tree_node** %arrayidx173 to %struct.tree_field_decl**, !dbg !8690
  %35 = load %struct.tree_field_decl*, %struct.tree_field_decl** %34, align 8, !dbg !8690
  %call174 = tail call %union.tree_node* @component_ref_field_offset(%union.tree_node* %exp.addr.0) #8, !dbg !8691
  call void @llvm.dbg.value(metadata %union.tree_node* %call174, metadata !8612, metadata !DIExpression()), !dbg !8692
  %cmp175 = icmp eq %union.tree_node* %call174, null, !dbg !8693
  br i1 %cmp175, label %sw.epilog, label %if.end178, !dbg !8695

if.end178:                                        ; preds = %sw.bb169
  %call179 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %offset.0, %union.tree_node* nonnull %call174) #6, !dbg !8696
  call void @llvm.dbg.value(metadata %union.tree_node* %call179, metadata !8603, metadata !DIExpression()), !dbg !8621
  %bit_offset180 = getelementptr inbounds %struct.tree_field_decl, %struct.tree_field_decl* %35, i64 0, i32 4, !dbg !8697
  %36 = load %union.tree_node*, %union.tree_node** %bit_offset180, align 8, !dbg !8697
  %call181 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %bit_offset.0, %union.tree_node* %36) #6, !dbg !8697
  call void @llvm.dbg.value(metadata %union.tree_node* %call181, metadata !8604, metadata !DIExpression()), !dbg !8621
  br label %sw.epilog, !dbg !8698

sw.bb183:                                         ; preds = %while.cond, %while.cond
  %operands185 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8699
  %arrayidx186 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands185, i64 1, !dbg !8699
  %37 = load %union.tree_node*, %union.tree_node** %arrayidx186, align 8, !dbg !8699
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !8613, metadata !DIExpression()), !dbg !8700
  %call187 = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %exp.addr.0) #8, !dbg !8701
  call void @llvm.dbg.value(metadata %union.tree_node* %call187, metadata !8615, metadata !DIExpression()), !dbg !8700
  %call188 = tail call %union.tree_node* @array_ref_element_size(%union.tree_node* %exp.addr.0) #8, !dbg !8702
  call void @llvm.dbg.value(metadata %union.tree_node* %call188, metadata !8616, metadata !DIExpression()), !dbg !8700
  %call189 = tail call i32 @integer_zerop(%union.tree_node* %call187) #6, !dbg !8703
  %tobool190 = icmp eq i32 %call189, 0, !dbg !8703
  br i1 %tobool190, label %if.then191, label %if.end195, !dbg !8705

if.then191:                                       ; preds = %sw.bb183
  %type193 = getelementptr inbounds %union.tree_node, %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8706
  %38 = load %union.tree_node*, %union.tree_node** %type193, align 8, !dbg !8706
  %call194 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %38, %union.tree_node* %37, %union.tree_node* %call187) #6, !dbg !8706
  call void @llvm.dbg.value(metadata %union.tree_node* %call194, metadata !8613, metadata !DIExpression()), !dbg !8700
  br label %if.end195, !dbg !8707

if.end195:                                        ; preds = %sw.bb183, %if.then191
  %index.0 = phi %union.tree_node* [ %37, %sw.bb183 ], [ %call194, %if.then191 ], !dbg !8700
  call void @llvm.dbg.value(metadata %union.tree_node* %index.0, metadata !8613, metadata !DIExpression()), !dbg !8700
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !8708
  %call196 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %39, %union.tree_node* %index.0) #6, !dbg !8708
  %call197 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %call196, %union.tree_node* %call188) #6, !dbg !8708
  %call198 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %offset.0, %union.tree_node* %call197) #6, !dbg !8708
  call void @llvm.dbg.value(metadata %union.tree_node* %call198, metadata !8603, metadata !DIExpression()), !dbg !8621
  br label %sw.epilog, !dbg !8709

sw.bb199:                                         ; preds = %while.cond
  %40 = load i64, i64* %pbitsize, align 8, !dbg !8710
  %call200 = tail call %union.tree_node* @size_int_kind(i64 %40, i32 2) #6, !dbg !8710
  %call201 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %bit_offset.0, %union.tree_node* %call200) #6, !dbg !8710
  call void @llvm.dbg.value(metadata %union.tree_node* %call201, metadata !8604, metadata !DIExpression()), !dbg !8621
  br label %sw.epilog, !dbg !8711

sw.bb202:                                         ; preds = %while.cond
  br label %sw.epilog, !dbg !8712

sw.epilog:                                        ; preds = %if.end178, %sw.bb169, %sw.bb202, %sw.bb199, %while.cond, %if.end195, %sw.bb
  %offset.2 = phi %union.tree_node* [ %offset.0, %sw.bb202 ], [ %offset.0, %sw.bb199 ], [ %offset.0, %while.cond ], [ %call198, %if.end195 ], [ %offset.0, %sw.bb ], [ %call179, %if.end178 ], [ %offset.0, %sw.bb169 ], !dbg !8621
  %bit_offset.2 = phi %union.tree_node* [ %bit_offset.0, %sw.bb202 ], [ %call201, %sw.bb199 ], [ %bit_offset.0, %while.cond ], [ %bit_offset.0, %if.end195 ], [ %call168, %sw.bb ], [ %call181, %if.end178 ], [ %bit_offset.0, %sw.bb169 ], !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %bit_offset.2, metadata !8604, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.2, metadata !8603, metadata !DIExpression()), !dbg !8621
  %bf.load256 = load i64, i64* %31, align 8, !dbg !8713
  %bf.cast2594 = and i64 %bf.load256, 524288, !dbg !8713
  %tobool260 = icmp eq i64 %bf.cast2594, 0, !dbg !8713
  br i1 %tobool260, label %if.end262, label %if.then261, !dbg !8715

if.then261:                                       ; preds = %sw.epilog
  store i32 1, i32* %pvolatilep, align 4, !dbg !8716
  br label %if.end262, !dbg !8717

if.end262:                                        ; preds = %sw.epilog, %if.then261
  %operands264 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8718
  %41 = load %union.tree_node*, %union.tree_node** %operands264, align 8, !dbg !8718
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !8592, metadata !DIExpression()), !dbg !8621
  br label %while.cond, !dbg !8683, !llvm.loop !8719

done:                                             ; preds = %while.cond
  %offset.0.lcssa = phi %union.tree_node* [ %offset.0, %while.cond ], !dbg !8684
  %bit_offset.0.lcssa = phi %union.tree_node* [ %bit_offset.0, %while.cond ], !dbg !8685
  %exp.addr.0.lcssa = phi %union.tree_node* [ %exp.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.0.lcssa, metadata !8603, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %bit_offset.0.lcssa, metadata !8604, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !8592, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.0.lcssa, metadata !8603, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %bit_offset.0.lcssa, metadata !8604, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !8592, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.0.lcssa, metadata !8603, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %bit_offset.0.lcssa, metadata !8604, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !8592, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.label(metadata !8620), !dbg !8721
  %call266 = tail call i32 @host_integerp(%union.tree_node* %offset.0.lcssa, i32 0) #6, !dbg !8722
  %tobool267 = icmp eq i32 %call266, 0, !dbg !8722
  br i1 %tobool267, label %if.end281, label %if.then268, !dbg !8723

if.then268:                                       ; preds = %done
  %42 = bitcast %struct.double_int* %tem to i8*, !dbg !8724
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #7, !dbg !8724
  %call269 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* %offset.0.lcssa) #6, !dbg !8725
  %43 = extractvalue { i64, i64 } %call269, 0, !dbg !8725
  %44 = extractvalue { i64, i64 } %call269, 1, !dbg !8725
  %call271 = tail call fastcc { i64, i64 } @uhwi_to_double_int(i64 8) #8, !dbg !8726
  %call272 = tail call { i64, i64 } @double_int_mul(i64 %43, i64 %44, i64 8, i64 0) #6, !dbg !8727
  %45 = getelementptr inbounds %struct.double_int, %struct.double_int* %tem, i64 0, i32 0, !dbg !8727
  %46 = extractvalue { i64, i64 } %call272, 0, !dbg !8727
  %47 = getelementptr inbounds %struct.double_int, %struct.double_int* %tem, i64 0, i32 1, !dbg !8727
  %48 = extractvalue { i64, i64 } %call272, 1, !dbg !8727
  %49 = bitcast %struct.double_int* %tmp to i8*, !dbg !8728
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #7, !dbg !8728
  %call274 = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* %bit_offset.0.lcssa) #6, !dbg !8729
  %50 = extractvalue { i64, i64 } %call274, 0, !dbg !8729
  %51 = extractvalue { i64, i64 } %call274, 1, !dbg !8729
  %call275 = tail call { i64, i64 } @double_int_add(i64 %46, i64 %48, i64 %50, i64 %51) #6, !dbg !8728
  %52 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !8728
  %53 = extractvalue { i64, i64 } %call275, 0, !dbg !8728
  store i64 %53, i64* %52, align 8, !dbg !8728
  %54 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !8728
  %55 = extractvalue { i64, i64 } %call275, 1, !dbg !8728
  store i64 %55, i64* %54, align 8, !dbg !8728
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %49, i64 16, i1 false), !dbg !8728
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #7, !dbg !8728
  %56 = load i64, i64* %45, align 8, !dbg !8730
  %57 = load i64, i64* %47, align 8, !dbg !8730
  %call276 = tail call zeroext i8 @double_int_fits_in_shwi_p(i64 %56, i64 %57) #6, !dbg !8730
  %tobool277 = icmp eq i8 %call276, 0, !dbg !8730
  br i1 %tobool277, label %if.end280, label %if.then278, !dbg !8732

if.then278:                                       ; preds = %if.then268
  %call279 = tail call i64 @double_int_to_shwi(i64 %56, i64 %57) #6, !dbg !8733
  store i64 %call279, i64* %pbitpos, align 8, !dbg !8735
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8603, metadata !DIExpression()), !dbg !8621
  store %union.tree_node* null, %union.tree_node** %poffset, align 8, !dbg !8736
  br label %if.end280, !dbg !8737

if.end280:                                        ; preds = %if.then268, %if.then278
  %offset.3 = phi %union.tree_node* [ null, %if.then278 ], [ %offset.0.lcssa, %if.then268 ], !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.3, metadata !8603, metadata !DIExpression()), !dbg !8621
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #7, !dbg !8738
  br label %if.end281, !dbg !8739

if.end281:                                        ; preds = %done, %if.end280
  %offset.4 = phi %union.tree_node* [ %offset.3, %if.end280 ], [ %offset.0.lcssa, %done ], !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.4, metadata !8603, metadata !DIExpression()), !dbg !8621
  %tobool282 = icmp eq %union.tree_node* %offset.4, null, !dbg !8740
  br i1 %tobool282, label %if.end285, label %if.then283, !dbg !8742

if.then283:                                       ; preds = %if.end281
  %call284 = tail call i64 @tree_low_cst(%union.tree_node* %bit_offset.0.lcssa, i32 0) #6, !dbg !8743
  store i64 %call284, i64* %pbitpos, align 8, !dbg !8745
  store %union.tree_node* %offset.4, %union.tree_node** %poffset, align 8, !dbg !8746
  br label %if.end285, !dbg !8747

if.end285:                                        ; preds = %if.end281, %if.then283
  %cmp286 = icmp eq i32 %mode.5, 0, !dbg !8748
  %tobool290 = icmp ne i32 %blkmode_bitfield.2, 0, !dbg !8750
  %or.cond = and i1 %cmp286, %tobool290, !dbg !8751
  br i1 %or.cond, label %land.lhs.true291, label %if.else299, !dbg !8751

land.lhs.true291:                                 ; preds = %if.end285
  %58 = load i64, i64* %pbitpos, align 8, !dbg !8752
  %rem5 = and i64 %58, 7, !dbg !8753
  %cmp292 = icmp eq i64 %rem5, 0, !dbg !8753
  br i1 %cmp292, label %land.lhs.true294, label %if.else299, !dbg !8754

land.lhs.true294:                                 ; preds = %land.lhs.true291
  %59 = load i64, i64* %pbitsize, align 8, !dbg !8755
  %rem2956 = and i64 %59, 7, !dbg !8756
  %cmp296 = icmp eq i64 %rem2956, 0, !dbg !8756
  br i1 %cmp296, label %if.then298, label %if.else299, !dbg !8757

if.then298:                                       ; preds = %land.lhs.true294
  br label %if.end300, !dbg !8758

if.else299:                                       ; preds = %land.lhs.true294, %land.lhs.true291, %if.end285
  br label %if.end300

if.end300:                                        ; preds = %if.else299, %if.then298
  %storemerge = phi i32 [ %mode.5, %if.else299 ], [ 1, %if.then298 ], !dbg !8759
  store i32 %storemerge, i32* %pmode, align 4, !dbg !8759
  ret %union.tree_node* %exp.addr.0.lcssa, !dbg !8760
}

declare dso_local void @expand_builtin_trap() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !8761 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8765, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !8766, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8767, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !8768, metadata !DIExpression()), !dbg !8769
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier, %struct.rtx_def** null) #8, !dbg !8770
  ret %struct.rtx_def* %call, !dbg !8771
}

declare dso_local %struct.rtx_def* @offset_address(%struct.rtx_def*, %struct.rtx_def*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i64 @highest_pow2_factor_for_target(%union.tree_node* %target, %union.tree_node* %exp) unnamed_addr #4 !dbg !8772 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %target, metadata !8776, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8777, metadata !DIExpression()), !dbg !8780
  %call = tail call fastcc i64 @target_align(%union.tree_node* %target) #8, !dbg !8781
  %div = lshr i64 %call, 3, !dbg !8782
  call void @llvm.dbg.value(metadata i64 %div, metadata !8778, metadata !DIExpression()), !dbg !8780
  %call1 = tail call i64 @highest_pow2_factor(%union.tree_node* %exp) #8, !dbg !8783
  call void @llvm.dbg.value(metadata i64 %call1, metadata !8779, metadata !DIExpression()), !dbg !8780
  %cmp = icmp ugt i64 %call1, %div, !dbg !8784
  %call1.div = select i1 %cmp, i64 %call1, i64 %div, !dbg !8784
  ret i64 %call1.div, !dbg !8785
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %call_param_p, i8 zeroext %nontemporal) local_unnamed_addr #4 !dbg !8786 {
entry:
  %alt_rtl = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8790, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !8791, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i32 %call_param_p, metadata !8792, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8 %nontemporal, metadata !8793, metadata !DIExpression()), !dbg !8833
  %0 = bitcast %struct.rtx_def** %alt_rtl to i8*, !dbg !8834
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8834
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8795, metadata !DIExpression()), !dbg !8833
  store %struct.rtx_def* null, %struct.rtx_def** %alt_rtl, align 8, !dbg !8835
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8836
  %bf.load = load i64, i64* %1, align 8, !dbg !8836
  %bf.cast = and i64 %bf.load, 65535, !dbg !8836
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !8836
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8836
  %cmp = icmp ugt i32 %2, 3, !dbg !8836
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !8836

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %2, 11, !dbg !8836
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !8836

cond.true:                                        ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8836
  %4 = load i32, i32* %3, align 8, !dbg !8836
  br label %cond.end, !dbg !8836

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !8836
  call void @llvm.dbg.value(metadata i32 %cond, metadata !8796, metadata !DIExpression()), !dbg !8833
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8837
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !8837
  %6 = load i64*, i64** %5, align 8, !dbg !8837
  %bf.load10 = load i64, i64* %6, align 8, !dbg !8837
  %bf.cast123 = and i64 %bf.load10, 65535, !dbg !8837
  %cmp13 = icmp eq i64 %bf.cast123, 19, !dbg !8837
  %7 = bitcast i64* %6 to %struct.tree_type*, !dbg !8839
  %8 = bitcast i64* %6 to %union.tree_node*, !dbg !8839
  br i1 %cmp13, label %if.then, label %if.end, !dbg !8839

if.then:                                          ; preds = %cond.end
  %tobool = icmp eq i32 %call_param_p, 0, !dbg !8840
  br i1 %tobool, label %cond.end16, label %cond.true14, !dbg !8840

cond.true14:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 4532, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8840
  br label %cond.end16, !dbg !8840

cond.end16:                                       ; preds = %if.then, %cond.true14
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8842
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %9, i32 0, i32 0) #8, !dbg !8843
  br label %cleanup775, !dbg !8844

if.end:                                           ; preds = %cond.end
  %cmp22 = icmp eq i64 %bf.cast, 52, !dbg !8845
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !8846

if.then23:                                        ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8847
  %10 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8847
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8849
  %tobool26 = icmp ne i32 %call_param_p, 0, !dbg !8850
  %cond27 = zext i1 %tobool26 to i32, !dbg !8850
  %call28 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %10, %struct.rtx_def* %11, i32 0, i32 %cond27) #8, !dbg !8851
  %arrayidx31 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8852
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8, !dbg !8852
  %call32 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %12, %struct.rtx_def* %target, i32 %call_param_p, i8 zeroext %nontemporal) #8, !dbg !8853
  br label %cleanup775, !dbg !8854

if.else:                                          ; preds = %if.end
  %cmp37 = icmp eq i64 %bf.cast, 56, !dbg !8855
  br i1 %cmp37, label %land.lhs.true38, label %if.else.if.else61_crit_edge, !dbg !8856

if.else.if.else61_crit_edge:                      ; preds = %if.else
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !8857
  %bf.load62.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !8858
  br label %if.else61, !dbg !8856

land.lhs.true38:                                  ; preds = %if.else
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !8859
  %bf.load39 = load i32, i32* %13, align 8, !dbg !8859
  %bf.clear40 = and i32 %bf.load39, 16711680, !dbg !8859
  %cmp41 = icmp eq i32 %bf.clear40, 65536, !dbg !8860
  br i1 %cmp41, label %if.then42, label %if.else61, !dbg !8861

if.then42:                                        ; preds = %land.lhs.true38
  %call43 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !8862
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call43, metadata !8797, metadata !DIExpression()), !dbg !8863
  %call44 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !8864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !8801, metadata !DIExpression()), !dbg !8863
  tail call void @do_pending_stack_adjust() #6, !dbg !8865
  %14 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !8866
  %add = add nsw i32 %14, 1, !dbg !8866
  store i32 %add, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !8866
  %operands46 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8867
  %15 = load %union.tree_node*, %union.tree_node** %operands46, align 8, !dbg !8867
  tail call void @jumpifnot(%union.tree_node* %15, %struct.rtx_def* %call43, i32 -1) #6, !dbg !8868
  %arrayidx50 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands46, i64 1, !dbg !8869
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx50, align 8, !dbg !8869
  %call51 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %16, %struct.rtx_def* %target, i32 %call_param_p, i8 zeroext %nontemporal) #8, !dbg !8870
  %call52 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call44) #6, !dbg !8871
  %call53 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call52) #6, !dbg !8872
  %call54 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !8873
  %call55 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call43) #6, !dbg !8874
  %arrayidx58 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands46, i64 2, !dbg !8875
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx58, align 8, !dbg !8875
  %call59 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %17, %struct.rtx_def* %target, i32 %call_param_p, i8 zeroext %nontemporal) #8, !dbg !8876
  %call60 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call44) #6, !dbg !8877
  %18 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !8878
  %sub = add nsw i32 %18, -1, !dbg !8878
  store i32 %sub, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !8878
  br label %cleanup775

if.else61:                                        ; preds = %if.else.if.else61_crit_edge, %land.lhs.true38
  %bf.load140 = phi i32 [ %bf.load62.pre, %if.else.if.else61_crit_edge ], [ %bf.load39, %land.lhs.true38 ], !dbg !8858
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !8858
  %bf.clear63 = and i32 %bf.load140, 65535, !dbg !8858
  %cmp64 = icmp eq i32 %bf.clear63, 39, !dbg !8879
  br i1 %cmp64, label %land.lhs.true65, label %if.else300, !dbg !8880

land.lhs.true65:                                  ; preds = %if.else61
  %bf.clear68 = and i32 %bf.load140, 268435456, !dbg !8881
  %tobool69 = icmp eq i32 %bf.clear68, 0, !dbg !8881
  br i1 %tobool69, label %if.else300, label %if.then70, !dbg !8882

if.then70:                                        ; preds = %land.lhs.true65
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8802, metadata !DIExpression()), !dbg !8883
  %cmp77 = icmp eq i64 %bf.cast123, 6, !dbg !8884
  br i1 %cmp77, label %land.lhs.true93, label %lor.lhs.false, !dbg !8884

lor.lhs.false:                                    ; preds = %if.then70
  %cmp84 = icmp eq i64 %bf.cast123, 7, !dbg !8884
  br i1 %cmp84, label %land.lhs.true93, label %lor.lhs.false85, !dbg !8884

lor.lhs.false85:                                  ; preds = %lor.lhs.false
  %cmp92 = icmp eq i64 %bf.cast123, 8, !dbg !8884
  br i1 %cmp92, label %land.lhs.true93, label %if.end208, !dbg !8885

land.lhs.true93:                                  ; preds = %lor.lhs.false85, %lor.lhs.false, %if.then70
  %type97 = getelementptr inbounds i64, i64* %6, i64 2, !dbg !8886
  %20 = bitcast i64* %type97 to %union.tree_node**, !dbg !8886
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !8886
  %cmp98 = icmp eq %union.tree_node* %21, null, !dbg !8887
  br i1 %cmp98, label %land.lhs.true99, label %if.end208, !dbg !8888

land.lhs.true99:                                  ; preds = %land.lhs.true93
  %bf.lshr101 = lshr i32 %bf.load140, 16, !dbg !8889
  %bf.clear102 = and i32 %bf.lshr101, 255, !dbg !8889
  %idxprom103 = zext i32 %bf.clear102 to i64, !dbg !8889
  %arrayidx104 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom103, !dbg !8889
  %22 = load i16, i16* %arrayidx104, align 2, !dbg !8889
  %conv = zext i16 %22 to i32, !dbg !8889
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 6, !dbg !8890
  %bf.load108 = load i32, i32* %precision, align 4, !dbg !8890
  %bf.clear109 = and i32 %bf.load108, 1023, !dbg !8890
  %cmp110 = icmp eq i32 %bf.clear109, %conv, !dbg !8891
  br i1 %cmp110, label %if.then112, label %if.end208, !dbg !8892

if.then112:                                       ; preds = %land.lhs.true99
  %bf.lshr117 = lshr i64 %bf.load10, 21, !dbg !8893
  %23 = trunc i64 %bf.lshr117 to i32, !dbg !8893
  %bf.cast119 = and i32 %23, 1, !dbg !8893
  %bf.clear122 = and i32 %bf.load140, 134217728, !dbg !8894
  %tobool123 = icmp eq i32 %bf.clear122, 0, !dbg !8894
  br i1 %tobool123, label %cond.false125, label %cond.end129, !dbg !8894

cond.false125:                                    ; preds = %if.then112
  %bf.lshr127 = lshr i32 %bf.load140, 26, !dbg !8894
  %bf.clear128 = and i32 %bf.lshr127, 1, !dbg !8894
  br label %cond.end129, !dbg !8894

cond.end129:                                      ; preds = %if.then112, %cond.false125
  %cond130 = phi i32 [ %bf.clear128, %cond.false125 ], [ -1, %if.then112 ], !dbg !8894
  %cmp131 = icmp eq i32 %bf.cast119, %cond130, !dbg !8895
  br i1 %cmp131, label %if.end186, label %if.then133, !dbg !8896

if.then133:                                       ; preds = %cond.end129
  br i1 %tobool123, label %cond.false139, label %cond.end143, !dbg !8897

cond.false139:                                    ; preds = %if.then133
  %bf.lshr141 = lshr i32 %bf.load140, 26, !dbg !8897
  %bf.clear142 = and i32 %bf.lshr141, 1, !dbg !8897
  br label %cond.end143, !dbg !8897

cond.end143:                                      ; preds = %if.then133, %cond.false139
  %cond144 = phi i32 [ %bf.clear142, %cond.false139 ], [ -1, %if.then133 ], !dbg !8897
  %call147 = tail call %union.tree_node* @signed_or_unsigned_type_for(i32 %cond144, %union.tree_node* %8) #6, !dbg !8898
  call void @llvm.dbg.value(metadata %union.tree_node* %call147, metadata !8805, metadata !DIExpression()), !dbg !8899
  %cmp148 = icmp eq %union.tree_node* %call147, null, !dbg !8900
  br i1 %cmp148, label %if.then150, label %if.end184, !dbg !8902

if.then150:                                       ; preds = %cond.end143
  %24 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !8903
  %25 = load i64*, i64** %5, align 8, !dbg !8904
  %bf.load154 = load i64, i64* %25, align 8, !dbg !8904
  %bf.cast15622 = and i64 %bf.load154, 65535, !dbg !8904
  %cmp157 = icmp eq i64 %bf.cast15622, 14, !dbg !8904
  br i1 %cmp157, label %cond.true159, label %cond.false163, !dbg !8904

cond.true159:                                     ; preds = %if.then150
  %.cast23 = bitcast i64* %25 to %union.tree_node*, !dbg !8904
  %call162 = tail call i32 @vector_type_mode(%union.tree_node* %.cast23) #6, !dbg !8904
  br label %cond.end170, !dbg !8904

cond.false163:                                    ; preds = %if.then150
  %type166 = bitcast i64* %25 to %struct.tree_type*, !dbg !8904
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type166, i64 0, i32 6, !dbg !8904
  %bf.load167 = load i32, i32* %mode, align 4, !dbg !8904
  %bf.lshr168 = lshr i32 %bf.load167, 16, !dbg !8904
  %bf.clear169 = and i32 %bf.lshr168, 255, !dbg !8904
  br label %cond.end170, !dbg !8904

cond.end170:                                      ; preds = %cond.false163, %cond.true159
  %cond171 = phi i32 [ %call162, %cond.true159 ], [ %bf.clear169, %cond.false163 ], !dbg !8904
  %bf.load172 = load i32, i32* %19, align 8, !dbg !8905
  %bf.clear174 = and i32 %bf.load172, 134217728, !dbg !8905
  %tobool175 = icmp eq i32 %bf.clear174, 0, !dbg !8905
  br i1 %tobool175, label %cond.false177, label %cond.end181, !dbg !8905

cond.false177:                                    ; preds = %cond.end170
  %bf.lshr179 = lshr i32 %bf.load172, 26, !dbg !8905
  %bf.clear180 = and i32 %bf.lshr179, 1, !dbg !8905
  br label %cond.end181, !dbg !8905

cond.end181:                                      ; preds = %cond.end170, %cond.false177
  %cond182 = phi i32 [ %bf.clear180, %cond.false177 ], [ -1, %cond.end170 ], !dbg !8905
  %call183 = tail call %union.tree_node* %24(i32 %cond171, i32 %cond182) #6, !dbg !8906
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !8805, metadata !DIExpression()), !dbg !8899
  br label %if.end184, !dbg !8907

if.end184:                                        ; preds = %cond.end181, %cond.end143
  %ntype.0 = phi %union.tree_node* [ %call183, %cond.end181 ], [ %call147, %cond.end143 ], !dbg !8899
  call void @llvm.dbg.value(metadata %union.tree_node* %ntype.0, metadata !8805, metadata !DIExpression()), !dbg !8899
  %call185 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %ntype.0, %union.tree_node* %exp) #6, !dbg !8908
  call void @llvm.dbg.value(metadata %union.tree_node* %call185, metadata !8790, metadata !DIExpression()), !dbg !8833
  %bf.load191.pre = load i32, i32* %19, align 8, !dbg !8909
  br label %if.end186, !dbg !8910

if.end186:                                        ; preds = %cond.end129, %if.end184
  %bf.load197 = phi i32 [ %bf.load191.pre, %if.end184 ], [ %bf.load140, %cond.end129 ], !dbg !8909
  %exp.addr.0 = phi %union.tree_node* [ %call185, %if.end184 ], [ %exp, %cond.end129 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !8790, metadata !DIExpression()), !dbg !8833
  %26 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !8911
  %arrayidx187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8912
  %27 = bitcast %union.rtunion_def* %arrayidx187 to i32**, !dbg !8912
  %28 = load i32*, i32** %27, align 8, !dbg !8912
  %bf.load188 = load i32, i32* %28, align 8, !dbg !8912
  %bf.lshr189 = lshr i32 %bf.load188, 16, !dbg !8912
  %bf.clear190 = and i32 %bf.lshr189, 255, !dbg !8912
  %bf.clear193 = and i32 %bf.load197, 134217728, !dbg !8909
  %tobool194 = icmp eq i32 %bf.clear193, 0, !dbg !8909
  br i1 %tobool194, label %cond.false196, label %cond.end200, !dbg !8909

cond.false196:                                    ; preds = %if.end186
  %bf.lshr198 = lshr i32 %bf.load197, 26, !dbg !8909
  %bf.clear199 = and i32 %bf.lshr198, 1, !dbg !8909
  br label %cond.end200, !dbg !8909

cond.end200:                                      ; preds = %if.end186, %cond.false196
  %cond201 = phi i32 [ %bf.clear199, %cond.false196 ], [ -1, %if.end186 ], !dbg !8909
  %call202 = tail call %union.tree_node* %26(i32 %bf.clear190, i32 %cond201) #6, !dbg !8913
  %call203 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %call202, %union.tree_node* %exp.addr.0) #6, !dbg !8914
  call void @llvm.dbg.value(metadata %union.tree_node* %call203, metadata !8790, metadata !DIExpression()), !dbg !8833
  %rt_rtx207 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**, !dbg !8915
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx207, align 8, !dbg !8915
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !8802, metadata !DIExpression()), !dbg !8883
  br label %if.end208, !dbg !8916

if.end208:                                        ; preds = %cond.end200, %land.lhs.true99, %land.lhs.true93, %lor.lhs.false85
  %inner_target.0 = phi %struct.rtx_def* [ %29, %cond.end200 ], [ null, %land.lhs.true99 ], [ null, %land.lhs.true93 ], [ null, %lor.lhs.false85 ], !dbg !8883
  %exp.addr.1 = phi %union.tree_node* [ %call203, %cond.end200 ], [ %exp, %land.lhs.true99 ], [ %exp, %land.lhs.true93 ], [ %exp, %lor.lhs.false85 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1, metadata !8790, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %inner_target.0, metadata !8802, metadata !DIExpression()), !dbg !8883
  %tobool209 = icmp ne i32 %call_param_p, 0, !dbg !8917
  %cond210 = zext i1 %tobool209 to i32, !dbg !8917
  %call211 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp.addr.1, %struct.rtx_def* %inner_target.0, i32 0, i32 %cond210) #8, !dbg !8918
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call211, metadata !8794, metadata !DIExpression()), !dbg !8833
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call211, i64 0, i32 0, !dbg !8919
  %bf.load212 = load i32, i32* %30, align 8, !dbg !8919
  %bf.clear213 = and i32 %bf.load212, 65535, !dbg !8919
  %idxprom214 = zext i32 %bf.clear213 to i64, !dbg !8919
  %arrayidx215 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom214, !dbg !8919
  %31 = load i32, i32* %arrayidx215, align 4, !dbg !8919
  %cmp216 = icmp eq i32 %31, 9, !dbg !8919
  br i1 %cmp216, label %land.lhs.true218, label %if.end284, !dbg !8921

land.lhs.true218:                                 ; preds = %if.end208
  %bf.clear221 = and i32 %bf.load212, 16711680, !dbg !8922
  %cmp222 = icmp eq i32 %bf.clear221, 0, !dbg !8923
  br i1 %cmp222, label %if.then224, label %if.end284, !dbg !8924

if.then224:                                       ; preds = %land.lhs.true218
  %bf.load225 = load i32, i32* %19, align 8, !dbg !8925
  %bf.lshr226 = lshr i32 %bf.load225, 16, !dbg !8925
  %bf.clear227 = and i32 %bf.lshr226, 255, !dbg !8925
  %type229 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8927
  %32 = bitcast %union.tree_node** %type229 to i64**, !dbg !8927
  %33 = load i64*, i64** %32, align 8, !dbg !8927
  %bf.load231 = load i64, i64* %33, align 8, !dbg !8927
  %bf.cast23320 = and i64 %bf.load231, 65535, !dbg !8927
  %cmp234 = icmp eq i64 %bf.cast23320, 14, !dbg !8927
  br i1 %cmp234, label %cond.true236, label %cond.false240, !dbg !8927

cond.true236:                                     ; preds = %if.then224
  %.cast21 = bitcast i64* %33 to %union.tree_node*, !dbg !8927
  %call239 = tail call i32 @vector_type_mode(%union.tree_node* %.cast21) #6, !dbg !8927
  %bf.load250.pre = load i32, i32* %19, align 8, !dbg !8928
  br label %cond.end248, !dbg !8927

cond.false240:                                    ; preds = %if.then224
  %type243 = bitcast i64* %33 to %struct.tree_type*, !dbg !8927
  %mode244 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type243, i64 0, i32 6, !dbg !8927
  %bf.load245 = load i32, i32* %mode244, align 4, !dbg !8927
  %bf.lshr246 = lshr i32 %bf.load245, 16, !dbg !8927
  %bf.clear247 = and i32 %bf.lshr246, 255, !dbg !8927
  br label %cond.end248, !dbg !8927

cond.end248:                                      ; preds = %cond.false240, %cond.true236
  %bf.load256 = phi i32 [ %bf.load250.pre, %cond.true236 ], [ %bf.load225, %cond.false240 ], !dbg !8928
  %cond249 = phi i32 [ %call239, %cond.true236 ], [ %bf.clear247, %cond.false240 ], !dbg !8927
  %bf.clear252 = and i32 %bf.load256, 134217728, !dbg !8928
  %tobool253 = icmp eq i32 %bf.clear252, 0, !dbg !8928
  br i1 %tobool253, label %cond.false255, label %cond.end259, !dbg !8928

cond.false255:                                    ; preds = %cond.end248
  %bf.lshr257 = lshr i32 %bf.load256, 26, !dbg !8928
  %bf.clear258 = and i32 %bf.lshr257, 1, !dbg !8928
  br label %cond.end259, !dbg !8928

cond.end259:                                      ; preds = %cond.end248, %cond.false255
  %cond260 = phi i32 [ %bf.clear258, %cond.false255 ], [ -1, %cond.end248 ], !dbg !8928
  %call261 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear227, i32 %cond249, %struct.rtx_def* %call211, i32 %cond260) #8, !dbg !8929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call261, metadata !8794, metadata !DIExpression()), !dbg !8833
  %arrayidx264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8930
  %34 = bitcast %union.rtunion_def* %arrayidx264 to i32**, !dbg !8930
  %35 = load i32*, i32** %34, align 8, !dbg !8930
  %bf.load266 = load i32, i32* %35, align 8, !dbg !8930
  %bf.lshr267 = lshr i32 %bf.load266, 16, !dbg !8930
  %bf.clear268 = and i32 %bf.lshr267, 255, !dbg !8930
  %bf.load269 = load i32, i32* %19, align 8, !dbg !8931
  %bf.lshr270 = lshr i32 %bf.load269, 16, !dbg !8931
  %bf.clear271 = and i32 %bf.lshr270, 255, !dbg !8931
  %bf.clear274 = and i32 %bf.load269, 134217728, !dbg !8932
  %tobool275 = icmp eq i32 %bf.clear274, 0, !dbg !8932
  br i1 %tobool275, label %cond.false277, label %cond.end281, !dbg !8932

cond.false277:                                    ; preds = %cond.end259
  %bf.lshr279 = lshr i32 %bf.load269, 26, !dbg !8932
  %bf.clear280 = and i32 %bf.lshr279, 1, !dbg !8932
  br label %cond.end281, !dbg !8932

cond.end281:                                      ; preds = %cond.end259, %cond.false277
  %cond282 = phi i32 [ %bf.clear280, %cond.false277 ], [ -1, %cond.end259 ], !dbg !8932
  %call283 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear268, i32 %bf.clear271, %struct.rtx_def* %call261, i32 %cond282) #8, !dbg !8933
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call283, metadata !8794, metadata !DIExpression()), !dbg !8833
  br label %if.end284, !dbg !8934

if.end284:                                        ; preds = %cond.end281, %land.lhs.true218, %if.end208
  %temp.0 = phi %struct.rtx_def* [ %call283, %cond.end281 ], [ %call211, %land.lhs.true218 ], [ %call211, %if.end208 ], !dbg !8883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !8794, metadata !DIExpression()), !dbg !8833
  %arrayidx287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8935
  %rt_rtx288 = bitcast %union.rtunion_def* %arrayidx287 to %struct.rtx_def**, !dbg !8935
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx288, align 8, !dbg !8935
  %bf.load289 = load i32, i32* %19, align 8, !dbg !8936
  %bf.clear291 = and i32 %bf.load289, 134217728, !dbg !8936
  %tobool292 = icmp eq i32 %bf.clear291, 0, !dbg !8936
  br i1 %tobool292, label %cond.false294, label %cond.end298, !dbg !8936

cond.false294:                                    ; preds = %if.end284
  %bf.lshr296 = lshr i32 %bf.load289, 26, !dbg !8936
  %bf.clear297 = and i32 %bf.lshr296, 1, !dbg !8936
  br label %cond.end298, !dbg !8936

cond.end298:                                      ; preds = %if.end284, %cond.false294
  %cond299 = phi i32 [ %bf.clear297, %cond.false294 ], [ -1, %if.end284 ], !dbg !8936
  tail call void @convert_move(%struct.rtx_def* %36, %struct.rtx_def* %temp.0, i32 %cond299) #8, !dbg !8937
  br label %cleanup775

if.else300:                                       ; preds = %land.lhs.true65, %if.else61
  %cmp305 = icmp ne i64 %bf.cast, 28, !dbg !8938
  %tobool308 = icmp ne i8 %nontemporal, 0, !dbg !8939
  %or.cond = or i1 %cmp305, %tobool308, !dbg !8940
  %tobool310 = icmp ne i32 %call_param_p, 0, !dbg !8941
  %or.cond2 = or i1 %or.cond, %tobool310, !dbg !8940
  br i1 %or.cond2, label %normal_expr, label %land.lhs.true311, !dbg !8940

land.lhs.true311:                                 ; preds = %if.else300
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8942
  %38 = load i32, i32* %37, align 8, !dbg !8942
  %cmp312 = icmp sgt i32 %38, 0, !dbg !8943
  br i1 %cmp312, label %land.lhs.true314, label %normal_expr, !dbg !8944

land.lhs.true314:                                 ; preds = %land.lhs.true311
  %cmp321 = icmp eq i64 %bf.cast123, 14, !dbg !8945
  br i1 %cmp321, label %cond.true323, label %cond.false327, !dbg !8945

cond.true323:                                     ; preds = %land.lhs.true314
  %call326 = tail call i32 @vector_type_mode(%union.tree_node* %8) #6, !dbg !8945
  br label %cond.end335, !dbg !8945

cond.false327:                                    ; preds = %land.lhs.true314
  %mode331 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 6, !dbg !8945
  %bf.load332 = load i32, i32* %mode331, align 4, !dbg !8945
  %bf.lshr333 = lshr i32 %bf.load332, 16, !dbg !8945
  %bf.clear334 = and i32 %bf.lshr333, 255, !dbg !8945
  br label %cond.end335, !dbg !8945

cond.end335:                                      ; preds = %cond.false327, %cond.true323
  %cond336 = phi i32 [ %call326, %cond.true323 ], [ %bf.clear334, %cond.false327 ], !dbg !8945
  %cmp337 = icmp eq i32 %cond336, 1, !dbg !8946
  br i1 %cmp337, label %if.then339, label %normal_expr, !dbg !8947

if.then339:                                       ; preds = %cond.end335
  %call340 = tail call i64 @int_expr_size(%union.tree_node* %exp) #6, !dbg !8948
  call void @llvm.dbg.value(metadata i64 %call340, metadata !8810, metadata !DIExpression()), !dbg !8949
  %cmp341 = icmp slt i64 %call340, 1, !dbg !8950
  br i1 %cmp341, label %cleanup, label %if.end344, !dbg !8952

if.end344:                                        ; preds = %if.then339
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8953
  %arraydecay = bitcast i32* %str to i8*, !dbg !8953
  %call346 = tail call i64 @strlen(i8* nonnull %arraydecay) #6, !dbg !8954
  call void @llvm.dbg.value(metadata i64 %call346, metadata !8813, metadata !DIExpression()), !dbg !8949
  %39 = load i32, i32* %37, align 8, !dbg !8955
  %sub349 = add nsw i32 %39, -1, !dbg !8957
  %conv350 = sext i32 %sub349 to i64, !dbg !8955
  %cmp351 = icmp slt i64 %call346, %conv350, !dbg !8958
  br i1 %cmp351, label %cleanup, label %if.end354, !dbg !8959

if.end354:                                        ; preds = %if.end344
  %conv357 = sext i32 %39 to i64, !dbg !8960
  call void @llvm.dbg.value(metadata i64 %conv357, metadata !8813, metadata !DIExpression()), !dbg !8949
  %add358 = add nsw i64 %conv357, 3, !dbg !8961
  call void @llvm.dbg.value(metadata i64 %add358, metadata !8813, metadata !DIExpression()), !dbg !8949
  %and = and i64 %add358, -4, !dbg !8964
  call void @llvm.dbg.value(metadata i64 %and, metadata !8813, metadata !DIExpression()), !dbg !8949
  %cmp359 = icmp slt i64 %and, %call340, !dbg !8965
  %and.call340 = select i1 %cmp359, i64 %and, i64 %call340, !dbg !8965
  call void @llvm.dbg.value(metadata i64 %and.call340, metadata !8813, metadata !DIExpression()), !dbg !8949
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8966
  %rt_mem = bitcast %union.rtunion_def* %40 to %struct.mem_attrs**, !dbg !8966
  %41 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8966
  %cmp371 = icmp eq %struct.mem_attrs* %41, null, !dbg !8966
  br i1 %cmp371, label %cond.end379, label %cond.true373, !dbg !8966

cond.true373:                                     ; preds = %if.end354
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %41, i64 0, i32 4, !dbg !8966
  %42 = load i32, i32* %align, align 4, !dbg !8966
  br label %cond.end379, !dbg !8966

cond.end379:                                      ; preds = %if.end354, %cond.true373
  %cond380 = phi i32 [ %42, %cond.true373 ], [ 8, %if.end354 ], !dbg !8966
  %call381 = tail call i32 @can_store_by_pieces(i64 %and.call340, %struct.rtx_def* (i8*, i64, i32)* nonnull @builtin_strncpy_read_str, i8* nonnull %arraydecay, i32 %cond380, i8 zeroext 0) #8, !dbg !8968
  %tobool382 = icmp eq i32 %call381, 0, !dbg !8968
  br i1 %tobool382, label %cleanup, label %if.end384, !dbg !8969

if.end384:                                        ; preds = %cond.end379
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !8814, metadata !DIExpression()), !dbg !8949
  %43 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8970
  %cmp392 = icmp eq %struct.mem_attrs* %43, null, !dbg !8970
  br i1 %cmp392, label %cond.end401, label %cond.true394, !dbg !8970

cond.true394:                                     ; preds = %if.end384
  %align399 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %43, i64 0, i32 4, !dbg !8970
  %44 = load i32, i32* %align399, align 4, !dbg !8970
  br label %cond.end401, !dbg !8970

cond.end401:                                      ; preds = %if.end384, %cond.true394
  %cond402 = phi i32 [ %44, %cond.true394 ], [ 8, %if.end384 ], !dbg !8970
  %cond405 = zext i1 %cmp359 to i32, !dbg !8971
  %call406 = tail call %struct.rtx_def* @store_by_pieces(%struct.rtx_def* %target, i64 %and.call340, %struct.rtx_def* (i8*, i64, i32)* nonnull @builtin_strncpy_read_str, i8* nonnull %arraydecay, i32 %cond402, i8 zeroext 0, i32 %cond405) #8, !dbg !8972
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call406, metadata !8814, metadata !DIExpression()), !dbg !8949
  br i1 %cmp359, label %if.then409, label %cleanup, !dbg !8973

if.then409:                                       ; preds = %cond.end401
  %call410 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call406, i32 1, i64 0, i32 1, i32 1) #6, !dbg !8974
  %sub411 = sub nsw i64 %call340, %and.call340, !dbg !8976
  %call412 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub411) #6, !dbg !8976
  %call413 = tail call %struct.rtx_def* @clear_storage(%struct.rtx_def* %call410, %struct.rtx_def* %call412, i32 0) #8, !dbg !8977
  br label %cleanup, !dbg !8977

cleanup:                                          ; preds = %cond.end379, %cond.end401, %if.then409, %if.end344, %if.then339
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then339 ], [ true, %if.end344 ], [ true, %cond.end379 ], [ false, %if.then409 ], [ false, %cond.end401 ]
  br i1 %cleanup.dest.slot.0, label %normal_expr, label %cleanup775

normal_expr:                                      ; preds = %land.lhs.true311, %cond.end335, %if.else300, %cleanup
  call void @llvm.dbg.label(metadata !8832), !dbg !8978
  %tobool419 = icmp eq i8 %nontemporal, 0, !dbg !8979
  %.target = select i1 %tobool419, %struct.rtx_def* %target, %struct.rtx_def* null, !dbg !8979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.target, metadata !8815, metadata !DIExpression()), !dbg !8980
  %bf.load424 = load i32, i32* %19, align 8, !dbg !8981
  %bf.lshr425 = lshr i32 %bf.load424, 16, !dbg !8981
  %bf.clear426 = and i32 %bf.lshr425, 255, !dbg !8981
  %cond428 = zext i1 %tobool310 to i32, !dbg !8982
  call void @llvm.dbg.value(metadata %struct.rtx_def** %alt_rtl, metadata !8795, metadata !DIExpression(DW_OP_deref)), !dbg !8833
  %call429 = call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* %.target, i32 %bf.clear426, i32 %cond428, %struct.rtx_def** nonnull %alt_rtl) #8, !dbg !8983
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call429, metadata !8794, metadata !DIExpression()), !dbg !8833
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call429, i64 0, i32 0, !dbg !8984
  %bf.load434 = load i32, i32* %45, align 8, !dbg !8984
  %bf.clear435 = and i32 %bf.load434, 65535, !dbg !8984
  %idxprom436 = zext i32 %bf.clear435 to i64, !dbg !8984
  %arrayidx437 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom436, !dbg !8984
  %46 = load i32, i32* %arrayidx437, align 4, !dbg !8984
  %cmp438 = icmp eq i32 %46, 9, !dbg !8984
  br i1 %cmp438, label %land.lhs.true440, label %if.end515, !dbg !8986

land.lhs.true440:                                 ; preds = %normal_expr
  %bf.clear443 = and i32 %bf.load434, 16711680, !dbg !8987
  %cmp444 = icmp eq i32 %bf.clear443, 0, !dbg !8988
  br i1 %cmp444, label %land.lhs.true446, label %if.end515, !dbg !8989

land.lhs.true446:                                 ; preds = %land.lhs.true440
  %bf.load448 = load i64, i64* %1, align 8, !dbg !8990
  %bf.cast45010 = and i64 %bf.load448, 65535, !dbg !8991
  %cmp451 = icmp eq i64 %bf.cast45010, 0, !dbg !8991
  br i1 %cmp451, label %if.end515, label %land.lhs.true453, !dbg !8992

land.lhs.true453:                                 ; preds = %land.lhs.true446
  %bf.load454 = load i32, i32* %19, align 8, !dbg !8993
  %bf.lshr455 = lshr i32 %bf.load454, 16, !dbg !8993
  %bf.clear456 = and i32 %bf.lshr455, 255, !dbg !8993
  %47 = load i64*, i64** %5, align 8, !dbg !8994
  %bf.load460 = load i64, i64* %47, align 8, !dbg !8994
  %bf.cast46211 = and i64 %bf.load460, 65535, !dbg !8994
  %cmp463 = icmp eq i64 %bf.cast46211, 14, !dbg !8994
  br i1 %cmp463, label %cond.true465, label %cond.false469, !dbg !8994

cond.true465:                                     ; preds = %land.lhs.true453
  %.cast12 = bitcast i64* %47 to %union.tree_node*, !dbg !8994
  %call468 = call i32 @vector_type_mode(%union.tree_node* %.cast12) #6, !dbg !8994
  br label %cond.end477, !dbg !8994

cond.false469:                                    ; preds = %land.lhs.true453
  %type472 = bitcast i64* %47 to %struct.tree_type*, !dbg !8994
  %mode473 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type472, i64 0, i32 6, !dbg !8994
  %bf.load474 = load i32, i32* %mode473, align 4, !dbg !8994
  %bf.lshr475 = lshr i32 %bf.load474, 16, !dbg !8994
  %bf.clear476 = and i32 %bf.lshr475, 255, !dbg !8994
  br label %cond.end477, !dbg !8994

cond.end477:                                      ; preds = %cond.false469, %cond.true465
  %cond478 = phi i32 [ %call468, %cond.true465 ], [ %bf.clear476, %cond.false469 ], !dbg !8994
  %cmp479 = icmp eq i32 %bf.clear456, %cond478, !dbg !8995
  br i1 %cmp479, label %if.end515, label %if.then481, !dbg !8996

if.then481:                                       ; preds = %cond.end477
  %bf.load482 = load i32, i32* %19, align 8, !dbg !8997
  %bf.lshr483 = lshr i32 %bf.load482, 16, !dbg !8997
  %bf.clear484 = and i32 %bf.lshr483, 255, !dbg !8997
  %48 = load i64*, i64** %5, align 8, !dbg !8998
  %bf.load488 = load i64, i64* %48, align 8, !dbg !8998
  %bf.cast49013 = and i64 %bf.load488, 65535, !dbg !8998
  %cmp491 = icmp eq i64 %bf.cast49013, 14, !dbg !8998
  br i1 %cmp491, label %cond.true493, label %cond.false497, !dbg !8998

cond.true493:                                     ; preds = %if.then481
  %.cast14 = bitcast i64* %48 to %union.tree_node*, !dbg !8998
  %call496 = call i32 @vector_type_mode(%union.tree_node* %.cast14) #6, !dbg !8998
  %.pre = load i64*, i64** %5, align 8, !dbg !8999
  %bf.load510.pre = load i64, i64* %.pre, align 8, !dbg !8999
  br label %cond.end505, !dbg !8998

cond.false497:                                    ; preds = %if.then481
  %type500 = bitcast i64* %48 to %struct.tree_type*, !dbg !8998
  %mode501 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type500, i64 0, i32 6, !dbg !8998
  %bf.load502 = load i32, i32* %mode501, align 4, !dbg !8998
  %bf.lshr503 = lshr i32 %bf.load502, 16, !dbg !8998
  %bf.clear504 = and i32 %bf.lshr503, 255, !dbg !8998
  br label %cond.end505, !dbg !8998

cond.end505:                                      ; preds = %cond.false497, %cond.true493
  %bf.load510 = phi i64 [ %bf.load510.pre, %cond.true493 ], [ %bf.load488, %cond.false497 ], !dbg !8999
  %cond506 = phi i32 [ %call496, %cond.true493 ], [ %bf.clear504, %cond.false497 ], !dbg !8998
  %bf.lshr511 = lshr i64 %bf.load510, 21, !dbg !8999
  %49 = trunc i64 %bf.lshr511 to i32, !dbg !8999
  %bf.cast513 = and i32 %49, 1, !dbg !8999
  %call514 = call %struct.rtx_def* @convert_modes(i32 %bf.clear484, i32 %cond506, %struct.rtx_def* %call429, i32 %bf.cast513) #8, !dbg !9000
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call514, metadata !8794, metadata !DIExpression()), !dbg !8833
  br label %if.end515, !dbg !9001

if.end515:                                        ; preds = %cond.end477, %land.lhs.true446, %cond.end505, %land.lhs.true440, %normal_expr
  %temp.1 = phi %struct.rtx_def* [ %call514, %cond.end505 ], [ %call429, %cond.end477 ], [ %call429, %land.lhs.true446 ], [ %call429, %land.lhs.true440 ], [ %call429, %normal_expr ], !dbg !8833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !8794, metadata !DIExpression()), !dbg !8833
  %call516 = call i32 @rtx_equal_p(%struct.rtx_def* %temp.1, %struct.rtx_def* %target) #6, !dbg !9002
  %tobool517 = icmp eq i32 %call516, 0, !dbg !9002
  br i1 %tobool517, label %land.lhs.true527, label %lor.lhs.false518, !dbg !9003

lor.lhs.false518:                                 ; preds = %if.end515
  %cmp519 = icmp eq %struct.rtx_def* %temp.1, %target, !dbg !9004
  br i1 %cmp519, label %cleanup775, label %land.lhs.true521, !dbg !9005

land.lhs.true521:                                 ; preds = %lor.lhs.false518
  %call522 = call i32 @side_effects_p(%struct.rtx_def* %temp.1) #6, !dbg !9006
  %tobool523 = icmp eq i32 %call522, 0, !dbg !9006
  br i1 %tobool523, label %lor.lhs.false524, label %land.lhs.true527, !dbg !9007

lor.lhs.false524:                                 ; preds = %land.lhs.true521
  %call525 = call i32 @side_effects_p(%struct.rtx_def* %target) #6, !dbg !9008
  %tobool526 = icmp eq i32 %call525, 0, !dbg !9008
  br i1 %tobool526, label %cleanup775, label %land.lhs.true527, !dbg !9009

land.lhs.true527:                                 ; preds = %lor.lhs.false524, %land.lhs.true521, %if.end515
  %bf.load529 = load i64, i64* %1, align 8, !dbg !9010
  %bf.cast5317 = and i64 %bf.load529, 65535, !dbg !9011
  %cmp532 = icmp eq i64 %bf.cast5317, 0, !dbg !9011
  br i1 %cmp532, label %cleanup775, label %land.lhs.true534, !dbg !9012

land.lhs.true534:                                 ; preds = %land.lhs.true527
  %50 = load %struct.rtx_def*, %struct.rtx_def** %alt_rtl, align 8, !dbg !9013
  call void @llvm.dbg.value(metadata %struct.rtx_def* %50, metadata !8795, metadata !DIExpression()), !dbg !8833
  %tobool535 = icmp eq %struct.rtx_def* %50, null, !dbg !9013
  br i1 %tobool535, label %land.lhs.true539, label %land.lhs.true536, !dbg !9014

land.lhs.true536:                                 ; preds = %land.lhs.true534
  call void @llvm.dbg.value(metadata %struct.rtx_def* %50, metadata !8795, metadata !DIExpression()), !dbg !8833
  %call537 = call i32 @rtx_equal_p(%struct.rtx_def* nonnull %50, %struct.rtx_def* %target) #6, !dbg !9015
  %tobool538 = icmp eq i32 %call537, 0, !dbg !9015
  br i1 %tobool538, label %land.lhs.true539, label %cleanup775, !dbg !9016

land.lhs.true539:                                 ; preds = %land.lhs.true536, %land.lhs.true534
  %call540 = call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #6, !dbg !9017
  %51 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9018
  %cmp541 = icmp eq %struct.rtx_def* %call540, %51, !dbg !9019
  br i1 %cmp541, label %cleanup775, label %if.then543, !dbg !9020

if.then543:                                       ; preds = %land.lhs.true539
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.1, i64 0, i32 0, !dbg !9021
  %bf.load544 = load i32, i32* %52, align 8, !dbg !9021
  %bf.load547 = load i32, i32* %19, align 8, !dbg !9022
  %bf.lshr54524 = xor i32 %bf.load544, %bf.load547, !dbg !9023
  %53 = and i32 %bf.lshr54524, 16711680, !dbg !9023
  %cmp550 = icmp eq i32 %53, 0, !dbg !9023
  br i1 %cmp550, label %if.then543.if.else584_crit_edge, label %land.lhs.true552, !dbg !9024

if.then543.if.else584_crit_edge:                  ; preds = %if.then543
  %.pre29 = and i32 %bf.load544, 16711680, !dbg !9025
  br label %if.else584, !dbg !9024

land.lhs.true552:                                 ; preds = %if.then543
  %bf.clear555 = and i32 %bf.load544, 16711680, !dbg !9026
  %cmp556 = icmp eq i32 %bf.clear555, 0, !dbg !9027
  br i1 %cmp556, label %if.else584, label %if.then558, !dbg !9028

if.then558:                                       ; preds = %land.lhs.true552
  %54 = load i64*, i64** %5, align 8, !dbg !9029
  %bf.load562 = load i64, i64* %54, align 8, !dbg !9029
  %bf.lshr563 = lshr i64 %bf.load562, 21, !dbg !9029
  %55 = trunc i64 %bf.lshr563 to i32, !dbg !9029
  %bf.cast565 = and i32 %55, 1, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %bf.cast565, metadata !8817, metadata !DIExpression()), !dbg !9030
  %bf.clear568 = and i32 %bf.load547, 16711680, !dbg !9031
  %cmp569 = icmp eq i32 %bf.clear568, 65536, !dbg !9033
  br i1 %cmp569, label %if.then577, label %lor.lhs.false571, !dbg !9034

lor.lhs.false571:                                 ; preds = %if.then558
  %cmp575 = icmp eq i32 %bf.clear555, 65536, !dbg !9035
  br i1 %cmp575, label %if.then577, label %if.else582, !dbg !9036

if.then577:                                       ; preds = %lor.lhs.false571, %if.then558
  %call578 = call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #6, !dbg !9037
  %tobool579 = icmp eq i32 %call_param_p, 0, !dbg !9038
  %cond580 = select i1 %tobool579, i32 0, i32 2, !dbg !9038
  %call581 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %target, %struct.rtx_def* %temp.1, %struct.rtx_def* %call578, i32 %cond580) #8, !dbg !9039
  br label %cleanup775, !dbg !9039

if.else582:                                       ; preds = %lor.lhs.false571
  call void @convert_move(%struct.rtx_def* %target, %struct.rtx_def* %temp.1, i32 %bf.cast565) #8, !dbg !9040
  br label %cleanup775

if.else584:                                       ; preds = %if.then543.if.else584_crit_edge, %land.lhs.true552
  %bf.clear587.pre-phi = phi i32 [ %.pre29, %if.then543.if.else584_crit_edge ], [ %bf.clear555, %land.lhs.true552 ], !dbg !9025
  %cmp588 = icmp eq i32 %bf.clear587.pre-phi, 65536, !dbg !9041
  br i1 %cmp588, label %land.lhs.true590, label %if.else731, !dbg !9042

land.lhs.true590:                                 ; preds = %if.else584
  %bf.load592 = load i64, i64* %1, align 8, !dbg !9043
  %bf.cast5948 = and i64 %bf.load592, 65535, !dbg !9044
  %cmp595 = icmp eq i64 %bf.cast5948, 28, !dbg !9044
  br i1 %cmp595, label %if.then597, label %if.else731, !dbg !9045

if.then597:                                       ; preds = %land.lhs.true590
  %call598 = call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #6, !dbg !9046
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call598, metadata !8822, metadata !DIExpression()), !dbg !9047
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call598, i64 0, i32 0, !dbg !9048
  %bf.load599 = load i32, i32* %56, align 8, !dbg !9048
  %bf.clear600 = and i32 %bf.load599, 65535, !dbg !9048
  %cmp601 = icmp eq i32 %bf.clear600, 30, !dbg !9048
  br i1 %cmp601, label %land.lhs.true603, label %if.else615, !dbg !9049

land.lhs.true603:                                 ; preds = %if.then597
  %u604 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call598, i64 0, i32 1, !dbg !9050
  %arrayidx605 = bitcast %union.u* %u604 to i64*, !dbg !9050
  %57 = load i64, i64* %arrayidx605, align 8, !dbg !9050
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9051
  %59 = load i32, i32* %58, align 8, !dbg !9051
  %conv608 = sext i32 %59 to i64, !dbg !9051
  %cmp609 = icmp slt i64 %57, %conv608, !dbg !9052
  br i1 %cmp609, label %if.then611, label %if.else615, !dbg !9053

if.then611:                                       ; preds = %land.lhs.true603
  %tobool612 = icmp eq i32 %call_param_p, 0, !dbg !9054
  %cond613 = select i1 %tobool612, i32 0, i32 2, !dbg !9054
  %call614 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %target, %struct.rtx_def* %temp.1, %struct.rtx_def* %call598, i32 %cond613) #8, !dbg !9055
  br label %cleanup775, !dbg !9055

if.else615:                                       ; preds = %land.lhs.true603, %if.then597
  %60 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 0), align 8, !dbg !9056
  %61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9057
  %rt_mem619 = bitcast %union.rtunion_def* %61 to %struct.mem_attrs**, !dbg !9057
  %62 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem619, align 8, !dbg !9057
  %cmp620 = icmp eq %struct.mem_attrs* %62, null, !dbg !9057
  br i1 %cmp620, label %cond.end629, label %cond.false623, !dbg !9057

cond.false623:                                    ; preds = %if.else615
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %62, i64 0, i32 5, !dbg !9057
  %63 = load i8, i8* %addrspace, align 8, !dbg !9057
  br label %cond.end629, !dbg !9057

cond.end629:                                      ; preds = %if.else615, %cond.false623
  %cond630 = phi i8 [ %63, %cond.false623 ], [ 0, %if.else615 ]
  %call632 = call i32 %60(i8 zeroext %cond630) #6, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %call632, metadata !8825, metadata !DIExpression()), !dbg !9059
  %64 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !9060
  %65 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem619, align 8, !dbg !9061
  %cmp637 = icmp eq %struct.mem_attrs* %65, null, !dbg !9061
  br i1 %cmp637, label %cond.end647, label %cond.false640, !dbg !9061

cond.false640:                                    ; preds = %cond.end629
  %addrspace645 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %65, i64 0, i32 5, !dbg !9061
  %66 = load i8, i8* %addrspace645, align 8, !dbg !9061
  br label %cond.end647, !dbg !9061

cond.end647:                                      ; preds = %cond.end629, %cond.false640
  %cond648 = phi i8 [ %66, %cond.false640 ], [ 0, %cond.end629 ]
  %call650 = call i32 %64(i8 zeroext %cond648) #6, !dbg !9062
  call void @llvm.dbg.value(metadata i32 %call650, metadata !8828, metadata !DIExpression()), !dbg !9059
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9063
  %call651 = call %union.tree_node* @make_tree(%union.tree_node* %67, %struct.rtx_def* %call598) #6, !dbg !9064
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9065
  %69 = load i32, i32* %68, align 8, !dbg !9065
  %conv654 = sext i32 %69 to i64, !dbg !9065
  %call655 = call %union.tree_node* @size_int_kind(i64 %conv654, i32 0) #6, !dbg !9065
  %call656 = call %union.tree_node* @size_binop_loc(i32 %cond, i32 80, %union.tree_node* %call651, %union.tree_node* %call655) #6, !dbg !9066
  call void @llvm.dbg.value(metadata %union.tree_node* %call656, metadata !8829, metadata !DIExpression()), !dbg !9059
  %call659 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call656, %struct.rtx_def* null, i32 0, i32 %cond428) #8, !dbg !9067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call659, metadata !8830, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8831, metadata !DIExpression()), !dbg !9059
  %70 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !9068
  %bf.load661 = load i64, i64* %70, align 8, !dbg !9068
  %bf.lshr662 = lshr i64 %bf.load661, 21, !dbg !9068
  %71 = trunc i64 %bf.lshr662 to i32, !dbg !9068
  %bf.cast664 = and i32 %71, 1, !dbg !9068
  %call665 = call %struct.rtx_def* @convert_to_mode(i32 %call632, %struct.rtx_def* %call659, i32 %bf.cast664) #8, !dbg !9069
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call665, metadata !8830, metadata !DIExpression()), !dbg !9059
  %tobool666 = icmp eq i32 %call_param_p, 0, !dbg !9070
  %cond667 = select i1 %tobool666, i32 0, i32 2, !dbg !9070
  %call668 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %target, %struct.rtx_def* %temp.1, %struct.rtx_def* %call665, i32 %cond667) #8, !dbg !9071
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call665, i64 0, i32 0, !dbg !9072
  %bf.load669 = load i32, i32* %72, align 8, !dbg !9072
  %bf.clear670 = and i32 %bf.load669, 65535, !dbg !9072
  %cmp671 = icmp eq i32 %bf.clear670, 30, !dbg !9072
  br i1 %cmp671, label %if.then673, label %if.else683, !dbg !9074

if.then673:                                       ; preds = %cond.end647
  %u674 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call665, i64 0, i32 1, !dbg !9075
  %arrayidx676 = bitcast %union.u* %u674 to i64*, !dbg !9075
  %73 = load i64, i64* %arrayidx676, align 8, !dbg !9075
  %sub677 = sub nsw i64 0, %73, !dbg !9077
  %call678 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call598, i64 %sub677) #6, !dbg !9078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call678, metadata !8822, metadata !DIExpression()), !dbg !9047
  %74 = load i64, i64* %arrayidx676, align 8, !dbg !9079
  %call682 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 1, i64 %74, i32 1, i32 1) #6, !dbg !9079
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call682, metadata !8791, metadata !DIExpression()), !dbg !8833
  br label %if.end720, !dbg !9080

if.else683:                                       ; preds = %cond.end647
  %75 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !9081
  %bf.load685 = load i64, i64* %75, align 8, !dbg !9081
  %bf.cast6879 = and i64 %bf.load685, 65535, !dbg !9081
  %cmp688 = icmp eq i64 %bf.cast6879, 14, !dbg !9081
  br i1 %cmp688, label %cond.true690, label %cond.false692, !dbg !9081

cond.true690:                                     ; preds = %if.else683
  %.cast = bitcast i64* %75 to %union.tree_node*, !dbg !9081
  %call691 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !9081
  br label %cond.end698, !dbg !9081

cond.false692:                                    ; preds = %if.else683
  %type693 = bitcast i64* %75 to %struct.tree_type*, !dbg !9081
  %mode694 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type693, i64 0, i32 6, !dbg !9081
  %bf.load695 = load i32, i32* %mode694, align 4, !dbg !9081
  %bf.lshr696 = lshr i32 %bf.load695, 16, !dbg !9081
  %bf.clear697 = and i32 %bf.lshr696, 255, !dbg !9081
  br label %cond.end698, !dbg !9081

cond.end698:                                      ; preds = %cond.false692, %cond.true690
  %cond699 = phi i32 [ %call691, %cond.true690 ], [ %bf.clear697, %cond.false692 ], !dbg !9081
  %call700 = call %struct.rtx_def* @expand_binop(i32 %cond699, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), %struct.rtx_def* %call598, %struct.rtx_def* %call665, %struct.rtx_def* null, i32 0, i32 3) #6, !dbg !9083
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call700, metadata !8822, metadata !DIExpression()), !dbg !9047
  %bf.load701 = load i32, i32* %72, align 8, !dbg !9084
  %bf.lshr702 = lshr i32 %bf.load701, 16, !dbg !9084
  %bf.clear703 = and i32 %bf.lshr702, 255, !dbg !9084
  %cmp704 = icmp eq i32 %bf.clear703, %call650, !dbg !9086
  br i1 %cmp704, label %if.end713, label %if.then706, !dbg !9087

if.then706:                                       ; preds = %cond.end698
  %76 = load i64*, i64** bitcast ([4 x %union.tree_node*]* @sizetype_tab to i64**), align 16, !dbg !9088
  %bf.load708 = load i64, i64* %76, align 8, !dbg !9088
  %bf.lshr709 = lshr i64 %bf.load708, 21, !dbg !9088
  %77 = trunc i64 %bf.lshr709 to i32, !dbg !9088
  %bf.cast711 = and i32 %77, 1, !dbg !9088
  %call712 = call %struct.rtx_def* @convert_to_mode(i32 %call650, %struct.rtx_def* %call665, i32 %bf.cast711) #8, !dbg !9089
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call712, metadata !8830, metadata !DIExpression()), !dbg !9059
  br label %if.end713, !dbg !9090

if.end713:                                        ; preds = %cond.end698, %if.then706
  %copy_size_rtx.0 = phi %struct.rtx_def* [ %call712, %if.then706 ], [ %call665, %cond.end698 ], !dbg !9059
  call void @llvm.dbg.value(metadata %struct.rtx_def* %copy_size_rtx.0, metadata !8830, metadata !DIExpression()), !dbg !9059
  %call714 = call i64 @highest_pow2_factor(%union.tree_node* %call656) #8, !dbg !9091
  %call715 = call %struct.rtx_def* @offset_address(%struct.rtx_def* %target, %struct.rtx_def* %copy_size_rtx.0, i64 %call714) #6, !dbg !9092
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call715, metadata !8791, metadata !DIExpression()), !dbg !8833
  %call716 = call %struct.rtx_def* @gen_label_rtx() #6, !dbg !9093
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call716, metadata !8831, metadata !DIExpression()), !dbg !9059
  %78 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9094
  %79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call700, i64 0, i32 0, !dbg !9095
  %bf.load717 = load i32, i32* %79, align 8, !dbg !9095
  %bf.lshr718 = lshr i32 %bf.load717, 16, !dbg !9095
  %bf.clear719 = and i32 %bf.lshr718, 255, !dbg !9095
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call700, %struct.rtx_def* %78, i32 85, %struct.rtx_def* null, i32 %bf.clear719, i32 0, %struct.rtx_def* %call716) #6, !dbg !9096
  br label %if.end720

if.end720:                                        ; preds = %if.end713, %if.then673
  %size.0 = phi %struct.rtx_def* [ %call678, %if.then673 ], [ %call700, %if.end713 ], !dbg !9097
  %label.0 = phi %struct.rtx_def* [ null, %if.then673 ], [ %call716, %if.end713 ], !dbg !9059
  %target.addr.0 = phi %struct.rtx_def* [ %call682, %if.then673 ], [ %call715, %if.end713 ], !dbg !9097
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !8791, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label.0, metadata !8831, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata %struct.rtx_def* %size.0, metadata !8822, metadata !DIExpression()), !dbg !9047
  %80 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9098
  %cmp721 = icmp eq %struct.rtx_def* %size.0, %80, !dbg !9100
  br i1 %cmp721, label %if.end725, label %if.then723, !dbg !9101

if.then723:                                       ; preds = %if.end720
  %call724 = call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %size.0, i32 0) #8, !dbg !9102
  br label %if.end725, !dbg !9102

if.end725:                                        ; preds = %if.end720, %if.then723
  %tobool726 = icmp eq %struct.rtx_def* %label.0, null, !dbg !9103
  br i1 %tobool726, label %cleanup775, label %if.then727, !dbg !9105

if.then727:                                       ; preds = %if.end725
  %call728 = call %struct.rtx_def* @emit_label(%struct.rtx_def* nonnull %label.0) #6, !dbg !9106
  br label %cleanup775, !dbg !9106

if.else731:                                       ; preds = %land.lhs.true590, %if.else584
  %bf.clear733 = and i32 %bf.load547, 65535, !dbg !9107
  %cmp734 = icmp eq i32 %bf.clear733, 15, !dbg !9109
  br i1 %cmp734, label %if.then736, label %if.else743, !dbg !9110

if.then736:                                       ; preds = %if.else731
  %81 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9111
  %call741 = call i64 @int_size_in_bytes(%union.tree_node* %81) #6, !dbg !9112
  %conv742 = trunc i64 %call741 to i32, !dbg !9112
  call void @emit_group_load(%struct.rtx_def* %target, %struct.rtx_def* %temp.1, %union.tree_node* %81, i32 %conv742) #8, !dbg !9113
  br label %cleanup775, !dbg !9113

if.else743:                                       ; preds = %if.else731
  br i1 %cmp588, label %if.then749, label %if.else754, !dbg !9114

if.then749:                                       ; preds = %if.else743
  %call750 = call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #6, !dbg !9115
  %tobool751 = icmp eq i32 %call_param_p, 0, !dbg !9117
  %cond752 = select i1 %tobool751, i32 0, i32 2, !dbg !9117
  %call753 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %target, %struct.rtx_def* %temp.1, %struct.rtx_def* %call750, i32 %cond752) #8, !dbg !9118
  br label %cleanup775, !dbg !9118

if.else754:                                       ; preds = %if.else743
  br i1 %tobool419, label %if.else762, label %land.lhs.true757, !dbg !9119

land.lhs.true757:                                 ; preds = %if.else754
  %call758 = call zeroext i8 @emit_storent_insn(%struct.rtx_def* %target, %struct.rtx_def* %temp.1) #8, !dbg !9121
  %tobool760 = icmp eq i8 %call758, 0, !dbg !9121
  br i1 %tobool760, label %if.else762, label %cleanup775, !dbg !9122

if.else762:                                       ; preds = %land.lhs.true757, %if.else754
  %call763 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %temp.1, %struct.rtx_def* %target) #8, !dbg !9123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call763, metadata !8794, metadata !DIExpression()), !dbg !8833
  %cmp764 = icmp eq %struct.rtx_def* %call763, %target, !dbg !9125
  br i1 %cmp764, label %cleanup775, label %if.then766, !dbg !9127

if.then766:                                       ; preds = %if.else762
  %call767 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %call763) #8, !dbg !9128
  br label %cleanup775, !dbg !9128

cleanup775:                                       ; preds = %lor.lhs.false524, %lor.lhs.false518, %land.lhs.true536, %if.end725, %land.lhs.true757, %if.else762, %land.lhs.true539, %land.lhs.true527, %if.then727, %if.then611, %if.then749, %if.then766, %if.then736, %if.then577, %if.else582, %cleanup, %cond.end298, %if.then42, %if.then23, %cond.end16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9129
  ret %struct.rtx_def* null, !dbg !9129
}

declare dso_local void @set_mem_attributes_minus_bitpos(%struct.rtx_def*, %union.tree_node*, i32, i64) local_unnamed_addr #1

declare dso_local zeroext i8 @component_uses_parent_alias_set(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @optimize_bitfield_assignment_op(i64 %bitsize, i64 %bitpos, i32 %mode1, %struct.rtx_def* %str_rtx, %union.tree_node* %to, %union.tree_node* %src) unnamed_addr #4 !dbg !9130 {
entry:
  call void @llvm.dbg.value(metadata i64 %bitsize, metadata !9134, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !9135, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i32 %mode1, metadata !9136, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %str_rtx, metadata !9137, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !9138, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !9139, metadata !DIExpression()), !dbg !9167
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %str_rtx, i64 0, i32 0, !dbg !9168
  %bf.load = load i32, i32* %0, align 8, !dbg !9168
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !9168
  %bf.clear = and i32 %bf.lshr, 255, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !9140, metadata !DIExpression()), !dbg !9167
  %idxprom = zext i32 %bf.clear to i64, !dbg !9169
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9169
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9169
  %conv1 = zext i8 %1 to i32, !dbg !9169
  %mul = shl nuw nsw i32 %conv1, 3, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %mul, metadata !9141, metadata !DIExpression()), !dbg !9167
  %cmp = icmp ne i32 %mode1, 0, !dbg !9170
  %cmp5 = icmp ugt i64 %bitsize, 31, !dbg !9172
  %or.cond = or i1 %cmp, %cmp5, !dbg !9173
  %cmp8 = icmp ugt i8 %1, 4, !dbg !9174
  %or.cond2 = or i1 %or.cond, %cmp8, !dbg !9173
  br i1 %or.cond2, label %cleanup280, label %lor.lhs.false10, !dbg !9173

lor.lhs.false10:                                  ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %to, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9175
  %bf.load11 = load i64, i64* %2, align 8, !dbg !9175
  %bf.cast4 = and i64 %bf.load11, 65536, !dbg !9175
  %tobool = icmp eq i64 %bf.cast4, 0, !dbg !9175
  br i1 %tobool, label %lor.lhs.false14, label %cleanup280, !dbg !9176

lor.lhs.false14:                                  ; preds = %lor.lhs.false10
  %bf.cast195 = and i64 %bf.load11, 524288, !dbg !9177
  %tobool20 = icmp eq i64 %bf.cast195, 0, !dbg !9177
  br i1 %tobool20, label %if.end, label %cleanup280, !dbg !9178

if.end:                                           ; preds = %lor.lhs.false14
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %src) #6, !dbg !9179
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9139, metadata !DIExpression()), !dbg !9167
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9180
  %bf.load22 = load i64, i64* %3, align 8, !dbg !9180
  %bf.cast24 = and i64 %bf.load22, 65535, !dbg !9180
  %arrayidx26 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast24, !dbg !9180
  %4 = load i32, i32* %arrayidx26, align 4, !dbg !9180
  %cmp27 = icmp eq i32 %4, 7, !dbg !9180
  br i1 %cmp27, label %lor.lhs.false29, label %cleanup280, !dbg !9182

lor.lhs.false29:                                  ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9183
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !9183
  %6 = load i64*, i64** %5, align 8, !dbg !9183
  %bf.load31 = load i64, i64* %6, align 8, !dbg !9183
  %bf.cast336 = and i64 %bf.load31, 65535, !dbg !9184
  %cmp34 = icmp eq i64 %bf.cast336, 8, !dbg !9184
  br i1 %cmp34, label %if.end37, label %cleanup280, !dbg !9185

if.end37:                                         ; preds = %lor.lhs.false29
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9186
  %7 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9186
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !9142, metadata !DIExpression()), !dbg !9167
  %arrayidx41 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9187
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8, !dbg !9187
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !9143, metadata !DIExpression()), !dbg !9167
  %call42 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %7) #6, !dbg !9188
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !9142, metadata !DIExpression()), !dbg !9167
  %call43 = tail call i32 @operand_equal_p(%union.tree_node* %to, %union.tree_node* %call42, i32 0) #6, !dbg !9189
  %tobool44 = icmp eq i32 %call43, 0, !dbg !9189
  br i1 %tobool44, label %cleanup280, label %if.end46, !dbg !9191

if.end46:                                         ; preds = %if.end37
  %bf.load47 = load i32, i32* %0, align 8, !dbg !9192
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !9192
  %cmp49 = icmp eq i32 %bf.clear48, 43, !dbg !9192
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !9193

if.then51:                                        ; preds = %if.end46
  %9 = add i8 %1, -1, !dbg !9194
  %10 = icmp ugt i8 %9, 3, !dbg !9194
  %11 = load i32, i32* @word_mode, align 4, !dbg !9194
  %str_mode.0 = select i1 %10, i32 %11, i32 %bf.clear, !dbg !9194
  call void @llvm.dbg.value(metadata i32 %str_mode.0, metadata !9140, metadata !DIExpression()), !dbg !9167
  %conv59 = trunc i64 %bitsize to i32, !dbg !9196
  %conv60 = trunc i64 %bitpos to i32, !dbg !9197
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %str_rtx, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9198
  %rt_mem = bitcast %union.rtunion_def* %12 to %struct.mem_attrs**, !dbg !9198
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !9198
  %cmp62 = icmp eq %struct.mem_attrs* %13, null, !dbg !9198
  br i1 %cmp62, label %cond.end, label %cond.true, !dbg !9198

cond.true:                                        ; preds = %if.then51
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %13, i64 0, i32 4, !dbg !9198
  %14 = load i32, i32* %align, align 4, !dbg !9198
  br label %cond.end, !dbg !9198

cond.end:                                         ; preds = %if.then51, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 8, %if.then51 ], !dbg !9198
  %call68 = tail call i32 @get_best_mode(i32 %conv59, i32 %conv60, i32 %cond, i32 %str_mode.0, i32 0) #6, !dbg !9199
  call void @llvm.dbg.value(metadata i32 %call68, metadata !9140, metadata !DIExpression()), !dbg !9167
  %cmp69 = icmp eq i32 %call68, 0, !dbg !9200
  br i1 %cmp69, label %cleanup, label %if.end72, !dbg !9202

if.end72:                                         ; preds = %cond.end
  %idxprom73 = zext i32 %call68 to i64, !dbg !9203
  %arrayidx74 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom73, !dbg !9203
  %15 = load i8, i8* %arrayidx74, align 1, !dbg !9203
  %conv76 = zext i8 %15 to i32, !dbg !9203
  %mul77 = shl nuw nsw i32 %conv76, 3, !dbg !9203
  call void @llvm.dbg.value(metadata i32 %mul77, metadata !9141, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !9160, metadata !DIExpression()), !dbg !9204
  %conv80 = zext i32 %mul77 to i64, !dbg !9205
  %rem = urem i64 %bitpos, %conv80, !dbg !9206
  call void @llvm.dbg.value(metadata i64 %rem, metadata !9135, metadata !DIExpression()), !dbg !9167
  %sub = sub i64 %bitpos, %rem, !dbg !9207
  %div = lshr i64 %sub, 3, !dbg !9208
  call void @llvm.dbg.value(metadata i64 %div, metadata !9160, metadata !DIExpression()), !dbg !9204
  %call81 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %str_rtx, i32 %call68, i64 %div, i32 1, i32 1) #6, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call81, metadata !9137, metadata !DIExpression()), !dbg !9167
  br label %cleanup, !dbg !9210

cleanup:                                          ; preds = %cond.end, %if.end72
  %str_bitsize.0 = phi i32 [ %mul77, %if.end72 ], [ %mul, %cond.end ], !dbg !9167
  %str_rtx.addr.0 = phi %struct.rtx_def* [ %call81, %if.end72 ], [ %str_rtx, %cond.end ]
  %bitpos.addr.0 = phi i64 [ %rem, %if.end72 ], [ %bitpos, %cond.end ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end72 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata i64 %bitpos.addr.0, metadata !9135, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %str_rtx.addr.0, metadata !9137, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i32 %str_bitsize.0, metadata !9141, metadata !DIExpression()), !dbg !9167
  br i1 %cleanup.dest.slot.0, label %if.end92, label %cleanup280

if.else:                                          ; preds = %if.end46
  %cmp84 = icmp eq i32 %bf.clear48, 37, !dbg !9211
  br i1 %cmp84, label %if.end92, label %land.lhs.true, !dbg !9213

land.lhs.true:                                    ; preds = %if.else
  %cmp88 = icmp eq i32 %bf.clear48, 39, !dbg !9214
  br i1 %cmp88, label %if.end92, label %cleanup280, !dbg !9215

if.end92:                                         ; preds = %land.lhs.true, %if.else, %cleanup
  %str_bitsize.1 = phi i32 [ %str_bitsize.0, %cleanup ], [ %mul, %land.lhs.true ], [ %mul, %if.else ], !dbg !9216
  %str_mode.1 = phi i32 [ %call68, %cleanup ], [ %bf.clear, %land.lhs.true ], [ %bf.clear, %if.else ], !dbg !9167
  %str_rtx.addr.1 = phi %struct.rtx_def* [ %str_rtx.addr.0, %cleanup ], [ %str_rtx, %land.lhs.true ], [ %str_rtx, %if.else ]
  %bitpos.addr.1 = phi i64 [ %bitpos.addr.0, %cleanup ], [ %bitpos, %land.lhs.true ], [ %bitpos, %if.else ]
  call void @llvm.dbg.value(metadata i64 %bitpos.addr.1, metadata !9135, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %str_rtx.addr.1, metadata !9137, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i32 %str_mode.1, metadata !9140, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i32 %str_bitsize.1, metadata !9141, metadata !DIExpression()), !dbg !9167
  %conv93 = zext i32 %str_bitsize.1 to i64, !dbg !9217
  %cmp94 = icmp ugt i64 %conv93, %bitsize, !dbg !9219
  br i1 %cmp94, label %if.end97, label %cleanup280, !dbg !9220

if.end97:                                         ; preds = %if.end92
  %add = add i64 %bitpos.addr.1, %bitsize, !dbg !9221
  %cmp99 = icmp ugt i64 %add, %conv93, !dbg !9223
  br i1 %cmp99, label %cleanup280, label %if.end102, !dbg !9224

if.end102:                                        ; preds = %if.end97
  %bf.load104 = load i64, i64* %3, align 8, !dbg !9225
  %16 = trunc i64 %bf.load104 to i16, !dbg !9225
  switch i16 %16, label %cleanup280 [
    i16 63, label %sw.bb
    i16 64, label %sw.bb
    i16 87, label %sw.bb185
    i16 88, label %sw.bb185
  ], !dbg !9226

sw.bb:                                            ; preds = %if.end102, %if.end102
  %cmp109 = icmp eq i64 %add, %conv93, !dbg !9227
  br i1 %cmp109, label %if.end122, label %land.lhs.true111, !dbg !9229

land.lhs.true111:                                 ; preds = %sw.bb
  %cmp112 = icmp eq i64 %bitsize, 1, !dbg !9230
  br i1 %cmp112, label %lor.lhs.false114, label %cleanup280, !dbg !9231

lor.lhs.false114:                                 ; preds = %land.lhs.true111
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9232
  %bf.load116 = load i64, i64* %17, align 8, !dbg !9232
  %bf.cast11813 = and i64 %bf.load116, 65535, !dbg !9233
  %cmp119 = icmp eq i64 %bf.cast11813, 23, !dbg !9233
  br i1 %cmp119, label %if.end122, label %cleanup280, !dbg !9234

if.end122:                                        ; preds = %lor.lhs.false114, %sw.bb
  %call123 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %8, %struct.rtx_def* null, i32 %str_mode.1, i32 0) #8, !dbg !9235
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call123, metadata !9144, metadata !DIExpression()), !dbg !9167
  %type125 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9236
  %18 = bitcast %union.tree_node** %type125 to i64**, !dbg !9236
  %19 = load i64*, i64** %18, align 8, !dbg !9236
  %bf.load127 = load i64, i64* %19, align 8, !dbg !9236
  %bf.cast12910 = and i64 %bf.load127, 65535, !dbg !9236
  %cmp130 = icmp eq i64 %bf.cast12910, 14, !dbg !9236
  br i1 %cmp130, label %cond.true132, label %cond.false136, !dbg !9236

cond.true132:                                     ; preds = %if.end122
  %.cast11 = bitcast i64* %19 to %union.tree_node*, !dbg !9236
  %call135 = tail call i32 @vector_type_mode(%union.tree_node* %.cast11) #6, !dbg !9236
  %.pre17 = load i64*, i64** %18, align 8, !dbg !9237
  %bf.load148.pre = load i64, i64* %.pre17, align 8, !dbg !9237
  br label %cond.end143, !dbg !9236

cond.false136:                                    ; preds = %if.end122
  %type139 = bitcast i64* %19 to %struct.tree_type*, !dbg !9236
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type139, i64 0, i32 6, !dbg !9236
  %bf.load140 = load i32, i32* %mode, align 4, !dbg !9236
  %bf.lshr141 = lshr i32 %bf.load140, 16, !dbg !9236
  %bf.clear142 = and i32 %bf.lshr141, 255, !dbg !9236
  br label %cond.end143, !dbg !9236

cond.end143:                                      ; preds = %cond.false136, %cond.true132
  %bf.load148 = phi i64 [ %bf.load148.pre, %cond.true132 ], [ %bf.load127, %cond.false136 ], !dbg !9237
  %cond144 = phi i32 [ %call135, %cond.true132 ], [ %bf.clear142, %cond.false136 ], !dbg !9236
  %bf.lshr149 = lshr i64 %bf.load148, 21, !dbg !9237
  %20 = trunc i64 %bf.lshr149 to i32, !dbg !9237
  %bf.cast151 = and i32 %20, 1, !dbg !9237
  %call152 = tail call %struct.rtx_def* @convert_modes(i32 %str_mode.1, i32 %cond144, %struct.rtx_def* %call123, i32 %bf.cast151) #8, !dbg !9238
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call152, metadata !9144, metadata !DIExpression()), !dbg !9167
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %str_rtx.addr.1, i64 0, i32 0, !dbg !9239
  %bf.load153 = load i32, i32* %21, align 8, !dbg !9239
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !9239
  %cmp155 = icmp eq i32 %bf.clear154, 43, !dbg !9239
  br i1 %cmp155, label %if.then157, label %if.end159, !dbg !9241

if.then157:                                       ; preds = %cond.end143
  %call158 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %str_rtx.addr.1) #6, !dbg !9242
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call158, metadata !9137, metadata !DIExpression()), !dbg !9167
  tail call void @set_mem_alias_set(%struct.rtx_def* %call158, i32 0) #6, !dbg !9244
  tail call void @set_mem_expr(%struct.rtx_def* %call158, %union.tree_node* null) #6, !dbg !9245
  br label %if.end159, !dbg !9246

if.end159:                                        ; preds = %if.then157, %cond.end143
  %str_rtx.addr.2 = phi %struct.rtx_def* [ %call158, %if.then157 ], [ %str_rtx.addr.1, %cond.end143 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %str_rtx.addr.2, metadata !9137, metadata !DIExpression()), !dbg !9167
  %bf.load161 = load i64, i64* %3, align 8, !dbg !9247
  %bf.cast16312 = and i64 %bf.load161, 65535, !dbg !9248
  %cmp164 = icmp eq i64 %bf.cast16312, 63, !dbg !9248
  %cond166 = select i1 %cmp164, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 14), !dbg !9247
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond166, metadata !9146, metadata !DIExpression()), !dbg !9167
  %cmp167 = icmp eq i64 %bitsize, 1, !dbg !9249
  br i1 %cmp167, label %land.lhs.true169, label %if.end176, !dbg !9251

land.lhs.true169:                                 ; preds = %if.end159
  %add170 = add i64 %bitpos.addr.1, 1, !dbg !9252
  %cmp172 = icmp eq i64 %add170, %conv93, !dbg !9253
  br i1 %cmp172, label %if.end176, label %if.then174, !dbg !9254

if.then174:                                       ; preds = %land.lhs.true169
  %22 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !9255
  %call175 = tail call %struct.rtx_def* @expand_and(i32 %str_mode.1, %struct.rtx_def* %call152, %struct.rtx_def* %22, %struct.rtx_def* null) #6, !dbg !9257
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call175, metadata !9144, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), metadata !9146, metadata !DIExpression()), !dbg !9167
  br label %if.end176, !dbg !9258

if.end176:                                        ; preds = %land.lhs.true169, %if.then174, %if.end159
  %value.0 = phi %struct.rtx_def* [ %call175, %if.then174 ], [ %call152, %land.lhs.true169 ], [ %call152, %if.end159 ], !dbg !9259
  %binop.0 = phi %struct.optab_d* [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), %if.then174 ], [ %cond166, %land.lhs.true169 ], [ %cond166, %if.end159 ], !dbg !9259
  call void @llvm.dbg.value(metadata %struct.optab_d* %binop.0, metadata !9146, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.0, metadata !9144, metadata !DIExpression()), !dbg !9167
  %call177 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %bitpos.addr.1) #6, !dbg !9260
  %call178 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %str_mode.1, %struct.rtx_def* %value.0, %union.tree_node* %call177, %struct.rtx_def* null, i32 1) #6, !dbg !9261
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call178, metadata !9144, metadata !DIExpression()), !dbg !9167
  %call179 = tail call %struct.rtx_def* @expand_binop(i32 %str_mode.1, %struct.optab_d* %binop.0, %struct.rtx_def* %str_rtx.addr.2, %struct.rtx_def* %call178, %struct.rtx_def* %str_rtx.addr.2, i32 1, i32 2) #6, !dbg !9262
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call179, metadata !9145, metadata !DIExpression()), !dbg !9167
  %cmp180 = icmp eq %struct.rtx_def* %call179, %str_rtx.addr.2, !dbg !9263
  br i1 %cmp180, label %cleanup280, label %if.then182, !dbg !9265

if.then182:                                       ; preds = %if.end176
  %call183 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %str_rtx.addr.2, %struct.rtx_def* %call179) #8, !dbg !9266
  br label %cleanup280, !dbg !9266

sw.bb185:                                         ; preds = %if.end102, %if.end102
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9267
  %bf.load187 = load i64, i64* %23, align 8, !dbg !9267
  %bf.cast1897 = and i64 %bf.load187, 65535, !dbg !9269
  %cmp190 = icmp eq i64 %bf.cast1897, 23, !dbg !9269
  br i1 %cmp190, label %if.end193, label %cleanup280, !dbg !9270

if.end193:                                        ; preds = %sw.bb185
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %str_rtx.addr.1, i64 0, i32 0, !dbg !9271
  %bf.load194 = load i32, i32* %24, align 8, !dbg !9271
  %bf.lshr195 = lshr i32 %bf.load194, 16, !dbg !9271
  %bf.clear196 = and i32 %bf.lshr195, 255, !dbg !9271
  %call197 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %8, %struct.rtx_def* null, i32 %bf.clear196, i32 0) #8, !dbg !9272
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call197, metadata !9144, metadata !DIExpression()), !dbg !9167
  %bf.load198 = load i32, i32* %24, align 8, !dbg !9273
  %bf.lshr199 = lshr i32 %bf.load198, 16, !dbg !9273
  %bf.clear200 = and i32 %bf.lshr199, 255, !dbg !9273
  %type202 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9274
  %25 = bitcast %union.tree_node** %type202 to i64**, !dbg !9274
  %26 = load i64*, i64** %25, align 8, !dbg !9274
  %bf.load204 = load i64, i64* %26, align 8, !dbg !9274
  %bf.cast2068 = and i64 %bf.load204, 65535, !dbg !9274
  %cmp207 = icmp eq i64 %bf.cast2068, 14, !dbg !9274
  br i1 %cmp207, label %cond.true209, label %cond.false213, !dbg !9274

cond.true209:                                     ; preds = %if.end193
  %.cast = bitcast i64* %26 to %union.tree_node*, !dbg !9274
  %call212 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !9274
  %.pre = load i64*, i64** %25, align 8, !dbg !9275
  %bf.load226.pre = load i64, i64* %.pre, align 8, !dbg !9275
  br label %cond.end221, !dbg !9274

cond.false213:                                    ; preds = %if.end193
  %type216 = bitcast i64* %26 to %struct.tree_type*, !dbg !9274
  %mode217 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type216, i64 0, i32 6, !dbg !9274
  %bf.load218 = load i32, i32* %mode217, align 4, !dbg !9274
  %bf.lshr219 = lshr i32 %bf.load218, 16, !dbg !9274
  %bf.clear220 = and i32 %bf.lshr219, 255, !dbg !9274
  br label %cond.end221, !dbg !9274

cond.end221:                                      ; preds = %cond.false213, %cond.true209
  %bf.load226 = phi i64 [ %bf.load226.pre, %cond.true209 ], [ %bf.load204, %cond.false213 ], !dbg !9275
  %cond222 = phi i32 [ %call212, %cond.true209 ], [ %bf.clear220, %cond.false213 ], !dbg !9274
  %bf.lshr227 = lshr i64 %bf.load226, 21, !dbg !9275
  %27 = trunc i64 %bf.lshr227 to i32, !dbg !9275
  %bf.cast229 = and i32 %27, 1, !dbg !9275
  %call230 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear200, i32 %cond222, %struct.rtx_def* %call197, i32 %bf.cast229) #8, !dbg !9276
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call230, metadata !9144, metadata !DIExpression()), !dbg !9167
  %bf.load231 = load i32, i32* %24, align 8, !dbg !9277
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !9277
  %cmp233 = icmp eq i32 %bf.clear232, 43, !dbg !9277
  br i1 %cmp233, label %if.then235, label %if.end237, !dbg !9279

if.then235:                                       ; preds = %cond.end221
  %call236 = tail call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %str_rtx.addr.1) #6, !dbg !9280
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call236, metadata !9137, metadata !DIExpression()), !dbg !9167
  tail call void @set_mem_alias_set(%struct.rtx_def* %call236, i32 0) #6, !dbg !9282
  tail call void @set_mem_expr(%struct.rtx_def* %call236, %union.tree_node* null) #6, !dbg !9283
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call236, i64 0, i32 0, !dbg !9284
  %bf.load246.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !9285
  br label %if.end237, !dbg !9286

if.end237:                                        ; preds = %if.then235, %cond.end221
  %bf.load246 = phi i32 [ %bf.load246.pre, %if.then235 ], [ %bf.load231, %cond.end221 ], !dbg !9285
  %str_rtx.addr.3 = phi %struct.rtx_def* [ %call236, %if.then235 ], [ %str_rtx.addr.1, %cond.end221 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %str_rtx.addr.3, metadata !9137, metadata !DIExpression()), !dbg !9167
  %bf.load239 = load i64, i64* %3, align 8, !dbg !9287
  %bf.cast2419 = and i64 %bf.load239, 65535, !dbg !9288
  %cmp242 = icmp eq i64 %bf.cast2419, 87, !dbg !9288
  %cond244 = select i1 %cmp242, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 42), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), !dbg !9287
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond244, metadata !9146, metadata !DIExpression()), !dbg !9167
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %str_rtx.addr.3, i64 0, i32 0, !dbg !9285
  %bf.lshr247 = lshr i32 %bf.load246, 16, !dbg !9285
  %bf.clear248 = and i32 %bf.lshr247, 255, !dbg !9285
  %idxprom249 = zext i32 %bf.clear248 to i64, !dbg !9285
  %arrayidx250 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom249, !dbg !9285
  %29 = load i8, i8* %arrayidx250, align 1, !dbg !9285
  %conv252 = zext i8 %29 to i64, !dbg !9285
  %mul253 = shl nuw nsw i64 %conv252, 3, !dbg !9285
  %cmp256 = icmp eq i64 %add, %mul253, !dbg !9289
  br i1 %cmp256, label %if.end265, label %if.then258, !dbg !9290

if.then258:                                       ; preds = %if.end237
  %notmask = shl nsw i64 -1, %bitsize, !dbg !9291
  %sub259 = xor i64 %notmask, -1, !dbg !9291
  %call260 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub259) #6, !dbg !9291
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call260, metadata !9163, metadata !DIExpression()), !dbg !9292
  %bf.load261 = load i32, i32* %28, align 8, !dbg !9293
  %bf.lshr262 = lshr i32 %bf.load261, 16, !dbg !9293
  %bf.clear263 = and i32 %bf.lshr262, 255, !dbg !9293
  %call264 = tail call %struct.rtx_def* @expand_and(i32 %bf.clear263, %struct.rtx_def* %call230, %struct.rtx_def* %call260, %struct.rtx_def* null) #6, !dbg !9294
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call264, metadata !9144, metadata !DIExpression()), !dbg !9167
  %bf.load266.pre = load i32, i32* %28, align 8, !dbg !9295
  %.pre19 = lshr i32 %bf.load266.pre, 16, !dbg !9295
  %.pre20 = and i32 %.pre19, 255, !dbg !9295
  br label %if.end265, !dbg !9296

if.end265:                                        ; preds = %if.end237, %if.then258
  %bf.clear268.pre-phi = phi i32 [ %bf.clear248, %if.end237 ], [ %.pre20, %if.then258 ], !dbg !9295
  %value.1 = phi %struct.rtx_def* [ %call230, %if.end237 ], [ %call264, %if.then258 ], !dbg !9259
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.1, metadata !9144, metadata !DIExpression()), !dbg !9167
  %call269 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %bitpos.addr.1) #6, !dbg !9297
  %call270 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear268.pre-phi, %struct.rtx_def* %value.1, %union.tree_node* %call269, %struct.rtx_def* null, i32 1) #6, !dbg !9298
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call270, metadata !9144, metadata !DIExpression()), !dbg !9167
  %bf.load271 = load i32, i32* %28, align 8, !dbg !9299
  %bf.lshr272 = lshr i32 %bf.load271, 16, !dbg !9299
  %bf.clear273 = and i32 %bf.lshr272, 255, !dbg !9299
  %call274 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear273, %struct.optab_d* %cond244, %struct.rtx_def* %str_rtx.addr.3, %struct.rtx_def* %call270, %struct.rtx_def* %str_rtx.addr.3, i32 1, i32 2) #6, !dbg !9300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !9145, metadata !DIExpression()), !dbg !9167
  %cmp275 = icmp eq %struct.rtx_def* %call274, %str_rtx.addr.3, !dbg !9301
  br i1 %cmp275, label %cleanup280, label %if.then277, !dbg !9303

if.then277:                                       ; preds = %if.end265
  %call278 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %str_rtx.addr.3, %struct.rtx_def* %call274) #8, !dbg !9304
  br label %cleanup280, !dbg !9304

cleanup280:                                       ; preds = %lor.lhs.false114, %land.lhs.true111, %if.end176, %if.end265, %sw.bb185, %if.end92, %land.lhs.true, %if.end37, %lor.lhs.false29, %lor.lhs.false14, %lor.lhs.false10, %if.end102, %if.then277, %if.then182, %if.end97, %if.end, %entry, %cleanup
  %retval.1 = phi i8 [ 0, %cleanup ], [ 0, %lor.lhs.false14 ], [ 0, %lor.lhs.false10 ], [ 0, %entry ], [ 0, %lor.lhs.false29 ], [ 0, %if.end ], [ 0, %if.end37 ], [ 0, %land.lhs.true ], [ 0, %if.end92 ], [ 0, %if.end97 ], [ 1, %if.then182 ], [ 1, %if.end176 ], [ 1, %if.then277 ], [ 1, %if.end265 ], [ 0, %if.end102 ], [ 0, %sw.bb185 ], [ 0, %land.lhs.true111 ], [ 0, %lor.lhs.false114 ], !dbg !9167
  ret i8 %retval.1, !dbg !9305
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %union.tree_node* %exp, %union.tree_node* %type, i32 %alias_set, i8 zeroext %nontemporal) unnamed_addr #4 !dbg !9306 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !9310, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata i64 %bitsize, metadata !9311, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !9312, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9313, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9314, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9315, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata i32 %alias_set, metadata !9316, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata i8 %nontemporal, metadata !9317, metadata !DIExpression()), !dbg !9334
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9335
  %bf.load = load i64, i64* %0, align 8, !dbg !9335
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !9337
  %cmp = icmp eq i64 %bf.cast3, 0, !dbg !9337
  br i1 %cmp, label %if.then, label %if.end, !dbg !9338

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9339
  br label %return, !dbg !9340

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i64 %bitsize, 0, !dbg !9341
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9343

if.then2:                                         ; preds = %if.end
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9344
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %2, i32 0, i32 0) #8, !dbg !9345
  br label %return, !dbg !9346

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %mode, 1, !dbg !9347
  br i1 %cmp4, label %land.lhs.true, label %if.end3.if.end26_crit_edge, !dbg !9348

if.end3.if.end26_crit_edge:                       ; preds = %if.end3
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !9349
  %bf.load27.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !9351
  br label %if.end26, !dbg !9348

land.lhs.true:                                    ; preds = %if.end3
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !9352
  %bf.load5 = load i32, i32* %3, align 8, !dbg !9352
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !9352
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !9352
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !9353

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp10 = icmp eq i32 %bf.clear6, 39, !dbg !9354
  br i1 %cmp10, label %if.then11, label %if.end26, !dbg !9355

if.then11:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %call12 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %type, i32 0, i32 1, i32 1) #6, !dbg !9356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call12, metadata !9318, metadata !DIExpression()), !dbg !9357
  %call13 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call12, i32 1, i64 0, i32 1, i32 1) #6, !dbg !9358
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !9321, metadata !DIExpression()), !dbg !9357
  %bf.load14 = load i32, i32* %3, align 8, !dbg !9359
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !9359
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !9359
  %idxprom = zext i32 %bf.clear15 to i64, !dbg !9359
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9359
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9359
  %conv16 = zext i8 %4 to i64, !dbg !9359
  %mul = shl nuw nsw i64 %conv16, 3, !dbg !9359
  %cmp19 = icmp eq i64 %mul, %bitsize, !dbg !9361
  br i1 %cmp19, label %if.end23, label %if.then21, !dbg !9362

if.then21:                                        ; preds = %if.then11
  %call22 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call12, %struct.rtx_def* %target) #8, !dbg !9363
  br label %if.end23, !dbg !9363

if.end23:                                         ; preds = %if.then11, %if.then21
  %call24 = tail call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %call13, i64 %bitsize, i64 %bitpos, i32 1, %union.tree_node* %exp, %union.tree_node* %type, i32 %alias_set, i8 zeroext %nontemporal) #8, !dbg !9364
  %call25 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %call12) #8, !dbg !9365
  ret %struct.rtx_def* %call13, !dbg !9366

if.end26:                                         ; preds = %if.end3.if.end26_crit_edge, %lor.lhs.false
  %bf.load61 = phi i32 [ %bf.load27.pre, %if.end3.if.end26_crit_edge ], [ %bf.load5, %lor.lhs.false ], !dbg !9351
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !9351
  %bf.clear28 = and i32 %bf.load61, 65535, !dbg !9351
  %cmp29 = icmp eq i32 %bf.clear28, 41, !dbg !9367
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !9368

if.then31:                                        ; preds = %if.end26
  %tobool = icmp eq i64 %bitpos, 0, !dbg !9369
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9369

cond.true:                                        ; preds = %if.then31
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5812, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9369
  br label %cond.end, !dbg !9369

cond.end:                                         ; preds = %if.then31, %cond.true
  %call32 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 0, i8 zeroext %nontemporal) #8, !dbg !9371
  br label %return, !dbg !9372

if.end33:                                         ; preds = %if.end26
  switch i32 %mode, label %land.lhs.true39 [
    i32 0, label %if.then112
    i32 1, label %lor.lhs.false55
  ], !dbg !9373

land.lhs.true39:                                  ; preds = %if.end33
  %idxprom40 = sext i32 %mode to i64, !dbg !9374
  %arrayidx41 = getelementptr inbounds [87 x i8], [87 x i8]* @direct_store, i64 0, i64 %idxprom40, !dbg !9374
  %6 = load i8, i8* %arrayidx41, align 1, !dbg !9374
  %tobool42 = icmp eq i8 %6, 0, !dbg !9374
  br i1 %tobool42, label %land.lhs.true43, label %lor.lhs.false55, !dbg !9375

land.lhs.true43:                                  ; preds = %land.lhs.true39
  %idxprom44 = zext i32 %mode to i64, !dbg !9376
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom44, !dbg !9376
  %7 = load i8, i8* %arrayidx45, align 1, !dbg !9376
  %cmp47 = icmp eq i8 %7, 10, !dbg !9377
  br i1 %cmp47, label %lor.lhs.false55, label %land.lhs.true49, !dbg !9378

land.lhs.true49:                                  ; preds = %land.lhs.true43
  %cmp53 = icmp eq i8 %7, 11, !dbg !9379
  br i1 %cmp53, label %lor.lhs.false55, label %if.then112, !dbg !9380

lor.lhs.false55:                                  ; preds = %land.lhs.true49, %land.lhs.true43, %land.lhs.true39, %if.end33
  %cmp58 = icmp eq i32 %bf.clear28, 37, !dbg !9381
  br i1 %cmp58, label %if.then112, label %lor.lhs.false60, !dbg !9382

lor.lhs.false60:                                  ; preds = %lor.lhs.false55
  %cmp63 = icmp eq i32 %bf.clear28, 39, !dbg !9383
  br i1 %cmp63, label %if.then112, label %lor.lhs.false65, !dbg !9384

lor.lhs.false65:                                  ; preds = %lor.lhs.false60
  br i1 %cmp4, label %lor.lhs.false92, label %land.lhs.true68, !dbg !9385

land.lhs.true68:                                  ; preds = %lor.lhs.false65
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9386
  %rt_mem = bitcast %union.rtunion_def* %8 to %struct.mem_attrs**, !dbg !9386
  %9 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !9386
  %cmp70 = icmp eq %struct.mem_attrs* %9, null, !dbg !9386
  br i1 %cmp70, label %cond.end78, label %cond.true72, !dbg !9386

cond.true72:                                      ; preds = %land.lhs.true68
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i64 0, i32 4, !dbg !9386
  %10 = load i32, i32* %align, align 4, !dbg !9386
  br label %cond.end78, !dbg !9386

cond.end78:                                       ; preds = %land.lhs.true68, %cond.true72
  %cond79 = phi i32 [ %10, %cond.true72 ], [ 8, %land.lhs.true68 ], !dbg !9386
  %call80 = tail call i32 @get_mode_alignment(i32 %mode) #6, !dbg !9387
  %cmp81 = icmp ult i32 %cond79, %call80, !dbg !9388
  br i1 %cmp81, label %lor.lhs.false88, label %lor.lhs.false83, !dbg !9389

lor.lhs.false83:                                  ; preds = %cond.end78
  %call84 = tail call i32 @get_mode_alignment(i32 %mode) #6, !dbg !9390
  br label %lor.lhs.false88, !dbg !9391

lor.lhs.false88:                                  ; preds = %lor.lhs.false83, %cond.end78
  %rem8918 = and i64 %bitpos, 7, !dbg !9392
  %cmp90 = icmp eq i64 %rem8918, 0, !dbg !9392
  br i1 %cmp90, label %lor.lhs.false92, label %if.then112, !dbg !9393

lor.lhs.false92:                                  ; preds = %lor.lhs.false88, %lor.lhs.false65
  %cmp93 = icmp sgt i64 %bitsize, -1, !dbg !9394
  br i1 %cmp93, label %land.lhs.true95, label %if.else, !dbg !9395

land.lhs.true95:                                  ; preds = %lor.lhs.false92
  %type96 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9396
  %11 = bitcast %union.tree_node** %type96 to %struct.tree_type**, !dbg !9396
  %12 = load %struct.tree_type*, %struct.tree_type** %11, align 8, !dbg !9396
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 2, !dbg !9396
  %13 = bitcast %union.tree_node** %size to i64**, !dbg !9396
  %14 = load i64*, i64** %13, align 8, !dbg !9396
  %bf.load99 = load i64, i64* %14, align 8, !dbg !9396
  %bf.cast1014 = and i64 %bf.load99, 65535, !dbg !9397
  %cmp102 = icmp eq i64 %bf.cast1014, 23, !dbg !9397
  br i1 %cmp102, label %land.lhs.true104, label %if.else, !dbg !9398

land.lhs.true104:                                 ; preds = %land.lhs.true95
  %15 = bitcast i64* %14 to %union.tree_node*, !dbg !9398
  %call109 = tail call i32 @compare_tree_int(%union.tree_node* %15, i64 %bitsize) #6, !dbg !9399
  %cmp110 = icmp eq i32 %call109, 0, !dbg !9400
  br i1 %cmp110, label %if.else, label %if.then112, !dbg !9401

if.then112:                                       ; preds = %land.lhs.true49, %lor.lhs.false88, %land.lhs.true104, %if.end33, %lor.lhs.false60, %lor.lhs.false55
  %call113 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %exp, i32 116) #8, !dbg !9402
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call113, metadata !9325, metadata !DIExpression()), !dbg !9403
  %tobool114 = icmp eq %union.gimple_statement_d* %call113, null, !dbg !9404
  br i1 %tobool114, label %if.end211, label %if.then115, !dbg !9405

if.then115:                                       ; preds = %if.then112
  %type118 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9406
  %16 = load %union.tree_node*, %union.tree_node** %type118, align 8, !dbg !9406
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !9326, metadata !DIExpression()), !dbg !9407
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9408
  %bf.load120 = load i64, i64* %17, align 8, !dbg !9408
  %bf.cast12211 = and i64 %bf.load120, 65535, !dbg !9408
  %cmp123 = icmp eq i64 %bf.cast12211, 6, !dbg !9408
  br i1 %cmp123, label %land.lhs.true139, label %lor.lhs.false125, !dbg !9408

lor.lhs.false125:                                 ; preds = %if.then115
  %cmp130 = icmp eq i64 %bf.cast12211, 7, !dbg !9408
  br i1 %cmp130, label %land.lhs.true139, label %lor.lhs.false132, !dbg !9408

lor.lhs.false132:                                 ; preds = %lor.lhs.false125
  %cmp137 = icmp eq i64 %bf.cast12211, 8, !dbg !9408
  br i1 %cmp137, label %land.lhs.true139, label %if.end211, !dbg !9409

land.lhs.true139:                                 ; preds = %lor.lhs.false132, %lor.lhs.false125, %if.then115
  %type140 = bitcast %union.tree_node* %16 to %struct.tree_type*, !dbg !9410
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type140, i64 0, i32 6, !dbg !9410
  %bf.load141 = load i32, i32* %precision, align 4, !dbg !9410
  %bf.clear142 = and i32 %bf.load141, 1023, !dbg !9410
  %cmp147 = icmp eq i64 %bf.cast12211, 14, !dbg !9411
  br i1 %cmp147, label %cond.true149, label %cond.false151, !dbg !9411

cond.true149:                                     ; preds = %land.lhs.true139
  %call150 = tail call i32 @vector_type_mode(%union.tree_node* %16) #6, !dbg !9411
  br label %cond.end157, !dbg !9411

cond.false151:                                    ; preds = %land.lhs.true139
  %bf.lshr155 = lshr i32 %bf.load141, 16, !dbg !9411
  %bf.clear156 = and i32 %bf.lshr155, 255, !dbg !9411
  br label %cond.end157, !dbg !9411

cond.end157:                                      ; preds = %cond.false151, %cond.true149
  %cond158 = phi i32 [ %call150, %cond.true149 ], [ %bf.clear156, %cond.false151 ], !dbg !9411
  %idxprom159 = zext i32 %cond158 to i64, !dbg !9411
  %arrayidx160 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom159, !dbg !9411
  %18 = load i8, i8* %arrayidx160, align 1, !dbg !9411
  %conv162 = zext i8 %18 to i32, !dbg !9411
  %mul163 = shl nuw nsw i32 %conv162, 3, !dbg !9411
  %cmp166 = icmp ult i32 %bf.clear142, %mul163, !dbg !9412
  br i1 %cmp166, label %land.lhs.true168, label %if.end211, !dbg !9413

land.lhs.true168:                                 ; preds = %cond.end157
  %bf.load171 = load i32, i32* %precision, align 4, !dbg !9414
  %bf.clear172 = and i32 %bf.load171, 1023, !dbg !9414
  %conv173 = zext i32 %bf.clear172 to i64, !dbg !9414
  %cmp174 = icmp eq i64 %conv173, %bitsize, !dbg !9415
  br i1 %cmp174, label %if.then176, label %if.end211, !dbg !9416

if.then176:                                       ; preds = %land.lhs.true168
  %call177 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call113) #8, !dbg !9417
  call void @llvm.dbg.value(metadata %union.tree_node* %call177, metadata !9329, metadata !DIExpression()), !dbg !9418
  %type179 = getelementptr inbounds %union.tree_node, %union.tree_node* %call177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9419
  %19 = load %union.tree_node*, %union.tree_node** %type179, align 8, !dbg !9419
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !9326, metadata !DIExpression()), !dbg !9407
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9420
  %bf.load181 = load i64, i64* %20, align 8, !dbg !9420
  %bf.cast18315 = and i64 %bf.load181, 65535, !dbg !9420
  %cmp184 = icmp eq i64 %bf.cast18315, 6, !dbg !9420
  br i1 %cmp184, label %land.lhs.true200, label %lor.lhs.false186, !dbg !9420

lor.lhs.false186:                                 ; preds = %if.then176
  %cmp191 = icmp eq i64 %bf.cast18315, 7, !dbg !9420
  br i1 %cmp191, label %land.lhs.true200, label %lor.lhs.false193, !dbg !9420

lor.lhs.false193:                                 ; preds = %lor.lhs.false186
  %cmp198 = icmp eq i64 %bf.cast18315, 8, !dbg !9420
  br i1 %cmp198, label %land.lhs.true200, label %if.end211, !dbg !9422

land.lhs.true200:                                 ; preds = %lor.lhs.false193, %lor.lhs.false186, %if.then176
  %type201 = bitcast %union.tree_node* %19 to %struct.tree_type*, !dbg !9423
  %precision202 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type201, i64 0, i32 6, !dbg !9423
  %bf.load203 = load i32, i32* %precision202, align 4, !dbg !9423
  %bf.clear204 = and i32 %bf.load203, 1023, !dbg !9423
  %conv205 = zext i32 %bf.clear204 to i64, !dbg !9423
  %cmp206 = icmp slt i64 %conv205, %bitsize, !dbg !9424
  %spec.select = select i1 %cmp206, %union.tree_node* %exp, %union.tree_node* %call177, !dbg !9425
  br label %if.end211, !dbg !9425

if.end211:                                        ; preds = %if.then112, %land.lhs.true200, %lor.lhs.false132, %cond.end157, %land.lhs.true168, %lor.lhs.false193
  %exp.addr.2 = phi %union.tree_node* [ %exp, %if.then112 ], [ %exp, %land.lhs.true168 ], [ %exp, %cond.end157 ], [ %exp, %lor.lhs.false132 ], [ %exp, %lor.lhs.false193 ], [ %spec.select, %land.lhs.true200 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.2, metadata !9314, metadata !DIExpression()), !dbg !9334
  %call212 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %exp.addr.2) #8, !dbg !9426
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call212, metadata !9322, metadata !DIExpression()), !dbg !9403
  %switch = icmp ult i32 %mode, 2, !dbg !9427
  br i1 %switch, label %if.end267, label %land.lhs.true218, !dbg !9427

land.lhs.true218:                                 ; preds = %if.end211
  %type220 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9429
  %21 = bitcast %union.tree_node** %type220 to i64**, !dbg !9429
  %22 = load i64*, i64** %21, align 8, !dbg !9429
  %bf.load222 = load i64, i64* %22, align 8, !dbg !9429
  %bf.cast2245 = and i64 %bf.load222, 65535, !dbg !9429
  %cmp225 = icmp eq i64 %bf.cast2245, 14, !dbg !9429
  br i1 %cmp225, label %cond.true227, label %cond.false231, !dbg !9429

cond.true227:                                     ; preds = %land.lhs.true218
  %.cast = bitcast i64* %22 to %union.tree_node*, !dbg !9429
  %call230 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !9429
  br label %cond.end239, !dbg !9429

cond.false231:                                    ; preds = %land.lhs.true218
  %type234 = bitcast i64* %22 to %struct.tree_type*, !dbg !9429
  %mode235 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type234, i64 0, i32 6, !dbg !9429
  %bf.load236 = load i32, i32* %mode235, align 4, !dbg !9429
  %bf.lshr237 = lshr i32 %bf.load236, 16, !dbg !9429
  %bf.clear238 = and i32 %bf.lshr237, 255, !dbg !9429
  br label %cond.end239, !dbg !9429

cond.end239:                                      ; preds = %cond.false231, %cond.true227
  %cond240 = phi i32 [ %call230, %cond.true227 ], [ %bf.clear238, %cond.false231 ], !dbg !9429
  %cmp241 = icmp eq i32 %cond240, %mode, !dbg !9430
  br i1 %cmp241, label %if.end267, label %if.then243, !dbg !9431

if.then243:                                       ; preds = %cond.end239
  %23 = load i64*, i64** %21, align 8, !dbg !9432
  %bf.load247 = load i64, i64* %23, align 8, !dbg !9432
  %bf.cast2499 = and i64 %bf.load247, 65535, !dbg !9432
  %cmp250 = icmp eq i64 %bf.cast2499, 14, !dbg !9432
  br i1 %cmp250, label %cond.true252, label %cond.false256, !dbg !9432

cond.true252:                                     ; preds = %if.then243
  %.cast10 = bitcast i64* %23 to %union.tree_node*, !dbg !9432
  %call255 = tail call i32 @vector_type_mode(%union.tree_node* %.cast10) #6, !dbg !9432
  br label %cond.end264, !dbg !9432

cond.false256:                                    ; preds = %if.then243
  %type259 = bitcast i64* %23 to %struct.tree_type*, !dbg !9432
  %mode260 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type259, i64 0, i32 6, !dbg !9432
  %bf.load261 = load i32, i32* %mode260, align 4, !dbg !9432
  %bf.lshr262 = lshr i32 %bf.load261, 16, !dbg !9432
  %bf.clear263 = and i32 %bf.lshr262, 255, !dbg !9432
  br label %cond.end264, !dbg !9432

cond.end264:                                      ; preds = %cond.false256, %cond.true252
  %cond265 = phi i32 [ %call255, %cond.true252 ], [ %bf.clear263, %cond.false256 ], !dbg !9432
  %call266 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %cond265, %struct.rtx_def* %call212, i32 1) #8, !dbg !9433
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call266, metadata !9322, metadata !DIExpression()), !dbg !9403
  br label %if.end267, !dbg !9434

if.end267:                                        ; preds = %cond.end239, %if.end211, %cond.end264
  %temp.0 = phi %struct.rtx_def* [ %call266, %cond.end264 ], [ %call212, %cond.end239 ], [ %call212, %if.end211 ], !dbg !9403
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !9322, metadata !DIExpression()), !dbg !9403
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.0, i64 0, i32 0, !dbg !9435
  %bf.load268 = load i32, i32* %24, align 8, !dbg !9435
  %bf.clear270 = and i32 %bf.load268, 16711680, !dbg !9435
  %cmp271 = icmp eq i32 %bf.clear270, 65536, !dbg !9437
  br i1 %cmp271, label %land.lhs.true273, label %if.end323, !dbg !9438

land.lhs.true273:                                 ; preds = %if.end267
  %bf.load274 = load i32, i32* %5, align 8, !dbg !9439
  %bf.clear276 = and i32 %bf.load274, 16711680, !dbg !9439
  %cmp277 = icmp eq i32 %bf.clear276, 65536, !dbg !9440
  br i1 %cmp277, label %land.lhs.true273.if.then301_crit_edge, label %lor.lhs.false279, !dbg !9441

land.lhs.true273.if.then301_crit_edge:            ; preds = %land.lhs.true273
  %.pre = and i32 %bf.load274, 65535, !dbg !9442
  %phitmp20 = icmp eq i32 %.pre, 43, !dbg !9441
  br label %if.then301, !dbg !9441

lor.lhs.false279:                                 ; preds = %land.lhs.true273
  %bf.clear281 = and i32 %bf.load274, 65535, !dbg !9444
  %cmp282 = icmp eq i32 %bf.clear281, 43, !dbg !9444
  br i1 %cmp282, label %land.lhs.true284, label %if.end323, !dbg !9445

land.lhs.true284:                                 ; preds = %lor.lhs.false279
  %bf.lshr286 = lshr i32 %bf.load274, 16, !dbg !9446
  %bf.clear287 = and i32 %bf.lshr286, 255, !dbg !9446
  %idxprom288 = zext i32 %bf.clear287 to i64, !dbg !9446
  %arrayidx289 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom288, !dbg !9446
  %25 = load i8, i8* %arrayidx289, align 1, !dbg !9446
  %cmp291 = icmp eq i8 %25, 2, !dbg !9447
  %26 = or i64 %bitpos, %bitsize, !dbg !9448
  %27 = and i64 %26, 7, !dbg !9448
  %28 = icmp eq i64 %27, 0, !dbg !9448
  %29 = and i1 %28, %cmp291, !dbg !9448
  br i1 %29, label %if.then301, label %if.end323, !dbg !9448

if.then301:                                       ; preds = %land.lhs.true273.if.then301_crit_edge, %land.lhs.true284
  %bf.clear303.pre-phi = phi i1 [ %phitmp20, %land.lhs.true273.if.then301_crit_edge ], [ true, %land.lhs.true284 ]
  br i1 %bf.clear303.pre-phi, label %land.lhs.true306, label %cond.true315, !dbg !9442

land.lhs.true306:                                 ; preds = %if.then301
  %bf.clear308 = and i32 %bf.load268, 65535, !dbg !9442
  %cmp309 = icmp eq i32 %bf.clear308, 43, !dbg !9442
  %rem3128 = and i64 %bitpos, 7, !dbg !9442
  %cmp313 = icmp eq i64 %rem3128, 0, !dbg !9442
  %or.cond2 = and i1 %cmp309, %cmp313, !dbg !9442
  br i1 %or.cond2, label %cond.end317, label %cond.true315, !dbg !9442

cond.true315:                                     ; preds = %land.lhs.true306, %if.then301
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5895, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9442
  br label %cond.end317, !dbg !9442

cond.end317:                                      ; preds = %land.lhs.true306, %cond.true315
  %div = sdiv i64 %bitpos, 8, !dbg !9449
  %call319 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 0, i64 %div, i32 1, i32 1) #6, !dbg !9449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call319, metadata !9310, metadata !DIExpression()), !dbg !9334
  %sub = add nsw i64 %bitsize, 7, !dbg !9450
  %div320 = sdiv i64 %sub, 8, !dbg !9450
  %call321 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div320) #6, !dbg !9450
  %call322 = tail call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %call319, %struct.rtx_def* %temp.0, %struct.rtx_def* %call321, i32 0) #8, !dbg !9451
  %30 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9452
  br label %return, !dbg !9453

if.end323:                                        ; preds = %land.lhs.true284, %lor.lhs.false279, %if.end267
  tail call void @store_bit_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %struct.rtx_def* %temp.0) #6, !dbg !9454
  %31 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9455
  br label %return, !dbg !9456

if.else:                                          ; preds = %land.lhs.true104, %land.lhs.true95, %lor.lhs.false92
  %div325 = sdiv i64 %bitpos, 8, !dbg !9457
  %call326 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 %mode, i64 %div325, i32 1, i32 1) #6, !dbg !9457
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call326, metadata !9332, metadata !DIExpression()), !dbg !9458
  %cmp327 = icmp eq %struct.rtx_def* %call326, %target, !dbg !9459
  br i1 %cmp327, label %if.then329, label %do.body, !dbg !9461

if.then329:                                       ; preds = %if.else
  %call330 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target) #6, !dbg !9462
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call330, metadata !9332, metadata !DIExpression()), !dbg !9458
  br label %do.body, !dbg !9463

do.body:                                          ; preds = %if.else, %if.then329
  %to_rtx.0 = phi %struct.rtx_def* [ %call330, %if.then329 ], [ %call326, %if.else ], !dbg !9458
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_rtx.0, metadata !9332, metadata !DIExpression()), !dbg !9458
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.0, i64 0, i32 0, !dbg !9464
  %bf.load332 = load i32, i32* %32, align 8, !dbg !9464
  %bf.set = and i32 %bf.load332, 1879048191, !dbg !9464
  %bf.clear335 = or i32 %bf.set, 268435456, !dbg !9464
  store i32 %bf.clear335, i32* %32, align 8, !dbg !9464
  %bf.clear338 = and i32 %bf.load332, 16777216, !dbg !9468
  %tobool339 = icmp eq i32 %bf.clear338, 0, !dbg !9468
  br i1 %tobool339, label %land.lhs.true340, label %if.end358, !dbg !9470

land.lhs.true340:                                 ; preds = %do.body
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9471
  %rt_mem344 = bitcast %union.rtunion_def* %33 to %struct.mem_attrs**, !dbg !9471
  %34 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem344, align 8, !dbg !9471
  %cmp345 = icmp eq %struct.mem_attrs* %34, null, !dbg !9471
  br i1 %cmp345, label %cond.end353, label %cond.false348, !dbg !9471

cond.false348:                                    ; preds = %land.lhs.true340
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %34, i64 0, i32 3, !dbg !9471
  %35 = load i32, i32* %alias, align 8, !dbg !9471
  %phitmp = icmp ne i32 %35, 0, !dbg !9471
  br label %cond.end353, !dbg !9471

cond.end353:                                      ; preds = %land.lhs.true340, %cond.false348
  %cond354 = phi i1 [ %phitmp, %cond.false348 ], [ false, %land.lhs.true340 ]
  br i1 %cond354, label %if.then357, label %if.end358, !dbg !9472

if.then357:                                       ; preds = %cond.end353
  tail call void @set_mem_alias_set(%struct.rtx_def* %to_rtx.0, i32 %alias_set) #6, !dbg !9473
  br label %if.end358, !dbg !9473

if.end358:                                        ; preds = %do.body, %if.then357, %cond.end353
  %call359 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %exp, %struct.rtx_def* %to_rtx.0, i32 0, i8 zeroext %nontemporal) #8, !dbg !9474
  br label %return

return:                                           ; preds = %cond.end317, %if.end323, %if.end358, %cond.end, %if.then2, %if.then
  %retval.1 = phi %struct.rtx_def* [ %1, %if.then ], [ %call, %if.then2 ], [ null, %cond.end ], [ null, %if.end358 ], [ %30, %cond.end317 ], [ %31, %if.end323 ], !dbg !9334
  ret %struct.rtx_def* %retval.1, !dbg !9366
}

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @free_temp_slots() local_unnamed_addr #1

declare dso_local void @pop_temp_slots() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @force_not_mem(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @set_mem_addr_space(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local i32 @aggregate_value_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expr_size(%union.tree_node*) local_unnamed_addr #1

declare dso_local zeroext i8 @refs_may_alias_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @emit_library_call(%struct.rtx_def*, i32, i32, i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @emit_storent_insn(%struct.rtx_def* %to, %struct.rtx_def* %from) local_unnamed_addr #4 !dbg !9475 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to, metadata !9479, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from, metadata !9480, metadata !DIExpression()), !dbg !9485
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to, i64 0, i32 0, !dbg !9486
  %bf.load = load i32, i32* %0, align 8, !dbg !9486
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !9486
  %bf.clear = and i32 %bf.lshr, 255, !dbg !9486
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !9481, metadata !DIExpression()), !dbg !9485
  %idxprom = zext i32 %bf.clear to i64, !dbg !9487
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 63, i32 4, i64 %idxprom, i32 0, !dbg !9488
  %1 = load i32, i32* %insn_code, align 4, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %1, metadata !9483, metadata !DIExpression()), !dbg !9485
  %cmp = icmp eq i32 %1, 2956, !dbg !9489
  br i1 %cmp, label %cleanup, label %if.end, !dbg !9491

if.end:                                           ; preds = %entry
  %idxprom1 = zext i32 %1 to i64, !dbg !9492
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 3, !dbg !9493
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !9493
  %mode4 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !9494
  %bf.load5 = load i16, i16* %mode4, align 8, !dbg !9494
  %bf.cast = zext i16 %bf.load5 to i32, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !9482, metadata !DIExpression()), !dbg !9485
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 0, !dbg !9495
  %3 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !9495
  %call = tail call i32 %3(%struct.rtx_def* %to, i32 %bf.cast) #6, !dbg !9497
  %tobool = icmp eq i32 %call, 0, !dbg !9497
  br i1 %tobool, label %cleanup, label %if.end11, !dbg !9498

if.end11:                                         ; preds = %if.end
  %mode16 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 2, !dbg !9499
  %bf.load17 = load i16, i16* %mode16, align 8, !dbg !9499
  %bf.cast18 = zext i16 %bf.load17 to i32, !dbg !9499
  call void @llvm.dbg.value(metadata i32 %bf.cast18, metadata !9482, metadata !DIExpression()), !dbg !9485
  %predicate23 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 1, i32 0, !dbg !9500
  %4 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate23, align 8, !dbg !9500
  %call24 = tail call i32 %4(%struct.rtx_def* %from, i32 %bf.cast18) #6, !dbg !9502
  %tobool25 = icmp eq i32 %call24, 0, !dbg !9502
  br i1 %tobool25, label %if.then26, label %if.end37, !dbg !9503

if.then26:                                        ; preds = %if.end11
  %call27 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast18, %struct.rtx_def* %from) #6, !dbg !9504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call27, metadata !9480, metadata !DIExpression()), !dbg !9485
  %5 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate23, align 8, !dbg !9506
  %call33 = tail call i32 %5(%struct.rtx_def* %call27, i32 %bf.cast18) #6, !dbg !9508
  %tobool34 = icmp eq i32 %call33, 0, !dbg !9508
  br i1 %tobool34, label %cleanup, label %if.end37, !dbg !9509

if.end37:                                         ; preds = %if.then26, %if.end11
  %from.addr.0 = phi %struct.rtx_def* [ %from, %if.end11 ], [ %call27, %if.then26 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %from.addr.0, metadata !9480, metadata !DIExpression()), !dbg !9485
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom1, i32 2, !dbg !9510
  %6 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !9510
  %call40 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %6(%struct.rtx_def* %to, %struct.rtx_def* %from.addr.0) #6, !dbg !9510
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !9484, metadata !DIExpression()), !dbg !9485
  %cmp41 = icmp eq %struct.rtx_def* %call40, null, !dbg !9511
  br i1 %cmp41, label %cleanup, label %if.end43, !dbg !9513

if.end43:                                         ; preds = %if.end37
  %call44 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* nonnull %call40) #6, !dbg !9514
  br label %cleanup, !dbg !9515

cleanup:                                          ; preds = %if.then26, %if.end, %if.end37, %entry, %if.end43
  %retval.0 = phi i8 [ 1, %if.end43 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.then26 ], [ 0, %if.end37 ], !dbg !9485
  ret i8 %retval.0, !dbg !9516
}

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #1

declare dso_local void @do_pending_stack_adjust() local_unnamed_addr #1

declare dso_local void @jumpifnot(%union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_barrier() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_label(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %union.tree_node* @signed_or_unsigned_type_for(i32, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local i64 @int_expr_size(%union.tree_node*) local_unnamed_addr #1

declare dso_local i64 @strlen(i8*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @builtin_strncpy_read_str(i8*, i64, i32) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, %struct.rtx_def** %alt_rtl) local_unnamed_addr #4 !dbg !9517 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9521, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !9522, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !9523, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !9524, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata %struct.rtx_def** %alt_rtl, metadata !9525, metadata !DIExpression()), !dbg !9532
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9533
  %bf.load = load i64, i64* %0, align 8, !dbg !9533
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9535
  %cmp = icmp eq i64 %bf.cast1, 0, !dbg !9535
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9536

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9537
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !9537
  %2 = load i64*, i64** %1, align 8, !dbg !9537
  %bf.load2 = load i64, i64* %2, align 8, !dbg !9537
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !9538
  %cmp5 = icmp eq i64 %bf.cast42, 0, !dbg !9538
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9539

if.then:                                          ; preds = %lor.lhs.false, %entry
  %idxprom = sext i32 %tmode to i64, !dbg !9540
  %arrayidx = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !9540
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !9540
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !9526, metadata !DIExpression()), !dbg !9532
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !9542
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9542
  %cond = select i1 %tobool, %struct.rtx_def* %4, %struct.rtx_def* %3, !dbg !9542
  br label %cleanup, !dbg !9542

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9543
  %tobool6 = icmp eq %struct.function* %5, null, !dbg !9543
  br i1 %tobool6, label %if.else, label %land.lhs.true, !dbg !9544

land.lhs.true:                                    ; preds = %if.end
  %arrayidx12 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !9545
  %6 = load i32, i32* %arrayidx12, align 4, !dbg !9545
  %cmp13 = icmp ugt i32 %6, 3, !dbg !9545
  br i1 %cmp13, label %land.lhs.true14, label %cond.end25, !dbg !9545

land.lhs.true14:                                  ; preds = %land.lhs.true
  %cmp21 = icmp ult i32 %6, 11, !dbg !9545
  br i1 %cmp21, label %cond.true22, label %cond.end25, !dbg !9545

cond.true22:                                      ; preds = %land.lhs.true14
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9545
  %8 = load i32, i32* %7, align 8, !dbg !9545
  %phitmp = icmp ne i32 %8, 0, !dbg !9545
  br label %cond.end25, !dbg !9545

cond.end25:                                       ; preds = %land.lhs.true, %land.lhs.true14, %cond.true22
  %cond26 = phi i1 [ %phitmp, %cond.true22 ], [ false, %land.lhs.true14 ], [ false, %land.lhs.true ]
  br i1 %cond26, label %if.then28, label %if.else, !dbg !9546

if.then28:                                        ; preds = %cond.end25
  %9 = load i32, i32* @input_location, align 4, !dbg !9547
  call void @llvm.dbg.value(metadata i32 %9, metadata !9527, metadata !DIExpression()), !dbg !9548
  %call = tail call i32 @get_curr_insn_source_location() #6, !dbg !9549
  call void @llvm.dbg.value(metadata i32 %call, metadata !9530, metadata !DIExpression()), !dbg !9548
  %call29 = tail call %union.tree_node* @get_curr_insn_block() #6, !dbg !9550
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !9531, metadata !DIExpression()), !dbg !9548
  %bf.load31 = load i64, i64* %0, align 8, !dbg !9551
  %bf.cast33 = and i64 %bf.load31, 65535, !dbg !9551
  %arrayidx35 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast33, !dbg !9551
  %10 = load i32, i32* %arrayidx35, align 4, !dbg !9551
  %cmp36 = icmp ugt i32 %10, 3, !dbg !9551
  br i1 %cmp36, label %land.lhs.true37, label %cond.end49, !dbg !9551

land.lhs.true37:                                  ; preds = %if.then28
  %cmp44 = icmp ult i32 %10, 11, !dbg !9551
  br i1 %cmp44, label %cond.true45, label %cond.end49, !dbg !9551

cond.true45:                                      ; preds = %land.lhs.true37
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9551
  %12 = load i32, i32* %11, align 8, !dbg !9551
  br label %cond.end49, !dbg !9551

cond.end49:                                       ; preds = %if.then28, %land.lhs.true37, %cond.true45
  %cond50 = phi i32 [ %12, %cond.true45 ], [ 0, %land.lhs.true37 ], [ 0, %if.then28 ], !dbg !9551
  store i32 %cond50, i32* @input_location, align 4, !dbg !9552
  tail call void @set_curr_insn_source_location(i32 %cond50) #6, !dbg !9553
  %call51 = tail call %union.tree_node** @tree_block(%union.tree_node* %exp) #6, !dbg !9554
  %13 = load %union.tree_node*, %union.tree_node** %call51, align 8, !dbg !9554
  tail call void @set_curr_insn_block(%union.tree_node* %13) #6, !dbg !9555
  %call52 = tail call %struct.rtx_def* @expand_expr_real_1(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, %struct.rtx_def** %alt_rtl) #8, !dbg !9556
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !9526, metadata !DIExpression()), !dbg !9532
  store i32 %9, i32* @input_location, align 4, !dbg !9557
  tail call void @set_curr_insn_block(%union.tree_node* %call29) #6, !dbg !9558
  tail call void @set_curr_insn_source_location(i32 %call) #6, !dbg !9559
  br label %cleanup, !dbg !9560

if.else:                                          ; preds = %if.end, %cond.end25
  %call53 = tail call %struct.rtx_def* @expand_expr_real_1(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, %struct.rtx_def** %alt_rtl) #8, !dbg !9561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !9526, metadata !DIExpression()), !dbg !9532
  br label %cleanup

cleanup:                                          ; preds = %cond.end49, %if.else, %if.then
  %retval.0 = phi %struct.rtx_def* [ %cond, %if.then ], [ %call52, %cond.end49 ], [ %call53, %if.else ], !dbg !9532
  ret %struct.rtx_def* %retval.0, !dbg !9563
}

declare dso_local i32 @side_effects_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i64 @highest_pow2_factor(%union.tree_node* %exp) local_unnamed_addr #4 !dbg !9564 {
entry:
  br label %tailrecurse, !dbg !9571

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %exp.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr, metadata !9568, metadata !DIExpression()), !dbg !9573
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9574
  %bf.load = load i64, i64* %0, align 8, !dbg !9574
  %1 = trunc i64 %bf.load to i16, !dbg !9574
  switch i16 %1, label %cleanup.loopexit [
    i16 23, label %sw.bb
    i16 63, label %sw.bb14
    i16 64, label %sw.bb14
    i16 80, label %sw.bb14
    i16 81, label %sw.bb14
    i16 65, label %sw.bb26
    i16 70, label %sw.bb35
    i16 67, label %sw.bb35
    i16 69, label %sw.bb35
    i16 68, label %sw.bb35
    i16 89, label %sw.bb62
    i16 116, label %sw.bb67
    i16 113, label %sw.bb67
    i16 120, label %sw.bb67
    i16 52, label %sw.bb72
    i16 56, label %sw.bb77
  ], !dbg !9575

sw.bb:                                            ; preds = %tailrecurse
  %exp.tr.lcssa22 = phi %union.tree_node* [ %exp.tr, %tailrecurse ]
  %bf.load.lcssa17 = phi i64 [ %bf.load, %tailrecurse ], !dbg !9574
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa22, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa22, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa22, metadata !9568, metadata !DIExpression()), !dbg !9573
  %bf.cast41 = and i64 %bf.load.lcssa17, 134217728, !dbg !9576
  %tobool = icmp eq i64 %bf.cast41, 0, !dbg !9576
  br i1 %tobool, label %if.else, label %if.then, !dbg !9578

if.then:                                          ; preds = %sw.bb
  %2 = load i32, i32* @ix86_isa_flags, align 4, !dbg !9579
  %and = and i32 %2, 32, !dbg !9579
  %cmp = icmp eq i32 %and, 0, !dbg !9579
  %cond = select i1 %cmp, i64 128, i64 256, !dbg !9579
  br label %cleanup, !dbg !9580

if.else:                                          ; preds = %sw.bb
  %int_cst5 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9581
  %low = bitcast i32* %int_cst5 to i64*, !dbg !9581
  %3 = load i64, i64* %low, align 8, !dbg !9581
  call void @llvm.dbg.value(metadata i64 %3, metadata !9569, metadata !DIExpression()), !dbg !9573
  %sub = sub i64 0, %3, !dbg !9583
  %and6 = and i64 %3, %sub, !dbg !9584
  call void @llvm.dbg.value(metadata i64 %and6, metadata !9569, metadata !DIExpression()), !dbg !9573
  %tobool7 = icmp eq i64 %and6, 0, !dbg !9585
  br i1 %tobool7, label %cond.false, label %cleanup, !dbg !9585

cond.false:                                       ; preds = %if.else
  %4 = load i32, i32* @ix86_isa_flags, align 4, !dbg !9586
  %and8 = and i32 %4, 32, !dbg !9586
  %cmp9 = icmp eq i32 %and8, 0, !dbg !9586
  %cond11 = select i1 %cmp9, i64 128, i64 256, !dbg !9586
  br label %cleanup, !dbg !9585

sw.bb14:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %exp.tr.lcssa23 = phi %union.tree_node* [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa23, metadata !9568, metadata !DIExpression()), !dbg !9573
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9587
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9587
  %call = tail call i64 @highest_pow2_factor(%union.tree_node* %5) #8, !dbg !9588
  call void @llvm.dbg.value(metadata i64 %call, metadata !9569, metadata !DIExpression()), !dbg !9573
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9589
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !9589
  %call19 = tail call i64 @highest_pow2_factor(%union.tree_node* %6) #8, !dbg !9590
  call void @llvm.dbg.value(metadata i64 %call19, metadata !9570, metadata !DIExpression()), !dbg !9573
  %cmp20 = icmp ult i64 %call, %call19, !dbg !9591
  %call.call19 = select i1 %cmp20, i64 %call, i64 %call19, !dbg !9591
  ret i64 %call.call19, !dbg !9592

sw.bb26:                                          ; preds = %tailrecurse
  %exp.tr.lcssa24 = phi %union.tree_node* [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa24, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa24, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa24, metadata !9568, metadata !DIExpression()), !dbg !9573
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9593
  %7 = load %union.tree_node*, %union.tree_node** %operands28, align 8, !dbg !9593
  %call30 = tail call i64 @highest_pow2_factor(%union.tree_node* %7) #8, !dbg !9594
  call void @llvm.dbg.value(metadata i64 %call30, metadata !9569, metadata !DIExpression()), !dbg !9573
  %arrayidx33 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands28, i64 1, !dbg !9595
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx33, align 8, !dbg !9595
  %call34 = tail call i64 @highest_pow2_factor(%union.tree_node* %8) #8, !dbg !9596
  call void @llvm.dbg.value(metadata i64 %call34, metadata !9570, metadata !DIExpression()), !dbg !9573
  %mul = mul i64 %call30, %call34, !dbg !9597
  ret i64 %mul, !dbg !9592

sw.bb35:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %exp.tr.lcssa25 = phi %union.tree_node* [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa25, metadata !9568, metadata !DIExpression()), !dbg !9573
  %operands37 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9598
  %arrayidx38 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands37, i64 1, !dbg !9598
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !9598
  %call39 = tail call i32 @integer_pow2p(%union.tree_node* %9) #6, !dbg !9600
  %tobool40 = icmp eq i32 %call39, 0, !dbg !9600
  br i1 %tobool40, label %cleanup, label %land.lhs.true, !dbg !9601

land.lhs.true:                                    ; preds = %sw.bb35
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !9602
  %call44 = tail call i32 @host_integerp(%union.tree_node* %10, i32 1) #6, !dbg !9603
  %tobool45 = icmp eq i32 %call44, 0, !dbg !9603
  br i1 %tobool45, label %cleanup, label %if.then46, !dbg !9604

if.then46:                                        ; preds = %land.lhs.true
  %11 = load %union.tree_node*, %union.tree_node** %operands37, align 8, !dbg !9605
  %call50 = tail call i64 @highest_pow2_factor(%union.tree_node* %11) #8, !dbg !9607
  call void @llvm.dbg.value(metadata i64 %call50, metadata !9569, metadata !DIExpression()), !dbg !9573
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !9608
  %call54 = tail call i64 @tree_low_cst(%union.tree_node* %12, i32 1) #6, !dbg !9609
  call void @llvm.dbg.value(metadata i64 %call54, metadata !9570, metadata !DIExpression()), !dbg !9573
  %div = udiv i64 %call50, %call54, !dbg !9610
  %cmp55 = icmp ugt i64 %call54, %call50, !dbg !9610
  %cond61 = select i1 %cmp55, i64 1, i64 %div, !dbg !9610
  ret i64 %cond61, !dbg !9592

sw.bb62:                                          ; preds = %tailrecurse
  %operands64 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9611
  %arrayidx65 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands64, i64 1, !dbg !9611
  br label %tailrecurse.backedge, !dbg !9571

tailrecurse.backedge:                             ; preds = %sw.bb62, %sw.bb67, %sw.bb72
  %exp.tr.be.in = phi %union.tree_node** [ %arrayidx65, %sw.bb62 ], [ %operands69, %sw.bb67 ], [ %arrayidx75, %sw.bb72 ]
  %exp.tr.be = load %union.tree_node*, %union.tree_node** %exp.tr.be.in, align 8, !dbg !9612
  br label %tailrecurse, !dbg !9573

sw.bb67:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %operands69 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9613
  br label %tailrecurse.backedge, !dbg !9614

sw.bb72:                                          ; preds = %tailrecurse
  %operands74 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9615
  %arrayidx75 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands74, i64 1, !dbg !9615
  br label %tailrecurse.backedge, !dbg !9616

sw.bb77:                                          ; preds = %tailrecurse
  %exp.tr.lcssa26 = phi %union.tree_node* [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa26, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa26, metadata !9568, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa26, metadata !9568, metadata !DIExpression()), !dbg !9573
  %operands79 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9617
  %arrayidx80 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands79, i64 1, !dbg !9617
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx80, align 8, !dbg !9617
  %call81 = tail call i64 @highest_pow2_factor(%union.tree_node* %13) #8, !dbg !9618
  call void @llvm.dbg.value(metadata i64 %call81, metadata !9569, metadata !DIExpression()), !dbg !9573
  %arrayidx84 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands79, i64 2, !dbg !9619
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx84, align 8, !dbg !9619
  %call85 = tail call i64 @highest_pow2_factor(%union.tree_node* %14) #8, !dbg !9620
  call void @llvm.dbg.value(metadata i64 %call85, metadata !9570, metadata !DIExpression()), !dbg !9573
  %cmp86 = icmp ult i64 %call81, %call85, !dbg !9621
  %call81.call85 = select i1 %cmp86, i64 %call81, i64 %call85, !dbg !9621
  ret i64 %call81.call85, !dbg !9592

cleanup.loopexit:                                 ; preds = %tailrecurse
  br label %cleanup, !dbg !9592

cleanup:                                          ; preds = %cleanup.loopexit, %if.else, %land.lhs.true, %sw.bb35, %cond.false, %if.then
  %retval.0 = phi i64 [ %cond, %if.then ], [ %cond11, %cond.false ], [ %and6, %if.else ], [ 1, %sw.bb35 ], [ 1, %land.lhs.true ], [ 1, %cleanup.loopexit ], !dbg !9573
  ret i64 %retval.0, !dbg !9592
}

declare dso_local void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @force_operand(%struct.rtx_def* %value, %struct.rtx_def* %target) local_unnamed_addr #4 !dbg !9622 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value, metadata !9624, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !9625, metadata !DIExpression()), !dbg !9635
  %call = tail call fastcc %struct.rtx_def* @get_subtarget(%struct.rtx_def* %target) #8, !dbg !9636
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !9628, metadata !DIExpression()), !dbg !9635
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value, i64 0, i32 0, !dbg !9637
  %bf.load = load i32, i32* %0, align 8, !dbg !9637
  %bf.clear = and i32 %bf.load, 65535, !dbg !9637
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !9629, metadata !DIExpression()), !dbg !9635
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !9638
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9640

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9641
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !9641
  %2 = load i32*, i32** %1, align 8, !dbg !9641
  %bf.load1 = load i32, i32* %2, align 8, !dbg !9641
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !9641
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !9641
  br i1 %cmp3, label %if.end, label %land.lhs.true4, !dbg !9642

land.lhs.true4:                                   ; preds = %land.lhs.true
  %cmp11 = icmp eq i32 %bf.clear2, 43, !dbg !9643
  br i1 %cmp11, label %if.end, label %if.then, !dbg !9644

if.then:                                          ; preds = %land.lhs.true4
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !9645
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !9645
  %bf.lshr19 = lshr i32 %bf.load1, 16, !dbg !9647
  %bf.clear20 = and i32 %bf.lshr19, 255, !dbg !9647
  %.cast1 = bitcast i32* %2 to %struct.rtx_def*, !dbg !9648
  %call25 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %.cast1, %struct.rtx_def* null) #8, !dbg !9649
  %call26 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear20, %struct.rtx_def* %call25) #6, !dbg !9650
  %3 = load i32*, i32** %1, align 8, !dbg !9651
  %bf.load31 = load i32, i32* %3, align 8, !dbg !9651
  %bf.lshr32 = lshr i32 %bf.load31, 16, !dbg !9651
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !9651
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9652
  %rt_uint = bitcast %union.rtunion_def* %4 to i32*, !dbg !9652
  %5 = load i32, i32* %rt_uint, align 8, !dbg !9652
  %call37 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear13, %struct.rtx_def* %call26, i32 %bf.clear33, i32 %5) #6, !dbg !9653
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !9624, metadata !DIExpression()), !dbg !9635
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call37, i64 0, i32 0, !dbg !9654
  %bf.load38 = load i32, i32* %6, align 8, !dbg !9654
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !9654
  call void @llvm.dbg.value(metadata i32 %bf.clear39, metadata !9629, metadata !DIExpression()), !dbg !9635
  br label %if.end, !dbg !9655

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %bf.load74 = phi i32 [ %bf.load, %land.lhs.true ], [ %bf.load, %land.lhs.true4 ], [ %bf.load38, %if.then ], [ %bf.load, %entry ]
  %code.0 = phi i32 [ 39, %land.lhs.true ], [ 39, %land.lhs.true4 ], [ %bf.clear39, %if.then ], [ %bf.clear, %entry ], !dbg !9635
  %value.addr.0 = phi %struct.rtx_def* [ %value, %land.lhs.true ], [ %value, %land.lhs.true4 ], [ %call37, %if.then ], [ %value, %entry ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.addr.0, metadata !9624, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !9629, metadata !DIExpression()), !dbg !9635
  %code.0.off = add nsw i32 %code.0, -49, !dbg !9656
  %switch = icmp ult i32 %code.0.off, 2, !dbg !9656
  br i1 %switch, label %land.lhs.true42, label %if.end80, !dbg !9656

land.lhs.true42:                                  ; preds = %if.end
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9658
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !9658
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !9658
  %8 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !9659
  %cmp47 = icmp eq %struct.rtx_def* %7, %8, !dbg !9660
  br i1 %cmp47, label %land.lhs.true48, label %if.end80, !dbg !9661

land.lhs.true48:                                  ; preds = %land.lhs.true42
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9662
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !9662
  %11 = load i32*, i32** %10, align 8, !dbg !9662
  %bf.load53 = load i32, i32* %11, align 8, !dbg !9662
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !9662
  %cmp55 = icmp eq i32 %bf.clear54, 45, !dbg !9663
  br i1 %cmp55, label %if.then72, label %lor.lhs.false56, !dbg !9664

lor.lhs.false56:                                  ; preds = %land.lhs.true48
  %cmp63 = icmp eq i32 %bf.clear54, 44, !dbg !9665
  br i1 %cmp63, label %if.then72, label %lor.lhs.false64, !dbg !9666

lor.lhs.false64:                                  ; preds = %lor.lhs.false56
  %cmp71 = icmp eq i32 %bf.clear54, 35, !dbg !9667
  br i1 %cmp71, label %if.then72, label %if.end80, !dbg !9668

if.then72:                                        ; preds = %lor.lhs.false64, %lor.lhs.false56, %land.lhs.true48
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !9669
  br i1 %tobool, label %if.then73, label %if.end78, !dbg !9672

if.then73:                                        ; preds = %if.then72
  %bf.lshr75 = lshr i32 %bf.load74, 16, !dbg !9673
  %bf.clear76 = and i32 %bf.lshr75, 255, !dbg !9673
  %call77 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear76) #6, !dbg !9674
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call77, metadata !9628, metadata !DIExpression()), !dbg !9635
  br label %if.end78, !dbg !9675

if.end78:                                         ; preds = %if.then72, %if.then73
  %subtarget.0 = phi %struct.rtx_def* [ %call, %if.then72 ], [ %call77, %if.then73 ], !dbg !9635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subtarget.0, metadata !9628, metadata !DIExpression()), !dbg !9635
  %call79 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %subtarget.0, %struct.rtx_def* %value.addr.0) #8, !dbg !9676
  br label %cleanup, !dbg !9677

if.end80:                                         ; preds = %if.end, %lor.lhs.false64, %land.lhs.true42
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 0, !dbg !9678
  %bf.clear82 = and i32 %bf.load74, 65535, !dbg !9678
  %idxprom = zext i32 %bf.clear82 to i64, !dbg !9678
  %arrayidx83 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !9678
  %13 = load i32, i32* %arrayidx83, align 4, !dbg !9678
  %and = and i32 %13, -2, !dbg !9678
  %cmp84 = icmp eq i32 %and, 2, !dbg !9678
  br i1 %cmp84, label %if.then85, label %if.end300, !dbg !9679

if.then85:                                        ; preds = %if.end80
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9680
  %rt_rtx89 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !9680
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !9680
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !9627, metadata !DIExpression()), !dbg !9635
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !9681
  %bf.load90 = load i32, i32* %16, align 8, !dbg !9681
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !9681
  %idxprom92 = zext i32 %bf.clear91 to i64, !dbg !9681
  %arrayidx93 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom92, !dbg !9681
  %17 = load i32, i32* %arrayidx93, align 4, !dbg !9681
  %cmp94 = icmp eq i32 %17, 9, !dbg !9681
  br i1 %cmp94, label %if.end102, label %land.lhs.true95, !dbg !9683

land.lhs.true95:                                  ; preds = %if.then85
  %cmp98 = icmp eq i32 %bf.clear91, 37, !dbg !9684
  %cmp100 = icmp ne %struct.rtx_def* %15, %call, !dbg !9685
  %or.cond = and i1 %cmp98, %cmp100, !dbg !9686
  %spec.select = select i1 %or.cond, %struct.rtx_def* %call, %struct.rtx_def* null, !dbg !9686
  br label %if.end102, !dbg !9686

if.end102:                                        ; preds = %land.lhs.true95, %if.then85
  %subtarget.1 = phi %struct.rtx_def* [ %call, %if.then85 ], [ %spec.select, %land.lhs.true95 ], !dbg !9635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subtarget.1, metadata !9628, metadata !DIExpression()), !dbg !9635
  %cmp103 = icmp eq i32 %code.0, 50, !dbg !9687
  br i1 %cmp103, label %land.lhs.true104, label %if.end113, !dbg !9689

land.lhs.true104:                                 ; preds = %if.end102
  %cmp107 = icmp eq i32 %bf.clear91, 30, !dbg !9690
  br i1 %cmp107, label %if.then108, label %if.end113, !dbg !9691

if.then108:                                       ; preds = %land.lhs.true104
  call void @llvm.dbg.value(metadata i32 49, metadata !9629, metadata !DIExpression()), !dbg !9635
  %bf.lshr110 = lshr i32 %bf.load74, 16, !dbg !9692
  %bf.clear111 = and i32 %bf.lshr110, 255, !dbg !9692
  %call112 = tail call %struct.rtx_def* @negate_rtx(i32 %bf.clear111, %struct.rtx_def* %15) #6, !dbg !9694
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call112, metadata !9627, metadata !DIExpression()), !dbg !9635
  br label %if.end113, !dbg !9695

if.end113:                                        ; preds = %if.then108, %land.lhs.true104, %if.end102
  %code.1 = phi i32 [ 49, %if.then108 ], [ 50, %land.lhs.true104 ], [ %code.0, %if.end102 ], !dbg !9635
  %op2.0 = phi %struct.rtx_def* [ %call112, %if.then108 ], [ %15, %land.lhs.true104 ], [ %15, %if.end102 ], !dbg !9696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op2.0, metadata !9627, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !9629, metadata !DIExpression()), !dbg !9635
  %cmp114 = icmp eq i32 %code.1, 49, !dbg !9697
  br i1 %cmp114, label %land.lhs.true115, label %if.end187, !dbg !9698

land.lhs.true115:                                 ; preds = %if.end113
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op2.0, i64 0, i32 0, !dbg !9699
  %bf.load116 = load i32, i32* %18, align 8, !dbg !9699
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !9699
  %cmp118 = icmp eq i32 %bf.clear117, 30, !dbg !9699
  br i1 %cmp118, label %land.lhs.true119, label %if.end187, !dbg !9700

land.lhs.true119:                                 ; preds = %land.lhs.true115
  %arrayidx122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9701
  %19 = bitcast %union.rtunion_def* %arrayidx122 to i32**, !dbg !9701
  %20 = load i32*, i32** %19, align 8, !dbg !9701
  %bf.load124 = load i32, i32* %20, align 8, !dbg !9701
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !9701
  %cmp126 = icmp eq i32 %bf.clear125, 49, !dbg !9702
  br i1 %cmp126, label %land.lhs.true127, label %if.end187, !dbg !9703

land.lhs.true127:                                 ; preds = %land.lhs.true119
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**, !dbg !9704
  %arrayidx134 = getelementptr inbounds i32, i32* %20, i64 2, !dbg !9704
  %21 = bitcast i32* %arrayidx134 to i32**, !dbg !9704
  %22 = load i32*, i32** %21, align 8, !dbg !9704
  %bf.load136 = load i32, i32* %22, align 8, !dbg !9704
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !9704
  %cmp138 = icmp eq i32 %bf.clear137, 37, !dbg !9704
  br i1 %cmp138, label %land.lhs.true139, label %if.end187, !dbg !9705

land.lhs.true139:                                 ; preds = %land.lhs.true127
  %23 = bitcast i32* %22 to %struct.rtx_def*, !dbg !9705
  %call148 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %23) #8, !dbg !9706
  %cmp149 = icmp ugt i32 %call148, 52, !dbg !9707
  br i1 %cmp149, label %land.lhs.true150, label %if.end187, !dbg !9708

land.lhs.true150:                                 ; preds = %land.lhs.true139
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !9709
  %arrayidx157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9709
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !9709
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !9709
  %call159 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %25) #8, !dbg !9709
  %cmp160 = icmp ult i32 %call159, 58, !dbg !9710
  br i1 %cmp160, label %if.then161, label %if.end187, !dbg !9711

if.then161:                                       ; preds = %land.lhs.true150
  %bf.load162 = load i32, i32* %12, align 8, !dbg !9712
  %bf.lshr163 = lshr i32 %bf.load162, 16, !dbg !9712
  %bf.clear164 = and i32 %bf.lshr163, 255, !dbg !9712
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !9713
  %arrayidx171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9713
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !9713
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !9713
  %call173 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear164, i32 49, %struct.rtx_def* %27, %struct.rtx_def* %op2.0, %struct.rtx_def* %subtarget.1, i32 0, i32 3) #6, !dbg !9714
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call173, metadata !9630, metadata !DIExpression()), !dbg !9715
  %bf.load174 = load i32, i32* %12, align 8, !dbg !9716
  %bf.lshr175 = lshr i32 %bf.load174, 16, !dbg !9716
  %bf.clear176 = and i32 %bf.lshr175, 255, !dbg !9716
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !9717
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9717
  %rt_rtx184 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !9717
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !9717
  %call185 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %30, %struct.rtx_def* null) #8, !dbg !9718
  %call186 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear176, i32 49, %struct.rtx_def* %call173, %struct.rtx_def* %call185, %struct.rtx_def* %target, i32 0, i32 3) #6, !dbg !9719
  ret %struct.rtx_def* %call186, !dbg !9720

if.end187:                                        ; preds = %land.lhs.true150, %land.lhs.true139, %land.lhs.true127, %land.lhs.true119, %land.lhs.true115, %if.end113
  %arrayidx190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9721
  %rt_rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !9721
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx191, align 8, !dbg !9721
  %call192 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %31, %struct.rtx_def* %subtarget.1) #8, !dbg !9722
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call192, metadata !9626, metadata !DIExpression()), !dbg !9635
  %call193 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %op2.0, %struct.rtx_def* null) #8, !dbg !9723
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call193, metadata !9627, metadata !DIExpression()), !dbg !9635
  switch i32 %code.1, label %sw.default [
    i32 52, label %sw.bb
    i32 55, label %sw.bb198
    i32 58, label %sw.bb276
    i32 59, label %sw.bb281
    i32 60, label %sw.bb286
    i32 67, label %sw.bb291
  ], !dbg !9724

sw.bb:                                            ; preds = %if.end187
  %bf.load194 = load i32, i32* %12, align 8, !dbg !9725
  %bf.lshr195 = lshr i32 %bf.load194, 16, !dbg !9725
  %bf.clear196 = and i32 %bf.lshr195, 255, !dbg !9725
  %call197 = tail call %struct.rtx_def* @expand_mult(i32 %bf.clear196, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 1) #6, !dbg !9727
  br label %cleanup, !dbg !9728

sw.bb198:                                         ; preds = %if.end187
  %bf.load199 = load i32, i32* %12, align 8, !dbg !9729
  %bf.lshr200 = lshr i32 %bf.load199, 16, !dbg !9729
  %bf.clear201 = and i32 %bf.lshr200, 255, !dbg !9729
  %idxprom202 = zext i32 %bf.clear201 to i64, !dbg !9729
  %arrayidx203 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom202, !dbg !9729
  %32 = load i8, i8* %arrayidx203, align 1, !dbg !9729
  %cmp204 = icmp eq i8 %32, 2, !dbg !9729
  br i1 %cmp204, label %if.else, label %lor.lhs.false206, !dbg !9729

lor.lhs.false206:                                 ; preds = %sw.bb198
  %cmp213 = icmp eq i8 %32, 3, !dbg !9729
  br i1 %cmp213, label %if.else, label %lor.lhs.false215, !dbg !9729

lor.lhs.false215:                                 ; preds = %lor.lhs.false206
  %cmp222 = icmp eq i8 %32, 10, !dbg !9729
  br i1 %cmp222, label %if.else, label %lor.lhs.false224, !dbg !9729

lor.lhs.false224:                                 ; preds = %lor.lhs.false215
  %cmp231 = icmp eq i8 %32, 12, !dbg !9729
  br i1 %cmp231, label %if.else, label %if.then233, !dbg !9731

if.then233:                                       ; preds = %lor.lhs.false224
  %call237 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear201, i32 55, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 1, i32 3) #6, !dbg !9732
  br label %cleanup, !dbg !9733

if.else:                                          ; preds = %lor.lhs.false224, %lor.lhs.false215, %lor.lhs.false206, %sw.bb198
  %cmp244 = icmp eq i8 %32, 8, !dbg !9734
  br i1 %cmp244, label %lor.end, label %lor.lhs.false246, !dbg !9734

lor.lhs.false246:                                 ; preds = %if.else
  %cmp253 = icmp eq i8 %32, 9, !dbg !9734
  br i1 %cmp253, label %lor.end, label %lor.lhs.false255, !dbg !9734

lor.lhs.false255:                                 ; preds = %lor.lhs.false246
  %cmp262 = icmp eq i8 %32, 11, !dbg !9734
  br i1 %cmp262, label %lor.end, label %lor.rhs, !dbg !9734

lor.rhs:                                          ; preds = %lor.lhs.false255
  %cmp270 = icmp eq i8 %32, 17, !dbg !9734
  %phitmp = select i1 %cmp270, i32 75, i32 67, !dbg !9734
  br label %lor.end, !dbg !9734

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false255, %lor.lhs.false246, %if.else
  %33 = phi i32 [ 75, %lor.lhs.false255 ], [ 75, %lor.lhs.false246 ], [ 75, %if.else ], [ %phitmp, %lor.rhs ]
  %call275 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 %33, i32 %bf.clear201, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 0) #6, !dbg !9735
  br label %cleanup, !dbg !9736

sw.bb276:                                         ; preds = %if.end187
  %bf.load277 = load i32, i32* %12, align 8, !dbg !9737
  %bf.lshr278 = lshr i32 %bf.load277, 16, !dbg !9737
  %bf.clear279 = and i32 %bf.lshr278, 255, !dbg !9737
  %call280 = tail call %struct.rtx_def* @expand_divmod(i32 1, i32 71, i32 %bf.clear279, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 0) #6, !dbg !9738
  br label %cleanup, !dbg !9739

sw.bb281:                                         ; preds = %if.end187
  %bf.load282 = load i32, i32* %12, align 8, !dbg !9740
  %bf.lshr283 = lshr i32 %bf.load282, 16, !dbg !9740
  %bf.clear284 = and i32 %bf.lshr283, 255, !dbg !9740
  %call285 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 67, i32 %bf.clear284, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 1) #6, !dbg !9741
  br label %cleanup, !dbg !9742

sw.bb286:                                         ; preds = %if.end187
  %bf.load287 = load i32, i32* %12, align 8, !dbg !9743
  %bf.lshr288 = lshr i32 %bf.load287, 16, !dbg !9743
  %bf.clear289 = and i32 %bf.lshr288, 255, !dbg !9743
  %call290 = tail call %struct.rtx_def* @expand_divmod(i32 1, i32 71, i32 %bf.clear289, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 1) #6, !dbg !9744
  br label %cleanup, !dbg !9745

sw.bb291:                                         ; preds = %if.end187
  %bf.load292 = load i32, i32* %12, align 8, !dbg !9746
  %bf.lshr293 = lshr i32 %bf.load292, 16, !dbg !9746
  %bf.clear294 = and i32 %bf.lshr293, 255, !dbg !9746
  %call295 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear294, i32 67, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 0, i32 3) #6, !dbg !9747
  br label %cleanup, !dbg !9748

sw.default:                                       ; preds = %if.end187
  %bf.load296 = load i32, i32* %12, align 8, !dbg !9749
  %bf.lshr297 = lshr i32 %bf.load296, 16, !dbg !9749
  %bf.clear298 = and i32 %bf.lshr297, 255, !dbg !9749
  %call299 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear298, i32 %code.1, %struct.rtx_def* %call192, %struct.rtx_def* %call193, %struct.rtx_def* %target, i32 1, i32 3) #6, !dbg !9750
  br label %cleanup, !dbg !9751

if.end300:                                        ; preds = %if.end80
  %cmp305 = icmp eq i32 %13, 4, !dbg !9752
  br i1 %cmp305, label %if.then307, label %if.end334, !dbg !9754

if.then307:                                       ; preds = %if.end300
  %tobool308 = icmp eq %struct.rtx_def* %target, null, !dbg !9755
  br i1 %tobool308, label %if.then309, label %if.end314, !dbg !9758

if.then309:                                       ; preds = %if.then307
  %bf.lshr311 = lshr i32 %bf.load74, 16, !dbg !9759
  %bf.clear312 = and i32 %bf.lshr311, 255, !dbg !9759
  %call313 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear312) #6, !dbg !9760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call313, metadata !9625, metadata !DIExpression()), !dbg !9635
  br label %if.end314, !dbg !9761

if.end314:                                        ; preds = %if.then307, %if.then309
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.then307 ], [ %call313, %if.then309 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !9625, metadata !DIExpression()), !dbg !9635
  %arrayidx317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9762
  %rt_rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**, !dbg !9762
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx318, align 8, !dbg !9762
  %call319 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %34, %struct.rtx_def* null) #8, !dbg !9763
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call319, metadata !9626, metadata !DIExpression()), !dbg !9635
  %trunc = trunc i32 %code.0 to i16, !dbg !9764
  switch i16 %trunc, label %sw.default329 [
    i16 99, label %sw.bb320
    i16 98, label %sw.bb320
    i16 100, label %sw.bb320
    i16 101, label %sw.bb320
    i16 102, label %sw.bb320
    i16 104, label %sw.bb323
    i16 106, label %sw.bb323
    i16 103, label %sw.bb326
    i16 105, label %sw.bb326
  ], !dbg !9764

sw.bb320:                                         ; preds = %if.end314, %if.end314, %if.end314, %if.end314, %if.end314
  %cmp321 = icmp eq i32 %code.0, 99, !dbg !9765
  %conv322 = zext i1 %cmp321 to i32, !dbg !9765
  tail call void @convert_move(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call319, i32 %conv322) #8, !dbg !9767
  br label %cleanup, !dbg !9768

sw.bb323:                                         ; preds = %if.end314, %if.end314
  %cmp324 = icmp eq i32 %code.0, 106, !dbg !9769
  %conv325 = zext i1 %cmp324 to i32, !dbg !9769
  tail call void @expand_fix(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call319, i32 %conv325) #6, !dbg !9770
  br label %cleanup, !dbg !9771

sw.bb326:                                         ; preds = %if.end314, %if.end314
  %cmp327 = icmp eq i32 %code.0, 105, !dbg !9772
  %conv328 = zext i1 %cmp327 to i32, !dbg !9772
  tail call void @expand_float(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call319, i32 %conv328) #6, !dbg !9773
  br label %cleanup, !dbg !9774

sw.default329:                                    ; preds = %if.end314
  %bf.load330 = load i32, i32* %12, align 8, !dbg !9775
  %bf.lshr331 = lshr i32 %bf.load330, 16, !dbg !9775
  %bf.clear332 = and i32 %bf.lshr331, 255, !dbg !9775
  %call333 = tail call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear332, i32 %code.0, %struct.rtx_def* %call319, %struct.rtx_def* %target.addr.0, i32 0) #6, !dbg !9776
  br label %cleanup, !dbg !9777

if.end334:                                        ; preds = %if.end300
  %cmp337 = icmp eq i32 %bf.clear82, 39, !dbg !9778
  br i1 %cmp337, label %land.lhs.true339, label %cleanup, !dbg !9780

land.lhs.true339:                                 ; preds = %if.end334
  %arrayidx342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9781
  %35 = bitcast %union.rtunion_def* %arrayidx342 to i32**, !dbg !9781
  %36 = load i32*, i32** %35, align 8, !dbg !9781
  %bf.load344 = load i32, i32* %36, align 8, !dbg !9781
  %bf.clear345 = and i32 %bf.load344, 65535, !dbg !9781
  %cmp346 = icmp eq i32 %bf.clear345, 43, !dbg !9781
  br i1 %cmp346, label %land.lhs.true348, label %cleanup, !dbg !9782

land.lhs.true348:                                 ; preds = %land.lhs.true339
  %bf.lshr350 = lshr i32 %bf.load74, 16, !dbg !9783
  %bf.clear351 = and i32 %bf.lshr350, 255, !dbg !9783
  %idxprom352 = zext i32 %bf.clear351 to i64, !dbg !9783
  %arrayidx353 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom352, !dbg !9783
  %37 = load i8, i8* %arrayidx353, align 1, !dbg !9783
  %bf.lshr361 = lshr i32 %bf.load344, 16, !dbg !9784
  %bf.clear362 = and i32 %bf.lshr361, 255, !dbg !9784
  %idxprom363 = zext i32 %bf.clear362 to i64, !dbg !9784
  %arrayidx364 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom363, !dbg !9784
  %38 = load i8, i8* %arrayidx364, align 1, !dbg !9784
  %cmp367 = icmp ugt i8 %37, %38, !dbg !9785
  br i1 %cmp367, label %if.then369, label %cleanup, !dbg !9786

if.then369:                                       ; preds = %land.lhs.true348
  %.cast = bitcast i32* %36 to %struct.rtx_def*, !dbg !9787
  %call384 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %.cast, %struct.rtx_def* null) #8, !dbg !9788
  %call385 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear362, %struct.rtx_def* %call384) #6, !dbg !9789
  %39 = load i32*, i32** %35, align 8, !dbg !9790
  %bf.load390 = load i32, i32* %39, align 8, !dbg !9790
  %bf.lshr391 = lshr i32 %bf.load390, 16, !dbg !9790
  %bf.clear392 = and i32 %bf.lshr391, 255, !dbg !9790
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9791
  %rt_uint396 = bitcast %union.rtunion_def* %40 to i32*, !dbg !9791
  %41 = load i32, i32* %rt_uint396, align 8, !dbg !9791
  %call397 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear351, %struct.rtx_def* %call385, i32 %bf.clear392, i32 %41) #6, !dbg !9792
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call397, metadata !9624, metadata !DIExpression()), !dbg !9635
  ret %struct.rtx_def* %call397, !dbg !9720

cleanup:                                          ; preds = %if.end334, %land.lhs.true339, %land.lhs.true348, %sw.default329, %sw.bb326, %sw.bb323, %sw.bb320, %sw.default, %sw.bb291, %sw.bb286, %sw.bb281, %sw.bb276, %lor.end, %if.then233, %sw.bb, %if.end78
  %retval.0 = phi %struct.rtx_def* [ %subtarget.0, %if.end78 ], [ %call299, %sw.default ], [ %call295, %sw.bb291 ], [ %call290, %sw.bb286 ], [ %call285, %sw.bb281 ], [ %call280, %sw.bb276 ], [ %call275, %lor.end ], [ %call237, %if.then233 ], [ %call197, %sw.bb ], [ %call333, %sw.default329 ], [ %target.addr.0, %sw.bb326 ], [ %target.addr.0, %sw.bb323 ], [ %target.addr.0, %sw.bb320 ], [ %value.addr.0, %land.lhs.true348 ], [ %value.addr.0, %land.lhs.true339 ], [ %value.addr.0, %if.end334 ], !dbg !9635
  ret %struct.rtx_def* %retval.0, !dbg !9720
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @categorize_ctor_elements(%union.tree_node* %ctor, i64* %p_nz_elts, i64* %p_elt_count, i8* %p_must_clear) local_unnamed_addr #4 !dbg !9793 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor, metadata !9797, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i64* %p_nz_elts, metadata !9798, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i64* %p_elt_count, metadata !9799, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8* %p_must_clear, metadata !9800, metadata !DIExpression()), !dbg !9801
  store i64 0, i64* %p_nz_elts, align 8, !dbg !9802
  store i64 0, i64* %p_elt_count, align 8, !dbg !9803
  store i8 0, i8* %p_must_clear, align 1, !dbg !9804
  %call = tail call fastcc zeroext i8 @categorize_ctor_elements_1(%union.tree_node* %ctor, i64* %p_nz_elts, i64* %p_elt_count, i8* %p_must_clear) #8, !dbg !9805
  ret i8 %call, !dbg !9806
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @categorize_ctor_elements_1(%union.tree_node* %ctor, i64* %p_nz_elts, i64* %p_elt_count, i8* %p_must_clear) unnamed_addr #4 !dbg !9807 {
entry:
  %nz = alloca i64, align 8
  %ic = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor, metadata !9809, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64* %p_nz_elts, metadata !9810, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64* %p_elt_count, metadata !9811, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i8* %p_must_clear, metadata !9812, metadata !DIExpression()), !dbg !9839
  %call = tail call zeroext i8 @constructor_static_from_elts_p(%union.tree_node* %ctor) #6, !dbg !9840
  call void @llvm.dbg.value(metadata i8 %call, metadata !9818, metadata !DIExpression()), !dbg !9839
  %tobool = icmp eq i8 %call, 0, !dbg !9841
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !9841

cond.false:                                       ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9842
  %bf.load = load i64, i64* %0, align 8, !dbg !9842
  %bf.lshr = lshr i64 %bf.load, 26, !dbg !9842
  %1 = trunc i64 %bf.lshr to i8, !dbg !9842
  %bf.cast = and i8 %1, 1, !dbg !9842
  br label %cond.end, !dbg !9841

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i8 [ %bf.cast, %cond.false ], [ 1, %entry ]
  call void @llvm.dbg.value(metadata i8 %cond, metadata !9819, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 0, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 0, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 0, metadata !9813, metadata !DIExpression()), !dbg !9839
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9843
  %2 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !9843
  %3 = bitcast i64* %nz to i8*, !dbg !9844
  %4 = bitcast i64* %ic to i8*, !dbg !9844
  %tobool69 = icmp ne i8 %call, 0, !dbg !9845
  br label %for.cond, !dbg !9847

for.cond:                                         ; preds = %for.inc129, %cond.end
  %5 = phi %struct.tree_exp* [ undef, %cond.end ], [ %14, %for.inc129 ]
  %purpose.0 = phi %union.tree_node* [ undef, %cond.end ], [ %purpose.1, %for.inc129 ]
  %6 = phi %struct.tree_vector* [ undef, %cond.end ], [ %15, %for.inc129 ]
  %value.0 = phi %union.tree_node* [ undef, %cond.end ], [ %value.1, %for.inc129 ]
  %elt_count.0 = phi i64 [ 0, %cond.end ], [ %elt_count.2, %for.inc129 ], !dbg !9839
  %nz_elts.0 = phi i64 [ 0, %cond.end ], [ %nz_elts.6, %for.inc129 ], !dbg !9839
  %idx.0 = phi i64 [ 0, %cond.end ], [ %inc, %for.inc129 ], !dbg !9848
  %const_p.0 = phi i8 [ %cond, %cond.end ], [ %const_p.3, %for.inc129 ], !dbg !9839
  call void @llvm.dbg.value(metadata i8 %const_p.0, metadata !9819, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !9813, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.0, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.0, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !9816, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.0, metadata !9817, metadata !DIExpression()), !dbg !9839
  %7 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !9849
  %tobool2 = icmp eq %struct.VEC_constructor_elt_gc* %7, null, !dbg !9849
  br i1 %tobool2, label %cond.end8, label %cond.true3, !dbg !9849

cond.true3:                                       ; preds = %for.cond
  %base6 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %7, i64 0, i32 0, !dbg !9849
  br label %cond.end8, !dbg !9849

cond.end8:                                        ; preds = %for.cond, %cond.true3
  %cond9 = phi %struct.VEC_constructor_elt_base* [ %base6, %cond.true3 ], [ null, %for.cond ], !dbg !9849
  %call10 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond9) #8, !dbg !9849
  %conv11 = zext i32 %call10 to i64, !dbg !9849
  %cmp = icmp ult i64 %idx.0, %conv11, !dbg !9849
  br i1 %cmp, label %cond.false14, label %cond.end40, !dbg !9849

cond.false14:                                     ; preds = %cond.end8
  %8 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !9849
  %tobool17 = icmp eq %struct.VEC_constructor_elt_gc* %8, null, !dbg !9849
  br i1 %tobool17, label %cond.end23, label %cond.true18, !dbg !9849

cond.true18:                                      ; preds = %cond.false14
  %base21 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %8, i64 0, i32 0, !dbg !9849
  br label %cond.end23, !dbg !9849

cond.end23:                                       ; preds = %cond.false14, %cond.true18
  %cond24 = phi %struct.VEC_constructor_elt_base* [ %base21, %cond.true18 ], [ null, %cond.false14 ], !dbg !9849
  %conv25 = trunc i64 %idx.0 to i32, !dbg !9849
  %call26 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond24, i32 %conv25) #8, !dbg !9849
  %value27 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call26, i64 0, i32 1, !dbg !9849
  %9 = load %union.tree_node*, %union.tree_node** %value27, align 8, !dbg !9849
  %10 = bitcast %union.tree_node* %9 to %struct.tree_vector*, !dbg !9839
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !9816, metadata !DIExpression()), !dbg !9839
  %11 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !9849
  %tobool30 = icmp eq %struct.VEC_constructor_elt_gc* %11, null, !dbg !9849
  br i1 %tobool30, label %cond.end36, label %cond.true31, !dbg !9849

cond.true31:                                      ; preds = %cond.end23
  %base34 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !9849
  br label %cond.end36, !dbg !9849

cond.end36:                                       ; preds = %cond.end23, %cond.true31
  %cond37 = phi %struct.VEC_constructor_elt_base* [ %base34, %cond.true31 ], [ null, %cond.end23 ], !dbg !9849
  %call39 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond37, i32 %conv25) #8, !dbg !9849
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call39, i64 0, i32 0, !dbg !9849
  %12 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !9849
  %13 = bitcast %union.tree_node* %12 to %struct.tree_exp*, !dbg !9839
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !9817, metadata !DIExpression()), !dbg !9839
  br label %cond.end40, !dbg !9849

cond.end40:                                       ; preds = %cond.end8, %cond.end36
  %14 = phi %struct.tree_exp* [ %13, %cond.end36 ], [ %5, %cond.end8 ]
  %purpose.1 = phi %union.tree_node* [ %12, %cond.end36 ], [ %purpose.0, %cond.end8 ]
  %15 = phi %struct.tree_vector* [ %10, %cond.end36 ], [ %6, %cond.end8 ]
  %value.1 = phi %union.tree_node* [ %9, %cond.end36 ], [ %value.0, %cond.end8 ]
  %cond41 = phi i1 [ true, %cond.end36 ], [ false, %cond.end8 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !9816, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.1, metadata !9817, metadata !DIExpression()), !dbg !9839
  br i1 %cond41, label %for.body, label %for.end130, !dbg !9847

for.body:                                         ; preds = %cond.end40
  call void @llvm.dbg.value(metadata i64 1, metadata !9820, metadata !DIExpression()), !dbg !9850
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %purpose.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9851
  %bf.load44 = load i64, i64* %16, align 8, !dbg !9851
  %bf.cast467 = and i64 %bf.load44, 65535, !dbg !9852
  %cmp47 = icmp eq i64 %bf.cast467, 111, !dbg !9852
  br i1 %cmp47, label %if.then, label %if.end59, !dbg !9853

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %14, i64 0, i32 3, i64 0, !dbg !9854
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9854
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !9824, metadata !DIExpression()), !dbg !9855
  %arrayidx51 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %14, i64 0, i32 3, i64 1, !dbg !9856
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx51, align 8, !dbg !9856
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !9827, metadata !DIExpression()), !dbg !9855
  %call52 = call i32 @host_integerp(%union.tree_node* %17, i32 1) #6, !dbg !9857
  %tobool53 = icmp eq i32 %call52, 0, !dbg !9857
  br i1 %tobool53, label %if.end59, label %land.lhs.true, !dbg !9859

land.lhs.true:                                    ; preds = %if.then
  %call54 = call i32 @host_integerp(%union.tree_node* %18, i32 1) #6, !dbg !9860
  %tobool55 = icmp eq i32 %call54, 0, !dbg !9860
  br i1 %tobool55, label %if.end59, label %if.then56, !dbg !9861

if.then56:                                        ; preds = %land.lhs.true
  %call57 = call i64 @tree_low_cst(%union.tree_node* %18, i32 1) #6, !dbg !9862
  %call58 = call i64 @tree_low_cst(%union.tree_node* %17, i32 1) #6, !dbg !9863
  %sub = sub nsw i64 %call57, %call58, !dbg !9864
  %add = add nsw i64 %sub, 1, !dbg !9865
  call void @llvm.dbg.value(metadata i64 %add, metadata !9820, metadata !DIExpression()), !dbg !9850
  br label %if.end59, !dbg !9866

if.end59:                                         ; preds = %land.lhs.true, %if.then, %if.then56, %for.body
  %mult.1 = phi i64 [ 1, %for.body ], [ %add, %if.then56 ], [ 1, %land.lhs.true ], [ 1, %if.then ], !dbg !9850
  call void @llvm.dbg.value(metadata i64 %mult.1, metadata !9820, metadata !DIExpression()), !dbg !9850
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9867
  %bf.load61 = load i64, i64* %19, align 8, !dbg !9867
  %20 = trunc i64 %bf.load61 to i16, !dbg !9867
  switch i16 %20, label %sw.default [
    i16 51, label %sw.bb
    i16 23, label %sw.bb75
    i16 24, label %sw.bb75
    i16 25, label %sw.bb75
    i16 28, label %sw.bb82
    i16 26, label %sw.bb91
    i16 27, label %sw.bb104
  ], !dbg !9868

sw.bb:                                            ; preds = %if.end59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !9869
  call void @llvm.dbg.value(metadata i64 0, metadata !9828, metadata !DIExpression()), !dbg !9844
  store i64 0, i64* %nz, align 8, !dbg !9870
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !9869
  call void @llvm.dbg.value(metadata i64 0, metadata !9831, metadata !DIExpression()), !dbg !9844
  store i64 0, i64* %ic, align 8, !dbg !9871
  call void @llvm.dbg.value(metadata i64* %nz, metadata !9828, metadata !DIExpression(DW_OP_deref)), !dbg !9844
  call void @llvm.dbg.value(metadata i64* %ic, metadata !9831, metadata !DIExpression(DW_OP_deref)), !dbg !9844
  %call64 = call fastcc zeroext i8 @categorize_ctor_elements_1(%union.tree_node* %value.1, i64* nonnull %nz, i64* nonnull %ic, i8* %p_must_clear) #8, !dbg !9872
  call void @llvm.dbg.value(metadata i8 %call64, metadata !9832, metadata !DIExpression()), !dbg !9844
  %21 = load i64, i64* %nz, align 8, !dbg !9873
  call void @llvm.dbg.value(metadata i64 %21, metadata !9828, metadata !DIExpression()), !dbg !9844
  %mul = mul nsw i64 %mult.1, %21, !dbg !9874
  %add65 = add nsw i64 %nz_elts.0, %mul, !dbg !9875
  call void @llvm.dbg.value(metadata i64 %add65, metadata !9814, metadata !DIExpression()), !dbg !9839
  %22 = load i64, i64* %ic, align 8, !dbg !9876
  call void @llvm.dbg.value(metadata i64 %22, metadata !9831, metadata !DIExpression()), !dbg !9844
  %mul66 = mul nsw i64 %mult.1, %22, !dbg !9877
  %add67 = add nsw i64 %elt_count.0, %mul66, !dbg !9878
  call void @llvm.dbg.value(metadata i64 %add67, metadata !9815, metadata !DIExpression()), !dbg !9839
  %tobool72 = icmp ne i8 %const_p.0, 0, !dbg !9879
  %or.cond = and i1 %tobool69, %tobool72, !dbg !9880
  %const_p.1 = select i1 %or.cond, i8 %call64, i8 %const_p.0, !dbg !9880
  call void @llvm.dbg.value(metadata i8 %const_p.1, metadata !9819, metadata !DIExpression()), !dbg !9839
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !9881
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !9881
  br label %for.inc129, !dbg !9882

sw.bb75:                                          ; preds = %if.end59, %if.end59, %if.end59
  %call76 = call zeroext i8 @initializer_zerop(%union.tree_node* %value.1) #6, !dbg !9883
  %tobool77 = icmp eq i8 %call76, 0, !dbg !9883
  %add79 = select i1 %tobool77, i64 %mult.1, i64 0, !dbg !9885
  %spec.select = add nsw i64 %nz_elts.0, %add79, !dbg !9885
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !9814, metadata !DIExpression()), !dbg !9839
  %add81 = add nsw i64 %elt_count.0, %mult.1, !dbg !9886
  call void @llvm.dbg.value(metadata i64 %add81, metadata !9815, metadata !DIExpression()), !dbg !9839
  br label %for.inc129, !dbg !9887

sw.bb82:                                          ; preds = %if.end59
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9888
  %24 = load i32, i32* %23, align 8, !dbg !9888
  %conv83 = sext i32 %24 to i64, !dbg !9888
  %mul84 = mul nsw i64 %mult.1, %conv83, !dbg !9889
  %add85 = add nsw i64 %nz_elts.0, %mul84, !dbg !9890
  call void @llvm.dbg.value(metadata i64 %add85, metadata !9814, metadata !DIExpression()), !dbg !9839
  %add90 = add nsw i64 %elt_count.0, %mul84, !dbg !9891
  call void @llvm.dbg.value(metadata i64 %add90, metadata !9815, metadata !DIExpression()), !dbg !9839
  br label %for.inc129, !dbg !9892

sw.bb91:                                          ; preds = %if.end59
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %value.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9893
  %25 = bitcast i32* %real to %union.tree_node**, !dbg !9893
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8, !dbg !9893
  %call92 = call zeroext i8 @initializer_zerop(%union.tree_node* %26) #6, !dbg !9895
  %tobool93 = icmp eq i8 %call92, 0, !dbg !9895
  %add95 = select i1 %tobool93, i64 %mult.1, i64 0, !dbg !9896
  %spec.select1 = add nsw i64 %nz_elts.0, %add95, !dbg !9896
  call void @llvm.dbg.value(metadata i64 %spec.select1, metadata !9814, metadata !DIExpression()), !dbg !9839
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9897
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !9897
  %call98 = call zeroext i8 @initializer_zerop(%union.tree_node* %28) #6, !dbg !9899
  %tobool99 = icmp eq i8 %call98, 0, !dbg !9899
  %add101 = select i1 %tobool99, i64 %mult.1, i64 0, !dbg !9900
  %nz_elts.3 = add nsw i64 %spec.select1, %add101, !dbg !9900
  call void @llvm.dbg.value(metadata i64 %nz_elts.3, metadata !9814, metadata !DIExpression()), !dbg !9839
  %add103 = add nsw i64 %elt_count.0, %mult.1, !dbg !9901
  call void @llvm.dbg.value(metadata i64 %add103, metadata !9815, metadata !DIExpression()), !dbg !9839
  br label %for.inc129, !dbg !9902

sw.bb104:                                         ; preds = %if.end59
  %elements = getelementptr inbounds %struct.tree_vector, %struct.tree_vector* %15, i64 0, i32 1, !dbg !9903
  br label %for.cond105, !dbg !9905

for.cond105:                                      ; preds = %for.body107, %sw.bb104
  %elt_count.1 = phi i64 [ %elt_count.0, %sw.bb104 ], [ %add114, %for.body107 ], !dbg !9839
  %nz_elts.4 = phi i64 [ %nz_elts.0, %sw.bb104 ], [ %spec.select2, %for.body107 ], !dbg !9906
  %v.0.in = phi %union.tree_node** [ %elements, %sw.bb104 ], [ %chain, %for.body107 ]
  %v.0 = load %union.tree_node*, %union.tree_node** %v.0.in, align 8, !dbg !9907
  call void @llvm.dbg.value(metadata %union.tree_node* %v.0, metadata !9833, metadata !DIExpression()), !dbg !9908
  call void @llvm.dbg.value(metadata i64 %nz_elts.4, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.1, metadata !9815, metadata !DIExpression()), !dbg !9839
  %tobool106 = icmp eq %union.tree_node* %v.0, null, !dbg !9909
  br i1 %tobool106, label %for.inc129.loopexit, label %for.body107, !dbg !9909

for.body107:                                      ; preds = %for.cond105
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %v.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9910
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8, !dbg !9910
  %call109 = call zeroext i8 @initializer_zerop(%union.tree_node* %30) #6, !dbg !9914
  %tobool110 = icmp eq i8 %call109, 0, !dbg !9914
  %add112 = select i1 %tobool110, i64 %mult.1, i64 0, !dbg !9915
  %spec.select2 = add nsw i64 %nz_elts.4, %add112, !dbg !9915
  call void @llvm.dbg.value(metadata i64 %spec.select2, metadata !9814, metadata !DIExpression()), !dbg !9839
  %add114 = add nsw i64 %elt_count.1, %mult.1, !dbg !9916
  call void @llvm.dbg.value(metadata i64 %add114, metadata !9815, metadata !DIExpression()), !dbg !9839
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %v.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9917
  br label %for.cond105, !dbg !9918, !llvm.loop !9919

sw.default:                                       ; preds = %if.end59
  %add115 = add nsw i64 %nz_elts.0, %mult.1, !dbg !9921
  call void @llvm.dbg.value(metadata i64 %add115, metadata !9814, metadata !DIExpression()), !dbg !9839
  %add116 = add nsw i64 %elt_count.0, %mult.1, !dbg !9922
  call void @llvm.dbg.value(metadata i64 %add116, metadata !9815, metadata !DIExpression()), !dbg !9839
  %tobool121 = icmp ne i8 %const_p.0, 0, !dbg !9923
  %or.cond3 = and i1 %tobool69, %tobool121, !dbg !9925
  br i1 %or.cond3, label %if.then122, label %for.inc129, !dbg !9925

if.then122:                                       ; preds = %sw.default
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %value.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9926
  %31 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9926
  %call124 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %value.1, %union.tree_node* %31) #6, !dbg !9927
  %cmp125 = icmp ne %union.tree_node* %call124, null, !dbg !9928
  %conv127 = zext i1 %cmp125 to i8, !dbg !9927
  call void @llvm.dbg.value(metadata i8 %conv127, metadata !9819, metadata !DIExpression()), !dbg !9839
  br label %for.inc129, !dbg !9929

for.inc129.loopexit:                              ; preds = %for.cond105
  %elt_count.1.lcssa = phi i64 [ %elt_count.1, %for.cond105 ], !dbg !9839
  %nz_elts.4.lcssa = phi i64 [ %nz_elts.4, %for.cond105 ], !dbg !9906
  call void @llvm.dbg.value(metadata i64 %elt_count.1.lcssa, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.4.lcssa, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.1.lcssa, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.4.lcssa, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.1.lcssa, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.4.lcssa, metadata !9814, metadata !DIExpression()), !dbg !9839
  br label %for.inc129, !dbg !9849

for.inc129:                                       ; preds = %for.inc129.loopexit, %sw.bb, %sw.bb75, %sw.bb82, %sw.bb91, %if.then122, %sw.default
  %elt_count.2 = phi i64 [ %add103, %sw.bb91 ], [ %add90, %sw.bb82 ], [ %add81, %sw.bb75 ], [ %add67, %sw.bb ], [ %add116, %if.then122 ], [ %add116, %sw.default ], [ %elt_count.1.lcssa, %for.inc129.loopexit ], !dbg !9839
  %nz_elts.6 = phi i64 [ %nz_elts.3, %sw.bb91 ], [ %add85, %sw.bb82 ], [ %spec.select, %sw.bb75 ], [ %add65, %sw.bb ], [ %add115, %if.then122 ], [ %add115, %sw.default ], [ %nz_elts.4.lcssa, %for.inc129.loopexit ], !dbg !9839
  %const_p.3 = phi i8 [ %const_p.0, %sw.bb91 ], [ %const_p.0, %sw.bb82 ], [ %const_p.0, %sw.bb75 ], [ %const_p.1, %sw.bb ], [ %conv127, %if.then122 ], [ %const_p.0, %sw.default ], [ %const_p.0, %for.inc129.loopexit ], !dbg !9839
  call void @llvm.dbg.value(metadata i8 %const_p.3, metadata !9819, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.6, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.2, metadata !9815, metadata !DIExpression()), !dbg !9839
  %inc = add i64 %idx.0, 1, !dbg !9849
  call void @llvm.dbg.value(metadata i64 %inc, metadata !9813, metadata !DIExpression()), !dbg !9839
  br label %for.cond, !dbg !9849, !llvm.loop !9930

for.end130:                                       ; preds = %cond.end40
  %elt_count.0.lcssa = phi i64 [ %elt_count.0, %cond.end40 ], !dbg !9839
  %nz_elts.0.lcssa = phi i64 [ %nz_elts.0, %cond.end40 ], !dbg !9839
  %const_p.0.lcssa = phi i8 [ %const_p.0, %cond.end40 ], !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.0.lcssa, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.0.lcssa, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i8 %const_p.0.lcssa, metadata !9819, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.0.lcssa, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.0.lcssa, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i8 %const_p.0.lcssa, metadata !9819, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %elt_count.0.lcssa, metadata !9815, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i64 %nz_elts.0.lcssa, metadata !9814, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i8 %const_p.0.lcssa, metadata !9819, metadata !DIExpression()), !dbg !9839
  %32 = load i8, i8* %p_must_clear, align 1, !dbg !9932
  %tobool131 = icmp eq i8 %32, 0, !dbg !9932
  br i1 %tobool131, label %land.lhs.true132, label %if.end211, !dbg !9933

land.lhs.true132:                                 ; preds = %for.end130
  %type134 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9934
  %33 = bitcast %union.tree_node** %type134 to i64**, !dbg !9934
  %34 = load i64*, i64** %33, align 8, !dbg !9934
  %bf.load136 = load i64, i64* %34, align 8, !dbg !9934
  %bf.cast1385 = and i64 %bf.load136, 65535, !dbg !9935
  %cmp139 = icmp eq i64 %bf.cast1385, 17, !dbg !9935
  br i1 %cmp139, label %if.then149, label %lor.lhs.false, !dbg !9936

lor.lhs.false:                                    ; preds = %land.lhs.true132
  %cmp147 = icmp eq i64 %bf.cast1385, 18, !dbg !9937
  br i1 %cmp147, label %if.then149, label %if.end211, !dbg !9938

if.then149:                                       ; preds = %lor.lhs.false, %land.lhs.true132
  call void @llvm.dbg.value(metadata i8 1, metadata !9838, metadata !DIExpression()), !dbg !9939
  %35 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !9940
  %tobool152 = icmp eq %struct.VEC_constructor_elt_gc* %35, null, !dbg !9940
  br i1 %tobool152, label %cond.end158, label %cond.true153, !dbg !9940

cond.true153:                                     ; preds = %if.then149
  %base156 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %35, i64 0, i32 0, !dbg !9940
  br label %cond.end158, !dbg !9940

cond.end158:                                      ; preds = %if.then149, %cond.true153
  %cond159 = phi %struct.VEC_constructor_elt_base* [ %base156, %cond.true153 ], [ null, %if.then149 ], !dbg !9940
  %call160 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond159) #8, !dbg !9940
  %cmp161 = icmp eq i32 %call160, 0, !dbg !9940
  br i1 %cmp161, label %if.end210, label %if.then163, !dbg !9942

if.then163:                                       ; preds = %cond.end158
  %36 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !9943
  %tobool166 = icmp eq %struct.VEC_constructor_elt_gc* %36, null, !dbg !9943
  br i1 %tobool166, label %cond.end172, label %cond.true167, !dbg !9943

cond.true167:                                     ; preds = %if.then163
  %base170 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %36, i64 0, i32 0, !dbg !9943
  br label %cond.end172, !dbg !9943

cond.end172:                                      ; preds = %if.then163, %cond.true167
  %cond173 = phi %struct.VEC_constructor_elt_base* [ %base170, %cond.true167 ], [ null, %if.then163 ], !dbg !9943
  %call174 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond173) #8, !dbg !9943
  %cmp175 = icmp eq i32 %call174, 1, !dbg !9943
  br i1 %cmp175, label %cond.end179, label %cond.true177, !dbg !9943

cond.true177:                                     ; preds = %cond.end172
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 4947, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !9943
  br label %cond.end179, !dbg !9943

cond.end179:                                      ; preds = %cond.end172, %cond.true177
  %37 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !9945
  %tobool183 = icmp eq %struct.VEC_constructor_elt_gc* %37, null, !dbg !9945
  br i1 %tobool183, label %cond.end189, label %cond.true184, !dbg !9945

cond.true184:                                     ; preds = %cond.end179
  %base187 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %37, i64 0, i32 0, !dbg !9945
  br label %cond.end189, !dbg !9945

cond.end189:                                      ; preds = %cond.end179, %cond.true184
  %cond190 = phi %struct.VEC_constructor_elt_base* [ %base187, %cond.true184 ], [ null, %cond.end179 ], !dbg !9945
  %call191 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond190, i32 0) #8, !dbg !9945
  %value192 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call191, i64 0, i32 1, !dbg !9945
  %38 = bitcast %union.tree_node** %value192 to %struct.tree_common**, !dbg !9945
  %39 = load %struct.tree_common*, %struct.tree_common** %38, align 8, !dbg !9945
  %type194 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %39, i64 0, i32 2, !dbg !9945
  %40 = load %union.tree_node*, %union.tree_node** %type194, align 8, !dbg !9945
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !9835, metadata !DIExpression()), !dbg !9939
  %41 = bitcast %union.tree_node** %type134 to %struct.tree_type**, !dbg !9946
  %42 = load %struct.tree_type*, %struct.tree_type** %41, align 8, !dbg !9946
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %42, i64 0, i32 2, !dbg !9946
  %43 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !9946
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9948
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !9948
  %call200 = call i32 @simple_cst_equal(%union.tree_node* %43, %union.tree_node* %45) #6, !dbg !9949
  %cmp201 = icmp eq i32 %call200, 1, !dbg !9950
  br i1 %cmp201, label %if.then203, label %if.end210, !dbg !9951

if.then203:                                       ; preds = %cond.end189
  %call204 = call i64 @count_type_elements(%union.tree_node* %40, i8 zeroext 0) #8, !dbg !9952
  %cmp205 = icmp ne i64 %elt_count.0.lcssa, %call204, !dbg !9955
  %spec.select4 = zext i1 %cmp205 to i8, !dbg !9956
  call void @llvm.dbg.value(metadata i8 %spec.select4, metadata !9838, metadata !DIExpression()), !dbg !9939
  br label %if.end210, !dbg !9957

if.end210:                                        ; preds = %cond.end189, %if.then203, %cond.end158
  %clear_this.2 = phi i8 [ 1, %cond.end158 ], [ %spec.select4, %if.then203 ], [ 1, %cond.end189 ], !dbg !9939
  call void @llvm.dbg.value(metadata i8 %clear_this.2, metadata !9838, metadata !DIExpression()), !dbg !9939
  store i8 %clear_this.2, i8* %p_must_clear, align 1, !dbg !9958
  br label %if.end211, !dbg !9959

if.end211:                                        ; preds = %for.end130, %if.end210, %lor.lhs.false
  %46 = load i64, i64* %p_nz_elts, align 8, !dbg !9960
  %add212 = add nsw i64 %46, %nz_elts.0.lcssa, !dbg !9960
  store i64 %add212, i64* %p_nz_elts, align 8, !dbg !9960
  %47 = load i64, i64* %p_elt_count, align 8, !dbg !9961
  %add213 = add nsw i64 %47, %elt_count.0.lcssa, !dbg !9961
  store i64 %add213, i64* %p_elt_count, align 8, !dbg !9961
  ret i8 %const_p.0.lcssa, !dbg !9962
}

; Function Attrs: nounwind uwtable
define dso_local i64 @count_type_elements(%union.tree_node* %type, i8 zeroext %allow_flexarr) local_unnamed_addr #4 !dbg !9963 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9967, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i8 %allow_flexarr, metadata !9968, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i64 9223372036854775807, metadata !9969, metadata !DIExpression()), !dbg !9989
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9990
  %bf.load = load i64, i64* %0, align 8, !dbg !9990
  %1 = trunc i64 %bf.load to i16, !dbg !9990
  switch i16 %1, label %sw.default [
    i16 15, label %sw.bb
    i16 16, label %sw.bb13
    i16 17, label %cleanup88
    i16 18, label %cleanup88
    i16 13, label %sw.bb80
    i16 14, label %sw.bb81
    i16 8, label %sw.bb85
    i16 9, label %sw.bb85
    i16 11, label %sw.bb85
    i16 6, label %sw.bb85
    i16 7, label %sw.bb85
    i16 10, label %sw.bb85
    i16 5, label %sw.bb85
    i16 12, label %sw.bb85
    i16 0, label %sw.bb86
  ], !dbg !9991

sw.bb:                                            ; preds = %entry
  %call = tail call %union.tree_node* @array_type_nelts(%union.tree_node* %type) #6, !dbg !9992
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9971, metadata !DIExpression()), !dbg !9993
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !9994
  br i1 %tobool, label %if.end11, label %land.lhs.true, !dbg !9995

land.lhs.true:                                    ; preds = %sw.bb
  %call1 = tail call i32 @host_integerp(%union.tree_node* nonnull %call, i32 1) #6, !dbg !9996
  %tobool2 = icmp eq i32 %call1, 0, !dbg !9996
  br i1 %tobool2, label %if.end11, label %if.then, !dbg !9997

if.then:                                          ; preds = %land.lhs.true
  %call3 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %call, i32 1) #6, !dbg !9998
  %add = add nsw i64 %call3, 1, !dbg !9999
  call void @llvm.dbg.value(metadata i64 %add, metadata !9974, metadata !DIExpression()), !dbg !10000
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10001
  %2 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !10001
  %call5 = tail call i64 @count_type_elements(%union.tree_node* %2, i8 zeroext 0) #8, !dbg !10002
  call void @llvm.dbg.value(metadata i64 %call5, metadata !9977, metadata !DIExpression()), !dbg !10000
  %cmp = icmp eq i64 %add, 0, !dbg !10003
  br i1 %cmp, label %cleanup, label %if.else, !dbg !10005

if.else:                                          ; preds = %if.then
  %div = sdiv i64 9223372036854775807, %add, !dbg !10006
  %cmp7 = icmp sle i64 %div, %call5, !dbg !10008
  %mul = mul nsw i64 %add, %call5, !dbg !10009
  br label %cleanup, !dbg !10010

cleanup:                                          ; preds = %if.else, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ %cmp7, %if.else ]
  %retval.0 = phi i64 [ 0, %if.then ], [ %mul, %if.else ]
  br i1 %cleanup.dest.slot.0, label %if.end11, label %cleanup88

if.end11:                                         ; preds = %land.lhs.true, %sw.bb, %cleanup
  br label %cleanup88, !dbg !10011

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !9978, metadata !DIExpression()), !dbg !10012
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10013
  %3 = bitcast i32* %values to %union.tree_node**, !dbg !10013
  br label %for.cond, !dbg !10014

for.cond:                                         ; preds = %for.inc, %sw.bb13
  %n14.0 = phi i64 [ 0, %sw.bb13 ], [ %n14.1, %for.inc ], !dbg !10012
  %f.0.in = phi %union.tree_node** [ %3, %sw.bb13 ], [ %chain75, %for.inc ]
  %f.0 = load %union.tree_node*, %union.tree_node** %f.0.in, align 8, !dbg !10015
  call void @llvm.dbg.value(metadata %union.tree_node* %f.0, metadata !9981, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i64 %n14.0, metadata !9978, metadata !DIExpression()), !dbg !10012
  %tobool16 = icmp eq %union.tree_node* %f.0, null, !dbg !10016
  br i1 %tobool16, label %for.end.loopexit, label %for.body, !dbg !10016

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10017
  %bf.load18 = load i64, i64* %4, align 8, !dbg !10017
  %bf.cast203 = and i64 %bf.load18, 65535, !dbg !10018
  %cmp21 = icmp eq i64 %bf.cast203, 31, !dbg !10018
  br i1 %cmp21, label %if.then22, label %for.inc, !dbg !10019

if.then22:                                        ; preds = %for.body
  %type24 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10020
  %5 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !10020
  %call25 = tail call i64 @count_type_elements(%union.tree_node* %5, i8 zeroext 0) #8, !dbg !10021
  call void @llvm.dbg.value(metadata i64 %call25, metadata !9980, metadata !DIExpression()), !dbg !10012
  %cmp26 = icmp slt i64 %call25, 0, !dbg !10022
  br i1 %cmp26, label %if.then27, label %if.end71, !dbg !10023

if.then27:                                        ; preds = %if.then22
  %type24.lcssa = phi %union.tree_node** [ %type24, %if.then22 ], !dbg !10020
  %n14.0.lcssa12 = phi i64 [ %n14.0, %if.then22 ], !dbg !10012
  %f.0.lcssa11 = phi %union.tree_node* [ %f.0, %if.then22 ], !dbg !10015
  call void @llvm.dbg.value(metadata i64 %n14.0.lcssa12, metadata !9978, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i64 %n14.0.lcssa12, metadata !9978, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i64 %n14.0.lcssa12, metadata !9978, metadata !DIExpression()), !dbg !10012
  %6 = load %union.tree_node*, %union.tree_node** %type24.lcssa, align 8, !dbg !10024
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !9982, metadata !DIExpression()), !dbg !10025
  %tobool30 = icmp eq i8 %allow_flexarr, 0, !dbg !10026
  br i1 %tobool30, label %if.end68, label %land.lhs.true31, !dbg !10028

land.lhs.true31:                                  ; preds = %if.then27
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0.lcssa11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10029
  %7 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10029
  %cmp33 = icmp eq %union.tree_node* %7, null, !dbg !10030
  br i1 %cmp33, label %land.lhs.true35, label %if.end68, !dbg !10031

land.lhs.true35:                                  ; preds = %land.lhs.true31
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10032
  %bf.load37 = load i64, i64* %8, align 8, !dbg !10032
  %bf.cast394 = and i64 %bf.load37, 65535, !dbg !10033
  %cmp40 = icmp eq i64 %bf.cast394, 15, !dbg !10033
  br i1 %cmp40, label %land.lhs.true42, label %if.end68, !dbg !10034

land.lhs.true42:                                  ; preds = %land.lhs.true35
  %values44 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10035
  %9 = bitcast i32* %values44 to %union.tree_node**, !dbg !10035
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !10035
  %tobool45 = icmp eq %union.tree_node* %10, null, !dbg !10035
  br i1 %tobool45, label %if.end68, label %land.lhs.true46, !dbg !10036

land.lhs.true46:                                  ; preds = %land.lhs.true42
  %11 = bitcast i32* %values44 to %struct.tree_type**, !dbg !10037
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !10037
  %12 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !10037
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !10037
  %tobool50 = icmp eq %union.tree_node* %13, null, !dbg !10037
  br i1 %tobool50, label %if.end68, label %land.lhs.true51, !dbg !10038

land.lhs.true51:                                  ; preds = %land.lhs.true46
  %call56 = tail call i32 @integer_zerop(%union.tree_node* nonnull %13) #6, !dbg !10039
  %tobool57 = icmp eq i32 %call56, 0, !dbg !10039
  br i1 %tobool57, label %if.end68, label %land.lhs.true58, !dbg !10040

land.lhs.true58:                                  ; preds = %land.lhs.true51
  %14 = load %struct.tree_type*, %struct.tree_type** %11, align 8, !dbg !10041
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %14, i64 0, i32 14, !dbg !10041
  %15 = load %union.tree_node*, %union.tree_node** %maxval, align 8, !dbg !10041
  %tobool62 = icmp eq %union.tree_node* %15, null, !dbg !10041
  br i1 %tobool62, label %land.lhs.true63, label %if.end68, !dbg !10042

land.lhs.true63:                                  ; preds = %land.lhs.true58
  %call64 = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #6, !dbg !10043
  %cmp65 = icmp sgt i64 %call64, -1, !dbg !10044
  br i1 %cmp65, label %cleanup69, label %if.end68, !dbg !10045

if.end68:                                         ; preds = %land.lhs.true58, %land.lhs.true51, %land.lhs.true46, %land.lhs.true42, %if.then27, %land.lhs.true63, %land.lhs.true35, %land.lhs.true31
  br label %cleanup69, !dbg !10046

cleanup69:                                        ; preds = %land.lhs.true63, %if.end68
  %cleanup.dest.slot.1 = phi i1 [ false, %if.end68 ], [ true, %land.lhs.true63 ]
  br i1 %cleanup.dest.slot.1, label %for.end, label %cleanup88

if.end71:                                         ; preds = %if.then22
  %add72 = add nsw i64 %n14.0, %call25, !dbg !10047
  call void @llvm.dbg.value(metadata i64 %add72, metadata !9978, metadata !DIExpression()), !dbg !10012
  br label %for.inc, !dbg !10048

for.inc:                                          ; preds = %for.body, %if.end71
  %n14.1 = phi i64 [ %add72, %if.end71 ], [ %n14.0, %for.body ], !dbg !10012
  call void @llvm.dbg.value(metadata i64 %n14.1, metadata !9978, metadata !DIExpression()), !dbg !10012
  %chain75 = getelementptr inbounds %union.tree_node, %union.tree_node* %f.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10049
  br label %for.cond, !dbg !10050, !llvm.loop !10051

for.end.loopexit:                                 ; preds = %for.cond
  %n14.0.lcssa = phi i64 [ %n14.0, %for.cond ], !dbg !10012
  call void @llvm.dbg.value(metadata i64 %n14.0.lcssa, metadata !9978, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i64 %n14.0.lcssa, metadata !9978, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i64 %n14.0.lcssa, metadata !9978, metadata !DIExpression()), !dbg !10012
  br label %for.end, !dbg !10053

for.end:                                          ; preds = %for.end.loopexit, %cleanup69
  %n14.013 = phi i64 [ %n14.0.lcssa, %for.end.loopexit ], [ %n14.0.lcssa12, %cleanup69 ]
  br label %cleanup88, !dbg !10053

sw.bb80:                                          ; preds = %entry
  br label %cleanup88, !dbg !10054

sw.bb81:                                          ; preds = %entry
  %type82 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !10055
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type82, i64 0, i32 6, !dbg !10055
  %bf.load83 = load i32, i32* %precision, align 4, !dbg !10055
  %bf.clear84 = and i32 %bf.load83, 1023, !dbg !10055
  %sh_prom = zext i32 %bf.clear84 to i64, !dbg !10055
  %shl = shl i64 1, %sh_prom, !dbg !10055
  br label %cleanup88, !dbg !10056

sw.bb85:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %cleanup88, !dbg !10057

sw.bb86:                                          ; preds = %entry
  br label %cleanup88, !dbg !10058

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5085, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10059
  br label %cleanup88, !dbg !10060

cleanup88:                                        ; preds = %entry, %entry, %for.end, %cleanup69, %if.end11, %cleanup, %sw.default, %sw.bb86, %sw.bb85, %sw.bb81, %sw.bb80
  %retval.4 = phi i64 [ 0, %sw.default ], [ 0, %sw.bb86 ], [ 1, %sw.bb85 ], [ %shl, %sw.bb81 ], [ 2, %sw.bb80 ], [ %retval.0, %cleanup ], [ -1, %if.end11 ], [ -1, %cleanup69 ], [ %n14.013, %for.end ], [ -1, %entry ], [ -1, %entry ], !dbg !9989
  ret i64 %retval.4, !dbg !10061
}

declare dso_local %union.tree_node* @array_type_nelts(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @component_ref_field_offset(%union.tree_node* %exp) local_unnamed_addr #4 !dbg !10062 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !10066, metadata !DIExpression()), !dbg !10070
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10071
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !10071
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10071
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10067, metadata !DIExpression()), !dbg !10070
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10072
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !10072
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !10068, metadata !DIExpression()), !dbg !10070
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10073
  %bf.load = load i64, i64* %2, align 8, !dbg !10073
  %bf.cast = and i64 %bf.load, 65535, !dbg !10073
  %arrayidx5 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10073
  %3 = load i32, i32* %arrayidx5, align 4, !dbg !10073
  %cmp = icmp ugt i32 %3, 3, !dbg !10073
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !10073

land.lhs.true:                                    ; preds = %entry
  %cmp12 = icmp ult i32 %3, 11, !dbg !10073
  br i1 %cmp12, label %cond.true, label %cond.end, !dbg !10073

cond.true:                                        ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10073
  %5 = load i32, i32* %4, align 8, !dbg !10073
  br label %cond.end, !dbg !10073

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !10073
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10069, metadata !DIExpression()), !dbg !10070
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !10074
  br i1 %tobool, label %if.else, label %if.then, !dbg !10076

if.then:                                          ; preds = %cond.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10077
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10077
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !10080
  %cmp14 = icmp eq %union.tree_node* %6, %7, !dbg !10081
  br i1 %cmp14, label %if.end, label %if.then15, !dbg !10082

if.then15:                                        ; preds = %if.then
  %call = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %7, %union.tree_node* nonnull %0) #6, !dbg !10083
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10067, metadata !DIExpression()), !dbg !10070
  br label %if.end, !dbg !10084

if.end:                                           ; preds = %if.then, %if.then15
  %aligned_offset.0 = phi %union.tree_node* [ %call, %if.then15 ], [ %0, %if.then ], !dbg !10070
  call void @llvm.dbg.value(metadata %union.tree_node* %aligned_offset.0, metadata !10067, metadata !DIExpression()), !dbg !10070
  %off_align = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10085
  %8 = bitcast i40* %off_align to i64*, !dbg !10085
  %bf.load16 = load i64, i64* %8, align 8, !dbg !10085
  %bf.lshr = lshr i64 %bf.load16, 32, !dbg !10085
  %bf.cast18 = and i64 %bf.lshr, 255, !dbg !10085
  %shl = shl i64 1, %bf.cast18, !dbg !10085
  %div = lshr i64 %shl, 3, !dbg !10085
  %call19 = tail call %union.tree_node* @size_int_kind(i64 %div, i32 0) #6, !dbg !10085
  %call20 = tail call %union.tree_node* @size_binop_loc(i32 %cond, i32 65, %union.tree_node* %aligned_offset.0, %union.tree_node* %call19) #6, !dbg !10086
  br label %cleanup, !dbg !10087

if.else:                                          ; preds = %cond.end
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10088
  %9 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !10088
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !10088
  %cmp21 = icmp eq %union.tree_node* %10, null, !dbg !10088
  br i1 %cmp21, label %cond.true30, label %lor.lhs.false, !dbg !10088

lor.lhs.false:                                    ; preds = %if.else
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10088
  %bf.load25 = load i64, i64* %11, align 8, !dbg !10088
  %bf.cast281 = and i64 %bf.load25, 131072, !dbg !10088
  %tobool29 = icmp eq i64 %bf.cast281, 0, !dbg !10088
  br i1 %tobool29, label %cond.false33, label %cond.true30, !dbg !10088

cond.true30:                                      ; preds = %lor.lhs.false, %if.else
  br label %cleanup, !dbg !10088

cond.false33:                                     ; preds = %lor.lhs.false
  %call36 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %10, %union.tree_node* %exp) #6, !dbg !10088
  br label %cleanup, !dbg !10088

cleanup:                                          ; preds = %cond.true30, %cond.false33, %if.end
  %retval.0 = phi %union.tree_node* [ %call20, %if.end ], [ %10, %cond.true30 ], [ %call36, %cond.false33 ], !dbg !10089
  ret %union.tree_node* %retval.0, !dbg !10090
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @array_ref_low_bound(%union.tree_node* %exp) local_unnamed_addr #4 !dbg !10091 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !10093, metadata !DIExpression()), !dbg !10095
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10096
  %0 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !10096
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !10096
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !10096
  %2 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !10096
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !10096
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 1, !dbg !10096
  %4 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !10096
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10094, metadata !DIExpression()), !dbg !10095
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !10097
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8, !dbg !10097
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !10097
  br i1 %tobool, label %if.end, label %if.then, !dbg !10099

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !10100

if.end:                                           ; preds = %entry
  %tobool9 = icmp eq %union.tree_node* %4, null, !dbg !10101
  br i1 %tobool9, label %if.end22, label %land.lhs.true, !dbg !10103

land.lhs.true:                                    ; preds = %if.end
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !10104
  %6 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !10104
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !10104
  %tobool11 = icmp eq %union.tree_node* %7, null, !dbg !10104
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10105
  br i1 %tobool11, label %if.end22, label %if.then12, !dbg !10105

if.then12:                                        ; preds = %land.lhs.true
  br i1 false, label %if.then12.cond.true_crit_edge, label %lor.lhs.false, !dbg !10106

if.then12.cond.true_crit_edge:                    ; preds = %if.then12
  br label %cond.true, !dbg !10106

lor.lhs.false:                                    ; preds = %if.then12
  %bf.load = load i64, i64* %8, align 8, !dbg !10106
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !10106
  %tobool17 = icmp eq i64 %bf.cast1, 0, !dbg !10106
  br i1 %tobool17, label %cond.false, label %cond.true, !dbg !10106

cond.true:                                        ; preds = %if.then12.cond.true_crit_edge, %lor.lhs.false
  br label %cleanup, !dbg !10106

cond.false:                                       ; preds = %lor.lhs.false
  %call = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %7, %union.tree_node* %exp) #6, !dbg !10106
  br label %cleanup, !dbg !10106

if.end22:                                         ; preds = %land.lhs.true, %if.end
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10107
  %9 = bitcast %union.tree_node** %arrayidx25 to %struct.tree_common**, !dbg !10107
  %10 = load %struct.tree_common*, %struct.tree_common** %9, align 8, !dbg !10107
  %type27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !10107
  %11 = load %union.tree_node*, %union.tree_node** %type27, align 8, !dbg !10107
  %call28 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %11, i64 0) #6, !dbg !10108
  br label %cleanup, !dbg !10109

cleanup:                                          ; preds = %cond.true, %cond.false, %if.end22, %if.then
  %retval.0 = phi %union.tree_node* [ %5, %if.then ], [ %call28, %if.end22 ], [ %7, %cond.true ], [ %call, %cond.false ], !dbg !10095
  ret %union.tree_node* %retval.0, !dbg !10110
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @array_ref_element_size(%union.tree_node* %exp) local_unnamed_addr #4 !dbg !10111 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !10113, metadata !DIExpression()), !dbg !10117
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10118
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !10118
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10118
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10114, metadata !DIExpression()), !dbg !10117
  %1 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !10119
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !10119
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !10119
  %3 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !10119
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !10119
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !10119
  %5 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !10119
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !10115, metadata !DIExpression()), !dbg !10117
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10120
  %bf.load = load i64, i64* %6, align 8, !dbg !10120
  %bf.cast = and i64 %bf.load, 65535, !dbg !10120
  %arrayidx7 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10120
  %7 = load i32, i32* %arrayidx7, align 4, !dbg !10120
  %cmp = icmp ugt i32 %7, 3, !dbg !10120
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !10120

land.lhs.true:                                    ; preds = %entry
  %cmp14 = icmp ult i32 %7, 11, !dbg !10120
  br i1 %cmp14, label %cond.true, label %cond.end, !dbg !10120

cond.true:                                        ; preds = %land.lhs.true
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10120
  %9 = load i32, i32* %8, align 8, !dbg !10120
  br label %cond.end, !dbg !10120

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !10120
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10116, metadata !DIExpression()), !dbg !10117
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !10121
  br i1 %tobool, label %if.else, label %if.then, !dbg !10123

if.then:                                          ; preds = %cond.end
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10124
  %10 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !10124
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !10127
  %cmp18 = icmp eq %union.tree_node* %10, %11, !dbg !10128
  br i1 %cmp18, label %if.end, label %if.then19, !dbg !10129

if.then19:                                        ; preds = %if.then
  %call = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %11, %union.tree_node* nonnull %0) #6, !dbg !10130
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10114, metadata !DIExpression()), !dbg !10117
  br label %if.end, !dbg !10131

if.end:                                           ; preds = %if.then, %if.then19
  %aligned_size.0 = phi %union.tree_node* [ %call, %if.then19 ], [ %0, %if.then ], !dbg !10117
  call void @llvm.dbg.value(metadata %union.tree_node* %aligned_size.0, metadata !10114, metadata !DIExpression()), !dbg !10117
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10132
  %13 = load i32, i32* %12, align 8, !dbg !10132
  %div = lshr i32 %13, 3, !dbg !10132
  %conv = zext i32 %div to i64, !dbg !10132
  %call21 = tail call %union.tree_node* @size_int_kind(i64 %conv, i32 0) #6, !dbg !10132
  %call22 = tail call %union.tree_node* @size_binop_loc(i32 %cond, i32 65, %union.tree_node* %aligned_size.0, %union.tree_node* %call21) #6, !dbg !10133
  br label %cleanup, !dbg !10134

if.else:                                          ; preds = %cond.end
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10135
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !10135
  %cmp24 = icmp eq %union.tree_node* %15, null, !dbg !10135
  br i1 %cmp24, label %cond.true33, label %lor.lhs.false, !dbg !10135

lor.lhs.false:                                    ; preds = %if.else
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10135
  %bf.load29 = load i64, i64* %16, align 8, !dbg !10135
  %bf.cast311 = and i64 %bf.load29, 131072, !dbg !10135
  %tobool32 = icmp eq i64 %bf.cast311, 0, !dbg !10135
  br i1 %tobool32, label %cond.false36, label %cond.true33, !dbg !10135

cond.true33:                                      ; preds = %lor.lhs.false, %if.else
  br label %cleanup, !dbg !10135

cond.false36:                                     ; preds = %lor.lhs.false
  %call39 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %15, %union.tree_node* %exp) #6, !dbg !10135
  br label %cleanup, !dbg !10135

cleanup:                                          ; preds = %cond.true33, %cond.false36, %if.end
  %retval.0 = phi %union.tree_node* [ %call22, %if.end ], [ %15, %cond.true33 ], [ %call39, %cond.false36 ], !dbg !10136
  ret %union.tree_node* %retval.0, !dbg !10137
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local { i64, i64 } @double_int_mul(i64, i64, i64, i64) local_unnamed_addr #1

declare dso_local { i64, i64 } @tree_to_double_int(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i64, i64 } @uhwi_to_double_int(i64 %cst) unnamed_addr #0 !dbg !10138 {
entry:
  call void @llvm.dbg.value(metadata i64 8, metadata !10142, metadata !DIExpression()), !dbg !10144
  ret { i64, i64 } undef, !dbg !10145
}

declare dso_local { i64, i64 } @double_int_add(i64, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dso_local zeroext i8 @double_int_fits_in_shwi_p(i64, i64) local_unnamed_addr #1

declare dso_local i64 @double_int_to_shwi(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @contains_packed_reference(%union.tree_node* %exp) local_unnamed_addr #4 !dbg !10146 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !10148, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i8 0, metadata !10149, metadata !DIExpression()), !dbg !10155
  br label %while.cond, !dbg !10156

while.cond:                                       ; preds = %sw.epilog, %entry
  %packed_p.0 = phi i8 [ 0, %entry ], [ %packed_p.1, %sw.epilog ], !dbg !10157
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %11, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !10148, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.value(metadata i8 %packed_p.0, metadata !10149, metadata !DIExpression()), !dbg !10155
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10158
  %bf.load = load i64, i64* %0, align 8, !dbg !10158
  %1 = trunc i64 %bf.load to i16, !dbg !10158
  switch i16 %1, label %cleanup28 [
    i16 41, label %sw.bb
    i16 42, label %sw.epilog
    i16 45, label %sw.epilog
    i16 46, label %sw.epilog
    i16 43, label %sw.epilog
    i16 44, label %sw.epilog
    i16 118, label %sw.epilog
  ], !dbg !10159

sw.bb:                                            ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10160
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10160
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10160
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10150, metadata !DIExpression()), !dbg !10161
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10162
  %bf.load3 = load i64, i64* %3, align 8, !dbg !10162
  %bf.cast51 = and i64 %bf.load3, 2199023255552, !dbg !10162
  %tobool = icmp eq i64 %bf.cast51, 0, !dbg !10162
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !10163

lor.lhs.false:                                    ; preds = %sw.bb
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10164
  %4 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !10164
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !10164
  %6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 0, i32 0, !dbg !10164
  %bf.load9 = load i64, i64* %6, align 8, !dbg !10164
  %bf.cast122 = and i64 %bf.load9, 2199023255552, !dbg !10164
  %tobool13 = icmp eq i64 %bf.cast122, 0, !dbg !10164
  br i1 %tobool13, label %lor.rhs, label %lor.end, !dbg !10165

lor.rhs:                                          ; preds = %lor.lhs.false
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10166
  %7 = bitcast %union.tree_node** %type15 to %struct.tree_common**, !dbg !10166
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !10166
  %9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 0, i32 0, !dbg !10166
  %bf.load18 = load i64, i64* %9, align 8, !dbg !10166
  %bf.cast213 = and i64 %bf.load18, 2199023255552, !dbg !10165
  %tobool22 = icmp ne i64 %bf.cast213, 0, !dbg !10165
  br label %lor.end, !dbg !10165

lor.end:                                          ; preds = %lor.lhs.false, %sw.bb, %lor.rhs
  %10 = phi i1 [ true, %lor.lhs.false ], [ true, %sw.bb ], [ %tobool22, %lor.rhs ]
  %conv = zext i1 %10 to i8, !dbg !10162
  call void @llvm.dbg.value(metadata i8 %conv, metadata !10149, metadata !DIExpression()), !dbg !10155
  br i1 %10, label %cleanup28, label %sw.epilog

sw.epilog:                                        ; preds = %lor.end, %while.cond, %while.cond, %while.cond, %while.cond, %while.cond, %while.cond
  %packed_p.1 = phi i8 [ %conv, %lor.end ], [ %packed_p.0, %while.cond ], [ %packed_p.0, %while.cond ], [ %packed_p.0, %while.cond ], [ %packed_p.0, %while.cond ], [ %packed_p.0, %while.cond ], [ %packed_p.0, %while.cond ], !dbg !10155
  call void @llvm.dbg.value(metadata i8 %packed_p.1, metadata !10149, metadata !DIExpression()), !dbg !10155
  %operands26 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10167
  %11 = load %union.tree_node*, %union.tree_node** %operands26, align 8, !dbg !10167
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !10148, metadata !DIExpression()), !dbg !10155
  br label %while.cond, !dbg !10156, !llvm.loop !10168

cleanup28:                                        ; preds = %lor.end, %while.cond
  %retval.0 = phi i8 [ %conv, %lor.end ], [ %packed_p.0, %while.cond ]
  ret i8 %retval.0, !dbg !10170
}

declare dso_local %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @array_ref_up_bound(%union.tree_node* %exp) local_unnamed_addr #4 !dbg !10171 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !10173, metadata !DIExpression()), !dbg !10175
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10176
  %0 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !10176
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !10176
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !10176
  %2 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !10176
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !10176
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 1, !dbg !10176
  %4 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !10176
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10174, metadata !DIExpression()), !dbg !10175
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !10177
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !10179

land.lhs.true:                                    ; preds = %entry
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10180
  %5 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !10180
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !10180
  %tobool4 = icmp eq %union.tree_node* %6, null, !dbg !10180
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10181
  br i1 %tobool4, label %cleanup, label %if.then, !dbg !10181

if.then:                                          ; preds = %land.lhs.true
  br i1 false, label %if.then.cond.true_crit_edge, label %lor.lhs.false, !dbg !10182

if.then.cond.true_crit_edge:                      ; preds = %if.then
  br label %cond.true, !dbg !10182

lor.lhs.false:                                    ; preds = %if.then
  %bf.load = load i64, i64* %7, align 8, !dbg !10182
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !10182
  %tobool9 = icmp eq i64 %bf.cast1, 0, !dbg !10182
  br i1 %tobool9, label %cond.false, label %cond.true, !dbg !10182

cond.true:                                        ; preds = %if.then.cond.true_crit_edge, %lor.lhs.false
  br label %cleanup, !dbg !10182

cond.false:                                       ; preds = %lor.lhs.false
  %call = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %6, %union.tree_node* %exp) #6, !dbg !10182
  br label %cleanup, !dbg !10182

cleanup:                                          ; preds = %land.lhs.true, %entry, %cond.true, %cond.false
  %retval.0 = phi %union.tree_node* [ %6, %cond.true ], [ %call, %cond.false ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !10175
  ret %union.tree_node* %retval.0, !dbg !10183
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @get_subtarget(%struct.rtx_def* %x) unnamed_addr #4 !dbg !10184 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !10186, metadata !DIExpression()), !dbg !10187
  %0 = load i32, i32* @optimize, align 4, !dbg !10188
  %tobool = icmp ne i32 %0, 0, !dbg !10188
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !10189
  %or.cond = or i1 %tobool, %cmp, !dbg !10190
  br i1 %or.cond, label %cond.end, label %lor.lhs.false1, !dbg !10190

lor.lhs.false1:                                   ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !10191
  %bf.load = load i32, i32* %1, align 8, !dbg !10191
  %bf.clear = and i32 %bf.load, 65535, !dbg !10191
  %cmp2 = icmp eq i32 %bf.clear, 37, !dbg !10191
  br i1 %cmp2, label %lor.lhs.false3, label %cond.end, !dbg !10192

lor.lhs.false3:                                   ; preds = %lor.lhs.false1
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #8, !dbg !10193
  %cmp4 = icmp ult i32 %call, 53, !dbg !10194
  %spec.select = select i1 %cmp4, %struct.rtx_def* null, %struct.rtx_def* %x, !dbg !10188
  ret %struct.rtx_def* %spec.select, !dbg !10188

cond.end:                                         ; preds = %entry, %lor.lhs.false1
  ret %struct.rtx_def* null, !dbg !10195
}

declare dso_local %struct.rtx_def* @negate_rtx(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_mult(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_divmod(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @expand_fix(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @expand_float(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_simple_unop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @safe_from_p(%struct.rtx_def* %x, %union.tree_node* %exp, i32 %top_p) local_unnamed_addr #4 !dbg !10196 {
entry:
  %ce = alloca %struct.constructor_elt_d*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !10200, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !10201, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata i32 %top_p, metadata !10202, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !10203, metadata !DIExpression()), !dbg !10213
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !10214
  br i1 %cmp, label %cleanup418, label %lor.lhs.false, !dbg !10216

lor.lhs.false:                                    ; preds = %entry
  %tobool = icmp eq i32 %top_p, 0, !dbg !10217
  br i1 %tobool, label %lor.lhs.false40, label %land.lhs.true, !dbg !10218

land.lhs.true:                                    ; preds = %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10219
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10219
  %cmp1 = icmp eq %union.tree_node* %0, null, !dbg !10220
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10221
  br i1 %cmp1, label %lor.lhs.false40, label %land.lhs.true2, !dbg !10221

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10222
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !10222
  %cmp6 = icmp eq %union.tree_node* %3, null, !dbg !10222
  br i1 %cmp6, label %lor.lhs.false40, label %land.lhs.true7, !dbg !10223

land.lhs.true7:                                   ; preds = %land.lhs.true2
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10223
  %bf.load = load i64, i64* %4, align 8, !dbg !10224
  %bf.cast10 = and i64 %bf.load, 65535, !dbg !10225
  %cmp12 = icmp eq i64 %bf.cast10, 23, !dbg !10225
  br i1 %cmp12, label %lor.lhs.false40, label %land.lhs.true13, !dbg !10226

land.lhs.true13:                                  ; preds = %land.lhs.true7
  %bf.load17 = load i64, i64* %1, align 8, !dbg !10227
  %bf.cast1911 = and i64 %bf.load17, 65535, !dbg !10228
  %cmp20 = icmp eq i64 %bf.cast1911, 15, !dbg !10228
  br i1 %cmp20, label %lor.lhs.false21, label %land.lhs.true36, !dbg !10229

lor.lhs.false21:                                  ; preds = %land.lhs.true13
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10230
  %5 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !10230
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !10230
  %cmp25 = icmp eq %union.tree_node* %6, null, !dbg !10231
  br i1 %cmp25, label %land.lhs.true36, label %lor.lhs.false26, !dbg !10232

lor.lhs.false26:                                  ; preds = %lor.lhs.false21
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10232
  %bf.load32 = load i64, i64* %7, align 8, !dbg !10233
  %bf.cast3412 = and i64 %bf.load32, 65535, !dbg !10234
  %cmp35 = icmp eq i64 %bf.cast3412, 23, !dbg !10234
  br i1 %cmp35, label %lor.lhs.false40, label %land.lhs.true36, !dbg !10235

land.lhs.true36:                                  ; preds = %lor.lhs.false26, %land.lhs.true13, %lor.lhs.false21
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !10236
  %bf.load37 = load i32, i32* %8, align 8, !dbg !10236
  %bf.clear38 = and i32 %bf.load37, 16711680, !dbg !10236
  %cmp39 = icmp eq i32 %bf.clear38, 65536, !dbg !10237
  br i1 %cmp39, label %cleanup418, label %lor.lhs.false40, !dbg !10238

lor.lhs.false40:                                  ; preds = %lor.lhs.false26, %land.lhs.true7, %land.lhs.true2, %land.lhs.true, %lor.lhs.false, %land.lhs.true36
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !10239
  %bf.load41 = load i32, i32* %9, align 8, !dbg !10239
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !10239
  %cmp43 = icmp eq i32 %bf.clear42, 43, !dbg !10239
  br i1 %cmp43, label %land.lhs.true44, label %if.end, !dbg !10240

land.lhs.true44:                                  ; preds = %lor.lhs.false40
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10241
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !10241
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10241
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !dbg !10242
  %cmp45 = icmp eq %struct.rtx_def* %10, %11, !dbg !10243
  br i1 %cmp45, label %cleanup418, label %lor.lhs.false46, !dbg !10244

lor.lhs.false46:                                  ; preds = %land.lhs.true44
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !10244
  %bf.load51 = load i32, i32* %12, align 8, !dbg !10245
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !10245
  %cmp53 = icmp eq i32 %bf.clear52, 49, !dbg !10246
  br i1 %cmp53, label %land.lhs.true54, label %if.end, !dbg !10247

land.lhs.true54:                                  ; preds = %lor.lhs.false46
  %arrayidx61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10248
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !10248
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !10248
  %cmp63 = icmp eq %struct.rtx_def* %13, %11, !dbg !10249
  br i1 %cmp63, label %cleanup418, label %if.end, !dbg !10250

if.end:                                           ; preds = %land.lhs.true54, %lor.lhs.false46, %lor.lhs.false40
  %cmp66 = icmp eq i32 %bf.clear42, 39, !dbg !10251
  br i1 %cmp66, label %if.then67, label %if.end79, !dbg !10253

if.then67:                                        ; preds = %if.end
  %arrayidx70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10254
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !10254
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !10254
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !10200, metadata !DIExpression()), !dbg !10213
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !10256
  %bf.load72 = load i32, i32* %15, align 8, !dbg !10256
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !10256
  %cmp74 = icmp eq i32 %bf.clear73, 37, !dbg !10256
  br i1 %cmp74, label %land.lhs.true75, label %if.end79, !dbg !10258

land.lhs.true75:                                  ; preds = %if.then67
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %14) #8, !dbg !10259
  %cmp76 = icmp ult i32 %call, 53, !dbg !10260
  br i1 %cmp76, label %cleanup418, label %if.end79, !dbg !10261

if.end79:                                         ; preds = %if.then67, %land.lhs.true75, %if.end
  %x.addr.0 = phi %struct.rtx_def* [ %x, %if.end ], [ %14, %land.lhs.true75 ], [ %14, %if.then67 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !10200, metadata !DIExpression()), !dbg !10213
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10262
  %bf.load81 = load i64, i64* %16, align 8, !dbg !10262
  %bf.cast83 = and i64 %bf.load81, 65535, !dbg !10262
  %arrayidx84 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast83, !dbg !10262
  %17 = load i32, i32* %arrayidx84, align 4, !dbg !10262
  switch i32 %17, label %sw.epilog378 [
    i32 3, label %sw.bb
    i32 1, label %cleanup418
    i32 0, label %sw.bb108
    i32 8, label %sw.bb177
    i32 7, label %sw.bb205
    i32 5, label %sw.bb205
    i32 6, label %sw.bb213
    i32 10, label %sw.bb218
    i32 4, label %sw.bb218
    i32 9, label %sw.bb218
    i32 2, label %sw.bb377
  ], !dbg !10263

sw.bb:                                            ; preds = %if.end79
  %arrayidx91 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast83, i64 11, !dbg !10264
  %18 = load i8, i8* %arrayidx91, align 1, !dbg !10264
  %tobool92 = icmp eq i8 %18, 0, !dbg !10264
  br i1 %tobool92, label %sw.epilog378, label %land.lhs.true93, !dbg !10264

land.lhs.true93:                                  ; preds = %sw.bb
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10264
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !10264
  %cmp94 = icmp eq %struct.rtx_def* %19, null, !dbg !10264
  br i1 %cmp94, label %sw.epilog378, label %cond.true, !dbg !10264

cond.true:                                        ; preds = %land.lhs.true93
  br i1 false, label %cond.false, label %cond.true99, !dbg !10264

cond.true99:                                      ; preds = %cond.true
  br label %sw.epilog378, !dbg !10264

cond.false:                                       ; preds = %cond.true
  br label %sw.epilog378, !dbg !10264

sw.bb108:                                         ; preds = %if.end79
  %cmp113 = icmp eq i64 %bf.cast83, 2, !dbg !10265
  br i1 %cmp113, label %while.cond.preheader, label %if.else, !dbg !10266

while.cond.preheader:                             ; preds = %sw.bb108
  br label %while.cond, !dbg !10267

while.cond:                                       ; preds = %while.cond.preheader, %if.end127
  %exp.addr.0 = phi %union.tree_node* [ %22, %if.end127 ], [ %exp, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !10201, metadata !DIExpression()), !dbg !10213
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10269
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !10269
  %tobool116 = icmp eq %union.tree_node* %21, null, !dbg !10269
  br i1 %tobool116, label %if.end123, label %land.lhs.true117, !dbg !10272

land.lhs.true117:                                 ; preds = %while.cond
  %call120 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* nonnull %21, i32 0) #8, !dbg !10273
  %tobool121 = icmp eq i32 %call120, 0, !dbg !10273
  br i1 %tobool121, label %cleanup418.loopexit, label %if.end123, !dbg !10274

if.end123:                                        ; preds = %land.lhs.true117, %while.cond
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10275
  %22 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10275
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !10201, metadata !DIExpression()), !dbg !10213
  %tobool125 = icmp eq %union.tree_node* %22, null, !dbg !10276
  br i1 %tobool125, label %cleanup418.loopexit, label %if.end127, !dbg !10278

if.end127:                                        ; preds = %if.end123
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10279
  %bf.load129 = load i64, i64* %23, align 8, !dbg !10279
  %bf.cast1319 = and i64 %bf.load129, 65535, !dbg !10281
  %cmp132 = icmp eq i64 %bf.cast1319, 2, !dbg !10281
  br i1 %cmp132, label %while.cond, label %if.then134, !dbg !10282, !llvm.loop !10283

if.then134:                                       ; preds = %if.end127
  %.lcssa = phi %union.tree_node* [ %22, %if.end127 ], !dbg !10275
  %call135 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* nonnull %.lcssa, i32 0) #8, !dbg !10285
  br label %cleanup418, !dbg !10286

if.else:                                          ; preds = %sw.bb108
  %cmp141 = icmp eq i64 %bf.cast83, 51, !dbg !10287
  br i1 %cmp141, label %if.then143, label %if.else168, !dbg !10288

if.then143:                                       ; preds = %if.else
  %24 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !10289
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7, !dbg !10289
  call void @llvm.dbg.value(metadata i64 0, metadata !10212, metadata !DIExpression()), !dbg !10290
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10291
  %25 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !10291
  br label %for.cond, !dbg !10294

for.cond:                                         ; preds = %for.inc, %if.then143
  %idx.0 = phi i64 [ 0, %if.then143 ], [ %inc, %for.inc ], !dbg !10295
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !10212, metadata !DIExpression()), !dbg !10290
  %26 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %25, align 8, !dbg !10296
  %tobool144 = icmp eq %struct.VEC_constructor_elt_gc* %26, null, !dbg !10296
  br i1 %tobool144, label %cond.end150, label %cond.true145, !dbg !10296

cond.true145:                                     ; preds = %for.cond
  %base148 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %26, i64 0, i32 0, !dbg !10296
  br label %cond.end150, !dbg !10296

cond.end150:                                      ; preds = %for.cond, %cond.true145
  %cond151 = phi %struct.VEC_constructor_elt_base* [ %base148, %cond.true145 ], [ null, %for.cond ], !dbg !10296
  %conv152 = trunc i64 %idx.0 to i32, !dbg !10296
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !10206, metadata !DIExpression(DW_OP_deref)), !dbg !10290
  %call153 = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %cond151, i32 %conv152, %struct.constructor_elt_d** nonnull %ce) #8, !dbg !10296
  %tobool154 = icmp eq i32 %call153, 0, !dbg !10297
  br i1 %tobool154, label %cleanup, label %for.body, !dbg !10297

for.body:                                         ; preds = %cond.end150
  %27 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !10298
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %27, metadata !10206, metadata !DIExpression()), !dbg !10290
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %27, i64 0, i32 0, !dbg !10300
  %28 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !10300
  %cmp155 = icmp eq %union.tree_node* %28, null, !dbg !10301
  br i1 %cmp155, label %lor.lhs.false161, label %land.lhs.true157, !dbg !10302

land.lhs.true157:                                 ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %27, metadata !10206, metadata !DIExpression()), !dbg !10290
  %call159 = call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* nonnull %28, i32 0) #8, !dbg !10303
  %tobool160 = icmp eq i32 %call159, 0, !dbg !10303
  br i1 %tobool160, label %cleanup, label %land.lhs.true157.lor.lhs.false161_crit_edge, !dbg !10304

land.lhs.true157.lor.lhs.false161_crit_edge:      ; preds = %land.lhs.true157
  %.pre = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !10305
  br label %lor.lhs.false161, !dbg !10304

lor.lhs.false161:                                 ; preds = %land.lhs.true157.lor.lhs.false161_crit_edge, %for.body
  %29 = phi %struct.constructor_elt_d* [ %.pre, %land.lhs.true157.lor.lhs.false161_crit_edge ], [ %27, %for.body ], !dbg !10305
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %29, metadata !10206, metadata !DIExpression()), !dbg !10290
  %value162 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %29, i64 0, i32 1, !dbg !10306
  %30 = load %union.tree_node*, %union.tree_node** %value162, align 8, !dbg !10306
  %call163 = call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %30, i32 0) #8, !dbg !10307
  %tobool164 = icmp eq i32 %call163, 0, !dbg !10307
  br i1 %tobool164, label %cleanup, label %for.inc, !dbg !10308

for.inc:                                          ; preds = %lor.lhs.false161
  %inc = add i64 %idx.0, 1, !dbg !10309
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10212, metadata !DIExpression()), !dbg !10290
  br label %for.cond, !dbg !10310, !llvm.loop !10311

cleanup:                                          ; preds = %land.lhs.true157, %lor.lhs.false161, %cond.end150
  %retval.0 = phi i32 [ 0, %lor.lhs.false161 ], [ 0, %land.lhs.true157 ], [ 1, %cond.end150 ], !dbg !10290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7, !dbg !10313
  br label %cleanup418

if.else168:                                       ; preds = %if.else
  %cmp173 = icmp eq i64 %bf.cast83, 0, !dbg !10314
  %. = zext i1 %cmp173 to i32, !dbg !10316
  br label %cleanup418, !dbg !10316

sw.bb177:                                         ; preds = %if.end79
  %cmp182 = icmp eq i64 %bf.cast83, 132, !dbg !10317
  br i1 %cmp182, label %lor.lhs.false184, label %lor.end, !dbg !10318

lor.lhs.false184:                                 ; preds = %sw.bb177
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10319
  %31 = bitcast %union.tree_node** %operands to i64**, !dbg !10319
  %32 = load i64*, i64** %31, align 8, !dbg !10319
  %bf.load188 = load i64, i64* %32, align 8, !dbg !10319
  %bf.cast1904 = and i64 %bf.load188, 65535, !dbg !10320
  %cmp191 = icmp eq i64 %bf.cast1904, 32, !dbg !10320
  br i1 %cmp191, label %lor.lhs.false193, label %lor.end, !dbg !10321

lor.lhs.false193:                                 ; preds = %lor.lhs.false184
  %initial = getelementptr inbounds i64, i64* %32, i64 10, !dbg !10322
  %33 = bitcast i64* %initial to %union.tree_node**, !dbg !10322
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !10322
  %tobool197 = icmp eq %union.tree_node* %34, null, !dbg !10322
  br i1 %tobool197, label %lor.end, label %lor.rhs, !dbg !10323

lor.rhs:                                          ; preds = %lor.lhs.false193
  %call203 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* nonnull %34, i32 0) #8, !dbg !10324
  %tobool204 = icmp ne i32 %call203, 0, !dbg !10323
  %phitmp5 = zext i1 %tobool204 to i32, !dbg !10323
  br label %lor.end, !dbg !10323

lor.end:                                          ; preds = %lor.lhs.false193, %lor.lhs.false184, %sw.bb177, %lor.rhs
  %35 = phi i32 [ 1, %lor.lhs.false193 ], [ 1, %lor.lhs.false184 ], [ 1, %sw.bb177 ], [ %phitmp5, %lor.rhs ]
  br label %cleanup418, !dbg !10325

sw.bb205:                                         ; preds = %if.end79, %if.end79
  %operands207 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10326
  %arrayidx208 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands207, i64 1, !dbg !10326
  %36 = load %union.tree_node*, %union.tree_node** %arrayidx208, align 8, !dbg !10326
  %call209 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %36, i32 0) #8, !dbg !10328
  %tobool210 = icmp eq i32 %call209, 0, !dbg !10328
  br i1 %tobool210, label %cleanup418, label %sw.bb213, !dbg !10329

sw.bb213:                                         ; preds = %sw.bb205, %if.end79
  %operands215 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10330
  %37 = load %union.tree_node*, %union.tree_node** %operands215, align 8, !dbg !10330
  %call217 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %37, i32 0) #8, !dbg !10331
  br label %cleanup418, !dbg !10332

sw.bb218:                                         ; preds = %if.end79, %if.end79, %if.end79
  %38 = trunc i64 %bf.load81 to i16, !dbg !10333
  switch i16 %38, label %sw.epilog [
    i16 121, label %sw.bb223
    i16 49, label %sw.bb305
    i16 48, label %sw.bb305
    i16 47, label %sw.bb305
    i16 59, label %sw.bb329
    i16 60, label %sw.bb345
    i16 61, label %sw.bb345
    i16 120, label %sw.bb346
  ], !dbg !10334

sw.bb223:                                         ; preds = %sw.bb218
  %operands225 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10335
  %39 = load %union.tree_node*, %union.tree_node** %operands225, align 8, !dbg !10335
  %call227 = tail call %union.tree_node* @staticp(%union.tree_node* %39) #6, !dbg !10338
  %tobool228 = icmp eq %union.tree_node* %call227, null, !dbg !10338
  br i1 %tobool228, label %lor.lhs.false229, label %cleanup418, !dbg !10339

lor.lhs.false229:                                 ; preds = %sw.bb223
  %bf.load231 = load i64, i64* %16, align 8, !dbg !10340
  %bf.cast2341 = and i64 %bf.load231, 67108864, !dbg !10340
  %tobool235 = icmp eq i64 %bf.cast2341, 0, !dbg !10340
  br i1 %tobool235, label %lor.lhs.false236, label %cleanup418, !dbg !10341

lor.lhs.false236:                                 ; preds = %lor.lhs.false229
  %40 = load %union.tree_node*, %union.tree_node** %operands225, align 8, !dbg !10342
  %call240 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %40, i32 0) #8, !dbg !10343
  %tobool241 = icmp eq i32 %call240, 0, !dbg !10343
  br i1 %tobool241, label %if.end243, label %cleanup418, !dbg !10344

if.end243:                                        ; preds = %lor.lhs.false236
  %41 = load %union.tree_node*, %union.tree_node** %operands225, align 8, !dbg !10345
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !10201, metadata !DIExpression()), !dbg !10213
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10346
  %bf.load248 = load i64, i64* %42, align 8, !dbg !10346
  %bf.cast250 = and i64 %bf.load248, 65535, !dbg !10346
  %arrayidx252 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast250, !dbg !10346
  %43 = load i32, i32* %arrayidx252, align 4, !dbg !10346
  %cmp253 = icmp eq i32 %43, 3, !dbg !10346
  br i1 %cmp253, label %if.then255, label %sw.epilog, !dbg !10348

if.then255:                                       ; preds = %if.end243
  %arrayidx262 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast250, i64 11, !dbg !10349
  %44 = load i8, i8* %arrayidx262, align 1, !dbg !10349
  %tobool264 = icmp eq i8 %44, 0, !dbg !10349
  br i1 %tobool264, label %cleanup418, label %land.lhs.true265, !dbg !10349

land.lhs.true265:                                 ; preds = %if.then255
  %rtl267 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10349
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtl267, align 8, !dbg !10349
  %cmp268 = icmp eq %struct.rtx_def* %45, null, !dbg !10349
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 0, !dbg !10352
  br i1 %cmp268, label %cleanup418, label %lor.lhs.false270, !dbg !10352

lor.lhs.false270:                                 ; preds = %land.lhs.true265
  br i1 false, label %cond.false277, label %cond.true274, !dbg !10353

cond.true274:                                     ; preds = %lor.lhs.false270
  %bf.load282.pre = load i32, i32* %46, align 8, !dbg !10353
  %phitmp20 = and i32 %bf.load282.pre, 65535, !dbg !10353
  %phitmp21 = icmp eq i32 %phitmp20, 43, !dbg !10353
  br label %cond.end280, !dbg !10353

cond.false277:                                    ; preds = %lor.lhs.false270
  br label %cond.end280, !dbg !10353

cond.end280:                                      ; preds = %cond.false277, %cond.true274
  %bf.load282 = phi i1 [ false, %cond.false277 ], [ %phitmp21, %cond.true274 ]
  br i1 %bf.load282, label %if.else287, label %cleanup418, !dbg !10354

if.else287:                                       ; preds = %cond.end280
  br i1 false, label %cond.false294, label %cond.true291, !dbg !10355

cond.true291:                                     ; preds = %if.else287
  %arrayidx301.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10356
  %rt_rtx302.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx301.phi.trans.insert to %struct.rtx_def**, !dbg !10356
  %.pre18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx302.phi.trans.insert, align 8, !dbg !10355
  br label %cond.end297, !dbg !10355

cond.false294:                                    ; preds = %if.else287
  br label %cond.end297, !dbg !10355

cond.end297:                                      ; preds = %cond.false294, %cond.true291
  %47 = phi %struct.rtx_def* [ undef, %cond.false294 ], [ %.pre18, %cond.true291 ], !dbg !10355
  call void @llvm.dbg.value(metadata %struct.rtx_def* %47, metadata !10203, metadata !DIExpression()), !dbg !10213
  br label %sw.epilog, !dbg !10357

sw.bb305:                                         ; preds = %sw.bb218, %sw.bb218, %sw.bb218
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !10358
  %bf.load306 = load i32, i32* %48, align 8, !dbg !10358
  %bf.clear307 = and i32 %bf.load306, 65535, !dbg !10358
  %cmp308 = icmp eq i32 %bf.clear307, 43, !dbg !10358
  br i1 %cmp308, label %land.lhs.true310, label %sw.epilog, !dbg !10360

land.lhs.true310:                                 ; preds = %sw.bb305
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10361
  %rt_mem = bitcast %union.rtunion_def* %49 to %struct.mem_attrs**, !dbg !10361
  %50 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !10361
  %cmp314 = icmp eq %struct.mem_attrs* %50, null, !dbg !10361
  br i1 %cmp314, label %cond.end322, label %cond.false317, !dbg !10361

cond.false317:                                    ; preds = %land.lhs.true310
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %50, i64 0, i32 3, !dbg !10361
  %51 = load i32, i32* %alias, align 8, !dbg !10361
  br label %cond.end322, !dbg !10361

cond.end322:                                      ; preds = %land.lhs.true310, %cond.false317
  %cond323 = phi i32 [ %51, %cond.false317 ], [ 0, %land.lhs.true310 ], !dbg !10361
  %call324 = tail call i32 @get_alias_set(%union.tree_node* %exp) #6, !dbg !10362
  %call325 = tail call i32 @alias_sets_conflict_p(i32 %cond323, i32 %call324) #6, !dbg !10363
  %tobool326 = icmp eq i32 %call325, 0, !dbg !10363
  br i1 %tobool326, label %sw.epilog, label %cleanup418, !dbg !10364

sw.bb329:                                         ; preds = %sw.bb218
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !10365
  %bf.load330 = load i32, i32* %52, align 8, !dbg !10365
  %bf.clear331 = and i32 %bf.load330, 65535, !dbg !10365
  %cmp332 = icmp eq i32 %bf.clear331, 37, !dbg !10365
  br i1 %cmp332, label %land.lhs.true334, label %lor.lhs.false338, !dbg !10367

land.lhs.true334:                                 ; preds = %sw.bb329
  %call335 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.addr.0) #8, !dbg !10368
  %cmp336 = icmp ult i32 %call335, 53, !dbg !10369
  br i1 %cmp336, label %cleanup418, label %land.lhs.true334.lor.lhs.false338_crit_edge, !dbg !10370

land.lhs.true334.lor.lhs.false338_crit_edge:      ; preds = %land.lhs.true334
  %bf.load339.pre = load i32, i32* %52, align 8, !dbg !10371
  %.pre19 = and i32 %bf.load339.pre, 65535, !dbg !10371
  br label %lor.lhs.false338, !dbg !10370

lor.lhs.false338:                                 ; preds = %land.lhs.true334.lor.lhs.false338_crit_edge, %sw.bb329
  %bf.clear340.pre-phi = phi i32 [ %.pre19, %land.lhs.true334.lor.lhs.false338_crit_edge ], [ %bf.clear331, %sw.bb329 ], !dbg !10371
  %cmp341 = icmp eq i32 %bf.clear340.pre-phi, 43, !dbg !10371
  br i1 %cmp341, label %cleanup418, label %sw.epilog, !dbg !10372

sw.bb345:                                         ; preds = %sw.bb218, %sw.bb218
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6623, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10373
  br label %sw.bb346, !dbg !10373

sw.bb346:                                         ; preds = %sw.bb218, %sw.bb345
  %operands348 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10374
  %53 = load %union.tree_node*, %union.tree_node** %operands348, align 8, !dbg !10374
  %call350 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* %53, i32 0) #8, !dbg !10375
  br label %cleanup418, !dbg !10376

sw.epilog:                                        ; preds = %cond.end322, %sw.bb218, %lor.lhs.false338, %sw.bb305, %if.end243, %cond.end297
  %exp_rtl.1 = phi %struct.rtx_def* [ %47, %cond.end297 ], [ null, %if.end243 ], [ null, %cond.end322 ], [ null, %sw.bb305 ], [ null, %lor.lhs.false338 ], [ null, %sw.bb218 ], !dbg !10213
  %exp.addr.1 = phi %union.tree_node* [ %41, %cond.end297 ], [ %41, %if.end243 ], [ %exp, %cond.end322 ], [ %exp, %sw.bb305 ], [ %exp, %lor.lhs.false338 ], [ %exp, %sw.bb218 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1, metadata !10201, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %exp_rtl.1, metadata !10203, metadata !DIExpression()), !dbg !10213
  %tobool351 = icmp eq %struct.rtx_def* %exp_rtl.1, null, !dbg !10377
  br i1 %tobool351, label %if.end353, label %sw.epilog378, !dbg !10379

if.end353:                                        ; preds = %sw.epilog
  %call354 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %exp.addr.1) #8, !dbg !10380
  call void @llvm.dbg.value(metadata i32 %call354, metadata !10205, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata i32 0, metadata !10204, metadata !DIExpression()), !dbg !10213
  %operands360 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10381
  %54 = sext i32 %call354 to i64, !dbg !10385
  br label %for.cond355, !dbg !10385

for.cond355:                                      ; preds = %for.inc374, %if.end353
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc374 ], [ 0, %if.end353 ], !dbg !10386
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10204, metadata !DIExpression()), !dbg !10213
  %cmp356 = icmp slt i64 %indvars.iv, %54, !dbg !10387
  br i1 %cmp356, label %for.body358, label %sw.epilog378.loopexit, !dbg !10388

for.body358:                                      ; preds = %for.cond355
  %arrayidx362 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands360, i64 %indvars.iv, !dbg !10389
  %55 = load %union.tree_node*, %union.tree_node** %arrayidx362, align 8, !dbg !10389
  %cmp363 = icmp eq %union.tree_node* %55, null, !dbg !10390
  br i1 %cmp363, label %for.inc374, label %land.lhs.true365, !dbg !10391

land.lhs.true365:                                 ; preds = %for.body358
  %call370 = tail call i32 @safe_from_p(%struct.rtx_def* %x.addr.0, %union.tree_node* nonnull %55, i32 0) #8, !dbg !10392
  %tobool371 = icmp eq i32 %call370, 0, !dbg !10392
  br i1 %tobool371, label %cleanup418.loopexit13, label %for.inc374, !dbg !10393

for.inc374:                                       ; preds = %land.lhs.true365, %for.body358
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !10394
  call void @llvm.dbg.value(metadata i32 undef, metadata !10204, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10213
  br label %for.cond355, !dbg !10395, !llvm.loop !10396

sw.bb377:                                         ; preds = %if.end79
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6646, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10398
  br label %sw.epilog378, !dbg !10399

sw.epilog378.loopexit:                            ; preds = %for.cond355
  br label %sw.epilog378, !dbg !10400

sw.epilog378:                                     ; preds = %sw.epilog378.loopexit, %land.lhs.true93, %sw.bb, %sw.epilog, %cond.false, %cond.true99, %sw.bb377, %if.end79
  %exp_rtl.2 = phi %struct.rtx_def* [ null, %if.end79 ], [ null, %sw.bb377 ], [ %19, %cond.true99 ], [ undef, %cond.false ], [ null, %land.lhs.true93 ], [ null, %sw.bb ], [ %exp_rtl.1, %sw.epilog ], [ null, %sw.epilog378.loopexit ], !dbg !10213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %exp_rtl.2, metadata !10203, metadata !DIExpression()), !dbg !10213
  %tobool379 = icmp eq %struct.rtx_def* %exp_rtl.2, null, !dbg !10400
  br i1 %tobool379, label %cleanup418, label %if.then380, !dbg !10402

if.then380:                                       ; preds = %sw.epilog378
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp_rtl.2, i64 0, i32 0, !dbg !10403
  %bf.load381 = load i32, i32* %56, align 8, !dbg !10403
  %bf.clear382 = and i32 %bf.load381, 65535, !dbg !10403
  %cmp383 = icmp eq i32 %bf.clear382, 39, !dbg !10406
  br i1 %cmp383, label %if.then385, label %if.end400, !dbg !10407

if.then385:                                       ; preds = %if.then380
  %arrayidx388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp_rtl.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10408
  %rt_rtx389 = bitcast %union.rtunion_def* %arrayidx388 to %struct.rtx_def**, !dbg !10408
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx389, align 8, !dbg !10408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %57, metadata !10203, metadata !DIExpression()), !dbg !10213
  %58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i64 0, i32 0, !dbg !10410
  %bf.load390 = load i32, i32* %58, align 8, !dbg !10410
  %bf.clear391 = and i32 %bf.load390, 65535, !dbg !10410
  %cmp392 = icmp eq i32 %bf.clear391, 37, !dbg !10410
  br i1 %cmp392, label %land.lhs.true394, label %if.end400, !dbg !10412

land.lhs.true394:                                 ; preds = %if.then385
  %call395 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %57) #8, !dbg !10413
  %cmp396 = icmp ult i32 %call395, 53, !dbg !10414
  br i1 %cmp396, label %cleanup418, label %if.end400, !dbg !10415

if.end400:                                        ; preds = %if.then385, %land.lhs.true394, %if.then380
  %exp_rtl.3 = phi %struct.rtx_def* [ %exp_rtl.2, %if.then380 ], [ %57, %land.lhs.true394 ], [ %57, %if.then385 ], !dbg !10213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %exp_rtl.3, metadata !10203, metadata !DIExpression()), !dbg !10213
  %call401 = tail call i32 @rtx_equal_p(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %exp_rtl.3) #6, !dbg !10416
  %tobool402 = icmp eq i32 %call401, 0, !dbg !10416
  br i1 %tobool402, label %lor.rhs403, label %lor.end415, !dbg !10417

lor.rhs403:                                       ; preds = %if.end400
  %59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !10418
  %bf.load404 = load i32, i32* %59, align 8, !dbg !10418
  %bf.clear405 = and i32 %bf.load404, 65535, !dbg !10418
  %cmp406 = icmp eq i32 %bf.clear405, 43, !dbg !10418
  br i1 %cmp406, label %land.lhs.true408, label %lor.end415, !dbg !10419

land.lhs.true408:                                 ; preds = %lor.rhs403
  %60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp_rtl.3, i64 0, i32 0, !dbg !10420
  %bf.load409 = load i32, i32* %60, align 8, !dbg !10420
  %bf.clear410 = and i32 %bf.load409, 65535, !dbg !10420
  %cmp411 = icmp eq i32 %bf.clear410, 43, !dbg !10420
  br i1 %cmp411, label %land.rhs, label %lor.end415, !dbg !10421

land.rhs:                                         ; preds = %land.lhs.true408
  %call413 = tail call i32 @true_dependence(%struct.rtx_def* %exp_rtl.3, i32 0, %struct.rtx_def* %x.addr.0, i8 (%struct.rtx_def*, i8)* nonnull @rtx_addr_varies_p) #6, !dbg !10422
  %tobool414 = icmp eq i32 %call413, 0, !dbg !10421
  %phitmp = zext i1 %tobool414 to i32
  br label %lor.end415

lor.end415:                                       ; preds = %if.end400, %lor.rhs403, %land.lhs.true408, %land.rhs
  %61 = phi i32 [ 0, %if.end400 ], [ 1, %land.lhs.true408 ], [ 1, %lor.rhs403 ], [ %phitmp, %land.rhs ]
  br label %cleanup418, !dbg !10423

cleanup418.loopexit:                              ; preds = %if.end123, %land.lhs.true117
  %retval.1.ph = phi i32 [ 1, %if.end123 ], [ 0, %land.lhs.true117 ]
  br label %cleanup418, !dbg !10424

cleanup418.loopexit13:                            ; preds = %land.lhs.true365
  br label %cleanup418, !dbg !10424

cleanup418:                                       ; preds = %cleanup418.loopexit13, %cleanup418.loopexit, %sw.bb205, %land.lhs.true265, %if.then255, %lor.lhs.false236, %lor.lhs.false229, %sw.bb223, %cond.end322, %sw.epilog378, %land.lhs.true394, %land.lhs.true334, %lor.lhs.false338, %cond.end280, %if.else168, %if.end79, %land.lhs.true75, %entry, %land.lhs.true36, %land.lhs.true44, %land.lhs.true54, %lor.end415, %sw.bb346, %sw.bb213, %lor.end, %cleanup, %if.then134
  %retval.1 = phi i32 [ %61, %lor.end415 ], [ %call350, %sw.bb346 ], [ %call217, %sw.bb213 ], [ %35, %lor.end ], [ %call135, %if.then134 ], [ %retval.0, %cleanup ], [ 1, %land.lhs.true54 ], [ 1, %land.lhs.true44 ], [ 1, %land.lhs.true36 ], [ 1, %entry ], [ 0, %land.lhs.true75 ], [ 1, %if.end79 ], [ %., %if.else168 ], [ 0, %sw.bb205 ], [ 1, %lor.lhs.false236 ], [ 1, %lor.lhs.false229 ], [ 1, %sw.bb223 ], [ 0, %cond.end280 ], [ 0, %land.lhs.true265 ], [ 0, %if.then255 ], [ 0, %cond.end322 ], [ 0, %lor.lhs.false338 ], [ 0, %land.lhs.true334 ], [ 0, %land.lhs.true394 ], [ 1, %sw.epilog378 ], [ %retval.1.ph, %cleanup418.loopexit ], [ 0, %cleanup418.loopexit13 ], !dbg !10213
  ret i32 %retval.1, !dbg !10424
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_, %struct.constructor_elt_d** %ptr) unnamed_addr #0 !dbg !10425 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !10431, metadata !DIExpression()), !dbg !10434
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10432, metadata !DIExpression()), !dbg !10434
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ptr, metadata !10433, metadata !DIExpression()), !dbg !10434
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !10435
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10435

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !10435
  %0 = load i32, i32* %num, align 8, !dbg !10435
  %cmp = icmp ugt i32 %0, %ix_, !dbg !10435
  br i1 %cmp, label %if.then, label %if.else, !dbg !10437

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !10438
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10438
  br label %return, !dbg !10438

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !10440

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.constructor_elt_d* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !10442
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !10442
  store %struct.constructor_elt_d* %storemerge, %struct.constructor_elt_d** %ptr, align 8, !dbg !10442
  ret i32 %retval.0, !dbg !10437
}

declare dso_local %union.tree_node* @staticp(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @alias_sets_conflict_p(i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !10443 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !10447, metadata !DIExpression()), !dbg !10448
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10449
  %bf.load = load i64, i64* %0, align 8, !dbg !10449
  %bf.cast = and i64 %bf.load, 65535, !dbg !10449
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10449
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10449
  %cmp = icmp eq i32 %1, 9, !dbg !10449
  br i1 %cmp, label %if.then, label %if.else, !dbg !10451

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10452
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !10452
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !10452
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !10452
  %4 = load i64, i64* %low, align 8, !dbg !10452
  %conv = trunc i64 %4 to i32, !dbg !10452
  br label %return, !dbg !10453

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !10454
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !10454
  %conv9 = zext i8 %5 to i32, !dbg !10454
  br label %return, !dbg !10455

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !10456
  ret i32 %retval.0, !dbg !10457
}

declare dso_local i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) local_unnamed_addr #1

declare dso_local zeroext i8 @rtx_addr_varies_p(%struct.rtx_def*, i8 zeroext) #1

declare dso_local i32 @integer_pow2p(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @get_curr_insn_source_location() local_unnamed_addr #1

declare dso_local %union.tree_node* @get_curr_insn_block() local_unnamed_addr #1

declare dso_local void @set_curr_insn_source_location(i32) local_unnamed_addr #1

declare dso_local void @set_curr_insn_block(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node** @tree_block(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_expr_real_1(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, %struct.rtx_def** %alt_rtl) local_unnamed_addr #4 !dbg !10458 {
entry:
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %unsignedp = alloca i32, align 4
  %ops = alloca %struct.separate_ops, align 8
  %addr = alloca %struct.mem_address, align 8
  %mode1 = alloca i32, align 4
  %bitsize1432 = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %offset = alloca %union.tree_node*, align 8
  %volatilep = alloca i32, align 4
  %mode12375 = alloca i32, align 4
  %bitsize2376 = alloca i64, align 8
  %bitpos2377 = alloca i64, align 8
  %offset2378 = alloca %union.tree_node*, align 8
  %unsignedp2379 = alloca i32, align 4
  %volatilep2380 = alloca i32, align 4
  %iter = alloca %struct.tree_stmt_iterator, align 8
  %tmp2809 = alloca %struct.tree_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !10460, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !10461, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !10462, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !10463, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def** %alt_rtl, metadata !10464, metadata !DIExpression()), !dbg !10672
  %0 = bitcast %struct.rtx_def** %op0 to i8*, !dbg !10673
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10673
  %1 = bitcast %struct.rtx_def** %op1 to i8*, !dbg !10673
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !10673
  %2 = bitcast i32* %unsignedp to i8*, !dbg !10674
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #7, !dbg !10674
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10675
  %bf.load = load i64, i64* %3, align 8, !dbg !10675
  %4 = trunc i64 %bf.load to i32, !dbg !10675
  %bf.cast = and i32 %4, 65535, !dbg !10675
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !10472, metadata !DIExpression()), !dbg !10672
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !10676
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast4, !dbg !10676
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10676
  %cmp = icmp ugt i32 %5, 3, !dbg !10676
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !10676

land.lhs.true:                                    ; preds = %entry
  %cmp11 = icmp ult i32 %5, 11, !dbg !10676
  br i1 %cmp11, label %cond.true, label %cond.end, !dbg !10676

cond.true:                                        ; preds = %land.lhs.true
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10676
  %7 = load i32, i32* %6, align 8, !dbg !10676
  br label %cond.end, !dbg !10676

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !10676
  call void @llvm.dbg.value(metadata i32 %cond, metadata !10479, metadata !DIExpression()), !dbg !10672
  %8 = bitcast %struct.separate_ops* %ops to i8*, !dbg !10677
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #7, !dbg !10677
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10678
  %9 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !10678
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10469, metadata !DIExpression()), !dbg !10672
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10679
  %bf.load15 = load i64, i64* %10, align 8, !dbg !10679
  %bf.cast1762 = and i64 %bf.load15, 65535, !dbg !10679
  %cmp18 = icmp eq i64 %bf.cast1762, 14, !dbg !10679
  br i1 %cmp18, label %cond.true19, label %cond.false20, !dbg !10679

cond.true19:                                      ; preds = %cond.end
  %call = tail call i32 @vector_type_mode(%union.tree_node* %9) #6, !dbg !10679
  %bf.load28.pre = load i64, i64* %10, align 8, !dbg !10680
  %bf.load33.pre = load i64, i64* %3, align 8, !dbg !10681
  %.pre178 = and i64 %bf.load33.pre, 65535, !dbg !10681
  %arrayidx37.phi.trans.insert = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %.pre178, !dbg !10683
  %.pre182 = load i32, i32* %arrayidx37.phi.trans.insert, align 4, !dbg !10681
  br label %cond.end25, !dbg !10679

cond.false20:                                     ; preds = %cond.end
  %type21 = bitcast %union.tree_node* %9 to %struct.tree_type*, !dbg !10679
  %mode22 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i64 0, i32 6, !dbg !10679
  %bf.load23 = load i32, i32* %mode22, align 4, !dbg !10679
  %bf.lshr = lshr i32 %bf.load23, 16, !dbg !10679
  %bf.clear24 = and i32 %bf.lshr, 255, !dbg !10679
  br label %cond.end25, !dbg !10679

cond.end25:                                       ; preds = %cond.false20, %cond.true19
  %11 = phi i32 [ %5, %cond.false20 ], [ %.pre182, %cond.true19 ], !dbg !10681
  %bf.cast35.pre-phi = phi i64 [ %bf.cast4, %cond.false20 ], [ %.pre178, %cond.true19 ], !dbg !10681
  %bf.load109 = phi i64 [ %bf.load, %cond.false20 ], [ %bf.load33.pre, %cond.true19 ], !dbg !10681
  %bf.load28 = phi i64 [ %bf.load15, %cond.false20 ], [ %bf.load28.pre, %cond.true19 ], !dbg !10680
  %cond26 = phi i32 [ %bf.clear24, %cond.false20 ], [ %call, %cond.true19 ], !dbg !10679
  call void @llvm.dbg.value(metadata i32 %cond26, metadata !10471, metadata !DIExpression()), !dbg !10672
  %bf.lshr29 = lshr i64 %bf.load28, 21, !dbg !10680
  %12 = trunc i64 %bf.lshr29 to i32, !dbg !10680
  %bf.cast31 = and i32 %12, 1, !dbg !10680
  call void @llvm.dbg.value(metadata i32 %bf.cast31, metadata !10470, metadata !DIExpression()), !dbg !10672
  store i32 %bf.cast31, i32* %unsignedp, align 4, !dbg !10684
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10491, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10490, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10489, metadata !DIExpression()), !dbg !10672
  %cmp38 = icmp eq i32 %11, 9, !dbg !10681
  br i1 %cmp38, label %if.end, label %if.then, !dbg !10685

if.then:                                          ; preds = %cond.end25
  %idxprom39 = zext i32 %bf.cast to i64, !dbg !10686
  %arrayidx40 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %idxprom39, !dbg !10686
  %13 = load i8, i8* %arrayidx40, align 1, !dbg !10686
  switch i8 %13, label %sw.bb [
    i8 0, label %if.end
    i8 2, label %sw.bb43
    i8 1, label %sw.bb47
  ], !dbg !10687

sw.bb:                                            ; preds = %if.then
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10688
  %arrayidx42 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !10688
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8, !dbg !10688
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !10491, metadata !DIExpression()), !dbg !10672
  br label %sw.bb43, !dbg !10690

sw.bb43:                                          ; preds = %if.then, %sw.bb
  %treeop2.0 = phi %union.tree_node* [ %14, %sw.bb ], [ null, %if.then ], !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop2.0, metadata !10491, metadata !DIExpression()), !dbg !10672
  %operands45 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10691
  %arrayidx46 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands45, i64 1, !dbg !10691
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8, !dbg !10691
  %16 = bitcast %union.tree_node* %15 to %struct.tree_exp*, !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !10490, metadata !DIExpression()), !dbg !10672
  br label %sw.bb47, !dbg !10692

sw.bb47:                                          ; preds = %if.then, %sw.bb43
  %treeop2.1 = phi %union.tree_node* [ %treeop2.0, %sw.bb43 ], [ null, %if.then ], !dbg !10672
  %17 = phi %struct.tree_exp* [ %16, %sw.bb43 ], [ null, %if.then ], !dbg !10672
  %treeop1.0 = phi %union.tree_node* [ %15, %sw.bb43 ], [ null, %if.then ], !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.0, metadata !10490, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop2.1, metadata !10491, metadata !DIExpression()), !dbg !10672
  %operands49 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10693
  %18 = load %union.tree_node*, %union.tree_node** %operands49, align 8, !dbg !10693
  %19 = bitcast %union.tree_node* %18 to %struct.tree_exp*, !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !10489, metadata !DIExpression()), !dbg !10672
  br label %if.end, !dbg !10694

if.end:                                           ; preds = %if.then, %sw.bb47, %cond.end25
  %treeop2.3 = phi %union.tree_node* [ null, %cond.end25 ], [ %treeop2.1, %sw.bb47 ], [ null, %if.then ], !dbg !10672
  %20 = phi %struct.tree_exp* [ null, %cond.end25 ], [ %17, %sw.bb47 ], [ null, %if.then ], !dbg !10672
  %treeop1.2 = phi %union.tree_node* [ null, %cond.end25 ], [ %treeop1.0, %sw.bb47 ], [ null, %if.then ], !dbg !10672
  %21 = phi %struct.tree_exp* [ null, %cond.end25 ], [ %19, %sw.bb47 ], [ null, %if.then ], !dbg !10672
  %treeop0.1 = phi %union.tree_node* [ null, %cond.end25 ], [ %18, %sw.bb47 ], [ null, %if.then ], !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop0.1, metadata !10489, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.2, metadata !10490, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop2.3, metadata !10491, metadata !DIExpression()), !dbg !10672
  %code51 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 0, !dbg !10695
  store i32 %bf.cast, i32* %code51, align 8, !dbg !10696
  %type52 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 1, !dbg !10697
  store %union.tree_node* %9, %union.tree_node** %type52, align 8, !dbg !10698
  %op053 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 2, !dbg !10699
  %22 = bitcast %union.tree_node** %op053 to %struct.tree_exp**, !dbg !10700
  store %struct.tree_exp* %21, %struct.tree_exp** %22, align 8, !dbg !10700
  %op154 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 3, !dbg !10701
  %23 = bitcast %union.tree_node** %op154 to %struct.tree_exp**, !dbg !10702
  store %struct.tree_exp* %20, %struct.tree_exp** %23, align 8, !dbg !10702
  %op2 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 4, !dbg !10703
  store %union.tree_node* %treeop2.3, %union.tree_node** %op2, align 8, !dbg !10704
  %location = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 5, !dbg !10705
  store i32 %cond, i32* %location, align 8, !dbg !10706
  %24 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10707
  %cmp55 = icmp eq %struct.rtx_def* %24, %target, !dbg !10708
  br i1 %cmp55, label %lor.end, label %lor.rhs, !dbg !10709

lor.rhs:                                          ; preds = %if.end
  %trunc = trunc i64 %bf.load to i16, !dbg !10710
  switch i16 %trunc, label %lor.end [
    i16 116, label %land.rhs
    i16 113, label %land.rhs
    i16 56, label %land.rhs
    i16 118, label %land.rhs
  ], !dbg !10710

land.rhs:                                         ; preds = %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs
  %bf.load68 = load i64, i64* %10, align 8, !dbg !10711
  %bf.cast7063 = and i64 %bf.load68, 65535, !dbg !10712
  %cmp71 = icmp eq i64 %bf.cast7063, 19, !dbg !10712
  br label %lor.end

lor.end:                                          ; preds = %land.rhs, %lor.rhs, %if.end
  %25 = phi i1 [ true, %if.end ], [ %cmp71, %land.rhs ], [ false, %lor.rhs ]
  %lor.ext = zext i1 %25 to i32, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %lor.ext, metadata !10476, metadata !DIExpression()), !dbg !10672
  br i1 %25, label %land.end89, label %land.lhs.true73, !dbg !10713

land.lhs.true73:                                  ; preds = %lor.end
  %bf.load75 = load i64, i64* %10, align 8, !dbg !10714
  %bf.cast7764 = and i64 %bf.load75, 65535, !dbg !10715
  %cmp78 = icmp eq i64 %bf.cast7764, 8, !dbg !10715
  br i1 %cmp78, label %land.rhs80, label %land.end89, !dbg !10716

land.rhs80:                                       ; preds = %land.lhs.true73
  %idxprom81 = zext i32 %cond26 to i64, !dbg !10717
  %arrayidx82 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom81, !dbg !10717
  %26 = load i16, i16* %arrayidx82, align 2, !dbg !10717
  %conv83 = zext i16 %26 to i32, !dbg !10717
  %type84 = bitcast %union.tree_node* %9 to %struct.tree_type*, !dbg !10718
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type84, i64 0, i32 6, !dbg !10718
  %bf.load85 = load i32, i32* %precision, align 4, !dbg !10718
  %bf.clear86 = and i32 %bf.load85, 1023, !dbg !10718
  %cmp87 = icmp ult i32 %bf.clear86, %conv83, !dbg !10719
  br label %land.end89

land.end89:                                       ; preds = %land.rhs80, %land.lhs.true73, %lor.end
  %27 = phi i1 [ false, %land.lhs.true73 ], [ false, %lor.end ], [ %cmp87, %land.rhs80 ], !dbg !10672
  call void @llvm.dbg.value(metadata i1 %27, metadata !10478, metadata !DIExpression()), !dbg !10672
  br i1 %25, label %if.then92, label %if.end173, !dbg !10720

if.then92:                                        ; preds = %land.end89
  %bf.cast97141 = and i64 %bf.load109, 65536, !dbg !10721
  %tobool98 = icmp eq i64 %bf.cast97141, 0, !dbg !10721
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !10725

if.then99:                                        ; preds = %if.then92
  br label %cleanup3078, !dbg !10726

if.end100:                                        ; preds = %if.then92
  %bf.cast105142 = and i64 %bf.load109, 524288, !dbg !10727
  %tobool106 = icmp eq i64 %bf.cast105142, 0, !dbg !10727
  br i1 %tobool106, label %if.end132, label %land.lhs.true107, !dbg !10729

land.lhs.true107:                                 ; preds = %if.end100
  %cmp112 = icmp ne i64 %bf.cast35.pre-phi, 29, !dbg !10730
  %28 = icmp ugt i32 %cond26, 1, !dbg !10731
  %29 = and i1 %28, %cmp112, !dbg !10731
  %cmp121 = icmp ne i32 %modifier, 3, !dbg !10732
  %or.cond13 = and i1 %29, %cmp121, !dbg !10731
  br i1 %or.cond13, label %if.then123, label %if.end132, !dbg !10731

if.then123:                                       ; preds = %land.lhs.true107
  %call124 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 %modifier) #8, !dbg !10733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call124, metadata !10467, metadata !DIExpression()), !dbg !10672
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call124, i64 0, i32 0, !dbg !10735
  %bf.load125 = load i32, i32* %30, align 8, !dbg !10735
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !10735
  %cmp127 = icmp eq i32 %bf.clear126, 43, !dbg !10735
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !10737

if.then129:                                       ; preds = %if.then123
  %call130 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call124) #6, !dbg !10738
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call130, metadata !10467, metadata !DIExpression()), !dbg !10672
  br label %if.end131, !dbg !10739

if.end131:                                        ; preds = %if.then129, %if.then123
  %31 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10740
  br label %cleanup3078, !dbg !10741

if.end132:                                        ; preds = %if.end100, %land.lhs.true107
  %idxprom133 = zext i32 %bf.cast to i64, !dbg !10742
  %arrayidx134 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom133, !dbg !10742
  %32 = load i32, i32* %arrayidx134, align 4, !dbg !10742
  %cmp135 = icmp eq i32 %32, 6, !dbg !10744
  %cmp138 = icmp eq i32 %bf.cast, 41, !dbg !10745
  %or.cond14 = or i1 %cmp135, %cmp138, !dbg !10746
  %cmp141 = icmp eq i32 %bf.cast, 47, !dbg !10747
  %or.cond15 = or i1 %or.cond14, %cmp141, !dbg !10746
  br i1 %or.cond15, label %if.then143, label %if.else, !dbg !10746

if.then143:                                       ; preds = %if.end132
  %call144 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop0.1, %struct.rtx_def* %24, i32 0, i32 %modifier) #8, !dbg !10748
  br label %cleanup3078, !dbg !10749

if.else:                                          ; preds = %if.end132
  %cmp147 = icmp eq i32 %32, 7, !dbg !10750
  br i1 %cmp147, label %if.then160, label %lor.lhs.false149, !dbg !10752

lor.lhs.false149:                                 ; preds = %if.else
  %cmp152 = icmp eq i32 %32, 5, !dbg !10753
  %33 = add nsw i32 %bf.cast, -45, !dbg !10754
  %34 = icmp ult i32 %33, 2, !dbg !10754
  %35 = or i1 %34, %cmp152, !dbg !10754
  br i1 %35, label %if.then160, label %if.else163, !dbg !10754

if.then160:                                       ; preds = %lor.lhs.false149, %if.else
  %call161 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop0.1, %struct.rtx_def* %24, i32 0, i32 %modifier) #8, !dbg !10755
  %36 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10757
  %call162 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop1.2, %struct.rtx_def* %36, i32 0, i32 %modifier) #8, !dbg !10758
  %37 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10759
  br label %cleanup3078, !dbg !10760

if.else163:                                       ; preds = %lor.lhs.false149
  %cmp164 = icmp eq i32 %bf.cast, 42, !dbg !10761
  br i1 %cmp164, label %if.then166, label %if.end173, !dbg !10763

if.then166:                                       ; preds = %if.else163
  %call167 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop0.1, %struct.rtx_def* %24, i32 0, i32 %modifier) #8, !dbg !10764
  %38 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10766
  %call168 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop1.2, %struct.rtx_def* %38, i32 0, i32 %modifier) #8, !dbg !10767
  %39 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10768
  %call169 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop2.3, %struct.rtx_def* %39, i32 0, i32 %modifier) #8, !dbg !10769
  %40 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10770
  br label %cleanup3078, !dbg !10771

if.end173:                                        ; preds = %if.else163, %land.end89
  %target.addr.0 = phi %struct.rtx_def* [ %target, %land.end89 ], [ null, %if.else163 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !10461, metadata !DIExpression()), !dbg !10672
  %cmp177 = icmp eq i32 %modifier, 1, !dbg !10772
  %or.cond18 = and i1 %27, %cmp177, !dbg !10774
  %target.addr.1 = select i1 %or.cond18, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !10774
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !10461, metadata !DIExpression()), !dbg !10672
  %call181 = tail call fastcc %struct.rtx_def* @get_subtarget(%struct.rtx_def* %target.addr.1) #8, !dbg !10775
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call181, metadata !10474, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !10475, metadata !DIExpression()), !dbg !10672
  %trunc65 = trunc i64 %bf.load to i16, !dbg !10776
  switch i16 %trunc65, label %sw.default3076 [
    i16 30, label %sw.bb182
    i16 141, label %sw.bb196
    i16 34, label %sw.bb210
    i16 32, label %sw.bb210
    i16 29, label %sw.bb271
    i16 36, label %sw.bb271
    i16 23, label %sw.bb458
    i16 27, label %sw.bb463
    i16 33, label %sw.bb525
    i16 24, label %sw.bb528
    i16 25, label %sw.bb552
    i16 26, label %sw.bb576
    i16 28, label %sw.bb638
    i16 120, label %sw.bb680
    i16 51, label %sw.bb751
    i16 49, label %sw.bb789
    i16 48, label %sw.bb789
    i16 47, label %sw.bb789
    i16 152, label %sw.bb877
    i16 45, label %sw.bb892
    i16 41, label %sw.bb1253
    i16 42, label %normal_inner_ref
    i16 46, label %normal_inner_ref
    i16 50, label %sw.bb2254
    i16 59, label %sw.bb2259
    i16 118, label %sw.bb2331
    i16 91, label %sw.bb2754
    i16 92, label %sw.bb2754
    i16 147, label %sw.bb2803
    i16 56, label %sw.bb2819
    i16 57, label %sw.bb2897
    i16 53, label %sw.bb2899
    i16 121, label %sw.bb3004
    i16 43, label %sw.bb3006
    i16 44, label %sw.bb3009
    i16 135, label %sw.bb3012
    i16 133, label %sw.bb3012
    i16 134, label %sw.bb3012
    i16 138, label %sw.bb3012
    i16 140, label %sw.bb3012
    i16 130, label %sw.bb3013
    i16 142, label %sw.bb3013
    i16 143, label %sw.bb3013
    i16 131, label %sw.bb3013
    i16 60, label %sw.bb3014
    i16 61, label %sw.bb3014
    i16 55, label %sw.bb3014
    i16 139, label %sw.bb3014
    i16 129, label %sw.bb3014
    i16 58, label %sw.bb3014
    i16 54, label %sw.bb3014
    i16 124, label %sw.bb3014
    i16 52, label %sw.bb3014
    i16 126, label %sw.bb3014
    i16 125, label %sw.bb3014
    i16 128, label %sw.bb3014
    i16 127, label %sw.bb3014
    i16 137, label %sw.bb3014
    i16 136, label %sw.bb3014
    i16 122, label %sw.bb3015
    i16 150, label %sw.bb3016
    i16 151, label %sw.bb3018
    i16 167, label %sw.bb3032
    i16 119, label %sw.bb3043
  ], !dbg !10776

sw.bb182:                                         ; preds = %if.end173
  %call183 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %exp) #6, !dbg !10777
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !10492, metadata !DIExpression()), !dbg !10778
  %call184 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %exp) #6, !dbg !10779
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call184, metadata !10467, metadata !DIExpression()), !dbg !10672
  %call185 = tail call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call184) #6, !dbg !10780
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call185, metadata !10467, metadata !DIExpression()), !dbg !10672
  %41 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !10781
  %cmp186 = icmp ne %union.tree_node* %call183, %41, !dbg !10783
  %cmp189 = icmp ne %union.tree_node* %call183, null, !dbg !10784
  %or.cond19 = and i1 %cmp186, %cmp189, !dbg !10785
  br i1 %or.cond19, label %if.then191, label %if.end194, !dbg !10785

if.then191:                                       ; preds = %sw.bb182
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call185, i64 0, i32 0, !dbg !10786
  %bf.load192 = load i32, i32* %42, align 8, !dbg !10787
  %bf.set = or i32 %bf.load192, 134217728, !dbg !10787
  store i32 %bf.set, i32* %42, align 8, !dbg !10787
  br label %if.end194, !dbg !10786

if.end194:                                        ; preds = %if.then191, %sw.bb182
  %call195 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 14, %struct.rtx_def* %call185) #6, !dbg !10788
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call195, metadata !10467, metadata !DIExpression()), !dbg !10672
  br label %cleanup3078

sw.bb196:                                         ; preds = %if.end173
  %43 = load i32, i32* @currently_expanding_to_rtl, align 4, !dbg !10789
  %tobool197 = icmp eq i32 %43, 0, !dbg !10789
  br i1 %tobool197, label %if.then198, label %if.end200, !dbg !10791

if.then198:                                       ; preds = %sw.bb196
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10792
  %44 = bitcast i32* %var to %union.tree_node**, !dbg !10792
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !10792
  %call199 = tail call %struct.rtx_def* @expand_expr_real_1(%union.tree_node* %45, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier, %struct.rtx_def** null) #8, !dbg !10793
  br label %cleanup3078, !dbg !10794

if.end200:                                        ; preds = %sw.bb196
  %call201 = tail call fastcc %union.gimple_statement_d* @get_gimple_for_ssa_name(%union.tree_node* %exp) #8, !dbg !10795
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call201, metadata !10495, metadata !DIExpression()), !dbg !10796
  %tobool202 = icmp eq %union.gimple_statement_d* %call201, null, !dbg !10797
  br i1 %tobool202, label %cleanup, label %if.then203, !dbg !10799

if.then203:                                       ; preds = %if.end200
  %call204 = tail call %union.tree_node* @gimple_assign_rhs_to_tree(%union.gimple_statement_d* nonnull %call201) #6, !dbg !10800
  %call205 = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %call204, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier, %struct.rtx_def** null) #8, !dbg !10801
  br label %cleanup, !dbg !10802

cleanup:                                          ; preds = %if.end200, %if.then203
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then203 ], [ true, %if.end200 ]
  %retval.0 = phi %struct.rtx_def* [ %call205, %if.then203 ], [ undef, %if.end200 ]
  br i1 %cleanup.dest.slot.0, label %cleanup.cont, label %cleanup3078

cleanup.cont:                                     ; preds = %cleanup
  %call207 = tail call fastcc %struct.rtx_def* @get_rtx_for_ssa_name(%union.tree_node* %exp) #8, !dbg !10803
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call207, metadata !10468, metadata !DIExpression()), !dbg !10672
  %var209 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10804
  %46 = bitcast i32* %var209 to %union.tree_node**, !dbg !10804
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8, !dbg !10804
  call void @llvm.dbg.value(metadata %union.tree_node* %47, metadata !10460, metadata !DIExpression()), !dbg !10672
  br label %expand_decl_rtl, !dbg !10805

sw.bb210:                                         ; preds = %if.end173, %if.end173
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10806
  %48 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !10806
  %cmp211 = icmp eq %union.tree_node* %48, null, !dbg !10808
  br i1 %cmp211, label %land.lhs.true213, label %if.end251, !dbg !10809

land.lhs.true213:                                 ; preds = %sw.bb210
  %49 = bitcast %union.tree_node** %type13 to i64**, !dbg !10810
  %50 = load i64*, i64** %49, align 8, !dbg !10810
  %bf.load217 = load i64, i64* %50, align 8, !dbg !10810
  %bf.cast219137 = and i64 %bf.load217, 65535, !dbg !10810
  %cmp220 = icmp eq i64 %bf.cast219137, 15, !dbg !10810
  %.cast138 = bitcast i64* %50 to %union.tree_node*, !dbg !10810
  br i1 %cmp220, label %cond.true222, label %cond.end230, !dbg !10810

cond.true222:                                     ; preds = %land.lhs.true213
  %type226 = getelementptr inbounds i64, i64* %50, i64 2, !dbg !10810
  %51 = bitcast i64* %type226 to %union.tree_node**, !dbg !10810
  %52 = load %union.tree_node*, %union.tree_node** %51, align 8, !dbg !10810
  br label %cond.end230, !dbg !10810

cond.end230:                                      ; preds = %land.lhs.true213, %cond.true222
  %cond231 = phi %union.tree_node* [ %52, %cond.true222 ], [ %.cast138, %land.lhs.true213 ], !dbg !10810
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10810
  %54 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !10810
  %cmp234 = icmp eq %union.tree_node* %54, null, !dbg !10810
  br i1 %cmp234, label %if.end251, label %land.lhs.true236, !dbg !10811

land.lhs.true236:                                 ; preds = %cond.end230
  %bf.load238 = load i64, i64* %3, align 8, !dbg !10812
  %bf.cast241139 = and i64 %bf.load238, 67108864, !dbg !10812
  %tobool242 = icmp eq i64 %bf.cast241139, 0, !dbg !10812
  br i1 %tobool242, label %lor.lhs.false243, label %if.then250, !dbg !10813

lor.lhs.false243:                                 ; preds = %land.lhs.true236
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10814
  %55 = bitcast i40* %decl_flag_1 to i64*, !dbg !10814
  %bf.load245 = load i64, i64* %55, align 8, !dbg !10814
  %bf.cast248140 = and i64 %bf.load245, 33554432, !dbg !10814
  %tobool249 = icmp eq i64 %bf.cast248140, 0, !dbg !10814
  br i1 %tobool249, label %if.end251, label %if.then250, !dbg !10815

if.then250:                                       ; preds = %lor.lhs.false243, %land.lhs.true236
  tail call void @layout_decl(%union.tree_node* %exp, i32 0) #6, !dbg !10816
  br label %if.end251, !dbg !10816

if.end251:                                        ; preds = %lor.lhs.false243, %cond.end230, %if.then250, %sw.bb210
  %56 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !10817
  %tobool252 = icmp eq i8 %56, 0, !dbg !10819
  br i1 %tobool252, label %land.lhs.true253, label %sw.bb271, !dbg !10820

land.lhs.true253:                                 ; preds = %if.end251
  %bf.load255 = load i64, i64* %3, align 8, !dbg !10821
  %bf.cast257136 = and i64 %bf.load255, 65535, !dbg !10822
  %cmp258 = icmp eq i64 %bf.cast257136, 32, !dbg !10822
  br i1 %cmp258, label %land.lhs.true260, label %sw.bb271, !dbg !10823

land.lhs.true260:                                 ; preds = %land.lhs.true253
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !10824
  %57 = bitcast i24* %tls_model to i32*, !dbg !10824
  %bf.load261 = load i32, i32* %57, align 8, !dbg !10824
  %bf.clear263 = and i32 %bf.load261, 49152, !dbg !10824
  %cmp264 = icmp eq i32 %bf.clear263, 0, !dbg !10824
  br i1 %cmp264, label %sw.bb271, label %if.then266, !dbg !10825

if.then266:                                       ; preds = %land.lhs.true260
  %call267 = tail call fastcc %union.tree_node* @emutls_var_address(%union.tree_node* %exp) #8, !dbg !10826
  %call268 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %cond, %union.tree_node* %call267) #6, !dbg !10828
  call void @llvm.dbg.value(metadata %union.tree_node* %call268, metadata !10460, metadata !DIExpression()), !dbg !10672
  %call269 = tail call %struct.rtx_def* @expand_expr_real_1(%union.tree_node* %call268, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier, %struct.rtx_def** null) #8, !dbg !10829
  br label %cleanup3078, !dbg !10830

sw.bb271:                                         ; preds = %land.lhs.true260, %if.end251, %land.lhs.true253, %if.end173, %if.end173
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10831
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !10831
  %tobool272 = icmp eq %struct.rtx_def* %58, null, !dbg !10831
  br i1 %tobool272, label %cond.false276, label %cond.true273, !dbg !10831

cond.true273:                                     ; preds = %sw.bb271
  br label %expand_decl_rtl, !dbg !10831

cond.false276:                                    ; preds = %sw.bb271
  tail call void @make_decl_rtl(%union.tree_node* %exp) #6, !dbg !10831
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !10831
  br label %expand_decl_rtl, !dbg !10831

expand_decl_rtl:                                  ; preds = %cond.true273, %cond.false276, %cleanup.cont
  %decl_rtl.0 = phi %struct.rtx_def* [ %call207, %cleanup.cont ], [ %58, %cond.true273 ], [ %59, %cond.false276 ], !dbg !10832
  %exp.addr.0 = phi %union.tree_node* [ %47, %cleanup.cont ], [ %exp, %cond.true273 ], [ %exp, %cond.false276 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !10460, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %decl_rtl.0, metadata !10468, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.label(metadata !10670), !dbg !10833
  %tobool281 = icmp eq %struct.rtx_def* %decl_rtl.0, null, !dbg !10834
  br i1 %tobool281, label %cond.true282, label %cond.end284, !dbg !10834

cond.true282:                                     ; preds = %expand_decl_rtl
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8451, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10834
  br label %cond.end284, !dbg !10834

cond.end284:                                      ; preds = %expand_decl_rtl, %cond.true282
  %call286 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %decl_rtl.0) #6, !dbg !10835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call286, metadata !10468, metadata !DIExpression()), !dbg !10672
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10836
  %bf.load288 = load i64, i64* %60, align 8, !dbg !10836
  %bf.cast291133 = and i64 %bf.load288, 16777216, !dbg !10836
  %tobool292 = icmp eq i64 %bf.cast291133, 0, !dbg !10836
  br i1 %tobool292, label %if.then293, label %if.end298, !dbg !10838

if.then293:                                       ; preds = %cond.end284
  tail call void @assemble_external(%union.tree_node* %exp.addr.0) #6, !dbg !10839
  %bf.load295 = load i64, i64* %60, align 8, !dbg !10841
  %bf.set297 = or i64 %bf.load295, 16777216, !dbg !10841
  store i64 %bf.set297, i64* %60, align 8, !dbg !10841
  br label %if.end298, !dbg !10842

if.end298:                                        ; preds = %cond.end284, %if.then293
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !10467, metadata !DIExpression()), !dbg !10672
  %call299 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %exp.addr.0) #6, !dbg !10843
  call void @llvm.dbg.value(metadata %union.tree_node* %call299, metadata !10477, metadata !DIExpression()), !dbg !10672
  %tobool300 = icmp eq %union.tree_node* %call299, null, !dbg !10844
  %61 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !10844
  %cmp302 = icmp eq %union.tree_node* %call299, %61, !dbg !10844
  %or.cond20 = or i1 %tobool300, %cmp302, !dbg !10844
  br i1 %or.cond20, label %cond.end320, label %lor.lhs.false304, !dbg !10844

lor.lhs.false304:                                 ; preds = %if.end298
  %bf.load306 = load i64, i64* %60, align 8, !dbg !10844
  %bf.cast309134 = and i64 %bf.load306, 67108864, !dbg !10844
  %tobool310 = icmp eq i64 %bf.cast309134, 0, !dbg !10844
  br i1 %tobool310, label %lor.lhs.false311, label %cond.end320, !dbg !10844

lor.lhs.false311:                                 ; preds = %lor.lhs.false304
  %bf.cast315135 = and i64 %bf.load306, 65535, !dbg !10844
  %cmp316 = icmp eq i64 %bf.cast315135, 29, !dbg !10844
  br i1 %cmp316, label %cond.end320, label %cond.true318, !dbg !10844

cond.true318:                                     ; preds = %lor.lhs.false311
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8473, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10844
  br label %cond.end320, !dbg !10844

cond.end320:                                      ; preds = %lor.lhs.false304, %lor.lhs.false311, %if.end298, %cond.true318
  %62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call286, i64 0, i32 0, !dbg !10845
  %bf.load322 = load i32, i32* %62, align 8, !dbg !10845
  %bf.clear323 = and i32 %bf.load322, 65535, !dbg !10845
  %cmp324 = icmp eq i32 %bf.clear323, 43, !dbg !10845
  br i1 %cmp324, label %land.lhs.true326, label %if.else334, !dbg !10847

land.lhs.true326:                                 ; preds = %cond.end320
  %arrayidx327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call286, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10848
  %63 = bitcast %union.rtunion_def* %arrayidx327 to i32**, !dbg !10848
  %64 = load i32*, i32** %63, align 8, !dbg !10848
  %bf.load328 = load i32, i32* %64, align 8, !dbg !10848
  %bf.clear329 = and i32 %bf.load328, 65535, !dbg !10848
  %cmp330 = icmp eq i32 %bf.clear329, 37, !dbg !10848
  br i1 %cmp330, label %if.then332, label %if.else334, !dbg !10849

if.then332:                                       ; preds = %land.lhs.true326
  %call333 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call286) #6, !dbg !10850
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call333, metadata !10467, metadata !DIExpression()), !dbg !10672
  br label %if.end388, !dbg !10851

if.else334:                                       ; preds = %land.lhs.true326, %cond.end320
  %cmp340 = icmp ne i32 %modifier, 4, !dbg !10852
  %or.cond21 = and i1 %cmp324, %cmp340, !dbg !10854
  br i1 %or.cond21, label %if.then342, label %if.end388, !dbg !10854

if.then342:                                       ; preds = %if.else334
  %tobool343 = icmp eq %struct.rtx_def** %alt_rtl, null, !dbg !10855
  br i1 %tobool343, label %if.end345, label %if.then344, !dbg !10858

if.then344:                                       ; preds = %if.then342
  store %struct.rtx_def* %call286, %struct.rtx_def** %alt_rtl, align 8, !dbg !10859
  br label %if.end345, !dbg !10860

if.end345:                                        ; preds = %if.then342, %if.then344
  %call346 = tail call %struct.rtx_def* @use_anchored_address(%struct.rtx_def* %call286) #6, !dbg !10861
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call346, metadata !10468, metadata !DIExpression()), !dbg !10672
  %65 = and i32 %modifier, -2, !dbg !10862
  %switch = icmp eq i32 %65, 2, !dbg !10862
  br i1 %switch, label %if.end388, label %land.lhs.true352, !dbg !10862

land.lhs.true352:                                 ; preds = %if.end345
  %mode354 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10864
  %66 = bitcast i40* %mode354 to i64*, !dbg !10864
  %bf.load355 = load i64, i64* %66, align 8, !dbg !10864
  %67 = trunc i64 %bf.load355 to i32, !dbg !10864
  %bf.cast357 = and i32 %67, 255, !dbg !10864
  %arrayidx360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call346, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10865
  %rt_rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**, !dbg !10865
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx361, align 8, !dbg !10865
  %69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call346, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10866
  %rt_mem = bitcast %union.rtunion_def* %69 to %struct.mem_attrs**, !dbg !10866
  %70 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !10866
  %cmp365 = icmp eq %struct.mem_attrs* %70, null, !dbg !10866
  br i1 %cmp365, label %cond.end374, label %cond.false368, !dbg !10866

cond.false368:                                    ; preds = %land.lhs.true352
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %70, i64 0, i32 5, !dbg !10866
  %71 = load i8, i8* %addrspace, align 8, !dbg !10866
  br label %cond.end374, !dbg !10866

cond.end374:                                      ; preds = %land.lhs.true352, %cond.false368
  %cond375 = phi i8 [ %71, %cond.false368 ], [ 0, %land.lhs.true352 ]
  %call377 = tail call i32 @memory_address_addr_space_p(i32 %bf.cast357, %struct.rtx_def* %68, i8 zeroext %cond375) #6, !dbg !10867
  %tobool378 = icmp eq i32 %call377, 0, !dbg !10867
  br i1 %tobool378, label %if.then379, label %if.end388, !dbg !10868

if.then379:                                       ; preds = %cond.end374
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx361, align 8, !dbg !10869
  %call384 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %72) #6, !dbg !10870
  %call385 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %call346, %struct.rtx_def* %call384) #6, !dbg !10871
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call385, metadata !10467, metadata !DIExpression()), !dbg !10672
  br label %if.end388, !dbg !10872

if.end388:                                        ; preds = %cond.end374, %if.end345, %if.else334, %if.then379, %if.then332
  %decl_rtl.2 = phi %struct.rtx_def* [ %call286, %if.then332 ], [ %call286, %if.else334 ], [ %call346, %if.end345 ], [ %call346, %if.then379 ], [ %call346, %cond.end374 ], !dbg !10832
  %temp.2 = phi %struct.rtx_def* [ %call333, %if.then332 ], [ null, %if.else334 ], [ null, %if.end345 ], [ %call385, %if.then379 ], [ null, %cond.end374 ], !dbg !10832
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.2, metadata !10467, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %decl_rtl.2, metadata !10468, metadata !DIExpression()), !dbg !10672
  %cmp389 = icmp eq %struct.rtx_def* %temp.2, null, !dbg !10873
  br i1 %cmp389, label %if.end412, label %if.then391, !dbg !10875

if.then391:                                       ; preds = %if.end388
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.2, i64 0, i32 0, !dbg !10876
  %bf.load392 = load i32, i32* %73, align 8, !dbg !10876
  %bf.clear393 = and i32 %bf.load392, 65535, !dbg !10876
  %cmp394 = icmp eq i32 %bf.clear393, 43, !dbg !10876
  br i1 %cmp394, label %land.lhs.true396, label %cleanup3078, !dbg !10879

land.lhs.true396:                                 ; preds = %if.then391
  %arrayidx399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %temp.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10880
  %74 = bitcast %union.rtunion_def* %arrayidx399 to i32**, !dbg !10880
  %75 = load i32*, i32** %74, align 8, !dbg !10880
  %bf.load401 = load i32, i32* %75, align 8, !dbg !10880
  %bf.clear402 = and i32 %bf.load401, 65535, !dbg !10880
  %cmp403 = icmp eq i32 %bf.clear402, 37, !dbg !10880
  br i1 %cmp403, label %if.then405, label %cleanup3078, !dbg !10881

if.then405:                                       ; preds = %land.lhs.true396
  %76 = bitcast i32* %75 to %struct.rtx_def*, !dbg !10881
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10882
  %77 = load i32, i32* %align, align 8, !dbg !10882
  tail call void @mark_reg_pointer(%struct.rtx_def* %76, i32 %77) #6, !dbg !10883
  br label %cleanup3078, !dbg !10883

if.end412:                                        ; preds = %if.end388
  %78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %decl_rtl.2, i64 0, i32 0, !dbg !10884
  %bf.load413 = load i32, i32* %78, align 8, !dbg !10884
  %bf.clear414 = and i32 %bf.load413, 65535, !dbg !10884
  %cmp415 = icmp eq i32 %bf.clear414, 37, !dbg !10884
  br i1 %cmp415, label %land.lhs.true417, label %cleanup3078, !dbg !10885

land.lhs.true417:                                 ; preds = %if.end412
  %bf.lshr419 = lshr i32 %bf.load413, 16, !dbg !10886
  %mode422 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10887
  %79 = bitcast i40* %mode422 to i64*, !dbg !10887
  %bf.load423 = load i64, i64* %79, align 8, !dbg !10887
  %80 = trunc i64 %bf.load423 to i32, !dbg !10887
  %81 = xor i32 %bf.lshr419, %80, !dbg !10888
  %82 = and i32 %81, 255, !dbg !10888
  %cmp426 = icmp eq i32 %82, 0, !dbg !10888
  br i1 %cmp426, label %cleanup3078, label %if.then428, !dbg !10889

if.then428:                                       ; preds = %land.lhs.true417
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !10470, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  %call429 = call i32 @promote_decl_mode(%union.tree_node* %exp.addr.0, i32* nonnull %unsignedp) #6, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %call429, metadata !10497, metadata !DIExpression()), !dbg !10891
  %bf.load430 = load i32, i32* %78, align 8, !dbg !10892
  %bf.lshr431 = lshr i32 %bf.load430, 16, !dbg !10892
  %bf.clear432 = and i32 %bf.lshr431, 255, !dbg !10892
  %cmp433 = icmp eq i32 %bf.clear432, %call429, !dbg !10892
  br i1 %cmp433, label %cond.end437, label %cond.true435, !dbg !10892

cond.true435:                                     ; preds = %if.then428
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8521, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10892
  br label %cond.end437, !dbg !10892

cond.end437:                                      ; preds = %if.then428, %cond.true435
  %call439 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %cond26, %struct.rtx_def* %decl_rtl.2) #6, !dbg !10893
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call439, metadata !10467, metadata !DIExpression()), !dbg !10672
  %83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call439, i64 0, i32 0, !dbg !10894
  %bf.load440 = load i32, i32* %83, align 8, !dbg !10895
  %bf.set442 = or i32 %bf.load440, 268435456, !dbg !10895
  store i32 %bf.set442, i32* %83, align 8, !dbg !10895
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call439, metadata !10500, metadata !DIExpression()), !dbg !10896
  %84 = load i32, i32* %unsignedp, align 4, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %84, metadata !10470, metadata !DIExpression()), !dbg !10672
  %cmp443 = icmp slt i32 %84, 0, !dbg !10897
  br i1 %cmp443, label %if.then445, label %if.else449, !dbg !10899

if.then445:                                       ; preds = %cond.end437
  %bf.set448 = or i32 %bf.load440, 402653184, !dbg !10897
  store i32 %bf.set448, i32* %83, align 8, !dbg !10897
  br label %cleanup3078, !dbg !10897

if.else449:                                       ; preds = %cond.end437
  %bf.clear447 = and i32 %bf.set442, -134217729, !dbg !10900
  store i32 %bf.clear447, i32* %83, align 8, !dbg !10901
  %85 = load i32, i32* %unsignedp, align 4, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %85, metadata !10470, metadata !DIExpression()), !dbg !10672
  %bf.value = shl i32 %85, 26, !dbg !10901
  %bf.shl = and i32 %bf.value, 67108864, !dbg !10901
  %bf.clear453 = and i32 %bf.set442, -201326593, !dbg !10901
  %bf.set454 = or i32 %bf.clear453, %bf.shl, !dbg !10901
  store i32 %bf.set454, i32* %83, align 8, !dbg !10901
  br label %cleanup3078

sw.bb458:                                         ; preds = %if.end173
  %int_cst459 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10903
  %low = bitcast i32* %int_cst459 to i64*, !dbg !10903
  %86 = load i64, i64* %low, align 8, !dbg !10903
  %high = getelementptr inbounds i32, i32* %int_cst459, i64 2, !dbg !10904
  %87 = bitcast i32* %high to i64*, !dbg !10904
  %88 = load i64, i64* %87, align 8, !dbg !10904
  %call462 = tail call %struct.rtx_def* @immed_double_const(i64 %86, i64 %88, i32 %cond26) #6, !dbg !10905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call462, metadata !10467, metadata !DIExpression()), !dbg !10672
  br label %cleanup3078, !dbg !10906

sw.bb463:                                         ; preds = %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10503, metadata !DIExpression()), !dbg !10907
  %idxprom464 = zext i32 %cond26 to i64, !dbg !10908
  %arrayidx465 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom464, !dbg !10908
  %89 = load i8, i8* %arrayidx465, align 1, !dbg !10908
  %cmp467 = icmp eq i8 %89, 12, !dbg !10910
  br i1 %cmp467, label %if.then499, label %lor.lhs.false469, !dbg !10911

lor.lhs.false469:                                 ; preds = %sw.bb463
  %cmp473 = icmp eq i8 %89, 17, !dbg !10912
  br i1 %cmp473, label %if.then499, label %lor.lhs.false475, !dbg !10913

lor.lhs.false475:                                 ; preds = %lor.lhs.false469
  %cmp479 = icmp eq i8 %89, 13, !dbg !10914
  br i1 %cmp479, label %if.then499, label %lor.lhs.false481, !dbg !10915

lor.lhs.false481:                                 ; preds = %lor.lhs.false475
  %cmp485 = icmp eq i8 %89, 14, !dbg !10916
  br i1 %cmp485, label %if.then499, label %lor.lhs.false487, !dbg !10917

lor.lhs.false487:                                 ; preds = %lor.lhs.false481
  %cmp491 = icmp eq i8 %89, 15, !dbg !10918
  br i1 %cmp491, label %if.then499, label %lor.lhs.false493, !dbg !10919

lor.lhs.false493:                                 ; preds = %lor.lhs.false487
  %cmp497 = icmp eq i8 %89, 16, !dbg !10920
  br i1 %cmp497, label %if.then499, label %if.end501, !dbg !10921

if.then499:                                       ; preds = %lor.lhs.false493, %lor.lhs.false487, %lor.lhs.false481, %lor.lhs.false475, %lor.lhs.false469, %sw.bb463
  %call500 = tail call fastcc %struct.rtx_def* @const_vector_from_tree(%union.tree_node* %exp) #8, !dbg !10922
  br label %cleanup3078, !dbg !10923

if.end501:                                        ; preds = %lor.lhs.false493
  %cmp505 = icmp eq i8 %89, 2, !dbg !10924
  br i1 %cmp505, label %if.then507, label %if.end513, !dbg !10925

if.then507:                                       ; preds = %if.end501
  %90 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !10926
  %call508 = tail call %union.tree_node* %90(i32 %cond26, i32 1) #6, !dbg !10927
  call void @llvm.dbg.value(metadata %union.tree_node* %call508, metadata !10505, metadata !DIExpression()), !dbg !10928
  %tobool509 = icmp eq %union.tree_node* %call508, null, !dbg !10929
  br i1 %tobool509, label %if.end513, label %if.then510, !dbg !10931

if.then510:                                       ; preds = %if.then507
  %call511 = tail call %union.tree_node* @fold_unary_loc(i32 %cond, i32 118, %union.tree_node* nonnull %call508, %union.tree_node* %exp) #6, !dbg !10932
  call void @llvm.dbg.value(metadata %union.tree_node* %call511, metadata !10503, metadata !DIExpression()), !dbg !10907
  br label %if.end513, !dbg !10933

if.end513:                                        ; preds = %if.then507, %if.then510, %if.end501
  %tmp.1 = phi %union.tree_node* [ null, %if.end501 ], [ %call511, %if.then510 ], [ null, %if.then507 ], !dbg !10907
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp.1, metadata !10503, metadata !DIExpression()), !dbg !10907
  %tobool514 = icmp eq %union.tree_node* %tmp.1, null, !dbg !10934
  br i1 %tobool514, label %if.then515, label %if.end517, !dbg !10936

if.then515:                                       ; preds = %if.end513
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10937
  %91 = bitcast i32* %elements to %union.tree_node**, !dbg !10937
  %92 = load %union.tree_node*, %union.tree_node** %91, align 8, !dbg !10937
  %call516 = tail call %union.tree_node* @build_constructor_from_list(%union.tree_node* %9, %union.tree_node* %92) #6, !dbg !10938
  call void @llvm.dbg.value(metadata %union.tree_node* %call516, metadata !10503, metadata !DIExpression()), !dbg !10907
  br label %if.end517, !dbg !10939

if.end517:                                        ; preds = %if.end513, %if.then515
  %tmp.2 = phi %union.tree_node* [ %tmp.1, %if.end513 ], [ %call516, %if.then515 ], !dbg !10907
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp.2, metadata !10503, metadata !DIExpression()), !dbg !10907
  %93 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10940
  %cond522 = select i1 %25, %struct.rtx_def* %93, %struct.rtx_def* %target.addr.1, !dbg !10940
  %call523 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %tmp.2, %struct.rtx_def* %cond522, i32 %tmode, i32 %modifier) #8, !dbg !10941
  br label %cleanup3078, !dbg !10942

sw.bb525:                                         ; preds = %if.end173
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !10943
  %94 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !10943
  %call527 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %94, %struct.rtx_def* %target.addr.1, i32 0, i32 %modifier) #8, !dbg !10944
  br label %cleanup3078, !dbg !10945

sw.bb528:                                         ; preds = %if.end173
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10946
  %95 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !10946
  %96 = load %struct.real_value*, %struct.real_value** %95, align 8, !dbg !10946
  %97 = bitcast %union.tree_node** %type13 to i64**, !dbg !10946
  %98 = load i64*, i64** %97, align 8, !dbg !10946
  %bf.load532 = load i64, i64* %98, align 8, !dbg !10946
  %bf.cast534131 = and i64 %bf.load532, 65535, !dbg !10946
  %cmp535 = icmp eq i64 %bf.cast534131, 14, !dbg !10946
  br i1 %cmp535, label %cond.true537, label %cond.false541, !dbg !10946

cond.true537:                                     ; preds = %sw.bb528
  %.cast132 = bitcast i64* %98 to %union.tree_node*, !dbg !10946
  %call540 = tail call i32 @vector_type_mode(%union.tree_node* %.cast132) #6, !dbg !10946
  br label %cond.end549, !dbg !10946

cond.false541:                                    ; preds = %sw.bb528
  %type544 = bitcast i64* %98 to %struct.tree_type*, !dbg !10946
  %mode545 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type544, i64 0, i32 6, !dbg !10946
  %bf.load546 = load i32, i32* %mode545, align 4, !dbg !10946
  %bf.lshr547 = lshr i32 %bf.load546, 16, !dbg !10946
  %bf.clear548 = and i32 %bf.lshr547, 255, !dbg !10946
  br label %cond.end549, !dbg !10946

cond.end549:                                      ; preds = %cond.false541, %cond.true537
  %cond550 = phi i32 [ %call540, %cond.true537 ], [ %bf.clear548, %cond.false541 ], !dbg !10946
  %call551 = tail call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %96, i32 %cond550) #6, !dbg !10946
  br label %cleanup3078, !dbg !10947

sw.bb552:                                         ; preds = %if.end173
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10948
  %99 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !10948
  %100 = load %struct.fixed_value*, %struct.fixed_value** %99, align 8, !dbg !10948
  %101 = bitcast %union.tree_node** %type13 to i64**, !dbg !10948
  %102 = load i64*, i64** %101, align 8, !dbg !10948
  %bf.load556 = load i64, i64* %102, align 8, !dbg !10948
  %bf.cast558129 = and i64 %bf.load556, 65535, !dbg !10948
  %cmp559 = icmp eq i64 %bf.cast558129, 14, !dbg !10948
  br i1 %cmp559, label %cond.true561, label %cond.false565, !dbg !10948

cond.true561:                                     ; preds = %sw.bb552
  %.cast130 = bitcast i64* %102 to %union.tree_node*, !dbg !10948
  %call564 = tail call i32 @vector_type_mode(%union.tree_node* %.cast130) #6, !dbg !10948
  br label %cond.end573, !dbg !10948

cond.false565:                                    ; preds = %sw.bb552
  %type568 = bitcast i64* %102 to %struct.tree_type*, !dbg !10948
  %mode569 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type568, i64 0, i32 6, !dbg !10948
  %bf.load570 = load i32, i32* %mode569, align 4, !dbg !10948
  %bf.lshr571 = lshr i32 %bf.load570, 16, !dbg !10948
  %bf.clear572 = and i32 %bf.lshr571, 255, !dbg !10948
  br label %cond.end573, !dbg !10948

cond.end573:                                      ; preds = %cond.false565, %cond.true561
  %cond574 = phi i32 [ %call564, %cond.true561 ], [ %bf.clear572, %cond.false565 ], !dbg !10948
  %call575 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* byval(%struct.fixed_value) align 8 %100, i32 %cond574) #6, !dbg !10948
  br label %cleanup3078, !dbg !10949

sw.bb576:                                         ; preds = %if.end173
  %tobool577 = icmp eq %struct.rtx_def* %target.addr.1, null, !dbg !10950
  br i1 %tobool577, label %sw.bb638, label %land.lhs.true578, !dbg !10951

land.lhs.true578:                                 ; preds = %sw.bb576
  %103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.1, i64 0, i32 0, !dbg !10952
  %bf.load579 = load i32, i32* %103, align 8, !dbg !10952
  %bf.clear580 = and i32 %bf.load579, 65535, !dbg !10952
  %cmp581 = icmp eq i32 %bf.clear580, 41, !dbg !10953
  br i1 %cmp581, label %if.then583, label %sw.bb638, !dbg !10954

if.then583:                                       ; preds = %land.lhs.true578
  %104 = bitcast %union.tree_node** %type13 to %struct.tree_common**, !dbg !10955
  %105 = load %struct.tree_common*, %struct.tree_common** %104, align 8, !dbg !10955
  %type588 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %105, i64 0, i32 2, !dbg !10955
  %106 = bitcast %union.tree_node** %type588 to i64**, !dbg !10955
  %107 = load i64*, i64** %106, align 8, !dbg !10955
  %bf.load590 = load i64, i64* %107, align 8, !dbg !10955
  %bf.cast592128 = and i64 %bf.load590, 65535, !dbg !10955
  %cmp593 = icmp eq i64 %bf.cast592128, 14, !dbg !10955
  br i1 %cmp593, label %cond.true595, label %cond.false601, !dbg !10955

cond.true595:                                     ; preds = %if.then583
  %108 = bitcast i64* %107 to %union.tree_node*, !dbg !10955
  %call600 = tail call i32 @vector_type_mode(%union.tree_node* %108) #6, !dbg !10955
  br label %cond.end611, !dbg !10955

cond.false601:                                    ; preds = %if.then583
  %type606 = bitcast i64* %107 to %struct.tree_type*, !dbg !10955
  %mode607 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type606, i64 0, i32 6, !dbg !10955
  %bf.load608 = load i32, i32* %mode607, align 4, !dbg !10955
  %bf.lshr609 = lshr i32 %bf.load608, 16, !dbg !10955
  %bf.clear610 = and i32 %bf.lshr609, 255, !dbg !10955
  br label %cond.end611, !dbg !10955

cond.end611:                                      ; preds = %cond.false601, %cond.true595
  %cond612 = phi i32 [ %call600, %cond.true595 ], [ %bf.clear610, %cond.false601 ], !dbg !10955
  call void @llvm.dbg.value(metadata i32 %cond612, metadata !10508, metadata !DIExpression()), !dbg !10956
  %arrayidx615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10957
  %rt_rtx616 = bitcast %union.rtunion_def* %arrayidx615 to %struct.rtx_def**, !dbg !10957
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx616, align 8, !dbg !10957
  call void @llvm.dbg.value(metadata %struct.rtx_def* %109, metadata !10511, metadata !DIExpression()), !dbg !10956
  %110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10958
  %rt_rtx620 = bitcast %union.rtunion_def* %110 to %struct.rtx_def**, !dbg !10958
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx620, align 8, !dbg !10958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %111, metadata !10512, metadata !DIExpression()), !dbg !10956
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10959
  %112 = bitcast i32* %real to %union.tree_node**, !dbg !10959
  %113 = load %union.tree_node*, %union.tree_node** %112, align 8, !dbg !10959
  %call621 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %113, %struct.rtx_def* %109, i32 %cond612, i32 0) #8, !dbg !10960
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call621, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call621, %struct.rtx_def** %op0, align 8, !dbg !10961
  %114 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10962
  %115 = load %union.tree_node*, %union.tree_node** %114, align 8, !dbg !10962
  %call623 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %115, %struct.rtx_def* %111, i32 %cond612, i32 0) #8, !dbg !10963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call623, metadata !10466, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call623, %struct.rtx_def** %op1, align 8, !dbg !10964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call621, metadata !10465, metadata !DIExpression()), !dbg !10672
  %cmp624 = icmp eq %struct.rtx_def* %call621, %109, !dbg !10965
  br i1 %cmp624, label %if.end628, label %if.then626, !dbg !10967

if.then626:                                       ; preds = %cond.end611
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call621, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call627 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %109, %struct.rtx_def* %call621) #8, !dbg !10968
  br label %if.end628, !dbg !10968

if.end628:                                        ; preds = %cond.end611, %if.then626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call623, metadata !10466, metadata !DIExpression()), !dbg !10672
  %cmp629 = icmp eq %struct.rtx_def* %call623, %111, !dbg !10969
  br i1 %cmp629, label %cleanup3078, label %if.then631, !dbg !10971

if.then631:                                       ; preds = %if.end628
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call623, metadata !10466, metadata !DIExpression()), !dbg !10672
  %call632 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %111, %struct.rtx_def* %call623) #8, !dbg !10972
  br label %cleanup3078, !dbg !10972

sw.bb638:                                         ; preds = %sw.bb576, %land.lhs.true578, %if.end173
  %call639 = tail call fastcc %struct.rtx_def* @expand_expr_constant(%union.tree_node* %exp, i32 1, i32 %modifier) #8, !dbg !10973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call639, metadata !10467, metadata !DIExpression()), !dbg !10672
  %modifier.off53 = add i32 %modifier, -2, !dbg !10974
  %switch54 = icmp ult i32 %modifier.off53, 3, !dbg !10974
  br i1 %switch54, label %cleanup3078, label %land.lhs.true648, !dbg !10974

land.lhs.true648:                                 ; preds = %sw.bb638
  %arrayidx651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call639, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !10976
  %rt_rtx652 = bitcast %union.rtunion_def* %arrayidx651 to %struct.rtx_def**, !dbg !10976
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx652, align 8, !dbg !10976
  %117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call639, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10977
  %rt_mem656 = bitcast %union.rtunion_def* %117 to %struct.mem_attrs**, !dbg !10977
  %118 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem656, align 8, !dbg !10977
  %cmp657 = icmp eq %struct.mem_attrs* %118, null, !dbg !10977
  br i1 %cmp657, label %cond.end667, label %cond.false660, !dbg !10977

cond.false660:                                    ; preds = %land.lhs.true648
  %addrspace665 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %118, i64 0, i32 5, !dbg !10977
  %119 = load i8, i8* %addrspace665, align 8, !dbg !10977
  br label %cond.end667, !dbg !10977

cond.end667:                                      ; preds = %land.lhs.true648, %cond.false660
  %cond668 = phi i8 [ %119, %cond.false660 ], [ 0, %land.lhs.true648 ]
  %call670 = tail call i32 @memory_address_addr_space_p(i32 %cond26, %struct.rtx_def* %116, i8 zeroext %cond668) #6, !dbg !10978
  %tobool671 = icmp eq i32 %call670, 0, !dbg !10978
  br i1 %tobool671, label %if.then672, label %cleanup3078, !dbg !10979

if.then672:                                       ; preds = %cond.end667
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx652, align 8, !dbg !10980
  %call677 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %120) #6, !dbg !10981
  %call678 = tail call %struct.rtx_def* @replace_equiv_address(%struct.rtx_def* %call639, %struct.rtx_def* %call677) #6, !dbg !10982
  br label %cleanup3078, !dbg !10983

sw.bb680:                                         ; preds = %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop0.1, metadata !10513, metadata !DIExpression()), !dbg !10984
  %call681 = tail call %struct.rtx_def* @expand_expr_real_1(%union.tree_node* %treeop0.1, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier, %struct.rtx_def** %alt_rtl) #8, !dbg !10985
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call681, metadata !10515, metadata !DIExpression()), !dbg !10984
  %bf.load683 = load i64, i64* %3, align 8, !dbg !10986
  %bf.cast686127 = and i64 %bf.load683, 134217728, !dbg !10986
  %tobool687 = icmp eq i64 %bf.cast686127, 0, !dbg !10986
  br i1 %tobool687, label %if.then688, label %cleanup3078, !dbg !10988

if.then688:                                       ; preds = %sw.bb680
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call681, i64 0, i32 0, !dbg !10989
  %bf.load689 = load i32, i32* %121, align 8, !dbg !10989
  %bf.clear691 = and i32 %bf.load689, 16711680, !dbg !10989
  %cmp692 = icmp eq i32 %bf.clear691, 65536, !dbg !10989
  br i1 %cmp692, label %cond.true694, label %cond.end696, !dbg !10989

cond.true694:                                     ; preds = %if.then688
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8631, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !10989
  %bf.load699.pre = load i64, i64* %3, align 8, !dbg !10991
  br label %cond.end696, !dbg !10989

cond.end696:                                      ; preds = %if.then688, %cond.true694
  %bf.load708 = phi i64 [ %bf.load683, %if.then688 ], [ %bf.load699.pre, %cond.true694 ], !dbg !10991
  %bf.cast701 = and i64 %bf.load708, 65535, !dbg !10991
  %arrayidx703 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast701, !dbg !10991
  %122 = load i32, i32* %arrayidx703, align 4, !dbg !10991
  %cmp704 = icmp ugt i32 %122, 3, !dbg !10991
  br i1 %cmp704, label %land.lhs.true706, label %cond.end719, !dbg !10991

land.lhs.true706:                                 ; preds = %cond.end696
  %cmp713 = icmp ult i32 %122, 11, !dbg !10991
  br i1 %cmp713, label %cond.true715, label %cond.end719, !dbg !10991

cond.true715:                                     ; preds = %land.lhs.true706
  %123 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10991
  %124 = load i32, i32* %123, align 8, !dbg !10991
  br label %cond.end719, !dbg !10991

cond.end719:                                      ; preds = %cond.end696, %land.lhs.true706, %cond.true715
  %cond720 = phi i32 [ %124, %cond.true715 ], [ 0, %land.lhs.true706 ], [ 0, %cond.end696 ], !dbg !10991
  %125 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !10991
  %call723 = tail call %union.tree_node* @build_decl_stat(i32 %cond720, i32 32, %union.tree_node* null, %union.tree_node* %125) #6, !dbg !10991
  call void @llvm.dbg.value(metadata %union.tree_node* %call723, metadata !10513, metadata !DIExpression()), !dbg !10984
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call723, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10992
  %126 = bitcast i40* %artificial_flag to i64*, !dbg !10992
  %bf.load725 = load i64, i64* %126, align 8, !dbg !10993
  %bf.set731 = or i64 %bf.load725, 5120, !dbg !10994
  store i64 %bf.set731, i64* %126, align 8, !dbg !10994
  call void @llvm.dbg.value(metadata %union.tree_node* %call723, metadata !10489, metadata !DIExpression()), !dbg !10672
  %operands733 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10995
  store %union.tree_node* %call723, %union.tree_node** %operands733, align 8, !dbg !10996
  %bf.load736 = load i64, i64* %3, align 8, !dbg !10997
  %bf.set738 = or i64 %bf.load736, 134217728, !dbg !10997
  store i64 %bf.set738, i64* %3, align 8, !dbg !10997
  %bf.load739 = load i32, i32* %121, align 8, !dbg !10998
  %bf.clear740 = and i32 %bf.load739, 65535, !dbg !10998
  %idxprom741 = zext i32 %bf.clear740 to i64, !dbg !10998
  %arrayidx742 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom741, !dbg !10998
  %127 = load i32, i32* %arrayidx742, align 4, !dbg !10998
  %cmp743 = icmp eq i32 %127, 9, !dbg !10998
  br i1 %cmp743, label %if.end747, label %if.then745, !dbg !11000

if.then745:                                       ; preds = %cond.end719
  %call746 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call681) #6, !dbg !11001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call746, metadata !10515, metadata !DIExpression()), !dbg !10984
  br label %if.end747, !dbg !11002

if.end747:                                        ; preds = %if.then745, %cond.end719
  %ret.0 = phi %struct.rtx_def* [ %call681, %cond.end719 ], [ %call746, %if.then745 ], !dbg !10984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %ret.0, metadata !10515, metadata !DIExpression()), !dbg !10984
  tail call void @set_decl_rtl(%union.tree_node* %call723, %struct.rtx_def* %ret.0) #6, !dbg !11003
  br label %cleanup3078, !dbg !11004

sw.bb751:                                         ; preds = %if.end173
  br i1 %25, label %for.cond.preheader, label %if.end787, !dbg !11005

for.cond.preheader:                               ; preds = %sw.bb751
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11006
  %128 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !11006
  br label %for.cond, !dbg !11009

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %idx.0 = phi i64 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !11010
  %value.0 = phi %union.tree_node* [ %value.1, %for.body ], [ undef, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !10519, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !10516, metadata !DIExpression()), !dbg !11011
  %129 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %128, align 8, !dbg !11012
  %tobool754 = icmp eq %struct.VEC_constructor_elt_gc* %129, null, !dbg !11012
  br i1 %tobool754, label %cond.end760, label %cond.true755, !dbg !11012

cond.true755:                                     ; preds = %for.cond
  %base758 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %129, i64 0, i32 0, !dbg !11012
  br label %cond.end760, !dbg !11012

cond.end760:                                      ; preds = %for.cond, %cond.true755
  %cond761 = phi %struct.VEC_constructor_elt_base* [ %base758, %cond.true755 ], [ null, %for.cond ], !dbg !11012
  %call762 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond761) #8, !dbg !11012
  %conv763 = zext i32 %call762 to i64, !dbg !11012
  %cmp764 = icmp ult i64 %idx.0, %conv763, !dbg !11012
  br i1 %cmp764, label %cond.false767, label %cond.end781, !dbg !11012

cond.false767:                                    ; preds = %cond.end760
  %130 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %128, align 8, !dbg !11012
  %tobool770 = icmp eq %struct.VEC_constructor_elt_gc* %130, null, !dbg !11012
  br i1 %tobool770, label %cond.end776, label %cond.true771, !dbg !11012

cond.true771:                                     ; preds = %cond.false767
  %base774 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %130, i64 0, i32 0, !dbg !11012
  br label %cond.end776, !dbg !11012

cond.end776:                                      ; preds = %cond.false767, %cond.true771
  %cond777 = phi %struct.VEC_constructor_elt_base* [ %base774, %cond.true771 ], [ null, %cond.false767 ], !dbg !11012
  %conv778 = trunc i64 %idx.0 to i32, !dbg !11012
  %call779 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond777, i32 %conv778) #8, !dbg !11012
  %value780 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call779, i64 0, i32 1, !dbg !11012
  %131 = load %union.tree_node*, %union.tree_node** %value780, align 8, !dbg !11012
  call void @llvm.dbg.value(metadata %union.tree_node* %131, metadata !10519, metadata !DIExpression()), !dbg !11011
  br label %cond.end781, !dbg !11012

cond.end781:                                      ; preds = %cond.end760, %cond.end776
  %value.1 = phi %union.tree_node* [ %131, %cond.end776 ], [ %value.0, %cond.end760 ]
  %cond782 = phi i1 [ true, %cond.end776 ], [ false, %cond.end760 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !10519, metadata !DIExpression()), !dbg !11011
  %132 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11011
  br i1 %cond782, label %for.body, label %cleanup3078.loopexit, !dbg !11009

for.body:                                         ; preds = %cond.end781
  %call784 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %value.1, %struct.rtx_def* %132, i32 0, i32 0) #8, !dbg !11013
  %inc = add i64 %idx.0, 1, !dbg !11012
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10516, metadata !DIExpression()), !dbg !11011
  br label %for.cond, !dbg !11012, !llvm.loop !11014

if.end787:                                        ; preds = %sw.bb751
  %call788 = tail call fastcc %struct.rtx_def* @expand_constructor(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, i32 %modifier, i8 zeroext 0) #8, !dbg !11016
  br label %cleanup3078, !dbg !11017

sw.bb789:                                         ; preds = %if.end173, %if.end173, %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop0.1, metadata !10520, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i8 0, metadata !10522, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i32 16, metadata !10523, metadata !DIExpression()), !dbg !11018
  %cmp790 = icmp eq i32 %modifier, 5, !dbg !11019
  br i1 %cmp790, label %if.end801, label %if.then792, !dbg !11020

if.then792:                                       ; preds = %sw.bb789
  %call793 = tail call %union.tree_node* @fold_read_from_constant_string(%union.tree_node* %exp) #6, !dbg !11021
  call void @llvm.dbg.value(metadata %union.tree_node* %call793, metadata !10524, metadata !DIExpression()), !dbg !11022
  %tobool794 = icmp eq %union.tree_node* %call793, null, !dbg !11023
  br i1 %tobool794, label %cleanup798, label %if.then795, !dbg !11025

if.then795:                                       ; preds = %if.then792
  %call796 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* nonnull %call793, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier) #8, !dbg !11026
  br label %cleanup798, !dbg !11027

cleanup798:                                       ; preds = %if.then792, %if.then795
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then795 ], [ true, %if.then792 ]
  %retval.2 = phi %struct.rtx_def* [ %call796, %if.then795 ], [ undef, %if.then792 ]
  br i1 %cleanup.dest.slot.1, label %if.end801, label %cleanup3078

if.end801:                                        ; preds = %sw.bb789, %cleanup798
  %type803 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11028
  %133 = bitcast %union.tree_node** %type803 to i64**, !dbg !11028
  %134 = load i64*, i64** %133, align 8, !dbg !11028
  %bf.load805 = load i64, i64* %134, align 8, !dbg !11028
  %bf.cast807125 = and i64 %bf.load805, 65535, !dbg !11028
  %cmp808 = icmp eq i64 %bf.cast807125, 10, !dbg !11028
  br i1 %cmp808, label %if.then819, label %lor.lhs.false810, !dbg !11028

lor.lhs.false810:                                 ; preds = %if.end801
  %cmp817 = icmp eq i64 %bf.cast807125, 12, !dbg !11028
  br i1 %cmp817, label %if.then819, label %if.end830, !dbg !11030

if.then819:                                       ; preds = %lor.lhs.false810, %if.end801
  %type823 = getelementptr inbounds i64, i64* %134, i64 2, !dbg !11031
  %135 = bitcast i64* %type823 to i64**, !dbg !11031
  %136 = load i64*, i64** %135, align 8, !dbg !11031
  %bf.load825 = load i64, i64* %136, align 8, !dbg !11031
  %bf.lshr826 = lshr i64 %bf.load825, 56, !dbg !11031
  %conv828 = trunc i64 %bf.lshr826 to i8, !dbg !11031
  call void @llvm.dbg.value(metadata i8 %conv828, metadata !10522, metadata !DIExpression()), !dbg !11018
  %137 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !11033
  %call829 = tail call i32 %137(i8 zeroext %conv828) #6, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %call829, metadata !10523, metadata !DIExpression()), !dbg !11018
  br label %if.end830, !dbg !11035

if.end830:                                        ; preds = %if.then819, %lor.lhs.false810
  %as.0 = phi i8 [ %conv828, %if.then819 ], [ 0, %lor.lhs.false810 ], !dbg !11018
  %address_mode.0 = phi i32 [ %call829, %if.then819 ], [ 16, %lor.lhs.false810 ], !dbg !11018
  call void @llvm.dbg.value(metadata i32 %address_mode.0, metadata !10523, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i8 %as.0, metadata !10522, metadata !DIExpression()), !dbg !11018
  %call831 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop0.1, %struct.rtx_def* null, i32 0, i32 2) #8, !dbg !11036
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call831, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call831, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call832 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %cond26, %struct.rtx_def* %call831, i8 zeroext %as.0) #6, !dbg !11037
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call832, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call832, %struct.rtx_def** %op0, align 8, !dbg !11038
  %cmp833 = icmp eq i32 %bf.cast, 48, !dbg !11039
  br i1 %cmp833, label %if.then835, label %if.end843, !dbg !11040

if.then835:                                       ; preds = %if.end830
  %138 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11041
  %139 = load i32, i32* %138, align 8, !dbg !11041
  %div = lshr i32 %139, 3, !dbg !11041
  call void @llvm.dbg.value(metadata i32 %div, metadata !10527, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call832, metadata !10465, metadata !DIExpression()), !dbg !10672
  %sub = sub nsw i32 0, %div, !dbg !11043
  %conv839 = sext i32 %sub to i64, !dbg !11043
  %call840 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv839) #6, !dbg !11043
  %call841 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 %address_mode.0, %struct.rtx_def* %call832, %struct.rtx_def* %call840) #6, !dbg !11043
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call841, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call841, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call842 = tail call %struct.rtx_def* @memory_address_addr_space(i32 %cond26, %struct.rtx_def* %call841, i8 zeroext %as.0) #6, !dbg !11044
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call842, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call842, %struct.rtx_def** %op0, align 8, !dbg !11045
  br label %if.end843, !dbg !11046

if.end843:                                        ; preds = %if.then835, %if.end830
  %140 = phi %struct.rtx_def* [ %call842, %if.then835 ], [ %call832, %if.end830 ], !dbg !11047
  call void @llvm.dbg.value(metadata %struct.rtx_def* %140, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call844 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %cond26, %struct.rtx_def* %140) #6, !dbg !11048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call844, metadata !10467, metadata !DIExpression()), !dbg !10672
  tail call void @set_mem_attributes(%struct.rtx_def* %call844, %union.tree_node* %exp, i32 0) #6, !dbg !11049
  tail call void @set_mem_addr_space(%struct.rtx_def* %call844, i8 zeroext %as.0) #6, !dbg !11050
  %cmp845 = icmp eq i32 %bf.cast, 49, !dbg !11051
  br i1 %cmp845, label %if.then847, label %cleanup3078, !dbg !11052

if.then847:                                       ; preds = %if.end843
  %switch55 = icmp ult i32 %modifier, 2, !dbg !11053
  br i1 %switch55, label %cond.end855, label %cond.true853, !dbg !11053

cond.true853:                                     ; preds = %if.then847
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8712, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11053
  br label %cond.end855, !dbg !11053

cond.end855:                                      ; preds = %if.then847, %cond.true853
  %idxprom857 = sext i32 %cond26 to i64, !dbg !11054
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 62, i32 4, i64 %idxprom857, i32 0, !dbg !11055
  %141 = load i32, i32* %insn_code, align 4, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %141, metadata !10530, metadata !DIExpression()), !dbg !11056
  %cmp859 = icmp eq i32 %141, 2956, !dbg !11057
  br i1 %cmp859, label %cond.true861, label %cond.end863, !dbg !11057

cond.true861:                                     ; preds = %cond.end855
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8716, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11057
  br label %cond.end863, !dbg !11057

cond.end863:                                      ; preds = %cond.end855, %cond.true861
  %call865 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond26) #6, !dbg !11058
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call865, metadata !10533, metadata !DIExpression()), !dbg !11056
  %idxprom866 = sext i32 %141 to i64, !dbg !11059
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom866, i32 2, !dbg !11059
  %142 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !11059
  %call868 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %142(%struct.rtx_def* %call865, %struct.rtx_def* %call844) #6, !dbg !11059
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call868, metadata !10534, metadata !DIExpression()), !dbg !11056
  %call869 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call868) #6, !dbg !11060
  br label %cleanup3078

sw.bb877:                                         ; preds = %if.end173
  %143 = bitcast %union.tree_node** %type13 to i64**, !dbg !11061
  %144 = load i64*, i64** %143, align 8, !dbg !11061
  %bf.load882 = load i64, i64* %144, align 8, !dbg !11061
  %bf.lshr883 = lshr i64 %bf.load882, 56, !dbg !11061
  %conv885 = trunc i64 %bf.lshr883 to i8, !dbg !11061
  call void @llvm.dbg.value(metadata i8 %conv885, metadata !10535, metadata !DIExpression()), !dbg !11062
  %145 = bitcast %struct.mem_address* %addr to i8*, !dbg !11063
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #7, !dbg !11063
  call void @llvm.dbg.value(metadata %struct.mem_address* %addr, metadata !10537, metadata !DIExpression(DW_OP_deref)), !dbg !11062
  call void @get_address_description(%union.tree_node* %exp, %struct.mem_address* nonnull %addr) #6, !dbg !11064
  call void @llvm.dbg.value(metadata %struct.mem_address* %addr, metadata !10537, metadata !DIExpression(DW_OP_deref)), !dbg !11062
  %call886 = call %struct.rtx_def* @addr_for_mem_ref(%struct.mem_address* nonnull %addr, i8 zeroext %conv885, i8 zeroext 1) #6, !dbg !11065
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call886, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call886, %struct.rtx_def** %op0, align 8, !dbg !11066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call886, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call887 = call %struct.rtx_def* @memory_address_addr_space(i32 %cond26, %struct.rtx_def* %call886, i8 zeroext %conv885) #6, !dbg !11067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call887, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call887, %struct.rtx_def** %op0, align 8, !dbg !11068
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call887, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call888 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond26, %struct.rtx_def* %call887) #6, !dbg !11069
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call888, metadata !10467, metadata !DIExpression()), !dbg !10672
  %operands890 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11070
  %arrayidx891 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands890, i64 5, !dbg !11070
  %146 = load %union.tree_node*, %union.tree_node** %arrayidx891, align 8, !dbg !11070
  call void @set_mem_attributes(%struct.rtx_def* %call888, %union.tree_node* %146, i32 0) #6, !dbg !11071
  call void @set_mem_addr_space(%struct.rtx_def* %call888, i8 zeroext %conv885) #6, !dbg !11072
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #7, !dbg !11073
  br label %cleanup3078, !dbg !11074

sw.bb892:                                         ; preds = %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop0.1, metadata !10545, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.2, metadata !10547, metadata !DIExpression()), !dbg !11075
  switch i32 %modifier, label %if.then901 [
    i32 3, label %if.end911
    i32 4, label %if.end911
    i32 6, label %if.end911
  ], !dbg !11076

if.then901:                                       ; preds = %sw.bb892
  %call903 = tail call %union.tree_node* @fold_read_from_constant_string(%union.tree_node* %exp) #6, !dbg !11077
  call void @llvm.dbg.value(metadata %union.tree_node* %call903, metadata !10548, metadata !DIExpression()), !dbg !11078
  %tobool904 = icmp eq %union.tree_node* %call903, null, !dbg !11079
  br i1 %tobool904, label %cleanup908, label %if.then905, !dbg !11081

if.then905:                                       ; preds = %if.then901
  %call906 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* nonnull %call903, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier) #8, !dbg !11082
  br label %cleanup908, !dbg !11083

cleanup908:                                       ; preds = %if.then901, %if.then905
  %cleanup.dest.slot.2 = phi i32 [ 1, %if.then905 ], [ 0, %if.then901 ]
  %retval.4 = phi %struct.rtx_def* [ %call906, %if.then905 ], [ undef, %if.then901 ]
  %cond9 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond9, label %if.end911, label %cleanup1249

if.end911:                                        ; preds = %cleanup908, %sw.bb892, %sw.bb892, %sw.bb892
  %retval.5 = phi %struct.rtx_def* [ undef, %sw.bb892 ], [ undef, %sw.bb892 ], [ undef, %sw.bb892 ], [ %retval.4, %cleanup908 ]
  switch i32 %modifier, label %land.lhs.true920 [
    i32 3, label %if.else1012
    i32 4, label %if.else1012
    i32 6, label %if.else1012
  ], !dbg !11084

land.lhs.true920:                                 ; preds = %if.end911
  %147 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11085
  %bf.load922 = load i64, i64* %147, align 8, !dbg !11085
  %bf.cast924121 = and i64 %bf.load922, 65535, !dbg !11086
  %cmp925 = icmp eq i64 %bf.cast924121, 51, !dbg !11086
  br i1 %cmp925, label %land.lhs.true927, label %if.else1012, !dbg !11087

land.lhs.true927:                                 ; preds = %land.lhs.true920
  %bf.cast932122 = and i64 %bf.load922, 65536, !dbg !11088
  %tobool933 = icmp eq i64 %bf.cast932122, 0, !dbg !11088
  br i1 %tobool933, label %land.lhs.true934, label %if.else1012, !dbg !11089

land.lhs.true934:                                 ; preds = %land.lhs.true927
  %148 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11090
  %bf.load936 = load i64, i64* %148, align 8, !dbg !11090
  %bf.cast938123 = and i64 %bf.load936, 65535, !dbg !11091
  %cmp939 = icmp eq i64 %bf.cast938123, 23, !dbg !11091
  br i1 %cmp939, label %for.cond943.preheader, label %if.else1012, !dbg !11092

for.cond943.preheader:                            ; preds = %land.lhs.true934
  %elts945 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11093
  %149 = bitcast i32* %elts945 to %struct.VEC_constructor_elt_gc**, !dbg !11093
  br label %for.cond943, !dbg !11096

for.cond943:                                      ; preds = %for.cond943.preheader, %for.inc1004
  %ix.0 = phi i64 [ %inc1005, %for.inc1004 ], [ 0, %for.cond943.preheader ], !dbg !11097
  %field.0 = phi %union.tree_node* [ %field.1, %for.inc1004 ], [ undef, %for.cond943.preheader ]
  %value942.0 = phi %union.tree_node* [ %value942.1, %for.inc1004 ], [ undef, %for.cond943.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value942.0, metadata !10555, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !10554, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata i64 %ix.0, metadata !10551, metadata !DIExpression()), !dbg !11098
  %150 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %149, align 8, !dbg !11099
  %tobool946 = icmp eq %struct.VEC_constructor_elt_gc* %150, null, !dbg !11099
  br i1 %tobool946, label %cond.end952, label %cond.true947, !dbg !11099

cond.true947:                                     ; preds = %for.cond943
  %base950 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %150, i64 0, i32 0, !dbg !11099
  br label %cond.end952, !dbg !11099

cond.end952:                                      ; preds = %for.cond943, %cond.true947
  %cond953 = phi %struct.VEC_constructor_elt_base* [ %base950, %cond.true947 ], [ null, %for.cond943 ], !dbg !11099
  %call954 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond953) #8, !dbg !11099
  %conv955 = zext i32 %call954 to i64, !dbg !11099
  %cmp956 = icmp ult i64 %ix.0, %conv955, !dbg !11099
  br i1 %cmp956, label %cond.false959, label %cond.end986, !dbg !11099

cond.false959:                                    ; preds = %cond.end952
  %151 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %149, align 8, !dbg !11099
  %tobool962 = icmp eq %struct.VEC_constructor_elt_gc* %151, null, !dbg !11099
  br i1 %tobool962, label %cond.end968, label %cond.true963, !dbg !11099

cond.true963:                                     ; preds = %cond.false959
  %base966 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %151, i64 0, i32 0, !dbg !11099
  br label %cond.end968, !dbg !11099

cond.end968:                                      ; preds = %cond.false959, %cond.true963
  %cond969 = phi %struct.VEC_constructor_elt_base* [ %base966, %cond.true963 ], [ null, %cond.false959 ], !dbg !11099
  %conv970 = trunc i64 %ix.0 to i32, !dbg !11099
  %call971 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond969, i32 %conv970) #8, !dbg !11099
  %value972 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call971, i64 0, i32 1, !dbg !11099
  %152 = load %union.tree_node*, %union.tree_node** %value972, align 8, !dbg !11099
  call void @llvm.dbg.value(metadata %union.tree_node* %152, metadata !10555, metadata !DIExpression()), !dbg !11098
  %153 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %149, align 8, !dbg !11099
  %tobool975 = icmp eq %struct.VEC_constructor_elt_gc* %153, null, !dbg !11099
  br i1 %tobool975, label %cond.end981, label %cond.true976, !dbg !11099

cond.true976:                                     ; preds = %cond.end968
  %base979 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %153, i64 0, i32 0, !dbg !11099
  br label %cond.end981, !dbg !11099

cond.end981:                                      ; preds = %cond.end968, %cond.true976
  %cond982 = phi %struct.VEC_constructor_elt_base* [ %base979, %cond.true976 ], [ null, %cond.end968 ], !dbg !11099
  %call984 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond982, i32 %conv970) #8, !dbg !11099
  %index985 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call984, i64 0, i32 0, !dbg !11099
  %154 = load %union.tree_node*, %union.tree_node** %index985, align 8, !dbg !11099
  call void @llvm.dbg.value(metadata %union.tree_node* %154, metadata !10554, metadata !DIExpression()), !dbg !11098
  br label %cond.end986, !dbg !11099

cond.end986:                                      ; preds = %cond.end952, %cond.end981
  %field.1 = phi %union.tree_node* [ %154, %cond.end981 ], [ %field.0, %cond.end952 ]
  %value942.1 = phi %union.tree_node* [ %152, %cond.end981 ], [ %value942.0, %cond.end952 ]
  %cond987 = phi i1 [ true, %cond.end981 ], [ false, %cond.end952 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value942.1, metadata !10555, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1, metadata !10554, metadata !DIExpression()), !dbg !11098
  br i1 %cond987, label %for.body989, label %cleanup1007.loopexit, !dbg !11096

for.body989:                                      ; preds = %cond.end986
  %call990 = tail call i32 @tree_int_cst_equal(%union.tree_node* %field.1, %union.tree_node* %treeop1.2) #6, !dbg !11100
  %tobool991 = icmp eq i32 %call990, 0, !dbg !11100
  br i1 %tobool991, label %for.inc1004, label %if.then992, !dbg !11102

if.then992:                                       ; preds = %for.body989
  %value942.1.lcssa197 = phi %union.tree_node* [ %value942.1, %for.body989 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value942.1.lcssa197, metadata !10555, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata %union.tree_node* %value942.1.lcssa197, metadata !10555, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata %union.tree_node* %value942.1.lcssa197, metadata !10555, metadata !DIExpression()), !dbg !11098
  %155 = getelementptr inbounds %union.tree_node, %union.tree_node* %value942.1.lcssa197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11103
  %bf.load994 = load i64, i64* %155, align 8, !dbg !11103
  %bf.cast997124 = and i64 %bf.load994, 65536, !dbg !11103
  %tobool998 = icmp eq i64 %bf.cast997124, 0, !dbg !11103
  br i1 %tobool998, label %if.then999, label %cleanup1007, !dbg !11106

if.then999:                                       ; preds = %if.then992
  %call1000 = tail call %union.tree_node* @fold(%union.tree_node* %value942.1.lcssa197) #6, !dbg !11107
  %call1001 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call1000, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier) #8, !dbg !11108
  br label %cleanup1007, !dbg !11109

for.inc1004:                                      ; preds = %for.body989
  %inc1005 = add i64 %ix.0, 1, !dbg !11099
  call void @llvm.dbg.value(metadata i64 %inc1005, metadata !10551, metadata !DIExpression()), !dbg !11098
  br label %for.cond943, !dbg !11099, !llvm.loop !11110

cleanup1007.loopexit:                             ; preds = %cond.end986
  br label %cleanup1007

cleanup1007:                                      ; preds = %cleanup1007.loopexit, %if.then992, %if.then999
  %cleanup.dest.slot.3 = phi i32 [ 1, %if.then999 ], [ 0, %if.then992 ], [ 0, %cleanup1007.loopexit ]
  %retval.6 = phi %struct.rtx_def* [ %call1001, %if.then999 ], [ %retval.5, %if.then992 ], [ %retval.5, %cleanup1007.loopexit ], !dbg !11075
  %cond8 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond8, label %if.end1248, label %cleanup1249

if.else1012:                                      ; preds = %land.lhs.true927, %if.end911, %if.end911, %if.end911, %land.lhs.true934, %land.lhs.true920
  %156 = load i32, i32* @optimize, align 4, !dbg !11112
  %cmp1013 = icmp sgt i32 %156, 0, !dbg !11113
  br i1 %cmp1013, label %switch.early.test, label %if.end1248, !dbg !11114

switch.early.test:                                ; preds = %if.else1012
  switch i32 %modifier, label %land.lhs.true1024 [
    i32 6, label %if.end1248
    i32 4, label %if.end1248
    i32 3, label %if.end1248
  ], !dbg !11114

land.lhs.true1024:                                ; preds = %switch.early.test
  %157 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11115
  %bf.load1026 = load i64, i64* %157, align 8, !dbg !11115
  %bf.cast1029111 = and i64 %bf.load1026, 1048576, !dbg !11115
  %tobool1030 = icmp eq i64 %bf.cast1029111, 0, !dbg !11115
  br i1 %tobool1030, label %if.end1248, label %land.lhs.true1031, !dbg !11116

land.lhs.true1031:                                ; preds = %land.lhs.true1024
  %bf.cast1036112 = and i64 %bf.load1026, 65536, !dbg !11117
  %tobool1037 = icmp eq i64 %bf.cast1036112, 0, !dbg !11117
  br i1 %tobool1037, label %land.lhs.true1038, label %if.end1248, !dbg !11118

land.lhs.true1038:                                ; preds = %land.lhs.true1031
  %bf.cast1042113 = and i64 %bf.load1026, 65535, !dbg !11119
  %cmp1043 = icmp eq i64 %bf.cast1042113, 32, !dbg !11119
  br i1 %cmp1043, label %land.lhs.true1045, label %if.end1248, !dbg !11120

land.lhs.true1045:                                ; preds = %land.lhs.true1038
  %initial1047 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !11121
  %158 = load %union.tree_node*, %union.tree_node** %initial1047, align 8, !dbg !11121
  %tobool1048 = icmp eq %union.tree_node* %158, null, !dbg !11121
  br i1 %tobool1048, label %if.end1248, label %land.lhs.true1049, !dbg !11122

land.lhs.true1049:                                ; preds = %land.lhs.true1045
  %159 = getelementptr inbounds %union.tree_node, %union.tree_node* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11122
  %bf.load1053 = load i64, i64* %159, align 8, !dbg !11123
  %bf.cast1055114 = and i64 %bf.load1053, 65535, !dbg !11124
  %cmp1056 = icmp eq i64 %bf.cast1055114, 0, !dbg !11124
  br i1 %cmp1056, label %if.end1248, label %land.lhs.true1058, !dbg !11125

land.lhs.true1058:                                ; preds = %land.lhs.true1049
  %160 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !11126
  %call1059 = tail call zeroext i8 %160(%union.tree_node* %treeop0.1) #6, !dbg !11127
  %tobool1061 = icmp eq i8 %call1059, 0, !dbg !11127
  br i1 %tobool1061, label %if.end1248, label %if.then1062, !dbg !11128

if.then1062:                                      ; preds = %land.lhs.true1058
  %161 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11129
  %bf.load1064 = load i64, i64* %161, align 8, !dbg !11129
  %bf.cast1066115 = and i64 %bf.load1064, 65535, !dbg !11130
  %cmp1067 = icmp eq i64 %bf.cast1066115, 23, !dbg !11130
  br i1 %cmp1067, label %if.then1069, label %if.end1248, !dbg !11131

if.then1069:                                      ; preds = %if.then1062
  %162 = load %union.tree_node*, %union.tree_node** %initial1047, align 8, !dbg !11132
  call void @llvm.dbg.value(metadata %union.tree_node* %162, metadata !10556, metadata !DIExpression()), !dbg !11133
  %163 = getelementptr inbounds %union.tree_node, %union.tree_node* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11134
  %bf.load1073 = load i64, i64* %163, align 8, !dbg !11134
  %bf.cast1075116 = and i64 %bf.load1073, 65535, !dbg !11135
  %cmp1076 = icmp eq i64 %bf.cast1075116, 51, !dbg !11135
  br i1 %cmp1076, label %for.cond1082.preheader, label %if.else1168, !dbg !11136

for.cond1082.preheader:                           ; preds = %if.then1069
  %elts1084 = getelementptr inbounds %union.tree_node, %union.tree_node* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11137
  %164 = bitcast i32* %elts1084 to %struct.VEC_constructor_elt_gc**, !dbg !11137
  br label %for.cond1082, !dbg !11138

for.cond1082:                                     ; preds = %for.cond1082.preheader, %for.inc1160
  %ix1079.0 = phi i64 [ %inc1161, %for.inc1160 ], [ 0, %for.cond1082.preheader ], !dbg !11139
  %field1080.0 = phi %union.tree_node* [ %field1080.1, %for.inc1160 ], [ undef, %for.cond1082.preheader ]
  %value1081.0 = phi %union.tree_node* [ %value1081.1, %for.inc1160 ], [ undef, %for.cond1082.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value1081.0, metadata !10565, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata %union.tree_node* %field1080.0, metadata !10564, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i64 %ix1079.0, metadata !10561, metadata !DIExpression()), !dbg !11140
  %165 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %164, align 8, !dbg !11141
  %tobool1085 = icmp eq %struct.VEC_constructor_elt_gc* %165, null, !dbg !11141
  br i1 %tobool1085, label %cond.end1091, label %cond.true1086, !dbg !11141

cond.true1086:                                    ; preds = %for.cond1082
  %base1089 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %165, i64 0, i32 0, !dbg !11141
  br label %cond.end1091, !dbg !11141

cond.end1091:                                     ; preds = %for.cond1082, %cond.true1086
  %cond1092 = phi %struct.VEC_constructor_elt_base* [ %base1089, %cond.true1086 ], [ null, %for.cond1082 ], !dbg !11141
  %call1093 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond1092) #8, !dbg !11141
  %conv1094 = zext i32 %call1093 to i64, !dbg !11141
  %cmp1095 = icmp ult i64 %ix1079.0, %conv1094, !dbg !11141
  br i1 %cmp1095, label %cond.false1098, label %cond.end1125, !dbg !11141

cond.false1098:                                   ; preds = %cond.end1091
  %166 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %164, align 8, !dbg !11141
  %tobool1101 = icmp eq %struct.VEC_constructor_elt_gc* %166, null, !dbg !11141
  br i1 %tobool1101, label %cond.end1107, label %cond.true1102, !dbg !11141

cond.true1102:                                    ; preds = %cond.false1098
  %base1105 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %166, i64 0, i32 0, !dbg !11141
  br label %cond.end1107, !dbg !11141

cond.end1107:                                     ; preds = %cond.false1098, %cond.true1102
  %cond1108 = phi %struct.VEC_constructor_elt_base* [ %base1105, %cond.true1102 ], [ null, %cond.false1098 ], !dbg !11141
  %conv1109 = trunc i64 %ix1079.0 to i32, !dbg !11141
  %call1110 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond1108, i32 %conv1109) #8, !dbg !11141
  %value1111 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call1110, i64 0, i32 1, !dbg !11141
  %167 = load %union.tree_node*, %union.tree_node** %value1111, align 8, !dbg !11141
  call void @llvm.dbg.value(metadata %union.tree_node* %167, metadata !10565, metadata !DIExpression()), !dbg !11140
  %168 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %164, align 8, !dbg !11141
  %tobool1114 = icmp eq %struct.VEC_constructor_elt_gc* %168, null, !dbg !11141
  br i1 %tobool1114, label %cond.end1120, label %cond.true1115, !dbg !11141

cond.true1115:                                    ; preds = %cond.end1107
  %base1118 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %168, i64 0, i32 0, !dbg !11141
  br label %cond.end1120, !dbg !11141

cond.end1120:                                     ; preds = %cond.end1107, %cond.true1115
  %cond1121 = phi %struct.VEC_constructor_elt_base* [ %base1118, %cond.true1115 ], [ null, %cond.end1107 ], !dbg !11141
  %call1123 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond1121, i32 %conv1109) #8, !dbg !11141
  %index1124 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call1123, i64 0, i32 0, !dbg !11141
  %169 = load %union.tree_node*, %union.tree_node** %index1124, align 8, !dbg !11141
  call void @llvm.dbg.value(metadata %union.tree_node* %169, metadata !10564, metadata !DIExpression()), !dbg !11140
  br label %cond.end1125, !dbg !11141

cond.end1125:                                     ; preds = %cond.end1091, %cond.end1120
  %field1080.1 = phi %union.tree_node* [ %169, %cond.end1120 ], [ %field1080.0, %cond.end1091 ]
  %value1081.1 = phi %union.tree_node* [ %167, %cond.end1120 ], [ %value1081.0, %cond.end1091 ]
  %cond1126 = phi i1 [ true, %cond.end1120 ], [ false, %cond.end1091 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value1081.1, metadata !10565, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata %union.tree_node* %field1080.1, metadata !10564, metadata !DIExpression()), !dbg !11140
  br i1 %cond1126, label %for.body1128, label %cleanup1163.loopexit, !dbg !11138

for.body1128:                                     ; preds = %cond.end1125
  %call1129 = tail call i32 @tree_int_cst_equal(%union.tree_node* %field1080.1, %union.tree_node* %treeop1.2) #6, !dbg !11142
  %tobool1130 = icmp eq i32 %call1129, 0, !dbg !11142
  br i1 %tobool1130, label %for.inc1160, label %if.then1131, !dbg !11143

if.then1131:                                      ; preds = %for.body1128
  %value1081.1.lcssa198 = phi %union.tree_node* [ %value1081.1, %for.body1128 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value1081.1.lcssa198, metadata !10565, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata %union.tree_node* %value1081.1.lcssa198, metadata !10565, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata %union.tree_node* %value1081.1.lcssa198, metadata !10565, metadata !DIExpression()), !dbg !11140
  %170 = getelementptr inbounds %union.tree_node, %union.tree_node* %value1081.1.lcssa198, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11144
  %bf.load1133 = load i64, i64* %170, align 8, !dbg !11144
  %bf.cast1136119 = and i64 %bf.load1133, 65536, !dbg !11144
  %tobool1137 = icmp eq i64 %bf.cast1136119, 0, !dbg !11144
  br i1 %tobool1137, label %if.end1139, label %cleanup1163, !dbg !11146

if.end1139:                                       ; preds = %if.then1131
  %bf.cast1143120 = and i64 %bf.load1133, 65535, !dbg !11147
  %cmp1144 = icmp eq i64 %bf.cast1143120, 51, !dbg !11147
  br i1 %cmp1144, label %if.then1146, label %if.end1156, !dbg !11148

if.then1146:                                      ; preds = %if.end1139
  %call1148 = tail call fastcc %struct.rtx_def* @expand_constructor(%union.tree_node* %value1081.1.lcssa198, %struct.rtx_def* %target.addr.1, i32 %modifier, i8 zeroext 1) #8, !dbg !11149
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1148, metadata !10566, metadata !DIExpression()), !dbg !11150
  %cmp1149 = icmp eq %struct.rtx_def* %call1148, null, !dbg !11151
  br i1 %cmp1149, label %cleanup1163, label %if.end1156

if.end1156:                                       ; preds = %if.then1146, %if.end1139
  %call1157 = tail call %union.tree_node* @fold(%union.tree_node* %value1081.1.lcssa198) #6, !dbg !11153
  %call1158 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call1157, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier) #8, !dbg !11154
  br label %cleanup1163, !dbg !11155

for.inc1160:                                      ; preds = %for.body1128
  %inc1161 = add i64 %ix1079.0, 1, !dbg !11141
  call void @llvm.dbg.value(metadata i64 %inc1161, metadata !10561, metadata !DIExpression()), !dbg !11140
  br label %for.cond1082, !dbg !11141, !llvm.loop !11156

cleanup1163.loopexit:                             ; preds = %cond.end1125
  br label %cleanup1163

cleanup1163:                                      ; preds = %cleanup1163.loopexit, %if.then1131, %if.then1146, %if.end1156
  %cleanup.dest.slot.5 = phi i32 [ 1, %if.end1156 ], [ 0, %if.then1131 ], [ 0, %if.then1146 ], [ 0, %cleanup1163.loopexit ]
  %retval.7 = phi %struct.rtx_def* [ %call1158, %if.end1156 ], [ %retval.5, %if.then1131 ], [ %retval.5, %if.then1146 ], [ %retval.5, %cleanup1163.loopexit ], !dbg !11075
  %cond7 = icmp eq i32 %cleanup.dest.slot.5, 0
  br i1 %cond7, label %if.end1242, label %cleanup1243

if.else1168:                                      ; preds = %if.then1069
  %cmp1173 = icmp eq i64 %bf.cast1075116, 28, !dbg !11158
  br i1 %cmp1173, label %if.then1175, label %if.end1242, !dbg !11159

if.then1175:                                      ; preds = %if.else1168
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.2, metadata !10573, metadata !DIExpression()), !dbg !11160
  %call1176 = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %exp) #8, !dbg !11161
  call void @llvm.dbg.value(metadata %union.tree_node* %call1176, metadata !10576, metadata !DIExpression()), !dbg !11160
  %171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !11162
  %call1177 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %171, %union.tree_node* %treeop1.2) #6, !dbg !11163
  call void @llvm.dbg.value(metadata %union.tree_node* %call1177, metadata !10573, metadata !DIExpression()), !dbg !11160
  %call1178 = tail call i32 @integer_zerop(%union.tree_node* %call1176) #6, !dbg !11164
  %tobool1179 = icmp eq i32 %call1178, 0, !dbg !11164
  br i1 %tobool1179, label %if.then1180, label %if.end1183, !dbg !11166

if.then1180:                                      ; preds = %if.then1175
  %172 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !11167
  %call1181 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %172, %union.tree_node* %call1176) #6, !dbg !11168
  %call1182 = tail call %union.tree_node* @size_diffop_loc(i32 %cond, %union.tree_node* %call1177, %union.tree_node* %call1181) #6, !dbg !11169
  call void @llvm.dbg.value(metadata %union.tree_node* %call1182, metadata !10573, metadata !DIExpression()), !dbg !11160
  br label %if.end1183, !dbg !11170

if.end1183:                                       ; preds = %if.then1175, %if.then1180
  %index1.0 = phi %union.tree_node* [ %call1177, %if.then1175 ], [ %call1182, %if.then1180 ], !dbg !11160
  call void @llvm.dbg.value(metadata %union.tree_node* %index1.0, metadata !10573, metadata !DIExpression()), !dbg !11160
  %173 = getelementptr inbounds %union.tree_node, %union.tree_node* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11171
  %174 = load i32, i32* %173, align 8, !dbg !11171
  %conv1184 = sext i32 %174 to i64, !dbg !11171
  %call1185 = tail call i32 @compare_tree_int(%union.tree_node* %index1.0, i64 %conv1184) #6, !dbg !11172
  %cmp1186 = icmp slt i32 %call1185, 0, !dbg !11173
  br i1 %cmp1186, label %if.then1188, label %if.end1236, !dbg !11174

if.then1188:                                      ; preds = %if.end1183
  %type1191 = getelementptr inbounds %union.tree_node, %union.tree_node* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11175
  %175 = bitcast %union.tree_node** %type1191 to %struct.tree_common**, !dbg !11175
  %176 = load %struct.tree_common*, %struct.tree_common** %175, align 8, !dbg !11175
  %type1193 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %176, i64 0, i32 2, !dbg !11175
  %177 = load %union.tree_node*, %union.tree_node** %type1193, align 8, !dbg !11175
  call void @llvm.dbg.value(metadata %union.tree_node* %177, metadata !10577, metadata !DIExpression()), !dbg !11176
  %178 = getelementptr inbounds %union.tree_node, %union.tree_node* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11177
  %bf.load1196 = load i64, i64* %178, align 8, !dbg !11177
  %bf.cast1198118 = and i64 %bf.load1196, 65535, !dbg !11177
  %cmp1199 = icmp eq i64 %bf.cast1198118, 14, !dbg !11177
  br i1 %cmp1199, label %cond.true1201, label %cond.false1203, !dbg !11177

cond.true1201:                                    ; preds = %if.then1188
  %call1202 = tail call i32 @vector_type_mode(%union.tree_node* %177) #6, !dbg !11177
  br label %cond.end1209, !dbg !11177

cond.false1203:                                   ; preds = %if.then1188
  %type1204 = bitcast %union.tree_node* %177 to %struct.tree_type*, !dbg !11177
  %mode1205 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1204, i64 0, i32 6, !dbg !11177
  %bf.load1206 = load i32, i32* %mode1205, align 4, !dbg !11177
  %bf.lshr1207 = lshr i32 %bf.load1206, 16, !dbg !11177
  %bf.clear1208 = and i32 %bf.lshr1207, 255, !dbg !11177
  br label %cond.end1209, !dbg !11177

cond.end1209:                                     ; preds = %cond.false1203, %cond.true1201
  %cond1210 = phi i32 [ %call1202, %cond.true1201 ], [ %bf.clear1208, %cond.false1203 ], !dbg !11177
  call void @llvm.dbg.value(metadata i32 %cond1210, metadata !10580, metadata !DIExpression()), !dbg !11176
  %idxprom1211 = zext i32 %cond1210 to i64, !dbg !11178
  %arrayidx1212 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1211, !dbg !11178
  %179 = load i8, i8* %arrayidx1212, align 1, !dbg !11178
  %cmp1214 = icmp eq i8 %179, 2, !dbg !11180
  br i1 %cmp1214, label %land.lhs.true1216, label %cleanup1232, !dbg !11181

land.lhs.true1216:                                ; preds = %cond.end1209
  %arrayidx1218 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1211, !dbg !11182
  %180 = load i8, i8* %arrayidx1218, align 1, !dbg !11182
  %cmp1221 = icmp eq i8 %180, 1, !dbg !11183
  br i1 %cmp1221, label %if.then1223, label %cleanup1232, !dbg !11184

if.then1223:                                      ; preds = %land.lhs.true1216
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11185
  %arraydecay = bitcast i32* %str to i8*, !dbg !11185
  %int_cst1226 = getelementptr inbounds %union.tree_node, %union.tree_node* %index1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11186
  %low1227 = bitcast i32* %int_cst1226 to i64*, !dbg !11186
  %181 = load i64, i64* %low1227, align 8, !dbg !11186
  %arrayidx1228 = getelementptr inbounds i8, i8* %arraydecay, i64 %181, !dbg !11185
  %182 = load i8, i8* %arrayidx1228, align 1, !dbg !11185
  %conv1229 = sext i8 %182 to i64, !dbg !11185
  %call1230 = tail call %struct.rtx_def* @gen_int_mode(i64 %conv1229, i32 %cond1210) #6, !dbg !11187
  br label %cleanup1232, !dbg !11188

cleanup1232:                                      ; preds = %cond.end1209, %land.lhs.true1216, %if.then1223
  %cleanup.dest.slot.6 = phi i32 [ 1, %if.then1223 ], [ 0, %land.lhs.true1216 ], [ 0, %cond.end1209 ]
  %retval.8 = phi %struct.rtx_def* [ %call1230, %if.then1223 ], [ %retval.5, %land.lhs.true1216 ], [ %retval.5, %cond.end1209 ], !dbg !11075
  %cond6 = icmp eq i32 %cleanup.dest.slot.6, 0
  br i1 %cond6, label %if.end1236, label %cleanup1237

if.end1236:                                       ; preds = %cleanup1232, %if.end1183
  %retval.9 = phi %struct.rtx_def* [ %retval.5, %if.end1183 ], [ %retval.8, %cleanup1232 ], !dbg !11075
  br label %cleanup1237, !dbg !11189

cleanup1237:                                      ; preds = %cleanup1232, %if.end1236
  %cleanup.dest.slot.7 = phi i32 [ %cleanup.dest.slot.6, %cleanup1232 ], [ 0, %if.end1236 ]
  %retval.10 = phi %struct.rtx_def* [ %retval.8, %cleanup1232 ], [ %retval.9, %if.end1236 ], !dbg !11188
  %cond5 = icmp eq i32 %cleanup.dest.slot.7, 0
  br i1 %cond5, label %if.end1242, label %cleanup1243

if.end1242:                                       ; preds = %if.else1168, %cleanup1237, %cleanup1163
  %retval.12 = phi %struct.rtx_def* [ %retval.7, %cleanup1163 ], [ %retval.5, %if.else1168 ], [ %retval.10, %cleanup1237 ], !dbg !11075
  br label %cleanup1243, !dbg !11190

cleanup1243:                                      ; preds = %cleanup1163, %cleanup1237, %if.end1242
  %cleanup.dest.slot.8 = phi i32 [ %cleanup.dest.slot.5, %cleanup1163 ], [ 0, %if.end1242 ], [ %cleanup.dest.slot.7, %cleanup1237 ]
  %retval.13 = phi %struct.rtx_def* [ %retval.7, %cleanup1163 ], [ %retval.12, %if.end1242 ], [ %retval.10, %cleanup1237 ], !dbg !11075
  %cond4 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond4, label %if.end1248, label %cleanup1249

if.end1248:                                       ; preds = %land.lhs.true1058, %land.lhs.true1049, %land.lhs.true1045, %land.lhs.true1031, %land.lhs.true1024, %switch.early.test, %switch.early.test, %switch.early.test, %if.else1012, %land.lhs.true1038, %cleanup1243, %if.then1062, %cleanup1007
  %retval.16 = phi %struct.rtx_def* [ %retval.6, %cleanup1007 ], [ %retval.5, %land.lhs.true1031 ], [ %retval.5, %land.lhs.true1058 ], [ %retval.5, %land.lhs.true1049 ], [ %retval.5, %land.lhs.true1045 ], [ %retval.5, %land.lhs.true1038 ], [ %retval.5, %land.lhs.true1024 ], [ %retval.5, %switch.early.test ], [ %retval.5, %if.then1062 ], [ %retval.13, %cleanup1243 ], [ %retval.5, %if.else1012 ], [ %retval.5, %switch.early.test ], [ %retval.5, %switch.early.test ], !dbg !11083
  br label %cleanup1249, !dbg !11191

cleanup1249:                                      ; preds = %cleanup908, %cleanup1007, %cleanup1243, %if.end1248
  %cleanup.dest.slot.9 = phi i32 [ %cleanup.dest.slot.2, %cleanup908 ], [ 0, %if.end1248 ], [ %cleanup.dest.slot.8, %cleanup1243 ], [ %cleanup.dest.slot.3, %cleanup1007 ]
  %retval.17 = phi %struct.rtx_def* [ %retval.4, %cleanup908 ], [ %retval.16, %if.end1248 ], [ %retval.13, %cleanup1243 ], [ %retval.6, %cleanup1007 ], !dbg !11083
  %cond3 = icmp eq i32 %cleanup.dest.slot.9, 0
  br i1 %cond3, label %normal_inner_ref, label %cleanup3078

sw.bb1253:                                        ; preds = %if.end173
  %183 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11192
  %bf.load1255 = load i64, i64* %183, align 8, !dbg !11192
  %bf.cast1257104 = and i64 %bf.load1255, 65535, !dbg !11193
  %cmp1258 = icmp eq i64 %bf.cast1257104, 51, !dbg !11193
  br i1 %cmp1258, label %for.cond1264.preheader, label %normal_inner_ref, !dbg !11194

for.cond1264.preheader:                           ; preds = %sw.bb1253
  %elts1266 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11195
  %184 = bitcast i32* %elts1266 to %struct.VEC_constructor_elt_gc**, !dbg !11195
  br label %for.cond1264, !dbg !11196

for.cond1264:                                     ; preds = %for.cond1264.preheader, %for.inc1422
  %idx1261.0 = phi i64 [ %inc1423, %for.inc1422 ], [ 0, %for.cond1264.preheader ], !dbg !11197
  %field1262.0 = phi %union.tree_node* [ %field1262.1, %for.inc1422 ], [ undef, %for.cond1264.preheader ]
  %value1263.0 = phi %union.tree_node* [ %value1263.1, %for.inc1422 ], [ undef, %for.cond1264.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.0, metadata !10585, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %field1262.0, metadata !10584, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i64 %idx1261.0, metadata !10581, metadata !DIExpression()), !dbg !11198
  %185 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %184, align 8, !dbg !11199
  %tobool1267 = icmp eq %struct.VEC_constructor_elt_gc* %185, null, !dbg !11199
  br i1 %tobool1267, label %cond.end1273, label %cond.true1268, !dbg !11199

cond.true1268:                                    ; preds = %for.cond1264
  %base1271 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %185, i64 0, i32 0, !dbg !11199
  br label %cond.end1273, !dbg !11199

cond.end1273:                                     ; preds = %for.cond1264, %cond.true1268
  %cond1274 = phi %struct.VEC_constructor_elt_base* [ %base1271, %cond.true1268 ], [ null, %for.cond1264 ], !dbg !11199
  %call1275 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond1274) #8, !dbg !11199
  %conv1276 = zext i32 %call1275 to i64, !dbg !11199
  %cmp1277 = icmp ult i64 %idx1261.0, %conv1276, !dbg !11199
  br i1 %cmp1277, label %cond.false1280, label %cond.end1307, !dbg !11199

cond.false1280:                                   ; preds = %cond.end1273
  %186 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %184, align 8, !dbg !11199
  %tobool1283 = icmp eq %struct.VEC_constructor_elt_gc* %186, null, !dbg !11199
  br i1 %tobool1283, label %cond.end1289, label %cond.true1284, !dbg !11199

cond.true1284:                                    ; preds = %cond.false1280
  %base1287 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %186, i64 0, i32 0, !dbg !11199
  br label %cond.end1289, !dbg !11199

cond.end1289:                                     ; preds = %cond.false1280, %cond.true1284
  %cond1290 = phi %struct.VEC_constructor_elt_base* [ %base1287, %cond.true1284 ], [ null, %cond.false1280 ], !dbg !11199
  %conv1291 = trunc i64 %idx1261.0 to i32, !dbg !11199
  %call1292 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond1290, i32 %conv1291) #8, !dbg !11199
  %value1293 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call1292, i64 0, i32 1, !dbg !11199
  %187 = load %union.tree_node*, %union.tree_node** %value1293, align 8, !dbg !11199
  call void @llvm.dbg.value(metadata %union.tree_node* %187, metadata !10585, metadata !DIExpression()), !dbg !11198
  %188 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %184, align 8, !dbg !11199
  %tobool1296 = icmp eq %struct.VEC_constructor_elt_gc* %188, null, !dbg !11199
  br i1 %tobool1296, label %cond.end1302, label %cond.true1297, !dbg !11199

cond.true1297:                                    ; preds = %cond.end1289
  %base1300 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %188, i64 0, i32 0, !dbg !11199
  br label %cond.end1302, !dbg !11199

cond.end1302:                                     ; preds = %cond.end1289, %cond.true1297
  %cond1303 = phi %struct.VEC_constructor_elt_base* [ %base1300, %cond.true1297 ], [ null, %cond.end1289 ], !dbg !11199
  %call1305 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond1303, i32 %conv1291) #8, !dbg !11199
  %index1306 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call1305, i64 0, i32 0, !dbg !11199
  %189 = load %union.tree_node*, %union.tree_node** %index1306, align 8, !dbg !11199
  call void @llvm.dbg.value(metadata %union.tree_node* %189, metadata !10584, metadata !DIExpression()), !dbg !11198
  br label %cond.end1307, !dbg !11199

cond.end1307:                                     ; preds = %cond.end1273, %cond.end1302
  %field1262.1 = phi %union.tree_node* [ %189, %cond.end1302 ], [ %field1262.0, %cond.end1273 ]
  %value1263.1 = phi %union.tree_node* [ %187, %cond.end1302 ], [ %value1263.0, %cond.end1273 ]
  %cond1308 = phi i1 [ true, %cond.end1302 ], [ false, %cond.end1273 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.1, metadata !10585, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %field1262.1, metadata !10584, metadata !DIExpression()), !dbg !11198
  br i1 %cond1308, label %for.body1310, label %cleanup1425.loopexit, !dbg !11196

for.body1310:                                     ; preds = %cond.end1307
  %cmp1311 = icmp eq %union.tree_node* %field1262.1, %treeop1.2, !dbg !11200
  br i1 %cmp1311, label %land.lhs.true1313, label %for.inc1422, !dbg !11201

land.lhs.true1313:                                ; preds = %for.body1310
  %decl_flag_11315 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11202
  %190 = bitcast i40* %decl_flag_11315 to i64*, !dbg !11202
  %bf.load1316 = load i64, i64* %190, align 8, !dbg !11202
  %bf.cast1319105 = and i64 %bf.load1316, 33554432, !dbg !11202
  %tobool1320 = icmp eq i64 %bf.cast1319105, 0, !dbg !11202
  br i1 %tobool1320, label %if.then1346, label %lor.lhs.false1321, !dbg !11203

lor.lhs.false1321:                                ; preds = %land.lhs.true1313
  %bf.cast1326 = and i64 %bf.load1316, 255, !dbg !11204
  %arrayidx1328 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %bf.cast1326, !dbg !11204
  %191 = load i8, i8* %arrayidx1328, align 1, !dbg !11204
  %cmp1330 = icmp eq i8 %191, 2, !dbg !11205
  br i1 %cmp1330, label %land.lhs.true1332, label %for.inc1422, !dbg !11206

land.lhs.true1332:                                ; preds = %lor.lhs.false1321
  %arrayidx1339 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %bf.cast1326, !dbg !11207
  %192 = load i8, i8* %arrayidx1339, align 1, !dbg !11207
  %cmp1344 = icmp ult i8 %192, 9, !dbg !11208
  br i1 %cmp1344, label %if.then1346, label %for.inc1422, !dbg !11209

if.then1346:                                      ; preds = %land.lhs.true1313, %land.lhs.true1332
  %.lcssa200 = phi i64* [ %190, %land.lhs.true1313 ], [ %190, %land.lhs.true1332 ], !dbg !11202
  %bf.cast1319105.lcssa = phi i64 [ %bf.cast1319105, %land.lhs.true1313 ], [ %bf.cast1319105, %land.lhs.true1332 ], !dbg !11202
  %value1263.1.lcssa199 = phi %union.tree_node* [ %value1263.1, %land.lhs.true1313 ], [ %value1263.1, %land.lhs.true1332 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.1.lcssa199, metadata !10585, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.1.lcssa199, metadata !10585, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.1.lcssa199, metadata !10585, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.1.lcssa199, metadata !10585, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %field1262.1, metadata !10584, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %field1262.1, metadata !10584, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.1.lcssa199, metadata !10585, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata %union.tree_node* %value1263.1.lcssa199, metadata !10585, metadata !DIExpression()), !dbg !11198
  %tobool1353 = icmp ne i64 %bf.cast1319105.lcssa, 0, !dbg !11210
  %or.cond25 = and i1 %tobool1353, %cmp177, !dbg !11212
  %target.addr.2 = select i1 %or.cond25, %struct.rtx_def* null, %struct.rtx_def* %target.addr.1, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !10461, metadata !DIExpression()), !dbg !10672
  %call1359 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %value1263.1.lcssa199, %struct.rtx_def* %target.addr.2, i32 %tmode, i32 %modifier) #8, !dbg !11213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1359, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1359, %struct.rtx_def** %op0, align 8, !dbg !11214
  %bf.load1362 = load i64, i64* %.lcssa200, align 8, !dbg !11215
  %bf.cast1365107 = and i64 %bf.load1362, 33554432, !dbg !11215
  %tobool1366 = icmp eq i64 %bf.cast1365107, 0, !dbg !11215
  br i1 %tobool1366, label %if.end1420, label %if.then1367, !dbg !11216

if.then1367:                                      ; preds = %if.then1346
  %size1369 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11217
  %193 = bitcast %union.tree_node** %size1369 to %struct.tree_int_cst**, !dbg !11217
  %194 = load %struct.tree_int_cst*, %struct.tree_int_cst** %193, align 8, !dbg !11217
  %low1372 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %194, i64 0, i32 1, i32 0, !dbg !11217
  %195 = load i64, i64* %low1372, align 8, !dbg !11217
  call void @llvm.dbg.value(metadata i64 %195, metadata !10586, metadata !DIExpression()), !dbg !11218
  %type1374 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11219
  %196 = bitcast %union.tree_node** %type1374 to i64**, !dbg !11219
  %197 = load i64*, i64** %196, align 8, !dbg !11219
  %bf.load1376 = load i64, i64* %197, align 8, !dbg !11219
  %bf.cast1378108 = and i64 %bf.load1376, 65535, !dbg !11219
  %cmp1379 = icmp eq i64 %bf.cast1378108, 14, !dbg !11219
  br i1 %cmp1379, label %cond.true1381, label %cond.false1385, !dbg !11219

cond.true1381:                                    ; preds = %if.then1367
  %.cast109 = bitcast i64* %197 to %union.tree_node*, !dbg !11219
  %call1384 = tail call i32 @vector_type_mode(%union.tree_node* %.cast109) #6, !dbg !11219
  %.pre161 = load i64*, i64** %196, align 8, !dbg !11220
  %bf.load1398.pre = load i64, i64* %.pre161, align 8, !dbg !11220
  br label %cond.end1393, !dbg !11219

cond.false1385:                                   ; preds = %if.then1367
  %type1388 = bitcast i64* %197 to %struct.tree_type*, !dbg !11219
  %mode1389 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1388, i64 0, i32 6, !dbg !11219
  %bf.load1390 = load i32, i32* %mode1389, align 4, !dbg !11219
  %bf.lshr1391 = lshr i32 %bf.load1390, 16, !dbg !11219
  %bf.clear1392 = and i32 %bf.lshr1391, 255, !dbg !11219
  br label %cond.end1393, !dbg !11219

cond.end1393:                                     ; preds = %cond.false1385, %cond.true1381
  %bf.load1398 = phi i64 [ %bf.load1398.pre, %cond.true1381 ], [ %bf.load1376, %cond.false1385 ], !dbg !11220
  %cond1394 = phi i32 [ %call1384, %cond.true1381 ], [ %bf.clear1392, %cond.false1385 ], !dbg !11219
  call void @llvm.dbg.value(metadata i32 %cond1394, metadata !10593, metadata !DIExpression()), !dbg !11218
  %bf.cast1401110 = and i64 %bf.load1398, 2097152, !dbg !11220
  %tobool1402 = icmp eq i64 %bf.cast1401110, 0, !dbg !11220
  br i1 %tobool1402, label %if.else1407, label %if.then1403, !dbg !11221

if.then1403:                                      ; preds = %cond.end1393
  %notmask = shl nsw i64 -1, %195, !dbg !11222
  %sub1404 = xor i64 %notmask, -1, !dbg !11222
  %call1405 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub1404) #6, !dbg !11222
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1405, metadata !10466, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1405, %struct.rtx_def** %op1, align 8, !dbg !11224
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1359, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1405, metadata !10466, metadata !DIExpression()), !dbg !10672
  %call1406 = tail call %struct.rtx_def* @expand_and(i32 %cond1394, %struct.rtx_def* %call1359, %struct.rtx_def* %call1405, %struct.rtx_def* %target.addr.2) #6, !dbg !11225
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1406, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1406, %struct.rtx_def** %op0, align 8, !dbg !11226
  br label %if.end1420, !dbg !11227

if.else1407:                                      ; preds = %cond.end1393
  %idxprom1408 = zext i32 %cond1394 to i64, !dbg !11228
  %arrayidx1409 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1408, !dbg !11228
  %198 = load i8, i8* %arrayidx1409, align 1, !dbg !11228
  %conv1411 = zext i8 %198 to i64, !dbg !11228
  %mul1412 = shl nuw nsw i64 %conv1411, 3, !dbg !11228
  %sub1415 = sub nsw i64 %mul1412, %195, !dbg !11229
  %call1416 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %sub1415) #6, !dbg !11230
  call void @llvm.dbg.value(metadata %union.tree_node* %call1416, metadata !10594, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1359, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call1417 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %cond1394, %struct.rtx_def* %call1359, %union.tree_node* %call1416, %struct.rtx_def* %target.addr.2, i32 0) #6, !dbg !11232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1417, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1417, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call1418 = tail call %struct.rtx_def* @expand_shift(i32 84, i32 %cond1394, %struct.rtx_def* %call1417, %union.tree_node* %call1416, %struct.rtx_def* %target.addr.2, i32 0) #6, !dbg !11233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1418, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1418, %struct.rtx_def** %op0, align 8, !dbg !11234
  br label %if.end1420

if.end1420:                                       ; preds = %if.then1346, %if.then1403, %if.else1407
  %199 = phi %struct.rtx_def* [ %call1359, %if.then1346 ], [ %call1406, %if.then1403 ], [ %call1418, %if.else1407 ], !dbg !11235
  call void @llvm.dbg.value(metadata %struct.rtx_def* %199, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %cleanup1425, !dbg !11236

for.inc1422:                                      ; preds = %for.body1310, %lor.lhs.false1321, %land.lhs.true1332
  %inc1423 = add i64 %idx1261.0, 1, !dbg !11199
  call void @llvm.dbg.value(metadata i64 %inc1423, metadata !10581, metadata !DIExpression()), !dbg !11198
  br label %for.cond1264, !dbg !11199, !llvm.loop !11237

cleanup1425.loopexit:                             ; preds = %cond.end1307
  br label %cleanup1425

cleanup1425:                                      ; preds = %cleanup1425.loopexit, %if.end1420
  %cleanup.dest.slot.10 = phi i1 [ false, %if.end1420 ], [ true, %cleanup1425.loopexit ]
  %target.addr.3 = phi %struct.rtx_def* [ %target.addr.2, %if.end1420 ], [ %target.addr.1, %cleanup1425.loopexit ], !dbg !10672
  %retval.18 = phi %struct.rtx_def* [ %199, %if.end1420 ], [ undef, %cleanup1425.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.3, metadata !10461, metadata !DIExpression()), !dbg !10672
  br i1 %cleanup.dest.slot.10, label %normal_inner_ref, label %cleanup3078

normal_inner_ref:                                 ; preds = %if.end173, %if.end173, %sw.bb1253, %cleanup1425, %cleanup1249
  %target.addr.5 = phi %struct.rtx_def* [ %target.addr.1, %cleanup1249 ], [ %target.addr.1, %sw.bb1253 ], [ %target.addr.3, %cleanup1425 ], [ %target.addr.1, %if.end173 ], [ %target.addr.1, %if.end173 ], !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.5, metadata !10461, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.label(metadata !10671), !dbg !11239
  %200 = bitcast i32* %mode1 to i8*, !dbg !11240
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #7, !dbg !11240
  %201 = bitcast i64* %bitsize1432 to i8*, !dbg !11241
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #7, !dbg !11241
  %202 = bitcast i64* %bitpos to i8*, !dbg !11241
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #7, !dbg !11241
  %203 = bitcast %union.tree_node** %offset to i8*, !dbg !11242
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #7, !dbg !11242
  %204 = bitcast i32* %volatilep to i8*, !dbg !11243
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #7, !dbg !11243
  call void @llvm.dbg.value(metadata i32 0, metadata !10603, metadata !DIExpression()), !dbg !11244
  store i32 0, i32* %volatilep, align 4, !dbg !11245
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !10470, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  call void @llvm.dbg.value(metadata i32* %mode1, metadata !10597, metadata !DIExpression(DW_OP_deref)), !dbg !11244
  call void @llvm.dbg.value(metadata i64* %bitsize1432, metadata !10600, metadata !DIExpression(DW_OP_deref)), !dbg !11244
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !10601, metadata !DIExpression(DW_OP_deref)), !dbg !11244
  call void @llvm.dbg.value(metadata %union.tree_node** %offset, metadata !10602, metadata !DIExpression(DW_OP_deref)), !dbg !11244
  call void @llvm.dbg.value(metadata i32* %volatilep, metadata !10603, metadata !DIExpression(DW_OP_deref)), !dbg !11244
  %call1433 = call %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* nonnull %bitsize1432, i64* nonnull %bitpos, %union.tree_node** nonnull %offset, i32* nonnull %mode1, i32* nonnull %unsignedp, i32* nonnull %volatilep, i8 zeroext 1) #8, !dbg !11246
  call void @llvm.dbg.value(metadata %union.tree_node* %call1433, metadata !10605, metadata !DIExpression()), !dbg !11244
  %cmp1434 = icmp eq %union.tree_node* %call1433, %exp, !dbg !11247
  br i1 %cmp1434, label %cond.true1436, label %cond.end1438, !dbg !11247

cond.true1436:                                    ; preds = %normal_inner_ref
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8943, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11247
  br label %cond.end1438, !dbg !11247

cond.end1438:                                     ; preds = %normal_inner_ref, %cond.true1436
  %type1441 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1433, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11248
  %205 = bitcast %union.tree_node** %type1441 to i64**, !dbg !11248
  %206 = load i64*, i64** %205, align 8, !dbg !11248
  %bf.load1443 = load i64, i64* %206, align 8, !dbg !11248
  %bf.cast144586 = and i64 %bf.load1443, 65535, !dbg !11249
  %cmp1446 = icmp eq i64 %bf.cast144586, 17, !dbg !11249
  br i1 %cmp1446, label %land.lhs.true1448, label %cond.false1463, !dbg !11250

land.lhs.true1448:                                ; preds = %cond.end1438
  %size1452 = getelementptr inbounds i64, i64* %206, i64 4, !dbg !11251
  %207 = bitcast i64* %size1452 to i64**, !dbg !11251
  %208 = load i64*, i64** %207, align 8, !dbg !11251
  %bf.load1454 = load i64, i64* %208, align 8, !dbg !11251
  %bf.cast1456103 = and i64 %bf.load1454, 65535, !dbg !11252
  %cmp1457 = icmp ne i64 %bf.cast1456103, 23, !dbg !11252
  %cmp1460 = icmp ne i32 %modifier, 1, !dbg !11253
  %or.cond26 = and i1 %cmp1457, %cmp1460, !dbg !11254
  br i1 %or.cond26, label %cond.end1464, label %cond.false1463, !dbg !11254

cond.false1463:                                   ; preds = %land.lhs.true1448, %cond.end1438
  br label %cond.end1464, !dbg !11248

cond.end1464:                                     ; preds = %land.lhs.true1448, %cond.false1463
  %cond1465 = phi %struct.rtx_def* [ null, %cond.false1463 ], [ %target.addr.5, %land.lhs.true1448 ], !dbg !11248
  switch i32 %modifier, label %cond.false1475 [
    i32 4, label %cond.end1476
    i32 3, label %cond.end1476
    i32 1, label %cond.end1476
  ], !dbg !11255

cond.false1475:                                   ; preds = %cond.end1464
  br label %cond.end1476, !dbg !11256

cond.end1476:                                     ; preds = %cond.end1464, %cond.end1464, %cond.end1464, %cond.false1475
  %cond1477 = phi i32 [ 0, %cond.false1475 ], [ %modifier, %cond.end1464 ], [ %modifier, %cond.end1464 ], [ %modifier, %cond.end1464 ], !dbg !11256
  %call1478 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call1433, %struct.rtx_def* %cond1465, i32 0, i32 %cond1477) #8, !dbg !11257
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1478, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1478, %struct.rtx_def** %op0, align 8, !dbg !11258
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1478, metadata !10606, metadata !DIExpression()), !dbg !11244
  %.cast87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1478, i64 0, i32 0, !dbg !11259
  %bf.load1479 = load i32, i32* %.cast87, align 8, !dbg !11259
  %bf.clear1480 = and i32 %bf.load1479, 65535, !dbg !11259
  %idxprom1481 = zext i32 %bf.clear1480 to i64, !dbg !11259
  %arrayidx1482 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1481, !dbg !11259
  %209 = load i32, i32* %arrayidx1482, align 4, !dbg !11259
  %cmp1483 = icmp eq i32 %209, 9, !dbg !11259
  br i1 %cmp1483, label %cond.true1485, label %cond.false1508, !dbg !11259

cond.true1485:                                    ; preds = %cond.end1476
  %210 = load i64*, i64** %205, align 8, !dbg !11260
  %bf.load1489 = load i64, i64* %210, align 8, !dbg !11260
  %bf.cast1491101 = and i64 %bf.load1489, 65535, !dbg !11260
  %cmp1492 = icmp eq i64 %bf.cast1491101, 14, !dbg !11260
  br i1 %cmp1492, label %cond.true1494, label %cond.false1498, !dbg !11260

cond.true1494:                                    ; preds = %cond.true1485
  %.cast102 = bitcast i64* %210 to %union.tree_node*, !dbg !11260
  %call1497 = call i32 @vector_type_mode(%union.tree_node* %.cast102) #6, !dbg !11260
  br label %cond.end1512, !dbg !11260

cond.false1498:                                   ; preds = %cond.true1485
  %type1501 = bitcast i64* %210 to %struct.tree_type*, !dbg !11260
  %mode1502 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1501, i64 0, i32 6, !dbg !11260
  %bf.load1503 = load i32, i32* %mode1502, align 4, !dbg !11260
  %bf.lshr1504 = lshr i32 %bf.load1503, 16, !dbg !11260
  %bf.clear1505 = and i32 %bf.lshr1504, 255, !dbg !11260
  br label %cond.end1512, !dbg !11260

cond.false1508:                                   ; preds = %cond.end1476
  %bf.lshr1510 = lshr i32 %bf.load1479, 16, !dbg !11261
  %bf.clear1511 = and i32 %bf.lshr1510, 255, !dbg !11261
  br label %cond.end1512, !dbg !11259

cond.end1512:                                     ; preds = %cond.true1494, %cond.false1498, %cond.false1508
  %cond1513 = phi i32 [ %bf.clear1511, %cond.false1508 ], [ %call1497, %cond.true1494 ], [ %bf.clear1505, %cond.false1498 ], !dbg !11259
  call void @llvm.dbg.value(metadata i32 %cond1513, metadata !10599, metadata !DIExpression()), !dbg !11244
  %211 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !11262
  call void @llvm.dbg.value(metadata %union.tree_node* %211, metadata !10602, metadata !DIExpression()), !dbg !11244
  %tobool1514 = icmp ne %union.tree_node* %211, null, !dbg !11262
  %212 = load i32, i32* %mode1, align 4, !dbg !11263
  call void @llvm.dbg.value(metadata i32 %212, metadata !10597, metadata !DIExpression()), !dbg !11244
  %cmp1516 = icmp eq i32 %212, 1, !dbg !11264
  %or.cond27 = or i1 %tobool1514, %cmp1516, !dbg !11265
  br i1 %or.cond27, label %lor.end1528, label %lor.rhs1518, !dbg !11265

lor.rhs1518:                                      ; preds = %cond.end1512
  %213 = load i64, i64* %bitpos, align 8, !dbg !11266
  call void @llvm.dbg.value(metadata i64 %213, metadata !10601, metadata !DIExpression()), !dbg !11244
  %214 = load i64, i64* %bitsize1432, align 8, !dbg !11267
  call void @llvm.dbg.value(metadata i64 %214, metadata !10600, metadata !DIExpression()), !dbg !11244
  %add = add nsw i64 %213, %214, !dbg !11268
  %idxprom1519 = zext i32 %cond1513 to i64, !dbg !11269
  %arrayidx1520 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1519, !dbg !11269
  %215 = load i8, i8* %arrayidx1520, align 1, !dbg !11269
  %conv1522 = zext i8 %215 to i64, !dbg !11269
  %mul1523 = shl nuw nsw i64 %conv1522, 3, !dbg !11269
  %cmp1526 = icmp sgt i64 %add, %mul1523, !dbg !11270
  br label %lor.end1528, !dbg !11271

lor.end1528:                                      ; preds = %lor.rhs1518, %cond.end1512
  %216 = phi i1 [ true, %cond.end1512 ], [ %cmp1526, %lor.rhs1518 ]
  %lor.ext1529 = zext i1 %216 to i32, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %lor.ext1529, metadata !10604, metadata !DIExpression()), !dbg !11244
  %217 = bitcast %struct.rtx_def** %op0 to i32**, !dbg !11272
  %218 = load i32*, i32** %217, align 8, !dbg !11272
  %bf.load1530 = load i32, i32* %218, align 8, !dbg !11272
  %bf.clear1531 = and i32 %bf.load1530, 65535, !dbg !11272
  %cmp1532 = icmp ne i32 %bf.clear1531, 41, !dbg !11274
  %or.cond28 = or i1 %cmp1532, %216, !dbg !11275
  %219 = bitcast i32* %218 to %struct.rtx_def*, !dbg !11275
  br i1 %or.cond28, label %if.end1632, label %if.then1536, !dbg !11275

if.then1536:                                      ; preds = %lor.end1528
  %220 = load i64, i64* %bitpos, align 8, !dbg !11276
  call void @llvm.dbg.value(metadata i64 %220, metadata !10601, metadata !DIExpression()), !dbg !11244
  %cmp1537 = icmp eq i64 %220, 0, !dbg !11279
  br i1 %cmp1537, label %land.lhs.true1539, label %if.end1553, !dbg !11280

land.lhs.true1539:                                ; preds = %if.then1536
  %221 = load i64, i64* %bitsize1432, align 8, !dbg !11281
  call void @llvm.dbg.value(metadata i64 %221, metadata !10600, metadata !DIExpression()), !dbg !11244
  %bf.lshr1541 = lshr i32 %bf.load1530, 16, !dbg !11282
  %bf.clear1542 = and i32 %bf.lshr1541, 255, !dbg !11282
  %idxprom1543 = zext i32 %bf.clear1542 to i64, !dbg !11282
  %arrayidx1544 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1543, !dbg !11282
  %222 = load i8, i8* %arrayidx1544, align 1, !dbg !11282
  %conv1546 = zext i8 %222 to i64, !dbg !11282
  %mul1547 = shl nuw nsw i64 %conv1546, 3, !dbg !11282
  %cmp1550 = icmp eq i64 %221, %mul1547, !dbg !11283
  br i1 %cmp1550, label %if.then1552, label %if.end1553, !dbg !11284

if.then1552:                                      ; preds = %land.lhs.true1539
  call void @llvm.dbg.value(metadata %struct.rtx_def* %219, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %cleanup2244, !dbg !11285

if.end1553:                                       ; preds = %land.lhs.true1539, %if.then1536
  call void @llvm.dbg.value(metadata i64 %220, metadata !10601, metadata !DIExpression()), !dbg !11244
  br i1 %cmp1537, label %land.lhs.true1556, label %if.end1553.if.else1583_crit_edge, !dbg !11286

if.end1553.if.else1583_crit_edge:                 ; preds = %if.end1553
  %arrayidx1586.phi.trans.insert = getelementptr inbounds i32, i32* %218, i64 2, !dbg !11288
  %.phi.trans.insert163 = bitcast i32* %arrayidx1586.phi.trans.insert to i32**, !dbg !11288
  %.pre164 = load i32*, i32** %.phi.trans.insert163, align 8, !dbg !11290
  %bf.load1588.pre = load i32, i32* %.pre164, align 8, !dbg !11290
  %.pre187 = lshr i32 %bf.load1588.pre, 16, !dbg !11290
  %.pre188 = and i32 %.pre187, 255, !dbg !11290
  %.pre189 = zext i32 %.pre188 to i64, !dbg !11290
  br label %if.else1583, !dbg !11286

land.lhs.true1556:                                ; preds = %if.end1553
  %223 = load i64, i64* %bitsize1432, align 8, !dbg !11291
  call void @llvm.dbg.value(metadata i64 %223, metadata !10600, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata %struct.rtx_def* %219, metadata !10465, metadata !DIExpression()), !dbg !10672
  %arrayidx1559 = getelementptr inbounds i32, i32* %218, i64 2, !dbg !11292
  %224 = bitcast i32* %arrayidx1559 to i32**, !dbg !11292
  %225 = load i32*, i32** %224, align 8, !dbg !11292
  %bf.load1561 = load i32, i32* %225, align 8, !dbg !11292
  %bf.lshr1562 = lshr i32 %bf.load1561, 16, !dbg !11292
  %bf.clear1563 = and i32 %bf.lshr1562, 255, !dbg !11292
  %idxprom1564 = zext i32 %bf.clear1563 to i64, !dbg !11292
  %arrayidx1565 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1564, !dbg !11292
  %226 = load i8, i8* %arrayidx1565, align 1, !dbg !11292
  %conv1567 = zext i8 %226 to i64, !dbg !11292
  %mul1568 = shl nuw nsw i64 %conv1567, 3, !dbg !11292
  %cmp1571 = icmp eq i64 %223, %mul1568, !dbg !11293
  call void @llvm.dbg.value(metadata i64 %223, metadata !10600, metadata !DIExpression()), !dbg !11244
  %tobool1574 = icmp ne i64 %223, 0, !dbg !11294
  %or.cond29 = and i1 %cmp1571, %tobool1574, !dbg !11295
  br i1 %or.cond29, label %if.then1575, label %if.else1583, !dbg !11295

if.then1575:                                      ; preds = %land.lhs.true1556
  %227 = ptrtoint i32* %225 to i64, !dbg !11295
  call void @llvm.dbg.value(metadata %struct.rtx_def* %219, metadata !10465, metadata !DIExpression()), !dbg !10672
  %228 = bitcast %struct.rtx_def** %op0 to i64*, !dbg !11296
  store i64 %227, i64* %228, align 8, !dbg !11296
  %bf.load1580 = load i32, i32* %225, align 8, !dbg !11298
  %bf.lshr1581 = lshr i32 %bf.load1580, 16, !dbg !11298
  %bf.clear1582 = and i32 %bf.lshr1581, 255, !dbg !11298
  call void @llvm.dbg.value(metadata i32 %bf.clear1582, metadata !10599, metadata !DIExpression()), !dbg !11244
  %229 = bitcast i32* %225 to %struct.rtx_def*, !dbg !11299
  br label %if.end1632, !dbg !11299

if.else1583:                                      ; preds = %if.end1553.if.else1583_crit_edge, %land.lhs.true1556
  %idxprom1591.pre-phi = phi i64 [ %.pre189, %if.end1553.if.else1583_crit_edge ], [ %idxprom1564, %land.lhs.true1556 ], !dbg !11290
  call void @llvm.dbg.value(metadata i64 %220, metadata !10601, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata %struct.rtx_def* %219, metadata !10465, metadata !DIExpression()), !dbg !10672
  %arrayidx1592 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1591.pre-phi, !dbg !11290
  %230 = load i8, i8* %arrayidx1592, align 1, !dbg !11290
  %conv1594 = zext i8 %230 to i64, !dbg !11290
  %mul1595 = shl nuw nsw i64 %conv1594, 3, !dbg !11290
  %cmp1598 = icmp eq i64 %220, %mul1595, !dbg !11300
  br i1 %cmp1598, label %land.lhs.true1600, label %if.end1632, !dbg !11301

land.lhs.true1600:                                ; preds = %if.else1583
  %231 = load i64, i64* %bitsize1432, align 8, !dbg !11302
  call void @llvm.dbg.value(metadata i64 %231, metadata !10600, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata %struct.rtx_def* %219, metadata !10465, metadata !DIExpression()), !dbg !10672
  %232 = getelementptr inbounds i32, i32* %218, i64 4, !dbg !11303
  %233 = bitcast i32* %232 to i32**, !dbg !11303
  %234 = load i32*, i32** %233, align 8, !dbg !11303
  %bf.load1605 = load i32, i32* %234, align 8, !dbg !11303
  %bf.lshr1606 = lshr i32 %bf.load1605, 16, !dbg !11303
  %bf.clear1607 = and i32 %bf.lshr1606, 255, !dbg !11303
  %idxprom1608 = zext i32 %bf.clear1607 to i64, !dbg !11303
  %arrayidx1609 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1608, !dbg !11303
  %235 = load i8, i8* %arrayidx1609, align 1, !dbg !11303
  %conv1611 = zext i8 %235 to i64, !dbg !11303
  %mul1612 = shl nuw nsw i64 %conv1611, 3, !dbg !11303
  %cmp1615 = icmp eq i64 %231, %mul1612, !dbg !11304
  call void @llvm.dbg.value(metadata i64 %220, metadata !10601, metadata !DIExpression()), !dbg !11244
  %tobool1618 = icmp ne i64 %220, 0, !dbg !11305
  %or.cond30 = and i1 %cmp1615, %tobool1618, !dbg !11306
  call void @llvm.dbg.value(metadata i64 %231, metadata !10600, metadata !DIExpression()), !dbg !11244
  %tobool1620 = icmp ne i64 %231, 0, !dbg !11307
  %or.cond31 = and i1 %or.cond30, %tobool1620, !dbg !11306
  br i1 %or.cond31, label %if.then1621, label %if.end1632, !dbg !11306

if.then1621:                                      ; preds = %land.lhs.true1600
  %236 = ptrtoint i32* %234 to i64, !dbg !11306
  call void @llvm.dbg.value(metadata %struct.rtx_def* %219, metadata !10465, metadata !DIExpression()), !dbg !10672
  %237 = bitcast %struct.rtx_def** %op0 to i64*, !dbg !11308
  store i64 %236, i64* %237, align 8, !dbg !11308
  call void @llvm.dbg.value(metadata i64 0, metadata !10601, metadata !DIExpression()), !dbg !11244
  store i64 0, i64* %bitpos, align 8, !dbg !11310
  %bf.load1626 = load i32, i32* %234, align 8, !dbg !11311
  %bf.lshr1627 = lshr i32 %bf.load1626, 16, !dbg !11311
  %bf.clear1628 = and i32 %bf.lshr1627, 255, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %bf.clear1628, metadata !10599, metadata !DIExpression()), !dbg !11244
  %238 = bitcast i32* %234 to %struct.rtx_def*, !dbg !11312
  br label %if.end1632, !dbg !11312

if.end1632:                                       ; preds = %if.then1575, %if.else1583, %land.lhs.true1600, %if.then1621, %lor.end1528
  %bf.load1633 = phi i32 [ %bf.load1530, %lor.end1528 ], [ %bf.load1580, %if.then1575 ], [ %bf.load1626, %if.then1621 ], [ %bf.load1530, %land.lhs.true1600 ], [ %bf.load1530, %if.else1583 ], !dbg !11313
  %239 = phi i32* [ %218, %lor.end1528 ], [ %225, %if.then1575 ], [ %234, %if.then1621 ], [ %218, %land.lhs.true1600 ], [ %218, %if.else1583 ]
  %240 = phi %struct.rtx_def* [ %219, %lor.end1528 ], [ %229, %if.then1575 ], [ %238, %if.then1621 ], [ %219, %land.lhs.true1600 ], [ %219, %if.else1583 ]
  %241 = phi %struct.rtx_def* [ %219, %lor.end1528 ], [ %229, %if.then1575 ], [ %238, %if.then1621 ], [ %219, %land.lhs.true1600 ], [ %219, %if.else1583 ]
  %mode2.2 = phi i32 [ %cond1513, %lor.end1528 ], [ %bf.clear1582, %if.then1575 ], [ %bf.clear1628, %if.then1621 ], [ %cond1513, %land.lhs.true1600 ], [ %cond1513, %if.else1583 ], !dbg !11244
  %must_force_mem.2 = phi i32 [ %lor.ext1529, %lor.end1528 ], [ %lor.ext1529, %if.then1575 ], [ %lor.ext1529, %if.then1621 ], [ 1, %land.lhs.true1600 ], [ 1, %if.else1583 ], !dbg !11314
  call void @llvm.dbg.value(metadata i32 %must_force_mem.2, metadata !10604, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i32 %mode2.2, metadata !10599, metadata !DIExpression()), !dbg !11244
  %bf.clear1634 = and i32 %bf.load1633, 65535, !dbg !11313
  %idxprom1635 = zext i32 %bf.clear1634 to i64, !dbg !11313
  %arrayidx1636 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1635, !dbg !11313
  %242 = load i32, i32* %arrayidx1636, align 4, !dbg !11313
  %cmp1637 = icmp eq i32 %242, 9, !dbg !11313
  %cmp1640 = icmp ne i32 %mode2.2, 1, !dbg !11315
  %or.cond32 = and i1 %cmp1637, %cmp1640, !dbg !11316
  br i1 %or.cond32, label %land.lhs.true1642, label %if.else1650, !dbg !11316

land.lhs.true1642:                                ; preds = %if.end1632
  call void @llvm.dbg.value(metadata %struct.rtx_def* %241, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call1643 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %241) #6, !dbg !11317
  %tobool1645 = icmp eq i8 %call1643, 0, !dbg !11317
  %tobool1647 = icmp ne i32 %must_force_mem.2, 0, !dbg !11318
  %or.cond33 = or i1 %tobool1645, %tobool1647, !dbg !11319
  br i1 %or.cond33, label %land.lhs.true1642.if.else1650_crit_edge, label %if.then1648, !dbg !11319

land.lhs.true1642.if.else1650_crit_edge:          ; preds = %land.lhs.true1642
  %.pre166 = load i32*, i32** %217, align 8, !dbg !11320
  %243 = bitcast i32* %.pre166 to %struct.rtx_def*, !dbg !11319
  %bf.load1651.pre = load i32, i32* %.pre166, align 8, !dbg !11320
  %.pre183 = and i32 %bf.load1651.pre, 65535, !dbg !11320
  %.pre184 = zext i32 %.pre183 to i64, !dbg !11320
  br label %if.else1650, !dbg !11319

if.then1648:                                      ; preds = %land.lhs.true1642
  %244 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %244, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call1649 = call %struct.rtx_def* @force_reg(i32 %mode2.2, %struct.rtx_def* %244) #6, !dbg !11322
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1649, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1649, %struct.rtx_def** %op0, align 8, !dbg !11323
  %245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1649, i64 0, i32 0, !dbg !11324
  br label %if.end1717, !dbg !11324

if.else1650:                                      ; preds = %land.lhs.true1642.if.else1650_crit_edge, %if.end1632
  %idxprom1653.pre-phi = phi i64 [ %.pre184, %land.lhs.true1642.if.else1650_crit_edge ], [ %idxprom1635, %if.end1632 ], !dbg !11320
  %bf.clear1652.pre-phi = phi i32 [ %.pre183, %land.lhs.true1642.if.else1650_crit_edge ], [ %bf.clear1634, %if.end1632 ], !dbg !11320
  %246 = phi i32* [ %.pre166, %land.lhs.true1642.if.else1650_crit_edge ], [ %239, %if.end1632 ]
  %247 = phi %struct.rtx_def* [ %243, %land.lhs.true1642.if.else1650_crit_edge ], [ %240, %if.end1632 ]
  %arrayidx1654 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1653.pre-phi, !dbg !11320
  %248 = load i32, i32* %arrayidx1654, align 4, !dbg !11320
  %cmp1655 = icmp eq i32 %248, 9, !dbg !11320
  br i1 %cmp1655, label %land.lhs.true1657, label %if.else1662, !dbg !11325

land.lhs.true1657:                                ; preds = %if.else1650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %247, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call1658 = call %struct.rtx_def* @force_const_mem(i32 %mode2.2, %struct.rtx_def* %247) #6, !dbg !11326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1658, metadata !10607, metadata !DIExpression()), !dbg !11244
  %tobool1659 = icmp eq %struct.rtx_def* %call1658, null, !dbg !11327
  br i1 %tobool1659, label %land.lhs.true1657.if.else1662_crit_edge, label %if.then1660, !dbg !11328

land.lhs.true1657.if.else1662_crit_edge:          ; preds = %land.lhs.true1657
  %.pre167 = load i32*, i32** %217, align 8, !dbg !11329
  %bf.load1663.pre = load i32, i32* %.pre167, align 8, !dbg !11329
  %.pre185 = and i32 %bf.load1663.pre, 65535, !dbg !11329
  %.pre186 = zext i32 %.pre185 to i64, !dbg !11329
  br label %if.else1662, !dbg !11328

if.then1660:                                      ; preds = %land.lhs.true1657
  %call1661 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* nonnull %call1658) #6, !dbg !11330
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1661, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1661, %struct.rtx_def** %op0, align 8, !dbg !11331
  %249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1661, i64 0, i32 0, !dbg !11332
  br label %if.end1717, !dbg !11332

if.else1662:                                      ; preds = %land.lhs.true1657.if.else1662_crit_edge, %if.else1650
  %idxprom1665.pre-phi = phi i64 [ %.pre186, %land.lhs.true1657.if.else1662_crit_edge ], [ %idxprom1653.pre-phi, %if.else1650 ], !dbg !11329
  %bf.clear1664.pre-phi = phi i32 [ %.pre185, %land.lhs.true1657.if.else1662_crit_edge ], [ %bf.clear1652.pre-phi, %if.else1650 ], !dbg !11329
  %250 = phi i32* [ %.pre167, %land.lhs.true1657.if.else1662_crit_edge ], [ %246, %if.else1650 ]
  %arrayidx1666 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1665.pre-phi, !dbg !11329
  %251 = load i32, i32* %arrayidx1666, align 4, !dbg !11329
  %cmp1667 = icmp eq i32 %251, 9, !dbg !11329
  br i1 %cmp1667, label %if.then1676, label %lor.lhs.false1669, !dbg !11333

lor.lhs.false1669:                                ; preds = %if.else1662
  %cmp1672 = icmp ne i32 %bf.clear1664.pre-phi, 43, !dbg !11334
  %tobool1675 = icmp ne i32 %must_force_mem.2, 0, !dbg !11335
  %or.cond34 = and i1 %cmp1672, %tobool1675, !dbg !11336
  br i1 %or.cond34, label %if.then1676, label %if.end1717, !dbg !11336

if.then1676:                                      ; preds = %lor.lhs.false1669, %if.else1662
  %252 = load %union.tree_node*, %union.tree_node** %type1441, align 8, !dbg !11337
  %.cast148 = getelementptr inbounds %union.tree_node, %union.tree_node* %252, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11338
  %bf.load1690 = load i64, i64* %.cast148, align 8, !dbg !11338
  %253 = lshr i64 %bf.load1690, 18, !dbg !11338
  %254 = trunc i64 %253 to i32, !dbg !11338
  %mul1694 = and i32 %254, 2, !dbg !11338
  %255 = bitcast %union.tree_node* %252 to %struct.tree_type*, !dbg !11338
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %255, i64 0, i32 6, !dbg !11338
  %bf.load1698 = load i32, i32* %restrict_flag, align 4, !dbg !11338
  %256 = lshr i32 %bf.load1698, 11, !dbg !11338
  %mul1701 = and i32 %256, 4, !dbg !11338
  %or1702 = or i32 %mul1694, %mul1701, !dbg !11338
  %257 = lshr i64 %bf.load1690, 48, !dbg !11338
  %258 = trunc i64 %257 to i32, !dbg !11338
  %shl1709 = and i32 %258, 65280, !dbg !11338
  %or1710 = or i32 %or1702, %shl1709, !dbg !11338
  %or1711 = or i32 %or1710, 1, !dbg !11339
  %call1712 = call %union.tree_node* @build_qualified_type(%union.tree_node* %252, i32 %or1711) #6, !dbg !11340
  call void @llvm.dbg.value(metadata %union.tree_node* %call1712, metadata !10608, metadata !DIExpression()), !dbg !11341
  %call1713 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call1712, i32 1, i32 1, i32 1) #6, !dbg !11342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1713, metadata !10607, metadata !DIExpression()), !dbg !11244
  %259 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %259, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call1714 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1713, %struct.rtx_def* %259) #8, !dbg !11344
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1713, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1713, %struct.rtx_def** %op0, align 8, !dbg !11345
  %260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1713, i64 0, i32 0, !dbg !11346
  br label %if.end1717, !dbg !11346

if.end1717:                                       ; preds = %if.then1660, %lor.lhs.false1669, %if.then1676, %if.then1648
  %261 = phi i32* [ %249, %if.then1660 ], [ %250, %lor.lhs.false1669 ], [ %260, %if.then1676 ], [ %245, %if.then1648 ]
  %262 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !11347
  call void @llvm.dbg.value(metadata %union.tree_node* %262, metadata !10602, metadata !DIExpression()), !dbg !11244
  %tobool1718 = icmp eq %union.tree_node* %262, null, !dbg !11347
  br i1 %tobool1718, label %if.end1808, label %if.then1719, !dbg !11348

if.then1719:                                      ; preds = %if.end1717
  call void @llvm.dbg.value(metadata %union.tree_node* %262, metadata !10602, metadata !DIExpression()), !dbg !11244
  %call1721 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* nonnull %262, %struct.rtx_def* null, i32 0, i32 2) #8, !dbg !11349
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1721, metadata !10616, metadata !DIExpression()), !dbg !11350
  %263 = load i32*, i32** %217, align 8, !dbg !11351
  %bf.load1722 = load i32, i32* %263, align 8, !dbg !11351
  %bf.clear1723 = and i32 %bf.load1722, 65535, !dbg !11351
  %cmp1724 = icmp eq i32 %bf.clear1723, 43, !dbg !11351
  %264 = bitcast i32* %263 to %struct.rtx_def*, !dbg !11351
  br i1 %cmp1724, label %cond.end1728, label %cond.true1726, !dbg !11351

cond.true1726:                                    ; preds = %if.then1719
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9034, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11351
  %.pre168 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11352
  br label %cond.end1728, !dbg !11351

cond.end1728:                                     ; preds = %if.then1719, %cond.true1726
  %265 = phi %struct.rtx_def* [ %264, %if.then1719 ], [ %.pre168, %cond.true1726 ]
  %266 = phi %struct.rtx_def* [ %264, %if.then1719 ], [ %.pre168, %cond.true1726 ], !dbg !11352
  %267 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !11353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %266, metadata !10465, metadata !DIExpression()), !dbg !10672
  %268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11352
  %rt_mem1733 = bitcast %union.rtunion_def* %268 to %struct.mem_attrs**, !dbg !11352
  %269 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem1733, align 8, !dbg !11352
  %cmp1734 = icmp eq %struct.mem_attrs* %269, null, !dbg !11352
  br i1 %cmp1734, label %cond.end1744, label %cond.false1737, !dbg !11352

cond.false1737:                                   ; preds = %cond.end1728
  call void @llvm.dbg.value(metadata %struct.rtx_def* %265, metadata !10465, metadata !DIExpression()), !dbg !10672
  %270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11352
  %rt_mem1741 = bitcast %union.rtunion_def* %270 to %struct.mem_attrs**, !dbg !11352
  %271 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem1741, align 8, !dbg !11352
  %addrspace1742 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %271, i64 0, i32 5, !dbg !11352
  %272 = load i8, i8* %addrspace1742, align 8, !dbg !11352
  br label %cond.end1744, !dbg !11352

cond.end1744:                                     ; preds = %cond.end1728, %cond.false1737
  %cond1745 = phi i8 [ %272, %cond.false1737 ], [ 0, %cond.end1728 ], !dbg !11352
  %call1747 = call i32 %267(i8 zeroext %cond1745) #6, !dbg !11354
  call void @llvm.dbg.value(metadata i32 %call1747, metadata !10613, metadata !DIExpression()), !dbg !11350
  %273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1721, i64 0, i32 0, !dbg !11355
  %bf.load1748 = load i32, i32* %273, align 8, !dbg !11355
  %bf.lshr1749 = lshr i32 %bf.load1748, 16, !dbg !11355
  %bf.clear1750 = and i32 %bf.lshr1749, 255, !dbg !11355
  %cmp1751 = icmp eq i32 %bf.clear1750, %call1747, !dbg !11357
  br i1 %cmp1751, label %if.end1755, label %if.then1753, !dbg !11358

if.then1753:                                      ; preds = %cond.end1744
  %call1754 = call %struct.rtx_def* @convert_to_mode(i32 %call1747, %struct.rtx_def* %call1721, i32 0) #8, !dbg !11359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1754, metadata !10616, metadata !DIExpression()), !dbg !11350
  br label %if.end1755, !dbg !11360

if.end1755:                                       ; preds = %cond.end1744, %if.then1753
  %offset_rtx.0 = phi %struct.rtx_def* [ %call1754, %if.then1753 ], [ %call1721, %cond.end1744 ], !dbg !11350
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset_rtx.0, metadata !10616, metadata !DIExpression()), !dbg !11350
  %274 = load i32*, i32** %217, align 8, !dbg !11361
  %bf.load1756 = load i32, i32* %274, align 8, !dbg !11361
  %bf.clear1758 = and i32 %bf.load1756, 16711680, !dbg !11361
  %cmp1759 = icmp eq i32 %bf.clear1758, 65536, !dbg !11363
  br i1 %cmp1759, label %land.lhs.true1761, label %if.end1805, !dbg !11364

land.lhs.true1761:                                ; preds = %if.end1755
  call void @llvm.dbg.value(metadata i32* %274, metadata !10465, metadata !DIExpression()), !dbg !10672
  %arrayidx1764 = getelementptr inbounds i32, i32* %274, i64 2, !dbg !11365
  %275 = bitcast i32* %arrayidx1764 to i32**, !dbg !11365
  %276 = load i32*, i32** %275, align 8, !dbg !11365
  %bf.load1766 = load i32, i32* %276, align 8, !dbg !11365
  %bf.clear1768 = and i32 %bf.load1766, 16711680, !dbg !11365
  %cmp1769 = icmp ne i32 %bf.clear1768, 0, !dbg !11366
  %277 = load i64, i64* %bitsize1432, align 8, !dbg !11367
  call void @llvm.dbg.value(metadata i64 %277, metadata !10600, metadata !DIExpression()), !dbg !11244
  %cmp1772 = icmp ne i64 %277, 0, !dbg !11368
  %or.cond35 = and i1 %cmp1769, %cmp1772, !dbg !11369
  br i1 %or.cond35, label %land.lhs.true1774, label %if.end1805, !dbg !11369

land.lhs.true1774:                                ; preds = %land.lhs.true1761
  %278 = load i64, i64* %bitpos, align 8, !dbg !11370
  call void @llvm.dbg.value(metadata i64 %278, metadata !10601, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i64 %277, metadata !10600, metadata !DIExpression()), !dbg !11244
  %rem = srem i64 %278, %277, !dbg !11371
  %cmp1775 = icmp eq i64 %rem, 0, !dbg !11372
  br i1 %cmp1775, label %land.lhs.true1777, label %if.end1805, !dbg !11373

land.lhs.true1777:                                ; preds = %land.lhs.true1774
  call void @llvm.dbg.value(metadata i64 %277, metadata !10600, metadata !DIExpression()), !dbg !11244
  %279 = load i32, i32* %mode1, align 4, !dbg !11374
  call void @llvm.dbg.value(metadata i32 %279, metadata !10597, metadata !DIExpression()), !dbg !11244
  %call1778 = call i32 @get_mode_alignment(i32 %279) #6, !dbg !11374
  %conv1779 = zext i32 %call1778 to i64, !dbg !11374
  %rem1780 = srem i64 %277, %conv1779, !dbg !11375
  %cmp1781 = icmp eq i64 %rem1780, 0, !dbg !11376
  br i1 %cmp1781, label %land.lhs.true1783, label %if.end1805, !dbg !11377

land.lhs.true1783:                                ; preds = %land.lhs.true1777
  %280 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %280, metadata !10465, metadata !DIExpression()), !dbg !10672
  %281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11378
  %rt_mem1787 = bitcast %union.rtunion_def* %281 to %struct.mem_attrs**, !dbg !11378
  %282 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem1787, align 8, !dbg !11378
  %cmp1788 = icmp eq %struct.mem_attrs* %282, null, !dbg !11378
  br i1 %cmp1788, label %cond.end1797, label %cond.true1790, !dbg !11378

cond.true1790:                                    ; preds = %land.lhs.true1783
  call void @llvm.dbg.value(metadata %struct.rtx_def* %280, metadata !10465, metadata !DIExpression()), !dbg !10672
  %align1795 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %282, i64 0, i32 4, !dbg !11378
  %283 = load i32, i32* %align1795, align 4, !dbg !11378
  br label %cond.end1797, !dbg !11378

cond.end1797:                                     ; preds = %land.lhs.true1783, %cond.true1790
  %cond1798 = phi i32 [ %283, %cond.true1790 ], [ 8, %land.lhs.true1783 ], !dbg !11378
  %284 = load i32, i32* %mode1, align 4, !dbg !11379
  call void @llvm.dbg.value(metadata i32 %284, metadata !10597, metadata !DIExpression()), !dbg !11244
  %call1799 = call i32 @get_mode_alignment(i32 %284) #6, !dbg !11379
  %cmp1800 = icmp eq i32 %cond1798, %call1799, !dbg !11380
  br i1 %cmp1800, label %if.then1802, label %if.end1805, !dbg !11381

if.then1802:                                      ; preds = %cond.end1797
  %285 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %285, metadata !10465, metadata !DIExpression()), !dbg !10672
  %286 = load i32, i32* %mode1, align 4, !dbg !11382
  call void @llvm.dbg.value(metadata i32 %286, metadata !10597, metadata !DIExpression()), !dbg !11244
  %287 = load i64, i64* %bitpos, align 8, !dbg !11382
  call void @llvm.dbg.value(metadata i64 %287, metadata !10601, metadata !DIExpression()), !dbg !11244
  %div1803 = sdiv i64 %287, 8, !dbg !11382
  %call1804 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %285, i32 %286, i64 %div1803, i32 1, i32 1) #6, !dbg !11382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1804, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1804, %struct.rtx_def** %op0, align 8, !dbg !11384
  call void @llvm.dbg.value(metadata i64 0, metadata !10601, metadata !DIExpression()), !dbg !11244
  store i64 0, i64* %bitpos, align 8, !dbg !11385
  br label %if.end1805, !dbg !11386

if.end1805:                                       ; preds = %if.then1802, %cond.end1797, %land.lhs.true1777, %land.lhs.true1774, %land.lhs.true1761, %if.end1755
  %288 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11387
  call void @llvm.dbg.value(metadata %struct.rtx_def* %288, metadata !10465, metadata !DIExpression()), !dbg !10672
  %289 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !11388
  call void @llvm.dbg.value(metadata %union.tree_node* %289, metadata !10602, metadata !DIExpression()), !dbg !11244
  %call1806 = call i64 @highest_pow2_factor(%union.tree_node* %289) #8, !dbg !11389
  %call1807 = call %struct.rtx_def* @offset_address(%struct.rtx_def* %288, %struct.rtx_def* %offset_rtx.0, i64 %call1806) #6, !dbg !11390
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1807, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1807, %struct.rtx_def** %op0, align 8, !dbg !11391
  %290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1807, i64 0, i32 0, !dbg !11392
  %.pre169 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !11393
  br label %if.end1808, !dbg !11392

if.end1808:                                       ; preds = %if.end1717, %if.end1805
  %291 = phi %union.tree_node* [ null, %if.end1717 ], [ %.pre169, %if.end1805 ], !dbg !11393
  %292 = phi i32* [ %261, %if.end1717 ], [ %290, %if.end1805 ], !dbg !11395
  %bf.load1809 = load i32, i32* %292, align 8, !dbg !11395
  %bf.clear1810 = and i32 %bf.load1809, 65535, !dbg !11395
  %cmp1811 = icmp eq i32 %bf.clear1810, 43, !dbg !11395
  %293 = load i64, i64* %bitpos, align 8, !dbg !11396
  call void @llvm.dbg.value(metadata i64 %293, metadata !10601, metadata !DIExpression()), !dbg !11244
  %cmp1814 = icmp eq i64 %293, 0, !dbg !11397
  %or.cond36 = and i1 %cmp1811, %cmp1814, !dbg !11398
  call void @llvm.dbg.value(metadata %union.tree_node* %291, metadata !10602, metadata !DIExpression()), !dbg !11244
  %cmp1817 = icmp ne %union.tree_node* %291, null, !dbg !11399
  %or.cond37 = and i1 %or.cond36, %cmp1817, !dbg !11398
  br i1 %or.cond37, label %land.lhs.true1819, label %if.end1827, !dbg !11398

land.lhs.true1819:                                ; preds = %if.end1808
  call void @llvm.dbg.value(metadata %union.tree_node* %291, metadata !10602, metadata !DIExpression()), !dbg !11244
  %call1820 = call fastcc i32 @is_aligning_offset(%union.tree_node* nonnull %291, %union.tree_node* %call1433) #8, !dbg !11400
  %tobool1821 = icmp eq i32 %call1820, 0, !dbg !11400
  br i1 %tobool1821, label %if.end1827, label %if.then1822, !dbg !11401

if.then1822:                                      ; preds = %land.lhs.true1819
  %294 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11402
  call void @llvm.dbg.value(metadata %struct.rtx_def* %294, metadata !10465, metadata !DIExpression()), !dbg !10672
  %295 = load i32, i32* @ix86_isa_flags, align 4, !dbg !11403
  %and1823 = and i32 %295, 32, !dbg !11403
  %cmp1824 = icmp eq i32 %and1823, 0, !dbg !11403
  %cond1826 = select i1 %cmp1824, i32 128, i32 256, !dbg !11403
  call void @set_mem_align(%struct.rtx_def* %294, i32 %cond1826) #6, !dbg !11404
  br label %if.end1827, !dbg !11404

if.end1827:                                       ; preds = %land.lhs.true1819, %if.then1822, %if.end1808
  %296 = load i32*, i32** %217, align 8, !dbg !11405
  %bf.load1828 = load i32, i32* %296, align 8, !dbg !11405
  %bf.clear1829 = and i32 %bf.load1828, 65535, !dbg !11405
  %cmp1830 = icmp eq i32 %bf.clear1829, 43, !dbg !11405
  %297 = load i32, i32* %volatilep, align 4, !dbg !11407
  call void @llvm.dbg.value(metadata i32 %297, metadata !10603, metadata !DIExpression()), !dbg !11244
  %tobool1833 = icmp ne i32 %297, 0, !dbg !11407
  %or.cond38 = and i1 %cmp1830, %tobool1833, !dbg !11408
  %298 = bitcast i32* %296 to %struct.rtx_def*, !dbg !11408
  br i1 %or.cond38, label %land.lhs.true1834, label %if.end1848, !dbg !11408

land.lhs.true1834:                                ; preds = %if.end1827
  %bf.clear1837 = and i32 %bf.load1828, 134217728, !dbg !11409
  %tobool1838 = icmp eq i32 %bf.clear1837, 0, !dbg !11409
  br i1 %tobool1838, label %if.then1839, label %if.end1848, !dbg !11410

if.then1839:                                      ; preds = %land.lhs.true1834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %298, metadata !10465, metadata !DIExpression()), !dbg !10672
  %cmp1840 = icmp eq %struct.rtx_def* %call1478, %298, !dbg !11411
  br i1 %cmp1840, label %if.then1842, label %if.end1844, !dbg !11414

if.then1842:                                      ; preds = %if.then1839
  call void @llvm.dbg.value(metadata %struct.rtx_def* %298, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call1843 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1478) #6, !dbg !11415
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1843, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call1843, %struct.rtx_def** %op0, align 8, !dbg !11416
  %299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1843, i64 0, i32 0, !dbg !11417
  %bf.load1845.pre = load i32, i32* %299, align 8, !dbg !11418
  br label %if.end1844, !dbg !11417

if.end1844:                                       ; preds = %if.then1842, %if.then1839
  %bf.load1845 = phi i32 [ %bf.load1845.pre, %if.then1842 ], [ %bf.load1828, %if.then1839 ], !dbg !11418
  %300 = phi i32* [ %299, %if.then1842 ], [ %296, %if.then1839 ], !dbg !11419
  %bf.set1847 = or i32 %bf.load1845, 134217728, !dbg !11418
  store i32 %bf.set1847, i32* %300, align 8, !dbg !11418
  br label %if.end1848, !dbg !11420

if.end1848:                                       ; preds = %land.lhs.true1834, %if.end1844, %if.end1827
  %301 = load i32, i32* %mode1, align 4, !dbg !11421
  call void @llvm.dbg.value(metadata i32 %301, metadata !10597, metadata !DIExpression()), !dbg !11244
  %cmp1849 = icmp eq i32 %301, 0, !dbg !11422
  br i1 %cmp1849, label %if.then1973, label %lor.lhs.false1851, !dbg !11423

lor.lhs.false1851:                                ; preds = %if.end1848
  %302 = load i32*, i32** %217, align 8, !dbg !11424
  %bf.load1852 = load i32, i32* %302, align 8, !dbg !11424
  %bf.clear1853 = and i32 %bf.load1852, 65535, !dbg !11424
  %cmp1854 = icmp eq i32 %bf.clear1853, 37, !dbg !11424
  br i1 %cmp1854, label %if.then1973, label %lor.lhs.false1856, !dbg !11425

lor.lhs.false1856:                                ; preds = %lor.lhs.false1851
  %cmp1859 = icmp eq i32 %bf.clear1853, 39, !dbg !11426
  br i1 %cmp1859, label %if.then1973, label %lor.lhs.false1861, !dbg !11427

lor.lhs.false1861:                                ; preds = %lor.lhs.false1856
  call void @llvm.dbg.value(metadata i32 %301, metadata !10597, metadata !DIExpression()), !dbg !11244
  %cmp1862 = icmp eq i32 %301, 1, !dbg !11428
  br i1 %cmp1862, label %lor.lhs.false1886, label %land.lhs.true1864, !dbg !11429

land.lhs.true1864:                                ; preds = %lor.lhs.false1861
  call void @llvm.dbg.value(metadata i32 %301, metadata !10597, metadata !DIExpression()), !dbg !11244
  %idxprom1865 = sext i32 %301 to i64, !dbg !11430
  %arrayidx1866 = getelementptr inbounds [87 x i8], [87 x i8]* @direct_load, i64 0, i64 %idxprom1865, !dbg !11430
  %303 = load i8, i8* %arrayidx1866, align 1, !dbg !11430
  %tobool1867 = icmp eq i8 %303, 0, !dbg !11430
  br i1 %tobool1867, label %land.lhs.true1868, label %lor.lhs.false1886, !dbg !11431

land.lhs.true1868:                                ; preds = %land.lhs.true1864
  %idxprom1869 = zext i32 %cond26 to i64, !dbg !11432
  %arrayidx1870 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1869, !dbg !11432
  %304 = load i8, i8* %arrayidx1870, align 1, !dbg !11432
  %cmp1872 = icmp eq i8 %304, 10, !dbg !11433
  br i1 %cmp1872, label %lor.lhs.false1886, label %land.lhs.true1874, !dbg !11434

land.lhs.true1874:                                ; preds = %land.lhs.true1868
  %cmp1878 = icmp ne i8 %304, 11, !dbg !11435
  %305 = add i32 %modifier, -3, !dbg !11436
  %306 = icmp ugt i32 %305, 1, !dbg !11436
  %307 = and i1 %306, %cmp1878, !dbg !11436
  br i1 %307, label %if.then1973, label %lor.lhs.false1886, !dbg !11436

lor.lhs.false1886:                                ; preds = %land.lhs.true1868, %land.lhs.true1864, %lor.lhs.false1861, %land.lhs.true1874
  call void @llvm.dbg.value(metadata i32 %301, metadata !10597, metadata !DIExpression()), !dbg !11244
  br i1 %cmp1862, label %lor.lhs.false1945, label %land.lhs.true1889, !dbg !11437

land.lhs.true1889:                                ; preds = %lor.lhs.false1886
  %308 = bitcast %union.tree_node** %type1441 to %struct.tree_type**, !dbg !11438
  %309 = load %struct.tree_type*, %struct.tree_type** %308, align 8, !dbg !11438
  %align1893 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %309, i64 0, i32 7, !dbg !11438
  %310 = load i32, i32* %align1893, align 8, !dbg !11438
  %call1894 = call i32 @get_mode_alignment(i32 %cond26) #6, !dbg !11439
  %cmp1895 = icmp ult i32 %310, %call1894, !dbg !11440
  br i1 %cmp1895, label %lor.lhs.false1941, label %lor.lhs.false1897, !dbg !11441

lor.lhs.false1897:                                ; preds = %land.lhs.true1889
  %311 = load i64, i64* %bitpos, align 8, !dbg !11442
  call void @llvm.dbg.value(metadata i64 %311, metadata !10601, metadata !DIExpression()), !dbg !11244
  %call1898 = call i32 @get_mode_alignment(i32 %cond26) #6, !dbg !11443
  %conv1899 = zext i32 %call1898 to i64, !dbg !11443
  %rem1900 = srem i64 %311, %conv1899, !dbg !11444
  %cmp1901 = icmp eq i64 %rem1900, 0, !dbg !11445
  br i1 %cmp1901, label %lor.lhs.false1903, label %lor.lhs.false1941, !dbg !11446

lor.lhs.false1903:                                ; preds = %lor.lhs.false1897
  %312 = load i32*, i32** %217, align 8, !dbg !11447
  %bf.load1904 = load i32, i32* %312, align 8, !dbg !11447
  %bf.clear1905 = and i32 %bf.load1904, 65535, !dbg !11447
  %cmp1906 = icmp eq i32 %bf.clear1905, 43, !dbg !11447
  br i1 %cmp1906, label %land.lhs.true1908, label %lor.lhs.false1941, !dbg !11448

land.lhs.true1908:                                ; preds = %lor.lhs.false1903
  call void @llvm.dbg.value(metadata i32* %312, metadata !10465, metadata !DIExpression()), !dbg !10672
  %313 = getelementptr inbounds i32, i32* %312, i64 4, !dbg !11449
  %rt_mem1912 = bitcast i32* %313 to %struct.mem_attrs**, !dbg !11449
  %314 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem1912, align 8, !dbg !11449
  %cmp1913 = icmp eq %struct.mem_attrs* %314, null, !dbg !11449
  br i1 %cmp1913, label %cond.end1922, label %cond.true1915, !dbg !11449

cond.true1915:                                    ; preds = %land.lhs.true1908
  call void @llvm.dbg.value(metadata i32* %312, metadata !10465, metadata !DIExpression()), !dbg !10672
  %align1920 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %314, i64 0, i32 4, !dbg !11449
  %315 = load i32, i32* %align1920, align 4, !dbg !11449
  br label %cond.end1922, !dbg !11449

cond.end1922:                                     ; preds = %land.lhs.true1908, %cond.true1915
  %cond1923 = phi i32 [ %315, %cond.true1915 ], [ 8, %land.lhs.true1908 ], !dbg !11449
  %316 = load i32, i32* %mode1, align 4, !dbg !11450
  call void @llvm.dbg.value(metadata i32 %316, metadata !10597, metadata !DIExpression()), !dbg !11244
  %call1924 = call i32 @get_mode_alignment(i32 %316) #6, !dbg !11450
  %cmp1925 = icmp ult i32 %cond1923, %call1924, !dbg !11451
  br i1 %cmp1925, label %lor.lhs.false1941, label %lor.lhs.false1927, !dbg !11452

lor.lhs.false1927:                                ; preds = %cond.end1922
  %317 = load i32, i32* %mode1, align 4, !dbg !11453
  call void @llvm.dbg.value(metadata i32 %317, metadata !10597, metadata !DIExpression()), !dbg !11244
  %call1928 = call i32 @get_mode_alignment(i32 %317) #6, !dbg !11453
  br label %lor.lhs.false1941, !dbg !11454

lor.lhs.false1941:                                ; preds = %lor.lhs.false1897, %lor.lhs.false1927, %land.lhs.true1889, %cond.end1922, %lor.lhs.false1903
  %318 = load i64, i64* %bitpos, align 8, !dbg !11455
  call void @llvm.dbg.value(metadata i64 %318, metadata !10601, metadata !DIExpression()), !dbg !11244
  %rem194294 = and i64 %318, 7, !dbg !11456
  %cmp1943 = icmp eq i64 %rem194294, 0, !dbg !11456
  br i1 %cmp1943, label %lor.lhs.false1945, label %if.then1973, !dbg !11457

lor.lhs.false1945:                                ; preds = %lor.lhs.false1941, %lor.lhs.false1886
  %319 = load i64, i64* %bitsize1432, align 8, !dbg !11458
  call void @llvm.dbg.value(metadata i64 %319, metadata !10600, metadata !DIExpression()), !dbg !11244
  %cmp1946 = icmp sgt i64 %319, -1, !dbg !11459
  br i1 %cmp1946, label %land.lhs.true1948, label %if.end2153, !dbg !11460

land.lhs.true1948:                                ; preds = %lor.lhs.false1945
  %320 = bitcast %union.tree_node** %type13 to %struct.tree_type**, !dbg !11461
  %321 = load %struct.tree_type*, %struct.tree_type** %320, align 8, !dbg !11461
  %size1952 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %321, i64 0, i32 2, !dbg !11461
  %322 = load %union.tree_node*, %union.tree_node** %size1952, align 8, !dbg !11461
  %tobool1953 = icmp eq %union.tree_node* %322, null, !dbg !11461
  br i1 %tobool1953, label %if.end2153, label %land.lhs.true1954, !dbg !11462

land.lhs.true1954:                                ; preds = %land.lhs.true1948
  %323 = getelementptr inbounds %union.tree_node, %union.tree_node* %322, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11462
  %bf.load1960 = load i64, i64* %323, align 8, !dbg !11463
  %bf.cast196289 = and i64 %bf.load1960, 65535, !dbg !11464
  %cmp1963 = icmp eq i64 %bf.cast196289, 23, !dbg !11464
  br i1 %cmp1963, label %land.lhs.true1965, label %if.end2153, !dbg !11465

land.lhs.true1965:                                ; preds = %land.lhs.true1954
  call void @llvm.dbg.value(metadata i64 %319, metadata !10600, metadata !DIExpression()), !dbg !11244
  %call1970 = call i32 @compare_tree_int(%union.tree_node* nonnull %322, i64 %319) #6, !dbg !11466
  %cmp1971 = icmp eq i32 %call1970, 0, !dbg !11467
  br i1 %cmp1971, label %if.end2153, label %if.then1973, !dbg !11468

if.then1973:                                      ; preds = %lor.lhs.false1941, %land.lhs.true1965, %land.lhs.true1874, %lor.lhs.false1856, %lor.lhs.false1851, %if.end1848
  call void @llvm.dbg.value(metadata i32 %cond26, metadata !10617, metadata !DIExpression()), !dbg !11469
  %cmp1974 = icmp eq i32 %cond26, 1, !dbg !11470
  br i1 %cmp1974, label %land.lhs.true1976, label %if.end1996, !dbg !11472

land.lhs.true1976:                                ; preds = %if.then1973
  %cmp1977 = icmp eq %struct.rtx_def* %target.addr.5, null, !dbg !11473
  br i1 %cmp1977, label %if.then1993, label %land.lhs.true1979, !dbg !11474

land.lhs.true1979:                                ; preds = %land.lhs.true1976
  %324 = load i32*, i32** %217, align 8, !dbg !11475
  %bf.load1980 = load i32, i32* %324, align 8, !dbg !11475
  %bf.clear1981 = and i32 %bf.load1980, 65535, !dbg !11475
  %cmp1982 = icmp eq i32 %bf.clear1981, 43, !dbg !11475
  br i1 %cmp1982, label %land.lhs.true1984, label %if.then1993, !dbg !11476

land.lhs.true1984:                                ; preds = %land.lhs.true1979
  %325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.5, i64 0, i32 0, !dbg !11477
  %bf.load1985 = load i32, i32* %325, align 8, !dbg !11477
  %bf.clear1986 = and i32 %bf.load1985, 65535, !dbg !11477
  %cmp1987 = icmp eq i32 %bf.clear1986, 43, !dbg !11477
  br i1 %cmp1987, label %land.lhs.true1989, label %if.then1993, !dbg !11478

land.lhs.true1989:                                ; preds = %land.lhs.true1984
  %326 = load i64, i64* %bitpos, align 8, !dbg !11479
  call void @llvm.dbg.value(metadata i64 %326, metadata !10601, metadata !DIExpression()), !dbg !11244
  %rem199093 = and i64 %326, 7, !dbg !11480
  %cmp1991 = icmp eq i64 %rem199093, 0, !dbg !11480
  br i1 %cmp1991, label %if.end1996, label %if.then1993, !dbg !11481

if.then1993:                                      ; preds = %land.lhs.true1976, %land.lhs.true1989, %land.lhs.true1984, %land.lhs.true1979
  %327 = load i64, i64* %bitsize1432, align 8, !dbg !11482
  call void @llvm.dbg.value(metadata i64 %327, metadata !10600, metadata !DIExpression()), !dbg !11244
  %conv1994 = trunc i64 %327 to i32, !dbg !11482
  %call1995 = call i32 @mode_for_size(i32 %conv1994, i32 2, i32 1) #6, !dbg !11483
  call void @llvm.dbg.value(metadata i32 %call1995, metadata !10617, metadata !DIExpression()), !dbg !11469
  br label %if.end1996, !dbg !11484

if.end1996:                                       ; preds = %if.then1993, %land.lhs.true1989, %if.then1973
  %ext_mode.0 = phi i32 [ 1, %land.lhs.true1989 ], [ %call1995, %if.then1993 ], [ %cond26, %if.then1973 ], !dbg !11469
  call void @llvm.dbg.value(metadata i32 %ext_mode.0, metadata !10617, metadata !DIExpression()), !dbg !11469
  %cmp1997 = icmp eq i32 %ext_mode.0, 1, !dbg !11485
  br i1 %cmp1997, label %if.then1999, label %if.end2037, !dbg !11487

if.then1999:                                      ; preds = %if.end1996
  %cmp2000 = icmp eq %struct.rtx_def* %target.addr.5, null, !dbg !11488
  br i1 %cmp2000, label %if.then2002, label %if.end2004, !dbg !11491

if.then2002:                                      ; preds = %if.then1999
  %call2003 = call %struct.rtx_def* @assign_temp(%union.tree_node* %9, i32 0, i32 1, i32 1) #6, !dbg !11492
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2003, metadata !10461, metadata !DIExpression()), !dbg !10672
  br label %if.end2004, !dbg !11493

if.end2004:                                       ; preds = %if.then2002, %if.then1999
  %target.addr.6 = phi %struct.rtx_def* [ %call2003, %if.then2002 ], [ %target.addr.5, %if.then1999 ], !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.6, metadata !10461, metadata !DIExpression()), !dbg !10672
  %328 = load i64, i64* %bitsize1432, align 8, !dbg !11494
  call void @llvm.dbg.value(metadata i64 %328, metadata !10600, metadata !DIExpression()), !dbg !11244
  %cmp2005 = icmp eq i64 %328, 0, !dbg !11496
  br i1 %cmp2005, label %cleanup2244, label %if.end2008, !dbg !11497

if.end2008:                                       ; preds = %if.end2004
  %329 = load i32*, i32** %217, align 8, !dbg !11498
  %bf.load2009 = load i32, i32* %329, align 8, !dbg !11498
  %bf.clear2010 = and i32 %bf.load2009, 65535, !dbg !11498
  %cmp2011 = icmp eq i32 %bf.clear2010, 43, !dbg !11498
  %330 = bitcast i32* %329 to %struct.rtx_def*, !dbg !11498
  br i1 %cmp2011, label %land.lhs.true2013, label %cond.true2023, !dbg !11498

land.lhs.true2013:                                ; preds = %if.end2008
  %tobool2014 = icmp eq %struct.rtx_def* %target.addr.6, null, !dbg !11498
  br i1 %tobool2014, label %land.lhs.true2020, label %lor.lhs.false2015, !dbg !11498

lor.lhs.false2015:                                ; preds = %land.lhs.true2013
  %331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.6, i64 0, i32 0, !dbg !11498
  %bf.load2016 = load i32, i32* %331, align 8, !dbg !11498
  %bf.clear2017 = and i32 %bf.load2016, 65535, !dbg !11498
  %cmp2018 = icmp eq i32 %bf.clear2017, 43, !dbg !11498
  br i1 %cmp2018, label %land.lhs.true2020, label %cond.true2023, !dbg !11498

land.lhs.true2020:                                ; preds = %land.lhs.true2013, %lor.lhs.false2015
  %332 = load i64, i64* %bitpos, align 8, !dbg !11498
  call void @llvm.dbg.value(metadata i64 %332, metadata !10601, metadata !DIExpression()), !dbg !11244
  %rem202192 = and i64 %332, 7, !dbg !11498
  %tobool2022 = icmp eq i64 %rem202192, 0, !dbg !11498
  br i1 %tobool2022, label %cond.end2025, label %cond.true2023, !dbg !11498

cond.true2023:                                    ; preds = %land.lhs.true2020, %lor.lhs.false2015, %if.end2008
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11498
  %.pre175 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11499
  %.pre176 = load i64, i64* %bitpos, align 8, !dbg !11499
  br label %cond.end2025, !dbg !11498

cond.end2025:                                     ; preds = %land.lhs.true2020, %cond.true2023
  %333 = phi i64 [ %332, %land.lhs.true2020 ], [ %.pre176, %cond.true2023 ], !dbg !11499
  %334 = phi %struct.rtx_def* [ %330, %land.lhs.true2020 ], [ %.pre175, %cond.true2023 ], !dbg !11499
  call void @llvm.dbg.value(metadata %struct.rtx_def* %334, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i64 %333, metadata !10601, metadata !DIExpression()), !dbg !11244
  %div2027 = sdiv i64 %333, 8, !dbg !11499
  %call2028 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %334, i32 0, i64 %div2027, i32 1, i32 1) #6, !dbg !11499
  %335 = load i64, i64* %bitsize1432, align 8, !dbg !11500
  call void @llvm.dbg.value(metadata i64 %335, metadata !10600, metadata !DIExpression()), !dbg !11244
  %sub2030 = add nsw i64 %335, 7, !dbg !11500
  %div2031 = sdiv i64 %sub2030, 8, !dbg !11500
  %call2032 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div2031) #6, !dbg !11500
  %cond2035 = select i1 %cmp177, i32 2, i32 0, !dbg !11501
  %call2036 = call %struct.rtx_def* @emit_block_move(%struct.rtx_def* %target.addr.6, %struct.rtx_def* %call2028, %struct.rtx_def* %call2032, i32 %cond2035) #8, !dbg !11502
  br label %cleanup2244, !dbg !11503

if.end2037:                                       ; preds = %if.end1996
  %336 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %336, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2038 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %336) #6, !dbg !11505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2038, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2038, %struct.rtx_def** %op0, align 8, !dbg !11506
  %.cast90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2038, i64 0, i32 0, !dbg !11507
  %bf.load2039 = load i32, i32* %.cast90, align 8, !dbg !11507
  %bf.clear2040 = and i32 %bf.load2039, 65535, !dbg !11507
  %cmp2041 = icmp eq i32 %bf.clear2040, 43, !dbg !11507
  br i1 %cmp2041, label %land.lhs.true2043, label %if.end2072, !dbg !11509

land.lhs.true2043:                                ; preds = %if.end2037
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2038, metadata !10465, metadata !DIExpression()), !dbg !10672
  %arrayidx2046 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2038, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11510
  %337 = bitcast %union.rtunion_def* %arrayidx2046 to i32**, !dbg !11510
  %338 = load i32*, i32** %337, align 8, !dbg !11510
  %bf.load2048 = load i32, i32* %338, align 8, !dbg !11510
  %bf.clear2049 = and i32 %bf.load2048, 65535, !dbg !11510
  %cmp2050 = icmp eq i32 %bf.clear2049, 37, !dbg !11510
  %339 = bitcast i32* %338 to %struct.rtx_def*, !dbg !11511
  br i1 %cmp2050, label %if.then2052, label %if.end2072, !dbg !11511

if.then2052:                                      ; preds = %land.lhs.true2043
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2038, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2038, metadata !10465, metadata !DIExpression()), !dbg !10672
  %340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2038, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11512
  %rt_mem2060 = bitcast %union.rtunion_def* %340 to %struct.mem_attrs**, !dbg !11512
  %341 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem2060, align 8, !dbg !11512
  %cmp2061 = icmp eq %struct.mem_attrs* %341, null, !dbg !11512
  br i1 %cmp2061, label %cond.end2070, label %cond.true2063, !dbg !11512

cond.true2063:                                    ; preds = %if.then2052
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2038, metadata !10465, metadata !DIExpression()), !dbg !10672
  %align2068 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %341, i64 0, i32 4, !dbg !11512
  %342 = load i32, i32* %align2068, align 4, !dbg !11512
  br label %cond.end2070, !dbg !11512

cond.end2070:                                     ; preds = %if.then2052, %cond.true2063
  %cond2071 = phi i32 [ %342, %cond.true2063 ], [ 8, %if.then2052 ], !dbg !11512
  call void @mark_reg_pointer(%struct.rtx_def* %339, i32 %cond2071) #6, !dbg !11513
  %.pre173 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11514
  br label %if.end2072, !dbg !11513

if.end2072:                                       ; preds = %cond.end2070, %land.lhs.true2043, %if.end2037
  %343 = phi %struct.rtx_def* [ %.pre173, %cond.end2070 ], [ %call2038, %land.lhs.true2043 ], [ %call2038, %if.end2037 ], !dbg !11514
  call void @llvm.dbg.value(metadata %struct.rtx_def* %343, metadata !10465, metadata !DIExpression()), !dbg !10672
  %344 = load i64, i64* %bitsize1432, align 8, !dbg !11515
  call void @llvm.dbg.value(metadata i64 %344, metadata !10600, metadata !DIExpression()), !dbg !11244
  %345 = load i64, i64* %bitpos, align 8, !dbg !11516
  call void @llvm.dbg.value(metadata i64 %345, metadata !10601, metadata !DIExpression()), !dbg !11244
  %346 = load i32, i32* %unsignedp, align 4, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %346, metadata !10470, metadata !DIExpression()), !dbg !10672
  %.target.addr.5 = select i1 %cmp177, %struct.rtx_def* null, %struct.rtx_def* %target.addr.5, !dbg !11518
  %call2079 = call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %343, i64 %344, i64 %345, i32 %346, %struct.rtx_def* %.target.addr.5, i32 %ext_mode.0, i32 %ext_mode.0) #6, !dbg !11519
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2079, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2079, %struct.rtx_def** %op0, align 8, !dbg !11520
  br i1 %cmp1974, label %if.then2129, label %if.end2151, !dbg !11521

if.then2129:                                      ; preds = %if.end2072
  %idxprom2131 = zext i32 %ext_mode.0 to i64, !dbg !11522
  %arrayidx2132 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2131, !dbg !11522
  %347 = load i8, i8* %arrayidx2132, align 1, !dbg !11522
  %conv2134 = zext i8 %347 to i64, !dbg !11522
  %mul2135 = shl nuw nsw i64 %conv2134, 3, !dbg !11522
  call void @llvm.dbg.value(metadata i64 %mul2135, metadata !10620, metadata !DIExpression()), !dbg !11523
  %call2138 = call zeroext i8 @component_uses_parent_alias_set(%union.tree_node* %exp) #6, !dbg !11524
  %tobool2139 = icmp eq i8 %call2138, 0, !dbg !11524
  br i1 %tobool2139, label %if.else2143, label %if.then2140, !dbg !11526

if.then2140:                                      ; preds = %if.then2129
  %call2141 = call %struct.rtx_def* @assign_stack_local(i32 %ext_mode.0, i64 %mul2135, i32 0) #6, !dbg !11527
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2141, metadata !10623, metadata !DIExpression()), !dbg !11523
  %call2142 = call i32 @get_alias_set(%union.tree_node* %exp) #6, !dbg !11529
  call void @set_mem_alias_set(%struct.rtx_def* %call2141, i32 %call2142) #6, !dbg !11530
  br label %if.end2145, !dbg !11531

if.else2143:                                      ; preds = %if.then2129
  %call2144 = call %struct.rtx_def* @assign_stack_temp_for_type(i32 %ext_mode.0, i64 %mul2135, i32 0, %union.tree_node* %9) #6, !dbg !11532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2144, metadata !10623, metadata !DIExpression()), !dbg !11523
  br label %if.end2145

if.end2145:                                       ; preds = %if.else2143, %if.then2140
  %new_rtx.0 = phi %struct.rtx_def* [ %call2141, %if.then2140 ], [ %call2144, %if.else2143 ], !dbg !11533
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_rtx.0, metadata !10623, metadata !DIExpression()), !dbg !11523
  %348 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11534
  call void @llvm.dbg.value(metadata %struct.rtx_def* %348, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2146 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %new_rtx.0, %struct.rtx_def* %348) #8, !dbg !11535
  %call2147 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %new_rtx.0) #6, !dbg !11536
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2147, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2147, %struct.rtx_def** %op0, align 8, !dbg !11537
  %.cast91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2147, i64 0, i32 0, !dbg !11538
  %bf.load2148 = load i32, i32* %.cast91, align 8, !dbg !11538
  %bf.clear2149 = and i32 %bf.load2148, -16711681, !dbg !11538
  %bf.set2150 = or i32 %bf.clear2149, 65536, !dbg !11538
  store i32 %bf.set2150, i32* %.cast91, align 8, !dbg !11538
  %349 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11539
  call void @llvm.dbg.value(metadata %struct.rtx_def* %349, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @set_mem_attributes(%struct.rtx_def* %349, %union.tree_node* %exp, i32 1) #6, !dbg !11540
  %.pre174 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11541
  br label %if.end2151, !dbg !11542

if.end2151:                                       ; preds = %if.end2145, %if.end2072
  %350 = phi %struct.rtx_def* [ %.pre174, %if.end2145 ], [ %call2079, %if.end2072 ], !dbg !11541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %350, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %cleanup2244, !dbg !11543

if.end2153:                                       ; preds = %land.lhs.true1965, %land.lhs.true1948, %land.lhs.true1954, %lor.lhs.false1945
  %cmp2154 = icmp eq i32 %cond26, 1, !dbg !11544
  br i1 %cmp2154, label %if.then2156, label %if.end2153.if.end2157_crit_edge, !dbg !11546

if.end2153.if.end2157_crit_edge:                  ; preds = %if.end2153
  %.pre171 = load i32, i32* %mode1, align 4, !dbg !11547
  br label %if.end2157, !dbg !11546

if.then2156:                                      ; preds = %if.end2153
  call void @llvm.dbg.value(metadata i32 1, metadata !10597, metadata !DIExpression()), !dbg !11244
  store i32 1, i32* %mode1, align 4, !dbg !11549
  br label %if.end2157, !dbg !11550

if.end2157:                                       ; preds = %if.end2153.if.end2157_crit_edge, %if.then2156
  %351 = phi i32 [ %.pre171, %if.end2153.if.end2157_crit_edge ], [ 1, %if.then2156 ], !dbg !11547
  %modifier.off56 = add i32 %modifier, -2, !dbg !11551
  %switch57 = icmp ult i32 %modifier.off56, 3, !dbg !11551
  %352 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11547
  call void @llvm.dbg.value(metadata %struct.rtx_def* %352, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i32 %351, metadata !10597, metadata !DIExpression()), !dbg !11244
  %353 = load i64, i64* %bitpos, align 8, !dbg !11547
  call void @llvm.dbg.value(metadata i64 %353, metadata !10601, metadata !DIExpression()), !dbg !11244
  %div2167 = sdiv i64 %353, 8, !dbg !11547
  br i1 %switch57, label %if.then2166, label %if.else2169, !dbg !11551

if.then2166:                                      ; preds = %if.end2157
  %call2168 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %352, i32 %351, i64 %div2167, i32 0, i32 1) #6, !dbg !11552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2168, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %if.end2172, !dbg !11553

if.else2169:                                      ; preds = %if.end2157
  %call2171 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %352, i32 %351, i64 %div2167, i32 1, i32 1) #6, !dbg !11554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2171, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %if.end2172

if.end2172:                                       ; preds = %if.else2169, %if.then2166
  %354 = phi %struct.rtx_def* [ %call2171, %if.else2169 ], [ %call2168, %if.then2166 ], !dbg !11547
  store %struct.rtx_def* %354, %struct.rtx_def** %op0, align 8, !dbg !11547
  call void @llvm.dbg.value(metadata %struct.rtx_def* %354, metadata !10465, metadata !DIExpression()), !dbg !10672
  %cmp2173 = icmp eq %struct.rtx_def* %354, %call1478, !dbg !11555
  br i1 %cmp2173, label %if.then2175, label %if.end2177, !dbg !11557

if.then2175:                                      ; preds = %if.end2172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %354, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2176 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call1478) #6, !dbg !11558
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2176, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2176, %struct.rtx_def** %op0, align 8, !dbg !11559
  br label %if.end2177, !dbg !11560

if.end2177:                                       ; preds = %if.then2175, %if.end2172
  %355 = phi %struct.rtx_def* [ %call2176, %if.then2175 ], [ %354, %if.end2172 ], !dbg !11561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %355, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @set_mem_attributes(%struct.rtx_def* %355, %union.tree_node* %exp, i32 0) #6, !dbg !11562
  %356 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11563
  call void @llvm.dbg.value(metadata %struct.rtx_def* %356, metadata !10465, metadata !DIExpression()), !dbg !10672
  %arrayidx2180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11563
  %357 = bitcast %union.rtunion_def* %arrayidx2180 to i32**, !dbg !11563
  %358 = load i32*, i32** %357, align 8, !dbg !11563
  %bf.load2182 = load i32, i32* %358, align 8, !dbg !11563
  %bf.clear2183 = and i32 %bf.load2182, 65535, !dbg !11563
  %cmp2184 = icmp eq i32 %bf.clear2183, 37, !dbg !11563
  %359 = bitcast i32* %358 to %struct.rtx_def*, !dbg !11565
  %360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i64 0, i32 0, !dbg !11565
  br i1 %cmp2184, label %if.then2186, label %if.end2206, !dbg !11565

if.then2186:                                      ; preds = %if.end2177
  call void @llvm.dbg.value(metadata %struct.rtx_def* %356, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %356, metadata !10465, metadata !DIExpression()), !dbg !10672
  %361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11566
  %rt_mem2194 = bitcast %union.rtunion_def* %361 to %struct.mem_attrs**, !dbg !11566
  %362 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem2194, align 8, !dbg !11566
  %cmp2195 = icmp eq %struct.mem_attrs* %362, null, !dbg !11566
  br i1 %cmp2195, label %cond.end2204, label %cond.true2197, !dbg !11566

cond.true2197:                                    ; preds = %if.then2186
  call void @llvm.dbg.value(metadata %struct.rtx_def* %356, metadata !10465, metadata !DIExpression()), !dbg !10672
  %align2202 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %362, i64 0, i32 4, !dbg !11566
  %363 = load i32, i32* %align2202, align 4, !dbg !11566
  br label %cond.end2204, !dbg !11566

cond.end2204:                                     ; preds = %if.then2186, %cond.true2197
  %cond2205 = phi i32 [ %363, %cond.true2197 ], [ 8, %if.then2186 ], !dbg !11566
  call void @mark_reg_pointer(%struct.rtx_def* %359, i32 %cond2205) #6, !dbg !11567
  %.pre172 = load i32*, i32** %217, align 8, !dbg !11568
  br label %if.end2206, !dbg !11567

if.end2206:                                       ; preds = %cond.end2204, %if.end2177
  %364 = phi i32* [ %.pre172, %cond.end2204 ], [ %360, %if.end2177 ], !dbg !11568
  %365 = load i32, i32* %volatilep, align 4, !dbg !11569
  call void @llvm.dbg.value(metadata i32 %365, metadata !10603, metadata !DIExpression()), !dbg !11244
  %bf.load2207 = load i32, i32* %364, align 8, !dbg !11570
  %or2210146 = shl i32 %365, 27, !dbg !11570
  %366 = and i32 %or2210146, 134217728, !dbg !11570
  %bf.set2215 = or i32 %366, %bf.load2207, !dbg !11570
  store i32 %bf.set2215, i32* %364, align 8, !dbg !11570
  %367 = load i32, i32* %mode1, align 4, !dbg !11571
  call void @llvm.dbg.value(metadata i32 %367, metadata !10597, metadata !DIExpression()), !dbg !11244
  %cmp2216 = icmp eq i32 %cond26, %367, !dbg !11573
  call void @llvm.dbg.value(metadata i32 %367, metadata !10597, metadata !DIExpression()), !dbg !11244
  %cmp2219 = icmp eq i32 %367, 1, !dbg !11574
  %or.cond41 = or i1 %cmp2216, %cmp2219, !dbg !11575
  call void @llvm.dbg.value(metadata i32 %367, metadata !10597, metadata !DIExpression()), !dbg !11244
  %cmp2222 = icmp eq i32 %367, %tmode, !dbg !11576
  %or.cond42 = or i1 %or.cond41, %cmp2222, !dbg !11575
  %368 = add i32 %modifier, -3, !dbg !11575
  %369 = icmp ult i32 %368, 2, !dbg !11575
  %370 = or i1 %369, %or.cond42, !dbg !11575
  br i1 %370, label %if.then2230, label %if.else2231, !dbg !11575

if.then2230:                                      ; preds = %if.end2206
  %371 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %371, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %cleanup2244, !dbg !11578

if.else2231:                                      ; preds = %if.end2206
  %cmp2232 = icmp eq %struct.rtx_def* %target.addr.5, null, !dbg !11579
  br i1 %cmp2232, label %if.then2234, label %if.end2243, !dbg !11581

if.then2234:                                      ; preds = %if.else2231
  %cmp2235 = icmp eq i32 %tmode, 0, !dbg !11582
  %tmode.cond26 = select i1 %cmp2235, i32 %cond26, i32 %tmode, !dbg !11583
  %call2241 = call %struct.rtx_def* @gen_reg_rtx(i32 %tmode.cond26) #6, !dbg !11584
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2241, metadata !10461, metadata !DIExpression()), !dbg !10672
  br label %if.end2243, !dbg !11585

if.end2243:                                       ; preds = %if.else2231, %if.then2234
  %target.addr.7 = phi %struct.rtx_def* [ %call2241, %if.then2234 ], [ %target.addr.5, %if.else2231 ], !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7, metadata !10461, metadata !DIExpression()), !dbg !10672
  %372 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11586
  call void @llvm.dbg.value(metadata %struct.rtx_def* %372, metadata !10465, metadata !DIExpression()), !dbg !10672
  %373 = load i32, i32* %unsignedp, align 4, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %373, metadata !10470, metadata !DIExpression()), !dbg !10672
  call void @convert_move(%struct.rtx_def* %target.addr.7, %struct.rtx_def* %372, i32 %373) #8, !dbg !11588
  br label %cleanup2244, !dbg !11589

cleanup2244:                                      ; preds = %cond.end2025, %if.end2151, %if.end2004, %if.end2243, %if.then2230, %if.then1552
  %retval.20 = phi %struct.rtx_def* [ %371, %if.then2230 ], [ %target.addr.7, %if.end2243 ], [ %219, %if.then1552 ], [ %target.addr.6, %cond.end2025 ], [ %350, %if.end2151 ], [ %target.addr.6, %if.end2004 ], !dbg !11244
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204) #7, !dbg !11590
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #7, !dbg !11590
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #7, !dbg !11590
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #7, !dbg !11590
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #7, !dbg !11590
  br label %cleanup3078

sw.bb2254:                                        ; preds = %if.end173
  %operands2256 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11591
  %374 = load %union.tree_node*, %union.tree_node** %operands2256, align 8, !dbg !11591
  %call2258 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %374, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier) #8, !dbg !11592
  br label %cleanup3078, !dbg !11593

sw.bb2259:                                        ; preds = %if.end173
  %bf.load2261 = load i64, i64* %3, align 8, !dbg !11594
  %bf.cast226485 = and i64 %bf.load2261, 134217728, !dbg !11594
  %tobool2265 = icmp eq i64 %bf.cast226485, 0, !dbg !11594
  br i1 %tobool2265, label %if.end2267, label %if.then2266, !dbg !11596

if.then2266:                                      ; preds = %sw.bb2259
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0), %union.tree_node* %exp) #6, !dbg !11597
  br label %if.end2267, !dbg !11597

if.end2267:                                       ; preds = %sw.bb2259, %if.then2266
  %call2268 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %exp) #6, !dbg !11598
  call void @llvm.dbg.value(metadata %union.tree_node* %call2268, metadata !10624, metadata !DIExpression()), !dbg !11599
  %cond58 = icmp eq %union.tree_node* %call2268, null, !dbg !11600
  br i1 %cond58, label %cleanup2326, label %land.lhs.true2270, !dbg !11600

land.lhs.true2270:                                ; preds = %if.end2267
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %call2268, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !11602
  %375 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !11602
  %call2272 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %union.tree_node* %375) #6, !dbg !11603
  call void @llvm.dbg.value(metadata %union.tree_node* %call2272, metadata !10626, metadata !DIExpression()), !dbg !11599
  %cmp2273 = icmp eq %union.tree_node* %call2272, null, !dbg !11604
  br i1 %cmp2273, label %if.end2284, label %if.then2275, !dbg !11605

if.then2275:                                      ; preds = %land.lhs.true2270
  %376 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !11606
  %call2276 = tail call i8* %376(%union.tree_node* nonnull %call2268, i32 1) #6, !dbg !11607
  %call2277 = tail call i8* @identifier_to_locale(i8* %call2276) #6, !dbg !11608
  %377 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11609
  %378 = bitcast %union.tree_node** %377 to %struct.tree_list**, !dbg !11609
  %379 = load %struct.tree_list*, %struct.tree_list** %378, align 8, !dbg !11609
  %value2280 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %379, i64 0, i32 2, !dbg !11609
  %380 = bitcast %union.tree_node** %value2280 to %struct.tree_string**, !dbg !11609
  %381 = load %struct.tree_string*, %struct.tree_string** %380, align 8, !dbg !11609
  %arraydecay2283 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %381, i64 0, i32 2, i64 0, !dbg !11609
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6, i64 0, i64 0), %union.tree_node* %exp, i8* %call2277, i8* nonnull %arraydecay2283) #6, !dbg !11610
  br label %if.end2284, !dbg !11610

if.end2284:                                       ; preds = %land.lhs.true2270, %if.then2275
  %382 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !11611
  %call2289 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), %union.tree_node* %382) #6, !dbg !11613
  call void @llvm.dbg.value(metadata %union.tree_node* %call2289, metadata !10626, metadata !DIExpression()), !dbg !11599
  %cmp2290 = icmp eq %union.tree_node* %call2289, null, !dbg !11614
  br i1 %cmp2290, label %if.end2304, label %if.then2292, !dbg !11615

if.then2292:                                      ; preds = %if.end2284
  %call2293 = tail call i32 @tree_nonartificial_location(%union.tree_node* %exp) #6, !dbg !11616
  %383 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !11617
  %call2294 = tail call i8* %383(%union.tree_node* nonnull %call2268, i32 1) #6, !dbg !11618
  %call2295 = tail call i8* @identifier_to_locale(i8* %call2294) #6, !dbg !11619
  %384 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2289, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11620
  %385 = bitcast %union.tree_node** %384 to %struct.tree_list**, !dbg !11620
  %386 = load %struct.tree_list*, %struct.tree_list** %385, align 8, !dbg !11620
  %value2299 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %386, i64 0, i32 2, !dbg !11620
  %387 = bitcast %union.tree_node** %value2299 to %struct.tree_string**, !dbg !11620
  %388 = load %struct.tree_string*, %struct.tree_string** %387, align 8, !dbg !11620
  %arraydecay2302 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %388, i64 0, i32 2, i64 0, !dbg !11620
  %call2303 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %call2293, i32 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), %union.tree_node* %exp, i8* %call2295, i8* nonnull %arraydecay2302) #6, !dbg !11621
  br label %if.end2304, !dbg !11621

if.end2304:                                       ; preds = %if.end2284, %if.then2292
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call2268, i64 0, i32 0, i32 5, !dbg !11622
  %bf.load2307 = load i32, i32* %built_in_class, align 8, !dbg !11622
  %bf.clear2309 = and i32 %bf.load2307, 6144, !dbg !11622
  %cmp2310 = icmp eq i32 %bf.clear2309, 0, !dbg !11622
  br i1 %cmp2310, label %cleanup2326, label %if.then2312, !dbg !11624

if.then2312:                                      ; preds = %if.end2304
  %cmp2318 = icmp eq i32 %bf.clear2309, 2048, !dbg !11625
  br i1 %cmp2318, label %cond.true2320, label %cond.end2322, !dbg !11625

cond.true2320:                                    ; preds = %if.then2312
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9253, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11625
  br label %cond.end2322, !dbg !11625

cond.end2322:                                     ; preds = %if.then2312, %cond.true2320
  %call2324 = tail call %struct.rtx_def* @expand_builtin(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, %struct.rtx_def* %call181, i32 %tmode, i32 %lor.ext) #6, !dbg !11627
  br label %cleanup2326, !dbg !11628

cleanup2326:                                      ; preds = %if.end2304, %if.end2267, %cond.end2322
  %cleanup.dest.slot.11 = phi i1 [ false, %cond.end2322 ], [ true, %if.end2267 ], [ true, %if.end2304 ]
  %retval.21 = phi %struct.rtx_def* [ %call2324, %cond.end2322 ], [ undef, %if.end2267 ], [ undef, %if.end2304 ]
  br i1 %cleanup.dest.slot.11, label %cleanup.cont2329, label %cleanup3078

cleanup.cont2329:                                 ; preds = %cleanup2326
  %call2330 = tail call %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, i32 %lor.ext) #6, !dbg !11629
  br label %cleanup3078, !dbg !11630

sw.bb2331:                                        ; preds = %if.end173
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* null, %struct.rtx_def** %op0, align 8, !dbg !11631
  %cmp2332 = icmp eq i32 %cond26, 1, !dbg !11632
  br i1 %cmp2332, label %land.lhs.true2334, label %if.end2505, !dbg !11633

land.lhs.true2334:                                ; preds = %sw.bb2331
  %389 = bitcast %union.tree_node** %type13 to %struct.tree_type**, !dbg !11634
  %390 = load %struct.tree_type*, %struct.tree_type** %389, align 8, !dbg !11634
  %size2338 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %390, i64 0, i32 2, !dbg !11634
  %391 = bitcast %union.tree_node** %size2338 to i64**, !dbg !11634
  %392 = load i64*, i64** %391, align 8, !dbg !11634
  %bf.load2340 = load i64, i64* %392, align 8, !dbg !11634
  %bf.cast234279 = and i64 %bf.load2340, 65535, !dbg !11635
  %cmp2343 = icmp eq i64 %bf.cast234279, 23, !dbg !11635
  br i1 %cmp2343, label %land.lhs.true2345, label %if.end2505, !dbg !11636

land.lhs.true2345:                                ; preds = %land.lhs.true2334
  %type2347 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11637
  %393 = bitcast %union.tree_node** %type2347 to i64**, !dbg !11637
  %394 = load i64*, i64** %393, align 8, !dbg !11637
  %bf.load2349 = load i64, i64* %394, align 8, !dbg !11637
  %bf.cast235180 = and i64 %bf.load2349, 65535, !dbg !11637
  %cmp2352 = icmp eq i64 %bf.cast235180, 14, !dbg !11637
  br i1 %cmp2352, label %cond.true2354, label %cond.false2358, !dbg !11637

cond.true2354:                                    ; preds = %land.lhs.true2345
  %.cast81 = bitcast i64* %394 to %union.tree_node*, !dbg !11637
  %call2357 = tail call i32 @vector_type_mode(%union.tree_node* %.cast81) #6, !dbg !11637
  br label %cond.end2366, !dbg !11637

cond.false2358:                                   ; preds = %land.lhs.true2345
  %type2361 = bitcast i64* %394 to %struct.tree_type*, !dbg !11637
  %mode2362 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2361, i64 0, i32 6, !dbg !11637
  %bf.load2363 = load i32, i32* %mode2362, align 4, !dbg !11637
  %bf.lshr2364 = lshr i32 %bf.load2363, 16, !dbg !11637
  %bf.clear2365 = and i32 %bf.lshr2364, 255, !dbg !11637
  br label %cond.end2366, !dbg !11637

cond.end2366:                                     ; preds = %cond.false2358, %cond.true2354
  %cond2367 = phi i32 [ %call2357, %cond.true2354 ], [ %bf.clear2365, %cond.false2358 ], !dbg !11637
  %cmp2368 = icmp eq i32 %cond2367, 1, !dbg !11638
  br i1 %cmp2368, label %if.end2505, label %land.lhs.true2370, !dbg !11639

land.lhs.true2370:                                ; preds = %cond.end2366
  %call2371 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %treeop0.1) #8, !dbg !11640
  %tobool2373 = icmp eq i8 %call2371, 0, !dbg !11640
  br i1 %tobool2373, label %if.end2505, label %if.then2374, !dbg !11641

if.then2374:                                      ; preds = %land.lhs.true2370
  %395 = bitcast i32* %mode12375 to i8*, !dbg !11642
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %395) #7, !dbg !11642
  %396 = bitcast i64* %bitsize2376 to i8*, !dbg !11643
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396) #7, !dbg !11643
  %397 = bitcast i64* %bitpos2377 to i8*, !dbg !11643
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %397) #7, !dbg !11643
  %398 = bitcast %union.tree_node** %offset2378 to i8*, !dbg !11644
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %398) #7, !dbg !11644
  %399 = bitcast i32* %unsignedp2379 to i8*, !dbg !11645
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %399) #7, !dbg !11645
  %400 = bitcast i32* %volatilep2380 to i8*, !dbg !11646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %400) #7, !dbg !11646
  call void @llvm.dbg.value(metadata i32 0, metadata !10634, metadata !DIExpression()), !dbg !11647
  store i32 0, i32* %volatilep2380, align 4, !dbg !11648
  call void @llvm.dbg.value(metadata i32* %mode12375, metadata !10627, metadata !DIExpression(DW_OP_deref)), !dbg !11647
  call void @llvm.dbg.value(metadata i64* %bitsize2376, metadata !10630, metadata !DIExpression(DW_OP_deref)), !dbg !11647
  call void @llvm.dbg.value(metadata i64* %bitpos2377, metadata !10631, metadata !DIExpression(DW_OP_deref)), !dbg !11647
  call void @llvm.dbg.value(metadata %union.tree_node** %offset2378, metadata !10632, metadata !DIExpression(DW_OP_deref)), !dbg !11647
  call void @llvm.dbg.value(metadata i32* %unsignedp2379, metadata !10633, metadata !DIExpression(DW_OP_deref)), !dbg !11647
  call void @llvm.dbg.value(metadata i32* %volatilep2380, metadata !10634, metadata !DIExpression(DW_OP_deref)), !dbg !11647
  %call2382 = call %union.tree_node* @get_inner_reference(%union.tree_node* %treeop0.1, i64* nonnull %bitsize2376, i64* nonnull %bitpos2377, %union.tree_node** nonnull %offset2378, i32* nonnull %mode12375, i32* nonnull %unsignedp2379, i32* nonnull %volatilep2380, i8 zeroext 1) #8, !dbg !11649
  call void @llvm.dbg.value(metadata %union.tree_node* %call2382, metadata !10635, metadata !DIExpression()), !dbg !11647
  %401 = load %union.tree_node*, %union.tree_node** %offset2378, align 8, !dbg !11650
  call void @llvm.dbg.value(metadata %union.tree_node* %401, metadata !10632, metadata !DIExpression()), !dbg !11647
  %tobool2384 = icmp eq %union.tree_node* %401, null, !dbg !11650
  br i1 %tobool2384, label %land.lhs.true2385, label %if.end2504, !dbg !11652

land.lhs.true2385:                                ; preds = %if.then2374
  %402 = load i64, i64* %bitpos2377, align 8, !dbg !11653
  call void @llvm.dbg.value(metadata i64 %402, metadata !10631, metadata !DIExpression()), !dbg !11647
  %rem238682 = and i64 %402, 7, !dbg !11654
  %cmp2387 = icmp eq i64 %rem238682, 0, !dbg !11654
  %403 = load i64, i64* %bitsize2376, align 8, !dbg !11655
  call void @llvm.dbg.value(metadata i64 %403, metadata !10630, metadata !DIExpression()), !dbg !11647
  %cmp2390 = icmp sgt i64 %403, -1, !dbg !11656
  %or.cond47 = and i1 %cmp2387, %cmp2390, !dbg !11657
  br i1 %or.cond47, label %land.lhs.true2392, label %if.end2504, !dbg !11657

land.lhs.true2392:                                ; preds = %land.lhs.true2385
  %404 = load %struct.tree_type*, %struct.tree_type** %389, align 8, !dbg !11658
  %size2396 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %404, i64 0, i32 2, !dbg !11658
  %405 = load %union.tree_node*, %union.tree_node** %size2396, align 8, !dbg !11658
  call void @llvm.dbg.value(metadata i64 %403, metadata !10630, metadata !DIExpression()), !dbg !11647
  %call2397 = call i32 @compare_tree_int(%union.tree_node* %405, i64 %403) #6, !dbg !11659
  %cmp2398 = icmp eq i32 %call2397, 0, !dbg !11660
  br i1 %cmp2398, label %if.then2400, label %if.end2504, !dbg !11661

if.then2400:                                      ; preds = %land.lhs.true2392
  %type2402 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2382, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11662
  %406 = bitcast %union.tree_node** %type2402 to i64**, !dbg !11662
  %407 = load i64*, i64** %406, align 8, !dbg !11662
  %bf.load2404 = load i64, i64* %407, align 8, !dbg !11662
  %bf.cast240683 = and i64 %bf.load2404, 65535, !dbg !11664
  %cmp2407 = icmp eq i64 %bf.cast240683, 17, !dbg !11664
  br i1 %cmp2407, label %land.lhs.true2409, label %cond.false2424, !dbg !11665

land.lhs.true2409:                                ; preds = %if.then2400
  %size2413 = getelementptr inbounds i64, i64* %407, i64 4, !dbg !11666
  %408 = bitcast i64* %size2413 to i64**, !dbg !11666
  %409 = load i64*, i64** %408, align 8, !dbg !11666
  %bf.load2415 = load i64, i64* %409, align 8, !dbg !11666
  %bf.cast241784 = and i64 %bf.load2415, 65535, !dbg !11667
  %cmp2418 = icmp ne i64 %bf.cast241784, 23, !dbg !11667
  %cmp2421 = icmp ne i32 %modifier, 1, !dbg !11668
  %or.cond48 = and i1 %cmp2418, %cmp2421, !dbg !11669
  br i1 %or.cond48, label %cond.end2425, label %cond.false2424, !dbg !11669

cond.false2424:                                   ; preds = %land.lhs.true2409, %if.then2400
  br label %cond.end2425, !dbg !11662

cond.end2425:                                     ; preds = %land.lhs.true2409, %cond.false2424
  %cond2426 = phi %struct.rtx_def* [ null, %cond.false2424 ], [ %target.addr.1, %land.lhs.true2409 ], !dbg !11662
  switch i32 %modifier, label %cond.false2436 [
    i32 4, label %cond.end2437
    i32 3, label %cond.end2437
    i32 1, label %cond.end2437
  ], !dbg !11670

cond.false2436:                                   ; preds = %cond.end2425
  br label %cond.end2437, !dbg !11671

cond.end2437:                                     ; preds = %cond.end2425, %cond.end2425, %cond.end2425, %cond.false2436
  %cond2438 = phi i32 [ 0, %cond.false2436 ], [ %modifier, %cond.end2425 ], [ %modifier, %cond.end2425 ], [ %modifier, %cond.end2425 ], !dbg !11671
  %call2439 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call2382, %struct.rtx_def* %cond2426, i32 0, i32 %cond2438) #8, !dbg !11672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2439, metadata !10636, metadata !DIExpression()), !dbg !11647
  %410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2439, i64 0, i32 0, !dbg !11673
  %bf.load2440 = load i32, i32* %410, align 8, !dbg !11673
  %bf.clear2441 = and i32 %bf.load2440, 65535, !dbg !11673
  %cmp2442 = icmp eq i32 %bf.clear2441, 43, !dbg !11673
  br i1 %cmp2442, label %if.then2444, label %if.end2504, !dbg !11675

if.then2444:                                      ; preds = %cond.end2437
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2439, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2439, %struct.rtx_def** %op0, align 8, !dbg !11676
  %modifier.off60 = add i32 %modifier, -2, !dbg !11678
  %switch61 = icmp ult i32 %modifier.off60, 3, !dbg !11678
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2439, metadata !10465, metadata !DIExpression()), !dbg !10672
  %411 = load i64, i64* %bitpos2377, align 8, !dbg !11680
  call void @llvm.dbg.value(metadata i64 %411, metadata !10631, metadata !DIExpression()), !dbg !11647
  %div2454 = sdiv i64 %411, 8, !dbg !11680
  br i1 %switch61, label %if.then2453, label %if.else2456, !dbg !11678

if.then2453:                                      ; preds = %if.then2444
  %call2455 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call2439, i32 1, i64 %div2454, i32 0, i32 1) #6, !dbg !11681
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2455, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %if.end2459, !dbg !11682

if.else2456:                                      ; preds = %if.then2444
  %call2458 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call2439, i32 1, i64 %div2454, i32 1, i32 1) #6, !dbg !11683
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2458, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %if.end2459

if.end2459:                                       ; preds = %if.else2456, %if.then2453
  %412 = phi %struct.rtx_def* [ %call2458, %if.else2456 ], [ %call2455, %if.then2453 ], !dbg !11680
  store %struct.rtx_def* %412, %struct.rtx_def** %op0, align 8, !dbg !11680
  call void @llvm.dbg.value(metadata %struct.rtx_def* %412, metadata !10465, metadata !DIExpression()), !dbg !10672
  %cmp2460 = icmp eq %struct.rtx_def* %412, %call2439, !dbg !11684
  br i1 %cmp2460, label %if.then2462, label %if.end2464, !dbg !11686

if.then2462:                                      ; preds = %if.end2459
  call void @llvm.dbg.value(metadata %struct.rtx_def* %412, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2463 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call2439) #6, !dbg !11687
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2463, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2463, %struct.rtx_def** %op0, align 8, !dbg !11688
  br label %if.end2464, !dbg !11689

if.end2464:                                       ; preds = %if.then2462, %if.end2459
  %413 = phi %struct.rtx_def* [ %call2463, %if.then2462 ], [ %412, %if.end2459 ], !dbg !11690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %413, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @set_mem_attributes(%struct.rtx_def* %413, %union.tree_node* %treeop0.1, i32 0) #6, !dbg !11691
  %414 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11692
  call void @llvm.dbg.value(metadata %struct.rtx_def* %414, metadata !10465, metadata !DIExpression()), !dbg !10672
  %arrayidx2467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %414, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !11692
  %415 = bitcast %union.rtunion_def* %arrayidx2467 to i32**, !dbg !11692
  %416 = load i32*, i32** %415, align 8, !dbg !11692
  %bf.load2469 = load i32, i32* %416, align 8, !dbg !11692
  %bf.clear2470 = and i32 %bf.load2469, 65535, !dbg !11692
  %cmp2471 = icmp eq i32 %bf.clear2470, 37, !dbg !11692
  %417 = bitcast i32* %416 to %struct.rtx_def*, !dbg !11694
  br i1 %cmp2471, label %if.then2473, label %if.end2464.if.end2493_crit_edge, !dbg !11694

if.end2464.if.end2493_crit_edge:                  ; preds = %if.end2464
  %418 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %414, i64 0, i32 0, !dbg !11694
  br label %if.end2493, !dbg !11694

if.then2473:                                      ; preds = %if.end2464
  call void @llvm.dbg.value(metadata %struct.rtx_def* %414, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %414, metadata !10465, metadata !DIExpression()), !dbg !10672
  %419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %414, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11695
  %rt_mem2481 = bitcast %union.rtunion_def* %419 to %struct.mem_attrs**, !dbg !11695
  %420 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem2481, align 8, !dbg !11695
  %cmp2482 = icmp eq %struct.mem_attrs* %420, null, !dbg !11695
  br i1 %cmp2482, label %cond.end2491, label %cond.true2484, !dbg !11695

cond.true2484:                                    ; preds = %if.then2473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %414, metadata !10465, metadata !DIExpression()), !dbg !10672
  %align2489 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %420, i64 0, i32 4, !dbg !11695
  %421 = load i32, i32* %align2489, align 4, !dbg !11695
  br label %cond.end2491, !dbg !11695

cond.end2491:                                     ; preds = %if.then2473, %cond.true2484
  %cond2492 = phi i32 [ %421, %cond.true2484 ], [ 8, %if.then2473 ], !dbg !11695
  call void @mark_reg_pointer(%struct.rtx_def* %417, i32 %cond2492) #6, !dbg !11696
  %.phi.trans.insert = bitcast %struct.rtx_def** %op0 to i32**, !dbg !11697
  %.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !11698
  br label %if.end2493, !dbg !11696

if.end2493:                                       ; preds = %if.end2464.if.end2493_crit_edge, %cond.end2491
  %422 = phi i32* [ %.pre, %cond.end2491 ], [ %418, %if.end2464.if.end2493_crit_edge ], !dbg !11698
  %423 = load i32, i32* %volatilep2380, align 4, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %423, metadata !10634, metadata !DIExpression()), !dbg !11647
  %bf.load2494 = load i32, i32* %422, align 8, !dbg !11700
  %or2497144 = shl i32 %423, 27, !dbg !11700
  %424 = and i32 %or2497144, 134217728, !dbg !11700
  %bf.set2502 = or i32 %424, %bf.load2494, !dbg !11700
  store i32 %bf.set2502, i32* %422, align 8, !dbg !11700
  br label %if.end2504, !dbg !11701

if.end2504:                                       ; preds = %if.then2374, %cond.end2437, %if.end2493, %land.lhs.true2392, %land.lhs.true2385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %400) #7, !dbg !11702
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %399) #7, !dbg !11702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %398) #7, !dbg !11702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %397) #7, !dbg !11702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396) #7, !dbg !11702
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %395) #7, !dbg !11702
  %.pre158 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11703
  %425 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre158, i64 0, i32 0, !dbg !11705
  br label %if.end2505, !dbg !11705

if.end2505:                                       ; preds = %land.lhs.true2370, %cond.end2366, %if.end2504, %land.lhs.true2334, %sw.bb2331
  %426 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %427 = phi %struct.rtx_def* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %.pre158, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %428 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %429 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %430 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %431 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %432 = phi %struct.rtx_def* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %.pre158, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %433 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %434 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %435 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %436 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %437 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %438 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %439 = phi i32* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %425, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ]
  %440 = phi %struct.rtx_def* [ null, %land.lhs.true2370 ], [ null, %cond.end2366 ], [ %.pre158, %if.end2504 ], [ null, %land.lhs.true2334 ], [ null, %sw.bb2331 ], !dbg !11703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %440, metadata !10465, metadata !DIExpression()), !dbg !10672
  %tobool2506 = icmp eq %struct.rtx_def* %440, null, !dbg !11703
  br i1 %tobool2506, label %if.then2507, label %if.end2509, !dbg !11706

if.then2507:                                      ; preds = %if.end2505
  %call2508 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop0.1, %struct.rtx_def* null, i32 0, i32 %modifier) #8, !dbg !11707
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2508, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2508, %struct.rtx_def** %op0, align 8, !dbg !11708
  %441 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2508, i64 0, i32 0, !dbg !11709
  br label %if.end2509, !dbg !11709

if.end2509:                                       ; preds = %if.end2505, %if.then2507
  %442 = phi i32* [ %426, %if.end2505 ], [ %441, %if.then2507 ]
  %443 = phi %struct.rtx_def* [ %427, %if.end2505 ], [ %call2508, %if.then2507 ]
  %444 = phi i32* [ %428, %if.end2505 ], [ %441, %if.then2507 ]
  %445 = phi i32* [ %429, %if.end2505 ], [ %441, %if.then2507 ]
  %446 = phi i32* [ %430, %if.end2505 ], [ %441, %if.then2507 ]
  %447 = phi i32* [ %431, %if.end2505 ], [ %441, %if.then2507 ]
  %448 = phi %struct.rtx_def* [ %440, %if.end2505 ], [ %call2508, %if.then2507 ]
  %449 = phi %struct.rtx_def* [ %432, %if.end2505 ], [ %call2508, %if.then2507 ]
  %450 = phi i32* [ %433, %if.end2505 ], [ %441, %if.then2507 ]
  %451 = phi i32* [ %434, %if.end2505 ], [ %441, %if.then2507 ]
  %452 = phi i32* [ %435, %if.end2505 ], [ %441, %if.then2507 ]
  %453 = phi i32* [ %436, %if.end2505 ], [ %441, %if.then2507 ]
  %454 = phi i32* [ %437, %if.end2505 ], [ %441, %if.then2507 ]
  %455 = phi i32* [ %438, %if.end2505 ], [ %441, %if.then2507 ]
  %456 = phi i32* [ %439, %if.end2505 ], [ %441, %if.then2507 ], !dbg !11710
  %bf.load2510 = load i32, i32* %456, align 8, !dbg !11710
  %bf.lshr2511 = lshr i32 %bf.load2510, 16, !dbg !11710
  %bf.clear2512 = and i32 %bf.lshr2511, 255, !dbg !11710
  %cmp2513 = icmp eq i32 %cond26, %bf.clear2512, !dbg !11711
  br i1 %cmp2513, label %if.end2696, label %if.else2516, !dbg !11712

if.else2516:                                      ; preds = %if.end2509
  br i1 %cmp2332, label %if.else2569, label %land.lhs.true2519, !dbg !11713

land.lhs.true2519:                                ; preds = %if.else2516
  %bf.load2520 = load i32, i32* %455, align 8, !dbg !11714
  %bf.clear2522 = and i32 %bf.load2520, 16711680, !dbg !11714
  %cmp2523 = icmp eq i32 %bf.clear2522, 65536, !dbg !11715
  br i1 %cmp2523, label %if.else2569, label %land.lhs.true2525, !dbg !11716

land.lhs.true2525:                                ; preds = %land.lhs.true2519
  %idxprom2526 = zext i32 %cond26 to i64, !dbg !11717
  %arrayidx2527 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2526, !dbg !11717
  %457 = load i8, i8* %arrayidx2527, align 1, !dbg !11717
  %bf.load2530 = load i32, i32* %454, align 8, !dbg !11718
  %bf.lshr2531 = lshr i32 %bf.load2530, 16, !dbg !11718
  %bf.clear2532 = and i32 %bf.lshr2531, 255, !dbg !11718
  %idxprom2533 = zext i32 %bf.clear2532 to i64, !dbg !11718
  %arrayidx2534 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2533, !dbg !11718
  %458 = load i8, i8* %arrayidx2534, align 1, !dbg !11718
  %cmp2537 = icmp eq i8 %457, %458, !dbg !11719
  br i1 %cmp2537, label %land.lhs.true2539, label %if.else2569, !dbg !11720

land.lhs.true2539:                                ; preds = %land.lhs.true2525
  %bf.load2540 = load i32, i32* %453, align 8, !dbg !11721
  %bf.lshr2541 = lshr i32 %bf.load2540, 16, !dbg !11721
  %bf.clear2542 = and i32 %bf.lshr2541, 255, !dbg !11721
  %idxprom2543 = zext i32 %bf.clear2542 to i64, !dbg !11721
  %arrayidx2544 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2543, !dbg !11721
  %459 = load i8, i8* %arrayidx2544, align 1, !dbg !11721
  %cmp2546 = icmp eq i8 %459, 10, !dbg !11721
  br i1 %cmp2546, label %if.else2569, label %lor.lhs.false2548, !dbg !11721

lor.lhs.false2548:                                ; preds = %land.lhs.true2539
  %bf.load2549 = load i32, i32* %452, align 8, !dbg !11721
  %bf.lshr2550 = lshr i32 %bf.load2549, 16, !dbg !11721
  %bf.clear2551 = and i32 %bf.lshr2550, 255, !dbg !11721
  %idxprom2552 = zext i32 %bf.clear2551 to i64, !dbg !11721
  %arrayidx2553 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2552, !dbg !11721
  %460 = load i8, i8* %arrayidx2553, align 1, !dbg !11721
  %cmp2555 = icmp eq i8 %460, 11, !dbg !11721
  br i1 %cmp2555, label %if.else2569, label %if.then2557, !dbg !11722

if.then2557:                                      ; preds = %lor.lhs.false2548
  %bf.load2558 = load i32, i32* %451, align 8, !dbg !11723
  %bf.clear2559 = and i32 %bf.load2558, 65535, !dbg !11723
  %cmp2560 = icmp eq i32 %bf.clear2559, 39, !dbg !11726
  br i1 %cmp2560, label %if.then2562, label %if.end2567, !dbg !11727

if.then2562:                                      ; preds = %if.then2557
  %bf.load2563 = load i32, i32* %450, align 8, !dbg !11728
  %bf.lshr2564 = lshr i32 %bf.load2563, 16, !dbg !11728
  %bf.clear2565 = and i32 %bf.lshr2564, 255, !dbg !11728
  call void @llvm.dbg.value(metadata %struct.rtx_def* %449, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2566 = call %struct.rtx_def* @force_reg(i32 %bf.clear2565, %struct.rtx_def* %449) #6, !dbg !11729
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2566, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2566, %struct.rtx_def** %op0, align 8, !dbg !11730
  br label %if.end2567, !dbg !11731

if.end2567:                                       ; preds = %if.then2562, %if.then2557
  %461 = phi %struct.rtx_def* [ %call2566, %if.then2562 ], [ %448, %if.then2557 ], !dbg !11732
  %462 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !11733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %461, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2568 = call %struct.rtx_def* %462(i32 %cond26, %struct.rtx_def* %461) #6, !dbg !11733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2568, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2568, %struct.rtx_def** %op0, align 8, !dbg !11734
  %463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2568, i64 0, i32 0, !dbg !11735
  br label %if.end2696, !dbg !11735

if.else2569:                                      ; preds = %land.lhs.true2519, %if.else2516, %lor.lhs.false2548, %land.lhs.true2539, %land.lhs.true2525
  %bf.load2570 = load i32, i32* %447, align 8, !dbg !11736
  %bf.lshr2571 = lshr i32 %bf.load2570, 16, !dbg !11736
  %bf.clear2572 = and i32 %bf.lshr2571, 255, !dbg !11736
  %idxprom2573 = zext i32 %bf.clear2572 to i64, !dbg !11736
  %arrayidx2574 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2573, !dbg !11736
  %464 = load i8, i8* %arrayidx2574, align 1, !dbg !11736
  %cmp2576 = icmp eq i8 %464, 2, !dbg !11736
  br i1 %cmp2576, label %land.lhs.true2587, label %lor.lhs.false2578, !dbg !11736

lor.lhs.false2578:                                ; preds = %if.else2569
  %bf.load2579 = load i32, i32* %446, align 8, !dbg !11736
  %bf.lshr2580 = lshr i32 %bf.load2579, 16, !dbg !11736
  %bf.clear2581 = and i32 %bf.lshr2580, 255, !dbg !11736
  %idxprom2582 = zext i32 %bf.clear2581 to i64, !dbg !11736
  %arrayidx2583 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2582, !dbg !11736
  %465 = load i8, i8* %arrayidx2583, align 1, !dbg !11736
  %cmp2585 = icmp eq i8 %465, 3, !dbg !11736
  br i1 %cmp2585, label %land.lhs.true2587, label %if.else2611, !dbg !11737

land.lhs.true2587:                                ; preds = %lor.lhs.false2578, %if.else2569
  %idxprom2588 = zext i32 %cond26 to i64, !dbg !11738
  %arrayidx2589 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2588, !dbg !11738
  %466 = load i8, i8* %arrayidx2589, align 1, !dbg !11738
  %cmp2591 = icmp eq i8 %466, 2, !dbg !11738
  br i1 %cmp2591, label %if.then2599, label %lor.lhs.false2593, !dbg !11738

lor.lhs.false2593:                                ; preds = %land.lhs.true2587
  %cmp2597 = icmp eq i8 %466, 3, !dbg !11738
  br i1 %cmp2597, label %if.then2599, label %if.else2611, !dbg !11739

if.then2599:                                      ; preds = %lor.lhs.false2593, %land.lhs.true2587
  %bf.load2600 = load i32, i32* %444, align 8, !dbg !11740
  %bf.lshr2601 = lshr i32 %bf.load2600, 16, !dbg !11740
  %bf.clear2602 = and i32 %bf.lshr2601, 255, !dbg !11740
  call void @llvm.dbg.value(metadata %struct.rtx_def* %443, metadata !10465, metadata !DIExpression()), !dbg !10672
  %type2604 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11741
  %467 = bitcast %union.tree_node** %type2604 to i64**, !dbg !11741
  %468 = load i64*, i64** %467, align 8, !dbg !11741
  %bf.load2606 = load i64, i64* %468, align 8, !dbg !11741
  %bf.lshr2607 = lshr i64 %bf.load2606, 21, !dbg !11741
  %469 = trunc i64 %bf.lshr2607 to i32, !dbg !11741
  %bf.cast2609 = and i32 %469, 1, !dbg !11741
  %call2610 = call %struct.rtx_def* @convert_modes(i32 %cond26, i32 %bf.clear2602, %struct.rtx_def* %443, i32 %bf.cast2609) #8, !dbg !11742
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2610, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2610, %struct.rtx_def** %op0, align 8, !dbg !11743
  %470 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2610, i64 0, i32 0, !dbg !11744
  br label %if.end2696, !dbg !11744

if.else2611:                                      ; preds = %lor.lhs.false2593, %lor.lhs.false2578
  %bf.load2612 = load i32, i32* %445, align 8, !dbg !11745
  %bf.clear2613 = and i32 %bf.load2612, 65535, !dbg !11745
  %cmp2614 = icmp eq i32 %bf.clear2613, 43, !dbg !11745
  br i1 %cmp2614, label %if.end2696, label %if.then2616, !dbg !11746

if.then2616:                                      ; preds = %if.else2611
  %type2618 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11747
  %471 = load %union.tree_node*, %union.tree_node** %type2618, align 8, !dbg !11747
  call void @llvm.dbg.value(metadata %union.tree_node* %471, metadata !10637, metadata !DIExpression()), !dbg !11748
  %bf.load2620 = load i64, i64* %3, align 8, !dbg !11749
  %bf.cast262373 = and i64 %bf.load2620, 262144, !dbg !11749
  %tobool2624 = icmp eq i64 %bf.cast262373, 0, !dbg !11749
  br i1 %tobool2624, label %cond.end2627, label %cond.true2625, !dbg !11749

cond.true2625:                                    ; preds = %if.then2616
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9356, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11749
  br label %cond.end2627, !dbg !11749

cond.end2627:                                     ; preds = %if.then2616, %cond.true2625
  %cmp2629 = icmp eq %struct.rtx_def* %target.addr.1, null, !dbg !11750
  br i1 %cmp2629, label %if.then2653, label %lor.lhs.false2631, !dbg !11752

lor.lhs.false2631:                                ; preds = %cond.end2627
  %472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.1, i64 0, i32 0, !dbg !11753
  %bf.load2632 = load i32, i32* %472, align 8, !dbg !11753
  %bf.lshr2633 = lshr i32 %bf.load2632, 16, !dbg !11753
  %bf.clear2634 = and i32 %bf.lshr2633, 255, !dbg !11753
  %473 = getelementptr inbounds %union.tree_node, %union.tree_node* %471, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11754
  %bf.load2636 = load i64, i64* %473, align 8, !dbg !11754
  %bf.cast263874 = and i64 %bf.load2636, 65535, !dbg !11754
  %cmp2639 = icmp eq i64 %bf.cast263874, 14, !dbg !11754
  br i1 %cmp2639, label %cond.true2641, label %cond.false2643, !dbg !11754

cond.true2641:                                    ; preds = %lor.lhs.false2631
  %call2642 = call i32 @vector_type_mode(%union.tree_node* %471) #6, !dbg !11754
  br label %cond.end2649, !dbg !11754

cond.false2643:                                   ; preds = %lor.lhs.false2631
  %type2644 = bitcast %union.tree_node* %471 to %struct.tree_type*, !dbg !11754
  %mode2645 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2644, i64 0, i32 6, !dbg !11754
  %bf.load2646 = load i32, i32* %mode2645, align 4, !dbg !11754
  %bf.lshr2647 = lshr i32 %bf.load2646, 16, !dbg !11754
  %bf.clear2648 = and i32 %bf.lshr2647, 255, !dbg !11754
  br label %cond.end2649, !dbg !11754

cond.end2649:                                     ; preds = %cond.false2643, %cond.true2641
  %cond2650 = phi i32 [ %call2642, %cond.true2641 ], [ %bf.clear2648, %cond.false2643 ], !dbg !11754
  %cmp2651 = icmp eq i32 %bf.clear2634, %cond2650, !dbg !11755
  br i1 %cmp2651, label %if.end2691, label %if.then2653, !dbg !11756

if.then2653:                                      ; preds = %cond.end2649, %cond.end2627
  %474 = getelementptr inbounds %union.tree_node, %union.tree_node* %471, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11757
  %bf.load2655 = load i64, i64* %474, align 8, !dbg !11757
  %bf.cast265776 = and i64 %bf.load2655, 65535, !dbg !11757
  %cmp2658 = icmp eq i64 %bf.cast265776, 14, !dbg !11757
  br i1 %cmp2658, label %cond.true2660, label %cond.false2662, !dbg !11757

cond.true2660:                                    ; preds = %if.then2653
  %call2661 = call i32 @vector_type_mode(%union.tree_node* %471) #6, !dbg !11757
  %bf.load2671.pre = load i64, i64* %474, align 8, !dbg !11758
  br label %cond.end2668, !dbg !11757

cond.false2662:                                   ; preds = %if.then2653
  %type2663 = bitcast %union.tree_node* %471 to %struct.tree_type*, !dbg !11757
  %mode2664 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2663, i64 0, i32 6, !dbg !11757
  %bf.load2665 = load i32, i32* %mode2664, align 4, !dbg !11757
  %bf.lshr2666 = lshr i32 %bf.load2665, 16, !dbg !11757
  %bf.clear2667 = and i32 %bf.lshr2666, 255, !dbg !11757
  br label %cond.end2668, !dbg !11757

cond.end2668:                                     ; preds = %cond.false2662, %cond.true2660
  %bf.load2671 = phi i64 [ %bf.load2671.pre, %cond.true2660 ], [ %bf.load2655, %cond.false2662 ], !dbg !11758
  %cond2669 = phi i32 [ %call2661, %cond.true2660 ], [ %bf.clear2667, %cond.false2662 ], !dbg !11757
  %bf.cast267377 = and i64 %bf.load2671, 65535, !dbg !11758
  %cmp2674 = icmp eq i64 %bf.cast267377, 14, !dbg !11758
  br i1 %cmp2674, label %cond.true2676, label %cond.false2678, !dbg !11758

cond.true2676:                                    ; preds = %cond.end2668
  %call2677 = call i32 @vector_type_mode(%union.tree_node* %471) #6, !dbg !11758
  br label %cond.end2684, !dbg !11758

cond.false2678:                                   ; preds = %cond.end2668
  %type2679 = bitcast %union.tree_node* %471 to %struct.tree_type*, !dbg !11758
  %mode2680 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2679, i64 0, i32 6, !dbg !11758
  %bf.load2681 = load i32, i32* %mode2680, align 4, !dbg !11758
  %bf.lshr2682 = lshr i32 %bf.load2681, 16, !dbg !11758
  %bf.clear2683 = and i32 %bf.lshr2682, 255, !dbg !11758
  br label %cond.end2684, !dbg !11758

cond.end2684:                                     ; preds = %cond.false2678, %cond.true2676
  %cond2685 = phi i32 [ %call2677, %cond.true2676 ], [ %bf.clear2683, %cond.false2678 ], !dbg !11758
  %idxprom2686 = zext i32 %cond2685 to i64, !dbg !11758
  %arrayidx2687 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2686, !dbg !11758
  %475 = load i8, i8* %arrayidx2687, align 1, !dbg !11758
  %conv2689 = zext i8 %475 to i64, !dbg !11758
  %call2690 = call %struct.rtx_def* @assign_stack_temp_for_type(i32 %cond2669, i64 %conv2689, i32 0, %union.tree_node* %471) #6, !dbg !11759
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2690, metadata !10461, metadata !DIExpression()), !dbg !10672
  br label %if.end2691, !dbg !11760

if.end2691:                                       ; preds = %cond.end2649, %cond.end2684
  %target.addr.8 = phi %struct.rtx_def* [ %call2690, %cond.end2684 ], [ %target.addr.1, %cond.end2649 ], !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.8, metadata !10461, metadata !DIExpression()), !dbg !10672
  %476 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11761
  call void @llvm.dbg.value(metadata %struct.rtx_def* %476, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2692 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.8, %struct.rtx_def* %476) #8, !dbg !11762
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.8, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %target.addr.8, %struct.rtx_def** %op0, align 8, !dbg !11763
  %477 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.8, i64 0, i32 0, !dbg !11764
  br label %if.end2696, !dbg !11764

if.end2696:                                       ; preds = %if.end2567, %if.else2611, %if.end2691, %if.then2599, %if.end2509
  %478 = phi %struct.rtx_def* [ %call2568, %if.end2567 ], [ %448, %if.else2611 ], [ %target.addr.8, %if.end2691 ], [ %call2610, %if.then2599 ], [ %448, %if.end2509 ]
  %479 = phi i32* [ %463, %if.end2567 ], [ %442, %if.else2611 ], [ %477, %if.end2691 ], [ %470, %if.then2599 ], [ %442, %if.end2509 ], !dbg !11765
  %bf.load2697 = load i32, i32* %479, align 8, !dbg !11765
  %bf.clear2698 = and i32 %bf.load2697, 65535, !dbg !11765
  %cmp2699 = icmp eq i32 %bf.clear2698, 43, !dbg !11765
  br i1 %cmp2699, label %if.then2701, label %if.end2753, !dbg !11767

if.then2701:                                      ; preds = %if.end2696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %478, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2702 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %478) #6, !dbg !11768
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2702, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2702, %struct.rtx_def** %op0, align 8, !dbg !11770
  %bf.load2704 = load i64, i64* %10, align 8, !dbg !11771
  %bf.cast270775 = and i64 %bf.load2704, 33554432, !dbg !11771
  %tobool2708 = icmp eq i64 %bf.cast270775, 0, !dbg !11771
  br i1 %tobool2708, label %if.end2751, label %if.then2709, !dbg !11773

if.then2709:                                      ; preds = %if.then2701
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2702, metadata !10465, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2702, metadata !10465, metadata !DIExpression()), !dbg !10672
  %480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2702, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !11774
  %rt_mem2713 = bitcast %union.rtunion_def* %480 to %struct.mem_attrs**, !dbg !11774
  %481 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem2713, align 8, !dbg !11774
  %cmp2714 = icmp eq %struct.mem_attrs* %481, null, !dbg !11774
  br i1 %cmp2714, label %cond.end2723, label %cond.true2716, !dbg !11774

cond.true2716:                                    ; preds = %if.then2709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2702, metadata !10465, metadata !DIExpression()), !dbg !10672
  %align2721 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %481, i64 0, i32 4, !dbg !11774
  %482 = load i32, i32* %align2721, align 4, !dbg !11774
  br label %cond.end2723, !dbg !11774

cond.end2723:                                     ; preds = %if.then2709, %cond.true2716
  %cond2724 = phi i32 [ %482, %cond.true2716 ], [ 8, %if.then2709 ], !dbg !11774
  %483 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11774
  %484 = load i32, i32* %483, align 8, !dbg !11774
  %cmp2727 = icmp ugt i32 %cond2724, %484, !dbg !11774
  br i1 %cmp2727, label %cond.true2729, label %cond.false2745, !dbg !11774

cond.true2729:                                    ; preds = %cond.end2723
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2702, metadata !10465, metadata !DIExpression()), !dbg !10672
  br i1 %cmp2714, label %cond.end2748, label %cond.true2736, !dbg !11774

cond.true2736:                                    ; preds = %cond.true2729
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2702, metadata !10465, metadata !DIExpression()), !dbg !10672
  %align2741 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %481, i64 0, i32 4, !dbg !11774
  %485 = load i32, i32* %align2741, align 4, !dbg !11774
  br label %cond.end2748, !dbg !11774

cond.false2745:                                   ; preds = %cond.end2723
  br label %cond.end2748, !dbg !11774

cond.end2748:                                     ; preds = %cond.true2729, %cond.true2736, %cond.false2745
  %cond2749 = phi i32 [ %484, %cond.false2745 ], [ %485, %cond.true2736 ], [ 8, %cond.true2729 ], !dbg !11774
  call void @set_mem_align(%struct.rtx_def* %call2702, i32 %cond2749) #6, !dbg !11775
  %.pre160 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11776
  br label %if.end2751, !dbg !11775

if.end2751:                                       ; preds = %if.then2701, %cond.end2748
  %486 = phi %struct.rtx_def* [ %call2702, %if.then2701 ], [ %.pre160, %cond.end2748 ], !dbg !11776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %486, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2752 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %486, i32 %cond26, i64 0, i32 1, i32 1) #6, !dbg !11776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2752, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2752, %struct.rtx_def** %op0, align 8, !dbg !11777
  br label %if.end2753, !dbg !11778

if.end2753:                                       ; preds = %if.end2751, %if.end2696
  %487 = phi %struct.rtx_def* [ %call2752, %if.end2751 ], [ %478, %if.end2696 ], !dbg !11779
  call void @llvm.dbg.value(metadata %struct.rtx_def* %487, metadata !10465, metadata !DIExpression()), !dbg !10672
  br label %cleanup3078, !dbg !11780

sw.bb2754:                                        ; preds = %if.end173, %if.end173
  br i1 %25, label %if.end2787, label %land.lhs.true2756, !dbg !11781

land.lhs.true2756:                                ; preds = %sw.bb2754
  %cmp2757 = icmp eq %struct.rtx_def* %target.addr.1, null, !dbg !11783
  %or.cond49 = or i1 %cmp2757, %cmp177, !dbg !11784
  br i1 %or.cond49, label %if.then2779, label %lor.lhs.false2762, !dbg !11784

lor.lhs.false2762:                                ; preds = %land.lhs.true2756
  %call2763 = tail call i32 @safe_from_p(%struct.rtx_def* %target.addr.1, %union.tree_node* %treeop0.1, i32 1) #8, !dbg !11785
  %tobool2764 = icmp eq i32 %call2763, 0, !dbg !11785
  br i1 %tobool2764, label %if.then2779, label %lor.lhs.false2765, !dbg !11786

lor.lhs.false2765:                                ; preds = %lor.lhs.false2762
  %call2766 = tail call i32 @safe_from_p(%struct.rtx_def* %target.addr.1, %union.tree_node* %treeop1.2, i32 1) #8, !dbg !11787
  %tobool2767 = icmp eq i32 %call2766, 0, !dbg !11787
  br i1 %tobool2767, label %if.then2779, label %lor.lhs.false2768, !dbg !11788

lor.lhs.false2768:                                ; preds = %lor.lhs.false2765
  %488 = load i32, i32* @optimize, align 4, !dbg !11789
  %tobool2769 = icmp eq i32 %488, 0, !dbg !11789
  br i1 %tobool2769, label %land.lhs.true2770, label %if.end2787, !dbg !11790

land.lhs.true2770:                                ; preds = %lor.lhs.false2768
  %489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.1, i64 0, i32 0, !dbg !11791
  %bf.load2771 = load i32, i32* %489, align 8, !dbg !11791
  %bf.clear2772 = and i32 %bf.load2771, 65535, !dbg !11791
  %cmp2773 = icmp eq i32 %bf.clear2772, 37, !dbg !11791
  br i1 %cmp2773, label %land.lhs.true2775, label %if.end2787, !dbg !11792

land.lhs.true2775:                                ; preds = %land.lhs.true2770
  %call2776 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %target.addr.1) #8, !dbg !11793
  %cmp2777 = icmp ult i32 %call2776, 53, !dbg !11794
  br i1 %cmp2777, label %if.then2779, label %if.end2787, !dbg !11795

if.then2779:                                      ; preds = %lor.lhs.false2765, %lor.lhs.false2762, %land.lhs.true2775, %land.lhs.true2756
  %cmp2780 = icmp eq i32 %tmode, 0, !dbg !11796
  %tmode.cond2650 = select i1 %cmp2780, i32 %cond26, i32 %tmode, !dbg !11797
  %call2786 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %tmode.cond2650) #6, !dbg !11798
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2786, metadata !10461, metadata !DIExpression()), !dbg !10672
  br label %if.end2787, !dbg !11799

if.end2787:                                       ; preds = %lor.lhs.false2768, %if.then2779, %land.lhs.true2775, %land.lhs.true2770, %sw.bb2754
  %target.addr.9 = phi %struct.rtx_def* [ %target.addr.1, %sw.bb2754 ], [ %call2786, %if.then2779 ], [ %target.addr.1, %lor.lhs.false2768 ], [ %target.addr.1, %land.lhs.true2775 ], [ %target.addr.1, %land.lhs.true2770 ], !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.9, metadata !10461, metadata !DIExpression()), !dbg !10672
  %tobool2788 = icmp eq %struct.rtx_def* %target.addr.9, null, !dbg !11800
  br i1 %tobool2788, label %if.end2791, label %if.then2789, !dbg !11802

if.then2789:                                      ; preds = %if.end2787
  %490 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11803
  %call2790 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %target.addr.9, %struct.rtx_def* %490) #8, !dbg !11804
  br label %if.end2791, !dbg !11804

if.end2791:                                       ; preds = %if.end2787, %if.then2789
  %call2792 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !11805
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2792, metadata !10466, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2792, %struct.rtx_def** %op1, align 8, !dbg !11806
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2792, metadata !10466, metadata !DIExpression()), !dbg !10672
  tail call void @jumpifnot_1(i32 %bf.cast, %union.tree_node* %treeop0.1, %union.tree_node* %treeop1.2, %struct.rtx_def* %call2792, i32 -1) #6, !dbg !11807
  br i1 %tobool2788, label %if.end2796, label %if.then2794, !dbg !11808

if.then2794:                                      ; preds = %if.end2791
  %491 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !11809
  %call2795 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %target.addr.9, %struct.rtx_def* %491) #8, !dbg !11811
  br label %if.end2796, !dbg !11811

if.end2796:                                       ; preds = %if.end2791, %if.then2794
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2792, metadata !10466, metadata !DIExpression()), !dbg !10672
  %call2797 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2792) #6, !dbg !11812
  %492 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11813
  %cond2802 = select i1 %25, %struct.rtx_def* %492, %struct.rtx_def* %target.addr.9, !dbg !11813
  br label %cleanup3078, !dbg !11813

sw.bb2803:                                        ; preds = %if.end173
  %493 = bitcast %struct.tree_stmt_iterator* %iter to i8*, !dbg !11814
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %493) #7, !dbg !11814
  br i1 %25, label %cond.end2807, label %cond.true2805, !dbg !11815

cond.true2805:                                    ; preds = %sw.bb2803
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9443, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11815
  br label %cond.end2807, !dbg !11815

cond.end2807:                                     ; preds = %sw.bb2803, %cond.true2805
  %494 = bitcast %struct.tree_stmt_iterator* %tmp2809 to i8*, !dbg !11816
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %494) #7, !dbg !11816
  %call2810 = tail call fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %exp) #8, !dbg !11816
  %495 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp2809, i64 0, i32 0, !dbg !11816
  %496 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call2810, 0, !dbg !11816
  store %struct.tree_statement_list_node* %496, %struct.tree_statement_list_node** %495, align 8, !dbg !11816
  %497 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp2809, i64 0, i32 1, !dbg !11816
  %498 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call2810, 1, !dbg !11816
  store %union.tree_node* %498, %union.tree_node** %497, align 8, !dbg !11816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %493, i8* nonnull align 8 %494, i64 16, i1 false), !dbg !11816
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %494) #7, !dbg !11816
  %499 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %iter, i64 0, i32 0, !dbg !11818
  %500 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %iter, i64 0, i32 1, !dbg !11818
  br label %for.cond2811, !dbg !11820

for.cond2811:                                     ; preds = %for.body2814, %cond.end2807
  %501 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %499, align 8, !dbg !11821
  %502 = load %union.tree_node*, %union.tree_node** %500, align 8, !dbg !11821
  %call2812 = call fastcc zeroext i8 @tsi_end_p(%struct.tree_statement_list_node* %501, %union.tree_node* %502) #8, !dbg !11821
  %tobool2813 = icmp eq i8 %call2812, 0, !dbg !11822
  br i1 %tobool2813, label %for.body2814, label %for.end2818, !dbg !11823

for.body2814:                                     ; preds = %for.cond2811
  %503 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %499, align 8, !dbg !11824
  %504 = load %union.tree_node*, %union.tree_node** %500, align 8, !dbg !11824
  %call2815 = call fastcc %union.tree_node* @tsi_stmt(%struct.tree_statement_list_node* %503, %union.tree_node* %504) #8, !dbg !11824
  %505 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11825
  %call2816 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call2815, %struct.rtx_def* %505, i32 0, i32 %modifier) #8, !dbg !11826
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %iter, metadata !10643, metadata !DIExpression(DW_OP_deref)), !dbg !11827
  call fastcc void @tsi_next(%struct.tree_stmt_iterator* nonnull %iter) #8, !dbg !11828
  br label %for.cond2811, !dbg !11829, !llvm.loop !11830

for.end2818:                                      ; preds = %for.cond2811
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %493) #7, !dbg !11832
  %506 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11833
  br label %cleanup3078, !dbg !11834

sw.bb2819:                                        ; preds = %if.end173
  %bf.load2821 = load i64, i64* %10, align 8, !dbg !11835
  %bf.cast282371 = and i64 %bf.load2821, 65535, !dbg !11835
  %cmp2824 = icmp eq i64 %bf.cast282371, 19, !dbg !11835
  br i1 %cmp2824, label %cond.true2826, label %cond.end2828, !dbg !11835

cond.true2826:                                    ; preds = %sw.bb2819
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9454, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11835
  %bf.load2831.pre = load i64, i64* %10, align 8, !dbg !11836
  br label %cond.end2828, !dbg !11835

cond.end2828:                                     ; preds = %sw.bb2819, %cond.true2826
  %bf.load2831 = phi i64 [ %bf.load2821, %sw.bb2819 ], [ %bf.load2831.pre, %cond.true2826 ], !dbg !11836
  %bf.cast283472 = and i64 %bf.load2831, 262144, !dbg !11836
  %tobool2835 = icmp ne i64 %bf.cast283472, 0, !dbg !11836
  %or.cond51 = or i1 %tobool2835, %25, !dbg !11836
  br i1 %or.cond51, label %cond.true2848, label %land.lhs.true2838, !dbg !11836

land.lhs.true2838:                                ; preds = %cond.end2828
  %type2840 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11836
  %507 = load %union.tree_node*, %union.tree_node** %type2840, align 8, !dbg !11836
  %508 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11836
  %cmp2841 = icmp eq %union.tree_node* %507, %508, !dbg !11836
  br i1 %cmp2841, label %cond.true2848, label %land.lhs.true2843, !dbg !11836

land.lhs.true2843:                                ; preds = %land.lhs.true2838
  %type2845 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop2.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11836
  %509 = load %union.tree_node*, %union.tree_node** %type2845, align 8, !dbg !11836
  %cmp2846 = icmp eq %union.tree_node* %509, %508, !dbg !11836
  br i1 %cmp2846, label %cond.true2848, label %cond.end2850, !dbg !11836

cond.true2848:                                    ; preds = %land.lhs.true2843, %land.lhs.true2838, %cond.end2828
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9464, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11836
  br label %cond.end2850, !dbg !11836

cond.end2850:                                     ; preds = %land.lhs.true2843, %cond.true2848
  %cmp2852 = icmp ne i32 %modifier, 1, !dbg !11837
  %tobool2855 = icmp ne %struct.rtx_def* %target.addr.1, null, !dbg !11839
  %or.cond52 = and i1 %cmp2852, %tobool2855, !dbg !11840
  br i1 %or.cond52, label %land.lhs.true2856, label %if.else2879, !dbg !11840

land.lhs.true2856:                                ; preds = %cond.end2850
  %call2857 = tail call i32 @safe_from_p(%struct.rtx_def* nonnull %target.addr.1, %union.tree_node* %treeop0.1, i32 1) #8, !dbg !11841
  %tobool2858 = icmp eq i32 %call2857, 0, !dbg !11841
  br i1 %tobool2858, label %if.else2879, label %land.lhs.true2859, !dbg !11842

land.lhs.true2859:                                ; preds = %land.lhs.true2856
  %510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.1, i64 0, i32 0, !dbg !11843
  %bf.load2860 = load i32, i32* %510, align 8, !dbg !11843
  %bf.lshr2861 = lshr i32 %bf.load2860, 16, !dbg !11843
  %bf.clear2862 = and i32 %bf.lshr2861, 255, !dbg !11843
  %cmp2863 = icmp eq i32 %bf.clear2862, %cond26, !dbg !11844
  br i1 %cmp2863, label %land.lhs.true2865, label %if.else2879, !dbg !11845

land.lhs.true2865:                                ; preds = %land.lhs.true2859
  %call2866 = tail call i32 @can_conditionally_move_p(i32 %cond26) #6, !dbg !11846
  %tobool2867 = icmp eq i32 %call2866, 0, !dbg !11846
  br i1 %tobool2867, label %land.lhs.true2865.land.lhs.true2873_crit_edge, label %lor.lhs.false2868, !dbg !11847

land.lhs.true2865.land.lhs.true2873_crit_edge:    ; preds = %land.lhs.true2865
  %bf.load2874.pre = load i32, i32* %510, align 8, !dbg !11848
  %.pre190 = and i32 %bf.load2874.pre, 65535, !dbg !11848
  br label %land.lhs.true2873, !dbg !11847

lor.lhs.false2868:                                ; preds = %land.lhs.true2865
  %bf.load2869 = load i32, i32* %510, align 8, !dbg !11849
  %bf.clear2870 = and i32 %bf.load2869, 65535, !dbg !11849
  %cmp2871 = icmp eq i32 %bf.clear2870, 37, !dbg !11849
  br i1 %cmp2871, label %land.lhs.true2873, label %if.else2879, !dbg !11850

land.lhs.true2873:                                ; preds = %land.lhs.true2865.land.lhs.true2873_crit_edge, %lor.lhs.false2868
  %bf.clear2875.pre-phi = phi i32 [ %.pre190, %land.lhs.true2865.land.lhs.true2873_crit_edge ], [ %bf.clear2870, %lor.lhs.false2868 ], !dbg !11848
  %cmp2876 = icmp eq i32 %bf.clear2875.pre-phi, 43, !dbg !11848
  br i1 %cmp2876, label %if.else2879, label %if.end2881, !dbg !11851

if.else2879:                                      ; preds = %land.lhs.true2856, %land.lhs.true2873, %lor.lhs.false2868, %land.lhs.true2859, %cond.end2850
  %call2880 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %9, i32 0, i32 0, i32 1) #6, !dbg !11852
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2880, metadata !10467, metadata !DIExpression()), !dbg !10672
  br label %if.end2881

if.end2881:                                       ; preds = %land.lhs.true2873, %if.else2879
  %temp.3 = phi %struct.rtx_def* [ %call2880, %if.else2879 ], [ %target.addr.1, %land.lhs.true2873 ], !dbg !11853
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.3, metadata !10467, metadata !DIExpression()), !dbg !10672
  tail call void @do_pending_stack_adjust() #6, !dbg !11854
  %511 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !11855
  %add2882 = add nsw i32 %511, 1, !dbg !11855
  store i32 %add2882, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !11855
  %call2883 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !11856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2883, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2883, %struct.rtx_def** %op0, align 8, !dbg !11857
  %call2884 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !11858
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2884, metadata !10466, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call2884, %struct.rtx_def** %op1, align 8, !dbg !11859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2883, metadata !10465, metadata !DIExpression()), !dbg !10672
  tail call void @jumpifnot(%union.tree_node* %treeop0.1, %struct.rtx_def* %call2883, i32 -1) #6, !dbg !11860
  %conv2886 = zext i1 %cmp177 to i32, !dbg !11861
  %call2887 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %treeop1.2, %struct.rtx_def* %temp.3, i32 %conv2886, i8 zeroext 0) #8, !dbg !11862
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2884, metadata !10466, metadata !DIExpression()), !dbg !10672
  %call2888 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call2884) #6, !dbg !11863
  %call2889 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call2888) #6, !dbg !11864
  %call2890 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !11865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2883, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call2891 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2883) #6, !dbg !11866
  %call2894 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %treeop2.3, %struct.rtx_def* %temp.3, i32 %conv2886, i8 zeroext 0) #8, !dbg !11867
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2884, metadata !10466, metadata !DIExpression()), !dbg !10672
  %call2895 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2884) #6, !dbg !11868
  %512 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !11869
  %sub2896 = add nsw i32 %512, -1, !dbg !11869
  store i32 %sub2896, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 1), align 4, !dbg !11869
  br label %cleanup3078, !dbg !11870

sw.bb2897:                                        ; preds = %if.end173
  %call2898 = tail call %struct.rtx_def* @expand_vec_cond_expr(%union.tree_node* %9, %union.tree_node* %treeop0.1, %union.tree_node* %treeop1.2, %union.tree_node* %treeop2.3, %struct.rtx_def* %target.addr.1) #6, !dbg !11871
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2898, metadata !10461, metadata !DIExpression()), !dbg !10672
  br label %cleanup3078, !dbg !11872

sw.bb2899:                                        ; preds = %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop0.1, metadata !10651, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.2, metadata !10653, metadata !DIExpression()), !dbg !11873
  br i1 %25, label %cond.end2903, label %cond.true2901, !dbg !11874

cond.true2901:                                    ; preds = %sw.bb2899
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9512, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11874
  br label %cond.end2903, !dbg !11874

cond.end2903:                                     ; preds = %sw.bb2899, %cond.true2901
  %513 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11875
  %bf.load2906 = load i64, i64* %513, align 8, !dbg !11875
  %bf.cast290866 = and i64 %bf.load2906, 65535, !dbg !11876
  %cmp2909 = icmp eq i64 %bf.cast290866, 41, !dbg !11876
  br i1 %cmp2909, label %land.lhs.true2911, label %if.end2995, !dbg !11877

land.lhs.true2911:                                ; preds = %cond.end2903
  %514 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11878
  %bf.load2913 = load i64, i64* %514, align 8, !dbg !11878
  %bf.cast291567 = and i64 %bf.load2913, 65535, !dbg !11879
  %cmp2916 = icmp eq i64 %bf.cast291567, 87, !dbg !11879
  br i1 %cmp2916, label %land.lhs.true2925, label %lor.lhs.false2918, !dbg !11880

lor.lhs.false2918:                                ; preds = %land.lhs.true2911
  %cmp2923 = icmp eq i64 %bf.cast291567, 89, !dbg !11881
  br i1 %cmp2923, label %land.lhs.true2925, label %if.end2995, !dbg !11882

land.lhs.true2925:                                ; preds = %lor.lhs.false2918, %land.lhs.true2911
  %arrayidx2928 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %20, i64 0, i32 3, i64 0, !dbg !11883
  %515 = load %union.tree_node*, %union.tree_node** %arrayidx2928, align 8, !dbg !11883
  %cmp2929 = icmp eq %union.tree_node* %515, %treeop0.1, !dbg !11884
  br i1 %cmp2929, label %land.lhs.true2931, label %if.end2995, !dbg !11885

land.lhs.true2931:                                ; preds = %land.lhs.true2925
  %arrayidx2934 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %20, i64 0, i32 3, i64 1, !dbg !11886
  %516 = bitcast %union.tree_node** %arrayidx2934 to i64**, !dbg !11886
  %517 = load i64*, i64** %516, align 8, !dbg !11886
  %bf.load2936 = load i64, i64* %517, align 8, !dbg !11886
  %bf.cast293869 = and i64 %bf.load2936, 65535, !dbg !11887
  %cmp2939 = icmp eq i64 %bf.cast293869, 41, !dbg !11887
  br i1 %cmp2939, label %land.lhs.true2941, label %if.end2995, !dbg !11888

land.lhs.true2941:                                ; preds = %land.lhs.true2931
  %arrayidx2944 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %21, i64 0, i32 3, i64 1, !dbg !11889
  %518 = bitcast %union.tree_node** %arrayidx2944 to %struct.tree_decl_common**, !dbg !11889
  %519 = load %struct.tree_decl_common*, %struct.tree_decl_common** %518, align 8, !dbg !11889
  %size2946 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %519, i64 0, i32 1, !dbg !11889
  %520 = load %union.tree_node*, %union.tree_node** %size2946, align 8, !dbg !11889
  %call2947 = tail call i32 @integer_onep(%union.tree_node* %520) #6, !dbg !11890
  %tobool2948 = icmp eq i32 %call2947, 0, !dbg !11890
  br i1 %tobool2948, label %if.end2995, label %land.lhs.true2949, !dbg !11891

land.lhs.true2949:                                ; preds = %land.lhs.true2941
  %521 = bitcast %union.tree_node** %arrayidx2934 to %struct.tree_exp**, !dbg !11892
  %522 = load %struct.tree_exp*, %struct.tree_exp** %521, align 8, !dbg !11892
  %arrayidx2955 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %522, i64 0, i32 3, i64 1, !dbg !11892
  %523 = bitcast %union.tree_node** %arrayidx2955 to %struct.tree_decl_common**, !dbg !11892
  %524 = load %struct.tree_decl_common*, %struct.tree_decl_common** %523, align 8, !dbg !11892
  %size2957 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %524, i64 0, i32 1, !dbg !11892
  %525 = load %union.tree_node*, %union.tree_node** %size2957, align 8, !dbg !11892
  %call2958 = tail call i32 @integer_onep(%union.tree_node* %525) #6, !dbg !11893
  %tobool2959 = icmp eq i32 %call2958, 0, !dbg !11893
  br i1 %tobool2959, label %if.end2995, label %if.then2960, !dbg !11894

if.then2960:                                      ; preds = %land.lhs.true2949
  %call2961 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !11895
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2961, metadata !10654, metadata !DIExpression()), !dbg !11896
  %bf.load2964 = load i64, i64* %514, align 8, !dbg !11897
  %bf.cast296670 = and i64 %bf.load2964, 65535, !dbg !11898
  %cmp2967 = icmp eq i64 %bf.cast296670, 87, !dbg !11898
  call void @llvm.dbg.value(metadata i1 %cmp2967, metadata !10657, metadata !DIExpression()), !dbg !11896
  %526 = load %union.tree_node*, %union.tree_node** %arrayidx2934, align 8, !dbg !11899
  %call2961. = select i1 %cmp2967, %struct.rtx_def* %call2961, %struct.rtx_def* null, !dbg !11900
  %cond2981 = select i1 %cmp2967, %struct.rtx_def* null, %struct.rtx_def* %call2961, !dbg !11901
  tail call void @do_jump(%union.tree_node* %526, %struct.rtx_def* %call2961., %struct.rtx_def* %cond2981, i32 -1) #6, !dbg !11902
  %type2983 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11903
  %527 = load %union.tree_node*, %union.tree_node** %type2983, align 8, !dbg !11903
  %conv2984 = zext i1 %cmp2967 to i64, !dbg !11904
  %call2985 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %527, i64 %conv2984) #6, !dbg !11905
  %bf.load2987 = load i64, i64* %3, align 8, !dbg !11906
  %bf.lshr2988 = lshr i64 %bf.load2987, 26, !dbg !11906
  %528 = trunc i64 %bf.lshr2988 to i8, !dbg !11906
  %bf.cast2990 = and i8 %528, 1, !dbg !11906
  tail call void @expand_assignment(%union.tree_node* %treeop0.1, %union.tree_node* %call2985, i8 zeroext %bf.cast2990) #8, !dbg !11907
  tail call void @do_pending_stack_adjust() #6, !dbg !11908
  %call2992 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2961) #6, !dbg !11909
  %529 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11910
  br label %cleanup3078

if.end2995:                                       ; preds = %land.lhs.true2949, %land.lhs.true2941, %land.lhs.true2931, %land.lhs.true2925, %lor.lhs.false2918, %cond.end2903
  %bf.load2997 = load i64, i64* %3, align 8, !dbg !11911
  %bf.lshr2998 = lshr i64 %bf.load2997, 26, !dbg !11911
  %530 = trunc i64 %bf.lshr2998 to i8, !dbg !11911
  %bf.cast3000 = and i8 %530, 1, !dbg !11911
  tail call void @expand_assignment(%union.tree_node* %treeop0.1, %union.tree_node* %treeop1.2, i8 zeroext %bf.cast3000) #8, !dbg !11912
  %531 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11913
  br label %cleanup3078, !dbg !11914

sw.bb3004:                                        ; preds = %if.end173
  %call3005 = tail call fastcc %struct.rtx_def* @expand_expr_addr_expr(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier) #8, !dbg !11915
  br label %cleanup3078, !dbg !11916

sw.bb3006:                                        ; preds = %if.end173
  %call3007 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %treeop0.1) #8, !dbg !11917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3007, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call3007, %struct.rtx_def** %op0, align 8, !dbg !11918
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3007, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call3008 = tail call fastcc %struct.rtx_def* @read_complex_part(%struct.rtx_def* %call3007, i8 zeroext 0) #8, !dbg !11919
  br label %cleanup3078, !dbg !11920

sw.bb3009:                                        ; preds = %if.end173
  %call3010 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %treeop0.1) #8, !dbg !11921
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3010, metadata !10465, metadata !DIExpression()), !dbg !10672
  store %struct.rtx_def* %call3010, %struct.rtx_def** %op0, align 8, !dbg !11922
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3010, metadata !10465, metadata !DIExpression()), !dbg !10672
  %call3011 = tail call fastcc %struct.rtx_def* @read_complex_part(%struct.rtx_def* %call3010, i8 zeroext 1) #8, !dbg !11923
  br label %cleanup3078, !dbg !11924

sw.bb3012:                                        ; preds = %if.end173, %if.end173, %if.end173, %if.end173, %if.end173
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9563, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11925
  br label %sw.bb3013, !dbg !11925

sw.bb3013:                                        ; preds = %if.end173, %if.end173, %if.end173, %if.end173, %sw.bb3012
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9570, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11926
  br label %sw.bb3014, !dbg !11926

sw.bb3014:                                        ; preds = %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %if.end173, %sw.bb3013
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9588, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11927
  br label %sw.bb3015, !dbg !11927

sw.bb3015:                                        ; preds = %if.end173, %sw.bb3014
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9593, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11928
  br label %sw.bb3016, !dbg !11928

sw.bb3016:                                        ; preds = %if.end173, %sw.bb3015
  %call3017 = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %treeop0.1, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier, %struct.rtx_def** %alt_rtl) #8, !dbg !11929
  br label %cleanup3078, !dbg !11930

sw.bb3018:                                        ; preds = %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop0.1, metadata !10658, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.2, metadata !10660, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop2.3, metadata !10661, metadata !DIExpression()), !dbg !11931
  %call3020 = tail call %struct.optab_d* @optab_for_tree_code(i32 %bf.cast, %union.tree_node* %9, i32 0) #6, !dbg !11932
  call void @llvm.dbg.value(metadata %struct.optab_d* %call3020, metadata !10473, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !10465, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !10466, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  call fastcc void @expand_operands(%union.tree_node* %treeop0.1, %union.tree_node* %treeop1.2, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !11933
  %call3021 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %treeop2.3) #8, !dbg !11934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3021, metadata !10662, metadata !DIExpression()), !dbg !11931
  %532 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11935
  call void @llvm.dbg.value(metadata %struct.rtx_def* %532, metadata !10465, metadata !DIExpression()), !dbg !10672
  %533 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !11936
  call void @llvm.dbg.value(metadata %struct.rtx_def* %533, metadata !10466, metadata !DIExpression()), !dbg !10672
  %534 = load i32, i32* %unsignedp, align 4, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %534, metadata !10470, metadata !DIExpression()), !dbg !10672
  %call3022 = call %struct.rtx_def* @expand_ternary_op(i32 %cond26, %struct.optab_d* %call3020, %struct.rtx_def* %532, %struct.rtx_def* %533, %struct.rtx_def* %call3021, %struct.rtx_def* %target.addr.1, i32 %534) #6, !dbg !11938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3022, metadata !10467, metadata !DIExpression()), !dbg !10672
  %tobool3023 = icmp eq %struct.rtx_def* %call3022, null, !dbg !11939
  br i1 %tobool3023, label %cond.true3024, label %cleanup3078, !dbg !11939

cond.true3024:                                    ; preds = %sw.bb3018
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9613, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !11939
  br label %cleanup3078, !dbg !11939

sw.bb3032:                                        ; preds = %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop0.1, metadata !10663, metadata !DIExpression()), !dbg !11940
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.2, metadata !10665, metadata !DIExpression()), !dbg !11940
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop2.3, metadata !10666, metadata !DIExpression()), !dbg !11940
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !10465, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !10466, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  call fastcc void @expand_operands(%union.tree_node* %treeop0.1, %union.tree_node* %treeop1.2, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !11941
  %call3037 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %treeop2.3) #8, !dbg !11942
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3037, metadata !10667, metadata !DIExpression()), !dbg !11940
  %535 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !11943
  call void @llvm.dbg.value(metadata %struct.rtx_def* %535, metadata !10465, metadata !DIExpression()), !dbg !10672
  %536 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !11944
  call void @llvm.dbg.value(metadata %struct.rtx_def* %536, metadata !10466, metadata !DIExpression()), !dbg !10672
  %537 = load i32, i32* %unsignedp, align 4, !dbg !11945
  call void @llvm.dbg.value(metadata i32 %537, metadata !10470, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.separate_ops* %ops, metadata !10480, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  %call3038 = call %struct.rtx_def* @expand_widen_pattern_expr(%struct.separate_ops* nonnull %ops, %struct.rtx_def* %535, %struct.rtx_def* %536, %struct.rtx_def* %call3037, %struct.rtx_def* %target.addr.1, i32 %537) #6, !dbg !11946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3038, metadata !10461, metadata !DIExpression()), !dbg !10672
  br label %cleanup3078

sw.bb3043:                                        ; preds = %if.end173
  %operands3045 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11947
  %538 = bitcast %union.tree_node** %operands3045 to %struct.tree_exp**, !dbg !11947
  %539 = load %struct.tree_exp*, %struct.tree_exp** %538, align 8, !dbg !11947
  %arrayidx3049 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %539, i64 0, i32 3, i64 0, !dbg !11947
  %540 = load %union.tree_node*, %union.tree_node** %arrayidx3049, align 8, !dbg !11947
  call void @llvm.dbg.value(metadata %union.tree_node* %540, metadata !10668, metadata !DIExpression()), !dbg !11948
  %541 = getelementptr inbounds %union.tree_node, %union.tree_node* %540, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11949
  %bf.load3051 = load i64, i64* %541, align 8, !dbg !11949
  %bf.cast3053 = and i64 %bf.load3051, 65535, !dbg !11949
  %arrayidx3056 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast3053, i64 11, !dbg !11949
  %542 = load i8, i8* %arrayidx3056, align 1, !dbg !11949
  %tobool3058 = icmp eq i8 %542, 0, !dbg !11949
  br i1 %tobool3058, label %if.then3064, label %land.lhs.true3059, !dbg !11949

land.lhs.true3059:                                ; preds = %sw.bb3043
  %rtl3061 = getelementptr inbounds %union.tree_node, %union.tree_node* %540, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11949
  %543 = load %struct.rtx_def*, %struct.rtx_def** %rtl3061, align 8, !dbg !11949
  %cmp3062 = icmp eq %struct.rtx_def* %543, null, !dbg !11949
  br i1 %cmp3062, label %if.then3064, label %if.end3073, !dbg !11951

if.then3064:                                      ; preds = %land.lhs.true3059, %sw.bb3043
  %hard_register = getelementptr inbounds %union.tree_node, %union.tree_node* %540, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !11952
  %544 = bitcast i24* %hard_register to i32*, !dbg !11952
  %bf.load3066 = load i32, i32* %544, align 8, !dbg !11952
  %bf.clear3068 = and i32 %bf.load3066, 2, !dbg !11952
  %tobool3069 = icmp eq i32 %bf.clear3068, 0, !dbg !11952
  br i1 %tobool3069, label %if.else3071, label %if.then3070, !dbg !11955

if.then3070:                                      ; preds = %if.then3064
  tail call void @rest_of_decl_compilation(%union.tree_node* %540, i32 0, i32 0) #6, !dbg !11956
  br label %if.end3073, !dbg !11956

if.else3071:                                      ; preds = %if.then3064
  tail call void @expand_decl(%union.tree_node* %540) #6, !dbg !11957
  br label %if.end3073

if.end3073:                                       ; preds = %land.lhs.true3059, %if.then3070, %if.else3071
  %call3074 = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %540, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier, %struct.rtx_def** %alt_rtl) #8, !dbg !11958
  br label %cleanup3078

sw.default3076:                                   ; preds = %if.end173
  call void @llvm.dbg.value(metadata %struct.separate_ops* %ops, metadata !10480, metadata !DIExpression(DW_OP_deref)), !dbg !10672
  %call3077 = call %struct.rtx_def* @expand_expr_real_2(%struct.separate_ops* nonnull %ops, %struct.rtx_def* %target.addr.1, i32 %tmode, i32 %modifier) #8, !dbg !11959
  br label %cleanup3078, !dbg !11960

cleanup3078.loopexit:                             ; preds = %cond.end781
  %.lcssa = phi %struct.rtx_def* [ %132, %cond.end781 ], !dbg !11011
  br label %cleanup3078, !dbg !11961

cleanup3078:                                      ; preds = %cleanup3078.loopexit, %land.lhs.true417, %if.end628, %cond.end667, %sw.bb680, %sw.bb3018, %sw.bb638, %cond.true3024, %if.then2960, %if.end2995, %if.end2796, %cond.end863, %cleanup798, %if.end843, %if.end747, %if.then631, %if.then499, %if.end517, %if.end412, %if.then445, %if.else449, %if.then391, %land.lhs.true396, %if.then405, %cleanup, %cleanup1249, %cleanup1425, %cleanup2326, %sw.default3076, %if.end3073, %sw.bb3032, %sw.bb3016, %sw.bb3009, %sw.bb3006, %sw.bb3004, %sw.bb2897, %if.end2881, %for.end2818, %if.end2753, %cleanup.cont2329, %sw.bb2254, %cleanup2244, %sw.bb877, %if.end787, %if.then672, %cond.end573, %cond.end549, %sw.bb525, %sw.bb458, %if.then266, %if.then198, %if.end194, %if.then166, %if.then160, %if.then143, %if.end131, %if.then99
  %retval.23 = phi %struct.rtx_def* [ %31, %if.end131 ], [ %call144, %if.then143 ], [ %37, %if.then160 ], [ %40, %if.then166 ], [ %call3077, %sw.default3076 ], [ %call3074, %if.end3073 ], [ %call3038, %sw.bb3032 ], [ %call3017, %sw.bb3016 ], [ %call3011, %sw.bb3009 ], [ %call3008, %sw.bb3006 ], [ %call3005, %sw.bb3004 ], [ %call2898, %sw.bb2897 ], [ %temp.3, %if.end2881 ], [ %506, %for.end2818 ], [ %487, %if.end2753 ], [ %retval.21, %cleanup2326 ], [ %call2330, %cleanup.cont2329 ], [ %call2258, %sw.bb2254 ], [ %retval.20, %cleanup2244 ], [ %retval.18, %cleanup1425 ], [ %retval.17, %cleanup1249 ], [ %call888, %sw.bb877 ], [ %call788, %if.end787 ], [ %call678, %if.then672 ], [ %call575, %cond.end573 ], [ %call551, %cond.end549 ], [ %call527, %sw.bb525 ], [ %call462, %sw.bb458 ], [ %call269, %if.then266 ], [ %retval.0, %cleanup ], [ %call199, %if.then198 ], [ %call195, %if.end194 ], [ %24, %if.then99 ], [ %temp.2, %if.then405 ], [ %temp.2, %land.lhs.true396 ], [ %temp.2, %if.then391 ], [ %call439, %if.else449 ], [ %call439, %if.then445 ], [ %decl_rtl.2, %land.lhs.true417 ], [ %decl_rtl.2, %if.end412 ], [ %call500, %if.then499 ], [ %call523, %if.end517 ], [ %target.addr.1, %if.then631 ], [ %target.addr.1, %if.end628 ], [ %call639, %sw.bb638 ], [ %call639, %cond.end667 ], [ %call681, %sw.bb680 ], [ %ret.0, %if.end747 ], [ %retval.2, %cleanup798 ], [ %call865, %cond.end863 ], [ %call844, %if.end843 ], [ %cond2802, %if.end2796 ], [ %529, %if.then2960 ], [ %531, %if.end2995 ], [ %call3022, %sw.bb3018 ], [ null, %cond.true3024 ], [ %.lcssa, %cleanup3078.loopexit ], !dbg !10672
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #7, !dbg !11961
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #7, !dbg !11961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !11961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !11961
  ret %struct.rtx_def* %retval.23, !dbg !11961
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_expr_real_2(%struct.separate_ops* %ops, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) local_unnamed_addr #4 !dbg !11962 {
entry:
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.separate_ops* %ops, metadata !11968, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !11970, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !11971, metadata !DIExpression()), !dbg !12087
  %0 = bitcast %struct.rtx_def** %op0 to i8*, !dbg !12088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !12088
  %1 = bitcast %struct.rtx_def** %op1 to i8*, !dbg !12088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !12088
  %code1 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 0, !dbg !12089
  %2 = load i32, i32* %code1, align 8, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %2, metadata !11979, metadata !DIExpression()), !dbg !12087
  %location = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 5, !dbg !12090
  %3 = load i32, i32* %location, align 8, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %3, metadata !11991, metadata !DIExpression()), !dbg !12087
  %type2 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 1, !dbg !12091
  %4 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !12091
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11976, metadata !DIExpression()), !dbg !12087
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12092
  %bf.load = load i64, i64* %5, align 8, !dbg !12092
  %bf.cast34 = and i64 %bf.load, 65535, !dbg !12092
  %cmp = icmp eq i64 %bf.cast34, 14, !dbg !12092
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12092

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12092
  %bf.load8.pre = load i64, i64* %5, align 8, !dbg !12093
  br label %cond.end, !dbg !12092

cond.false:                                       ; preds = %entry
  %type3 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12092
  %mode4 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i64 0, i32 6, !dbg !12092
  %bf.load5 = load i32, i32* %mode4, align 4, !dbg !12092
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !12092
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !12092
  br label %cond.end, !dbg !12092

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load8 = phi i64 [ %bf.load8.pre, %cond.true ], [ %bf.load, %cond.false ], !dbg !12093
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear6, %cond.false ], !dbg !12092
  call void @llvm.dbg.value(metadata i32 %cond, metadata !11978, metadata !DIExpression()), !dbg !12087
  %bf.lshr9 = lshr i64 %bf.load8, 21, !dbg !12093
  %6 = trunc i64 %bf.lshr9 to i32, !dbg !12093
  %bf.cast11 = and i32 %6, 1, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %bf.cast11, metadata !11977, metadata !DIExpression()), !dbg !12087
  %op012 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 2, !dbg !12094
  %7 = load %union.tree_node*, %union.tree_node** %op012, align 8, !dbg !12094
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11992, metadata !DIExpression()), !dbg !12087
  %op113 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 3, !dbg !12095
  %8 = load %union.tree_node*, %union.tree_node** %op113, align 8, !dbg !12095
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !11993, metadata !DIExpression()), !dbg !12087
  %call14 = tail call fastcc i32 @get_gimple_rhs_class(i32 %2) #8, !dbg !12096
  %cmp15 = icmp eq i32 %call14, 2, !dbg !12096
  br i1 %cmp15, label %cond.end20, label %lor.lhs.false, !dbg !12096

lor.lhs.false:                                    ; preds = %cond.end
  %call16 = tail call fastcc i32 @get_gimple_rhs_class(i32 %2) #8, !dbg !12096
  %cmp17 = icmp eq i32 %call16, 1, !dbg !12096
  br i1 %cmp17, label %cond.end20, label %cond.true18, !dbg !12096

cond.true18:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7239, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12096
  br label %cond.end20, !dbg !12096

cond.end20:                                       ; preds = %cond.end, %lor.lhs.false, %cond.true18
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !12097
  %cmp22 = icmp eq %struct.rtx_def* %9, %target, !dbg !12098
  br i1 %cmp22, label %lor.end, label %lor.rhs, !dbg !12099

lor.rhs:                                          ; preds = %cond.end20
  switch i32 %2, label %lor.end [
    i32 116, label %land.rhs
    i32 113, label %land.rhs
    i32 56, label %land.rhs
    i32 118, label %land.rhs
  ], !dbg !12100

land.rhs:                                         ; preds = %lor.rhs, %lor.rhs, %lor.rhs, %lor.rhs
  %bf.load31 = load i64, i64* %5, align 8, !dbg !12101
  %bf.cast3335 = and i64 %bf.load31, 65535, !dbg !12102
  %cmp34 = icmp eq i64 %bf.cast3335, 19, !dbg !12102
  br label %lor.end

lor.end:                                          ; preds = %land.rhs, %lor.rhs, %cond.end20
  %10 = phi i1 [ true, %cond.end20 ], [ %cmp34, %land.rhs ], [ false, %lor.rhs ]
  call void @llvm.dbg.value(metadata i1 %10, metadata !11983, metadata !DIExpression()), !dbg !12087
  br i1 %10, label %cond.true35, label %cond.end37, !dbg !12103

cond.true35:                                      ; preds = %lor.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7247, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12103
  br label %cond.end37, !dbg !12103

cond.end37:                                       ; preds = %lor.end, %cond.true35
  %bf.load40 = load i64, i64* %5, align 8, !dbg !12104
  %bf.cast4236 = and i64 %bf.load40, 65535, !dbg !12105
  %cmp43 = icmp eq i64 %bf.cast4236, 8, !dbg !12105
  br i1 %cmp43, label %land.rhs44, label %land.end50, !dbg !12106

land.rhs44:                                       ; preds = %cond.end37
  %idxprom = zext i32 %cond to i64, !dbg !12107
  %arrayidx = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom, !dbg !12107
  %11 = load i16, i16* %arrayidx, align 2, !dbg !12107
  %conv = zext i16 %11 to i32, !dbg !12107
  %type45 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12108
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type45, i64 0, i32 6, !dbg !12108
  %bf.load46 = load i32, i32* %precision, align 4, !dbg !12108
  %bf.clear47 = and i32 %bf.load46, 1023, !dbg !12108
  %cmp48 = icmp ult i32 %bf.clear47, %conv, !dbg !12109
  br label %land.end50

land.end50:                                       ; preds = %land.rhs44, %cond.end37
  %12 = phi i1 [ false, %cond.end37 ], [ %cmp48, %land.rhs44 ], !dbg !12087
  call void @llvm.dbg.value(metadata i1 %12, metadata !11986, metadata !DIExpression()), !dbg !12087
  %cmp54 = icmp eq i32 %modifier, 1, !dbg !12110
  %or.cond = and i1 %12, %cmp54, !dbg !12112
  %target.addr.0 = select i1 %or.cond, %struct.rtx_def* null, %struct.rtx_def* %target, !dbg !12112
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !11969, metadata !DIExpression()), !dbg !12087
  %call56 = tail call fastcc %struct.rtx_def* @get_subtarget(%struct.rtx_def* %target.addr.0) #8, !dbg !12113
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !11981, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !11982, metadata !DIExpression()), !dbg !12087
  switch i32 %2, label %sw.default [
    i32 117, label %sw.bb
    i32 112, label %sw.bb
    i32 116, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb358
    i32 66, label %sw.bb438
    i32 63, label %sw.bb453
    i32 64, label %sw.bb898
    i32 65, label %sw.bb1150
    i32 67, label %sw.bb1640
    i32 69, label %sw.bb1640
    i32 68, label %sw.bb1640
    i32 70, label %sw.bb1640
    i32 76, label %sw.bb1640
    i32 75, label %binop
    i32 71, label %sw.bb1696
    i32 73, label %sw.bb1696
    i32 72, label %sw.bb1696
    i32 74, label %sw.bb1696
    i32 115, label %sw.bb1702
    i32 77, label %sw.bb1756
    i32 78, label %sw.bb1766
    i32 79, label %sw.bb1813
    i32 82, label %sw.bb1833
    i32 81, label %sw.bb1864
    i32 80, label %sw.bb1864
    i32 90, label %sw.bb1982
    i32 93, label %sw.bb1994
    i32 89, label %binop
    i32 94, label %sw.bb1996
    i32 87, label %binop
    i32 95, label %sw.bb1998
    i32 88, label %binop
    i32 85, label %sw.bb2000
    i32 86, label %sw.bb2000
    i32 83, label %sw.bb2162
    i32 84, label %sw.bb2162
    i32 97, label %sw.bb2233
    i32 98, label %sw.bb2233
    i32 99, label %sw.bb2233
    i32 100, label %sw.bb2233
    i32 101, label %sw.bb2233
    i32 102, label %sw.bb2233
    i32 103, label %sw.bb2233
    i32 104, label %sw.bb2233
    i32 105, label %sw.bb2233
    i32 106, label %sw.bb2233
    i32 107, label %sw.bb2233
    i32 108, label %sw.bb2233
    i32 109, label %sw.bb2233
    i32 110, label %sw.bb2233
    i32 96, label %sw.bb2285
    i32 123, label %sw.bb2297
    i32 168, label %sw.bb2320
    i32 164, label %sw.bb2324
    i32 165, label %sw.bb2324
    i32 166, label %sw.bb2324
    i32 181, label %sw.bb2333
    i32 182, label %sw.bb2333
    i32 183, label %sw.bb2341
    i32 184, label %sw.bb2341
    i32 170, label %sw.bb2349
    i32 171, label %sw.bb2349
    i32 174, label %sw.bb2351
    i32 175, label %sw.bb2351
    i32 176, label %sw.bb2360
    i32 177, label %sw.bb2360
    i32 172, label %sw.bb2378
    i32 173, label %sw.bb2378
    i32 178, label %sw.bb2389
    i32 179, label %sw.bb2389
    i32 180, label %sw.bb2389
  ], !dbg !12114

sw.bb:                                            ; preds = %land.end50, %land.end50, %land.end50, %land.end50
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12115
  %cmp57 = icmp eq %union.tree_node* %7, %13, !dbg !12117
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !12118

if.then59:                                        ; preds = %sw.bb
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !12119
  br label %cleanup2431, !dbg !12120

if.end60:                                         ; preds = %sw.bb
  %bf.load62 = load i64, i64* %5, align 8, !dbg !12121
  %bf.cast6497 = and i64 %bf.load62, 65535, !dbg !12122
  %cmp65 = icmp eq i64 %bf.cast6497, 17, !dbg !12122
  %type68 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12123
  %15 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !12123
  br i1 %cmp65, label %if.then67, label %if.end215, !dbg !12124

if.then67:                                        ; preds = %if.end60
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !11994, metadata !DIExpression()), !dbg !12125
  %cmp69 = icmp eq i32 %cond, 1, !dbg !12126
  br i1 %cmp69, label %land.lhs.true71, label %if.end93, !dbg !12127

land.lhs.true71:                                  ; preds = %if.then67
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12128
  %bf.load73 = load i64, i64* %16, align 8, !dbg !12128
  %bf.cast75105 = and i64 %bf.load73, 65535, !dbg !12128
  %cmp76 = icmp eq i64 %bf.cast75105, 14, !dbg !12128
  br i1 %cmp76, label %cond.true78, label %cond.false80, !dbg !12128

cond.true78:                                      ; preds = %land.lhs.true71
  %call79 = tail call i32 @vector_type_mode(%union.tree_node* %15) #6, !dbg !12128
  br label %cond.end86, !dbg !12128

cond.false80:                                     ; preds = %land.lhs.true71
  %type81 = bitcast %union.tree_node* %15 to %struct.tree_type*, !dbg !12128
  %mode82 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type81, i64 0, i32 6, !dbg !12128
  %bf.load83 = load i32, i32* %mode82, align 4, !dbg !12128
  %bf.lshr84 = lshr i32 %bf.load83, 16, !dbg !12128
  %bf.clear85 = and i32 %bf.lshr84, 255, !dbg !12128
  br label %cond.end86, !dbg !12128

cond.end86:                                       ; preds = %cond.false80, %cond.true78
  %cond87 = phi i32 [ %call79, %cond.true78 ], [ %bf.clear85, %cond.false80 ], !dbg !12128
  %cmp88 = icmp eq i32 %cond87, 1, !dbg !12129
  br i1 %cmp88, label %if.then90, label %if.end93, !dbg !12130

if.then90:                                        ; preds = %cond.end86
  %call91 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %target.addr.0, i32 %tmode, i32 %modifier) #8, !dbg !12131
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call91, metadata !11998, metadata !DIExpression()), !dbg !12132
  %call92 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call91) #6, !dbg !12133
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call92, metadata !11998, metadata !DIExpression()), !dbg !12132
  tail call void @set_mem_attributes(%struct.rtx_def* %call92, %union.tree_node* %4, i32 0) #6, !dbg !12134
  br label %cleanup2431

if.end93:                                         ; preds = %cond.end86, %if.then67
  %cmp94 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12135
  br i1 %cmp94, label %if.then96, label %if.end135, !dbg !12137

if.then96:                                        ; preds = %if.end93
  %bf.load98 = load i64, i64* %5, align 8, !dbg !12138
  %bf.cast100103 = and i64 %bf.load98, 65535, !dbg !12138
  %cmp101 = icmp eq i64 %bf.cast100103, 14, !dbg !12138
  br i1 %cmp101, label %cond.true103, label %cond.false105, !dbg !12138

cond.true103:                                     ; preds = %if.then96
  %call104 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12138
  br label %cond.end111, !dbg !12138

cond.false105:                                    ; preds = %if.then96
  %type106 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12138
  %mode107 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type106, i64 0, i32 6, !dbg !12138
  %bf.load108 = load i32, i32* %mode107, align 4, !dbg !12138
  %bf.lshr109 = lshr i32 %bf.load108, 16, !dbg !12138
  %bf.clear110 = and i32 %bf.lshr109, 255, !dbg !12138
  br label %cond.end111, !dbg !12138

cond.end111:                                      ; preds = %cond.false105, %cond.true103
  %cond112 = phi i32 [ %call104, %cond.true103 ], [ %bf.clear110, %cond.false105 ], !dbg !12138
  %cmp113 = icmp eq i32 %cond112, 1, !dbg !12141
  br i1 %cmp113, label %if.else, label %if.then115, !dbg !12142

if.then115:                                       ; preds = %cond.end111
  %bf.load117 = load i64, i64* %5, align 8, !dbg !12143
  %bf.cast119104 = and i64 %bf.load117, 65535, !dbg !12143
  %cmp120 = icmp eq i64 %bf.cast119104, 14, !dbg !12143
  br i1 %cmp120, label %cond.true122, label %cond.false124, !dbg !12143

cond.true122:                                     ; preds = %if.then115
  %call123 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12143
  br label %cond.end130, !dbg !12143

cond.false124:                                    ; preds = %if.then115
  %type125 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12143
  %mode126 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type125, i64 0, i32 6, !dbg !12143
  %bf.load127 = load i32, i32* %mode126, align 4, !dbg !12143
  %bf.lshr128 = lshr i32 %bf.load127, 16, !dbg !12143
  %bf.clear129 = and i32 %bf.lshr128, 255, !dbg !12143
  br label %cond.end130, !dbg !12143

cond.end130:                                      ; preds = %cond.false124, %cond.true122
  %cond131 = phi i32 [ %call123, %cond.true122 ], [ %bf.clear129, %cond.false124 ], !dbg !12143
  %call132 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond131) #6, !dbg !12144
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call132, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end135, !dbg !12145

if.else:                                          ; preds = %cond.end111
  %call133 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %4, i32 0, i32 1, i32 1) #6, !dbg !12146
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call133, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end135

if.end135:                                        ; preds = %cond.end130, %if.else, %if.end93
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.0, %if.end93 ], [ %call132, %cond.end130 ], [ %call133, %if.else ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !11969, metadata !DIExpression()), !dbg !12087
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.2, i64 0, i32 0, !dbg !12147
  %bf.load136 = load i32, i32* %17, align 8, !dbg !12147
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !12147
  %cmp138 = icmp eq i32 %bf.clear137, 43, !dbg !12147
  br i1 %cmp138, label %if.then140, label %if.else161, !dbg !12149

if.then140:                                       ; preds = %if.end135
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12150
  %bf.load142 = load i64, i64* %18, align 8, !dbg !12150
  %bf.cast144102 = and i64 %bf.load142, 65535, !dbg !12150
  %cmp145 = icmp eq i64 %bf.cast144102, 14, !dbg !12150
  br i1 %cmp145, label %cond.true147, label %cond.false149, !dbg !12150

cond.true147:                                     ; preds = %if.then140
  %call148 = tail call i32 @vector_type_mode(%union.tree_node* %15) #6, !dbg !12150
  br label %cond.end155, !dbg !12150

cond.false149:                                    ; preds = %if.then140
  %type150 = bitcast %union.tree_node* %15 to %struct.tree_type*, !dbg !12150
  %mode151 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type150, i64 0, i32 6, !dbg !12150
  %bf.load152 = load i32, i32* %mode151, align 4, !dbg !12150
  %bf.lshr153 = lshr i32 %bf.load152, 16, !dbg !12150
  %bf.clear154 = and i32 %bf.lshr153, 255, !dbg !12150
  br label %cond.end155, !dbg !12150

cond.end155:                                      ; preds = %cond.false149, %cond.true147
  %cond156 = phi i32 [ %call148, %cond.true147 ], [ %bf.clear154, %cond.false149 ], !dbg !12150
  %call157 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target.addr.2, i32 %cond156, i64 0, i32 1, i32 1) #6, !dbg !12150
  %conv159 = zext i1 %cmp54 to i32, !dbg !12151
  %call160 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %7, %struct.rtx_def* %call157, i32 %conv159, i8 zeroext 0) #8, !dbg !12152
  br label %cleanup2431, !dbg !12152

if.else161:                                       ; preds = %if.end135
  %cmp164 = icmp eq i32 %bf.clear137, 37, !dbg !12153
  br i1 %cmp164, label %cond.end168, label %cond.true166, !dbg !12153

cond.true166:                                     ; preds = %if.else161
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7303, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12153
  br label %cond.end168, !dbg !12153

cond.end168:                                      ; preds = %if.else161, %cond.true166
  %19 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !12155
  %call172 = tail call i64 @int_size_in_bytes(%union.tree_node* %19) #6, !dbg !12155
  %idxprom173 = zext i32 %cond to i64, !dbg !12155
  %arrayidx174 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom173, !dbg !12155
  %20 = load i8, i8* %arrayidx174, align 1, !dbg !12155
  %conv176 = zext i8 %20 to i64, !dbg !12155
  %cmp180 = icmp slt i64 %call172, %conv176, !dbg !12155
  br i1 %cmp180, label %cond.true182, label %cond.false187, !dbg !12155

cond.true182:                                     ; preds = %cond.end168
  %21 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !12155
  %call185 = tail call i64 @int_size_in_bytes(%union.tree_node* %21) #6, !dbg !12155
  br label %cond.end195, !dbg !12155

cond.false187:                                    ; preds = %cond.end168
  br label %cond.end195, !dbg !12155

cond.end195:                                      ; preds = %cond.false187, %cond.true182
  %cond196.in = phi i64 [ %call185, %cond.true182 ], [ %conv176, %cond.false187 ]
  %cond196 = shl nsw i64 %cond196.in, 3, !dbg !12155
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12156
  %bf.load198 = load i64, i64* %22, align 8, !dbg !12156
  %bf.cast200101 = and i64 %bf.load198, 65535, !dbg !12156
  %cmp201 = icmp eq i64 %bf.cast200101, 14, !dbg !12156
  br i1 %cmp201, label %cond.true203, label %cond.false205, !dbg !12156

cond.true203:                                     ; preds = %cond.end195
  %call204 = tail call i32 @vector_type_mode(%union.tree_node* %15) #6, !dbg !12156
  br label %cond.end211, !dbg !12156

cond.false205:                                    ; preds = %cond.end195
  %type206 = bitcast %union.tree_node* %15 to %struct.tree_type*, !dbg !12156
  %mode207 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type206, i64 0, i32 6, !dbg !12156
  %bf.load208 = load i32, i32* %mode207, align 4, !dbg !12156
  %bf.lshr209 = lshr i32 %bf.load208, 16, !dbg !12156
  %bf.clear210 = and i32 %bf.lshr209, 255, !dbg !12156
  br label %cond.end211, !dbg !12156

cond.end211:                                      ; preds = %cond.false205, %cond.true203
  %cond212 = phi i32 [ %call204, %cond.true203 ], [ %bf.clear210, %cond.false205 ], !dbg !12156
  %call213 = tail call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %target.addr.2, i64 %cond196, i64 0, i32 %cond212, %union.tree_node* %7, %union.tree_node* %4, i32 0, i8 zeroext 0) #8, !dbg !12157
  br label %cleanup2431

if.end215:                                        ; preds = %if.end60
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12158
  %bf.load219 = load i64, i64* %23, align 8, !dbg !12158
  %bf.cast22198 = and i64 %bf.load219, 65535, !dbg !12158
  %cmp222 = icmp eq i64 %bf.cast22198, 14, !dbg !12158
  br i1 %cmp222, label %cond.true224, label %cond.false228, !dbg !12158

cond.true224:                                     ; preds = %if.end215
  %call227 = tail call i32 @vector_type_mode(%union.tree_node* %15) #6, !dbg !12158
  br label %cond.end236, !dbg !12158

cond.false228:                                    ; preds = %if.end215
  %type231 = bitcast %union.tree_node* %15 to %struct.tree_type*, !dbg !12158
  %mode232 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type231, i64 0, i32 6, !dbg !12158
  %bf.load233 = load i32, i32* %mode232, align 4, !dbg !12158
  %bf.lshr234 = lshr i32 %bf.load233, 16, !dbg !12158
  %bf.clear235 = and i32 %bf.lshr234, 255, !dbg !12158
  br label %cond.end236, !dbg !12158

cond.end236:                                      ; preds = %cond.false228, %cond.true224
  %cond237 = phi i32 [ %call227, %cond.true224 ], [ %bf.clear235, %cond.false228 ], !dbg !12158
  %cmp238 = icmp eq i32 %cond, %cond237, !dbg !12160
  br i1 %cmp238, label %if.then240, label %if.end267, !dbg !12161

if.then240:                                       ; preds = %cond.end236
  %call241 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %target.addr.0, i32 0, i32 %modifier) #8, !dbg !12162
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call241, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call241, %struct.rtx_def** %op0, align 8, !dbg !12164
  %24 = bitcast %union.tree_node** %type68 to i64**, !dbg !12165
  %25 = load i64*, i64** %24, align 8, !dbg !12165
  %bf.load245 = load i64, i64* %25, align 8, !dbg !12165
  %bf.lshr246 = lshr i64 %bf.load245, 21, !dbg !12165
  %26 = trunc i64 %bf.lshr246 to i32, !dbg !12165
  %bf.cast248 = and i32 %26, 1, !dbg !12165
  %cmp249 = icmp eq i32 %bf.cast248, %bf.cast11, !dbg !12167
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call241, i64 0, i32 0, !dbg !12168
  br i1 %cmp249, label %if.end259, label %land.lhs.true251, !dbg !12168

land.lhs.true251:                                 ; preds = %if.then240
  %bf.load252 = load i32, i32* %27, align 8, !dbg !12169
  %bf.clear253 = and i32 %bf.load252, 65535, !dbg !12169
  %cmp254 = icmp eq i32 %bf.clear253, 39, !dbg !12170
  br i1 %cmp254, label %if.then256, label %if.end259, !dbg !12171

if.then256:                                       ; preds = %land.lhs.true251
  %bf.clear258 = and i32 %bf.load252, -268435457, !dbg !12172
  store i32 %bf.clear258, i32* %27, align 8, !dbg !12172
  %.pre124 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12173
  br label %if.end259, !dbg !12174

if.end259:                                        ; preds = %if.then240, %if.then256, %land.lhs.true251
  %28 = phi %struct.rtx_def* [ %call241, %if.then240 ], [ %.pre124, %if.then256 ], [ %call241, %land.lhs.true251 ], !dbg !12173
  call void @llvm.dbg.value(metadata %struct.rtx_def* %28, metadata !11972, metadata !DIExpression()), !dbg !12087
  br i1 %12, label %cond.true262, label %cleanup2431, !dbg !12173

cond.true262:                                     ; preds = %if.end259
  %call263 = tail call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %28, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12173
  br label %cleanup2431, !dbg !12173

if.end267:                                        ; preds = %cond.end236
  %cmp268 = icmp eq i32 %modifier, 2, !dbg !12175
  %.modifier = select i1 %cmp268, i32 0, i32 %modifier, !dbg !12176
  %call274 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* null, i32 %cond, i32 %.modifier) #8, !dbg !12177
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call274, %struct.rtx_def** %op0, align 8, !dbg !12178
  %.cast99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call274, i64 0, i32 0, !dbg !12179
  %bf.load275 = load i32, i32* %.cast99, align 8, !dbg !12179
  %bf.lshr276 = lshr i32 %bf.load275, 16, !dbg !12179
  %bf.clear277 = and i32 %bf.lshr276, 255, !dbg !12179
  %cmp278 = icmp eq i32 %bf.clear277, %cond, !dbg !12180
  br i1 %cmp278, label %if.end350, label %if.else281, !dbg !12181

if.else281:                                       ; preds = %if.end267
  %bf.clear283 = and i32 %bf.load275, 65535, !dbg !12182
  %idxprom284 = zext i32 %bf.clear283 to i64, !dbg !12182
  %arrayidx285 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom284, !dbg !12182
  %29 = load i32, i32* %arrayidx285, align 4, !dbg !12182
  %cmp286 = icmp eq i32 %29, 9, !dbg !12182
  br i1 %cmp286, label %if.then288, label %if.else320, !dbg !12183

if.then288:                                       ; preds = %if.else281
  %30 = load %union.tree_node*, %union.tree_node** %type68, align 8, !dbg !12184
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !12001, metadata !DIExpression()), !dbg !12185
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12186
  %bf.load292 = load i64, i64* %31, align 8, !dbg !12186
  %bf.cast294100 = and i64 %bf.load292, 65535, !dbg !12186
  %cmp295 = icmp eq i64 %bf.cast294100, 14, !dbg !12186
  br i1 %cmp295, label %cond.true297, label %cond.false299, !dbg !12186

cond.true297:                                     ; preds = %if.then288
  %call298 = tail call i32 @vector_type_mode(%union.tree_node* %30) #6, !dbg !12186
  br label %cond.end305, !dbg !12186

cond.false299:                                    ; preds = %if.then288
  %type300 = bitcast %union.tree_node* %30 to %struct.tree_type*, !dbg !12186
  %mode301 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type300, i64 0, i32 6, !dbg !12186
  %bf.load302 = load i32, i32* %mode301, align 4, !dbg !12186
  %bf.lshr303 = lshr i32 %bf.load302, 16, !dbg !12186
  %bf.clear304 = and i32 %bf.lshr303, 255, !dbg !12186
  br label %cond.end305, !dbg !12186

cond.end305:                                      ; preds = %cond.false299, %cond.true297
  %cond306 = phi i32 [ %call298, %cond.true297 ], [ %bf.clear304, %cond.false299 ], !dbg !12186
  call void @llvm.dbg.value(metadata i32 %cond306, metadata !12005, metadata !DIExpression()), !dbg !12185
  %cmp307 = icmp eq i32 %modifier, 4, !dbg !12187
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !11972, metadata !DIExpression()), !dbg !12087
  br i1 %cmp307, label %if.then309, label %if.else312, !dbg !12189

if.then309:                                       ; preds = %cond.end305
  %call310 = tail call i32 @subreg_lowpart_offset(i32 %cond, i32 %cond306) #6, !dbg !12190
  %call311 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %cond, %struct.rtx_def* %call274, i32 %cond306, i32 %call310) #6, !dbg !12191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call311, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call311, %struct.rtx_def** %op0, align 8, !dbg !12192
  br label %if.end350, !dbg !12193

if.else312:                                       ; preds = %cond.end305
  %bf.load314 = load i64, i64* %31, align 8, !dbg !12194
  %bf.lshr315 = lshr i64 %bf.load314, 21, !dbg !12194
  %32 = trunc i64 %bf.lshr315 to i32, !dbg !12194
  %bf.cast317 = and i32 %32, 1, !dbg !12194
  %call318 = tail call %struct.rtx_def* @convert_modes(i32 %cond, i32 %cond306, %struct.rtx_def* %call274, i32 %bf.cast317) #8, !dbg !12195
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call318, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call318, %struct.rtx_def** %op0, align 8, !dbg !12196
  br label %if.end350

if.else320:                                       ; preds = %if.else281
  %cmp321 = icmp eq i32 %modifier, 4, !dbg !12197
  br i1 %cmp321, label %if.then323, label %if.else327, !dbg !12199

if.then323:                                       ; preds = %if.else320
  %33 = or i32 %bf.cast11, 98, !dbg !12200
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call326 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %33, i32 %cond, %struct.rtx_def* %call274) #6, !dbg !12200
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call326, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call326, %struct.rtx_def** %op0, align 8, !dbg !12201
  br label %if.end350, !dbg !12202

if.else327:                                       ; preds = %if.else320
  %cmp328 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !11972, metadata !DIExpression()), !dbg !12087
  %34 = bitcast %union.tree_node** %type68 to i64**, !dbg !12205
  %35 = load i64*, i64** %34, align 8, !dbg !12205
  %bf.load334 = load i64, i64* %35, align 8, !dbg !12205
  %bf.lshr335 = lshr i64 %bf.load334, 21, !dbg !12205
  %36 = trunc i64 %bf.lshr335 to i32, !dbg !12205
  %bf.cast337 = and i32 %36, 1, !dbg !12205
  br i1 %cmp328, label %if.then330, label %if.else339, !dbg !12206

if.then330:                                       ; preds = %if.else327
  %call338 = tail call %struct.rtx_def* @convert_to_mode(i32 %cond, %struct.rtx_def* %call274, i32 %bf.cast337) #8, !dbg !12207
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call338, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call338, %struct.rtx_def** %op0, align 8, !dbg !12208
  br label %if.end350, !dbg !12209

if.else339:                                       ; preds = %if.else327
  tail call void @convert_move(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call274, i32 %bf.cast337) #8, !dbg !12210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %target.addr.0, %struct.rtx_def** %op0, align 8, !dbg !12212
  br label %if.end350

if.end350:                                        ; preds = %if.else312, %if.then309, %if.then330, %if.else339, %if.then323, %if.end267
  %37 = phi %struct.rtx_def* [ %call318, %if.else312 ], [ %call311, %if.then309 ], [ %call338, %if.then330 ], [ %target.addr.0, %if.else339 ], [ %call326, %if.then323 ], [ %call274, %if.end267 ], !dbg !12213
  call void @llvm.dbg.value(metadata %struct.rtx_def* %37, metadata !11972, metadata !DIExpression()), !dbg !12087
  br i1 %12, label %cond.true353, label %cleanup2431, !dbg !12213

cond.true353:                                     ; preds = %if.end350
  %call354 = tail call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %37, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12213
  br label %cleanup2431, !dbg !12213

sw.bb358:                                         ; preds = %land.end50
  %type360 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12214
  %38 = load %union.tree_node*, %union.tree_node** %type360, align 8, !dbg !12214
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !12006, metadata !DIExpression()), !dbg !12215
  %bf.load362 = load i64, i64* %5, align 8, !dbg !12216
  %bf.cast36493 = and i64 %bf.load362, 65535, !dbg !12216
  %cmp365 = icmp eq i64 %bf.cast36493, 10, !dbg !12216
  br i1 %cmp365, label %cond.end376, label %lor.lhs.false367, !dbg !12216

lor.lhs.false367:                                 ; preds = %sw.bb358
  %cmp372 = icmp eq i64 %bf.cast36493, 12, !dbg !12216
  br i1 %cmp372, label %cond.end376, label %cond.true374, !dbg !12216

cond.true374:                                     ; preds = %lor.lhs.false367
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7376, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12216
  br label %cond.end376, !dbg !12216

cond.end376:                                      ; preds = %sw.bb358, %lor.lhs.false367, %cond.true374
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12217
  %bf.load379 = load i64, i64* %39, align 8, !dbg !12217
  %bf.cast38195 = and i64 %bf.load379, 65535, !dbg !12217
  %cmp382 = icmp eq i64 %bf.cast38195, 10, !dbg !12217
  br i1 %cmp382, label %cond.end393, label %lor.lhs.false384, !dbg !12217

lor.lhs.false384:                                 ; preds = %cond.end376
  %cmp389 = icmp eq i64 %bf.cast38195, 12, !dbg !12217
  br i1 %cmp389, label %cond.end393, label %cond.true391, !dbg !12217

cond.true391:                                     ; preds = %lor.lhs.false384
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7377, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12217
  br label %cond.end393, !dbg !12217

cond.end393:                                      ; preds = %cond.end376, %lor.lhs.false384, %cond.true391
  %type396 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12218
  %40 = bitcast %union.tree_node** %type396 to i64**, !dbg !12218
  %41 = load i64*, i64** %40, align 8, !dbg !12218
  %bf.load398 = load i64, i64* %41, align 8, !dbg !12218
  %bf.lshr399 = lshr i64 %bf.load398, 56, !dbg !12218
  %conv401 = trunc i64 %bf.lshr399 to i8, !dbg !12218
  call void @llvm.dbg.value(metadata i8 %conv401, metadata !12008, metadata !DIExpression()), !dbg !12215
  %type403 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12219
  %42 = bitcast %union.tree_node** %type403 to i64**, !dbg !12219
  %43 = load i64*, i64** %42, align 8, !dbg !12219
  %bf.load405 = load i64, i64* %43, align 8, !dbg !12219
  %bf.lshr406 = lshr i64 %bf.load405, 56, !dbg !12219
  %conv408 = trunc i64 %bf.lshr406 to i8, !dbg !12219
  call void @llvm.dbg.value(metadata i8 %conv408, metadata !12009, metadata !DIExpression()), !dbg !12215
  %44 = trunc i64 %bf.lshr399 to i32, !dbg !12220
  %45 = trunc i64 %bf.lshr406 to i32, !dbg !12220
  %cmp411 = icmp eq i32 %44, %45, !dbg !12220
  br i1 %cmp411, label %cond.true413, label %cond.end415, !dbg !12220

cond.true413:                                     ; preds = %cond.end393
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7384, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12220
  br label %cond.end415, !dbg !12220

cond.end415:                                      ; preds = %cond.end393, %cond.true413
  %46 = load i8 (i8, i8)*, i8 (i8, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 5), align 8, !dbg !12221
  %call417 = tail call zeroext i8 %46(i8 zeroext %conv401, i8 zeroext %conv408) #6, !dbg !12223
  %tobool419 = icmp eq i8 %call417, 0, !dbg !12223
  br i1 %tobool419, label %lor.lhs.false420, label %if.then424, !dbg !12224

lor.lhs.false420:                                 ; preds = %cond.end415
  %47 = load i8 (i8, i8)*, i8 (i8, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 5), align 8, !dbg !12225
  %call421 = tail call zeroext i8 %47(i8 zeroext %conv408, i8 zeroext %conv401) #6, !dbg !12226
  %tobool423 = icmp eq i8 %call421, 0, !dbg !12226
  br i1 %tobool423, label %if.end432, label %if.then424, !dbg !12227

if.then424:                                       ; preds = %lor.lhs.false420, %cond.end415
  %call425 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* null, i32 0, i32 %modifier) #8, !dbg !12228
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call425, metadata !11972, metadata !DIExpression()), !dbg !12087
  %48 = load %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 6), align 8, !dbg !12230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call425, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call426 = tail call %struct.rtx_def* %48(%struct.rtx_def* %call425, %union.tree_node* %38, %union.tree_node* %4) #6, !dbg !12231
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call426, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call426, %struct.rtx_def** %op0, align 8, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call426, metadata !11972, metadata !DIExpression()), !dbg !12087
  %tobool427 = icmp eq %struct.rtx_def* %call426, null, !dbg !12233
  br i1 %tobool427, label %cond.true428, label %cond.end430, !dbg !12233

cond.true428:                                     ; preds = %if.then424
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12233
  br label %cond.end430, !dbg !12233

cond.end430:                                      ; preds = %if.then424, %cond.true428
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call426, metadata !11972, metadata !DIExpression()), !dbg !12087
  br label %cleanup2431, !dbg !12234

if.end432:                                        ; preds = %lor.lhs.false420
  %idxprom433 = sext i32 %cond to i64, !dbg !12235
  %arrayidx434 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom433, !dbg !12235
  %49 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx434, align 8, !dbg !12235
  br label %cleanup2431, !dbg !12236

sw.bb438:                                         ; preds = %land.end50
  %50 = load %struct.tree_type*, %struct.tree_type** bitcast ([4 x %union.tree_node*]* @sizetype_tab to %struct.tree_type**), align 16, !dbg !12237
  %precision440 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %50, i64 0, i32 6, !dbg !12237
  %bf.load441 = load i32, i32* %precision440, align 4, !dbg !12237
  %bf.clear442 = and i32 %bf.load441, 1023, !dbg !12237
  %type443 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12239
  %precision444 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type443, i64 0, i32 6, !dbg !12239
  %bf.load445 = load i32, i32* %precision444, align 4, !dbg !12239
  %bf.clear446 = and i32 %bf.load445, 1023, !dbg !12239
  %cmp447 = icmp ult i32 %bf.clear442, %bf.clear446, !dbg !12240
  br i1 %cmp447, label %if.then449, label %sw.bb453, !dbg !12241

if.then449:                                       ; preds = %sw.bb438
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !12242
  %call450 = tail call %union.tree_node* @fold_convert_loc(i32 %3, %union.tree_node* %51, %union.tree_node* %8) #6, !dbg !12243
  %call451 = tail call %union.tree_node* @fold_convert_loc(i32 %3, %union.tree_node* %4, %union.tree_node* %call450) #6, !dbg !12244
  call void @llvm.dbg.value(metadata %union.tree_node* %call451, metadata !11993, metadata !DIExpression()), !dbg !12087
  br label %sw.bb453, !dbg !12245

sw.bb453:                                         ; preds = %sw.bb438, %if.then449, %land.end50
  %treeop1.1 = phi %union.tree_node* [ %8, %land.end50 ], [ %call451, %if.then449 ], [ %8, %sw.bb438 ], !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.1, metadata !11993, metadata !DIExpression()), !dbg !12087
  %bf.load455 = load i64, i64* %5, align 8, !dbg !12246
  %bf.cast45775 = and i64 %bf.load455, 65535, !dbg !12247
  %cmp458 = icmp eq i64 %bf.cast45775, 8, !dbg !12247
  br i1 %cmp458, label %land.lhs.true467, label %lor.lhs.false460, !dbg !12248

lor.lhs.false460:                                 ; preds = %sw.bb453
  %cmp465 = icmp eq i64 %bf.cast45775, 11, !dbg !12249
  br i1 %cmp465, label %land.lhs.true467, label %if.end621, !dbg !12250

land.lhs.true467:                                 ; preds = %lor.lhs.false460, %sw.bb453
  %call468 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %7, i32 65) #8, !dbg !12251
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call468, metadata !11987, metadata !DIExpression()), !dbg !12087
  %tobool469 = icmp eq %union.gimple_statement_d* %call468, null, !dbg !12252
  br i1 %tobool469, label %if.end621, label %if.then470, !dbg !12253

if.then470:                                       ; preds = %land.lhs.true467
  %bf.load472 = load i64, i64* %5, align 8, !dbg !12254
  %bf.cast47489 = and i64 %bf.load472, 65535, !dbg !12255
  %cmp475 = icmp eq i64 %bf.cast47489, 8, !dbg !12255
  %cond477 = select i1 %cmp475, i32 116, i32 115, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %cond477, metadata !12016, metadata !DIExpression()), !dbg !12256
  %call478 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call468) #8, !dbg !12257
  call void @llvm.dbg.value(metadata %union.tree_node* %call478, metadata !12010, metadata !DIExpression()), !dbg !12256
  %call479 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %call478, i32 %cond477) #8, !dbg !12258
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call479, metadata !12014, metadata !DIExpression()), !dbg !12256
  %call480 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* nonnull %call468) #8, !dbg !12259
  call void @llvm.dbg.value(metadata %union.tree_node* %call480, metadata !12013, metadata !DIExpression()), !dbg !12256
  %call481 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %call480, i32 %cond477) #8, !dbg !12260
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call481, metadata !12015, metadata !DIExpression()), !dbg !12256
  %tobool482 = icmp ne %union.gimple_statement_d* %call479, null, !dbg !12261
  %tobool484 = icmp ne %union.gimple_statement_d* %call481, null, !dbg !12262
  %or.cond8 = and i1 %tobool482, %tobool484, !dbg !12263
  br i1 %or.cond8, label %land.lhs.true485, label %if.end613, !dbg !12263

land.lhs.true485:                                 ; preds = %if.then470
  %call486 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call479) #8, !dbg !12264
  call void @llvm.dbg.value(metadata %union.tree_node* %call486, metadata !11989, metadata !DIExpression()), !dbg !12087
  %tobool487 = icmp eq %union.tree_node* %call486, null, !dbg !12265
  br i1 %tobool487, label %if.end613, label %land.lhs.true488, !dbg !12266

land.lhs.true488:                                 ; preds = %land.lhs.true485
  %call489 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call481) #8, !dbg !12267
  call void @llvm.dbg.value(metadata %union.tree_node* %call489, metadata !11990, metadata !DIExpression()), !dbg !12087
  %tobool490 = icmp eq %union.tree_node* %call489, null, !dbg !12268
  br i1 %tobool490, label %if.end613, label %land.lhs.true491, !dbg !12269

land.lhs.true491:                                 ; preds = %land.lhs.true488
  %type493 = getelementptr inbounds %union.tree_node, %union.tree_node* %call486, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12270
  %52 = bitcast %union.tree_node** %type493 to %struct.tree_type**, !dbg !12270
  %53 = load %struct.tree_type*, %struct.tree_type** %52, align 8, !dbg !12270
  %precision495 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %53, i64 0, i32 6, !dbg !12270
  %bf.load496 = load i32, i32* %precision495, align 4, !dbg !12270
  %bf.clear497 = and i32 %bf.load496, 1023, !dbg !12270
  %type499 = getelementptr inbounds %union.tree_node, %union.tree_node* %call478, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12271
  %54 = bitcast %union.tree_node** %type499 to %struct.tree_type**, !dbg !12271
  %55 = load %struct.tree_type*, %struct.tree_type** %54, align 8, !dbg !12271
  %precision501 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %55, i64 0, i32 6, !dbg !12271
  %bf.load502 = load i32, i32* %precision501, align 4, !dbg !12271
  %bf.clear503 = and i32 %bf.load502, 1023, !dbg !12271
  %cmp504 = icmp ult i32 %bf.clear497, %bf.clear503, !dbg !12272
  %56 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %53, i64 0, i32 0, i32 0, i32 0, !dbg !12273
  %57 = bitcast %struct.tree_type* %53 to %union.tree_node*, !dbg !12273
  %58 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %55, i64 0, i32 0, i32 0, i32 0, !dbg !12273
  br i1 %cmp504, label %land.lhs.true506, label %if.end613, !dbg !12273

land.lhs.true506:                                 ; preds = %land.lhs.true491
  %type514 = getelementptr inbounds %union.tree_node, %union.tree_node* %call489, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12274
  %59 = bitcast %union.tree_node** %type514 to %struct.tree_type**, !dbg !12274
  %60 = load %struct.tree_type*, %struct.tree_type** %59, align 8, !dbg !12274
  %precision516 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %60, i64 0, i32 6, !dbg !12274
  %bf.load517 = load i32, i32* %precision516, align 4, !dbg !12274
  %61 = xor i32 %bf.load496, %bf.load517, !dbg !12275
  %62 = and i32 %61, 1023, !dbg !12275
  %cmp519 = icmp eq i32 %62, 0, !dbg !12275
  br i1 %cmp519, label %land.lhs.true521, label %if.end613, !dbg !12276

land.lhs.true521:                                 ; preds = %land.lhs.true506
  %63 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %60, i64 0, i32 0, i32 0, i32 0, !dbg !12276
  %bf.load525 = load i64, i64* %56, align 8, !dbg !12277
  %bf.load532 = load i64, i64* %63, align 8, !dbg !12278
  %bf.lshr526109 = xor i64 %bf.load525, %bf.load532, !dbg !12279
  %64 = and i64 %bf.lshr526109, 2097152, !dbg !12279
  %cmp536 = icmp eq i64 %64, 0, !dbg !12279
  br i1 %cmp536, label %if.then538, label %if.end613, !dbg !12280

if.then538:                                       ; preds = %land.lhs.true521
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !12017, metadata !DIExpression()), !dbg !12281
  %bf.cast54490 = and i64 %bf.load525, 65535, !dbg !12282
  %cmp545 = icmp eq i64 %bf.cast54490, 14, !dbg !12282
  br i1 %cmp545, label %cond.true547, label %cond.false549, !dbg !12282

cond.true547:                                     ; preds = %if.then538
  %65 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %53, i64 0, i32 0, i32 0, i32 0, !dbg !12282
  %call548 = tail call i32 @vector_type_mode(%union.tree_node* %57) #6, !dbg !12282
  %bf.load558.pre = load i64, i64* %65, align 8, !dbg !12283
  %.phi.trans.insert119 = bitcast %union.tree_node** %type499 to i64**, !dbg !12281
  %.pre120 = load i64*, i64** %.phi.trans.insert119, align 8, !dbg !12284
  br label %cond.end555, !dbg !12282

cond.false549:                                    ; preds = %if.then538
  %bf.lshr553 = lshr i32 %bf.load496, 16, !dbg !12282
  %bf.clear554 = and i32 %bf.lshr553, 255, !dbg !12282
  br label %cond.end555, !dbg !12282

cond.end555:                                      ; preds = %cond.false549, %cond.true547
  %66 = phi i64* [ %.pre120, %cond.true547 ], [ %58, %cond.false549 ], !dbg !12284
  %bf.load558 = phi i64 [ %bf.load558.pre, %cond.true547 ], [ %bf.load525, %cond.false549 ], !dbg !12283
  %cond556 = phi i32 [ %call548, %cond.true547 ], [ %bf.clear554, %cond.false549 ], !dbg !12282
  call void @llvm.dbg.value(metadata i32 %cond556, metadata !12020, metadata !DIExpression()), !dbg !12281
  %bf.load566 = load i64, i64* %66, align 8, !dbg !12284
  %67 = trunc i64 %bf.load566 to i32, !dbg !12285
  %cmp572 = icmp sgt i32 %67, -1, !dbg !12285
  %bf.cast56192 = and i64 %bf.load558, 2097152, !dbg !12287
  %tobool576 = icmp ne i64 %bf.cast56192, 0, !dbg !12287
  %cond577 = select i1 %tobool576, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 24), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 23), !dbg !12288
  %cond581 = select i1 %tobool576, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 26), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 25), !dbg !12288
  %this_optab.0 = select i1 %cmp572, %struct.optab_d* %cond577, %struct.optab_d* %cond581, !dbg !12288
  call void @llvm.dbg.value(metadata %struct.optab_d* %this_optab.0, metadata !11980, metadata !DIExpression()), !dbg !12087
  %idxprom583 = zext i32 %cond556 to i64, !dbg !12289
  %arrayidx584 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_2xwider, i64 0, i64 %idxprom583, !dbg !12289
  %68 = load i8, i8* %arrayidx584, align 1, !dbg !12289
  %conv585 = zext i8 %68 to i32, !dbg !12289
  %cmp586 = icmp eq i32 %cond, %conv585, !dbg !12291
  br i1 %cmp586, label %land.lhs.true588, label %cleanup609, !dbg !12292

land.lhs.true588:                                 ; preds = %cond.end555
  %idxprom589 = sext i32 %cond to i64, !dbg !12293
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %this_optab.0, i64 0, i32 4, i64 %idxprom589, i32 0, !dbg !12294
  %69 = load i32, i32* %insn_code, align 4, !dbg !12294
  %cmp591 = icmp eq i32 %69, 2956, !dbg !12295
  br i1 %cmp591, label %cleanup609, label %if.then593, !dbg !12296

if.then593:                                       ; preds = %land.lhs.true588
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* nonnull %call486, %union.tree_node* nonnull %call489, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12297
  %call594 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop1.1, %struct.rtx_def* %call56, i32 0, i32 0) #8, !dbg !12299
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call594, metadata !11974, metadata !DIExpression()), !dbg !12087
  %70 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %70, metadata !11972, metadata !DIExpression()), !dbg !12087
  %71 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %71, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call595 = call %struct.rtx_def* @expand_ternary_op(i32 %cond, %struct.optab_d* %this_optab.0, %struct.rtx_def* %70, %struct.rtx_def* %71, %struct.rtx_def* %call594, %struct.rtx_def* %target.addr.0, i32 %bf.cast11) #6, !dbg !12302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call595, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool596 = icmp eq %struct.rtx_def* %call595, null, !dbg !12303
  br i1 %tobool596, label %cond.true597, label %cond.end599, !dbg !12303

cond.true597:                                     ; preds = %if.then593
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7460, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12303
  br label %cond.end599, !dbg !12303

cond.end599:                                      ; preds = %if.then593, %cond.true597
  br i1 %12, label %cond.true603, label %cleanup609, !dbg !12304

cond.true603:                                     ; preds = %cond.end599
  %call604 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call595, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12304
  br label %cleanup609, !dbg !12304

cleanup609:                                       ; preds = %land.lhs.true588, %cond.end555, %cond.true603, %cond.end599
  %cleanup.dest.slot.0 = phi i32 [ 1, %cond.end599 ], [ 1, %cond.true603 ], [ 0, %land.lhs.true588 ], [ 0, %cond.end555 ]
  %retval.2 = phi %struct.rtx_def* [ %call595, %cond.end599 ], [ %call604, %cond.true603 ], [ undef, %land.lhs.true588 ], [ undef, %cond.end555 ]
  %cond7 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond7, label %if.end613, label %cleanup614

if.end613:                                        ; preds = %land.lhs.true488, %land.lhs.true485, %cleanup609, %land.lhs.true521, %land.lhs.true506, %land.lhs.true491, %if.then470
  %retval.3 = phi %struct.rtx_def* [ undef, %land.lhs.true521 ], [ undef, %land.lhs.true506 ], [ undef, %land.lhs.true491 ], [ undef, %land.lhs.true488 ], [ undef, %land.lhs.true485 ], [ undef, %if.then470 ], [ %retval.2, %cleanup609 ]
  br label %cleanup614, !dbg !12305

cleanup614:                                       ; preds = %cleanup609, %if.end613
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup609 ], [ 0, %if.end613 ]
  %retval.4 = phi %struct.rtx_def* [ %retval.2, %cleanup609 ], [ %retval.3, %if.end613 ], !dbg !12306
  %cond6 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond6, label %if.end621, label %cleanup2431

if.end621:                                        ; preds = %land.lhs.true467, %cleanup614, %lor.lhs.false460
  %retval.5 = phi %struct.rtx_def* [ undef, %land.lhs.true467 ], [ undef, %lor.lhs.false460 ], [ %retval.4, %cleanup614 ]
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12307
  %bf.load623 = load i64, i64* %72, align 8, !dbg !12307
  %bf.cast62577 = and i64 %bf.load623, 65535, !dbg !12308
  %cmp626 = icmp eq i64 %bf.cast62577, 63, !dbg !12308
  br i1 %cmp626, label %land.lhs.true628, label %if.end690, !dbg !12309

land.lhs.true628:                                 ; preds = %if.end621
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12310
  %arrayidx629 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12310
  %73 = bitcast %union.tree_node** %arrayidx629 to i64**, !dbg !12310
  %74 = load i64*, i64** %73, align 8, !dbg !12310
  %bf.load631 = load i64, i64* %74, align 8, !dbg !12310
  %bf.cast63387 = and i64 %bf.load631, 65535, !dbg !12311
  %cmp634 = icmp eq i64 %bf.cast63387, 23, !dbg !12311
  br i1 %cmp634, label %land.lhs.true636, label %if.end690, !dbg !12312

land.lhs.true636:                                 ; preds = %land.lhs.true628
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12313
  %bf.load638 = load i64, i64* %75, align 8, !dbg !12313
  %bf.cast64088 = and i64 %bf.load638, 65535, !dbg !12314
  %cmp641 = icmp eq i64 %bf.cast64088, 32, !dbg !12314
  br i1 %cmp641, label %land.lhs.true643, label %if.end690, !dbg !12315

land.lhs.true643:                                 ; preds = %land.lhs.true636
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12316
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !12316
  %tobool644 = icmp eq %struct.rtx_def* %76, null, !dbg !12316
  br i1 %tobool644, label %cond.false648, label %cond.true645, !dbg !12316

cond.true645:                                     ; preds = %land.lhs.true643
  br label %cond.end651, !dbg !12316

cond.false648:                                    ; preds = %land.lhs.true643
  call void @make_decl_rtl(%union.tree_node* %treeop1.1) #6, !dbg !12316
  %cond652.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !12316
  br label %cond.end651, !dbg !12316

cond.end651:                                      ; preds = %cond.false648, %cond.true645
  %77 = phi %struct.rtx_def* [ %cond652.pre, %cond.false648 ], [ %76, %cond.true645 ], !dbg !12316
  %78 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !12317
  %cmp653 = icmp eq %struct.rtx_def* %77, %78, !dbg !12318
  br i1 %cmp653, label %if.then683, label %lor.lhs.false655, !dbg !12319

lor.lhs.false655:                                 ; preds = %cond.end651
  %tobool658 = icmp eq %struct.rtx_def* %77, null, !dbg !12320
  br i1 %tobool658, label %cond.false662, label %cond.true659, !dbg !12320

cond.true659:                                     ; preds = %lor.lhs.false655
  br label %cond.end665, !dbg !12320

cond.false662:                                    ; preds = %lor.lhs.false655
  call void @make_decl_rtl(%union.tree_node* %treeop1.1) #6, !dbg !12320
  %cond666.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !12320
  br label %cond.end665, !dbg !12320

cond.end665:                                      ; preds = %cond.false662, %cond.true659
  %79 = phi %struct.rtx_def* [ %cond666.pre, %cond.false662 ], [ %77, %cond.true659 ], !dbg !12320
  %80 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !12321
  %cmp667 = icmp eq %struct.rtx_def* %79, %80, !dbg !12322
  br i1 %cmp667, label %if.then683, label %lor.lhs.false669, !dbg !12323

lor.lhs.false669:                                 ; preds = %cond.end665
  %tobool672 = icmp eq %struct.rtx_def* %79, null, !dbg !12324
  br i1 %tobool672, label %cond.false676, label %cond.true673, !dbg !12324

cond.true673:                                     ; preds = %lor.lhs.false669
  br label %cond.end679, !dbg !12324

cond.false676:                                    ; preds = %lor.lhs.false669
  call void @make_decl_rtl(%union.tree_node* %treeop1.1) #6, !dbg !12324
  %cond680.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !12324
  br label %cond.end679, !dbg !12324

cond.end679:                                      ; preds = %cond.false676, %cond.true673
  %cond680 = phi %struct.rtx_def* [ %cond680.pre, %cond.false676 ], [ %79, %cond.true673 ], !dbg !12324
  %81 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !12325
  %cmp681 = icmp eq %struct.rtx_def* %cond680, %81, !dbg !12326
  br i1 %cmp681, label %if.then683, label %if.end690, !dbg !12327

if.then683:                                       ; preds = %cond.end679, %cond.end665, %cond.end651
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.1, metadata !12023, metadata !DIExpression()), !dbg !12328
  %82 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !12329
  call void @llvm.dbg.value(metadata %union.tree_node* %82, metadata !11993, metadata !DIExpression()), !dbg !12087
  store %union.tree_node* %treeop1.1, %union.tree_node** %operands, align 8, !dbg !12330
  br label %if.end690, !dbg !12331

if.end690:                                        ; preds = %if.then683, %cond.end679, %land.lhs.true636, %land.lhs.true628, %if.end621
  %treeop1.2 = phi %union.tree_node* [ %82, %if.then683 ], [ %treeop1.1, %cond.end679 ], [ %treeop1.1, %land.lhs.true636 ], [ %treeop1.1, %land.lhs.true628 ], [ %treeop1.1, %if.end621 ], !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* %treeop1.2, metadata !11993, metadata !DIExpression()), !dbg !12087
  switch i32 %modifier, label %lor.lhs.false696 [
    i32 2, label %if.end707
    i32 4, label %if.end707
  ], !dbg !12332

lor.lhs.false696:                                 ; preds = %if.end690
  %83 = load i32, i32* @ptr_mode, align 4, !dbg !12333
  %cmp697 = icmp eq i32 %cond, %83, !dbg !12334
  br i1 %cmp697, label %land.lhs.true699, label %if.end870, !dbg !12335

land.lhs.true699:                                 ; preds = %lor.lhs.false696
  %tobool700 = icmp eq i32 %bf.cast11, 0, !dbg !12336
  %84 = load i32, i32* @flag_trapv, align 4, !dbg !12337
  %tobool702 = icmp ne i32 %84, 0, !dbg !12337
  %or.cond9 = and i1 %tobool700, %tobool702, !dbg !12338
  br i1 %or.cond9, label %if.end870, label %if.then703, !dbg !12338

if.then703:                                       ; preds = %land.lhs.true699
  %spec.select = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12339
  br label %if.end707, !dbg !12339

if.end707:                                        ; preds = %if.then703, %if.end690, %if.end690
  %target.addr.3 = phi %struct.rtx_def* [ %target.addr.0, %if.end690 ], [ %target.addr.0, %if.end690 ], [ %spec.select, %if.then703 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.3, metadata !11969, metadata !DIExpression()), !dbg !12087
  %bf.load709 = load i64, i64* %72, align 8, !dbg !12340
  %bf.cast71178 = and i64 %bf.load709, 65535, !dbg !12341
  %cmp712 = icmp eq i64 %bf.cast71178, 23, !dbg !12341
  br i1 %cmp712, label %land.lhs.true714, label %if.else775, !dbg !12342

land.lhs.true714:                                 ; preds = %if.end707
  %idxprom715 = zext i32 %cond to i64, !dbg !12343
  %arrayidx716 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom715, !dbg !12343
  %85 = load i8, i8* %arrayidx716, align 1, !dbg !12343
  %cmp722 = icmp ult i8 %85, 9, !dbg !12344
  br i1 %cmp722, label %land.lhs.true724, label %if.else775, !dbg !12345

land.lhs.true724:                                 ; preds = %land.lhs.true714
  %86 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12346
  %bf.load726 = load i64, i64* %86, align 8, !dbg !12346
  %bf.cast72984 = and i64 %bf.load726, 131072, !dbg !12346
  %tobool730 = icmp eq i64 %bf.cast72984, 0, !dbg !12346
  br i1 %tobool730, label %if.else775, label %if.then731, !dbg !12347

if.then731:                                       ; preds = %land.lhs.true724
  %call732 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop1.2, %struct.rtx_def* %call56, i32 0, i32 2) #8, !dbg !12348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call732, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call732, %struct.rtx_def** %op1, align 8, !dbg !12349
  %int_cst733 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12350
  %low = bitcast i32* %int_cst733 to i64*, !dbg !12350
  %87 = load i64, i64* %low, align 8, !dbg !12350
  %type735 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12351
  %88 = bitcast %union.tree_node** %type735 to i64**, !dbg !12351
  %89 = load i64*, i64** %88, align 8, !dbg !12351
  %bf.load737 = load i64, i64* %89, align 8, !dbg !12351
  %bf.cast73985 = and i64 %bf.load737, 65535, !dbg !12351
  %cmp740 = icmp eq i64 %bf.cast73985, 14, !dbg !12351
  br i1 %cmp740, label %cond.true742, label %cond.false746, !dbg !12351

cond.true742:                                     ; preds = %if.then731
  %.cast86 = bitcast i64* %89 to %union.tree_node*, !dbg !12351
  %call745 = call i32 @vector_type_mode(%union.tree_node* %.cast86) #6, !dbg !12351
  br label %cond.end754, !dbg !12351

cond.false746:                                    ; preds = %if.then731
  %type749 = bitcast i64* %89 to %struct.tree_type*, !dbg !12351
  %mode750 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type749, i64 0, i32 6, !dbg !12351
  %bf.load751 = load i32, i32* %mode750, align 4, !dbg !12351
  %bf.lshr752 = lshr i32 %bf.load751, 16, !dbg !12351
  %bf.clear753 = and i32 %bf.lshr752, 255, !dbg !12351
  br label %cond.end754, !dbg !12351

cond.end754:                                      ; preds = %cond.false746, %cond.true742
  %cond755 = phi i32 [ %call745, %cond.true742 ], [ %bf.clear753, %cond.false746 ], !dbg !12351
  %call756 = call %struct.rtx_def* @immed_double_const(i64 %87, i64 0, i32 %cond755) #6, !dbg !12352
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call756, metadata !12026, metadata !DIExpression()), !dbg !12353
  %90 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12354
  call void @llvm.dbg.value(metadata %struct.rtx_def* %90, metadata !11973, metadata !DIExpression()), !dbg !12087
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call756, i64 0, i32 1, !dbg !12355
  %arrayidx757 = bitcast %union.u* %u to i64*, !dbg !12355
  %91 = load i64, i64* %arrayidx757, align 8, !dbg !12355
  %call758 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %90, i64 %91) #6, !dbg !12356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call758, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call758, %struct.rtx_def** %op1, align 8, !dbg !12357
  switch i32 %modifier, label %if.then764 [
    i32 2, label %if.end766
    i32 4, label %if.end766
  ], !dbg !12358

if.then764:                                       ; preds = %cond.end754
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call758, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call765 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call758, %struct.rtx_def* %target.addr.3) #8, !dbg !12360
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call765, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call765, %struct.rtx_def** %op1, align 8, !dbg !12361
  br label %if.end766, !dbg !12362

if.end766:                                        ; preds = %cond.end754, %cond.end754, %if.then764
  %92 = phi %struct.rtx_def* [ %call758, %cond.end754 ], [ %call758, %cond.end754 ], [ %call765, %if.then764 ], !dbg !12363
  call void @llvm.dbg.value(metadata %struct.rtx_def* %92, metadata !11973, metadata !DIExpression()), !dbg !12087
  br i1 %12, label %cond.true769, label %cleanup2431, !dbg !12363

cond.true769:                                     ; preds = %if.end766
  %call770 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %92, %struct.rtx_def* %target.addr.3, %union.tree_node* %4) #8, !dbg !12363
  br label %cleanup2431, !dbg !12363

if.else775:                                       ; preds = %land.lhs.true724, %land.lhs.true714, %if.end707
  %93 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12364
  %bf.load777 = load i64, i64* %93, align 8, !dbg !12364
  %bf.cast77979 = and i64 %bf.load777, 65535, !dbg !12365
  %cmp780 = icmp eq i64 %bf.cast77979, 23, !dbg !12365
  br i1 %cmp780, label %land.lhs.true782, label %if.end870, !dbg !12366

land.lhs.true782:                                 ; preds = %if.else775
  %idxprom783 = zext i32 %cond to i64, !dbg !12367
  %arrayidx784 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom783, !dbg !12367
  %94 = load i8, i8* %arrayidx784, align 1, !dbg !12367
  %cmp790 = icmp ult i8 %94, 9, !dbg !12368
  br i1 %cmp790, label %land.lhs.true792, label %if.end870, !dbg !12369

land.lhs.true792:                                 ; preds = %land.lhs.true782
  %bf.cast79780 = and i64 %bf.load709, 131072, !dbg !12370
  %tobool798 = icmp eq i64 %bf.cast79780, 0, !dbg !12370
  br i1 %tobool798, label %if.end870, label %if.then799, !dbg !12371

if.then799:                                       ; preds = %land.lhs.true792
  %cmp801 = icmp eq i32 %modifier, 4, !dbg !12372
  %cond803 = select i1 %cmp801, i32 4, i32 2, !dbg !12373
  %call804 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %call56, i32 0, i32 %cond803) #8, !dbg !12374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call804, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call804, %struct.rtx_def** %op0, align 8, !dbg !12375
  %.cast81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call804, i64 0, i32 0, !dbg !12376
  %bf.load805 = load i32, i32* %.cast81, align 8, !dbg !12376
  %bf.clear806 = and i32 %bf.load805, 65535, !dbg !12376
  %idxprom807 = zext i32 %bf.clear806 to i64, !dbg !12376
  %arrayidx808 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom807, !dbg !12376
  %95 = load i32, i32* %arrayidx808, align 4, !dbg !12376
  %cmp809 = icmp eq i32 %95, 9, !dbg !12376
  br i1 %cmp809, label %if.end821, label %if.then811, !dbg !12378

if.then811:                                       ; preds = %if.then799
  %call812 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %treeop1.2, %struct.rtx_def* null, i32 0, i32 %modifier) #8, !dbg !12379
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call812, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call812, %struct.rtx_def** %op1, align 8, !dbg !12381
  switch i32 %modifier, label %cleanup867 [
    i32 2, label %if.then818
    i32 4, label %if.then818
  ], !dbg !12382

if.then818:                                       ; preds = %if.then811, %if.then811
  %96 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %96, metadata !11972, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call812, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call819 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %cond, %struct.rtx_def* %96, %struct.rtx_def* %call812) #6, !dbg !12385
  br label %cleanup867, !dbg !12386

if.end821:                                        ; preds = %if.then799
  %int_cst823 = getelementptr inbounds %union.tree_node, %union.tree_node* %treeop1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12387
  %low824 = bitcast i32* %int_cst823 to i64*, !dbg !12387
  %97 = load i64, i64* %low824, align 8, !dbg !12387
  %type826 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12388
  %98 = bitcast %union.tree_node** %type826 to i64**, !dbg !12388
  %99 = load i64*, i64** %98, align 8, !dbg !12388
  %bf.load828 = load i64, i64* %99, align 8, !dbg !12388
  %bf.cast83082 = and i64 %bf.load828, 65535, !dbg !12388
  %cmp831 = icmp eq i64 %bf.cast83082, 14, !dbg !12388
  br i1 %cmp831, label %cond.true833, label %cond.false837, !dbg !12388

cond.true833:                                     ; preds = %if.end821
  %.cast83 = bitcast i64* %99 to %union.tree_node*, !dbg !12388
  %call836 = call i32 @vector_type_mode(%union.tree_node* %.cast83) #6, !dbg !12388
  br label %cond.end845, !dbg !12388

cond.false837:                                    ; preds = %if.end821
  %type840 = bitcast i64* %99 to %struct.tree_type*, !dbg !12388
  %mode841 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type840, i64 0, i32 6, !dbg !12388
  %bf.load842 = load i32, i32* %mode841, align 4, !dbg !12388
  %bf.lshr843 = lshr i32 %bf.load842, 16, !dbg !12388
  %bf.clear844 = and i32 %bf.lshr843, 255, !dbg !12388
  br label %cond.end845, !dbg !12388

cond.end845:                                      ; preds = %cond.false837, %cond.true833
  %cond846 = phi i32 [ %call836, %cond.true833 ], [ %bf.clear844, %cond.false837 ], !dbg !12388
  %call847 = call %struct.rtx_def* @immed_double_const(i64 %97, i64 0, i32 %cond846) #6, !dbg !12389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call847, metadata !12031, metadata !DIExpression()), !dbg !12390
  %100 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12391
  call void @llvm.dbg.value(metadata %struct.rtx_def* %100, metadata !11972, metadata !DIExpression()), !dbg !12087
  %u848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call847, i64 0, i32 1, !dbg !12392
  %arrayidx850 = bitcast %union.u* %u848 to i64*, !dbg !12392
  %101 = load i64, i64* %arrayidx850, align 8, !dbg !12392
  %call851 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %100, i64 %101) #6, !dbg !12393
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call851, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call851, %struct.rtx_def** %op0, align 8, !dbg !12394
  switch i32 %modifier, label %if.then857 [
    i32 2, label %if.end859
    i32 4, label %if.end859
  ], !dbg !12395

if.then857:                                       ; preds = %cond.end845
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call851, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call858 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call851, %struct.rtx_def* %target.addr.3) #8, !dbg !12397
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call858, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call858, %struct.rtx_def** %op0, align 8, !dbg !12398
  br label %if.end859, !dbg !12399

if.end859:                                        ; preds = %cond.end845, %cond.end845, %if.then857
  %102 = phi %struct.rtx_def* [ %call851, %cond.end845 ], [ %call851, %cond.end845 ], [ %call858, %if.then857 ], !dbg !12400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %102, metadata !11972, metadata !DIExpression()), !dbg !12087
  br i1 %12, label %cond.true862, label %cleanup867, !dbg !12400

cond.true862:                                     ; preds = %if.end859
  %call863 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %102, %struct.rtx_def* %target.addr.3, %union.tree_node* %4) #8, !dbg !12400
  br label %cleanup867, !dbg !12400

cleanup867:                                       ; preds = %cond.true862, %if.end859, %if.then811, %if.then818
  %cleanup.dest.slot.2 = phi i1 [ false, %if.then818 ], [ true, %if.then811 ], [ false, %if.end859 ], [ false, %cond.true862 ]
  %retval.6 = phi %struct.rtx_def* [ %call819, %if.then818 ], [ %retval.5, %if.then811 ], [ %102, %if.end859 ], [ %call863, %cond.true862 ], !dbg !12123
  br i1 %cleanup.dest.slot.2, label %binop2, label %cleanup2431

if.end870:                                        ; preds = %land.lhs.true792, %land.lhs.true782, %if.else775, %land.lhs.true699, %lor.lhs.false696
  %target.addr.4 = phi %struct.rtx_def* [ %target.addr.0, %lor.lhs.false696 ], [ %target.addr.0, %land.lhs.true699 ], [ %target.addr.3, %if.else775 ], [ %target.addr.3, %land.lhs.true782 ], [ %target.addr.3, %land.lhs.true792 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.4, metadata !11969, metadata !DIExpression()), !dbg !12087
  switch i32 %modifier, label %if.then879 [
    i32 2, label %lor.lhs.false876
    i32 4, label %lor.lhs.false876
  ], !dbg !12401

lor.lhs.false876:                                 ; preds = %if.end870, %if.end870
  %103 = load i32, i32* @ptr_mode, align 4, !dbg !12403
  %cmp877 = icmp eq i32 %cond, %103, !dbg !12404
  br i1 %cmp877, label %if.end888, label %if.then879, !dbg !12405

if.then879:                                       ; preds = %lor.lhs.false876, %if.end870
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %treeop1.2, %struct.rtx_def* %call56, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12406
  %104 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %104, metadata !11972, metadata !DIExpression()), !dbg !12087
  %105 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !12410
  %cmp880 = icmp eq %struct.rtx_def* %104, %105, !dbg !12411
  %106 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12412
  call void @llvm.dbg.value(metadata %struct.rtx_def* %106, metadata !11973, metadata !DIExpression()), !dbg !12087
  br i1 %cmp880, label %cleanup2431, label %if.end883, !dbg !12413

if.end883:                                        ; preds = %if.then879
  %cmp884 = icmp eq %struct.rtx_def* %106, %105, !dbg !12414
  br i1 %cmp884, label %if.then886, label %binop2, !dbg !12416

if.then886:                                       ; preds = %if.end883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %104, metadata !11972, metadata !DIExpression()), !dbg !12087
  br label %cleanup2431, !dbg !12417

if.end888:                                        ; preds = %lor.lhs.false876
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %treeop1.2, %struct.rtx_def* %call56, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 %modifier) #8, !dbg !12418
  %107 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %107, metadata !11972, metadata !DIExpression()), !dbg !12087
  %108 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %108, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call892 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %cond, %struct.rtx_def* %107, %struct.rtx_def* %108) #6, !dbg !12419
  br i1 %12, label %cond.true891, label %cleanup2431, !dbg !12419

cond.true891:                                     ; preds = %if.end888
  %call893 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call892, %struct.rtx_def* %target.addr.4, %union.tree_node* %4) #8, !dbg !12419
  br label %cleanup2431, !dbg !12419

sw.bb898:                                         ; preds = %land.end50
  %bf.load900 = load i64, i64* %5, align 8, !dbg !12420
  %bf.cast90268 = and i64 %bf.load900, 65535, !dbg !12421
  %cmp903 = icmp eq i64 %bf.cast90268, 8, !dbg !12421
  br i1 %cmp903, label %land.lhs.true912, label %lor.lhs.false905, !dbg !12422

lor.lhs.false905:                                 ; preds = %sw.bb898
  %cmp910 = icmp eq i64 %bf.cast90268, 11, !dbg !12423
  br i1 %cmp910, label %land.lhs.true912, label %if.end1079, !dbg !12424

land.lhs.true912:                                 ; preds = %lor.lhs.false905, %sw.bb898
  %call913 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %8, i32 65) #8, !dbg !12425
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call913, metadata !11988, metadata !DIExpression()), !dbg !12087
  %tobool914 = icmp eq %union.gimple_statement_d* %call913, null, !dbg !12426
  br i1 %tobool914, label %if.end1079, label %if.then915, !dbg !12427

if.then915:                                       ; preds = %land.lhs.true912
  %bf.load922 = load i64, i64* %5, align 8, !dbg !12428
  %bf.cast92471 = and i64 %bf.load922, 65535, !dbg !12429
  %cmp925 = icmp eq i64 %bf.cast92471, 8, !dbg !12429
  %cond927 = select i1 %cmp925, i32 116, i32 115, !dbg !12428
  call void @llvm.dbg.value(metadata i32 %cond927, metadata !12040, metadata !DIExpression()), !dbg !12430
  %call928 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call913) #8, !dbg !12431
  call void @llvm.dbg.value(metadata %union.tree_node* %call928, metadata !12034, metadata !DIExpression()), !dbg !12430
  %call929 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %call928, i32 %cond927) #8, !dbg !12432
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call929, metadata !12038, metadata !DIExpression()), !dbg !12430
  %call930 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* nonnull %call913) #8, !dbg !12433
  call void @llvm.dbg.value(metadata %union.tree_node* %call930, metadata !12037, metadata !DIExpression()), !dbg !12430
  %call931 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %call930, i32 %cond927) #8, !dbg !12434
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call931, metadata !12039, metadata !DIExpression()), !dbg !12430
  %tobool932 = icmp ne %union.gimple_statement_d* %call929, null, !dbg !12435
  %tobool934 = icmp ne %union.gimple_statement_d* %call931, null, !dbg !12436
  %or.cond10 = and i1 %tobool932, %tobool934, !dbg !12437
  br i1 %or.cond10, label %land.lhs.true935, label %if.end1071, !dbg !12437

land.lhs.true935:                                 ; preds = %if.then915
  %call936 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call929) #8, !dbg !12438
  call void @llvm.dbg.value(metadata %union.tree_node* %call936, metadata !11989, metadata !DIExpression()), !dbg !12087
  %tobool937 = icmp eq %union.tree_node* %call936, null, !dbg !12439
  br i1 %tobool937, label %if.end1071, label %land.lhs.true938, !dbg !12440

land.lhs.true938:                                 ; preds = %land.lhs.true935
  %call939 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call931) #8, !dbg !12441
  call void @llvm.dbg.value(metadata %union.tree_node* %call939, metadata !11990, metadata !DIExpression()), !dbg !12087
  %tobool940 = icmp eq %union.tree_node* %call939, null, !dbg !12442
  br i1 %tobool940, label %if.end1071, label %land.lhs.true941, !dbg !12443

land.lhs.true941:                                 ; preds = %land.lhs.true938
  %type943 = getelementptr inbounds %union.tree_node, %union.tree_node* %call936, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12444
  %109 = bitcast %union.tree_node** %type943 to %struct.tree_type**, !dbg !12444
  %110 = load %struct.tree_type*, %struct.tree_type** %109, align 8, !dbg !12444
  %precision945 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %110, i64 0, i32 6, !dbg !12444
  %bf.load946 = load i32, i32* %precision945, align 4, !dbg !12444
  %bf.clear947 = and i32 %bf.load946, 1023, !dbg !12444
  %type949 = getelementptr inbounds %union.tree_node, %union.tree_node* %call928, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12445
  %111 = bitcast %union.tree_node** %type949 to %struct.tree_type**, !dbg !12445
  %112 = load %struct.tree_type*, %struct.tree_type** %111, align 8, !dbg !12445
  %precision951 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %112, i64 0, i32 6, !dbg !12445
  %bf.load952 = load i32, i32* %precision951, align 4, !dbg !12445
  %bf.clear953 = and i32 %bf.load952, 1023, !dbg !12445
  %cmp954 = icmp ult i32 %bf.clear947, %bf.clear953, !dbg !12446
  %113 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %110, i64 0, i32 0, i32 0, i32 0, !dbg !12447
  %114 = bitcast %struct.tree_type* %110 to %union.tree_node*, !dbg !12447
  %115 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %112, i64 0, i32 0, i32 0, i32 0, !dbg !12447
  br i1 %cmp954, label %land.lhs.true956, label %if.end1071, !dbg !12447

land.lhs.true956:                                 ; preds = %land.lhs.true941
  %type964 = getelementptr inbounds %union.tree_node, %union.tree_node* %call939, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12448
  %116 = bitcast %union.tree_node** %type964 to %struct.tree_type**, !dbg !12448
  %117 = load %struct.tree_type*, %struct.tree_type** %116, align 8, !dbg !12448
  %precision966 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %117, i64 0, i32 6, !dbg !12448
  %bf.load967 = load i32, i32* %precision966, align 4, !dbg !12448
  %118 = xor i32 %bf.load946, %bf.load967, !dbg !12449
  %119 = and i32 %118, 1023, !dbg !12449
  %cmp969 = icmp eq i32 %119, 0, !dbg !12449
  br i1 %cmp969, label %land.lhs.true971, label %if.end1071, !dbg !12450

land.lhs.true971:                                 ; preds = %land.lhs.true956
  %120 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %117, i64 0, i32 0, i32 0, i32 0, !dbg !12450
  %bf.load975 = load i64, i64* %113, align 8, !dbg !12451
  %bf.load982 = load i64, i64* %120, align 8, !dbg !12452
  %bf.lshr976108 = xor i64 %bf.load975, %bf.load982, !dbg !12453
  %121 = and i64 %bf.lshr976108, 2097152, !dbg !12453
  %cmp986 = icmp eq i64 %121, 0, !dbg !12453
  br i1 %cmp986, label %if.then988, label %if.end1071, !dbg !12454

if.then988:                                       ; preds = %land.lhs.true971
  call void @llvm.dbg.value(metadata %union.tree_node* %114, metadata !12041, metadata !DIExpression()), !dbg !12455
  %bf.cast99672 = and i64 %bf.load975, 65535, !dbg !12456
  %cmp997 = icmp eq i64 %bf.cast99672, 14, !dbg !12456
  br i1 %cmp997, label %cond.true999, label %cond.false1001, !dbg !12456

cond.true999:                                     ; preds = %if.then988
  %122 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %110, i64 0, i32 0, i32 0, i32 0, !dbg !12456
  %call1000 = tail call i32 @vector_type_mode(%union.tree_node* %114) #6, !dbg !12456
  %bf.load1011.pre = load i64, i64* %122, align 8, !dbg !12457
  %.phi.trans.insert = bitcast %union.tree_node** %type949 to i64**, !dbg !12455
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !12458
  br label %cond.end1007, !dbg !12456

cond.false1001:                                   ; preds = %if.then988
  %bf.lshr1005 = lshr i32 %bf.load946, 16, !dbg !12456
  %bf.clear1006 = and i32 %bf.lshr1005, 255, !dbg !12456
  br label %cond.end1007, !dbg !12456

cond.end1007:                                     ; preds = %cond.false1001, %cond.true999
  %123 = phi i64* [ %.pre, %cond.true999 ], [ %115, %cond.false1001 ], !dbg !12458
  %bf.load1011 = phi i64 [ %bf.load1011.pre, %cond.true999 ], [ %bf.load975, %cond.false1001 ], !dbg !12457
  %cond1008 = phi i32 [ %call1000, %cond.true999 ], [ %bf.clear1006, %cond.false1001 ], !dbg !12456
  call void @llvm.dbg.value(metadata i32 %cond1008, metadata !12044, metadata !DIExpression()), !dbg !12455
  %bf.load1020 = load i64, i64* %123, align 8, !dbg !12458
  %124 = trunc i64 %bf.load1020 to i32, !dbg !12459
  %cmp1026 = icmp sgt i32 %124, -1, !dbg !12459
  %bf.cast101474 = and i64 %bf.load1011, 2097152, !dbg !12461
  %tobool1030 = icmp ne i64 %bf.cast101474, 0, !dbg !12461
  %cond1031 = select i1 %tobool1030, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 28), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 27), !dbg !12462
  %cond1035 = select i1 %tobool1030, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 30), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 29), !dbg !12462
  %this_optab.1 = select i1 %cmp1026, %struct.optab_d* %cond1031, %struct.optab_d* %cond1035, !dbg !12462
  call void @llvm.dbg.value(metadata %struct.optab_d* %this_optab.1, metadata !11980, metadata !DIExpression()), !dbg !12087
  %idxprom1037 = zext i32 %cond1008 to i64, !dbg !12463
  %arrayidx1038 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_2xwider, i64 0, i64 %idxprom1037, !dbg !12463
  %125 = load i8, i8* %arrayidx1038, align 1, !dbg !12463
  %conv1039 = zext i8 %125 to i32, !dbg !12463
  %cmp1040 = icmp eq i32 %cond, %conv1039, !dbg !12465
  br i1 %cmp1040, label %land.lhs.true1042, label %cleanup1065, !dbg !12466

land.lhs.true1042:                                ; preds = %cond.end1007
  %idxprom1044 = sext i32 %cond to i64, !dbg !12467
  %insn_code1046 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %this_optab.1, i64 0, i32 4, i64 %idxprom1044, i32 0, !dbg !12468
  %126 = load i32, i32* %insn_code1046, align 4, !dbg !12468
  %cmp1047 = icmp eq i32 %126, 2956, !dbg !12469
  br i1 %cmp1047, label %cleanup1065, label %if.then1049, !dbg !12470

if.then1049:                                      ; preds = %land.lhs.true1042
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* nonnull %call936, %union.tree_node* nonnull %call939, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12471
  %call1050 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %call56, i32 0, i32 0) #8, !dbg !12473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1050, metadata !11974, metadata !DIExpression()), !dbg !12087
  %127 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12474
  call void @llvm.dbg.value(metadata %struct.rtx_def* %127, metadata !11972, metadata !DIExpression()), !dbg !12087
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12475
  call void @llvm.dbg.value(metadata %struct.rtx_def* %128, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1051 = call %struct.rtx_def* @expand_ternary_op(i32 %cond, %struct.optab_d* %this_optab.1, %struct.rtx_def* %127, %struct.rtx_def* %128, %struct.rtx_def* %call1050, %struct.rtx_def* %target.addr.0, i32 %bf.cast11) #6, !dbg !12476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1051, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool1052 = icmp eq %struct.rtx_def* %call1051, null, !dbg !12477
  br i1 %tobool1052, label %cond.true1053, label %cond.end1055, !dbg !12477

cond.true1053:                                    ; preds = %if.then1049
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7625, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12477
  br label %cond.end1055, !dbg !12477

cond.end1055:                                     ; preds = %if.then1049, %cond.true1053
  br i1 %12, label %cond.true1059, label %cleanup1065, !dbg !12478

cond.true1059:                                    ; preds = %cond.end1055
  %call1060 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1051, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12478
  br label %cleanup1065, !dbg !12478

cleanup1065:                                      ; preds = %land.lhs.true1042, %cond.end1007, %cond.true1059, %cond.end1055
  %cleanup.dest.slot.3 = phi i32 [ 1, %cond.end1055 ], [ 1, %cond.true1059 ], [ 0, %land.lhs.true1042 ], [ 0, %cond.end1007 ]
  %retval.7 = phi %struct.rtx_def* [ %call1051, %cond.end1055 ], [ %call1060, %cond.true1059 ], [ undef, %land.lhs.true1042 ], [ undef, %cond.end1007 ]
  %cond4 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond4, label %if.end1071, label %cleanup1072

if.end1071:                                       ; preds = %land.lhs.true938, %land.lhs.true935, %cleanup1065, %land.lhs.true971, %land.lhs.true956, %land.lhs.true941, %if.then915
  %retval.8 = phi %struct.rtx_def* [ undef, %land.lhs.true971 ], [ undef, %land.lhs.true956 ], [ undef, %land.lhs.true941 ], [ undef, %land.lhs.true938 ], [ undef, %land.lhs.true935 ], [ undef, %if.then915 ], [ %retval.7, %cleanup1065 ]
  br label %cleanup1072, !dbg !12479

cleanup1072:                                      ; preds = %cleanup1065, %if.end1071
  %cleanup.dest.slot.4 = phi i32 [ %cleanup.dest.slot.3, %cleanup1065 ], [ 0, %if.end1071 ]
  %retval.9 = phi %struct.rtx_def* [ %retval.7, %cleanup1065 ], [ %retval.8, %if.end1071 ], !dbg !12480
  %cond3 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond3, label %if.end1079, label %cleanup2431

if.end1079:                                       ; preds = %land.lhs.true912, %cleanup1072, %lor.lhs.false905
  switch i32 %modifier, label %binop [
    i32 2, label %land.lhs.true1085
    i32 4, label %land.lhs.true1085
  ], !dbg !12481

land.lhs.true1085:                                ; preds = %if.end1079, %if.end1079
  %call1086 = call i32 @really_constant_p(%union.tree_node* %7) #6, !dbg !12483
  %tobool1087 = icmp eq i32 %call1086, 0, !dbg !12483
  br i1 %tobool1087, label %if.end1123, label %land.lhs.true1088, !dbg !12484

land.lhs.true1088:                                ; preds = %land.lhs.true1085
  %call1089 = call i32 @really_constant_p(%union.tree_node* %8) #6, !dbg !12485
  %tobool1090 = icmp eq i32 %call1089, 0, !dbg !12485
  br i1 %tobool1090, label %if.end1123, label %if.then1091, !dbg !12486

if.then1091:                                      ; preds = %land.lhs.true1088
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 %modifier) #8, !dbg !12487
  %129 = bitcast %struct.rtx_def** %op1 to i32**, !dbg !12489
  %130 = load i32*, i32** %129, align 8, !dbg !12489
  %bf.load1092 = load i32, i32* %130, align 8, !dbg !12489
  %bf.clear1093 = and i32 %bf.load1092, 65535, !dbg !12489
  %cmp1094 = icmp eq i32 %bf.clear1093, 30, !dbg !12489
  %131 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %131, metadata !11972, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32* %130, metadata !11973, metadata !DIExpression()), !dbg !12087
  br i1 %cmp1094, label %if.then1096, label %if.else1113, !dbg !12492

if.then1096:                                      ; preds = %if.then1091
  %u1100 = getelementptr inbounds i32, i32* %130, i64 2, !dbg !12493
  %arrayidx1102 = bitcast i32* %u1100 to i64*, !dbg !12493
  %132 = load i64, i64* %arrayidx1102, align 8, !dbg !12493
  %sub = sub nsw i64 0, %132, !dbg !12493
  %call1103 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %131, i64 %sub) #6, !dbg !12493
  br i1 %12, label %cond.true1099, label %cleanup2431, !dbg !12493

cond.true1099:                                    ; preds = %if.then1096
  %call1104 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1103, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12493
  br label %cleanup2431, !dbg !12493

if.else1113:                                      ; preds = %if.then1091
  %.cast70 = bitcast i32* %130 to %struct.rtx_def*, !dbg !12491
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.cast70, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1117 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 50, i32 %cond, %struct.rtx_def* %131, %struct.rtx_def* %.cast70) #6, !dbg !12494
  br i1 %12, label %cond.true1116, label %cleanup2431, !dbg !12494

cond.true1116:                                    ; preds = %if.else1113
  %call1118 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1117, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12494
  br label %cleanup2431, !dbg !12494

if.end1123:                                       ; preds = %land.lhs.true1088, %land.lhs.true1085
  switch i32 %modifier, label %binop [
    i32 2, label %lor.lhs.false1129
    i32 4, label %lor.lhs.false1129
  ], !dbg !12495

lor.lhs.false1129:                                ; preds = %if.end1123, %if.end1123
  %133 = load i32, i32* @ptr_mode, align 4, !dbg !12497
  %cmp1130 = icmp eq i32 %cond, %133, !dbg !12498
  br i1 %cmp1130, label %if.end1133, label %binop, !dbg !12499

if.end1133:                                       ; preds = %lor.lhs.false1129
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* %call56, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 %modifier) #8, !dbg !12500
  %134 = bitcast %struct.rtx_def** %op1 to i32**, !dbg !12501
  %135 = load i32*, i32** %134, align 8, !dbg !12501
  %bf.load1134 = load i32, i32* %135, align 8, !dbg !12501
  %bf.clear1135 = and i32 %bf.load1134, 65535, !dbg !12501
  %cmp1136 = icmp eq i32 %bf.clear1135, 30, !dbg !12501
  br i1 %cmp1136, label %if.then1138, label %binop2, !dbg !12503

if.then1138:                                      ; preds = %if.end1133
  %136 = bitcast i32* %135 to %struct.rtx_def*, !dbg !12503
  call void @llvm.dbg.value(metadata %struct.rtx_def* %136, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1139 = call %struct.rtx_def* @negate_rtx(i32 %cond, %struct.rtx_def* %136) #6, !dbg !12504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1139, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1139, %struct.rtx_def** %op1, align 8, !dbg !12506
  %137 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12507
  call void @llvm.dbg.value(metadata %struct.rtx_def* %137, metadata !11972, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1139, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1143 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %cond, %struct.rtx_def* %137, %struct.rtx_def* %call1139) #6, !dbg !12507
  br i1 %12, label %cond.true1142, label %cleanup2431, !dbg !12507

cond.true1142:                                    ; preds = %if.then1138
  %call1144 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1143, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12507
  br label %cleanup2431, !dbg !12507

sw.bb1150:                                        ; preds = %land.end50
  %idxprom1151 = zext i32 %cond to i64, !dbg !12508
  %arrayidx1152 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1151, !dbg !12508
  %138 = load i8, i8* %arrayidx1152, align 1, !dbg !12508
  %cmp1154 = icmp eq i8 %138, 4, !dbg !12508
  br i1 %cmp1154, label %binop, label %lor.lhs.false1156, !dbg !12508

lor.lhs.false1156:                                ; preds = %sw.bb1150
  %cmp1160 = icmp eq i8 %138, 13, !dbg !12508
  br i1 %cmp1160, label %binop, label %lor.lhs.false1162, !dbg !12508

lor.lhs.false1162:                                ; preds = %lor.lhs.false1156
  %cmp1166 = icmp eq i8 %138, 6, !dbg !12508
  br i1 %cmp1166, label %binop, label %lor.lhs.false1168, !dbg !12508

lor.lhs.false1168:                                ; preds = %lor.lhs.false1162
  %cmp1172 = icmp eq i8 %138, 15, !dbg !12508
  br i1 %cmp1172, label %binop, label %lor.lhs.false1174, !dbg !12508

lor.lhs.false1174:                                ; preds = %lor.lhs.false1168
  %cmp1178 = icmp eq i8 %138, 5, !dbg !12508
  br i1 %cmp1178, label %binop, label %lor.lhs.false1180, !dbg !12508

lor.lhs.false1180:                                ; preds = %lor.lhs.false1174
  %cmp1184 = icmp eq i8 %138, 14, !dbg !12508
  br i1 %cmp1184, label %binop, label %lor.lhs.false1186, !dbg !12508

lor.lhs.false1186:                                ; preds = %lor.lhs.false1180
  %cmp1190 = icmp eq i8 %138, 7, !dbg !12508
  br i1 %cmp1190, label %binop, label %lor.lhs.false1192, !dbg !12508

lor.lhs.false1192:                                ; preds = %lor.lhs.false1186
  %cmp1196 = icmp eq i8 %138, 16, !dbg !12508
  br i1 %cmp1196, label %binop, label %if.end1199, !dbg !12510

if.end1199:                                       ; preds = %lor.lhs.false1192
  %139 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12511
  %bf.load1201 = load i64, i64* %139, align 8, !dbg !12511
  %bf.cast120353 = and i64 %bf.load1201, 65535, !dbg !12512
  %cmp1204 = icmp eq i64 %bf.cast120353, 23, !dbg !12512
  %spec.select11 = select i1 %cmp1204, %union.tree_node* %8, %union.tree_node* %7, !dbg !12513
  %spec.select12 = select i1 %cmp1204, %union.tree_node* %7, %union.tree_node* %8, !dbg !12513
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select12, metadata !11993, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select11, metadata !11992, metadata !DIExpression()), !dbg !12087
  %cmp1208 = icmp eq i32 %modifier, 2, !dbg !12514
  %140 = load i32, i32* @ptr_mode, align 4, !dbg !12515
  %cmp1211 = icmp eq i32 %cond, %140, !dbg !12516
  %or.cond13 = and i1 %cmp1208, %cmp1211, !dbg !12517
  br i1 %or.cond13, label %land.lhs.true1213, label %if.end1290, !dbg !12517

land.lhs.true1213:                                ; preds = %if.end1199
  %call1214 = tail call i32 @host_integerp(%union.tree_node* %spec.select12, i32 0) #6, !dbg !12518
  %tobool1215 = icmp eq i32 %call1214, 0, !dbg !12518
  br i1 %tobool1215, label %if.end1290, label %if.then1216, !dbg !12519

if.then1216:                                      ; preds = %land.lhs.true1213
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select12, metadata !12050, metadata !DIExpression()), !dbg !12520
  %call1217 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %spec.select11, %struct.rtx_def* %call56, i32 0, i32 2) #8, !dbg !12521
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1217, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1217, %struct.rtx_def** %op0, align 8, !dbg !12522
  %.cast65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1217, i64 0, i32 0, !dbg !12523
  %bf.load1218 = load i32, i32* %.cast65, align 8, !dbg !12523
  %bf.clear1219 = and i32 %bf.load1218, 65535, !dbg !12523
  %cmp1220 = icmp eq i32 %bf.clear1219, 37, !dbg !12523
  br i1 %cmp1220, label %if.end1224, label %if.then1222, !dbg !12525

if.then1222:                                      ; preds = %if.then1216
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1217, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call1223 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call1217, %struct.rtx_def* null) #8, !dbg !12526
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1223, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1223, %struct.rtx_def** %op0, align 8, !dbg !12527
  %141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1223, i64 0, i32 0, !dbg !12528
  %bf.load1225.pre = load i32, i32* %141, align 8, !dbg !12529
  %.pre128 = and i32 %bf.load1225.pre, 65535, !dbg !12529
  br label %if.end1224, !dbg !12528

if.end1224:                                       ; preds = %if.then1222, %if.then1216
  %bf.clear1226.pre-phi = phi i32 [ %.pre128, %if.then1222 ], [ %bf.clear1219, %if.then1216 ], !dbg !12529
  %142 = phi %struct.rtx_def* [ %call1223, %if.then1222 ], [ %call1217, %if.then1216 ]
  %cmp1227 = icmp eq i32 %bf.clear1226.pre-phi, 37, !dbg !12529
  br i1 %cmp1227, label %if.end1231, label %if.then1229, !dbg !12531

if.then1229:                                      ; preds = %if.end1224
  call void @llvm.dbg.value(metadata %struct.rtx_def* %142, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call1230 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %cond, %struct.rtx_def* %142) #6, !dbg !12532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1230, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1230, %struct.rtx_def** %op0, align 8, !dbg !12533
  br label %if.end1231, !dbg !12534

if.end1231:                                       ; preds = %if.then1229, %if.end1224
  %143 = phi %struct.rtx_def* [ %call1230, %if.then1229 ], [ %142, %if.end1224 ], !dbg !12535
  call void @llvm.dbg.value(metadata %struct.rtx_def* %143, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call1235 = tail call i64 @tree_low_cst(%union.tree_node* %spec.select12, i32 0) #6, !dbg !12535
  %type1237 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12535
  %144 = bitcast %union.tree_node** %type1237 to i64**, !dbg !12535
  %145 = load i64*, i64** %144, align 8, !dbg !12535
  %bf.load1239 = load i64, i64* %145, align 8, !dbg !12535
  %bf.cast124166 = and i64 %bf.load1239, 65535, !dbg !12535
  %cmp1242 = icmp eq i64 %bf.cast124166, 14, !dbg !12535
  %.cast67 = bitcast i64* %145 to %union.tree_node*, !dbg !12535
  br i1 %12, label %cond.true1234, label %cond.false1261, !dbg !12535

cond.true1234:                                    ; preds = %if.end1231
  br i1 %cmp1242, label %cond.true1244, label %cond.false1248, !dbg !12535

cond.true1244:                                    ; preds = %cond.true1234
  %call1247 = tail call i32 @vector_type_mode(%union.tree_node* %.cast67) #6, !dbg !12535
  br label %cond.end1256, !dbg !12535

cond.false1248:                                   ; preds = %cond.true1234
  %type1251 = bitcast i64* %145 to %struct.tree_type*, !dbg !12535
  %mode1252 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1251, i64 0, i32 6, !dbg !12535
  %bf.load1253 = load i32, i32* %mode1252, align 4, !dbg !12535
  %bf.lshr1254 = lshr i32 %bf.load1253, 16, !dbg !12535
  %bf.clear1255 = and i32 %bf.lshr1254, 255, !dbg !12535
  br label %cond.end1256, !dbg !12535

cond.end1256:                                     ; preds = %cond.false1248, %cond.true1244
  %cond1257 = phi i32 [ %call1247, %cond.true1244 ], [ %bf.clear1255, %cond.false1248 ], !dbg !12535
  %call1258 = tail call %struct.rtx_def* @gen_int_mode(i64 %call1235, i32 %cond1257) #6, !dbg !12535
  %call1259 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %143, %struct.rtx_def* %call1258) #6, !dbg !12535
  %call1260 = tail call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1259, %struct.rtx_def* %target.addr.0, %union.tree_node* %4) #8, !dbg !12535
  br label %cleanup2431, !dbg !12535

cond.false1261:                                   ; preds = %if.end1231
  br i1 %cmp1242, label %cond.true1271, label %cond.false1275, !dbg !12535

cond.true1271:                                    ; preds = %cond.false1261
  %call1274 = tail call i32 @vector_type_mode(%union.tree_node* %.cast67) #6, !dbg !12535
  br label %cond.end1283, !dbg !12535

cond.false1275:                                   ; preds = %cond.false1261
  %type1278 = bitcast i64* %145 to %struct.tree_type*, !dbg !12535
  %mode1279 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1278, i64 0, i32 6, !dbg !12535
  %bf.load1280 = load i32, i32* %mode1279, align 4, !dbg !12535
  %bf.lshr1281 = lshr i32 %bf.load1280, 16, !dbg !12535
  %bf.clear1282 = and i32 %bf.lshr1281, 255, !dbg !12535
  br label %cond.end1283, !dbg !12535

cond.end1283:                                     ; preds = %cond.false1275, %cond.true1271
  %cond1284 = phi i32 [ %call1274, %cond.true1271 ], [ %bf.clear1282, %cond.false1275 ], !dbg !12535
  %call1285 = tail call %struct.rtx_def* @gen_int_mode(i64 %call1235, i32 %cond1284) #6, !dbg !12535
  %call1286 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 %cond, %struct.rtx_def* %143, %struct.rtx_def* %call1285) #6, !dbg !12535
  br label %cleanup2431, !dbg !12535

if.end1290:                                       ; preds = %land.lhs.true1213, %if.end1199
  %spec.select14 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12536
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select14, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select11, metadata !11984, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select12, metadata !11985, metadata !DIExpression()), !dbg !12087
  %call1295 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %spec.select11, i32 116) #8, !dbg !12537
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1295, metadata !11987, metadata !DIExpression()), !dbg !12087
  %call1296 = tail call fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %spec.select12, i32 116) #8, !dbg !12538
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1296, metadata !11988, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11990, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11989, metadata !DIExpression()), !dbg !12087
  %tobool1297 = icmp eq %union.gimple_statement_d* %call1295, null, !dbg !12539
  br i1 %tobool1297, label %if.else1413, label %land.lhs.true1298, !dbg !12540

land.lhs.true1298:                                ; preds = %if.end1290
  %call1299 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call1295) #8, !dbg !12541
  call void @llvm.dbg.value(metadata %union.tree_node* %call1299, metadata !11989, metadata !DIExpression()), !dbg !12087
  %tobool1300 = icmp ne %union.tree_node* %call1299, null, !dbg !12542
  %tobool1302 = icmp ne %union.gimple_statement_d* %call1296, null, !dbg !12543
  %or.cond15 = and i1 %tobool1300, %tobool1302, !dbg !12544
  br i1 %or.cond15, label %land.lhs.true1303, label %if.else1413, !dbg !12544

land.lhs.true1303:                                ; preds = %land.lhs.true1298
  %call1304 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call1296) #8, !dbg !12545
  call void @llvm.dbg.value(metadata %union.tree_node* %call1304, metadata !11990, metadata !DIExpression()), !dbg !12087
  %tobool1305 = icmp eq %union.tree_node* %call1304, null, !dbg !12546
  br i1 %tobool1305, label %if.else1413, label %land.lhs.true1306, !dbg !12547

land.lhs.true1306:                                ; preds = %land.lhs.true1303
  %bf.load1308 = load i64, i64* %5, align 8, !dbg !12548
  %bf.cast131061 = and i64 %bf.load1308, 65535, !dbg !12549
  %cmp1311 = icmp eq i64 %bf.cast131061, 8, !dbg !12549
  br i1 %cmp1311, label %land.lhs.true1313, label %if.else1413, !dbg !12550

land.lhs.true1313:                                ; preds = %land.lhs.true1306
  %type1315 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12551
  %146 = bitcast %union.tree_node** %type1315 to %struct.tree_type**, !dbg !12551
  %147 = load %struct.tree_type*, %struct.tree_type** %146, align 8, !dbg !12551
  %precision1317 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %147, i64 0, i32 6, !dbg !12551
  %bf.load1318 = load i32, i32* %precision1317, align 4, !dbg !12551
  %bf.clear1319 = and i32 %bf.load1318, 1023, !dbg !12551
  %type1321 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12552
  %148 = bitcast %union.tree_node** %type1321 to %struct.tree_type**, !dbg !12552
  %149 = load %struct.tree_type*, %struct.tree_type** %148, align 8, !dbg !12552
  %precision1323 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %149, i64 0, i32 6, !dbg !12552
  %bf.load1324 = load i32, i32* %precision1323, align 4, !dbg !12552
  %bf.clear1325 = and i32 %bf.load1324, 1023, !dbg !12552
  %cmp1326 = icmp ult i32 %bf.clear1319, %bf.clear1325, !dbg !12553
  %150 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %147, i64 0, i32 0, i32 0, i32 0, !dbg !12554
  br i1 %cmp1326, label %land.lhs.true1328, label %if.else1413, !dbg !12554

land.lhs.true1328:                                ; preds = %land.lhs.true1313
  %type1336 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1304, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12555
  %151 = bitcast %union.tree_node** %type1336 to %struct.tree_type**, !dbg !12555
  %152 = load %struct.tree_type*, %struct.tree_type** %151, align 8, !dbg !12555
  %precision1338 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %152, i64 0, i32 6, !dbg !12555
  %bf.load1339 = load i32, i32* %precision1338, align 4, !dbg !12555
  %153 = xor i32 %bf.load1318, %bf.load1339, !dbg !12556
  %154 = and i32 %153, 1023, !dbg !12556
  %cmp1341 = icmp eq i32 %154, 0, !dbg !12556
  br i1 %cmp1341, label %land.lhs.true1343, label %if.else1413, !dbg !12557

land.lhs.true1343:                                ; preds = %land.lhs.true1328
  %155 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %152, i64 0, i32 0, i32 0, i32 0, !dbg !12557
  %156 = bitcast %union.tree_node** %type1315 to i64**, !dbg !12558
  %bf.load1347 = load i64, i64* %150, align 8, !dbg !12558
  %bf.load1354 = load i64, i64* %155, align 8, !dbg !12559
  %bf.lshr1348107 = xor i64 %bf.load1347, %bf.load1354, !dbg !12560
  %157 = and i64 %bf.lshr1348107, 2097152, !dbg !12560
  %cmp1358 = icmp eq i64 %157, 0, !dbg !12560
  br i1 %cmp1358, label %if.else1413, label %if.then1360, !dbg !12561

if.then1360:                                      ; preds = %land.lhs.true1343
  %bf.cast136762 = and i64 %bf.load1347, 65535, !dbg !12562
  %cmp1368 = icmp eq i64 %bf.cast136762, 14, !dbg !12562
  br i1 %cmp1368, label %cond.true1370, label %cond.false1374, !dbg !12562

cond.true1370:                                    ; preds = %if.then1360
  %.cast63 = bitcast %struct.tree_type* %147 to %union.tree_node*, !dbg !12562
  %call1373 = tail call i32 @vector_type_mode(%union.tree_node* %.cast63) #6, !dbg !12562
  br label %cond.end1382, !dbg !12562

cond.false1374:                                   ; preds = %if.then1360
  %bf.lshr1380 = lshr i32 %bf.load1318, 16, !dbg !12562
  %bf.clear1381 = and i32 %bf.lshr1380, 255, !dbg !12562
  br label %cond.end1382, !dbg !12562

cond.end1382:                                     ; preds = %cond.false1374, %cond.true1370
  %cond1383 = phi i32 [ %call1373, %cond.true1370 ], [ %bf.clear1381, %cond.false1374 ], !dbg !12562
  call void @llvm.dbg.value(metadata i32 %cond1383, metadata !12053, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 22), metadata !11980, metadata !DIExpression()), !dbg !12087
  %idxprom1384 = zext i32 %cond1383 to i64, !dbg !12564
  %arrayidx1385 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom1384, !dbg !12564
  %158 = load i8, i8* %arrayidx1385, align 1, !dbg !12564
  %conv1386 = zext i8 %158 to i32, !dbg !12564
  %cmp1387 = icmp eq i32 %cond, %conv1386, !dbg !12566
  br i1 %cmp1387, label %if.then1389, label %cleanup1410, !dbg !12567

if.then1389:                                      ; preds = %cond.end1382
  %idxprom1391 = sext i32 %cond to i64, !dbg !12568
  %insn_code1393 = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 22, i32 4, i64 %idxprom1391, i32 0, !dbg !12571
  %159 = load i32, i32* %insn_code1393, align 4, !dbg !12571
  %cmp1394 = icmp eq i32 %159, 2956, !dbg !12572
  br i1 %cmp1394, label %cleanup1410, label %if.then1396, !dbg !12573

if.then1396:                                      ; preds = %if.then1389
  %160 = load i64*, i64** %156, align 8, !dbg !12574
  %bf.load1400 = load i64, i64* %160, align 8, !dbg !12574
  %bf.cast140364 = and i64 %bf.load1400, 2097152, !dbg !12574
  %tobool1404 = icmp eq i64 %bf.cast140364, 0, !dbg !12574
  br i1 %tobool1404, label %if.else1406, label %if.then1405, !dbg !12577

if.then1405:                                      ; preds = %if.then1396
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* nonnull %call1299, %union.tree_node* nonnull %call1304, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12578
  br label %cleanup1410, !dbg !12578

if.else1406:                                      ; preds = %if.then1396
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* nonnull %call1299, %union.tree_node* nonnull %call1304, %struct.rtx_def* null, %struct.rtx_def** nonnull %op1, %struct.rtx_def** nonnull %op0, i32 0) #8, !dbg !12579
  br label %cleanup1410

cleanup1410:                                      ; preds = %if.then1389, %cond.end1382, %if.then1405, %if.else1406
  %cleanup.dest.slot.5 = phi i32 [ 5, %if.else1406 ], [ 5, %if.then1405 ], [ 0, %if.then1389 ], [ 0, %cond.end1382 ]
  switch i32 %cleanup.dest.slot.5, label %cleanup2431 [
    i32 0, label %if.end1630
    i32 5, label %binop3
  ]

if.else1413:                                      ; preds = %land.lhs.true1343, %land.lhs.true1303, %if.end1290, %land.lhs.true1328, %land.lhs.true1313, %land.lhs.true1306, %land.lhs.true1298
  %top0.0 = phi %union.tree_node* [ %call1299, %land.lhs.true1343 ], [ %call1299, %land.lhs.true1328 ], [ %call1299, %land.lhs.true1313 ], [ %call1299, %land.lhs.true1306 ], [ %call1299, %land.lhs.true1303 ], [ %call1299, %land.lhs.true1298 ], [ null, %if.end1290 ], !dbg !12123
  %top1.0 = phi %union.tree_node* [ %call1304, %land.lhs.true1343 ], [ %call1304, %land.lhs.true1328 ], [ %call1304, %land.lhs.true1313 ], [ %call1304, %land.lhs.true1306 ], [ null, %land.lhs.true1303 ], [ null, %land.lhs.true1298 ], [ null, %if.end1290 ], !dbg !12123
  call void @llvm.dbg.value(metadata %union.tree_node* %top1.0, metadata !11990, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %union.tree_node* %top0.0, metadata !11989, metadata !DIExpression()), !dbg !12087
  %tobool1414 = icmp eq %union.tree_node* %top0.0, null, !dbg !12580
  br i1 %tobool1414, label %if.end1630, label %land.lhs.true1415, !dbg !12581

land.lhs.true1415:                                ; preds = %if.else1413
  %bf.load1417 = load i64, i64* %5, align 8, !dbg !12582
  %bf.cast141954 = and i64 %bf.load1417, 65535, !dbg !12583
  %cmp1420 = icmp eq i64 %bf.cast141954, 8, !dbg !12583
  br i1 %cmp1420, label %land.lhs.true1422, label %if.end1630, !dbg !12584

land.lhs.true1422:                                ; preds = %land.lhs.true1415
  %type1424 = getelementptr inbounds %union.tree_node, %union.tree_node* %top0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12585
  %161 = bitcast %union.tree_node** %type1424 to %struct.tree_type**, !dbg !12585
  %162 = load %struct.tree_type*, %struct.tree_type** %161, align 8, !dbg !12585
  %precision1426 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %162, i64 0, i32 6, !dbg !12585
  %bf.load1427 = load i32, i32* %precision1426, align 4, !dbg !12585
  %bf.clear1428 = and i32 %bf.load1427, 1023, !dbg !12585
  %type1430 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12586
  %163 = bitcast %union.tree_node** %type1430 to %struct.tree_type**, !dbg !12586
  %164 = load %struct.tree_type*, %struct.tree_type** %163, align 8, !dbg !12586
  %precision1432 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %164, i64 0, i32 6, !dbg !12586
  %bf.load1433 = load i32, i32* %precision1432, align 4, !dbg !12586
  %bf.clear1434 = and i32 %bf.load1433, 1023, !dbg !12586
  %cmp1435 = icmp ult i32 %bf.clear1428, %bf.clear1434, !dbg !12587
  %165 = bitcast %struct.tree_type* %162 to %union.tree_node*, !dbg !12588
  br i1 %cmp1435, label %land.lhs.true1437, label %if.end1630, !dbg !12588

land.lhs.true1437:                                ; preds = %land.lhs.true1422
  %166 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12589
  %bf.load1439 = load i64, i64* %166, align 8, !dbg !12589
  %bf.cast144155 = and i64 %bf.load1439, 65535, !dbg !12590
  %cmp1442 = icmp eq i64 %bf.cast144155, 23, !dbg !12590
  br i1 %cmp1442, label %land.lhs.true1444, label %lor.lhs.false1488, !dbg !12591

land.lhs.true1444:                                ; preds = %land.lhs.true1437
  %call1447 = tail call i32 @int_fits_type_p(%union.tree_node* %spec.select12, %union.tree_node* %165) #6, !dbg !12592
  %tobool1448 = icmp eq i32 %call1447, 0, !dbg !12592
  br i1 %tobool1448, label %lor.lhs.false1488, label %land.lhs.true1449, !dbg !12593

land.lhs.true1449:                                ; preds = %land.lhs.true1444
  %type1451 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12594
  %167 = bitcast %union.tree_node** %type1451 to i64**, !dbg !12594
  %168 = load i64*, i64** %167, align 8, !dbg !12594
  %bf.load1453 = load i64, i64* %168, align 8, !dbg !12594
  %bf.cast145559 = and i64 %bf.load1453, 65535, !dbg !12594
  %cmp1456 = icmp eq i64 %bf.cast145559, 14, !dbg !12594
  br i1 %cmp1456, label %cond.true1458, label %cond.false1462, !dbg !12594

cond.true1458:                                    ; preds = %land.lhs.true1449
  %.cast60 = bitcast i64* %168 to %union.tree_node*, !dbg !12594
  %call1461 = tail call i32 @vector_type_mode(%union.tree_node* %.cast60) #6, !dbg !12594
  br label %cond.end1470, !dbg !12594

cond.false1462:                                   ; preds = %land.lhs.true1449
  %type1465 = bitcast i64* %168 to %struct.tree_type*, !dbg !12594
  %mode1466 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1465, i64 0, i32 6, !dbg !12594
  %bf.load1467 = load i32, i32* %mode1466, align 4, !dbg !12594
  %bf.lshr1468 = lshr i32 %bf.load1467, 16, !dbg !12594
  %bf.clear1469 = and i32 %bf.lshr1468, 255, !dbg !12594
  br label %cond.end1470, !dbg !12594

cond.end1470:                                     ; preds = %cond.false1462, %cond.true1458
  %cond1471 = phi i32 [ %call1461, %cond.true1458 ], [ %bf.clear1469, %cond.false1462 ], !dbg !12594
  %idxprom1472 = zext i32 %cond1471 to i64, !dbg !12594
  %arrayidx1473 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1472, !dbg !12594
  %169 = load i8, i8* %arrayidx1473, align 1, !dbg !12594
  %cmp1479 = icmp ugt i8 %169, 8, !dbg !12595
  br i1 %cmp1479, label %if.then1522, label %lor.lhs.false1481, !dbg !12596

lor.lhs.false1481:                                ; preds = %cond.end1470
  %int_cst1483 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12597
  %low1484 = bitcast i32* %int_cst1483 to i64*, !dbg !12597
  %170 = load i64, i64* %low1484, align 8, !dbg !12597
  %call1485 = tail call i32 @exact_log2(i64 %170) #6, !dbg !12598
  %cmp1486 = icmp slt i32 %call1485, 0, !dbg !12599
  br i1 %cmp1486, label %if.then1522, label %lor.lhs.false1488, !dbg !12600

lor.lhs.false1488:                                ; preds = %land.lhs.true1444, %lor.lhs.false1481, %land.lhs.true1437
  %tobool1489 = icmp eq %union.tree_node* %top1.0, null, !dbg !12601
  br i1 %tobool1489, label %if.end1630, label %land.lhs.true1490, !dbg !12602

land.lhs.true1490:                                ; preds = %lor.lhs.false1488
  %type1492 = getelementptr inbounds %union.tree_node, %union.tree_node* %top1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12603
  %171 = bitcast %union.tree_node** %type1492 to %struct.tree_type**, !dbg !12603
  %172 = load %struct.tree_type*, %struct.tree_type** %171, align 8, !dbg !12603
  %precision1494 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %172, i64 0, i32 6, !dbg !12603
  %bf.load1495 = load i32, i32* %precision1494, align 4, !dbg !12603
  %173 = load %struct.tree_type*, %struct.tree_type** %161, align 8, !dbg !12604
  %precision1500 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %173, i64 0, i32 6, !dbg !12604
  %bf.load1501 = load i32, i32* %precision1500, align 4, !dbg !12604
  %174 = xor i32 %bf.load1495, %bf.load1501, !dbg !12605
  %175 = and i32 %174, 1023, !dbg !12605
  %cmp1503 = icmp eq i32 %175, 0, !dbg !12605
  br i1 %cmp1503, label %land.lhs.true1505, label %if.end1630, !dbg !12606

land.lhs.true1505:                                ; preds = %land.lhs.true1490
  %176 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %173, i64 0, i32 0, i32 0, i32 0, !dbg !12606
  %177 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %172, i64 0, i32 0, i32 0, i32 0, !dbg !12606
  %bf.load1509 = load i64, i64* %177, align 8, !dbg !12607
  %bf.load1516 = load i64, i64* %176, align 8, !dbg !12608
  %bf.lshr1510106 = xor i64 %bf.load1509, %bf.load1516, !dbg !12609
  %178 = and i64 %bf.lshr1510106, 2097152, !dbg !12609
  %cmp1520 = icmp eq i64 %178, 0, !dbg !12609
  br i1 %cmp1520, label %if.then1522, label %if.end1630, !dbg !12610

if.then1522:                                      ; preds = %land.lhs.true1505, %lor.lhs.false1481, %cond.end1470
  %179 = load %union.tree_node*, %union.tree_node** %type1424, align 8, !dbg !12611
  call void @llvm.dbg.value(metadata %union.tree_node* %179, metadata !12056, metadata !DIExpression()), !dbg !12612
  %180 = getelementptr inbounds %union.tree_node, %union.tree_node* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12613
  %bf.load1528 = load i64, i64* %180, align 8, !dbg !12613
  %bf.cast153056 = and i64 %bf.load1528, 65535, !dbg !12613
  %cmp1531 = icmp eq i64 %bf.cast153056, 14, !dbg !12613
  br i1 %cmp1531, label %cond.true1533, label %cond.false1535, !dbg !12613

cond.true1533:                                    ; preds = %if.then1522
  %call1534 = tail call i32 @vector_type_mode(%union.tree_node* %179) #6, !dbg !12613
  %bf.load1545.pre = load i64, i64* %180, align 8, !dbg !12614
  br label %cond.end1541, !dbg !12613

cond.false1535:                                   ; preds = %if.then1522
  %type1536 = bitcast %union.tree_node* %179 to %struct.tree_type*, !dbg !12613
  %mode1537 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1536, i64 0, i32 6, !dbg !12613
  %bf.load1538 = load i32, i32* %mode1537, align 4, !dbg !12613
  %bf.lshr1539 = lshr i32 %bf.load1538, 16, !dbg !12613
  %bf.clear1540 = and i32 %bf.lshr1539, 255, !dbg !12613
  br label %cond.end1541, !dbg !12613

cond.end1541:                                     ; preds = %cond.false1535, %cond.true1533
  %bf.load1545 = phi i64 [ %bf.load1545.pre, %cond.true1533 ], [ %bf.load1528, %cond.false1535 ], !dbg !12614
  %cond1542 = phi i32 [ %call1534, %cond.true1533 ], [ %bf.clear1540, %cond.false1535 ], !dbg !12613
  call void @llvm.dbg.value(metadata i32 %cond1542, metadata !12059, metadata !DIExpression()), !dbg !12612
  %bf.lshr1546 = lshr i64 %bf.load1545, 21, !dbg !12614
  %181 = trunc i64 %bf.lshr1546 to i8, !dbg !12614
  %bf.cast1548 = and i8 %181, 1, !dbg !12614
  call void @llvm.dbg.value(metadata i8 %bf.cast1548, metadata !12060, metadata !DIExpression()), !dbg !12612
  %tobool1551 = icmp eq i8 %bf.cast1548, 0, !dbg !12615
  %cond1552 = select i1 %tobool1551, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20), !dbg !12615
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond1552, metadata !12061, metadata !DIExpression()), !dbg !12612
  %cond1555 = select i1 %tobool1551, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 20), %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 21), !dbg !12616
  call void @llvm.dbg.value(metadata %struct.optab_d* %cond1555, metadata !11980, metadata !DIExpression()), !dbg !12087
  %idxprom1556 = zext i32 %cond1542 to i64, !dbg !12617
  %arrayidx1557 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_2xwider, i64 0, i64 %idxprom1556, !dbg !12617
  %182 = load i8, i8* %arrayidx1557, align 1, !dbg !12617
  %conv1558 = zext i8 %182 to i32, !dbg !12617
  %cmp1559 = icmp eq i32 %cond, %conv1558, !dbg !12618
  br i1 %cmp1559, label %if.then1561, label %cleanup1623, !dbg !12619

if.then1561:                                      ; preds = %cond.end1541
  %idxprom1563 = sext i32 %cond to i64, !dbg !12620
  %insn_code1565 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %cond1555, i64 0, i32 4, i64 %idxprom1563, i32 0, !dbg !12621
  %183 = load i32, i32* %insn_code1565, align 4, !dbg !12621
  %cmp1566 = icmp eq i32 %183, 2956, !dbg !12622
  br i1 %cmp1566, label %if.else1578, label %if.then1568, !dbg !12623

if.then1568:                                      ; preds = %if.then1561
  %bf.load1570 = load i64, i64* %166, align 8, !dbg !12624
  %bf.cast157258 = and i64 %bf.load1570, 65535, !dbg !12627
  %cmp1573 = icmp eq i64 %bf.cast157258, 23, !dbg !12627
  br i1 %cmp1573, label %if.then1575, label %if.else1576, !dbg !12628

if.then1575:                                      ; preds = %if.then1568
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* nonnull %top0.0, %union.tree_node* %spec.select12, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12629
  br label %cleanup1623, !dbg !12629

if.else1576:                                      ; preds = %if.then1568
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* nonnull %top0.0, %union.tree_node* %top1.0, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12630
  br label %cleanup1623

if.else1578:                                      ; preds = %if.then1561
  %insn_code1582 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %cond1552, i64 0, i32 4, i64 %idxprom1563, i32 0, !dbg !12631
  %184 = load i32, i32* %insn_code1582, align 4, !dbg !12631
  %cmp1583 = icmp ne i32 %184, 2956, !dbg !12632
  %185 = load i32, i32* @word_mode, align 4, !dbg !12633
  %cmp1586 = icmp eq i32 %cond1542, %185, !dbg !12634
  %or.cond16 = and i1 %cmp1583, %cmp1586, !dbg !12635
  br i1 %or.cond16, label %if.then1588, label %cleanup1623, !dbg !12635

if.then1588:                                      ; preds = %if.else1578
  %call1589 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* nonnull %top0.0) #8, !dbg !12636
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1589, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1589, %struct.rtx_def** %op0, align 8, !dbg !12637
  %bf.load1591 = load i64, i64* %166, align 8, !dbg !12638
  %bf.cast159357 = and i64 %bf.load1591, 65535, !dbg !12640
  %cmp1594 = icmp eq i64 %bf.cast159357, 23, !dbg !12640
  br i1 %cmp1594, label %if.then1596, label %if.else1599, !dbg !12641

if.then1596:                                      ; preds = %if.then1588
  %call1597 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %spec.select12) #8, !dbg !12642
  %call1598 = tail call %struct.rtx_def* @convert_modes(i32 %cond1542, i32 %cond, %struct.rtx_def* %call1597, i32 %bf.cast11) #8, !dbg !12643
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1598, metadata !11973, metadata !DIExpression()), !dbg !12087
  br label %if.end1601, !dbg !12644

if.else1599:                                      ; preds = %if.then1588
  %call1600 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %top1.0) #8, !dbg !12645
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1600, metadata !11973, metadata !DIExpression()), !dbg !12087
  br label %if.end1601

if.end1601:                                       ; preds = %if.else1599, %if.then1596
  %storemerge = phi %struct.rtx_def* [ %call1600, %if.else1599 ], [ %call1598, %if.then1596 ], !dbg !12646
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %op1, align 8, !dbg !12646
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1589, metadata !11972, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %storemerge, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1602 = tail call %struct.rtx_def* @expand_binop(i32 %cond, %struct.optab_d* %cond1552, %struct.rtx_def* %call1589, %struct.rtx_def* %storemerge, %struct.rtx_def* %spec.select14, i32 %bf.cast11, i32 3) #6, !dbg !12647
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1602, metadata !11975, metadata !DIExpression()), !dbg !12087
  %call1603 = tail call %struct.rtx_def* @gen_highpart(i32 %cond1542, %struct.rtx_def* %call1602) #6, !dbg !12648
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1603, metadata !12068, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1589, metadata !11972, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %storemerge, metadata !11973, metadata !DIExpression()), !dbg !12087
  %conv1604 = zext i8 %bf.cast1548 to i32, !dbg !12650
  %call1605 = tail call %struct.rtx_def* @expand_mult_highpart_adjust(i32 %cond1542, %struct.rtx_def* %call1603, %struct.rtx_def* %call1589, %struct.rtx_def* %storemerge, %struct.rtx_def* %call1603, i32 %conv1604) #6, !dbg !12651
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1605, metadata !12062, metadata !DIExpression()), !dbg !12649
  %cmp1606 = icmp eq %struct.rtx_def* %call1605, %call1603, !dbg !12652
  br i1 %cmp1606, label %if.end1610, label %if.then1608, !dbg !12654

if.then1608:                                      ; preds = %if.end1601
  %call1609 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1603, %struct.rtx_def* %call1605) #8, !dbg !12655
  br label %if.end1610, !dbg !12655

if.end1610:                                       ; preds = %if.end1601, %if.then1608
  br i1 %12, label %cond.true1613, label %cleanup1623, !dbg !12656

cond.true1613:                                    ; preds = %if.end1610
  %call1614 = tail call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1602, %struct.rtx_def* %spec.select14, %union.tree_node* %4) #8, !dbg !12656
  br label %cleanup1623, !dbg !12656

cleanup1623:                                      ; preds = %cond.end1541, %if.else1578, %cond.true1613, %if.end1610, %if.then1575, %if.else1576
  %cleanup.dest.slot.6 = phi i32 [ 5, %if.else1576 ], [ 5, %if.then1575 ], [ 1, %if.end1610 ], [ 1, %cond.true1613 ], [ 0, %if.else1578 ], [ 0, %cond.end1541 ]
  %retval.10 = phi %struct.rtx_def* [ undef, %if.else1576 ], [ undef, %if.then1575 ], [ %call1602, %if.end1610 ], [ %call1614, %cond.true1613 ], [ undef, %if.else1578 ], [ undef, %cond.end1541 ]
  switch i32 %cleanup.dest.slot.6, label %cleanup2431 [
    i32 0, label %if.end1630
    i32 5, label %binop3
  ]

if.end1630:                                       ; preds = %lor.lhs.false1488, %if.else1413, %land.lhs.true1415, %land.lhs.true1422, %land.lhs.true1490, %land.lhs.true1505, %cleanup1623, %cleanup1410
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %spec.select11, %union.tree_node* %spec.select12, %struct.rtx_def* %call56, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12657
  %186 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12658
  call void @llvm.dbg.value(metadata %struct.rtx_def* %186, metadata !11972, metadata !DIExpression()), !dbg !12087
  %187 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12658
  call void @llvm.dbg.value(metadata %struct.rtx_def* %187, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1634 = call %struct.rtx_def* @expand_mult(i32 %cond, %struct.rtx_def* %186, %struct.rtx_def* %187, %struct.rtx_def* %spec.select14, i32 %bf.cast11) #6, !dbg !12658
  br i1 %12, label %cond.true1633, label %cleanup2431, !dbg !12658

cond.true1633:                                    ; preds = %if.end1630
  %call1635 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1634, %struct.rtx_def* %spec.select14, %union.tree_node* %4) #8, !dbg !12658
  br label %cleanup2431, !dbg !12658

sw.bb1640:                                        ; preds = %land.end50, %land.end50, %land.end50, %land.end50, %land.end50
  %idxprom1641 = zext i32 %cond to i64, !dbg !12659
  %arrayidx1642 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1641, !dbg !12659
  %188 = load i8, i8* %arrayidx1642, align 1, !dbg !12659
  %cmp1644 = icmp eq i8 %188, 4, !dbg !12659
  br i1 %cmp1644, label %binop, label %lor.lhs.false1646, !dbg !12659

lor.lhs.false1646:                                ; preds = %sw.bb1640
  %cmp1650 = icmp eq i8 %188, 13, !dbg !12659
  br i1 %cmp1650, label %binop, label %lor.lhs.false1652, !dbg !12659

lor.lhs.false1652:                                ; preds = %lor.lhs.false1646
  %cmp1656 = icmp eq i8 %188, 6, !dbg !12659
  br i1 %cmp1656, label %binop, label %lor.lhs.false1658, !dbg !12659

lor.lhs.false1658:                                ; preds = %lor.lhs.false1652
  %cmp1662 = icmp eq i8 %188, 15, !dbg !12659
  br i1 %cmp1662, label %binop, label %lor.lhs.false1664, !dbg !12659

lor.lhs.false1664:                                ; preds = %lor.lhs.false1658
  %cmp1668 = icmp eq i8 %188, 5, !dbg !12659
  br i1 %cmp1668, label %binop, label %lor.lhs.false1670, !dbg !12659

lor.lhs.false1670:                                ; preds = %lor.lhs.false1664
  %cmp1674 = icmp eq i8 %188, 14, !dbg !12659
  br i1 %cmp1674, label %binop, label %lor.lhs.false1676, !dbg !12659

lor.lhs.false1676:                                ; preds = %lor.lhs.false1670
  %cmp1680 = icmp eq i8 %188, 7, !dbg !12659
  br i1 %cmp1680, label %binop, label %lor.lhs.false1682, !dbg !12659

lor.lhs.false1682:                                ; preds = %lor.lhs.false1676
  %cmp1686 = icmp eq i8 %188, 16, !dbg !12659
  br i1 %cmp1686, label %binop, label %if.end1689, !dbg !12661

if.end1689:                                       ; preds = %lor.lhs.false1682
  %spec.select17 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select17, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* %call56, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12663
  %189 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %189, metadata !11972, metadata !DIExpression()), !dbg !12087
  %190 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12665
  call void @llvm.dbg.value(metadata %struct.rtx_def* %190, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1694 = call %struct.rtx_def* @expand_divmod(i32 0, i32 %2, i32 %cond, %struct.rtx_def* %189, %struct.rtx_def* %190, %struct.rtx_def* %spec.select17, i32 %bf.cast11) #6, !dbg !12666
  br label %cleanup2431, !dbg !12667

sw.bb1696:                                        ; preds = %land.end50, %land.end50, %land.end50, %land.end50
  %spec.select18 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12668
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select18, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* %call56, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12669
  %191 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12670
  call void @llvm.dbg.value(metadata %struct.rtx_def* %191, metadata !11972, metadata !DIExpression()), !dbg !12087
  %192 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12671
  call void @llvm.dbg.value(metadata %struct.rtx_def* %192, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1701 = call %struct.rtx_def* @expand_divmod(i32 1, i32 %2, i32 %cond, %struct.rtx_def* %191, %struct.rtx_def* %192, %struct.rtx_def* %spec.select18, i32 %bf.cast11) #6, !dbg !12672
  br label %cleanup2431, !dbg !12673

sw.bb1702:                                        ; preds = %land.end50
  %call1703 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %7) #8, !dbg !12674
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1703, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1703, %struct.rtx_def** %op0, align 8, !dbg !12675
  %cmp1704 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12676
  %or.cond19 = or i1 %cmp1704, %cmp54, !dbg !12678
  br i1 %or.cond19, label %if.then1709, label %if.end1711, !dbg !12678

if.then1709:                                      ; preds = %sw.bb1702
  %call1710 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond) #6, !dbg !12679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1710, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end1711, !dbg !12680

if.end1711:                                       ; preds = %sw.bb1702, %if.then1709
  %target.addr.8 = phi %struct.rtx_def* [ %call1710, %if.then1709 ], [ %target.addr.0, %sw.bb1702 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.8, metadata !11969, metadata !DIExpression()), !dbg !12087
  %type1713 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12681
  %193 = bitcast %union.tree_node** %type1713 to i64**, !dbg !12681
  %194 = load i64*, i64** %193, align 8, !dbg !12681
  %bf.load1715 = load i64, i64* %194, align 8, !dbg !12681
  %bf.cast171749 = and i64 %bf.load1715, 65535, !dbg !12683
  %cmp1718 = icmp eq i64 %bf.cast171749, 8, !dbg !12683
  br i1 %cmp1718, label %land.lhs.true1720, label %lor.lhs.false1729, !dbg !12684

land.lhs.true1720:                                ; preds = %if.end1711
  %bf.cast172752 = and i64 %bf.load1715, 2097152, !dbg !12685
  %tobool1728 = icmp eq i64 %bf.cast172752, 0, !dbg !12685
  br i1 %tobool1728, label %lor.lhs.false1729, label %land.lhs.true1720.if.then1743_crit_edge, !dbg !12686

land.lhs.true1720.if.then1743_crit_edge:          ; preds = %land.lhs.true1720
  %bf.load1745.pre = load i64, i64* %5, align 8, !dbg !12687
  br label %if.then1743, !dbg !12686

lor.lhs.false1729:                                ; preds = %land.lhs.true1720, %if.end1711
  %bf.load1731 = load i64, i64* %5, align 8, !dbg !12688
  %bf.cast173350 = and i64 %bf.load1731, 65535, !dbg !12689
  %cmp1734 = icmp eq i64 %bf.cast173350, 8, !dbg !12689
  br i1 %cmp1734, label %land.lhs.true1736, label %if.else1749, !dbg !12690

land.lhs.true1736:                                ; preds = %lor.lhs.false1729
  %bf.cast174151 = and i64 %bf.load1731, 2097152, !dbg !12691
  %tobool1742 = icmp eq i64 %bf.cast174151, 0, !dbg !12691
  br i1 %tobool1742, label %if.else1749, label %if.then1743, !dbg !12692

if.then1743:                                      ; preds = %land.lhs.true1720.if.then1743_crit_edge, %land.lhs.true1736
  %bf.load1745 = phi i64 [ %bf.load1745.pre, %land.lhs.true1720.if.then1743_crit_edge ], [ %bf.load1731, %land.lhs.true1736 ], !dbg !12687
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1703, metadata !11972, metadata !DIExpression()), !dbg !12087
  %bf.lshr1746 = lshr i64 %bf.load1745, 31, !dbg !12687
  %195 = trunc i64 %bf.lshr1746 to i32, !dbg !12687
  %bf.cast1748 = and i32 %195, 1, !dbg !12687
  tail call void @expand_fixed_convert(%struct.rtx_def* %target.addr.8, %struct.rtx_def* %call1703, i32 1, i32 %bf.cast1748) #6, !dbg !12693
  br label %cleanup2431, !dbg !12693

if.else1749:                                      ; preds = %land.lhs.true1736, %lor.lhs.false1729
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1703, metadata !11972, metadata !DIExpression()), !dbg !12087
  %bf.lshr1752 = lshr i64 %bf.load1731, 31, !dbg !12694
  %196 = trunc i64 %bf.lshr1752 to i32, !dbg !12694
  %bf.cast1754 = and i32 %196, 1, !dbg !12694
  tail call void @expand_fixed_convert(%struct.rtx_def* %target.addr.8, %struct.rtx_def* %call1703, i32 0, i32 %bf.cast1754) #6, !dbg !12695
  br label %cleanup2431

sw.bb1756:                                        ; preds = %land.end50
  %call1757 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %7) #8, !dbg !12696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1757, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1757, %struct.rtx_def** %op0, align 8, !dbg !12697
  %cmp1758 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12698
  %or.cond20 = or i1 %cmp1758, %cmp54, !dbg !12700
  br i1 %or.cond20, label %if.then1763, label %if.end1765, !dbg !12700

if.then1763:                                      ; preds = %sw.bb1756
  %call1764 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond) #6, !dbg !12701
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1764, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end1765, !dbg !12702

if.end1765:                                       ; preds = %sw.bb1756, %if.then1763
  %target.addr.9 = phi %struct.rtx_def* [ %call1764, %if.then1763 ], [ %target.addr.0, %sw.bb1756 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.9, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1757, metadata !11972, metadata !DIExpression()), !dbg !12087
  tail call void @expand_fix(%struct.rtx_def* %target.addr.9, %struct.rtx_def* %call1757, i32 %bf.cast11) #6, !dbg !12703
  br label %cleanup2431, !dbg !12704

sw.bb1766:                                        ; preds = %land.end50
  %call1767 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %7) #8, !dbg !12705
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1767, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1767, %struct.rtx_def** %op0, align 8, !dbg !12706
  %cmp1768 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12707
  %or.cond21 = or i1 %cmp1768, %cmp54, !dbg !12709
  %197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1767, i64 0, i32 0, !dbg !12709
  br i1 %or.cond21, label %if.then1773, label %if.end1775, !dbg !12709

if.then1773:                                      ; preds = %sw.bb1766
  %call1774 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond) #6, !dbg !12710
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1774, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end1775, !dbg !12711

if.end1775:                                       ; preds = %sw.bb1766, %if.then1773
  %target.addr.10 = phi %struct.rtx_def* [ %call1774, %if.then1773 ], [ %target.addr.0, %sw.bb1766 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.10, metadata !11969, metadata !DIExpression()), !dbg !12087
  %bf.load1776 = load i32, i32* %197, align 8, !dbg !12712
  %bf.clear1778 = and i32 %bf.load1776, 16711680, !dbg !12712
  %cmp1779 = icmp eq i32 %bf.clear1778, 0, !dbg !12714
  br i1 %cmp1779, label %if.then1781, label %if.end1775.if.end1805_crit_edge, !dbg !12715

if.end1775.if.end1805_crit_edge:                  ; preds = %if.end1775
  br label %if.end1805, !dbg !12715

if.then1781:                                      ; preds = %if.end1775
  %type1783 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12716
  %198 = bitcast %union.tree_node** %type1783 to i64**, !dbg !12716
  %199 = load i64*, i64** %198, align 8, !dbg !12716
  %bf.load1785 = load i64, i64* %199, align 8, !dbg !12716
  %bf.cast178747 = and i64 %bf.load1785, 65535, !dbg !12716
  %cmp1788 = icmp eq i64 %bf.cast178747, 14, !dbg !12716
  br i1 %cmp1788, label %cond.true1790, label %cond.false1794, !dbg !12716

cond.true1790:                                    ; preds = %if.then1781
  %.cast48 = bitcast i64* %199 to %union.tree_node*, !dbg !12716
  %call1793 = tail call i32 @vector_type_mode(%union.tree_node* %.cast48) #6, !dbg !12716
  br label %cond.end1802, !dbg !12716

cond.false1794:                                   ; preds = %if.then1781
  %type1797 = bitcast i64* %199 to %struct.tree_type*, !dbg !12716
  %mode1798 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1797, i64 0, i32 6, !dbg !12716
  %bf.load1799 = load i32, i32* %mode1798, align 4, !dbg !12716
  %bf.lshr1800 = lshr i32 %bf.load1799, 16, !dbg !12716
  %bf.clear1801 = and i32 %bf.lshr1800, 255, !dbg !12716
  br label %cond.end1802, !dbg !12716

cond.end1802:                                     ; preds = %cond.false1794, %cond.true1790
  %cond1803 = phi i32 [ %call1793, %cond.true1790 ], [ %bf.clear1801, %cond.false1794 ], !dbg !12716
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1767, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call1804 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %cond1803, %struct.rtx_def* %call1767) #6, !dbg !12717
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1804, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1804, %struct.rtx_def** %op0, align 8, !dbg !12718
  br label %if.end1805, !dbg !12719

if.end1805:                                       ; preds = %if.end1775.if.end1805_crit_edge, %cond.end1802
  %200 = phi %struct.rtx_def* [ %call1804, %cond.end1802 ], [ %call1767, %if.end1775.if.end1805_crit_edge ], !dbg !12720
  call void @llvm.dbg.value(metadata %struct.rtx_def* %200, metadata !11972, metadata !DIExpression()), !dbg !12087
  %type1807 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12721
  %201 = bitcast %union.tree_node** %type1807 to i64**, !dbg !12721
  %202 = load i64*, i64** %201, align 8, !dbg !12721
  %bf.load1809 = load i64, i64* %202, align 8, !dbg !12721
  %bf.lshr1810 = lshr i64 %bf.load1809, 21, !dbg !12721
  %203 = trunc i64 %bf.lshr1810 to i32, !dbg !12721
  %bf.cast1812 = and i32 %203, 1, !dbg !12721
  tail call void @expand_float(%struct.rtx_def* %target.addr.10, %struct.rtx_def* %200, i32 %bf.cast1812) #6, !dbg !12722
  br label %cleanup2431, !dbg !12723

sw.bb1813:                                        ; preds = %land.end50
  %call1814 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %call56, i32 0, i32 0) #8, !dbg !12724
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1814, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1814, %struct.rtx_def** %op0, align 8, !dbg !12725
  %spec.select22 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12726
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select22, metadata !11969, metadata !DIExpression()), !dbg !12087
  %call1819 = tail call %struct.optab_d* @optab_for_tree_code(i32 79, %union.tree_node* %4, i32 0) #6, !dbg !12727
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1814, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call1820 = tail call %struct.rtx_def* @expand_unop(i32 %cond, %struct.optab_d* %call1819, %struct.rtx_def* %call1814, %struct.rtx_def* %spec.select22, i32 0) #6, !dbg !12728
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1820, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool1821 = icmp eq %struct.rtx_def* %call1820, null, !dbg !12729
  br i1 %tobool1821, label %cond.true1822, label %cond.end1824, !dbg !12729

cond.true1822:                                    ; preds = %sw.bb1813
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7895, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12729
  br label %cond.end1824, !dbg !12729

cond.end1824:                                     ; preds = %sw.bb1813, %cond.true1822
  br i1 %12, label %cond.true1828, label %cleanup2431, !dbg !12730

cond.true1828:                                    ; preds = %cond.end1824
  %call1829 = tail call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call1820, %struct.rtx_def* %spec.select22, %union.tree_node* %4) #8, !dbg !12730
  br label %cleanup2431, !dbg !12730

sw.bb1833:                                        ; preds = %land.end50
  %call1834 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %call56, i32 0, i32 0) #8, !dbg !12731
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1834, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1834, %struct.rtx_def** %op0, align 8, !dbg !12732
  %spec.select23 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select23, metadata !11969, metadata !DIExpression()), !dbg !12087
  %idxprom1839 = zext i32 %cond to i64, !dbg !12734
  %arrayidx1840 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1839, !dbg !12734
  %204 = load i8, i8* %arrayidx1840, align 1, !dbg !12734
  %cmp1842 = icmp eq i8 %204, 10, !dbg !12734
  br i1 %cmp1842, label %cond.true1850, label %land.lhs.true1844, !dbg !12734

land.lhs.true1844:                                ; preds = %sw.bb1833
  %cmp1848 = icmp eq i8 %204, 11, !dbg !12734
  br i1 %cmp1848, label %cond.true1850, label %cond.end1852, !dbg !12734

cond.true1850:                                    ; preds = %land.lhs.true1844, %sw.bb1833
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 7906, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12734
  br label %cond.end1852, !dbg !12734

cond.end1852:                                     ; preds = %land.lhs.true1844, %cond.true1850
  %bf.load1855 = load i64, i64* %5, align 8, !dbg !12735
  %bf.cast185846 = and i64 %bf.load1855, 2097152, !dbg !12735
  %tobool1859 = icmp eq i64 %bf.cast185846, 0, !dbg !12735
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1834, metadata !11972, metadata !DIExpression()), !dbg !12087
  br i1 %tobool1859, label %if.end1861, label %cleanup2431, !dbg !12737

if.end1861:                                       ; preds = %cond.end1852
  %call1862 = tail call i32 @safe_from_p(%struct.rtx_def* %spec.select23, %union.tree_node* %7, i32 1) #8, !dbg !12738
  %call1863 = tail call %struct.rtx_def* @expand_abs(i32 %cond, %struct.rtx_def* %call1834, %struct.rtx_def* %spec.select23, i32 %bf.cast11, i32 %call1862) #6, !dbg !12739
  br label %cleanup2431, !dbg !12740

sw.bb1864:                                        ; preds = %land.end50, %land.end50
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !11969, metadata !DIExpression()), !dbg !12087
  %cmp1865 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12741
  %or.cond24 = or i1 %cmp1865, %cmp54, !dbg !12743
  br i1 %or.cond24, label %if.then1895, label %lor.lhs.false1870, !dbg !12743

lor.lhs.false1870:                                ; preds = %sw.bb1864
  %205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.0, i64 0, i32 0, !dbg !12744
  %bf.load1871 = load i32, i32* %205, align 8, !dbg !12744
  %bf.clear1872 = and i32 %bf.load1871, 65535, !dbg !12744
  %cmp1873 = icmp eq i32 %bf.clear1872, 43, !dbg !12744
  br i1 %cmp1873, label %land.lhs.true1875, label %lor.lhs.false1880, !dbg !12745

land.lhs.true1875:                                ; preds = %lor.lhs.false1870
  %bf.clear1878 = and i32 %bf.load1871, 134217728, !dbg !12746
  %tobool1879 = icmp eq i32 %bf.clear1878, 0, !dbg !12746
  br i1 %tobool1879, label %lor.lhs.false1880, label %if.then1895, !dbg !12747

lor.lhs.false1880:                                ; preds = %land.lhs.true1875, %lor.lhs.false1870
  %bf.lshr1882 = lshr i32 %bf.load1871, 16, !dbg !12748
  %bf.clear1883 = and i32 %bf.lshr1882, 255, !dbg !12748
  %cmp1884 = icmp eq i32 %bf.clear1883, %cond, !dbg !12749
  br i1 %cmp1884, label %lor.lhs.false1886, label %if.then1895, !dbg !12750

lor.lhs.false1886:                                ; preds = %lor.lhs.false1880
  %cmp1889 = icmp eq i32 %bf.clear1872, 37, !dbg !12751
  br i1 %cmp1889, label %land.lhs.true1891, label %if.end1897, !dbg !12752

land.lhs.true1891:                                ; preds = %lor.lhs.false1886
  %call1892 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %target.addr.0) #8, !dbg !12753
  %cmp1893 = icmp ult i32 %call1892, 53, !dbg !12754
  br i1 %cmp1893, label %if.then1895, label %if.end1897, !dbg !12755

if.then1895:                                      ; preds = %land.lhs.true1875, %lor.lhs.false1880, %land.lhs.true1891, %sw.bb1864
  %call1896 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond) #6, !dbg !12756
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1896, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end1897, !dbg !12757

if.end1897:                                       ; preds = %if.then1895, %land.lhs.true1891, %lor.lhs.false1886
  %target.addr.13 = phi %struct.rtx_def* [ %call1896, %if.then1895 ], [ %target.addr.0, %land.lhs.true1891 ], [ %target.addr.0, %lor.lhs.false1886 ], !dbg !12123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.13, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* %target.addr.13, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12758
  %call1898 = call %struct.optab_d* @optab_for_tree_code(i32 %2, %union.tree_node* %4, i32 0) #6, !dbg !12759
  call void @llvm.dbg.value(metadata %struct.optab_d* %call1898, metadata !11980, metadata !DIExpression()), !dbg !12087
  %206 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %206, metadata !11972, metadata !DIExpression()), !dbg !12087
  %207 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12761
  call void @llvm.dbg.value(metadata %struct.rtx_def* %207, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1899 = call %struct.rtx_def* @expand_binop(i32 %cond, %struct.optab_d* %call1898, %struct.rtx_def* %206, %struct.rtx_def* %207, %struct.rtx_def* %target.addr.13, i32 %bf.cast11, i32 2) #6, !dbg !12762
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1899, metadata !11975, metadata !DIExpression()), !dbg !12087
  %cmp1900 = icmp eq %struct.rtx_def* %call1899, null, !dbg !12763
  br i1 %cmp1900, label %if.end1903, label %cleanup2431, !dbg !12765

if.end1903:                                       ; preds = %if.end1897
  %208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.13, i64 0, i32 0, !dbg !12766
  %bf.load1904 = load i32, i32* %208, align 8, !dbg !12766
  %bf.clear1905 = and i32 %bf.load1904, 65535, !dbg !12766
  %cmp1906 = icmp eq i32 %bf.clear1905, 37, !dbg !12766
  br i1 %cmp1906, label %if.end1910, label %if.then1908, !dbg !12768

if.then1908:                                      ; preds = %if.end1903
  %call1909 = call %struct.rtx_def* @gen_reg_rtx(i32 %cond) #6, !dbg !12769
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1909, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end1910, !dbg !12770

if.end1910:                                       ; preds = %if.then1908, %if.end1903
  %target.addr.14 = phi %struct.rtx_def* [ %target.addr.13, %if.end1903 ], [ %call1909, %if.then1908 ], !dbg !12123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.14, metadata !11969, metadata !DIExpression()), !dbg !12087
  %209 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12771
  call void @llvm.dbg.value(metadata %struct.rtx_def* %209, metadata !11972, metadata !DIExpression()), !dbg !12087
  %cmp1911 = icmp ne %struct.rtx_def* %target.addr.14, %209, !dbg !12773
  %210 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12774
  call void @llvm.dbg.value(metadata %struct.rtx_def* %210, metadata !11973, metadata !DIExpression()), !dbg !12087
  %cmp1914 = icmp eq %struct.rtx_def* %target.addr.14, %210, !dbg !12775
  %or.cond25 = and i1 %cmp1911, %cmp1914, !dbg !12776
  br i1 %or.cond25, label %if.then1916, label %if.end1917, !dbg !12776

if.then1916:                                      ; preds = %if.end1910
  %211 = ptrtoint %struct.rtx_def* %210 to i64, !dbg !12776
  call void @llvm.dbg.value(metadata %struct.rtx_def* %209, metadata !11972, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %209, metadata !11975, metadata !DIExpression()), !dbg !12087
  %212 = bitcast %struct.rtx_def** %op0 to i64*, !dbg !12777
  store i64 %211, i64* %212, align 8, !dbg !12777
  call void @llvm.dbg.value(metadata %struct.rtx_def* %209, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %209, %struct.rtx_def** %op1, align 8, !dbg !12779
  br label %if.end1917, !dbg !12780

if.end1917:                                       ; preds = %if.then1916, %if.end1910
  %213 = phi %struct.rtx_def* [ %209, %if.then1916 ], [ %210, %if.end1910 ]
  %.pn = phi %struct.rtx_def* [ %209, %if.then1916 ], [ %210, %if.end1910 ]
  %temp.0 = phi %struct.rtx_def* [ %209, %if.then1916 ], [ null, %if.end1910 ], !dbg !12123
  %214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 0, !dbg !12781
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.0, metadata !11975, metadata !DIExpression()), !dbg !12087
  %bf.load1918 = load i32, i32* %214, align 8, !dbg !12781
  %bf.clear1919 = and i32 %bf.load1918, 65535, !dbg !12781
  %idxprom1920 = zext i32 %bf.clear1919 to i64, !dbg !12781
  %arrayidx1921 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1920, !dbg !12781
  %215 = load i32, i32* %arrayidx1921, align 4, !dbg !12781
  %cmp1922 = icmp eq i32 %215, 9, !dbg !12781
  br i1 %cmp1922, label %if.end1926, label %if.then1924, !dbg !12783

if.then1924:                                      ; preds = %if.end1917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %213, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1925 = call %struct.rtx_def* @force_reg(i32 %cond, %struct.rtx_def* %213) #6, !dbg !12784
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1925, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1925, %struct.rtx_def** %op1, align 8, !dbg !12785
  br label %if.end1926, !dbg !12786

if.end1926:                                       ; preds = %if.then1924, %if.end1917
  %216 = phi %struct.rtx_def* [ %call1925, %if.then1924 ], [ %213, %if.end1917 ], !dbg !12787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %216, metadata !11973, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %216, metadata !12071, metadata !DIExpression()), !dbg !12788
  %cmp1927 = icmp eq i32 %2, 81, !dbg !12789
  %tobool1930 = icmp ne i32 %bf.cast11, 0, !dbg !12791
  %cond1931 = select i1 %tobool1930, i32 86, i32 82, !dbg !12792
  %cond1934 = select i1 %tobool1930, i32 88, i32 84, !dbg !12792
  %comparison_code.0 = select i1 %cmp1927, i32 %cond1931, i32 %cond1934, !dbg !12792
  call void @llvm.dbg.value(metadata i32 %comparison_code.0, metadata !12069, metadata !DIExpression()), !dbg !12788
  call void @llvm.dbg.value(metadata %struct.rtx_def* %216, metadata !11973, metadata !DIExpression()), !dbg !12087
  %217 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !12793
  %cmp1936 = icmp eq %struct.rtx_def* %216, %217, !dbg !12795
  br i1 %cmp1936, label %if.then1938, label %if.end1945, !dbg !12796

if.then1938:                                      ; preds = %if.end1926
  %218 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !12797
  call void @llvm.dbg.value(metadata %struct.rtx_def* %218, metadata !12071, metadata !DIExpression()), !dbg !12788
  br i1 %cmp1927, label %if.then1941, label %if.end1945, !dbg !12799

if.then1941:                                      ; preds = %if.then1938
  %tobool1942 = icmp eq i32 %bf.cast11, 0, !dbg !12800
  %cond1943 = select i1 %tobool1942, i32 83, i32 80, !dbg !12800
  call void @llvm.dbg.value(metadata i32 %cond1943, metadata !12069, metadata !DIExpression()), !dbg !12788
  br label %if.end1945, !dbg !12802

if.end1945:                                       ; preds = %if.then1938, %if.then1941, %if.end1926
  %comparison_code.2 = phi i32 [ %comparison_code.0, %if.end1926 ], [ %cond1943, %if.then1941 ], [ %comparison_code.0, %if.then1938 ], !dbg !12788
  %cmpop1.0 = phi %struct.rtx_def* [ %216, %if.end1926 ], [ %218, %if.then1941 ], [ %218, %if.then1938 ], !dbg !12788
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmpop1.0, metadata !12071, metadata !DIExpression()), !dbg !12788
  call void @llvm.dbg.value(metadata i32 %comparison_code.2, metadata !12069, metadata !DIExpression()), !dbg !12788
  call void @llvm.dbg.value(metadata %struct.rtx_def* %216, metadata !11973, metadata !DIExpression()), !dbg !12087
  %219 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !12803
  %cmp1946 = icmp ne %struct.rtx_def* %216, %219, !dbg !12805
  %or.cond26 = or i1 %cmp1946, %tobool1930, !dbg !12806
  br i1 %or.cond26, label %if.end1955, label %if.then1950, !dbg !12806

if.then1950:                                      ; preds = %if.end1945
  %220 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !12807
  call void @llvm.dbg.value(metadata %struct.rtx_def* %220, metadata !12071, metadata !DIExpression()), !dbg !12788
  %cmp1951 = icmp eq i32 %2, 80, !dbg !12809
  %spec.select27 = select i1 %cmp1951, i32 85, i32 %comparison_code.2, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %spec.select27, metadata !12069, metadata !DIExpression()), !dbg !12788
  br label %if.end1955, !dbg !12812

if.end1955:                                       ; preds = %if.end1945, %if.then1950
  %comparison_code.4 = phi i32 [ %spec.select27, %if.then1950 ], [ %comparison_code.2, %if.end1945 ], !dbg !12788
  %cmpop1.1 = phi %struct.rtx_def* [ %220, %if.then1950 ], [ %cmpop1.0, %if.end1945 ], !dbg !12788
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmpop1.1, metadata !12071, metadata !DIExpression()), !dbg !12788
  call void @llvm.dbg.value(metadata i32 %comparison_code.4, metadata !12069, metadata !DIExpression()), !dbg !12788
  %call1956 = call i32 @can_conditionally_move_p(i32 %cond) #6, !dbg !12813
  %tobool1957 = icmp eq i32 %call1956, 0, !dbg !12813
  br i1 %tobool1957, label %if.end1969, label %if.then1958, !dbg !12814

if.then1958:                                      ; preds = %if.end1955
  call void @do_pending_stack_adjust() #6, !dbg !12815
  call void @start_sequence() #6, !dbg !12816
  %221 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12817
  call void @llvm.dbg.value(metadata %struct.rtx_def* %221, metadata !11972, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %221, metadata !11972, metadata !DIExpression()), !dbg !12087
  %222 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %222, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1959 = call %struct.rtx_def* @emit_conditional_move(%struct.rtx_def* %target.addr.14, i32 %comparison_code.4, %struct.rtx_def* %221, %struct.rtx_def* %cmpop1.1, i32 %cond, %struct.rtx_def* %221, %struct.rtx_def* %222, i32 %cond, i32 %bf.cast11) #6, !dbg !12819
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1959, metadata !12072, metadata !DIExpression()), !dbg !12820
  %tobool1960 = icmp eq %struct.rtx_def* %call1959, null, !dbg !12821
  br i1 %tobool1960, label %if.end1965, label %if.then1961, !dbg !12822

if.then1961:                                      ; preds = %if.then1958
  %call1962 = call %struct.rtx_def* @get_insns() #6, !dbg !12823
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1962, metadata !12075, metadata !DIExpression()), !dbg !12824
  call void @end_sequence() #6, !dbg !12825
  %call1963 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1962) #6, !dbg !12826
  br label %cleanup1966

if.end1965:                                       ; preds = %if.then1958
  call void @end_sequence() #6, !dbg !12827
  br label %cleanup1966, !dbg !12828

cleanup1966:                                      ; preds = %if.end1965, %if.then1961
  %cleanup.dest.slot.7 = phi i32 [ 1, %if.then1961 ], [ 0, %if.end1965 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.7, 0
  br i1 %cond2, label %if.end1969, label %cleanup1976

if.end1969:                                       ; preds = %if.end1955, %cleanup1966
  %223 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12829
  call void @llvm.dbg.value(metadata %struct.rtx_def* %223, metadata !11972, metadata !DIExpression()), !dbg !12087
  %cmp1970 = icmp eq %struct.rtx_def* %target.addr.14, %223, !dbg !12831
  br i1 %cmp1970, label %if.end1974, label %if.then1972, !dbg !12832

if.then1972:                                      ; preds = %if.end1969
  call void @llvm.dbg.value(metadata %struct.rtx_def* %223, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call1973 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.14, %struct.rtx_def* %223) #8, !dbg !12833
  br label %if.end1974, !dbg !12833

if.end1974:                                       ; preds = %if.end1969, %if.then1972
  %call1975 = call %struct.rtx_def* @gen_label_rtx() #6, !dbg !12834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1975, metadata !11975, metadata !DIExpression()), !dbg !12087
  call void @do_compare_rtx_and_jump(%struct.rtx_def* %target.addr.14, %struct.rtx_def* %cmpop1.1, i32 %comparison_code.4, i32 %bf.cast11, i32 %cond, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call1975, i32 -1) #6, !dbg !12835
  br label %cleanup1976, !dbg !12836

cleanup1976:                                      ; preds = %cleanup1966, %if.end1974
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %cleanup1966 ], [ %call1975, %if.end1974 ], !dbg !12123
  %cleanup.dest.slot.8 = phi i32 [ %cleanup.dest.slot.7, %cleanup1966 ], [ 0, %if.end1974 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %temp.1, metadata !11975, metadata !DIExpression()), !dbg !12087
  %cond1 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond1, label %cleanup.cont1979, label %cleanup2431

cleanup.cont1979:                                 ; preds = %cleanup1976
  %224 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12837
  call void @llvm.dbg.value(metadata %struct.rtx_def* %224, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call1980 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.14, %struct.rtx_def* %224) #8, !dbg !12838
  %call1981 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %temp.1) #6, !dbg !12839
  br label %cleanup2431, !dbg !12840

sw.bb1982:                                        ; preds = %land.end50
  %call1983 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %call56, i32 0, i32 0) #8, !dbg !12841
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1983, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call1983, %struct.rtx_def** %op0, align 8, !dbg !12842
  %spec.select28 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select28, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1983, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call1988 = tail call %struct.rtx_def* @expand_unop(i32 %cond, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 69), %struct.rtx_def* %call1983, %struct.rtx_def* %spec.select28, i32 1) #6, !dbg !12844
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1988, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool1989 = icmp eq %struct.rtx_def* %call1988, null, !dbg !12845
  br i1 %tobool1989, label %cond.true1990, label %cleanup2431, !dbg !12845

cond.true1990:                                    ; preds = %sw.bb1982
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8038, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12845
  br label %cleanup2431, !dbg !12845

sw.bb1994:                                        ; preds = %land.end50
  call void @llvm.dbg.value(metadata i32 89, metadata !11979, metadata !DIExpression()), !dbg !12087
  br label %binop, !dbg !12846

sw.bb1996:                                        ; preds = %land.end50
  call void @llvm.dbg.value(metadata i32 87, metadata !11979, metadata !DIExpression()), !dbg !12087
  br label %binop, !dbg !12847

sw.bb1998:                                        ; preds = %land.end50
  call void @llvm.dbg.value(metadata i32 88, metadata !11979, metadata !DIExpression()), !dbg !12087
  br label %binop, !dbg !12848

sw.bb2000:                                        ; preds = %land.end50, %land.end50
  %bf.load2002 = load i64, i64* %5, align 8, !dbg !12849
  %bf.cast200439 = and i64 %bf.load2002, 65535, !dbg !12849
  %cmp2005 = icmp eq i64 %bf.cast200439, 14, !dbg !12849
  br i1 %cmp2005, label %cond.true2007, label %cond.false2009, !dbg !12849

cond.true2007:                                    ; preds = %sw.bb2000
  %call2008 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12849
  br label %cond.end2015, !dbg !12849

cond.false2009:                                   ; preds = %sw.bb2000
  %type2010 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12849
  %mode2011 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2010, i64 0, i32 6, !dbg !12849
  %bf.load2012 = load i32, i32* %mode2011, align 4, !dbg !12849
  %bf.lshr2013 = lshr i32 %bf.load2012, 16, !dbg !12849
  %bf.clear2014 = and i32 %bf.lshr2013, 255, !dbg !12849
  br label %cond.end2015, !dbg !12849

cond.end2015:                                     ; preds = %cond.false2009, %cond.true2007
  %cond2016 = phi i32 [ %call2008, %cond.true2007 ], [ %bf.clear2014, %cond.false2009 ], !dbg !12849
  %idxprom2017 = zext i32 %cond2016 to i64, !dbg !12849
  %arrayidx2018 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2017, !dbg !12849
  %225 = load i8, i8* %arrayidx2018, align 1, !dbg !12849
  %cmp2020 = icmp eq i8 %225, 12, !dbg !12849
  br i1 %cmp2020, label %sw.bb2162, label %lor.lhs.false2022, !dbg !12849

lor.lhs.false2022:                                ; preds = %cond.end2015
  %bf.load2024 = load i64, i64* %5, align 8, !dbg !12849
  %bf.cast202640 = and i64 %bf.load2024, 65535, !dbg !12849
  %cmp2027 = icmp eq i64 %bf.cast202640, 14, !dbg !12849
  br i1 %cmp2027, label %cond.true2029, label %cond.false2031, !dbg !12849

cond.true2029:                                    ; preds = %lor.lhs.false2022
  %call2030 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12849
  br label %cond.end2037, !dbg !12849

cond.false2031:                                   ; preds = %lor.lhs.false2022
  %type2032 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12849
  %mode2033 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2032, i64 0, i32 6, !dbg !12849
  %bf.load2034 = load i32, i32* %mode2033, align 4, !dbg !12849
  %bf.lshr2035 = lshr i32 %bf.load2034, 16, !dbg !12849
  %bf.clear2036 = and i32 %bf.lshr2035, 255, !dbg !12849
  br label %cond.end2037, !dbg !12849

cond.end2037:                                     ; preds = %cond.false2031, %cond.true2029
  %cond2038 = phi i32 [ %call2030, %cond.true2029 ], [ %bf.clear2036, %cond.false2031 ], !dbg !12849
  %idxprom2039 = zext i32 %cond2038 to i64, !dbg !12849
  %arrayidx2040 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2039, !dbg !12849
  %226 = load i8, i8* %arrayidx2040, align 1, !dbg !12849
  %cmp2042 = icmp eq i8 %226, 17, !dbg !12849
  br i1 %cmp2042, label %sw.bb2162, label %lor.lhs.false2044, !dbg !12849

lor.lhs.false2044:                                ; preds = %cond.end2037
  %bf.load2046 = load i64, i64* %5, align 8, !dbg !12849
  %bf.cast204841 = and i64 %bf.load2046, 65535, !dbg !12849
  %cmp2049 = icmp eq i64 %bf.cast204841, 14, !dbg !12849
  br i1 %cmp2049, label %cond.true2051, label %cond.false2053, !dbg !12849

cond.true2051:                                    ; preds = %lor.lhs.false2044
  %call2052 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12849
  br label %cond.end2059, !dbg !12849

cond.false2053:                                   ; preds = %lor.lhs.false2044
  %type2054 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12849
  %mode2055 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2054, i64 0, i32 6, !dbg !12849
  %bf.load2056 = load i32, i32* %mode2055, align 4, !dbg !12849
  %bf.lshr2057 = lshr i32 %bf.load2056, 16, !dbg !12849
  %bf.clear2058 = and i32 %bf.lshr2057, 255, !dbg !12849
  br label %cond.end2059, !dbg !12849

cond.end2059:                                     ; preds = %cond.false2053, %cond.true2051
  %cond2060 = phi i32 [ %call2052, %cond.true2051 ], [ %bf.clear2058, %cond.false2053 ], !dbg !12849
  %idxprom2061 = zext i32 %cond2060 to i64, !dbg !12849
  %arrayidx2062 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2061, !dbg !12849
  %227 = load i8, i8* %arrayidx2062, align 1, !dbg !12849
  %cmp2064 = icmp eq i8 %227, 13, !dbg !12849
  br i1 %cmp2064, label %sw.bb2162, label %lor.lhs.false2066, !dbg !12849

lor.lhs.false2066:                                ; preds = %cond.end2059
  %bf.load2068 = load i64, i64* %5, align 8, !dbg !12849
  %bf.cast207042 = and i64 %bf.load2068, 65535, !dbg !12849
  %cmp2071 = icmp eq i64 %bf.cast207042, 14, !dbg !12849
  br i1 %cmp2071, label %cond.true2073, label %cond.false2075, !dbg !12849

cond.true2073:                                    ; preds = %lor.lhs.false2066
  %call2074 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12849
  br label %cond.end2081, !dbg !12849

cond.false2075:                                   ; preds = %lor.lhs.false2066
  %type2076 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12849
  %mode2077 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2076, i64 0, i32 6, !dbg !12849
  %bf.load2078 = load i32, i32* %mode2077, align 4, !dbg !12849
  %bf.lshr2079 = lshr i32 %bf.load2078, 16, !dbg !12849
  %bf.clear2080 = and i32 %bf.lshr2079, 255, !dbg !12849
  br label %cond.end2081, !dbg !12849

cond.end2081:                                     ; preds = %cond.false2075, %cond.true2073
  %cond2082 = phi i32 [ %call2074, %cond.true2073 ], [ %bf.clear2080, %cond.false2075 ], !dbg !12849
  %idxprom2083 = zext i32 %cond2082 to i64, !dbg !12849
  %arrayidx2084 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2083, !dbg !12849
  %228 = load i8, i8* %arrayidx2084, align 1, !dbg !12849
  %cmp2086 = icmp eq i8 %228, 14, !dbg !12849
  br i1 %cmp2086, label %sw.bb2162, label %lor.lhs.false2088, !dbg !12849

lor.lhs.false2088:                                ; preds = %cond.end2081
  %bf.load2090 = load i64, i64* %5, align 8, !dbg !12849
  %bf.cast209243 = and i64 %bf.load2090, 65535, !dbg !12849
  %cmp2093 = icmp eq i64 %bf.cast209243, 14, !dbg !12849
  br i1 %cmp2093, label %cond.true2095, label %cond.false2097, !dbg !12849

cond.true2095:                                    ; preds = %lor.lhs.false2088
  %call2096 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12849
  br label %cond.end2103, !dbg !12849

cond.false2097:                                   ; preds = %lor.lhs.false2088
  %type2098 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12849
  %mode2099 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2098, i64 0, i32 6, !dbg !12849
  %bf.load2100 = load i32, i32* %mode2099, align 4, !dbg !12849
  %bf.lshr2101 = lshr i32 %bf.load2100, 16, !dbg !12849
  %bf.clear2102 = and i32 %bf.lshr2101, 255, !dbg !12849
  br label %cond.end2103, !dbg !12849

cond.end2103:                                     ; preds = %cond.false2097, %cond.true2095
  %cond2104 = phi i32 [ %call2096, %cond.true2095 ], [ %bf.clear2102, %cond.false2097 ], !dbg !12849
  %idxprom2105 = zext i32 %cond2104 to i64, !dbg !12849
  %arrayidx2106 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2105, !dbg !12849
  %229 = load i8, i8* %arrayidx2106, align 1, !dbg !12849
  %cmp2108 = icmp eq i8 %229, 15, !dbg !12849
  br i1 %cmp2108, label %sw.bb2162, label %lor.lhs.false2110, !dbg !12849

lor.lhs.false2110:                                ; preds = %cond.end2103
  %bf.load2112 = load i64, i64* %5, align 8, !dbg !12849
  %bf.cast211444 = and i64 %bf.load2112, 65535, !dbg !12849
  %cmp2115 = icmp eq i64 %bf.cast211444, 14, !dbg !12849
  br i1 %cmp2115, label %cond.true2117, label %cond.false2119, !dbg !12849

cond.true2117:                                    ; preds = %lor.lhs.false2110
  %call2118 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12849
  br label %cond.end2125, !dbg !12849

cond.false2119:                                   ; preds = %lor.lhs.false2110
  %type2120 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12849
  %mode2121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2120, i64 0, i32 6, !dbg !12849
  %bf.load2122 = load i32, i32* %mode2121, align 4, !dbg !12849
  %bf.lshr2123 = lshr i32 %bf.load2122, 16, !dbg !12849
  %bf.clear2124 = and i32 %bf.lshr2123, 255, !dbg !12849
  br label %cond.end2125, !dbg !12849

cond.end2125:                                     ; preds = %cond.false2119, %cond.true2117
  %cond2126 = phi i32 [ %call2118, %cond.true2117 ], [ %bf.clear2124, %cond.false2119 ], !dbg !12849
  %idxprom2127 = zext i32 %cond2126 to i64, !dbg !12849
  %arrayidx2128 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2127, !dbg !12849
  %230 = load i8, i8* %arrayidx2128, align 1, !dbg !12849
  %cmp2130 = icmp eq i8 %230, 16, !dbg !12849
  br i1 %cmp2130, label %sw.bb2162, label %lor.lhs.false2132, !dbg !12849

lor.lhs.false2132:                                ; preds = %cond.end2125
  %bf.load2134 = load i64, i64* %5, align 8, !dbg !12849
  %bf.cast213645 = and i64 %bf.load2134, 65535, !dbg !12849
  %cmp2137 = icmp eq i64 %bf.cast213645, 14, !dbg !12849
  br i1 %cmp2137, label %cond.true2139, label %cond.false2141, !dbg !12849

cond.true2139:                                    ; preds = %lor.lhs.false2132
  %call2140 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12849
  %type2152.phi.trans.insert = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12123
  %precision2153.phi.trans.insert = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2152.phi.trans.insert, i64 0, i32 6, !dbg !12123
  %bf.load2154.pre = load i32, i32* %precision2153.phi.trans.insert, align 4, !dbg !12849
  br label %cond.end2147, !dbg !12849

cond.false2141:                                   ; preds = %lor.lhs.false2132
  %type2142 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12849
  %mode2143 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2142, i64 0, i32 6, !dbg !12849
  %bf.load2144 = load i32, i32* %mode2143, align 4, !dbg !12849
  %bf.lshr2145 = lshr i32 %bf.load2144, 16, !dbg !12849
  %bf.clear2146 = and i32 %bf.lshr2145, 255, !dbg !12849
  br label %cond.end2147, !dbg !12849

cond.end2147:                                     ; preds = %cond.false2141, %cond.true2139
  %bf.load2154 = phi i32 [ %bf.load2154.pre, %cond.true2139 ], [ %bf.load2144, %cond.false2141 ], !dbg !12849
  %cond2148 = phi i32 [ %call2140, %cond.true2139 ], [ %bf.clear2146, %cond.false2141 ], !dbg !12849
  %idxprom2149 = zext i32 %cond2148 to i64, !dbg !12849
  %arrayidx2150 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom2149, !dbg !12849
  %231 = load i16, i16* %arrayidx2150, align 2, !dbg !12849
  %conv2151 = zext i16 %231 to i32, !dbg !12849
  %bf.clear2155 = and i32 %bf.load2154, 1023, !dbg !12849
  %cmp2156 = icmp eq i32 %bf.clear2155, %conv2151, !dbg !12849
  br i1 %cmp2156, label %sw.bb2162, label %cond.true2158, !dbg !12849

cond.true2158:                                    ; preds = %cond.end2147
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8073, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12849
  br label %sw.bb2162, !dbg !12849

sw.bb2162:                                        ; preds = %cond.true2158, %cond.end2147, %cond.end2125, %cond.end2103, %cond.end2081, %cond.end2059, %cond.end2037, %cond.end2015, %land.end50, %land.end50
  %idxprom2163 = zext i32 %cond to i64, !dbg !12850
  %arrayidx2164 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2163, !dbg !12850
  %232 = load i8, i8* %arrayidx2164, align 1, !dbg !12850
  %cmp2166 = icmp eq i8 %232, 4, !dbg !12850
  br i1 %cmp2166, label %binop, label %lor.lhs.false2168, !dbg !12850

lor.lhs.false2168:                                ; preds = %sw.bb2162
  %cmp2172 = icmp eq i8 %232, 13, !dbg !12850
  br i1 %cmp2172, label %binop, label %lor.lhs.false2174, !dbg !12850

lor.lhs.false2174:                                ; preds = %lor.lhs.false2168
  %cmp2178 = icmp eq i8 %232, 6, !dbg !12850
  br i1 %cmp2178, label %binop, label %lor.lhs.false2180, !dbg !12850

lor.lhs.false2180:                                ; preds = %lor.lhs.false2174
  %cmp2184 = icmp eq i8 %232, 15, !dbg !12850
  br i1 %cmp2184, label %binop, label %lor.lhs.false2186, !dbg !12850

lor.lhs.false2186:                                ; preds = %lor.lhs.false2180
  %cmp2190 = icmp eq i8 %232, 5, !dbg !12850
  br i1 %cmp2190, label %binop, label %lor.lhs.false2192, !dbg !12850

lor.lhs.false2192:                                ; preds = %lor.lhs.false2186
  %cmp2196 = icmp eq i8 %232, 14, !dbg !12850
  br i1 %cmp2196, label %binop, label %lor.lhs.false2198, !dbg !12850

lor.lhs.false2198:                                ; preds = %lor.lhs.false2192
  %cmp2202 = icmp eq i8 %232, 7, !dbg !12850
  br i1 %cmp2202, label %binop, label %lor.lhs.false2204, !dbg !12850

lor.lhs.false2204:                                ; preds = %lor.lhs.false2198
  %cmp2208 = icmp eq i8 %232, 16, !dbg !12850
  br i1 %cmp2208, label %binop, label %if.end2211, !dbg !12852

if.end2211:                                       ; preds = %lor.lhs.false2204
  %call2212 = tail call i32 @safe_from_p(%struct.rtx_def* %call56, %union.tree_node* %8, i32 1) #8, !dbg !12853
  %tobool2213 = icmp eq i32 %call2212, 0, !dbg !12853
  %spec.select29 = select i1 %tobool2213, %struct.rtx_def* null, %struct.rtx_def* %call56, !dbg !12855
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select29, metadata !11981, metadata !DIExpression()), !dbg !12087
  %target.addr.16 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.16, metadata !11969, metadata !DIExpression()), !dbg !12087
  %call2220 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %spec.select29, i32 0, i32 0) #8, !dbg !12857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2220, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2220, %struct.rtx_def** %op0, align 8, !dbg !12858
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2220, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call2221 = tail call %struct.rtx_def* @expand_shift(i32 %2, i32 %cond, %struct.rtx_def* %call2220, %union.tree_node* %8, %struct.rtx_def* %target.addr.16, i32 %bf.cast11) #6, !dbg !12859
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2221, metadata !11975, metadata !DIExpression()), !dbg !12087
  %cmp2222 = icmp eq i32 %2, 83, !dbg !12860
  %or.cond33 = and i1 %cmp2222, %12, !dbg !12862
  br i1 %or.cond33, label %cond.true2227, label %cleanup2431, !dbg !12862

cond.true2227:                                    ; preds = %if.end2211
  %call2228 = tail call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call2221, %struct.rtx_def* %target.addr.16, %union.tree_node* %4) #8, !dbg !12863
  br label %cleanup2431, !dbg !12863

sw.bb2233:                                        ; preds = %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50, %land.end50
  %target.addr.0. = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12864
  %cmp2240 = icmp eq i32 %tmode, 0, !dbg !12865
  %cond2245 = select i1 %cmp2240, i32 %cond, i32 %tmode, !dbg !12866
  %call2246 = tail call fastcc %struct.rtx_def* @do_store_flag(%struct.separate_ops* %ops, %struct.rtx_def* %target.addr.0., i32 %cond2245) #8, !dbg !12867
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2246, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2247 = icmp eq %struct.rtx_def* %call2246, null, !dbg !12868
  br i1 %tobool2247, label %if.end2249, label %cleanup2431, !dbg !12870

if.end2249:                                       ; preds = %sw.bb2233
  %cmp2250 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12871
  %or.cond30 = or i1 %cmp2250, %cmp54, !dbg !12873
  br i1 %or.cond30, label %if.then2272, label %lor.lhs.false2255, !dbg !12873

lor.lhs.false2255:                                ; preds = %if.end2249
  %call2256 = tail call i32 @safe_from_p(%struct.rtx_def* %target.addr.0, %union.tree_node* %7, i32 1) #8, !dbg !12874
  %tobool2257 = icmp eq i32 %call2256, 0, !dbg !12874
  br i1 %tobool2257, label %if.then2272, label %lor.lhs.false2258, !dbg !12875

lor.lhs.false2258:                                ; preds = %lor.lhs.false2255
  %call2259 = tail call i32 @safe_from_p(%struct.rtx_def* %target.addr.0, %union.tree_node* %8, i32 1) #8, !dbg !12876
  %tobool2260 = icmp eq i32 %call2259, 0, !dbg !12876
  br i1 %tobool2260, label %if.then2272, label %lor.lhs.false2261, !dbg !12877

lor.lhs.false2261:                                ; preds = %lor.lhs.false2258
  %233 = load i32, i32* @optimize, align 4, !dbg !12878
  %tobool2262 = icmp eq i32 %233, 0, !dbg !12878
  br i1 %tobool2262, label %land.lhs.true2263, label %if.end2280, !dbg !12879

land.lhs.true2263:                                ; preds = %lor.lhs.false2261
  %234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.0, i64 0, i32 0, !dbg !12880
  %bf.load2264 = load i32, i32* %234, align 8, !dbg !12880
  %bf.clear2265 = and i32 %bf.load2264, 65535, !dbg !12880
  %cmp2266 = icmp eq i32 %bf.clear2265, 37, !dbg !12880
  br i1 %cmp2266, label %land.lhs.true2268, label %if.end2280, !dbg !12881

land.lhs.true2268:                                ; preds = %land.lhs.true2263
  %call2269 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %target.addr.0) #8, !dbg !12882
  %cmp2270 = icmp ult i32 %call2269, 53, !dbg !12883
  br i1 %cmp2270, label %if.then2272, label %if.end2280, !dbg !12884

if.then2272:                                      ; preds = %lor.lhs.false2258, %lor.lhs.false2255, %land.lhs.true2268, %if.end2249
  %call2279 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond2245) #6, !dbg !12885
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2279, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end2280, !dbg !12886

if.end2280:                                       ; preds = %lor.lhs.false2261, %if.then2272, %land.lhs.true2268, %land.lhs.true2263
  %target.addr.17 = phi %struct.rtx_def* [ %call2279, %if.then2272 ], [ %target.addr.0, %lor.lhs.false2261 ], [ %target.addr.0, %land.lhs.true2268 ], [ %target.addr.0, %land.lhs.true2263 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.17, metadata !11969, metadata !DIExpression()), !dbg !12087
  %235 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !12887
  %call2281 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.17, %struct.rtx_def* %235) #8, !dbg !12888
  %call2282 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !12889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2282, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2282, %struct.rtx_def** %op1, align 8, !dbg !12890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2282, metadata !11973, metadata !DIExpression()), !dbg !12087
  tail call void @jumpifnot_1(i32 %2, %union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* %call2282, i32 -1) #6, !dbg !12891
  %236 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !12892
  %call2283 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.17, %struct.rtx_def* %236) #8, !dbg !12893
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2282, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call2284 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call2282) #6, !dbg !12894
  br label %cleanup2431, !dbg !12895

sw.bb2285:                                        ; preds = %land.end50
  %spec.select31 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, !dbg !12896
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select31, metadata !11969, metadata !DIExpression()), !dbg !12087
  %call2290 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %7, %struct.rtx_def* %spec.select31, i32 0, i32 0) #8, !dbg !12897
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2290, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2290, %struct.rtx_def** %op0, align 8, !dbg !12898
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2290, metadata !11972, metadata !DIExpression()), !dbg !12087
  %237 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !12899
  %call2291 = tail call %struct.rtx_def* @expand_binop(i32 %cond, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 43), %struct.rtx_def* %call2290, %struct.rtx_def* %237, %struct.rtx_def* %spec.select31, i32 1, i32 3) #6, !dbg !12900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2291, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2292 = icmp eq %struct.rtx_def* %call2291, null, !dbg !12901
  br i1 %tobool2292, label %cond.true2293, label %cleanup2431, !dbg !12901

cond.true2293:                                    ; preds = %sw.bb2285
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8150, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12901
  br label %cleanup2431, !dbg !12901

sw.bb2297:                                        ; preds = %land.end50
  %call2298 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %7) #8, !dbg !12902
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2298, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2298, %struct.rtx_def** %op0, align 8, !dbg !12903
  %call2299 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %8) #8, !dbg !12904
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2299, metadata !11973, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2299, %struct.rtx_def** %op1, align 8, !dbg !12905
  %tobool2300 = icmp eq %struct.rtx_def* %target.addr.0, null, !dbg !12906
  br i1 %tobool2300, label %if.then2301, label %if.end2319, !dbg !12908

if.then2301:                                      ; preds = %sw.bb2297
  %bf.load2303 = load i64, i64* %5, align 8, !dbg !12909
  %bf.cast230538 = and i64 %bf.load2303, 65535, !dbg !12909
  %cmp2306 = icmp eq i64 %bf.cast230538, 14, !dbg !12909
  br i1 %cmp2306, label %cond.true2308, label %cond.false2310, !dbg !12909

cond.true2308:                                    ; preds = %if.then2301
  %call2309 = tail call i32 @vector_type_mode(%union.tree_node* %4) #6, !dbg !12909
  br label %cond.end2316, !dbg !12909

cond.false2310:                                   ; preds = %if.then2301
  %type2311 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !12909
  %mode2312 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2311, i64 0, i32 6, !dbg !12909
  %bf.load2313 = load i32, i32* %mode2312, align 4, !dbg !12909
  %bf.lshr2314 = lshr i32 %bf.load2313, 16, !dbg !12909
  %bf.clear2315 = and i32 %bf.lshr2314, 255, !dbg !12909
  br label %cond.end2316, !dbg !12909

cond.end2316:                                     ; preds = %cond.false2310, %cond.true2308
  %cond2317 = phi i32 [ %call2309, %cond.true2308 ], [ %bf.clear2315, %cond.false2310 ], !dbg !12909
  %call2318 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %cond2317) #6, !dbg !12910
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2318, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %if.end2319, !dbg !12911

if.end2319:                                       ; preds = %sw.bb2297, %cond.end2316
  %target.addr.19 = phi %struct.rtx_def* [ %target.addr.0, %sw.bb2297 ], [ %call2318, %cond.end2316 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.19, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2298, metadata !11972, metadata !DIExpression()), !dbg !12087
  tail call fastcc void @write_complex_part(%struct.rtx_def* %target.addr.19, %struct.rtx_def* %call2298, i8 zeroext 0) #8, !dbg !12912
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2299, metadata !11973, metadata !DIExpression()), !dbg !12087
  tail call fastcc void @write_complex_part(%struct.rtx_def* %target.addr.19, %struct.rtx_def* %call2299, i8 zeroext 1) #8, !dbg !12913
  br label %cleanup2431, !dbg !12914

sw.bb2320:                                        ; preds = %land.end50
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !12078, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !12080, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12916
  %238 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12917
  call void @llvm.dbg.value(metadata %struct.rtx_def* %238, metadata !11972, metadata !DIExpression()), !dbg !12087
  %239 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12918
  call void @llvm.dbg.value(metadata %struct.rtx_def* %239, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call2321 = call %struct.rtx_def* @expand_widen_pattern_expr(%struct.separate_ops* %ops, %struct.rtx_def* %238, %struct.rtx_def* null, %struct.rtx_def* %239, %struct.rtx_def* %target.addr.0, i32 %bf.cast11) #6, !dbg !12919
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2321, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %cleanup2431

sw.bb2324:                                        ; preds = %land.end50, %land.end50, %land.end50
  %call2325 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %7) #8, !dbg !12920
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2325, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2325, %struct.rtx_def** %op0, align 8, !dbg !12922
  %call2326 = tail call %struct.optab_d* @optab_for_tree_code(i32 %2, %union.tree_node* %4, i32 0) #6, !dbg !12923
  call void @llvm.dbg.value(metadata %struct.optab_d* %call2326, metadata !11980, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2325, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call2327 = tail call %struct.rtx_def* @expand_unop(i32 %cond, %struct.optab_d* %call2326, %struct.rtx_def* %call2325, %struct.rtx_def* %target.addr.0, i32 %bf.cast11) #6, !dbg !12924
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2327, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2328 = icmp eq %struct.rtx_def* %call2327, null, !dbg !12925
  br i1 %tobool2328, label %cond.true2329, label %cleanup2431, !dbg !12925

cond.true2329:                                    ; preds = %sw.bb2324
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12925
  br label %cleanup2431, !dbg !12925

sw.bb2333:                                        ; preds = %land.end50, %land.end50
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12926
  %call2334 = call %struct.optab_d* @optab_for_tree_code(i32 %2, %union.tree_node* %4, i32 0) #6, !dbg !12928
  call void @llvm.dbg.value(metadata %struct.optab_d* %call2334, metadata !11980, metadata !DIExpression()), !dbg !12087
  %240 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %240, metadata !11972, metadata !DIExpression()), !dbg !12087
  %241 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12930
  call void @llvm.dbg.value(metadata %struct.rtx_def* %241, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call2335 = call %struct.rtx_def* @expand_binop(i32 %cond, %struct.optab_d* %call2334, %struct.rtx_def* %240, %struct.rtx_def* %241, %struct.rtx_def* %target.addr.0, i32 %bf.cast11, i32 2) #6, !dbg !12931
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2335, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2336 = icmp eq %struct.rtx_def* %call2335, null, !dbg !12932
  br i1 %tobool2336, label %cond.true2337, label %cleanup2431, !dbg !12932

cond.true2337:                                    ; preds = %sw.bb2333
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12932
  br label %cleanup2431, !dbg !12932

sw.bb2341:                                        ; preds = %land.end50, %land.end50
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12933
  %call2342 = call %struct.optab_d* @optab_for_tree_code(i32 %2, %union.tree_node* %4, i32 0) #6, !dbg !12935
  call void @llvm.dbg.value(metadata %struct.optab_d* %call2342, metadata !11980, metadata !DIExpression()), !dbg !12087
  %242 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12936
  call void @llvm.dbg.value(metadata %struct.rtx_def* %242, metadata !11972, metadata !DIExpression()), !dbg !12087
  %243 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12937
  call void @llvm.dbg.value(metadata %struct.rtx_def* %243, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call2343 = call %struct.rtx_def* @expand_binop(i32 %cond, %struct.optab_d* %call2342, %struct.rtx_def* %242, %struct.rtx_def* %243, %struct.rtx_def* %target.addr.0, i32 %bf.cast11, i32 2) #6, !dbg !12938
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2343, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2344 = icmp eq %struct.rtx_def* %call2343, null, !dbg !12939
  br i1 %tobool2344, label %cond.true2345, label %cleanup2431, !dbg !12939

cond.true2345:                                    ; preds = %sw.bb2341
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12939
  br label %cleanup2431, !dbg !12939

sw.bb2349:                                        ; preds = %land.end50, %land.end50
  %call2350 = tail call %struct.rtx_def* @expand_vec_shift_expr(%struct.separate_ops* %ops, %struct.rtx_def* %target.addr.0) #6, !dbg !12940
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2350, metadata !11969, metadata !DIExpression()), !dbg !12087
  br label %cleanup2431, !dbg !12942

sw.bb2351:                                        ; preds = %land.end50, %land.end50
  %call2352 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %7) #8, !dbg !12943
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2352, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2352, %struct.rtx_def** %op0, align 8, !dbg !12945
  %call2353 = tail call %struct.optab_d* @optab_for_tree_code(i32 %2, %union.tree_node* %4, i32 0) #6, !dbg !12946
  call void @llvm.dbg.value(metadata %struct.optab_d* %call2353, metadata !11980, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2352, metadata !11972, metadata !DIExpression()), !dbg !12087
  %call2354 = tail call %struct.rtx_def* @expand_widen_pattern_expr(%struct.separate_ops* %ops, %struct.rtx_def* %call2352, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, i32 %bf.cast11) #6, !dbg !12947
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2354, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2355 = icmp eq %struct.rtx_def* %call2354, null, !dbg !12948
  br i1 %tobool2355, label %cond.true2356, label %cleanup2431, !dbg !12948

cond.true2356:                                    ; preds = %sw.bb2351
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8227, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12948
  br label %cleanup2431, !dbg !12948

sw.bb2360:                                        ; preds = %land.end50, %land.end50
  %call2361 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %7) #8, !dbg !12949
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2361, metadata !11972, metadata !DIExpression()), !dbg !12087
  store %struct.rtx_def* %call2361, %struct.rtx_def** %op0, align 8, !dbg !12951
  %type2363 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12952
  %244 = load %union.tree_node*, %union.tree_node** %type2363, align 8, !dbg !12952
  %call2364 = tail call %struct.optab_d* @optab_for_tree_code(i32 %2, %union.tree_node* %244, i32 0) #6, !dbg !12953
  call void @llvm.dbg.value(metadata %struct.optab_d* %call2364, metadata !11980, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2361, metadata !11972, metadata !DIExpression()), !dbg !12087
  %245 = bitcast %union.tree_node** %type2363 to i64**, !dbg !12954
  %246 = load i64*, i64** %245, align 8, !dbg !12954
  %bf.load2368 = load i64, i64* %246, align 8, !dbg !12954
  %bf.lshr2369 = lshr i64 %bf.load2368, 21, !dbg !12954
  %247 = trunc i64 %bf.lshr2369 to i32, !dbg !12954
  %bf.cast2371 = and i32 %247, 1, !dbg !12954
  %call2372 = tail call %struct.rtx_def* @expand_widen_pattern_expr(%struct.separate_ops* %ops, %struct.rtx_def* %call2361, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, i32 %bf.cast2371) #6, !dbg !12955
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2372, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2373 = icmp eq %struct.rtx_def* %call2372, null, !dbg !12956
  br i1 %tobool2373, label %cond.true2374, label %cleanup2431, !dbg !12956

cond.true2374:                                    ; preds = %sw.bb2360
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12956
  br label %cleanup2431, !dbg !12956

sw.bb2378:                                        ; preds = %land.end50, %land.end50
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !12081, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !12083, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* null, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12958
  %248 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12959
  call void @llvm.dbg.value(metadata %struct.rtx_def* %248, metadata !11972, metadata !DIExpression()), !dbg !12087
  %249 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12960
  call void @llvm.dbg.value(metadata %struct.rtx_def* %249, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call2381 = call %struct.rtx_def* @expand_widen_pattern_expr(%struct.separate_ops* %ops, %struct.rtx_def* %248, %struct.rtx_def* %249, %struct.rtx_def* null, %struct.rtx_def* %target.addr.0, i32 %bf.cast11) #6, !dbg !12961
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2381, metadata !11969, metadata !DIExpression()), !dbg !12087
  %tobool2382 = icmp eq %struct.rtx_def* %call2381, null, !dbg !12962
  br i1 %tobool2382, label %cond.true2383, label %cleanup2431, !dbg !12962

cond.true2383:                                    ; preds = %sw.bb2378
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12962
  br label %cleanup2431, !dbg !12962

sw.bb2389:                                        ; preds = %land.end50, %land.end50, %land.end50
  %type2391 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12963
  %250 = bitcast %union.tree_node** %type2391 to i64**, !dbg !12963
  %251 = load i64*, i64** %250, align 8, !dbg !12963
  %bf.load2393 = load i64, i64* %251, align 8, !dbg !12963
  %bf.cast239537 = and i64 %bf.load2393, 65535, !dbg !12963
  %cmp2396 = icmp eq i64 %bf.cast239537, 14, !dbg !12963
  br i1 %cmp2396, label %cond.true2398, label %cond.false2402, !dbg !12963

cond.true2398:                                    ; preds = %sw.bb2389
  %.cast = bitcast i64* %251 to %union.tree_node*, !dbg !12963
  %call2401 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !12963
  br label %binop, !dbg !12963

cond.false2402:                                   ; preds = %sw.bb2389
  %type2405 = bitcast i64* %251 to %struct.tree_type*, !dbg !12963
  %mode2406 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2405, i64 0, i32 6, !dbg !12963
  %bf.load2407 = load i32, i32* %mode2406, align 4, !dbg !12963
  %bf.lshr2408 = lshr i32 %bf.load2407, 16, !dbg !12963
  %bf.clear2409 = and i32 %bf.lshr2408, 255, !dbg !12963
  br label %binop, !dbg !12963

sw.default:                                       ; preds = %land.end50
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8267, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12964
  br label %binop, !dbg !12965

binop:                                            ; preds = %lor.lhs.false1129, %cond.true2398, %cond.false2402, %sw.bb2162, %lor.lhs.false2168, %lor.lhs.false2174, %lor.lhs.false2180, %lor.lhs.false2186, %lor.lhs.false2192, %lor.lhs.false2198, %lor.lhs.false2204, %sw.bb1998, %land.end50, %sw.bb1996, %land.end50, %sw.bb1994, %land.end50, %land.end50, %sw.bb1640, %lor.lhs.false1646, %lor.lhs.false1652, %lor.lhs.false1658, %lor.lhs.false1664, %lor.lhs.false1670, %lor.lhs.false1676, %lor.lhs.false1682, %sw.bb1150, %lor.lhs.false1156, %lor.lhs.false1162, %lor.lhs.false1168, %lor.lhs.false1174, %lor.lhs.false1180, %lor.lhs.false1186, %lor.lhs.false1192, %if.end1123, %if.end1079, %sw.default
  %code.3 = phi i32 [ %2, %sw.default ], [ 64, %if.end1079 ], [ 64, %if.end1123 ], [ 64, %lor.lhs.false1129 ], [ 65, %lor.lhs.false1192 ], [ 65, %lor.lhs.false1186 ], [ 65, %lor.lhs.false1180 ], [ 65, %lor.lhs.false1174 ], [ 65, %lor.lhs.false1168 ], [ 65, %lor.lhs.false1162 ], [ 65, %lor.lhs.false1156 ], [ 65, %sw.bb1150 ], [ %2, %lor.lhs.false1682 ], [ %2, %lor.lhs.false1676 ], [ %2, %lor.lhs.false1670 ], [ %2, %lor.lhs.false1664 ], [ %2, %lor.lhs.false1658 ], [ %2, %lor.lhs.false1652 ], [ %2, %lor.lhs.false1646 ], [ %2, %sw.bb1640 ], [ %2, %land.end50 ], [ %2, %land.end50 ], [ 89, %sw.bb1994 ], [ %2, %land.end50 ], [ 87, %sw.bb1996 ], [ %2, %land.end50 ], [ 88, %sw.bb1998 ], [ %2, %lor.lhs.false2204 ], [ %2, %lor.lhs.false2198 ], [ %2, %lor.lhs.false2192 ], [ %2, %lor.lhs.false2186 ], [ %2, %lor.lhs.false2180 ], [ %2, %lor.lhs.false2174 ], [ %2, %lor.lhs.false2168 ], [ %2, %sw.bb2162 ], [ %2, %cond.false2402 ], [ %2, %cond.true2398 ], !dbg !12966
  %mode.0 = phi i32 [ %cond, %sw.default ], [ %cond, %if.end1079 ], [ %cond, %if.end1123 ], [ %cond, %lor.lhs.false1129 ], [ %cond, %lor.lhs.false1192 ], [ %cond, %lor.lhs.false1186 ], [ %cond, %lor.lhs.false1180 ], [ %cond, %lor.lhs.false1174 ], [ %cond, %lor.lhs.false1168 ], [ %cond, %lor.lhs.false1162 ], [ %cond, %lor.lhs.false1156 ], [ %cond, %sw.bb1150 ], [ %cond, %lor.lhs.false1682 ], [ %cond, %lor.lhs.false1676 ], [ %cond, %lor.lhs.false1670 ], [ %cond, %lor.lhs.false1664 ], [ %cond, %lor.lhs.false1658 ], [ %cond, %lor.lhs.false1652 ], [ %cond, %lor.lhs.false1646 ], [ %cond, %sw.bb1640 ], [ %cond, %land.end50 ], [ %cond, %land.end50 ], [ %cond, %sw.bb1994 ], [ %cond, %land.end50 ], [ %cond, %sw.bb1996 ], [ %cond, %land.end50 ], [ %cond, %sw.bb1998 ], [ %cond, %lor.lhs.false2204 ], [ %cond, %lor.lhs.false2198 ], [ %cond, %lor.lhs.false2192 ], [ %cond, %lor.lhs.false2186 ], [ %cond, %lor.lhs.false2180 ], [ %cond, %lor.lhs.false2174 ], [ %cond, %lor.lhs.false2168 ], [ %cond, %sw.bb2162 ], [ %bf.clear2409, %cond.false2402 ], [ %call2401, %cond.true2398 ], !dbg !12087
  call void @llvm.dbg.value(metadata i32 %mode.0, metadata !11978, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %code.3, metadata !11979, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.label(metadata !12084), !dbg !12967
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !11972, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !12087
  call fastcc void @expand_operands(%union.tree_node* %7, %union.tree_node* %8, %struct.rtx_def* %call56, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !12968
  br label %binop2, !dbg !12968

binop2:                                           ; preds = %if.end1133, %if.end883, %cleanup867, %binop
  %code.4 = phi i32 [ %code.3, %binop ], [ %2, %cleanup867 ], [ %2, %if.end883 ], [ 64, %if.end1133 ], !dbg !12966
  %mode.1 = phi i32 [ %mode.0, %binop ], [ %cond, %cleanup867 ], [ %cond, %if.end883 ], [ %cond, %if.end1133 ], !dbg !12969
  %target.addr.20 = phi %struct.rtx_def* [ %target.addr.0, %binop ], [ %target.addr.3, %cleanup867 ], [ %target.addr.4, %if.end883 ], [ %target.addr.0, %if.end1133 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.20, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %mode.1, metadata !11978, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %code.4, metadata !11979, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.label(metadata !12085), !dbg !12970
  %call2413 = call %struct.optab_d* @optab_for_tree_code(i32 %code.4, %union.tree_node* %4, i32 0) #6, !dbg !12971
  call void @llvm.dbg.value(metadata %struct.optab_d* %call2413, metadata !11980, metadata !DIExpression()), !dbg !12087
  br label %binop3, !dbg !12972

binop3:                                           ; preds = %binop2, %cleanup1623, %cleanup1410
  %this_optab.2 = phi %struct.optab_d* [ %call2413, %binop2 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 22), %cleanup1410 ], [ %cond1555, %cleanup1623 ], !dbg !12087
  %mode.2 = phi i32 [ %mode.1, %binop2 ], [ %cond, %cleanup1410 ], [ %cond, %cleanup1623 ], !dbg !12969
  %target.addr.21 = phi %struct.rtx_def* [ %target.addr.20, %binop2 ], [ %spec.select14, %cleanup1410 ], [ %spec.select14, %cleanup1623 ], !dbg !12087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.21, metadata !11969, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 %mode.2, metadata !11978, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.optab_d* %this_optab.2, metadata !11980, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.label(metadata !12086), !dbg !12973
  %spec.select32 = select i1 %cmp54, %struct.rtx_def* null, %struct.rtx_def* %target.addr.21, !dbg !12974
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select32, metadata !11969, metadata !DIExpression()), !dbg !12087
  %252 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !12975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %252, metadata !11972, metadata !DIExpression()), !dbg !12087
  %253 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !12976
  call void @llvm.dbg.value(metadata %struct.rtx_def* %253, metadata !11973, metadata !DIExpression()), !dbg !12087
  %call2418 = call %struct.rtx_def* @expand_binop(i32 %mode.2, %struct.optab_d* %this_optab.2, %struct.rtx_def* %252, %struct.rtx_def* %253, %struct.rtx_def* %spec.select32, i32 %bf.cast11, i32 3) #6, !dbg !12977
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2418, metadata !11975, metadata !DIExpression()), !dbg !12087
  %tobool2419 = icmp eq %struct.rtx_def* %call2418, null, !dbg !12978
  br i1 %tobool2419, label %cond.true2420, label %cond.end2422, !dbg !12978

cond.true2420:                                    ; preds = %binop3
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 8281, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !12978
  br label %cond.end2422, !dbg !12978

cond.end2422:                                     ; preds = %binop3, %cond.true2420
  br i1 %12, label %cond.true2426, label %cleanup2431, !dbg !12979

cond.true2426:                                    ; preds = %cond.end2422
  %call2427 = call fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %call2418, %struct.rtx_def* %spec.select32, %union.tree_node* %4) #8, !dbg !12979
  br label %cleanup2431, !dbg !12979

cleanup2431:                                      ; preds = %cond.end1852, %if.end1897, %sw.bb1982, %sw.bb2233, %sw.bb2285, %sw.bb2324, %sw.bb2333, %sw.bb2341, %sw.bb2351, %sw.bb2360, %sw.bb2378, %cond.true2426, %cond.end2422, %cond.true2383, %cond.true2374, %cond.true2356, %cond.true2345, %cond.true2337, %cond.true2329, %cond.true2293, %if.end2211, %cond.true2227, %cond.true1990, %cond.true1828, %cond.end1824, %if.then1743, %if.else1749, %cond.true1633, %if.end1630, %cond.end1256, %cond.end1283, %cond.true1142, %if.then1138, %cond.true1116, %if.else1113, %cond.true1099, %if.then1096, %cond.true891, %if.end888, %if.then879, %cond.true769, %if.end766, %cond.end430, %if.end432, %cond.true353, %if.end350, %cond.true262, %if.end259, %if.then90, %cond.end211, %cond.end155, %cleanup614, %cleanup867, %cleanup1072, %cleanup1976, %sw.bb2349, %sw.bb2320, %if.end2319, %if.end2280, %cleanup.cont1979, %if.end1861, %if.end1805, %if.end1765, %sw.bb1696, %if.end1689, %cleanup1623, %cleanup1410, %if.then886, %if.then59
  %retval.14 = phi %struct.rtx_def* [ %call2350, %sw.bb2349 ], [ %call2321, %sw.bb2320 ], [ %target.addr.19, %if.end2319 ], [ %target.addr.17, %if.end2280 ], [ %target.addr.14, %cleanup1976 ], [ %target.addr.14, %cleanup.cont1979 ], [ %call1863, %if.end1861 ], [ %target.addr.10, %if.end1805 ], [ %target.addr.9, %if.end1765 ], [ %call1701, %sw.bb1696 ], [ %call1694, %if.end1689 ], [ undef, %cleanup1410 ], [ %retval.10, %cleanup1623 ], [ %retval.9, %cleanup1072 ], [ %retval.4, %cleanup614 ], [ %retval.6, %cleanup867 ], [ %104, %if.then886 ], [ %14, %if.then59 ], [ %call92, %if.then90 ], [ %target.addr.2, %cond.end211 ], [ %target.addr.2, %cond.end155 ], [ %call263, %cond.true262 ], [ %28, %if.end259 ], [ %call354, %cond.true353 ], [ %37, %if.end350 ], [ %call426, %cond.end430 ], [ %49, %if.end432 ], [ %call770, %cond.true769 ], [ %92, %if.end766 ], [ %106, %if.then879 ], [ %call893, %cond.true891 ], [ %call892, %if.end888 ], [ %call1104, %cond.true1099 ], [ %call1103, %if.then1096 ], [ %call1118, %cond.true1116 ], [ %call1117, %if.else1113 ], [ %call1144, %cond.true1142 ], [ %call1143, %if.then1138 ], [ %call1260, %cond.end1256 ], [ %call1286, %cond.end1283 ], [ %call1635, %cond.true1633 ], [ %call1634, %if.end1630 ], [ %target.addr.8, %if.else1749 ], [ %target.addr.8, %if.then1743 ], [ %call1829, %cond.true1828 ], [ %call1820, %cond.end1824 ], [ %call1834, %cond.end1852 ], [ %call1899, %if.end1897 ], [ %call1988, %sw.bb1982 ], [ null, %cond.true1990 ], [ %call2221, %if.end2211 ], [ %call2228, %cond.true2227 ], [ %call2246, %sw.bb2233 ], [ %call2291, %sw.bb2285 ], [ null, %cond.true2293 ], [ %call2327, %sw.bb2324 ], [ null, %cond.true2329 ], [ %call2335, %sw.bb2333 ], [ null, %cond.true2337 ], [ %call2343, %sw.bb2341 ], [ null, %cond.true2345 ], [ %call2354, %sw.bb2351 ], [ null, %cond.true2356 ], [ %call2372, %sw.bb2360 ], [ null, %cond.true2374 ], [ %call2381, %sw.bb2378 ], [ null, %cond.true2383 ], [ %call2427, %cond.true2426 ], [ %call2418, %cond.end2422 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !12980
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !12980
  ret %struct.rtx_def* %retval.14, !dbg !12980
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !12981 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !12985, metadata !DIExpression()), !dbg !12986
  %idxprom = sext i32 %code to i64, !dbg !12987
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !12987
  %0 = load i8, i8* %arrayidx, align 1, !dbg !12987
  %conv = zext i8 %0 to i32, !dbg !12988
  ret i32 %conv, !dbg !12989
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @reduce_to_bit_field_precision(%struct.rtx_def* %exp, %struct.rtx_def* %target, %union.tree_node* %type) unnamed_addr #4 !dbg !12990 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %exp, metadata !12992, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !12993, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !12994, metadata !DIExpression()), !dbg !13005
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !13006
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !13006
  %bf.load = load i32, i32* %precision, align 4, !dbg !13006
  %bf.clear = and i32 %bf.load, 1023, !dbg !13006
  %conv = zext i32 %bf.clear to i64, !dbg !13006
  call void @llvm.dbg.value(metadata i64 %conv, metadata !12995, metadata !DIExpression()), !dbg !13005
  %tobool = icmp eq %struct.rtx_def* %target, null, !dbg !13007
  br i1 %tobool, label %entry.if.end_crit_edge, label %land.lhs.true, !dbg !13009

entry.if.end_crit_edge:                           ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 0, !dbg !13010
  %bf.load8.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !13011
  br label %if.end, !dbg !13009

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !13012
  %bf.load2 = load i32, i32* %0, align 8, !dbg !13012
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 0, !dbg !13013
  %bf.load4 = load i32, i32* %1, align 8, !dbg !13013
  %bf.lshr3 = xor i32 %bf.load2, %bf.load4, !dbg !13014
  %2 = and i32 %bf.lshr3, 16711680, !dbg !13014
  %cmp = icmp eq i32 %2, 0, !dbg !13014
  %spec.select = select i1 %cmp, %struct.rtx_def* %target, %struct.rtx_def* null, !dbg !13015
  br label %if.end, !dbg !13015

if.end:                                           ; preds = %entry.if.end_crit_edge, %land.lhs.true
  %bf.load40 = phi i32 [ %bf.load8.pre, %entry.if.end_crit_edge ], [ %bf.load4, %land.lhs.true ], !dbg !13011
  %target.addr.0 = phi %struct.rtx_def* [ null, %entry.if.end_crit_edge ], [ %spec.select, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !12993, metadata !DIExpression()), !dbg !13005
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 0, !dbg !13011
  %bf.clear9 = and i32 %bf.load40, 65535, !dbg !13011
  %cmp10 = icmp eq i32 %bf.clear9, 30, !dbg !13011
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !13016

if.then12:                                        ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 1, !dbg !13017
  %arrayidx = bitcast %union.u* %u to i64*, !dbg !13017
  %4 = load i64, i64* %arrayidx, align 8, !dbg !13017
  call void @llvm.dbg.value(metadata i64 %4, metadata !12996, metadata !DIExpression()), !dbg !13018
  %call = tail call %union.tree_node* @build_int_cst_type(%union.tree_node* %type, i64 %4) #6, !dbg !13019
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12999, metadata !DIExpression()), !dbg !13018
  %call13 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call, %struct.rtx_def* %target.addr.0, i32 0, i32 0) #8, !dbg !13020
  br label %cleanup

if.else:                                          ; preds = %if.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13021
  %bf.load14 = load i64, i64* %5, align 8, !dbg !13021
  %bf.cast1 = and i64 %bf.load14, 2097152, !dbg !13021
  %tobool17 = icmp eq i64 %bf.cast1, 0, !dbg !13021
  br i1 %tobool17, label %if.else39, label %if.then18, !dbg !13022

if.then18:                                        ; preds = %if.else
  %cmp19 = icmp ult i32 %bf.clear, 64, !dbg !13023
  br i1 %cmp19, label %if.then21, label %if.else26, !dbg !13025

if.then21:                                        ; preds = %if.then18
  %notmask2 = shl nsw i64 -1, %conv, !dbg !13026
  %sub = xor i64 %notmask2, -1, !dbg !13026
  %bf.lshr23 = lshr i32 %bf.load40, 16, !dbg !13027
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !13027
  %call25 = tail call %struct.rtx_def* @immed_double_const(i64 %sub, i64 0, i32 %bf.clear24) #6, !dbg !13028
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !13000, metadata !DIExpression()), !dbg !13029
  br label %if.end34, !dbg !13030

if.else26:                                        ; preds = %if.then18
  %sub27 = add nsw i64 %conv, -64, !dbg !13031
  %notmask = shl nsw i64 -1, %sub27, !dbg !13032
  %sub29 = xor i64 %notmask, -1, !dbg !13032
  %bf.lshr31 = lshr i32 %bf.load40, 16, !dbg !13033
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !13033
  %call33 = tail call %struct.rtx_def* @immed_double_const(i64 -1, i64 %sub29, i32 %bf.clear32) #6, !dbg !13034
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call33, metadata !13000, metadata !DIExpression()), !dbg !13029
  br label %if.end34

if.end34:                                         ; preds = %if.else26, %if.then21
  %mask.0 = phi %struct.rtx_def* [ %call25, %if.then21 ], [ %call33, %if.else26 ], !dbg !13035
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mask.0, metadata !13000, metadata !DIExpression()), !dbg !13029
  %bf.load35 = load i32, i32* %3, align 8, !dbg !13036
  %bf.lshr36 = lshr i32 %bf.load35, 16, !dbg !13036
  %bf.clear37 = and i32 %bf.lshr36, 255, !dbg !13036
  %call38 = tail call %struct.rtx_def* @expand_and(i32 %bf.clear37, %struct.rtx_def* %exp, %struct.rtx_def* %mask.0, %struct.rtx_def* %target.addr.0) #6, !dbg !13037
  br label %cleanup

if.else39:                                        ; preds = %if.else
  %bf.lshr41 = lshr i32 %bf.load40, 16, !dbg !13038
  %bf.clear42 = and i32 %bf.lshr41, 255, !dbg !13038
  %idxprom = zext i32 %bf.clear42 to i64, !dbg !13038
  %arrayidx43 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !13038
  %6 = load i8, i8* %arrayidx43, align 1, !dbg !13038
  %conv45 = zext i8 %6 to i64, !dbg !13038
  %mul = shl nuw nsw i64 %conv45, 3, !dbg !13038
  %sub48 = sub nsw i64 %mul, %conv, !dbg !13039
  %call49 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %sub48) #6, !dbg !13040
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !13003, metadata !DIExpression()), !dbg !13041
  %bf.load50 = load i32, i32* %3, align 8, !dbg !13042
  %bf.lshr51 = lshr i32 %bf.load50, 16, !dbg !13042
  %bf.clear52 = and i32 %bf.lshr51, 255, !dbg !13042
  %call53 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear52, %struct.rtx_def* %exp, %union.tree_node* %call49, %struct.rtx_def* %target.addr.0, i32 0) #6, !dbg !13043
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !12992, metadata !DIExpression()), !dbg !13005
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call53, i64 0, i32 0, !dbg !13044
  %bf.load54 = load i32, i32* %7, align 8, !dbg !13044
  %bf.lshr55 = lshr i32 %bf.load54, 16, !dbg !13044
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !13044
  %call57 = tail call %struct.rtx_def* @expand_shift(i32 84, i32 %bf.clear56, %struct.rtx_def* %call53, %union.tree_node* %call49, %struct.rtx_def* %target.addr.0, i32 0) #6, !dbg !13045
  br label %cleanup

cleanup:                                          ; preds = %if.else39, %if.end34, %if.then12
  %retval.0 = phi %struct.rtx_def* [ %call13, %if.then12 ], [ %call38, %if.end34 ], [ %call57, %if.else39 ], !dbg !13010
  ret %struct.rtx_def* %retval.0, !dbg !13046
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @get_def_for_expr(%union.tree_node* %name, i32 %code) unnamed_addr #4 !dbg !13047 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !13051, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.value(metadata i32 %code, metadata !13052, metadata !DIExpression()), !dbg !13054
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13055
  %bf.load = load i64, i64* %0, align 8, !dbg !13055
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13057
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !13057
  br i1 %cmp, label %if.end, label %cleanup, !dbg !13058

if.end:                                           ; preds = %entry
  %call = tail call fastcc %union.gimple_statement_d* @get_gimple_for_ssa_name(%union.tree_node* %name) #8, !dbg !13059
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !13053, metadata !DIExpression()), !dbg !13054
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !13060
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !13062

lor.lhs.false:                                    ; preds = %if.end
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* nonnull %call) #8, !dbg !13063
  %cmp2 = icmp eq i32 %call1, %code, !dbg !13064
  %spec.select = select i1 %cmp2, %union.gimple_statement_d* %call, %union.gimple_statement_d* null, !dbg !13065
  ret %union.gimple_statement_d* %spec.select, !dbg !13065

cleanup:                                          ; preds = %if.end, %entry
  ret %union.gimple_statement_d* null, !dbg !13066
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !13067 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !13072, metadata !DIExpression()), !dbg !13073
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !13074
  ret %union.tree_node* %call, !dbg !13075
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !13076 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !13078, metadata !DIExpression()), !dbg !13079
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !13080
  %cmp = icmp ugt i32 %call, 2, !dbg !13082
  br i1 %cmp, label %if.then, label %return, !dbg !13083

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #8, !dbg !13084
  br label %return, !dbg !13085

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !13086
  ret %union.tree_node* %retval.0, !dbg !13087
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_operands(%union.tree_node* %exp0, %union.tree_node* %exp1, %struct.rtx_def* %target, %struct.rtx_def** %op0, %struct.rtx_def** %op1, i32 %modifier) unnamed_addr #4 !dbg !13088 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp0, metadata !13092, metadata !DIExpression()), !dbg !13098
  call void @llvm.dbg.value(metadata %union.tree_node* %exp1, metadata !13093, metadata !DIExpression()), !dbg !13098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !13094, metadata !DIExpression()), !dbg !13098
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !13095, metadata !DIExpression()), !dbg !13098
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !13096, metadata !DIExpression()), !dbg !13098
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !13097, metadata !DIExpression()), !dbg !13098
  %call = tail call i32 @safe_from_p(%struct.rtx_def* %target, %union.tree_node* %exp1, i32 1) #8, !dbg !13099
  %tobool = icmp eq i32 %call, 0, !dbg !13099
  %spec.select = select i1 %tobool, %struct.rtx_def* null, %struct.rtx_def* %target, !dbg !13101
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !13094, metadata !DIExpression()), !dbg !13098
  %call1 = tail call i32 @operand_equal_p(%union.tree_node* %exp0, %union.tree_node* %exp1, i32 0) #6, !dbg !13102
  %tobool2 = icmp eq i32 %call1, 0, !dbg !13102
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !13104

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp0, %struct.rtx_def* %spec.select, i32 0, i32 %modifier) #8, !dbg !13105
  store %struct.rtx_def* %call4, %struct.rtx_def** %op0, align 8, !dbg !13107
  %call5 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call4) #6, !dbg !13108
  br label %if.end13, !dbg !13109

if.else:                                          ; preds = %entry
  %0 = load i32, i32* @flag_evaluation_order, align 4, !dbg !13110
  %tobool6 = icmp eq i32 %0, 0, !dbg !13110
  br i1 %tobool6, label %if.end10, label %land.lhs.true, !dbg !13113

land.lhs.true:                                    ; preds = %if.else
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13114
  %bf.load = load i64, i64* %1, align 8, !dbg !13114
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !13114
  %tobool7 = icmp eq i64 %bf.cast1, 0, !dbg !13114
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !13115

if.then8:                                         ; preds = %land.lhs.true
  %call9 = tail call %union.tree_node* @save_expr(%union.tree_node* %exp0) #6, !dbg !13116
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !13092, metadata !DIExpression()), !dbg !13098
  br label %if.end10, !dbg !13117

if.end10:                                         ; preds = %land.lhs.true, %if.else, %if.then8
  %exp0.addr.0 = phi %union.tree_node* [ %call9, %if.then8 ], [ %exp0, %land.lhs.true ], [ %exp0, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp0.addr.0, metadata !13092, metadata !DIExpression()), !dbg !13098
  %call11 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp0.addr.0, %struct.rtx_def* %spec.select, i32 0, i32 %modifier) #8, !dbg !13118
  store %struct.rtx_def* %call11, %struct.rtx_def** %op0, align 8, !dbg !13119
  %call12 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp1, %struct.rtx_def* null, i32 0, i32 %modifier) #8, !dbg !13120
  br label %if.end13

if.end13:                                         ; preds = %if.end10, %if.then3
  %storemerge = phi %struct.rtx_def* [ %call12, %if.end10 ], [ %call5, %if.then3 ], !dbg !13121
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %op1, align 8, !dbg !13121
  ret void, !dbg !13122
}

declare dso_local %struct.rtx_def* @expand_ternary_op(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @really_constant_p(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_highpart(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_mult_highpart_adjust(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_unop(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.optab_d* @optab_for_tree_code(i32, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_abs(i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local i32 @can_conditionally_move_p(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_conditional_move(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local void @do_compare_rtx_and_jump(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @do_store_flag(%struct.separate_ops* %ops, %struct.rtx_def* %target, i32 %mode) unnamed_addr #4 !dbg !13123 {
entry:
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.separate_ops* %ops, metadata !13127, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !13128, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 %mode, metadata !13129, metadata !DIExpression()), !dbg !13144
  %0 = bitcast %struct.rtx_def** %op0 to i8*, !dbg !13145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !13145
  %1 = bitcast %struct.rtx_def** %op1 to i8*, !dbg !13145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !13145
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !13139, metadata !DIExpression()), !dbg !13144
  %location = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 5, !dbg !13146
  %2 = load i32, i32* %location, align 8, !dbg !13146
  call void @llvm.dbg.value(metadata i32 %2, metadata !13140, metadata !DIExpression()), !dbg !13144
  %op01 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 2, !dbg !13147
  %3 = load %union.tree_node*, %union.tree_node** %op01, align 8, !dbg !13147
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13131, metadata !DIExpression()), !dbg !13144
  %op12 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 3, !dbg !13148
  %4 = load %union.tree_node*, %union.tree_node** %op12, align 8, !dbg !13148
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !13132, metadata !DIExpression()), !dbg !13144
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13149
  %cmp = icmp eq %union.tree_node* %3, %5, !dbg !13151
  %cmp3 = icmp eq %union.tree_node* %4, %5, !dbg !13152
  %or.cond = or i1 %cmp, %cmp3, !dbg !13153
  br i1 %or.cond, label %if.then, label %if.end, !dbg !13153

if.then:                                          ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !13154
  br label %cleanup, !dbg !13155

if.end:                                           ; preds = %entry
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13156
  %7 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !13156
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !13133, metadata !DIExpression()), !dbg !13144
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13157
  %bf.load = load i64, i64* %8, align 8, !dbg !13157
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13157
  %cmp5 = icmp eq i64 %bf.cast1, 14, !dbg !13157
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !13157

cond.true:                                        ; preds = %if.end
  %call = tail call i32 @vector_type_mode(%union.tree_node* %7) #6, !dbg !13157
  %bf.load11.pre = load i64, i64* %8, align 8, !dbg !13158
  br label %cond.end, !dbg !13157

cond.false:                                       ; preds = %if.end
  %type6 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !13157
  %mode7 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i64 0, i32 6, !dbg !13157
  %bf.load8 = load i32, i32* %mode7, align 4, !dbg !13157
  %bf.lshr = lshr i32 %bf.load8, 16, !dbg !13157
  %bf.clear9 = and i32 %bf.lshr, 255, !dbg !13157
  br label %cond.end, !dbg !13157

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load11 = phi i64 [ %bf.load11.pre, %cond.true ], [ %bf.load, %cond.false ], !dbg !13158
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear9, %cond.false ], !dbg !13157
  call void @llvm.dbg.value(metadata i32 %cond, metadata !13135, metadata !DIExpression()), !dbg !13144
  %bf.lshr12 = lshr i64 %bf.load11, 21, !dbg !13158
  %9 = trunc i64 %bf.lshr12 to i32, !dbg !13158
  %bf.cast14 = and i32 %9, 1, !dbg !13158
  call void @llvm.dbg.value(metadata i32 %bf.cast14, metadata !13136, metadata !DIExpression()), !dbg !13144
  %cmp15 = icmp eq i32 %cond, 1, !dbg !13159
  br i1 %cmp15, label %cleanup, label %if.end17, !dbg !13161

if.end17:                                         ; preds = %cond.end
  %call18 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %3) #6, !dbg !13162
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !13131, metadata !DIExpression()), !dbg !13144
  %call19 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %4) #6, !dbg !13163
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !13132, metadata !DIExpression()), !dbg !13144
  %code20 = getelementptr inbounds %struct.separate_ops, %struct.separate_ops* %ops, i64 0, i32 0, !dbg !13164
  %10 = load i32, i32* %code20, align 8, !dbg !13164
  switch i32 %10, label %sw.default [
    i32 101, label %sw.epilog
    i32 102, label %sw.bb21
    i32 97, label %sw.bb22
    i32 98, label %sw.bb30
    i32 99, label %sw.bb39
    i32 100, label %sw.bb49
    i32 103, label %sw.bb59
    i32 104, label %sw.bb60
    i32 105, label %sw.bb61
    i32 106, label %sw.bb62
    i32 107, label %sw.bb63
    i32 108, label %sw.bb64
    i32 109, label %sw.bb65
    i32 110, label %sw.bb66
  ], !dbg !13165

sw.bb21:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 80, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13166

sw.bb22:                                          ; preds = %if.end17
  %call23 = tail call i32 @integer_onep(%union.tree_node* %call19) #6, !dbg !13168
  %tobool = icmp eq i32 %call23, 0, !dbg !13168
  br i1 %tobool, label %if.else, label %if.then24, !dbg !13170

if.then24:                                        ; preds = %sw.bb22
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !13171
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !13132, metadata !DIExpression()), !dbg !13144
  %tobool25 = icmp eq i32 %bf.cast14, 0, !dbg !13172
  %cond26 = select i1 %tobool25, i32 84, i32 88, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %cond26, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13173

if.else:                                          ; preds = %sw.bb22
  %tobool27 = icmp eq i32 %bf.cast14, 0, !dbg !13174
  %cond28 = select i1 %tobool27, i32 85, i32 89, !dbg !13174
  call void @llvm.dbg.value(metadata i32 %cond28, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog

sw.bb30:                                          ; preds = %if.end17
  %tobool31 = icmp eq i32 %bf.cast14, 0, !dbg !13175
  br i1 %tobool31, label %land.lhs.true, label %if.else35, !dbg !13177

land.lhs.true:                                    ; preds = %sw.bb30
  %call32 = tail call i32 @integer_all_onesp(%union.tree_node* %call19) #6, !dbg !13178
  %tobool33 = icmp eq i32 %call32, 0, !dbg !13178
  br i1 %tobool33, label %if.else35, label %if.then34, !dbg !13179

if.then34:                                        ; preds = %land.lhs.true
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !13180
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !13132, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 85, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13181

if.else35:                                        ; preds = %land.lhs.true, %sw.bb30
  %cond37 = select i1 %tobool31, i32 84, i32 88, !dbg !13182
  call void @llvm.dbg.value(metadata i32 %cond37, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog

sw.bb39:                                          ; preds = %if.end17
  %tobool40 = icmp eq i32 %bf.cast14, 0, !dbg !13183
  br i1 %tobool40, label %land.lhs.true41, label %if.else45, !dbg !13185

land.lhs.true41:                                  ; preds = %sw.bb39
  %call42 = tail call i32 @integer_all_onesp(%union.tree_node* %call19) #6, !dbg !13186
  %tobool43 = icmp eq i32 %call42, 0, !dbg !13186
  br i1 %tobool43, label %if.else45, label %if.then44, !dbg !13187

if.then44:                                        ; preds = %land.lhs.true41
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !13188
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !13132, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 82, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13189

if.else45:                                        ; preds = %land.lhs.true41, %sw.bb39
  %cond47 = select i1 %tobool40, i32 83, i32 87, !dbg !13190
  call void @llvm.dbg.value(metadata i32 %cond47, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog

sw.bb49:                                          ; preds = %if.end17
  %call50 = tail call i32 @integer_onep(%union.tree_node* %call19) #6, !dbg !13191
  %tobool51 = icmp eq i32 %call50, 0, !dbg !13191
  br i1 %tobool51, label %if.else55, label %if.then52, !dbg !13193

if.then52:                                        ; preds = %sw.bb49
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !13194
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !13132, metadata !DIExpression()), !dbg !13144
  %tobool53 = icmp eq i32 %bf.cast14, 0, !dbg !13195
  %cond54 = select i1 %tobool53, i32 83, i32 87, !dbg !13195
  call void @llvm.dbg.value(metadata i32 %cond54, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13196

if.else55:                                        ; preds = %sw.bb49
  %tobool56 = icmp eq i32 %bf.cast14, 0, !dbg !13197
  %cond57 = select i1 %tobool56, i32 82, i32 86, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %cond57, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog

sw.bb59:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 90, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13198

sw.bb60:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 91, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13199

sw.bb61:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 96, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13200

sw.bb62:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 95, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13201

sw.bb63:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 94, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13202

sw.bb64:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 93, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13203

sw.bb65:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 92, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13204

sw.bb66:                                          ; preds = %if.end17
  call void @llvm.dbg.value(metadata i32 97, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %sw.epilog, !dbg !13205

sw.default:                                       ; preds = %if.end17
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 9981, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !13206
  br label %sw.epilog, !dbg !13207

sw.epilog:                                        ; preds = %if.then52, %if.else55, %if.then44, %if.else45, %if.then34, %if.else35, %if.then24, %if.else, %if.end17, %sw.default, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %sw.bb60, %sw.bb59, %sw.bb21
  %arg1.4 = phi %union.tree_node* [ %call19, %sw.default ], [ %call19, %sw.bb66 ], [ %call19, %sw.bb65 ], [ %call19, %sw.bb64 ], [ %call19, %sw.bb63 ], [ %call19, %sw.bb62 ], [ %call19, %sw.bb61 ], [ %call19, %sw.bb60 ], [ %call19, %sw.bb59 ], [ %call19, %sw.bb21 ], [ %call19, %if.end17 ], [ %11, %if.then24 ], [ %call19, %if.else ], [ %call19, %if.else35 ], [ %12, %if.then34 ], [ %call19, %if.else45 ], [ %13, %if.then44 ], [ %14, %if.then52 ], [ %call19, %if.else55 ], !dbg !13144
  %code.4 = phi i32 [ undef, %sw.default ], [ 97, %sw.bb66 ], [ 92, %sw.bb65 ], [ 93, %sw.bb64 ], [ 94, %sw.bb63 ], [ 95, %sw.bb62 ], [ 96, %sw.bb61 ], [ 91, %sw.bb60 ], [ 90, %sw.bb59 ], [ 80, %sw.bb21 ], [ 81, %if.end17 ], [ %cond26, %if.then24 ], [ %cond28, %if.else ], [ %cond37, %if.else35 ], [ 85, %if.then34 ], [ %cond47, %if.else45 ], [ 82, %if.then44 ], [ %cond54, %if.then52 ], [ %cond57, %if.else55 ]
  call void @llvm.dbg.value(metadata i32 %code.4, metadata !13130, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1.4, metadata !13132, metadata !DIExpression()), !dbg !13144
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13208
  %bf.load68 = load i64, i64* %15, align 8, !dbg !13208
  %bf.cast702 = and i64 %bf.load68, 65535, !dbg !13210
  %cmp71 = icmp eq i64 %bf.cast702, 24, !dbg !13210
  br i1 %cmp71, label %if.then84, label %lor.lhs.false72, !dbg !13211

lor.lhs.false72:                                  ; preds = %sw.epilog
  %cmp77 = icmp eq i64 %bf.cast702, 23, !dbg !13212
  br i1 %cmp77, label %if.then84, label %lor.lhs.false78, !dbg !13213

lor.lhs.false78:                                  ; preds = %lor.lhs.false72
  %cmp83 = icmp eq i64 %bf.cast702, 25, !dbg !13214
  br i1 %cmp83, label %if.then84, label %if.end86, !dbg !13215

if.then84:                                        ; preds = %lor.lhs.false78, %lor.lhs.false72, %sw.epilog
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !13134, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1.4, metadata !13131, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !13132, metadata !DIExpression()), !dbg !13144
  %call85 = tail call i32 @swap_condition(i32 %code.4) #6, !dbg !13216
  call void @llvm.dbg.value(metadata i32 %call85, metadata !13130, metadata !DIExpression()), !dbg !13144
  br label %if.end86, !dbg !13218

if.end86:                                         ; preds = %if.then84, %lor.lhs.false78
  %arg1.5 = phi %union.tree_node* [ %call18, %if.then84 ], [ %arg1.4, %lor.lhs.false78 ], !dbg !13144
  %arg0.0 = phi %union.tree_node* [ %arg1.4, %if.then84 ], [ %call18, %lor.lhs.false78 ], !dbg !13144
  %code.5 = phi i32 [ %call85, %if.then84 ], [ %code.4, %lor.lhs.false78 ]
  call void @llvm.dbg.value(metadata i32 %code.5, metadata !13130, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0.0, metadata !13131, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1.5, metadata !13132, metadata !DIExpression()), !dbg !13144
  %16 = and i32 %code.5, -2, !dbg !13219
  %switch = icmp eq i32 %16, 80, !dbg !13219
  br i1 %switch, label %land.lhs.true90, label %if.end109, !dbg !13219

land.lhs.true90:                                  ; preds = %if.end86
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13220
  %bf.load92 = load i64, i64* %17, align 8, !dbg !13220
  %bf.cast945 = and i64 %bf.load92, 65535, !dbg !13221
  %cmp95 = icmp eq i64 %bf.cast945, 89, !dbg !13221
  br i1 %cmp95, label %land.lhs.true96, label %if.end109, !dbg !13222

land.lhs.true96:                                  ; preds = %land.lhs.true90
  %call97 = tail call i32 @integer_zerop(%union.tree_node* %arg1.5) #6, !dbg !13223
  %tobool98 = icmp eq i32 %call97, 0, !dbg !13223
  br i1 %tobool98, label %if.end109, label %land.lhs.true99, !dbg !13224

land.lhs.true99:                                  ; preds = %land.lhs.true96
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13225
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !13225
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !13225
  %call100 = tail call i32 @integer_pow2p(%union.tree_node* %18) #6, !dbg !13226
  %tobool101 = icmp eq i32 %call100, 0, !dbg !13226
  br i1 %tobool101, label %if.end109, label %if.then102, !dbg !13227

if.then102:                                       ; preds = %land.lhs.true99
  %19 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !13228
  %call104 = tail call %union.tree_node* %19(i32 %mode, i32 %bf.cast14) #6, !dbg !13229
  call void @llvm.dbg.value(metadata %union.tree_node* %call104, metadata !13141, metadata !DIExpression()), !dbg !13230
  %cmp105 = icmp eq i32 %code.5, 80, !dbg !13231
  %cond106 = select i1 %cmp105, i32 102, i32 101, !dbg !13232
  %call107 = tail call %union.tree_node* @fold_single_bit_test(i32 %2, i32 %cond106, %union.tree_node* %arg0.0, %union.tree_node* %arg1.5, %union.tree_node* %call104) #6, !dbg !13233
  %call108 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call107, %struct.rtx_def* %target, i32 0, i32 0) #8, !dbg !13234
  br label %cleanup

if.end109:                                        ; preds = %land.lhs.true99, %land.lhs.true96, %if.end86, %land.lhs.true90
  %call110 = tail call fastcc %struct.rtx_def* @get_subtarget(%struct.rtx_def* %target) #8, !dbg !13235
  %tobool111 = icmp eq %struct.rtx_def* %call110, null, !dbg !13235
  br i1 %tobool111, label %if.then117, label %lor.lhs.false112, !dbg !13237

lor.lhs.false112:                                 ; preds = %if.end109
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !13238
  %bf.load113 = load i32, i32* %20, align 8, !dbg !13238
  %bf.lshr114 = lshr i32 %bf.load113, 16, !dbg !13238
  %bf.clear115 = and i32 %bf.lshr114, 255, !dbg !13238
  %cmp116 = icmp eq i32 %bf.clear115, %cond, !dbg !13239
  br i1 %cmp116, label %if.end118, label %if.then117, !dbg !13240

if.then117:                                       ; preds = %lor.lhs.false112, %if.end109
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !13139, metadata !DIExpression()), !dbg !13144
  br label %if.end118, !dbg !13241

if.end118:                                        ; preds = %lor.lhs.false112, %if.then117
  %subtarget.0 = phi %struct.rtx_def* [ null, %if.then117 ], [ %target, %lor.lhs.false112 ], !dbg !13144
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subtarget.0, metadata !13139, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op0, metadata !13137, metadata !DIExpression(DW_OP_deref)), !dbg !13144
  call void @llvm.dbg.value(metadata %struct.rtx_def** %op1, metadata !13138, metadata !DIExpression(DW_OP_deref)), !dbg !13144
  call fastcc void @expand_operands(%union.tree_node* %arg0.0, %union.tree_node* %arg1.5, %struct.rtx_def* %subtarget.0, %struct.rtx_def** nonnull %op0, %struct.rtx_def** nonnull %op1, i32 0) #8, !dbg !13242
  %cmp119 = icmp eq %struct.rtx_def* %target, null, !dbg !13243
  br i1 %cmp119, label %if.then120, label %if.end122, !dbg !13245

if.then120:                                       ; preds = %if.end118
  %call121 = call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #6, !dbg !13246
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call121, metadata !13128, metadata !DIExpression()), !dbg !13144
  br label %if.end122, !dbg !13247

if.end122:                                        ; preds = %if.then120, %if.end118
  %target.addr.0 = phi %struct.rtx_def* [ %call121, %if.then120 ], [ %target, %if.end118 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !13128, metadata !DIExpression()), !dbg !13144
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !13248
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !13137, metadata !DIExpression()), !dbg !13144
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !13249
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !13138, metadata !DIExpression()), !dbg !13144
  %call123 = call %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %target.addr.0, i32 %code.5, %struct.rtx_def* %21, %struct.rtx_def* %22, i32 %cond, i32 %bf.cast14, i32 1) #6, !dbg !13250
  br label %cleanup, !dbg !13251

cleanup:                                          ; preds = %cond.end, %if.end122, %if.then102, %if.then
  %retval.0 = phi %struct.rtx_def* [ %6, %if.then ], [ %call108, %if.then102 ], [ %call123, %if.end122 ], [ null, %cond.end ], !dbg !13144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !13252
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !13252
  ret %struct.rtx_def* %retval.0, !dbg !13252
}

declare dso_local void @jumpifnot_1(i32, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_widen_pattern_expr(%struct.separate_ops*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_vec_shift_expr(%struct.separate_ops*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @label_rtx(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_u_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @get_gimple_for_ssa_name(%union.tree_node* %exp) unnamed_addr #0 !dbg !13253 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13258, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.value(metadata i32 undef, metadata !13259, metadata !DIExpression()), !dbg !13260
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 1), align 8, !dbg !13261
  %tobool = icmp eq %struct.bitmap_head_def* %0, null, !dbg !13263
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !13264

land.lhs.true:                                    ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13265
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !13265
  %2 = load i32, i32* %1, align 8, !dbg !13265
  call void @llvm.dbg.value(metadata i32 %2, metadata !13259, metadata !DIExpression()), !dbg !13260
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %0, i32 %2) #6, !dbg !13266
  %tobool1 = icmp eq i32 %call, 0, !dbg !13266
  br i1 %tobool1, label %cleanup, label %if.then, !dbg !13267

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13268
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !13268
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !13268
  br label %cleanup, !dbg !13269

cleanup:                                          ; preds = %land.lhs.true, %entry, %if.then
  %retval.0 = phi %union.gimple_statement_d* [ %4, %if.then ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !13260
  ret %union.gimple_statement_d* %retval.0, !dbg !13270
}

declare dso_local %union.tree_node* @gimple_assign_rhs_to_tree(%union.gimple_statement_d*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @get_rtx_for_ssa_name(%union.tree_node* %exp) unnamed_addr #0 !dbg !13271 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13273, metadata !DIExpression()), !dbg !13275
  %0 = load %struct._var_map*, %struct._var_map** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 0), align 8, !dbg !13276
  %var_partition = getelementptr inbounds %struct._var_map, %struct._var_map* %0, i64 0, i32 0, !dbg !13276
  %1 = load %struct.partition_def*, %struct.partition_def** %var_partition, align 8, !dbg !13276
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13276
  %2 = bitcast %union.tree_node** %version to i32*, !dbg !13276
  %3 = load i32, i32* %2, align 8, !dbg !13276
  %idxprom = zext i32 %3 to i64, !dbg !13276
  %class_element = getelementptr inbounds %struct.partition_def, %struct.partition_def* %1, i64 0, i32 1, i64 %idxprom, i32 0, !dbg !13276
  %4 = load i32, i32* %class_element, align 8, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %4, metadata !13274, metadata !DIExpression()), !dbg !13275
  %partition_to_view = getelementptr inbounds %struct._var_map, %struct._var_map* %0, i64 0, i32 1, !dbg !13277
  %5 = load i32*, i32** %partition_to_view, align 8, !dbg !13277
  %tobool = icmp eq i32* %5, null, !dbg !13279
  br i1 %tobool, label %if.end, label %if.then, !dbg !13280

if.then:                                          ; preds = %entry
  %idxprom2 = sext i32 %4 to i64, !dbg !13281
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2, !dbg !13281
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !13281
  call void @llvm.dbg.value(metadata i32 %6, metadata !13274, metadata !DIExpression()), !dbg !13275
  br label %if.end, !dbg !13282

if.end:                                           ; preds = %entry, %if.then
  %p.0 = phi i32 [ %6, %if.then ], [ %4, %entry ], !dbg !13275
  call void @llvm.dbg.value(metadata i32 %p.0, metadata !13274, metadata !DIExpression()), !dbg !13275
  %cmp = icmp eq i32 %p.0, -1, !dbg !13283
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !13283

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !13283
  br label %cond.end, !dbg !13283

cond.end:                                         ; preds = %if.end, %cond.true
  %7 = load %struct.rtx_def**, %struct.rtx_def*** getelementptr inbounds (%struct.ssaexpand, %struct.ssaexpand* @SA, i64 0, i32 2), align 8, !dbg !13284
  %idxprom4 = sext i32 %p.0 to i64, !dbg !13285
  %arrayidx5 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom4, !dbg !13285
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8, !dbg !13285
  ret %struct.rtx_def* %8, !dbg !13286
}

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_fold_indirect_ref_loc(i32, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @emutls_var_address(%union.tree_node* %var) unnamed_addr #4 !dbg !13287 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !13289, metadata !DIExpression()), !dbg !13295
  %call = tail call %union.tree_node* @emutls_decl(%union.tree_node* %var) #6, !dbg !13296
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13290, metadata !DIExpression()), !dbg !13295
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 548), align 16, !dbg !13297
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13291, metadata !DIExpression()), !dbg !13295
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !13298
  %call1 = tail call %union.tree_node* @build_fold_addr_expr_with_type_loc(i32 0, %union.tree_node* %call, %union.tree_node* %1) #6, !dbg !13298
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !13292, metadata !DIExpression()), !dbg !13295
  %call2 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %call1) #6, !dbg !13299
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !13293, metadata !DIExpression()), !dbg !13295
  %call4 = tail call %union.tree_node* @build_function_call_expr(i32 0, %union.tree_node* %0, %union.tree_node* %call2) #6, !dbg !13300
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !13294, metadata !DIExpression()), !dbg !13295
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13301
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !13301
  %call5 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %2) #6, !dbg !13301
  %call6 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call5, %union.tree_node* %call4) #6, !dbg !13301
  ret %union.tree_node* %call6, !dbg !13302
}

declare dso_local void @assemble_external(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @replace_equiv_address(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @mark_reg_pointer(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local i32 @promote_decl_mode(%union.tree_node*, i32*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @const_vector_from_tree(%union.tree_node* %exp) unnamed_addr #4 !dbg !13303 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13305, metadata !DIExpression()), !dbg !13313
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13314
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !13314
  %1 = load i64*, i64** %0, align 8, !dbg !13314
  %bf.load = load i64, i64* %1, align 8, !dbg !13314
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13314
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !13314
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13314

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !13314
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !13314
  br label %cond.end, !dbg !13314

cond.false:                                       ; preds = %entry
  %type5 = bitcast i64* %1 to %struct.tree_type*, !dbg !13314
  %mode6 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i64 0, i32 6, !dbg !13314
  %bf.load7 = load i32, i32* %mode6, align 4, !dbg !13314
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !13314
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !13314
  br label %cond.end, !dbg !13314

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear8, %cond.false ], !dbg !13314
  call void @llvm.dbg.value(metadata i32 %cond, metadata !13312, metadata !DIExpression()), !dbg !13313
  %call9 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %exp) #6, !dbg !13315
  %tobool = icmp eq i8 %call9, 0, !dbg !13315
  br i1 %tobool, label %if.end, label %if.then, !dbg !13317

if.then:                                          ; preds = %cond.end
  %idxprom = sext i32 %cond to i64, !dbg !13318
  %arrayidx = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !13318
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !13318
  br label %cleanup, !dbg !13319

if.end:                                           ; preds = %cond.end
  %idxprom10 = zext i32 %cond to i64, !dbg !13320
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom10, !dbg !13320
  %3 = load i8, i8* %arrayidx11, align 1, !dbg !13320
  %conv = zext i8 %3 to i32, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %conv, metadata !13307, metadata !DIExpression()), !dbg !13313
  %arrayidx13 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom10, !dbg !13321
  %4 = load i8, i8* %arrayidx13, align 1, !dbg !13321
  %conv14 = zext i8 %4 to i32, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %conv14, metadata !13311, metadata !DIExpression()), !dbg !13313
  %call15 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %conv) #6, !dbg !13322
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call15, metadata !13306, metadata !DIExpression()), !dbg !13313
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13323
  %5 = bitcast i32* %elements to %union.tree_node**, !dbg !13323
  call void @llvm.dbg.value(metadata i32 0, metadata !13308, metadata !DIExpression()), !dbg !13313
  br label %for.cond, !dbg !13324

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc ], [ 0, %if.end ], !dbg !13326
  %link.0.in = phi %union.tree_node** [ %chain, %for.inc ], [ %5, %if.end ]
  %link.0 = load %union.tree_node*, %union.tree_node** %link.0.in, align 8, !dbg !13313
  call void @llvm.dbg.value(metadata %union.tree_node* %link.0, metadata !13309, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !13308, metadata !DIExpression()), !dbg !13313
  %tobool16 = icmp eq %union.tree_node* %link.0, null, !dbg !13327
  br i1 %tobool16, label %for.cond49.preheader, label %for.body, !dbg !13327

for.cond49.preheader:                             ; preds = %for.cond
  %indvars.iv4.lcssa = phi i64 [ %indvars.iv4, %for.cond ], !dbg !13326
  call void @llvm.dbg.value(metadata i64 %indvars.iv4.lcssa, metadata !13308, metadata !DIExpression()), !dbg !13313
  %idxprom53 = zext i8 %4 to i64, !dbg !13328
  %arrayidx54 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom53, !dbg !13328
  %6 = bitcast %struct.rtx_def** %arrayidx54 to i64*, !dbg !13328
  %7 = and i64 %indvars.iv4.lcssa, 4294967295, !dbg !13331
  %8 = zext i8 %3 to i64, !dbg !13331
  br label %for.cond49, !dbg !13331

for.body:                                         ; preds = %for.cond
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13332
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !13332
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !13310, metadata !DIExpression()), !dbg !13313
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13335
  %bf.load18 = load i64, i64* %11, align 8, !dbg !13335
  %bf.cast202 = and i64 %bf.load18, 65535, !dbg !13337
  %cmp21 = icmp eq i64 %bf.cast202, 24, !dbg !13337
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !13338

if.then23:                                        ; preds = %for.body
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13339
  %12 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !13339
  %13 = load %struct.real_value*, %struct.real_value** %12, align 8, !dbg !13339
  %call24 = tail call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %13, i32 %conv14) #6, !dbg !13339
  %arrayidx26 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call15, i64 0, i32 1, i64 %indvars.iv4, !dbg !13340
  store %struct.rtx_def* %call24, %struct.rtx_def** %arrayidx26, align 8, !dbg !13341
  br label %for.inc, !dbg !13340

if.else:                                          ; preds = %for.body
  %cmp31 = icmp eq i64 %bf.cast202, 25, !dbg !13342
  br i1 %cmp31, label %if.then33, label %if.else38, !dbg !13344

if.then33:                                        ; preds = %if.else
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13345
  %14 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !13345
  %15 = load %struct.fixed_value*, %struct.fixed_value** %14, align 8, !dbg !13345
  %call34 = tail call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* byval(%struct.fixed_value) align 8 %15, i32 %conv14) #6, !dbg !13345
  %arrayidx37 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call15, i64 0, i32 1, i64 %indvars.iv4, !dbg !13346
  store %struct.rtx_def* %call34, %struct.rtx_def** %arrayidx37, align 8, !dbg !13347
  br label %for.inc, !dbg !13346

if.else38:                                        ; preds = %if.else
  %int_cst39 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13348
  %low = bitcast i32* %int_cst39 to i64*, !dbg !13348
  %16 = load i64, i64* %low, align 8, !dbg !13348
  %high = getelementptr inbounds i32, i32* %int_cst39, i64 2, !dbg !13349
  %17 = bitcast i32* %high to i64*, !dbg !13349
  %18 = load i64, i64* %17, align 8, !dbg !13349
  %call42 = tail call %struct.rtx_def* @immed_double_const(i64 %16, i64 %18, i32 %conv14) #6, !dbg !13350
  %arrayidx45 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call15, i64 0, i32 1, i64 %indvars.iv4, !dbg !13351
  store %struct.rtx_def* %call42, %struct.rtx_def** %arrayidx45, align 8, !dbg !13352
  br label %for.inc

for.inc:                                          ; preds = %if.then23, %if.else38, %if.then33
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13353
  %indvars.iv.next5 = add nuw i64 %indvars.iv4, 1, !dbg !13354
  call void @llvm.dbg.value(metadata i32 undef, metadata !13308, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13313
  br label %for.cond, !dbg !13355, !llvm.loop !13356

for.cond49:                                       ; preds = %for.cond49.preheader, %for.body52
  %indvars.iv = phi i64 [ %7, %for.cond49.preheader ], [ %indvars.iv.next, %for.body52 ], !dbg !13313
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !13308, metadata !DIExpression()), !dbg !13313
  %cmp50 = icmp ult i64 %indvars.iv, %8, !dbg !13358
  br i1 %cmp50, label %for.body52, label %for.end60, !dbg !13331

for.body52:                                       ; preds = %for.cond49
  %19 = load i64, i64* %6, align 8, !dbg !13359
  %arrayidx57 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call15, i64 0, i32 1, i64 %indvars.iv, !dbg !13360
  %20 = bitcast %struct.rtx_def** %arrayidx57 to i64*, !dbg !13361
  store i64 %19, i64* %20, align 8, !dbg !13361
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !13362
  call void @llvm.dbg.value(metadata i32 undef, metadata !13308, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13313
  br label %for.cond49, !dbg !13363, !llvm.loop !13364

for.end60:                                        ; preds = %for.cond49
  %call61 = tail call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %cond, %struct.rtvec_def* %call15) #6, !dbg !13366
  br label %cleanup, !dbg !13367

cleanup:                                          ; preds = %for.end60, %if.then
  %retval.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %call61, %for.end60 ], !dbg !13313
  ret %struct.rtx_def* %retval.0, !dbg !13368
}

declare dso_local %union.tree_node* @fold_unary_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_constructor_from_list(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* byval(%struct.fixed_value) align 8, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr_constant(%union.tree_node* %exp, i32 %defer, i32 %modifier) unnamed_addr #4 !dbg !13369 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13373, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 %defer, metadata !13374, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !13375, metadata !DIExpression()), !dbg !13377
  %call = tail call %struct.rtx_def* @output_constant_def(%union.tree_node* %exp, i32 %defer) #6, !dbg !13378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !13376, metadata !DIExpression()), !dbg !13377
  %cmp = icmp eq i32 %modifier, 4, !dbg !13379
  br i1 %cmp, label %if.end, label %if.then, !dbg !13381

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @use_anchored_address(%struct.rtx_def* %call) #6, !dbg !13382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !13376, metadata !DIExpression()), !dbg !13377
  br label %if.end, !dbg !13383

if.end:                                           ; preds = %entry, %if.then
  %mem.0 = phi %struct.rtx_def* [ %call1, %if.then ], [ %call, %entry ], !dbg !13377
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem.0, metadata !13376, metadata !DIExpression()), !dbg !13377
  ret %struct.rtx_def* %mem.0, !dbg !13384
}

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !13385 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !13391, metadata !DIExpression()), !dbg !13392
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !13393
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !13393

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !13393
  %0 = load i32, i32* %num, align 8, !dbg !13393
  br label %cond.end, !dbg !13393

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !13393
  ret i32 %cond, !dbg !13393
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !13394 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !13398, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !13399, metadata !DIExpression()), !dbg !13400
  br label %land.end, !dbg !13401

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !13401
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !13401
  ret %struct.constructor_elt_d* %arrayidx, !dbg !13401
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_constructor(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %modifier, i8 zeroext %avoid_temp_mem) unnamed_addr #4 !dbg !13402 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13406, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !13407, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !13408, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i8 %avoid_temp_mem, metadata !13409, metadata !DIExpression()), !dbg !13415
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13416
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !13416
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13410, metadata !DIExpression()), !dbg !13415
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13417
  %bf.load = load i64, i64* %1, align 8, !dbg !13417
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !13417
  %cmp = icmp eq i64 %bf.cast5, 14, !dbg !13417
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13417

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !13417
  br label %cond.end, !dbg !13417

cond.false:                                       ; preds = %entry
  %type2 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !13417
  %mode3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i64 0, i32 6, !dbg !13417
  %bf.load4 = load i32, i32* %mode3, align 4, !dbg !13417
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !13417
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !13417
  br label %cond.end, !dbg !13417

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear5, %cond.false ], !dbg !13417
  call void @llvm.dbg.value(metadata i32 %cond, metadata !13411, metadata !DIExpression()), !dbg !13415
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13418
  %bf.load7 = load i64, i64* %2, align 8, !dbg !13418
  %bf.cast106 = and i64 %bf.load7, 67108864, !dbg !13418
  %tobool = icmp eq i64 %bf.cast106, 0, !dbg !13418
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !13420

land.lhs.true:                                    ; preds = %cond.end
  %bf.cast1513 = and i64 %bf.load7, 262144, !dbg !13421
  %tobool16 = icmp eq i64 %bf.cast1513, 0, !dbg !13421
  %cmp18 = icmp ne %struct.rtx_def* %target, null, !dbg !13422
  %or.cond = and i1 %tobool16, %cmp18, !dbg !13423
  %cmp20 = icmp eq i32 %cond, 1, !dbg !13424
  %or.cond1 = and i1 %or.cond, %cmp20, !dbg !13423
  br i1 %or.cond1, label %land.lhs.true21, label %if.end, !dbg !13423

land.lhs.true21:                                  ; preds = %land.lhs.true
  %call22 = tail call fastcc i32 @all_zeros_p(%union.tree_node* %exp) #8, !dbg !13425
  %tobool23 = icmp eq i32 %call22, 0, !dbg !13425
  br i1 %tobool23, label %land.lhs.true21.if.end_crit_edge, label %if.then, !dbg !13426

land.lhs.true21.if.end_crit_edge:                 ; preds = %land.lhs.true21
  %bf.load27.pre = load i64, i64* %2, align 8, !dbg !13427
  %.pre = and i64 %bf.load27.pre, 67108864, !dbg !13427
  br label %if.end, !dbg !13426

if.then:                                          ; preds = %land.lhs.true21
  %call24 = tail call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #6, !dbg !13428
  %call25 = tail call %struct.rtx_def* @clear_storage(%struct.rtx_def* nonnull %target, %struct.rtx_def* %call24, i32 0) #8, !dbg !13430
  br label %cleanup152, !dbg !13431

if.end:                                           ; preds = %land.lhs.true21.if.end_crit_edge, %cond.end, %land.lhs.true
  %bf.cast307.pre-phi = phi i64 [ %.pre, %land.lhs.true21.if.end_crit_edge ], [ %bf.cast106, %cond.end ], [ %bf.cast106, %land.lhs.true ], !dbg !13427
  %bf.load27 = phi i64 [ %bf.load27.pre, %land.lhs.true21.if.end_crit_edge ], [ %bf.load7, %cond.end ], [ %bf.load7, %land.lhs.true ], !dbg !13427
  %tobool31 = icmp eq i64 %bf.cast307.pre-phi, 0, !dbg !13427
  br i1 %tobool31, label %lor.lhs.false67, label %land.lhs.true32, !dbg !13432

land.lhs.true32:                                  ; preds = %if.end
  %cmp33 = icmp eq i32 %cond, 1, !dbg !13433
  br i1 %cmp33, label %land.lhs.true34, label %lor.lhs.false, !dbg !13434

land.lhs.true34:                                  ; preds = %land.lhs.true32
  %cmp35 = icmp eq %struct.rtx_def* %target, null, !dbg !13435
  br i1 %cmp35, label %if.then80, label %land.lhs.true36, !dbg !13436

land.lhs.true36:                                  ; preds = %land.lhs.true34
  %call37 = tail call i32 @safe_from_p(%struct.rtx_def* nonnull %target, %union.tree_node* %exp, i32 1) #8, !dbg !13437
  %tobool38 = icmp eq i32 %call37, 0, !dbg !13437
  br i1 %tobool38, label %if.then80, label %land.lhs.true36.lor.lhs.false_crit_edge, !dbg !13438

land.lhs.true36.lor.lhs.false_crit_edge:          ; preds = %land.lhs.true36
  %bf.load40.pre = load i64, i64* %2, align 8, !dbg !13439
  br label %lor.lhs.false, !dbg !13438

lor.lhs.false:                                    ; preds = %land.lhs.true36.lor.lhs.false_crit_edge, %land.lhs.true32
  %bf.load40 = phi i64 [ %bf.load40.pre, %land.lhs.true36.lor.lhs.false_crit_edge ], [ %bf.load27, %land.lhs.true32 ], !dbg !13439
  %bf.cast4312 = and i64 %bf.load40, 262144, !dbg !13439
  %tobool44 = icmp eq i64 %bf.cast4312, 0, !dbg !13439
  br i1 %tobool44, label %lor.lhs.false45, label %if.then80, !dbg !13440

lor.lhs.false45:                                  ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13441
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !13441
  %call47 = tail call i32 @host_integerp(%union.tree_node* %4, i32 1) #6, !dbg !13442
  %tobool48 = icmp eq i32 %call47, 0, !dbg !13442
  br i1 %tobool48, label %lor.lhs.false67, label %land.lhs.true49, !dbg !13443

land.lhs.true49:                                  ; preds = %lor.lhs.false45
  %5 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !13444
  %call52 = tail call i64 @tree_low_cst(%union.tree_node* %5, i32 1) #6, !dbg !13444
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13444
  %7 = load i32, i32* %6, align 8, !dbg !13444
  %call54 = tail call fastcc i64 @move_by_pieces_ninsns(i64 %call52, i32 %7, i32 5) #8, !dbg !13444
  %call55 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !13444
  %tobool56 = icmp eq i8 %call55, 0, !dbg !13444
  br i1 %tobool56, label %cond.end59, label %cond.true57, !dbg !13444

cond.true57:                                      ; preds = %land.lhs.true49
  %8 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !13444
  %move_ratio = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %8, i64 0, i32 10, !dbg !13444
  %9 = load i32, i32* %move_ratio, align 4, !dbg !13444
  %phitmp = zext i32 %9 to i64, !dbg !13444
  br label %cond.end59, !dbg !13444

cond.end59:                                       ; preds = %land.lhs.true49, %cond.true57
  %cond60 = phi i64 [ %phitmp, %cond.true57 ], [ 3, %land.lhs.true49 ]
  %cmp62 = icmp ult i64 %call54, %cond60, !dbg !13444
  br i1 %cmp62, label %lor.lhs.false67, label %land.lhs.true64, !dbg !13445

land.lhs.true64:                                  ; preds = %cond.end59
  %call65 = tail call fastcc i32 @mostly_zeros_p(%union.tree_node* %exp) #8, !dbg !13446
  %tobool66 = icmp eq i32 %call65, 0, !dbg !13446
  br i1 %tobool66, label %if.then80, label %lor.lhs.false67, !dbg !13447

lor.lhs.false67:                                  ; preds = %land.lhs.true64, %lor.lhs.false45, %if.end, %cond.end59
  %modifier.off = add i32 %modifier, -3, !dbg !13448
  %switch = icmp ult i32 %modifier.off, 2, !dbg !13448
  br i1 %switch, label %land.lhs.true73, label %if.end96, !dbg !13448

land.lhs.true73:                                  ; preds = %lor.lhs.false67
  %bf.load75 = load i64, i64* %2, align 8, !dbg !13449
  %bf.cast7811 = and i64 %bf.load75, 131072, !dbg !13449
  %tobool79 = icmp eq i64 %bf.cast7811, 0, !dbg !13449
  br i1 %tobool79, label %if.end96, label %if.then80, !dbg !13450

if.then80:                                        ; preds = %land.lhs.true36, %land.lhs.true34, %land.lhs.true64, %lor.lhs.false, %land.lhs.true73
  %tobool81 = icmp eq i8 %avoid_temp_mem, 0, !dbg !13451
  br i1 %tobool81, label %if.end83, label %cleanup152, !dbg !13453

if.end83:                                         ; preds = %if.then80
  %call84 = tail call fastcc %struct.rtx_def* @expand_expr_constant(%union.tree_node* %exp, i32 1, i32 %modifier) #8, !dbg !13454
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !13412, metadata !DIExpression()), !dbg !13455
  %modifier.off3 = add i32 %modifier, -2, !dbg !13456
  %switch4 = icmp ult i32 %modifier.off3, 3, !dbg !13456
  br i1 %switch4, label %cleanup152, label %if.then93, !dbg !13456

if.then93:                                        ; preds = %if.end83
  %call94 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call84) #6, !dbg !13458
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call94, metadata !13412, metadata !DIExpression()), !dbg !13455
  br label %cleanup152, !dbg !13459

if.end96:                                         ; preds = %land.lhs.true73, %lor.lhs.false67
  %cmp97 = icmp eq %struct.rtx_def* %target, null, !dbg !13460
  br i1 %cmp97, label %if.then110, label %lor.lhs.false99, !dbg !13462

lor.lhs.false99:                                  ; preds = %if.end96
  %call100 = tail call i32 @safe_from_p(%struct.rtx_def* nonnull %target, %union.tree_node* %exp, i32 1) #8, !dbg !13463
  %tobool101 = icmp eq i32 %call100, 0, !dbg !13463
  br i1 %tobool101, label %if.then110, label %lor.lhs.false102, !dbg !13464

lor.lhs.false102:                                 ; preds = %lor.lhs.false99
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !13465
  %bf.load103 = load i32, i32* %10, align 8, !dbg !13465
  %bf.clear104 = and i32 %bf.load103, 65535, !dbg !13465
  %cmp105 = icmp eq i32 %bf.clear104, 15, !dbg !13466
  %cmp108 = icmp eq i32 %modifier, 1, !dbg !13467
  %or.cond2 = or i1 %cmp105, %cmp108, !dbg !13468
  br i1 %or.cond2, label %if.then110, label %if.end150, !dbg !13468

if.then110:                                       ; preds = %lor.lhs.false99, %lor.lhs.false102, %if.end96
  %tobool111 = icmp eq i8 %avoid_temp_mem, 0, !dbg !13469
  br i1 %tobool111, label %if.end113, label %cleanup152, !dbg !13472

if.end113:                                        ; preds = %if.then110
  %bf.load115 = load i64, i64* %1, align 8, !dbg !13473
  %bf.lshr116 = lshr i64 %bf.load115, 20, !dbg !13473
  %11 = trunc i64 %bf.lshr116 to i32, !dbg !13473
  %bf.cast118 = and i32 %11, 1, !dbg !13473
  %12 = lshr i64 %bf.load115, 18, !dbg !13473
  %13 = trunc i64 %12 to i32, !dbg !13473
  %mul124 = and i32 %13, 2, !dbg !13473
  %or = or i32 %bf.cast118, %mul124, !dbg !13473
  %type125 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !13473
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type125, i64 0, i32 6, !dbg !13473
  %bf.load126 = load i32, i32* %restrict_flag, align 4, !dbg !13473
  %14 = lshr i32 %bf.load126, 11, !dbg !13473
  %mul129 = and i32 %14, 4, !dbg !13473
  %or130 = or i32 %or, %mul129, !dbg !13473
  %15 = lshr i64 %bf.load115, 48, !dbg !13473
  %16 = trunc i64 %15 to i32, !dbg !13473
  %shl = and i32 %16, 65280, !dbg !13473
  %or135 = or i32 %or130, %shl, !dbg !13473
  %bf.load137 = load i64, i64* %2, align 8, !dbg !13474
  %bf.lshr138 = lshr i64 %bf.load137, 20, !dbg !13474
  %17 = trunc i64 %bf.lshr138 to i32, !dbg !13474
  %bf.cast140 = and i32 %17, 1, !dbg !13474
  %or142 = or i32 %or135, %bf.cast140, !dbg !13475
  %call143 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %0, i32 %or142) #6, !dbg !13476
  %bf.load145 = load i64, i64* %2, align 8, !dbg !13477
  %bf.lshr146 = lshr i64 %bf.load145, 18, !dbg !13477
  %18 = trunc i64 %bf.lshr146 to i32, !dbg !13477
  %bf.cast148 = and i32 %18, 1, !dbg !13477
  %call149 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call143, i32 0, i32 %bf.cast148, i32 1) #6, !dbg !13478
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call149, metadata !13407, metadata !DIExpression()), !dbg !13415
  br label %if.end150, !dbg !13479

if.end150:                                        ; preds = %lor.lhs.false102, %if.end113
  %target.addr.0 = phi %struct.rtx_def* [ %call149, %if.end113 ], [ %target, %lor.lhs.false102 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !13407, metadata !DIExpression()), !dbg !13415
  %call151 = tail call i64 @int_expr_size(%union.tree_node* %exp) #6, !dbg !13480
  tail call fastcc void @store_constructor(%union.tree_node* %exp, %struct.rtx_def* %target.addr.0, i32 0, i64 %call151) #8, !dbg !13481
  br label %cleanup152, !dbg !13482

cleanup152:                                       ; preds = %if.then80, %if.then110, %if.end83, %if.then93, %if.end150, %if.then
  %retval.1 = phi %struct.rtx_def* [ %target.addr.0, %if.end150 ], [ %target, %if.then ], [ null, %if.then80 ], [ %call94, %if.then93 ], [ %call84, %if.end83 ], [ null, %if.then110 ], !dbg !13415
  ret %struct.rtx_def* %retval.1, !dbg !13483
}

declare dso_local %union.tree_node* @fold_read_from_constant_string(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @get_address_description(%union.tree_node*, %struct.mem_address*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @addr_for_mem_ref(%struct.mem_address*, i8 zeroext, i8 zeroext) local_unnamed_addr #1

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @size_diffop_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_and(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_aligning_offset(%union.tree_node* %offset, %union.tree_node* %exp) unnamed_addr #4 !dbg !13484 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !13488, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13489, metadata !DIExpression()), !dbg !13490
  br label %while.cond, !dbg !13491

while.cond:                                       ; preds = %while.body, %entry
  %offset.addr.0 = phi %union.tree_node* [ %offset, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.0, metadata !13488, metadata !DIExpression()), !dbg !13490
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13492
  %bf.load = load i64, i64* %0, align 8, !dbg !13492
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13492
  %cmp = icmp eq i64 %bf.cast1, 116, !dbg !13492
  %cmp5 = icmp eq i64 %bf.cast1, 113, !dbg !13492
  %or.cond11 = or i1 %cmp, %cmp5, !dbg !13492
  br i1 %or.cond11, label %while.body, label %while.end, !dbg !13492

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13493
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !13493
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !13488, metadata !DIExpression()), !dbg !13490
  br label %while.cond, !dbg !13491, !llvm.loop !13494

while.end:                                        ; preds = %while.cond
  %offset.addr.0.lcssa = phi %union.tree_node* [ %offset.addr.0, %while.cond ]
  %bf.cast1.lcssa = phi i64 [ %bf.cast1, %while.cond ], !dbg !13492
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.0.lcssa, metadata !13488, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.0.lcssa, metadata !13488, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.0.lcssa, metadata !13488, metadata !DIExpression()), !dbg !13490
  %cmp11 = icmp eq i64 %bf.cast1.lcssa, 89, !dbg !13495
  br i1 %cmp11, label %lor.lhs.false, label %return, !dbg !13497

lor.lhs.false:                                    ; preds = %while.end
  %operands13 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13498
  %arrayidx14 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands13, i64 1, !dbg !13498
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !13498
  %call = tail call i32 @host_integerp(%union.tree_node* %2, i32 1) #6, !dbg !13499
  %tobool = icmp eq i32 %call, 0, !dbg !13499
  br i1 %tobool, label %return, label %lor.lhs.false15, !dbg !13500

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !13501
  %4 = load i32, i32* @ix86_isa_flags, align 4, !dbg !13502
  %and = and i32 %4, 32, !dbg !13502
  %cmp19 = icmp eq i32 %and, 0, !dbg !13502
  %div = select i1 %cmp19, i64 16, i64 32, !dbg !13503
  %call20 = tail call i32 @compare_tree_int(%union.tree_node* %3, i64 %div) #6, !dbg !13504
  %cmp21 = icmp slt i32 %call20, 1, !dbg !13505
  br i1 %cmp21, label %return, label %lor.lhs.false23, !dbg !13506

lor.lhs.false23:                                  ; preds = %lor.lhs.false15
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !13507
  %call27 = tail call i64 @tree_low_cst(%union.tree_node* %5, i32 1) #6, !dbg !13508
  %add = add nsw i64 %call27, 1, !dbg !13509
  %call28 = tail call i32 @exact_log2(i64 %add) #6, !dbg !13510
  %cmp29 = icmp slt i32 %call28, 0, !dbg !13511
  br i1 %cmp29, label %return, label %if.end, !dbg !13512

if.end:                                           ; preds = %lor.lhs.false23
  br label %while.cond34, !dbg !13513

while.cond34:                                     ; preds = %while.body49, %if.end
  %offset.addr.0.pn = phi %union.tree_node* [ %offset.addr.0.lcssa, %if.end ], [ %offset.addr.1, %while.body49 ]
  %offset.addr.1.in = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.0.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13490
  %offset.addr.1 = load %union.tree_node*, %union.tree_node** %offset.addr.1.in, align 8, !dbg !13490
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.1, metadata !13488, metadata !DIExpression()), !dbg !13490
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13514
  %bf.load36 = load i64, i64* %6, align 8, !dbg !13514
  %bf.cast384 = and i64 %bf.load36, 65535, !dbg !13514
  %cmp39 = icmp eq i64 %bf.cast384, 116, !dbg !13514
  %cmp46 = icmp eq i64 %bf.cast384, 113, !dbg !13514
  %or.cond10 = or i1 %cmp39, %cmp46, !dbg !13514
  br i1 %or.cond10, label %while.body49, label %while.end53, !dbg !13514

while.body49:                                     ; preds = %while.cond34
  br label %while.cond34, !dbg !13513, !llvm.loop !13515

while.end53:                                      ; preds = %while.cond34
  %offset.addr.1.lcssa = phi %union.tree_node* [ %offset.addr.1, %while.cond34 ], !dbg !13490
  %bf.cast384.lcssa = phi i64 [ %bf.cast384, %while.cond34 ], !dbg !13514
  %cmp58 = icmp eq i64 %bf.cast384.lcssa, 79, !dbg !13517
  br i1 %cmp58, label %if.end61, label %return, !dbg !13519

if.end61:                                         ; preds = %while.end53
  br label %while.cond65, !dbg !13520

while.cond65:                                     ; preds = %while.body80, %if.end61
  %offset.addr.1.pn = phi %union.tree_node* [ %offset.addr.1.lcssa, %if.end61 ], [ %offset.addr.2, %while.body80 ]
  %offset.addr.2.in = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.1.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13490
  %offset.addr.2 = load %union.tree_node*, %union.tree_node** %offset.addr.2.in, align 8, !dbg !13490
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.addr.2, metadata !13488, metadata !DIExpression()), !dbg !13490
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13521
  %bf.load67 = load i64, i64* %7, align 8, !dbg !13521
  %bf.cast697 = and i64 %bf.load67, 65535, !dbg !13521
  %cmp70 = icmp eq i64 %bf.cast697, 116, !dbg !13521
  %cmp77 = icmp eq i64 %bf.cast697, 113, !dbg !13521
  %or.cond = or i1 %cmp70, %cmp77, !dbg !13521
  br i1 %or.cond, label %while.body80, label %while.end84, !dbg !13521

while.body80:                                     ; preds = %while.cond65
  br label %while.cond65, !dbg !13520, !llvm.loop !13522

while.end84:                                      ; preds = %while.cond65
  %offset.addr.2.lcssa = phi %union.tree_node* [ %offset.addr.2, %while.cond65 ], !dbg !13490
  %bf.cast697.lcssa = phi i64 [ %bf.cast697, %while.cond65 ], !dbg !13521
  %cmp89 = icmp eq i64 %bf.cast697.lcssa, 121, !dbg !13524
  br i1 %cmp89, label %land.rhs, label %land.end, !dbg !13525

land.rhs:                                         ; preds = %while.end84
  %operands92 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.addr.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13526
  %8 = load %union.tree_node*, %union.tree_node** %operands92, align 8, !dbg !13526
  %cmp94 = icmp eq %union.tree_node* %8, %exp, !dbg !13527
  %phitmp = zext i1 %cmp94 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.end84
  %9 = phi i32 [ 0, %while.end84 ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !13528

return:                                           ; preds = %while.end53, %lor.lhs.false, %while.end, %lor.lhs.false15, %lor.lhs.false23, %land.end
  %retval.0 = phi i32 [ %9, %land.end ], [ 0, %lor.lhs.false23 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ 0, %while.end ], [ 0, %while.end53 ], !dbg !13490
  ret i32 %retval.0, !dbg !13529
}

declare dso_local %struct.rtx_def* @assign_stack_local(i32, i64, i32) local_unnamed_addr #1

declare dso_local void @set_mem_alias_set(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @assign_stack_temp_for_type(i32, i64, i32, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @error(i8*, ...) local_unnamed_addr #1

declare dso_local %union.tree_node* @get_callee_fndecl(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #1

declare dso_local i8* @identifier_to_locale(i8*) local_unnamed_addr #1

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #1

declare dso_local i32 @tree_nonartificial_location(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_builtin(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_call(%union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %t) unnamed_addr #0 !dbg !13530 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !13534, metadata !DIExpression()), !dbg !13536
  %head = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13537
  %0 = bitcast i32* %head to %struct.tree_statement_list_node**, !dbg !13537
  %1 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %0, align 8, !dbg !13537
  %2 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } undef, %struct.tree_statement_list_node* %1, 0, !dbg !13538
  %3 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } %2, %union.tree_node* %t, 1, !dbg !13538
  ret { %struct.tree_statement_list_node*, %union.tree_node* } %3, !dbg !13538
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tsi_end_p(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !13539 {
entry:
  %cmp = icmp eq %struct.tree_statement_list_node* %i.coerce0, null, !dbg !13544
  %conv1 = zext i1 %cmp to i8, !dbg !13545
  ret i8 %conv1, !dbg !13546
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @tsi_stmt(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !13547 {
entry:
  %stmt = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %i.coerce0, i64 0, i32 2, !dbg !13552
  %0 = load %union.tree_node*, %union.tree_node** %stmt, align 8, !dbg !13552
  ret %union.tree_node* %0, !dbg !13553
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @tsi_next(%struct.tree_stmt_iterator* %i) unnamed_addr #0 !dbg !13554 {
entry:
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %i, metadata !13559, metadata !DIExpression()), !dbg !13560
  %ptr = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 0, !dbg !13561
  %0 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %ptr, align 8, !dbg !13561
  %next = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %0, i64 0, i32 1, !dbg !13562
  %1 = bitcast %struct.tree_statement_list_node** %next to i64*, !dbg !13562
  %2 = load i64, i64* %1, align 8, !dbg !13562
  %3 = bitcast %struct.tree_stmt_iterator* %i to i64*, !dbg !13563
  store i64 %2, i64* %3, align 8, !dbg !13563
  ret void, !dbg !13564
}

declare dso_local %struct.rtx_def* @expand_vec_cond_expr(%union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @integer_onep(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @do_jump(%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr_addr_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) unnamed_addr #4 !dbg !13565 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !13567, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !13568, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !13569, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !13570, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i8 0, metadata !13571, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 16, metadata !13572, metadata !DIExpression()), !dbg !13576
  %0 = load i32, i32* @ptr_mode, align 4, !dbg !13577
  call void @llvm.dbg.value(metadata i32 %0, metadata !13573, metadata !DIExpression()), !dbg !13576
  %cmp = icmp eq i32 %tmode, 0, !dbg !13578
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !13580

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end, !dbg !13580

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13581
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !13581
  %2 = load i64*, i64** %1, align 8, !dbg !13581
  %bf.load = load i64, i64* %2, align 8, !dbg !13581
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !13581
  %cmp1 = icmp eq i64 %bf.cast3, 14, !dbg !13581
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13581

cond.true:                                        ; preds = %if.then
  %.cast = bitcast i64* %2 to %union.tree_node*, !dbg !13581
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !13581
  br label %if.end, !dbg !13581

cond.false:                                       ; preds = %if.then
  %type6 = bitcast i64* %2 to %struct.tree_type*, !dbg !13581
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i64 0, i32 6, !dbg !13581
  %bf.load7 = load i32, i32* %mode, align 4, !dbg !13581
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !13581
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !13581
  br label %if.end, !dbg !13581

if.end:                                           ; preds = %entry.if.end_crit_edge, %cond.true, %cond.false
  %tmode.addr.0 = phi i32 [ %tmode, %entry.if.end_crit_edge ], [ %call, %cond.true ], [ %bf.clear8, %cond.false ]
  call void @llvm.dbg.value(metadata i32 %tmode.addr.0, metadata !13569, metadata !DIExpression()), !dbg !13576
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13582
  %3 = bitcast %union.tree_node** %type10 to i64**, !dbg !13582
  %4 = load i64*, i64** %3, align 8, !dbg !13582
  %bf.load12 = load i64, i64* %4, align 8, !dbg !13582
  %bf.cast141 = and i64 %bf.load12, 65535, !dbg !13582
  %cmp15 = icmp eq i64 %bf.cast141, 10, !dbg !13582
  br i1 %cmp15, label %if.then23, label %lor.lhs.false, !dbg !13582

lor.lhs.false:                                    ; preds = %if.end
  %cmp22 = icmp eq i64 %bf.cast141, 12, !dbg !13582
  br i1 %cmp22, label %if.then23, label %if.end34, !dbg !13584

if.then23:                                        ; preds = %lor.lhs.false, %if.end
  %type27 = getelementptr inbounds i64, i64* %4, i64 2, !dbg !13585
  %5 = bitcast i64* %type27 to i64**, !dbg !13585
  %6 = load i64*, i64** %5, align 8, !dbg !13585
  %bf.load29 = load i64, i64* %6, align 8, !dbg !13585
  %bf.lshr30 = lshr i64 %bf.load29, 56, !dbg !13585
  %conv = trunc i64 %bf.lshr30 to i8, !dbg !13585
  call void @llvm.dbg.value(metadata i8 %conv, metadata !13571, metadata !DIExpression()), !dbg !13576
  %7 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !13587
  %call32 = tail call i32 %7(i8 zeroext %conv) #6, !dbg !13588
  call void @llvm.dbg.value(metadata i32 %call32, metadata !13572, metadata !DIExpression()), !dbg !13576
  %8 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 0), align 8, !dbg !13589
  %call33 = tail call i32 %8(i8 zeroext %conv) #6, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %call33, metadata !13573, metadata !DIExpression()), !dbg !13576
  br label %if.end34, !dbg !13591

if.end34:                                         ; preds = %if.then23, %lor.lhs.false
  %address_mode.0 = phi i32 [ %call32, %if.then23 ], [ 16, %lor.lhs.false ], !dbg !13576
  %as.0 = phi i8 [ %conv, %if.then23 ], [ 0, %lor.lhs.false ], !dbg !13576
  %pointer_mode.0 = phi i32 [ %call33, %if.then23 ], [ %0, %lor.lhs.false ], !dbg !13576
  call void @llvm.dbg.value(metadata i32 %pointer_mode.0, metadata !13573, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i8 %as.0, metadata !13571, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 %address_mode.0, metadata !13572, metadata !DIExpression()), !dbg !13576
  %cmp35 = icmp ne i32 %tmode.addr.0, %address_mode.0, !dbg !13592
  %cmp37 = icmp ne i32 %tmode.addr.0, %pointer_mode.0, !dbg !13594
  %or.cond = and i1 %cmp35, %cmp37, !dbg !13595
  %tmode.addr.1 = select i1 %or.cond, i32 %address_mode.0, i32 %tmode.addr.0, !dbg !13595
  call void @llvm.dbg.value(metadata i32 %tmode.addr.1, metadata !13569, metadata !DIExpression()), !dbg !13576
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13596
  %9 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !13596
  %call42 = tail call fastcc %struct.rtx_def* @expand_expr_addr_expr_1(%union.tree_node* %9, %struct.rtx_def* %target, i32 %tmode.addr.1, i32 %modifier, i8 zeroext %as.0) #8, !dbg !13597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !13575, metadata !DIExpression()), !dbg !13576
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 0, !dbg !13598
  %bf.load43 = load i32, i32* %10, align 8, !dbg !13598
  %bf.lshr44 = lshr i32 %bf.load43, 16, !dbg !13598
  %bf.clear45 = and i32 %bf.lshr44, 255, !dbg !13598
  call void @llvm.dbg.value(metadata i32 %bf.clear45, metadata !13574, metadata !DIExpression()), !dbg !13576
  %cmp46 = icmp eq i32 %bf.clear45, 0, !dbg !13599
  %spec.select = select i1 %cmp46, i32 %tmode.addr.1, i32 %bf.clear45, !dbg !13601
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !13574, metadata !DIExpression()), !dbg !13576
  %cmp50 = icmp eq i32 %spec.select, %tmode.addr.1, !dbg !13602
  br i1 %cmp50, label %if.end54, label %if.then52, !dbg !13604

if.then52:                                        ; preds = %if.end34
  %call53 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 %tmode.addr.1, %struct.rtx_def* %call42, i8 zeroext %as.0) #6, !dbg !13605
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !13575, metadata !DIExpression()), !dbg !13576
  br label %if.end54, !dbg !13606

if.end54:                                         ; preds = %if.end34, %if.then52
  %result.0 = phi %struct.rtx_def* [ %call53, %if.then52 ], [ %call42, %if.end34 ], !dbg !13576
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result.0, metadata !13575, metadata !DIExpression()), !dbg !13576
  ret %struct.rtx_def* %result.0, !dbg !13607
}

declare dso_local void @rest_of_decl_compilation(%union.tree_node*, i32, i32) local_unnamed_addr #1

declare dso_local void @expand_decl(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @string_constant(%union.tree_node* %arg, %union.tree_node** %ptr_offset) local_unnamed_addr #4 !dbg !13608 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !13612, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr_offset, metadata !13613, metadata !DIExpression()), !dbg !13626
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg) #6, !dbg !13627
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13612, metadata !DIExpression()), !dbg !13626
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13628
  %bf.load = load i64, i64* %0, align 8, !dbg !13628
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13629
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !13629
  br i1 %cmp, label %if.then, label %if.else83, !dbg !13630

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13631
  %1 = bitcast %union.tree_node** %operands to i64**, !dbg !13631
  %2 = load i64*, i64** %1, align 8, !dbg !13631
  %bf.load2 = load i64, i64* %2, align 8, !dbg !13631
  %bf.cast416 = and i64 %bf.load2, 65535, !dbg !13634
  %cmp5 = icmp eq i64 %bf.cast416, 28, !dbg !13634
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !13635
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !13635

if.then6:                                         ; preds = %if.then
  %4 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17) to i64*), align 8, !dbg !13636
  %5 = bitcast %union.tree_node** %ptr_offset to i64*, !dbg !13638
  store i64 %4, i64* %5, align 8, !dbg !13638
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !13639
  br label %cleanup252, !dbg !13640

if.else:                                          ; preds = %if.then
  %cmp17 = icmp eq i64 %bf.cast416, 32, !dbg !13641
  br i1 %cmp17, label %if.then18, label %if.else22, !dbg !13643

if.then18:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13614, metadata !DIExpression()), !dbg !13626
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !13644
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !13615, metadata !DIExpression()), !dbg !13626
  br label %if.end164, !dbg !13646

if.else22:                                        ; preds = %if.else
  %cmp30 = icmp eq i64 %bf.cast416, 45, !dbg !13647
  br i1 %cmp30, label %if.then31, label %cleanup252, !dbg !13649

if.then31:                                        ; preds = %if.else22
  %arrayidx37 = getelementptr inbounds i64, i64* %2, i64 5, !dbg !13650
  %8 = bitcast i64* %arrayidx37 to %union.tree_node**, !dbg !13650
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !13650
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !13614, metadata !DIExpression()), !dbg !13626
  %arrayidx43 = getelementptr inbounds i64, i64* %2, i64 6, !dbg !13652
  %10 = bitcast i64* %arrayidx43 to %union.tree_node**, !dbg !13652
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !13652
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !13615, metadata !DIExpression()), !dbg !13626
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13653
  %bf.load45 = load i64, i64* %12, align 8, !dbg !13653
  %bf.cast4719 = and i64 %bf.load45, 65535, !dbg !13655
  %cmp48 = icmp eq i64 %bf.cast4719, 28, !dbg !13655
  br i1 %cmp48, label %if.end, label %land.lhs.true, !dbg !13656

land.lhs.true:                                    ; preds = %if.then31
  %cmp53 = icmp eq i64 %bf.cast4719, 32, !dbg !13657
  br i1 %cmp53, label %if.end, label %cleanup252, !dbg !13658

if.end:                                           ; preds = %land.lhs.true, %if.then31
  %call58 = tail call %union.tree_node* @array_ref_low_bound(%union.tree_node* %3) #8, !dbg !13659
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !13616, metadata !DIExpression()), !dbg !13626
  %call59 = tail call i32 @integer_zerop(%union.tree_node* %call58) #6, !dbg !13660
  %tobool = icmp eq i32 %call59, 0, !dbg !13660
  br i1 %tobool, label %if.then60, label %if.end164, !dbg !13662

if.then60:                                        ; preds = %if.end
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13663
  %bf.load62 = load i64, i64* %13, align 8, !dbg !13663
  %bf.cast6420 = and i64 %bf.load62, 65535, !dbg !13666
  %cmp65 = icmp eq i64 %bf.cast6420, 23, !dbg !13666
  br i1 %cmp65, label %if.end67, label %cleanup252, !dbg !13667

if.end67:                                         ; preds = %if.then60
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13668
  %bf.load69 = load i64, i64* %14, align 8, !dbg !13668
  %bf.cast7121 = and i64 %bf.load69, 65535, !dbg !13670
  %cmp72 = icmp eq i64 %bf.cast7121, 23, !dbg !13670
  br i1 %cmp72, label %if.end74, label %cleanup252, !dbg !13671

if.end74:                                         ; preds = %if.end67
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !13672
  %call75 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %15, %union.tree_node* %11) #6, !dbg !13672
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !13672
  %call76 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %16, %union.tree_node* %call58) #6, !dbg !13672
  %call77 = tail call %union.tree_node* @size_diffop_loc(i32 0, %union.tree_node* %call75, %union.tree_node* %call76) #6, !dbg !13672
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !13615, metadata !DIExpression()), !dbg !13626
  br label %if.end164, !dbg !13673

if.else83:                                        ; preds = %entry
  %cmp88 = icmp eq i64 %bf.cast1, 63, !dbg !13674
  br i1 %cmp88, label %if.then94, label %lor.lhs.false, !dbg !13675

lor.lhs.false:                                    ; preds = %if.else83
  %cmp93 = icmp eq i64 %bf.cast1, 66, !dbg !13676
  br i1 %cmp93, label %if.then94, label %cleanup252, !dbg !13677

if.then94:                                        ; preds = %lor.lhs.false, %if.else83
  %operands96 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13678
  %17 = load %union.tree_node*, %union.tree_node** %operands96, align 8, !dbg !13678
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !13617, metadata !DIExpression()), !dbg !13679
  %arrayidx100 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands96, i64 1, !dbg !13680
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx100, align 8, !dbg !13680
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !13621, metadata !DIExpression()), !dbg !13679
  %call101 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %17) #6, !dbg !13681
  call void @llvm.dbg.value(metadata %union.tree_node* %call101, metadata !13617, metadata !DIExpression()), !dbg !13679
  %call102 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %18) #6, !dbg !13682
  call void @llvm.dbg.value(metadata %union.tree_node* %call102, metadata !13621, metadata !DIExpression()), !dbg !13679
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13683
  %bf.load104 = load i64, i64* %19, align 8, !dbg !13683
  %bf.cast1064 = and i64 %bf.load104, 65535, !dbg !13685
  %cmp107 = icmp eq i64 %bf.cast1064, 121, !dbg !13685
  br i1 %cmp107, label %land.lhs.true108, label %if.else130, !dbg !13686

land.lhs.true108:                                 ; preds = %if.then94
  %operands110 = getelementptr inbounds %union.tree_node, %union.tree_node* %call101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13687
  %20 = bitcast %union.tree_node** %operands110 to i64**, !dbg !13687
  %21 = load i64*, i64** %20, align 8, !dbg !13687
  %bf.load113 = load i64, i64* %21, align 8, !dbg !13687
  %bf.cast11514 = and i64 %bf.load113, 65535, !dbg !13688
  %cmp116 = icmp eq i64 %bf.cast11514, 28, !dbg !13688
  %22 = bitcast i64* %21 to %union.tree_node*, !dbg !13689
  br i1 %cmp116, label %if.then126, label %lor.lhs.false117, !dbg !13689

lor.lhs.false117:                                 ; preds = %land.lhs.true108
  %cmp125 = icmp eq i64 %bf.cast11514, 32, !dbg !13690
  br i1 %cmp125, label %if.then126, label %if.else130, !dbg !13691

if.then126:                                       ; preds = %lor.lhs.false117, %land.lhs.true108
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !13614, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata %union.tree_node* %call102, metadata !13615, metadata !DIExpression()), !dbg !13626
  br label %cleanup, !dbg !13692

if.else130:                                       ; preds = %lor.lhs.false117, %if.then94
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13694
  %bf.load132 = load i64, i64* %23, align 8, !dbg !13694
  %bf.cast1345 = and i64 %bf.load132, 65535, !dbg !13696
  %cmp135 = icmp eq i64 %bf.cast1345, 121, !dbg !13696
  br i1 %cmp135, label %land.lhs.true136, label %cleanup, !dbg !13697

land.lhs.true136:                                 ; preds = %if.else130
  %operands138 = getelementptr inbounds %union.tree_node, %union.tree_node* %call102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13698
  %24 = bitcast %union.tree_node** %operands138 to i64**, !dbg !13698
  %25 = load i64*, i64** %24, align 8, !dbg !13698
  %bf.load141 = load i64, i64* %25, align 8, !dbg !13698
  %bf.cast14312 = and i64 %bf.load141, 65535, !dbg !13699
  %cmp144 = icmp eq i64 %bf.cast14312, 28, !dbg !13699
  %26 = bitcast i64* %25 to %union.tree_node*, !dbg !13700
  br i1 %cmp144, label %if.then154, label %lor.lhs.false145, !dbg !13700

lor.lhs.false145:                                 ; preds = %land.lhs.true136
  %cmp153 = icmp eq i64 %bf.cast14312, 32, !dbg !13701
  br i1 %cmp153, label %if.then154, label %cleanup, !dbg !13702

if.then154:                                       ; preds = %lor.lhs.false145, %land.lhs.true136
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !13614, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata %union.tree_node* %call101, metadata !13615, metadata !DIExpression()), !dbg !13626
  br label %cleanup

cleanup:                                          ; preds = %if.then126, %if.then154, %if.else130, %lor.lhs.false145
  %cleanup.dest.slot.0 = phi i1 [ false, %lor.lhs.false145 ], [ false, %if.else130 ], [ true, %if.then154 ], [ true, %if.then126 ]
  %offset.3 = phi %union.tree_node* [ undef, %lor.lhs.false145 ], [ undef, %if.else130 ], [ %call101, %if.then154 ], [ %call102, %if.then126 ]
  %array.2 = phi %union.tree_node* [ undef, %lor.lhs.false145 ], [ undef, %if.else130 ], [ %26, %if.then154 ], [ %22, %if.then126 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %array.2, metadata !13614, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.3, metadata !13615, metadata !DIExpression()), !dbg !13626
  br i1 %cleanup.dest.slot.0, label %if.end164, label %cleanup252

if.end164:                                        ; preds = %if.end, %cleanup, %if.end74, %if.then18
  %offset.4 = phi %union.tree_node* [ %7, %if.then18 ], [ %11, %if.end ], [ %call77, %if.end74 ], [ %offset.3, %cleanup ], !dbg !13703
  %array.3 = phi %union.tree_node* [ %3, %if.then18 ], [ %9, %if.end ], [ %9, %if.end74 ], [ %array.2, %cleanup ], !dbg !13703
  call void @llvm.dbg.value(metadata %union.tree_node* %array.3, metadata !13614, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.4, metadata !13615, metadata !DIExpression()), !dbg !13626
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %array.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13704
  %bf.load166 = load i64, i64* %27, align 8, !dbg !13704
  %bf.cast1686 = and i64 %bf.load166, 65535, !dbg !13705
  %cmp169 = icmp eq i64 %bf.cast1686, 28, !dbg !13705
  br i1 %cmp169, label %if.then170, label %if.else172, !dbg !13706

if.then170:                                       ; preds = %if.end164
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !13707
  %call171 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %28, %union.tree_node* %offset.4) #6, !dbg !13707
  store %union.tree_node* %call171, %union.tree_node** %ptr_offset, align 8, !dbg !13709
  br label %cleanup252, !dbg !13710

if.else172:                                       ; preds = %if.end164
  %cmp177 = icmp eq i64 %bf.cast1686, 32, !dbg !13711
  br i1 %cmp177, label %if.then178, label %cleanup252, !dbg !13712

if.then178:                                       ; preds = %if.else172
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %array.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !13713
  %29 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !13713
  %cmp179 = icmp eq %union.tree_node* %29, null, !dbg !13715
  br i1 %cmp179, label %cleanup252, label %lor.lhs.false180, !dbg !13716

lor.lhs.false180:                                 ; preds = %if.then178
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13716
  %bf.load184 = load i64, i64* %30, align 8, !dbg !13717
  %bf.cast1868 = and i64 %bf.load184, 65535, !dbg !13718
  %cmp187 = icmp eq i64 %bf.cast1868, 28, !dbg !13718
  br i1 %cmp187, label %if.end189, label %cleanup252, !dbg !13719

if.end189:                                        ; preds = %lor.lhs.false180
  %bf.cast1939 = and i64 %bf.load166, 1048576, !dbg !13720
  %tobool194 = icmp eq i64 %bf.cast1939, 0, !dbg !13720
  br i1 %tobool194, label %cleanup252, label %lor.lhs.false195, !dbg !13722

lor.lhs.false195:                                 ; preds = %if.end189
  %bf.cast20010 = and i64 %bf.load166, 65536, !dbg !13723
  %tobool201 = icmp eq i64 %bf.cast20010, 0, !dbg !13723
  br i1 %tobool201, label %lor.lhs.false202, label %cleanup252, !dbg !13724

lor.lhs.false202:                                 ; preds = %lor.lhs.false195
  %31 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !13725
  %call203 = tail call zeroext i8 %31(%union.tree_node* %array.3) #6, !dbg !13726
  %tobool204 = icmp eq i8 %call203, 0, !dbg !13726
  br i1 %tobool204, label %cleanup252, label %if.end206, !dbg !13727

if.end206:                                        ; preds = %lor.lhs.false202
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %array.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13728
  %32 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !13728
  %cmp208 = icmp eq %union.tree_node* %32, null, !dbg !13730
  br i1 %cmp208, label %cleanup252, label %lor.lhs.false209, !dbg !13731

lor.lhs.false209:                                 ; preds = %if.end206
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13731
  %bf.load213 = load i64, i64* %33, align 8, !dbg !13732
  %bf.cast21511 = and i64 %bf.load213, 65535, !dbg !13733
  %cmp216 = icmp eq i64 %bf.cast21511, 23, !dbg !13733
  br i1 %cmp216, label %lor.lhs.false217, label %cleanup252, !dbg !13734

lor.lhs.false217:                                 ; preds = %lor.lhs.false209
  %34 = bitcast %union.tree_node** %initial to %struct.tree_string**, !dbg !13735
  %35 = load %struct.tree_string*, %struct.tree_string** %34, align 8, !dbg !13735
  %length220 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %35, i64 0, i32 1, !dbg !13735
  %36 = load i32, i32* %length220, align 8, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %36, metadata !13622, metadata !DIExpression()), !dbg !13736
  %cmp221 = icmp slt i32 %36, 1, !dbg !13737
  br i1 %cmp221, label %cleanup252, label %lor.lhs.false222, !dbg !13738

lor.lhs.false222:                                 ; preds = %lor.lhs.false217
  %conv = sext i32 %36 to i64, !dbg !13739
  %call225 = tail call i32 @compare_tree_int(%union.tree_node* nonnull %32, i64 %conv) #6, !dbg !13740
  %cmp226 = icmp slt i32 %call225, 0, !dbg !13741
  br i1 %cmp226, label %cleanup252, label %if.end229, !dbg !13742

if.end229:                                        ; preds = %lor.lhs.false222
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !13743
  %call230 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %37, %union.tree_node* %offset.4) #6, !dbg !13743
  call void @llvm.dbg.value(metadata %union.tree_node* %call230, metadata !13615, metadata !DIExpression()), !dbg !13626
  %38 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !13744
  %call234 = tail call i32 @compare_tree_int(%union.tree_node* %38, i64 %conv) #6, !dbg !13746
  %cmp235 = icmp sgt i32 %call234, 0, !dbg !13747
  br i1 %cmp235, label %land.lhs.true237, label %if.end246, !dbg !13748

land.lhs.true237:                                 ; preds = %if.end229
  %call238 = tail call i32 @host_integerp(%union.tree_node* %call230, i32 1) #6, !dbg !13749
  %tobool239 = icmp eq i32 %call238, 0, !dbg !13749
  br i1 %tobool239, label %cleanup252, label %lor.lhs.false240, !dbg !13750

lor.lhs.false240:                                 ; preds = %land.lhs.true237
  %call242 = tail call i32 @compare_tree_int(%union.tree_node* %call230, i64 %conv) #6, !dbg !13751
  %cmp243 = icmp sgt i32 %call242, -1, !dbg !13752
  br i1 %cmp243, label %cleanup252, label %if.end246, !dbg !13753

if.end246:                                        ; preds = %lor.lhs.false240, %if.end229
  store %union.tree_node* %call230, %union.tree_node** %ptr_offset, align 8, !dbg !13754
  %39 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !13755
  br label %cleanup252, !dbg !13756

cleanup252:                                       ; preds = %land.lhs.true, %if.end67, %if.then60, %land.lhs.true237, %lor.lhs.false209, %lor.lhs.false202, %lor.lhs.false195, %if.end189, %lor.lhs.false180, %if.else172, %if.end246, %if.then178, %lor.lhs.false222, %lor.lhs.false217, %if.end206, %lor.lhs.false240, %lor.lhs.false, %if.else22, %cleanup, %if.then170, %if.then6
  %retval.2 = phi %union.tree_node* [ %6, %if.then6 ], [ %array.3, %if.then170 ], [ null, %cleanup ], [ null, %land.lhs.true ], [ null, %if.then60 ], [ null, %if.end67 ], [ null, %if.else22 ], [ null, %lor.lhs.false ], [ %39, %if.end246 ], [ null, %lor.lhs.false180 ], [ null, %if.then178 ], [ null, %lor.lhs.false202 ], [ null, %lor.lhs.false195 ], [ null, %if.end189 ], [ null, %lor.lhs.false222 ], [ null, %lor.lhs.false217 ], [ null, %lor.lhs.false209 ], [ null, %if.end206 ], [ null, %lor.lhs.false240 ], [ null, %land.lhs.true237 ], [ null, %if.else172 ]
  ret %union.tree_node* %retval.2, !dbg !13757
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @try_casesi(%union.tree_node* %index_type, %union.tree_node* %index_expr, %union.tree_node* %minval, %union.tree_node* %range, %struct.rtx_def* %table_label, %struct.rtx_def* %default_label, %struct.rtx_def* %fallback_label) local_unnamed_addr #4 !dbg !13758 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !13762, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata %union.tree_node* %index_expr, metadata !13763, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata %union.tree_node* %minval, metadata !13764, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata %union.tree_node* %range, metadata !13765, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata %struct.rtx_def* %table_label, metadata !13766, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata %struct.rtx_def* %default_label, metadata !13767, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata %struct.rtx_def* %fallback_label, metadata !13768, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 16, metadata !13769, metadata !DIExpression()), !dbg !13775
  ret i32 0, !dbg !13776
}

; Function Attrs: nounwind uwtable
define dso_local i32 @try_tablejump(%union.tree_node* %index_type, %union.tree_node* %index_expr, %union.tree_node* %minval, %union.tree_node* %range, %struct.rtx_def* %table_label, %struct.rtx_def* %default_label) local_unnamed_addr #4 !dbg !13778 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !13782, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %union.tree_node* %index_expr, metadata !13783, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %union.tree_node* %minval, metadata !13784, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %union.tree_node* %range, metadata !13785, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %table_label, metadata !13786, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %default_label, metadata !13787, metadata !DIExpression()), !dbg !13789
  %call = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %index_type, %union.tree_node* %index_expr) #6, !dbg !13790
  %call1 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %index_type, %union.tree_node* %minval) #6, !dbg !13790
  %call2 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %index_type, %union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !13790
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !13783, metadata !DIExpression()), !dbg !13789
  %call3 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call2) #8, !dbg !13791
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !13788, metadata !DIExpression()), !dbg !13789
  tail call void @do_pending_stack_adjust() #6, !dbg !13792
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13793
  %bf.load = load i64, i64* %0, align 8, !dbg !13793
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13793
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !13793
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13793

cond.true:                                        ; preds = %entry
  %call4 = tail call i32 @vector_type_mode(%union.tree_node* %index_type) #6, !dbg !13793
  %bf.load8.pre = load i64, i64* %0, align 8, !dbg !13794
  br label %cond.end, !dbg !13793

cond.false:                                       ; preds = %entry
  %type = bitcast %union.tree_node* %index_type to %struct.tree_type*, !dbg !13793
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !13793
  %bf.load5 = load i32, i32* %mode, align 4, !dbg !13793
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !13793
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !13793
  br label %cond.end, !dbg !13793

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load8 = phi i64 [ %bf.load8.pre, %cond.true ], [ %bf.load, %cond.false ], !dbg !13794
  %cond = phi i32 [ %call4, %cond.true ], [ %bf.clear6, %cond.false ], !dbg !13793
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !13794
  %cmp11 = icmp eq i64 %bf.cast102, 14, !dbg !13794
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !13794

cond.true12:                                      ; preds = %cond.end
  %call13 = tail call i32 @vector_type_mode(%union.tree_node* %index_type) #6, !dbg !13794
  br label %cond.end20, !dbg !13794

cond.false14:                                     ; preds = %cond.end
  %type15 = bitcast %union.tree_node* %index_type to %struct.tree_type*, !dbg !13794
  %mode16 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i64 0, i32 6, !dbg !13794
  %bf.load17 = load i32, i32* %mode16, align 4, !dbg !13794
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !13794
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !13794
  br label %cond.end20, !dbg !13794

cond.end20:                                       ; preds = %cond.false14, %cond.true12
  %cond21 = phi i32 [ %call13, %cond.true12 ], [ %bf.clear19, %cond.false14 ], !dbg !13794
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %range, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13795
  %1 = bitcast %union.tree_node** %type22 to i64**, !dbg !13795
  %2 = load i64*, i64** %1, align 8, !dbg !13795
  %bf.load24 = load i64, i64* %2, align 8, !dbg !13795
  %bf.cast263 = and i64 %bf.load24, 65535, !dbg !13795
  %cmp27 = icmp eq i64 %bf.cast263, 14, !dbg !13795
  br i1 %cmp27, label %cond.true28, label %cond.false32, !dbg !13795

cond.true28:                                      ; preds = %cond.end20
  %.cast = bitcast i64* %2 to %union.tree_node*, !dbg !13795
  %call31 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !13795
  br label %cond.end40, !dbg !13795

cond.false32:                                     ; preds = %cond.end20
  %type35 = bitcast i64* %2 to %struct.tree_type*, !dbg !13795
  %mode36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type35, i64 0, i32 6, !dbg !13795
  %bf.load37 = load i32, i32* %mode36, align 4, !dbg !13795
  %bf.lshr38 = lshr i32 %bf.load37, 16, !dbg !13795
  %bf.clear39 = and i32 %bf.lshr38, 255, !dbg !13795
  br label %cond.end40, !dbg !13795

cond.end40:                                       ; preds = %cond.false32, %cond.true28
  %cond41 = phi i32 [ %call31, %cond.true28 ], [ %bf.clear39, %cond.false32 ], !dbg !13795
  %call42 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %range) #8, !dbg !13796
  %3 = load i64*, i64** %1, align 8, !dbg !13797
  %bf.load46 = load i64, i64* %3, align 8, !dbg !13797
  %bf.lshr47 = lshr i64 %bf.load46, 21, !dbg !13797
  %4 = trunc i64 %bf.lshr47 to i32, !dbg !13797
  %bf.cast49 = and i32 %4, 1, !dbg !13797
  %call50 = tail call %struct.rtx_def* @convert_modes(i32 %cond21, i32 %cond41, %struct.rtx_def* %call42, i32 %bf.cast49) #8, !dbg !13798
  tail call fastcc void @do_tablejump(%struct.rtx_def* %call3, i32 %cond, %struct.rtx_def* %call50, %struct.rtx_def* %table_label, %struct.rtx_def* %default_label) #8, !dbg !13799
  ret i32 1, !dbg !13800
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_tablejump(%struct.rtx_def* %index, i32 %mode, %struct.rtx_def* %range, %struct.rtx_def* %table_label, %struct.rtx_def* %default_label) unnamed_addr #4 !dbg !13801 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %index, metadata !13805, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.value(metadata i32 %mode, metadata !13806, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %range, metadata !13807, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %table_label, metadata !13808, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.value(metadata %struct.rtx_def* %default_label, metadata !13809, metadata !DIExpression()), !dbg !13812
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %range, i64 0, i32 1, !dbg !13813
  %arrayidx = bitcast %union.u* %u to i64*, !dbg !13813
  %0 = load i64, i64* %arrayidx, align 8, !dbg !13813
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !13815
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !13816
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !13816
  %max_jumptable_ents = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 10, !dbg !13817
  %3 = load i32, i32* %max_jumptable_ents, align 4, !dbg !13817
  %conv = sext i32 %3 to i64, !dbg !13815
  %cmp = icmp sgt i64 %0, %conv, !dbg !13818
  br i1 %cmp, label %if.then, label %if.end, !dbg !13819

if.then:                                          ; preds = %entry
  %conv5 = trunc i64 %0 to i32, !dbg !13820
  store i32 %conv5, i32* %max_jumptable_ents, align 4, !dbg !13821
  br label %if.end, !dbg !13822

if.end:                                           ; preds = %if.then, %entry
  %tobool = icmp eq %struct.rtx_def* %default_label, null, !dbg !13823
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !13825

if.then9:                                         ; preds = %if.end
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %range, i32 87, %struct.rtx_def* null, i32 %mode, i32 1, %struct.rtx_def* nonnull %default_label) #6, !dbg !13826
  br label %if.end10, !dbg !13826

if.end10:                                         ; preds = %if.end, %if.then9
  %cmp11 = icmp eq i32 %mode, 16, !dbg !13827
  br i1 %cmp11, label %if.end14, label %if.then13, !dbg !13829

if.then13:                                        ; preds = %if.end10
  %call = tail call %struct.rtx_def* @convert_to_mode(i32 16, %struct.rtx_def* %index, i32 1) #8, !dbg !13830
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !13805, metadata !DIExpression()), !dbg !13812
  br label %if.end14, !dbg !13831

if.end14:                                         ; preds = %if.end10, %if.then13
  %index.addr.0 = phi %struct.rtx_def* [ %call, %if.then13 ], [ %index, %if.end10 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %index.addr.0, metadata !13805, metadata !DIExpression()), !dbg !13812
  %4 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !13832
  %conv16 = zext i8 %4 to i64, !dbg !13832
  %call17 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv16) #6, !dbg !13832
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 16, %struct.rtx_def* %index.addr.0, %struct.rtx_def* %call17) #6, !dbg !13832
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %table_label) #6, !dbg !13832
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %call18, %struct.rtx_def* %call19) #6, !dbg !13832
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !13805, metadata !DIExpression()), !dbg !13812
  %call21 = tail call %struct.rtx_def* @memory_address_addr_space(i32 16, %struct.rtx_def* %call20, i8 zeroext 0) #6, !dbg !13833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !13805, metadata !DIExpression()), !dbg !13812
  %call22 = tail call %struct.rtx_def* @gen_reg_rtx(i32 16) #6, !dbg !13834
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !13810, metadata !DIExpression()), !dbg !13812
  %call23 = tail call %struct.rtx_def* @gen_const_mem(i32 16, %struct.rtx_def* %call21) #6, !dbg !13835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call23, metadata !13811, metadata !DIExpression()), !dbg !13812
  tail call void @convert_move(%struct.rtx_def* %call22, %struct.rtx_def* %call23, i32 0) #8, !dbg !13836
  %call24 = tail call %struct.rtx_def* @gen_tablejump(%struct.rtx_def* %call22, %struct.rtx_def* %table_label) #6, !dbg !13837
  %call25 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call24) #6, !dbg !13838
  %5 = load i32, i32* @flag_pic, align 4, !dbg !13839
  %tobool26 = icmp eq i32 %5, 0, !dbg !13839
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !13841

if.then27:                                        ; preds = %if.end14
  %call28 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !13842
  br label %if.end29, !dbg !13842

if.end29:                                         ; preds = %if.end14, %if.then27
  ret void, !dbg !13843
}

; Function Attrs: nounwind uwtable
define dso_local i32 @vector_mode_valid_p(i32 %mode) local_unnamed_addr #4 !dbg !13844 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !13848, metadata !DIExpression()), !dbg !13851
  %idxprom = zext i32 %mode to i64, !dbg !13852
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !13852
  %0 = load i8, i8* %arrayidx, align 1, !dbg !13852
  %conv = zext i8 %0 to i32, !dbg !13852
  call void @llvm.dbg.value(metadata i32 %conv, metadata !13849, metadata !DIExpression()), !dbg !13851
  %conv.off = add nsw i32 %conv, -12, !dbg !13853
  %switch = icmp ult i32 %conv.off, 6, !dbg !13853
  br i1 %switch, label %if.end, label %cleanup, !dbg !13853

if.end:                                           ; preds = %entry
  %1 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 59), align 8, !dbg !13855
  %call = tail call zeroext i8 %1(i32 %mode) #6, !dbg !13857
  %tobool = icmp eq i8 %call, 0, !dbg !13857
  br i1 %tobool, label %if.end17, label %cleanup, !dbg !13858

if.end17:                                         ; preds = %if.end
  %arrayidx19 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !13859
  %2 = load i8, i8* %arrayidx19, align 1, !dbg !13859
  %conv20 = zext i8 %2 to i32, !dbg !13859
  call void @llvm.dbg.value(metadata i32 %conv20, metadata !13850, metadata !DIExpression()), !dbg !13851
  %3 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 58), align 8, !dbg !13860
  %call21 = tail call zeroext i8 %3(i32 %conv20) #6, !dbg !13861
  %conv22 = zext i8 %call21 to i32, !dbg !13861
  br label %cleanup, !dbg !13862

cleanup:                                          ; preds = %if.end, %entry, %if.end17
  %retval.0 = phi i32 [ %conv22, %if.end17 ], [ 0, %entry ], [ 1, %if.end ], !dbg !13851
  ret i32 %retval.0, !dbg !13863
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_personality_function(i8* %name) local_unnamed_addr #4 !dbg !13864 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !13868, metadata !DIExpression()), !dbg !13871
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !13872
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !13873
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !13874
  %call = tail call %union.tree_node* (%union.tree_node*, ...) @build_function_type_list(%union.tree_node* %0, %union.tree_node* %0, %union.tree_node* %1, %union.tree_node* %2, %union.tree_node* %2, %union.tree_node* null) #6, !dbg !13875
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13870, metadata !DIExpression()), !dbg !13871
  %call1 = tail call %union.tree_node* @get_identifier(i8* %name) #6, !dbg !13876
  %call2 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 29, %union.tree_node* %call1, %union.tree_node* %call) #6, !dbg !13876
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !13869, metadata !DIExpression()), !dbg !13871
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13877
  %3 = bitcast i40* %artificial_flag to i64*, !dbg !13877
  %bf.load = load i64, i64* %3, align 8, !dbg !13878
  %bf.set6 = or i64 %bf.load, 33558528, !dbg !13879
  store i64 %bf.set6, i64* %3, align 8, !dbg !13879
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13880
  %bf.load7 = load i64, i64* %4, align 8, !dbg !13881
  %bf.set9 = or i64 %bf.load7, 134217728, !dbg !13881
  store i64 %bf.set9, i64* %4, align 8, !dbg !13881
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13882
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !13882
  %tobool = icmp eq %struct.rtx_def* %5, null, !dbg !13882
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !13882

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13882

cond.false:                                       ; preds = %entry
  tail call void @make_decl_rtl(%union.tree_node* %call2) #6, !dbg !13882
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !13882
  br label %cond.end, !dbg !13882

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %5, %cond.true ], !dbg !13882
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !13882
  %6 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !13882
  %7 = load i32*, i32** %6, align 8, !dbg !13882
  %bf.load14 = load i32, i32* %7, align 8, !dbg !13882
  %bf.clear15 = and i32 %bf.load14, 67108864, !dbg !13882
  %tobool16 = icmp eq i32 %bf.clear15, 0, !dbg !13882
  br i1 %tobool16, label %cond.end19, label %cond.true17, !dbg !13882

cond.true17:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 10304, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !13882
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !13882
  br label %cond.end19, !dbg !13882

cond.end19:                                       ; preds = %cond.end, %cond.true17
  %8 = phi %struct.rtx_def* [ %cond, %cond.end ], [ %.pre, %cond.true17 ], !dbg !13882
  %tobool23 = icmp eq %struct.rtx_def* %8, null, !dbg !13882
  br i1 %tobool23, label %cond.false27, label %cond.true24, !dbg !13882

cond.true24:                                      ; preds = %cond.end19
  br label %cond.end30, !dbg !13882

cond.false27:                                     ; preds = %cond.end19
  tail call void @make_decl_rtl(%union.tree_node* %call2) #6, !dbg !13882
  %cond31.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !13882
  br label %cond.end30, !dbg !13882

cond.end30:                                       ; preds = %cond.false27, %cond.true24
  %cond31 = phi %struct.rtx_def* [ %cond31.pre, %cond.false27 ], [ %8, %cond.true24 ], !dbg !13882
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !13882
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !13882
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !13882
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !13882
  %rt_tree = bitcast %union.rtunion_def* %10 to %union.tree_node**, !dbg !13882
  store %union.tree_node* null, %union.tree_node** %rt_tree, align 8, !dbg !13882
  ret %union.tree_node* %call2, !dbg !13883
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_personality_function(%union.tree_node* %decl) local_unnamed_addr #4 !dbg !13884 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !13886, metadata !DIExpression()), !dbg !13889
  %personality1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 2, !dbg !13890
  %0 = load %union.tree_node*, %union.tree_node** %personality1, align 8, !dbg !13890
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13887, metadata !DIExpression()), !dbg !13889
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 1, !dbg !13891
  %1 = load %struct.function*, %struct.function** %f, align 8, !dbg !13891
  %call = tail call i32 @function_needs_eh_personality(%struct.function* %1) #6, !dbg !13892
  call void @llvm.dbg.value(metadata i32 %call, metadata !13888, metadata !DIExpression()), !dbg !13889
  %cmp = icmp eq i32 %call, 0, !dbg !13893
  br i1 %cmp, label %cleanup, label %if.end, !dbg !13895

if.end:                                           ; preds = %entry
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !13896
  %cmp3 = icmp eq i32 %call, 1, !dbg !13898
  %or.cond = and i1 %tobool, %cmp3, !dbg !13899
  br i1 %or.cond, label %if.then4, label %if.end6, !dbg !13899

if.then4:                                         ; preds = %if.end
  %2 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 45), align 8, !dbg !13900
  %call5 = tail call %union.tree_node* %2() #6, !dbg !13901
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !13887, metadata !DIExpression()), !dbg !13889
  br label %if.end6, !dbg !13902

if.end6:                                          ; preds = %if.end, %if.then4
  %personality.0 = phi %union.tree_node* [ %0, %if.end ], [ %call5, %if.then4 ], !dbg !13889
  call void @llvm.dbg.value(metadata %union.tree_node* %personality.0, metadata !13887, metadata !DIExpression()), !dbg !13889
  %cmp7 = icmp ne i32 %call, 2, !dbg !13903
  %cmp9 = icmp ne %union.tree_node* %personality.0, null, !dbg !13905
  %or.cond1 = or i1 %cmp7, %cmp9, !dbg !13906
  br i1 %or.cond1, label %if.end10, label %cond.true, !dbg !13906

cond.true:                                        ; preds = %if.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 10327, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !13905
  br label %if.end10, !dbg !13905

if.end10:                                         ; preds = %if.end6, %cond.true
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %personality.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13907
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !13907
  %tobool11 = icmp eq %struct.rtx_def* %3, null, !dbg !13907
  br i1 %tobool11, label %cond.false15, label %cond.true12, !dbg !13907

cond.true12:                                      ; preds = %if.end10
  br label %cond.end18, !dbg !13907

cond.false15:                                     ; preds = %if.end10
  tail call void @make_decl_rtl(%union.tree_node* %personality.0) #6, !dbg !13907
  %cond19.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !13907
  br label %cond.end18, !dbg !13907

cond.end18:                                       ; preds = %cond.false15, %cond.true12
  %cond19 = phi %struct.rtx_def* [ %cond19.pre, %cond.false15 ], [ %3, %cond.true12 ], !dbg !13907
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !13907
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13907
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13907
  br label %cleanup, !dbg !13908

cleanup:                                          ; preds = %entry, %cond.end18
  %retval.0 = phi %struct.rtx_def* [ %4, %cond.end18 ], [ null, %entry ], !dbg !13889
  ret %struct.rtx_def* %retval.0, !dbg !13909
}

declare dso_local i32 @function_needs_eh_personality(%struct.function*) local_unnamed_addr #1

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #1

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #1

declare dso_local i32 @ix86_function_type_abi(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @ix86_reg_parm_stack_space(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @init_cumulative_args(%struct.ix86_args*, %union.tree_node*, %struct.rtx_def*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @function_arg(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @function_arg_advance(%struct.ix86_args*, i32, %union.tree_node*, i32) local_unnamed_addr #1

declare dso_local void @emit_jump(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @change_address(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @split_double(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @store_by_pieces_2(%struct.rtx_def* (%struct.rtx_def*, ...)* %genfun, i32 %mode, %struct.store_by_pieces_d* %data) unnamed_addr #4 !dbg !13910 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* (%struct.rtx_def*, ...)* %genfun, metadata !13914, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i32 %mode, metadata !13915, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata %struct.store_by_pieces_d* %data, metadata !13916, metadata !DIExpression()), !dbg !13920
  %idxprom = zext i32 %mode to i64, !dbg !13921
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !13921
  %0 = load i8, i8* %arrayidx, align 1, !dbg !13921
  call void @llvm.dbg.value(metadata i8 %0, metadata !13917, metadata !DIExpression()), !dbg !13920
  %len = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 4, !dbg !13920
  %conv2 = zext i8 %0 to i64, !dbg !13920
  %reverse = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 8, !dbg !13922
  %offset = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 5, !dbg !13922
  %autinc_to = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 2, !dbg !13925
  %to = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 0, !dbg !13925
  %to_addr = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 1, !dbg !13925
  %constfun = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 6, !dbg !13927
  %constfundata = getelementptr inbounds %struct.store_by_pieces_d, %struct.store_by_pieces_d* %data, i64 0, i32 7, !dbg !13927
  %.pre = load i64, i64* %len, align 8, !dbg !13928
  br label %while.cond, !dbg !13929

while.cond:                                       ; preds = %if.end21, %entry
  %1 = phi i64 [ %sub24, %if.end21 ], [ %.pre, %entry ], !dbg !13928
  %cmp = icmp ult i64 %1, %conv2, !dbg !13930
  br i1 %cmp, label %while.end, label %while.body, !dbg !13929

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %reverse, align 8, !dbg !13931
  %tobool = icmp eq i32 %2, 0, !dbg !13932
  br i1 %tobool, label %if.end, label %if.then, !dbg !13933

if.then:                                          ; preds = %while.body
  %3 = load i64, i64* %offset, align 8, !dbg !13934
  %sub = sub nsw i64 %3, %conv2, !dbg !13934
  store i64 %sub, i64* %offset, align 8, !dbg !13934
  br label %if.end, !dbg !13935

if.end:                                           ; preds = %while.body, %if.then
  %4 = load i32, i32* %autinc_to, align 8, !dbg !13936
  %tobool5 = icmp eq i32 %4, 0, !dbg !13937
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !13925
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !13938

if.then6:                                         ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %to_addr, align 8, !dbg !13939
  %7 = load i64, i64* %offset, align 8, !dbg !13939
  %call = tail call %struct.rtx_def* @adjust_automodify_address_1(%struct.rtx_def* %5, i32 %mode, %struct.rtx_def* %6, i64 %7, i32 1) #6, !dbg !13939
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !13918, metadata !DIExpression()), !dbg !13920
  br label %if.end11, !dbg !13940

if.else:                                          ; preds = %if.end
  %8 = load i64, i64* %offset, align 8, !dbg !13941
  %call10 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %5, i32 %mode, i64 %8, i32 1, i32 1) #6, !dbg !13941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !13918, metadata !DIExpression()), !dbg !13920
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then6
  %to1.0 = phi %struct.rtx_def* [ %call, %if.then6 ], [ %call10, %if.else ], !dbg !13925
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to1.0, metadata !13918, metadata !DIExpression()), !dbg !13920
  %9 = load %struct.rtx_def* (i8*, i64, i32)*, %struct.rtx_def* (i8*, i64, i32)** %constfun, align 8, !dbg !13942
  %10 = load i8*, i8** %constfundata, align 8, !dbg !13943
  %11 = load i64, i64* %offset, align 8, !dbg !13944
  %call13 = tail call %struct.rtx_def* %9(i8* %10, i64 %11, i32 %mode) #6, !dbg !13945
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call13, metadata !13919, metadata !DIExpression()), !dbg !13920
  %call14 = tail call %struct.rtx_def* (%struct.rtx_def*, ...) %genfun(%struct.rtx_def* %to1.0, %struct.rtx_def* %call13) #6, !dbg !13946
  %call15 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #6, !dbg !13947
  %12 = load i32, i32* %reverse, align 8, !dbg !13948
  %tobool17 = icmp eq i32 %12, 0, !dbg !13950
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !13951

if.then18:                                        ; preds = %if.end11
  %13 = load i64, i64* %offset, align 8, !dbg !13952
  %add = add nsw i64 %13, %conv2, !dbg !13952
  store i64 %add, i64* %offset, align 8, !dbg !13952
  br label %if.end21, !dbg !13953

if.end21:                                         ; preds = %if.end11, %if.then18
  %14 = load i64, i64* %len, align 8, !dbg !13954
  %sub24 = sub i64 %14, %conv2, !dbg !13954
  store i64 %sub24, i64* %len, align 8, !dbg !13954
  br label %while.cond, !dbg !13929, !llvm.loop !13955

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13957
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @clear_by_pieces_1(i8* %data, i64 %offset, i32 %mode) #4 !dbg !13958 {
entry:
  call void @llvm.dbg.value(metadata i8* %data, metadata !13960, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata i64 %offset, metadata !13961, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata i32 %mode, metadata !13962, metadata !DIExpression()), !dbg !13963
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !13964
  ret %struct.rtx_def* %0, !dbg !13965
}

declare dso_local i32 @register_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_move_change_mode(i32 %new_mode, i32 %old_mode, %struct.rtx_def* %x, i8 zeroext %force) unnamed_addr #4 !dbg !13966 {
entry:
  call void @llvm.dbg.value(metadata i32 %new_mode, metadata !13970, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 %old_mode, metadata !13971, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !13972, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i8 %force, metadata !13973, metadata !DIExpression()), !dbg !13975
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !13976
  %bf.load = load i32, i32* %0, align 8, !dbg !13976
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !13976
  %bf.clear = and i32 %bf.lshr, 255, !dbg !13976
  %call = tail call i32 @push_operand(%struct.rtx_def* %x, i32 %bf.clear) #6, !dbg !13978
  %tobool = icmp eq i32 %call, 0, !dbg !13978
  br i1 %tobool, label %if.else, label %if.then, !dbg !13979

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !13980
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13980
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13980
  %call1 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %new_mode, %struct.rtx_def* %1) #6, !dbg !13982
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !13974, metadata !DIExpression()), !dbg !13975
  %bf.load2 = load i32, i32* %0, align 8, !dbg !13983
  %bf.clear4 = and i32 %bf.load2, 134217728, !dbg !13983
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 0, !dbg !13983
  %bf.load5 = load i32, i32* %2, align 8, !dbg !13983
  %bf.clear6 = and i32 %bf.load5, -134217729, !dbg !13983
  %bf.set = or i32 %bf.clear6, %bf.clear4, !dbg !13983
  store i32 %bf.set, i32* %2, align 8, !dbg !13983
  %bf.load7 = load i32, i32* %0, align 8, !dbg !13983
  %bf.clear9 = and i32 %bf.load7, 268435456, !dbg !13983
  %bf.clear13 = and i32 %bf.set, -268435457, !dbg !13983
  %bf.set14 = or i32 %bf.clear13, %bf.clear9, !dbg !13983
  store i32 %bf.set14, i32* %2, align 8, !dbg !13983
  %bf.load15 = load i32, i32* %0, align 8, !dbg !13983
  %bf.lshr16 = and i32 %bf.load15, -2147483648, !dbg !13983
  %bf.clear20 = and i32 %bf.set14, 2147483647, !dbg !13983
  %bf.set21 = or i32 %bf.clear20, %bf.lshr16, !dbg !13983
  store i32 %bf.set21, i32* %2, align 8, !dbg !13983
  %bf.load22 = load i32, i32* %0, align 8, !dbg !13983
  %bf.clear24 = and i32 %bf.load22, 33554432, !dbg !13983
  %bf.clear28 = and i32 %bf.set21, -33554433, !dbg !13983
  %bf.set29 = or i32 %bf.clear28, %bf.clear24, !dbg !13983
  store i32 %bf.set29, i32* %2, align 8, !dbg !13983
  %bf.load30 = load i32, i32* %0, align 8, !dbg !13983
  %bf.clear32 = and i32 %bf.load30, 67108864, !dbg !13983
  %bf.clear36 = and i32 %bf.set29, -67108865, !dbg !13983
  %bf.set37 = or i32 %bf.clear36, %bf.clear32, !dbg !13983
  store i32 %bf.set37, i32* %2, align 8, !dbg !13983
  %bf.load38 = load i32, i32* %0, align 8, !dbg !13983
  %bf.clear40 = and i32 %bf.load38, 16777216, !dbg !13983
  %bf.clear44 = and i32 %bf.set37, -16777217, !dbg !13983
  %bf.set45 = or i32 %bf.clear44, %bf.clear40, !dbg !13983
  store i32 %bf.set45, i32* %2, align 8, !dbg !13983
  %bf.load46 = load i32, i32* %0, align 8, !dbg !13983
  %bf.clear48 = and i32 %bf.load46, 1073741824, !dbg !13983
  %bf.clear52 = and i32 %bf.set45, -1073741825, !dbg !13983
  %bf.set53 = or i32 %bf.clear52, %bf.clear48, !dbg !13983
  store i32 %bf.set53, i32* %2, align 8, !dbg !13983
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !13983
  %4 = bitcast %union.rtunion_def* %3 to i64*, !dbg !13983
  %5 = load i64, i64* %4, align 8, !dbg !13983
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !13983
  %7 = bitcast %union.rtunion_def* %6 to i64*, !dbg !13983
  store i64 %5, i64* %7, align 8, !dbg !13983
  br label %if.end77, !dbg !13984

if.else:                                          ; preds = %entry
  %bf.load61 = load i32, i32* %0, align 8, !dbg !13985
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !13985
  %cmp = icmp eq i32 %bf.clear62, 43, !dbg !13985
  br i1 %cmp, label %if.then63, label %if.else69, !dbg !13987

if.then63:                                        ; preds = %if.else
  %8 = load i32, i32* @reload_in_progress, align 4, !dbg !13988
  %tobool64 = icmp eq i32 %8, 0, !dbg !13988
  br i1 %tobool64, label %if.else67, label %if.then65, !dbg !13991

if.then65:                                        ; preds = %if.then63
  %call66 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %x, i32 %new_mode, i64 0, i32 0, i32 1) #6, !dbg !13992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !13974, metadata !DIExpression()), !dbg !13975
  tail call void @copy_replacements(%struct.rtx_def* %x, %struct.rtx_def* %call66) #6, !dbg !13994
  br label %if.end77, !dbg !13995

if.else67:                                        ; preds = %if.then63
  %call68 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %x, i32 %new_mode, i64 0, i32 1, i32 1) #6, !dbg !13996
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call68, metadata !13974, metadata !DIExpression()), !dbg !13975
  br label %if.end77

if.else69:                                        ; preds = %if.else
  %tobool70 = icmp eq i8 %force, 0, !dbg !13997
  br i1 %tobool70, label %if.else73, label %if.then71, !dbg !14000

if.then71:                                        ; preds = %if.else69
  %call72 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %new_mode, %struct.rtx_def* %x, i32 %old_mode, i32 0) #6, !dbg !14001
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call72, metadata !13974, metadata !DIExpression()), !dbg !13975
  br label %if.end77, !dbg !14002

if.else73:                                        ; preds = %if.else69
  %call74 = tail call %struct.rtx_def* @simplify_subreg(i32 %new_mode, %struct.rtx_def* %x, i32 %old_mode, i32 0) #6, !dbg !14003
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !13974, metadata !DIExpression()), !dbg !13975
  br label %if.end77

if.end77:                                         ; preds = %if.else67, %if.then65, %if.else73, %if.then71, %if.then
  %ret.3 = phi %struct.rtx_def* [ %call1, %if.then ], [ %call66, %if.then65 ], [ %call68, %if.else67 ], [ %call72, %if.then71 ], [ %call74, %if.else73 ], !dbg !14004
  call void @llvm.dbg.value(metadata %struct.rtx_def* %ret.3, metadata !13974, metadata !DIExpression()), !dbg !13975
  ret %struct.rtx_def* %ret.3, !dbg !14005
}

declare dso_local void @copy_replacements(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_replacement(%struct.rtx_def**) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @undefined_operand_subword_p(%struct.rtx_def* %op, i32 %i) unnamed_addr #4 !dbg !14006 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !14010, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i32 %i, metadata !14011, metadata !DIExpression()), !dbg !14018
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !14019
  %bf.load = load i32, i32* %0, align 8, !dbg !14019
  %bf.clear = and i32 %bf.load, 65535, !dbg !14019
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !14021
  br i1 %cmp, label %if.end, label %cleanup, !dbg !14022

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !14018
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !14023
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !14023
  %2 = load i32*, i32** %1, align 8, !dbg !14023
  %bf.load3 = load i32, i32* %2, align 8, !dbg !14023
  %bf.lshr4 = lshr i32 %bf.load3, 16, !dbg !14023
  %bf.clear5 = and i32 %bf.lshr4, 255, !dbg !14023
  call void @llvm.dbg.value(metadata i32 %bf.clear5, metadata !14013, metadata !DIExpression()), !dbg !14018
  %mul = shl nsw i32 %i, 2, !dbg !14024
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !14025
  %rt_uint = bitcast %union.rtunion_def* %3 to i32*, !dbg !14025
  %4 = load i32, i32* %rt_uint, align 8, !dbg !14025
  %add = add i32 %mul, %4, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %add, metadata !14014, metadata !DIExpression()), !dbg !14018
  %cmp13 = icmp eq i32 %4, 0, !dbg !14027
  br i1 %cmp13, label %land.lhs.true, label %if.end.if.end31_crit_edge, !dbg !14028

if.end.if.end31_crit_edge:                        ; preds = %if.end
  %idxprom32.phi.trans.insert = zext i32 %bf.clear5 to i64, !dbg !14029
  %arrayidx33.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom32.phi.trans.insert, !dbg !14029
  %.pre = load i8, i8* %arrayidx33.phi.trans.insert, align 1, !dbg !14031
  br label %if.end31, !dbg !14028

land.lhs.true:                                    ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !14012, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !14018
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !14032
  call void @llvm.dbg.value(metadata i32 %bf.lshr, metadata !14012, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !14018
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !14032
  call void @llvm.dbg.value(metadata i32 %bf.clear2, metadata !14012, metadata !DIExpression()), !dbg !14018
  %idxprom = zext i32 %bf.clear5 to i64, !dbg !14033
  %arrayidx14 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !14033
  %5 = load i8, i8* %arrayidx14, align 1, !dbg !14033
  %idxprom16 = zext i32 %bf.clear2 to i64, !dbg !14034
  %arrayidx17 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom16, !dbg !14034
  %6 = load i8, i8* %arrayidx17, align 1, !dbg !14034
  %cmp20 = icmp ult i8 %5, %6, !dbg !14035
  br i1 %cmp20, label %if.then22, label %if.end31, !dbg !14036

if.then22:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()), !dbg !14037
  br label %if.end31, !dbg !14038

if.end31:                                         ; preds = %if.end.if.end31_crit_edge, %if.then22, %land.lhs.true
  %7 = phi i8 [ %.pre, %if.end.if.end31_crit_edge ], [ %5, %if.then22 ], [ %5, %land.lhs.true ], !dbg !14031
  %conv35 = zext i8 %7 to i32, !dbg !14031
  %cmp36 = icmp slt i32 %add, %conv35, !dbg !14039
  br i1 %cmp36, label %lor.lhs.false, label %cleanup, !dbg !14040

lor.lhs.false:                                    ; preds = %if.end31
  %8 = load i32, i32* @word_mode, align 4, !dbg !14041
  %idxprom38 = zext i32 %8 to i64, !dbg !14041
  %arrayidx39 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom38, !dbg !14041
  %9 = load i8, i8* %arrayidx39, align 1, !dbg !14041
  %conv41 = zext i8 %9 to i32, !dbg !14041
  %sub42 = sub nsw i32 0, %conv41, !dbg !14042
  %cmp43 = icmp sle i32 %add, %sub42, !dbg !14043
  %spec.select = zext i1 %cmp43 to i8, !dbg !14044
  ret i8 %spec.select, !dbg !14044

cleanup:                                          ; preds = %if.end31, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.end31 ], !dbg !14018
  ret i8 %retval.0, !dbg !14045
}

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #1

declare dso_local zeroext i8 @exact_real_truncate(i32, %struct.real_value*) local_unnamed_addr #1

declare dso_local i32 @get_best_mode(i32, i32, i32, i32, i32) local_unnamed_addr #1

declare dso_local void @set_mem_expr(%struct.rtx_def*, %union.tree_node*) local_unnamed_addr #1

declare dso_local zeroext i8 @constructor_static_from_elts_p(%union.tree_node*) local_unnamed_addr #1

declare dso_local zeroext i8 @initializer_zerop(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @initializer_constant_valid_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @simple_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i64 @target_align(%union.tree_node* %target) unnamed_addr #4 !dbg !14046 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %target, metadata !14048, metadata !DIExpression()), !dbg !14051
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %target, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14052
  %bf.load = load i64, i64* %0, align 8, !dbg !14052
  %1 = trunc i64 %bf.load to i16, !dbg !14052
  switch i16 %1, label %sw.default [
    i16 42, label %cleanup
    i16 41, label %sw.bb1
    i16 45, label %sw.bb6
    i16 46, label %sw.bb6
    i16 116, label %sw.bb20
    i16 113, label %sw.bb20
    i16 117, label %sw.bb20
    i16 118, label %sw.bb20
  ], !dbg !14053

sw.bb1:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %target, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14054
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !14054
  %2 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !14054
  %3 = load %struct.tree_decl_common*, %struct.tree_decl_common** %2, align 8, !dbg !14054
  %align = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %3, i64 0, i32 3, !dbg !14054
  %4 = load i32, i32* %align, align 8, !dbg !14054
  %conv = zext i32 %4 to i64, !dbg !14054
  call void @llvm.dbg.value(metadata i64 %conv, metadata !14049, metadata !DIExpression()), !dbg !14051
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !14056
  %call = tail call fastcc i64 @target_align(%union.tree_node* %5) #8, !dbg !14057
  call void @llvm.dbg.value(metadata i64 %call, metadata !14050, metadata !DIExpression()), !dbg !14051
  %cmp = icmp ugt i64 %call, %conv, !dbg !14058
  %conv.call = select i1 %cmp, i64 %conv, i64 %call, !dbg !14058
  ret i64 %conv.call, !dbg !14059

sw.bb6:                                           ; preds = %entry, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %target, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14060
  %6 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !14060
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !14060
  %align8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 7, !dbg !14060
  %8 = load i32, i32* %align8, align 8, !dbg !14060
  %conv9 = zext i32 %8 to i64, !dbg !14060
  call void @llvm.dbg.value(metadata i64 %conv9, metadata !14049, metadata !DIExpression()), !dbg !14051
  %operands11 = getelementptr inbounds %union.tree_node, %union.tree_node* %target, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14061
  %9 = load %union.tree_node*, %union.tree_node** %operands11, align 8, !dbg !14061
  %call13 = tail call fastcc i64 @target_align(%union.tree_node* %9) #8, !dbg !14062
  call void @llvm.dbg.value(metadata i64 %call13, metadata !14050, metadata !DIExpression()), !dbg !14051
  %cmp14 = icmp ugt i64 %call13, %conv9, !dbg !14063
  %conv9.call13 = select i1 %cmp14, i64 %conv9, i64 %call13, !dbg !14063
  ret i64 %conv9.call13, !dbg !14059

sw.bb20:                                          ; preds = %entry, %entry, %entry, %entry
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %target, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14064
  %10 = bitcast %union.tree_node** %type22 to %struct.tree_type**, !dbg !14064
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !14064
  %align24 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 7, !dbg !14064
  %12 = load i32, i32* %align24, align 8, !dbg !14064
  %conv25 = zext i32 %12 to i64, !dbg !14064
  call void @llvm.dbg.value(metadata i64 %conv25, metadata !14049, metadata !DIExpression()), !dbg !14051
  %operands27 = getelementptr inbounds %union.tree_node, %union.tree_node* %target, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14065
  %13 = load %union.tree_node*, %union.tree_node** %operands27, align 8, !dbg !14065
  %call29 = tail call fastcc i64 @target_align(%union.tree_node* %13) #8, !dbg !14066
  call void @llvm.dbg.value(metadata i64 %call29, metadata !14050, metadata !DIExpression()), !dbg !14051
  %cmp30 = icmp ult i64 %call29, %conv25, !dbg !14067
  %conv25.call29 = select i1 %cmp30, i64 %conv25, i64 %call29, !dbg !14067
  ret i64 %conv25.call29, !dbg !14059

sw.default:                                       ; preds = %entry
  %type37 = getelementptr inbounds %union.tree_node, %union.tree_node* %target, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14068
  %14 = bitcast %union.tree_node** %type37 to %struct.tree_type**, !dbg !14068
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !14068
  %align39 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 7, !dbg !14068
  %16 = load i32, i32* %align39, align 8, !dbg !14068
  %conv40 = zext i32 %16 to i64, !dbg !14068
  br label %cleanup, !dbg !14069

cleanup:                                          ; preds = %entry, %sw.default
  %retval.0 = phi i64 [ %conv40, %sw.default ], [ 1, %entry ], !dbg !14070
  ret i64 %retval.0, !dbg !14059
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14071 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14075, metadata !DIExpression()), !dbg !14077
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #8, !dbg !14078
  call void @llvm.dbg.value(metadata i32 %call, metadata !14076, metadata !DIExpression()), !dbg !14077
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #8, !dbg !14079
  %cmp = icmp eq i32 %call1, 3, !dbg !14081
  br i1 %cmp, label %if.then, label %if.end, !dbg !14082

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #8, !dbg !14083
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14083
  %bf.load = load i64, i64* %0, align 8, !dbg !14083
  %1 = trunc i64 %bf.load to i32, !dbg !14083
  %bf.cast = and i32 %1, 65535, !dbg !14083
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !14076, metadata !DIExpression()), !dbg !14077
  br label %if.end, !dbg !14084

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !14077
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !14076, metadata !DIExpression()), !dbg !14077
  ret i32 %code.0, !dbg !14085
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !14086 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !14088, metadata !DIExpression()), !dbg !14090
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %call, metadata !14089, metadata !DIExpression()), !dbg !14090
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !14092

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !14094
  %bf.load = load i32, i32* %0, align 8, !dbg !14094
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !14094
  br label %cleanup, !dbg !14095

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14096
  br label %cleanup, !dbg !14098

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !14090
  ret i32 %retval.0, !dbg !14099
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !14100 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !14104, metadata !DIExpression()), !dbg !14105
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !14106
  %bf.load = load i32, i32* %0, align 8, !dbg !14106
  %bf.clear = and i32 %bf.load, 255, !dbg !14106
  ret i32 %bf.clear, !dbg !14107
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !14108 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14112, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.value(metadata i32 %i, metadata !14113, metadata !DIExpression()), !dbg !14114
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !14115
  %tobool = icmp eq i8 %call, 0, !dbg !14115
  br i1 %tobool, label %return, label %if.then, !dbg !14117

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !14118
  %idxprom = zext i32 %i to i64, !dbg !14118
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !14118
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14118
  br label %return, !dbg !14120

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !14121
  ret %union.tree_node* %retval.0, !dbg !14122
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !14123 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !14127, metadata !DIExpression()), !dbg !14128
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !14129
  %cmp = icmp eq i32 %call, 0, !dbg !14130
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !14131

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !14132
  %cmp2 = icmp ult i32 %call1, 10, !dbg !14133
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !14134
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14135 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14139, metadata !DIExpression()), !dbg !14141
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !14142
  %idxprom = zext i32 %call to i64, !dbg !14143
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !14143
  %0 = load i64, i64* %arrayidx, align 8, !dbg !14143
  call void @llvm.dbg.value(metadata i64 %0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %cmp = icmp eq i64 %0, 0, !dbg !14144
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !14144

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14144
  br label %cond.end, !dbg !14144

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !14145
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !14146
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !14147
  ret %union.tree_node** %2, !dbg !14148
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14149 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14153, metadata !DIExpression()), !dbg !14154
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !14155
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !14156
  ret i32 %call1, !dbg !14157
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !14158 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !14162, metadata !DIExpression()), !dbg !14163
  %idxprom = zext i32 %code to i64, !dbg !14164
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !14164
  %0 = load i32, i32* %arrayidx, align 4, !dbg !14164
  ret i32 %0, !dbg !14165
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !14166 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !14170, metadata !DIExpression()), !dbg !14171
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !14172
  %0 = load i32, i32* %num_ops, align 4, !dbg !14172
  ret i32 %0, !dbg !14173
}

declare dso_local %union.tree_node* @save_expr(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @emutls_decl(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_fold_addr_expr_with_type_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_tree_list_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_function_call_expr(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @output_constant_def(%union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @all_zeros_p(%union.tree_node* %exp) unnamed_addr #4 !dbg !14174 {
entry:
  %nz_elts = alloca i64, align 8
  %count = alloca i64, align 8
  %must_clear = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !14176, metadata !DIExpression()), !dbg !14182
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14183
  %bf.load = load i64, i64* %0, align 8, !dbg !14183
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14184
  %cmp = icmp eq i64 %bf.cast1, 51, !dbg !14184
  br i1 %cmp, label %if.then, label %if.end, !dbg !14185

if.then:                                          ; preds = %entry
  %1 = bitcast i64* %nz_elts to i8*, !dbg !14186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !14186
  %2 = bitcast i64* %count to i8*, !dbg !14186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !14186
  call void @llvm.dbg.value(metadata i8* %must_clear, metadata !14181, metadata !DIExpression(DW_OP_deref)), !dbg !14187
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %must_clear) #7, !dbg !14188
  call void @llvm.dbg.value(metadata i64* %nz_elts, metadata !14177, metadata !DIExpression(DW_OP_deref)), !dbg !14187
  call void @llvm.dbg.value(metadata i64* %count, metadata !14180, metadata !DIExpression(DW_OP_deref)), !dbg !14187
  call void @llvm.dbg.value(metadata i8* %must_clear, metadata !14181, metadata !DIExpression(DW_OP_deref)), !dbg !14187
  %call = call zeroext i8 @categorize_ctor_elements(%union.tree_node* %exp, i64* nonnull %nz_elts, i64* nonnull %count, i8* nonnull %must_clear) #8, !dbg !14189
  %3 = load i64, i64* %nz_elts, align 8, !dbg !14190
  call void @llvm.dbg.value(metadata i64 %3, metadata !14177, metadata !DIExpression()), !dbg !14187
  %cmp1 = icmp eq i64 %3, 0, !dbg !14191
  %conv = zext i1 %cmp1 to i32, !dbg !14191
  call void @llvm.dbg.value(metadata i8* %must_clear, metadata !14181, metadata !DIExpression(DW_OP_deref)), !dbg !14187
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %must_clear) #7, !dbg !14192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !14192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !14192
  br label %return

if.end:                                           ; preds = %entry
  %call2 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %exp) #6, !dbg !14193
  %conv3 = zext i8 %call2 to i32, !dbg !14193
  br label %return, !dbg !14194

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv3, %if.end ], !dbg !14182
  ret i32 %retval.0, !dbg !14195
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mostly_zeros_p(%union.tree_node* %exp) unnamed_addr #4 !dbg !14196 {
entry:
  %nz_elts = alloca i64, align 8
  %count = alloca i64, align 8
  %must_clear = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !14198, metadata !DIExpression()), !dbg !14205
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14206
  %bf.load = load i64, i64* %0, align 8, !dbg !14206
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14207
  %cmp = icmp eq i64 %bf.cast1, 51, !dbg !14207
  br i1 %cmp, label %if.then, label %if.end7, !dbg !14208

if.then:                                          ; preds = %entry
  %1 = bitcast i64* %nz_elts to i8*, !dbg !14209
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !14209
  %2 = bitcast i64* %count to i8*, !dbg !14209
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !14209
  call void @llvm.dbg.value(metadata i8* %must_clear, metadata !14204, metadata !DIExpression(DW_OP_deref)), !dbg !14210
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %must_clear) #7, !dbg !14211
  call void @llvm.dbg.value(metadata i64* %nz_elts, metadata !14199, metadata !DIExpression(DW_OP_deref)), !dbg !14210
  call void @llvm.dbg.value(metadata i64* %count, metadata !14202, metadata !DIExpression(DW_OP_deref)), !dbg !14210
  call void @llvm.dbg.value(metadata i8* %must_clear, metadata !14204, metadata !DIExpression(DW_OP_deref)), !dbg !14210
  %call = call zeroext i8 @categorize_ctor_elements(%union.tree_node* %exp, i64* nonnull %nz_elts, i64* nonnull %count, i8* nonnull %must_clear) #8, !dbg !14212
  %3 = load i8, i8* %must_clear, align 1, !dbg !14213
  call void @llvm.dbg.value(metadata i8 %3, metadata !14204, metadata !DIExpression()), !dbg !14210
  %tobool = icmp eq i8 %3, 0, !dbg !14213
  br i1 %tobool, label %if.end, label %cleanup, !dbg !14215

if.end:                                           ; preds = %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14216
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !14216
  %call2 = call i64 @count_type_elements(%union.tree_node* %4, i8 zeroext 0) #8, !dbg !14217
  call void @llvm.dbg.value(metadata i64 %call2, metadata !14203, metadata !DIExpression()), !dbg !14210
  %5 = load i64, i64* %nz_elts, align 8, !dbg !14218
  call void @llvm.dbg.value(metadata i64 %5, metadata !14199, metadata !DIExpression()), !dbg !14210
  %div = sdiv i64 %call2, 4, !dbg !14219
  %cmp3 = icmp slt i64 %5, %div, !dbg !14220
  %conv = zext i1 %cmp3 to i32, !dbg !14220
  br label %cleanup, !dbg !14221

cleanup:                                          ; preds = %if.then, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 1, %if.then ], !dbg !14210
  call void @llvm.dbg.value(metadata i8* %must_clear, metadata !14204, metadata !DIExpression(DW_OP_deref)), !dbg !14210
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %must_clear) #7, !dbg !14222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !14222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !14222
  br label %return

if.end7:                                          ; preds = %entry
  %call8 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %exp) #6, !dbg !14223
  %conv9 = zext i8 %call8 to i32, !dbg !14223
  br label %return, !dbg !14224

return:                                           ; preds = %if.end7, %cleanup
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ %conv9, %if.end7 ], !dbg !14205
  ret i32 %retval.1, !dbg !14225
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_constructor(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %cleared, i64 %size) unnamed_addr #4 !dbg !14226 {
entry:
  %ce = alloca %struct.constructor_elt_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !14230, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !14231, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i32 %cleared, metadata !14232, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i64 %size, metadata !14233, metadata !DIExpression()), !dbg !14341
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14342
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !14342
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !14234, metadata !DIExpression()), !dbg !14341
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14343
  %bf.load = load i64, i64* %1, align 8, !dbg !14343
  %2 = trunc i64 %bf.load to i16, !dbg !14343
  switch i16 %2, label %sw.default [
    i16 16, label %sw.bb
    i16 17, label %sw.bb
    i16 18, label %sw.bb
    i16 15, label %sw.bb261
    i16 14, label %sw.bb798
  ], !dbg !14344

sw.bb:                                            ; preds = %entry, %entry, %entry
  %cmp = icmp eq i64 %size, 0, !dbg !14345
  %tobool = icmp ne i32 %cleared, 0, !dbg !14347
  %or.cond = or i1 %cmp, %tobool, !dbg !14348
  br i1 %or.cond, label %if.end77, label %if.else, !dbg !14348

if.else:                                          ; preds = %sw.bb
  %bf.cast529 = and i64 %bf.load, 65535, !dbg !14349
  %cmp6 = icmp eq i64 %bf.cast529, 17, !dbg !14349
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false7, !dbg !14351

lor.lhs.false7:                                   ; preds = %if.else
  %cmp12 = icmp eq i64 %bf.cast529, 18, !dbg !14352
  br i1 %cmp12, label %land.lhs.true, label %if.else16, !dbg !14353

land.lhs.true:                                    ; preds = %lor.lhs.false7, %if.else
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14354
  %3 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !14354
  %4 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %3, align 8, !dbg !14354
  %tobool13 = icmp eq %struct.VEC_constructor_elt_gc* %4, null, !dbg !14354
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !14355

if.then14:                                        ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @expr_size(%union.tree_node* %exp) #6, !dbg !14356
  %call15 = tail call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call, i32 0) #8, !dbg !14358
  call void @llvm.dbg.value(metadata i32 1, metadata !14232, metadata !DIExpression()), !dbg !14341
  br label %if.end77, !dbg !14359

if.else16:                                        ; preds = %land.lhs.true, %lor.lhs.false7
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14360
  %bf.load17 = load i32, i32* %5, align 8, !dbg !14360
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !14360
  %cmp19 = icmp eq i32 %bf.clear18, 37, !dbg !14360
  br i1 %cmp19, label %land.lhs.true20, label %if.else40, !dbg !14362

land.lhs.true20:                                  ; preds = %if.else16
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14363
  %bf.load22 = load i64, i64* %6, align 8, !dbg !14363
  %bf.cast2434 = and i64 %bf.load22, 67108864, !dbg !14363
  %tobool25 = icmp eq i64 %bf.cast2434, 0, !dbg !14363
  br i1 %tobool25, label %if.else40, label %land.lhs.true26, !dbg !14364

land.lhs.true26:                                  ; preds = %land.lhs.true20
  %bf.lshr28 = lshr i32 %bf.load17, 16, !dbg !14365
  %bf.clear29 = and i32 %bf.lshr28, 255, !dbg !14365
  %idxprom = zext i32 %bf.clear29 to i64, !dbg !14365
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !14365
  %7 = load i8, i8* %arrayidx, align 1, !dbg !14365
  %cmp31 = icmp ult i8 %7, 5, !dbg !14366
  br i1 %cmp31, label %if.then33, label %if.else40, !dbg !14367

if.then33:                                        ; preds = %land.lhs.true26
  %arrayidx38 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !14368
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx38, align 8, !dbg !14368
  %call39 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %8) #8, !dbg !14370
  call void @llvm.dbg.value(metadata i32 1, metadata !14232, metadata !DIExpression()), !dbg !14341
  br label %if.end77, !dbg !14371

if.else40:                                        ; preds = %land.lhs.true20, %land.lhs.true26, %if.else16
  %cmp41 = icmp sgt i64 %size, 0, !dbg !14372
  br i1 %cmp41, label %land.lhs.true43, label %if.end77, !dbg !14374

land.lhs.true43:                                  ; preds = %if.else40
  %elts45 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14375
  %9 = bitcast i32* %elts45 to %struct.VEC_constructor_elt_gc**, !dbg !14375
  %10 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %9, align 8, !dbg !14375
  %tobool46 = icmp eq %struct.VEC_constructor_elt_gc* %10, null, !dbg !14375
  br i1 %tobool46, label %cond.end, label %cond.true, !dbg !14375

cond.true:                                        ; preds = %land.lhs.true43
  %base49 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %10, i64 0, i32 0, !dbg !14375
  br label %cond.end, !dbg !14375

cond.end:                                         ; preds = %land.lhs.true43, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base49, %cond.true ], [ null, %land.lhs.true43 ], !dbg !14375
  %call50 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !14375
  %call51 = tail call i32 @fields_length(%union.tree_node* %0) #6, !dbg !14376
  %cmp52 = icmp eq i32 %call50, %call51, !dbg !14377
  br i1 %cmp52, label %lor.lhs.false54, label %land.lhs.true57, !dbg !14378

lor.lhs.false54:                                  ; preds = %cond.end
  %call55 = tail call fastcc i32 @mostly_zeros_p(%union.tree_node* %exp) #8, !dbg !14379
  %tobool56 = icmp eq i32 %call55, 0, !dbg !14379
  br i1 %tobool56, label %if.end77, label %land.lhs.true57, !dbg !14380

land.lhs.true57:                                  ; preds = %lor.lhs.false54, %cond.end
  %bf.load58 = load i32, i32* %5, align 8, !dbg !14381
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !14381
  %cmp60 = icmp eq i32 %bf.clear59, 37, !dbg !14381
  br i1 %cmp60, label %lor.lhs.false62, label %if.then72, !dbg !14382

lor.lhs.false62:                                  ; preds = %land.lhs.true57
  %bf.lshr64 = lshr i32 %bf.load58, 16, !dbg !14383
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !14383
  %idxprom66 = zext i32 %bf.clear65 to i64, !dbg !14383
  %arrayidx67 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom66, !dbg !14383
  %11 = load i8, i8* %arrayidx67, align 1, !dbg !14383
  %conv69 = zext i8 %11 to i64, !dbg !14384
  %cmp70 = icmp eq i64 %conv69, %size, !dbg !14385
  br i1 %cmp70, label %if.then72, label %if.end77, !dbg !14386

if.then72:                                        ; preds = %lor.lhs.false62, %land.lhs.true57
  %call73 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %size) #6, !dbg !14387
  %call74 = tail call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call73, i32 0) #8, !dbg !14389
  call void @llvm.dbg.value(metadata i32 1, metadata !14232, metadata !DIExpression()), !dbg !14341
  br label %if.end77, !dbg !14390

if.end77:                                         ; preds = %lor.lhs.false54, %if.then14, %if.else40, %lor.lhs.false62, %if.then72, %if.then33, %sw.bb
  %cleared.addr.3 = phi i32 [ 1, %sw.bb ], [ 1, %if.then14 ], [ 1, %if.then33 ], [ 1, %if.then72 ], [ 0, %lor.lhs.false62 ], [ 0, %lor.lhs.false54 ], [ 0, %if.else40 ], !dbg !14391
  call void @llvm.dbg.value(metadata i32 %cleared.addr.3, metadata !14232, metadata !DIExpression()), !dbg !14341
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14392
  %bf.load78 = load i32, i32* %12, align 8, !dbg !14392
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !14392
  %cmp80 = icmp ne i32 %bf.clear79, 37, !dbg !14392
  %tobool83 = icmp ne i32 %cleared.addr.3, 0, !dbg !14394
  %or.cond2 = or i1 %cmp80, %tobool83, !dbg !14395
  br i1 %or.cond2, label %if.end86, label %if.then84, !dbg !14395

if.then84:                                        ; preds = %if.end77
  %call85 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %target) #6, !dbg !14396
  br label %if.end86, !dbg !14396

if.end86:                                         ; preds = %if.end77, %if.then84
  call void @llvm.dbg.value(metadata i64 0, metadata !14235, metadata !DIExpression()), !dbg !14397
  %elts88 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14398
  %13 = bitcast i32* %elts88 to %struct.VEC_constructor_elt_gc**, !dbg !14398
  %tobool135 = icmp eq i32 %cleared.addr.3, 0, !dbg !14399
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !14401
  %rt_mem = bitcast %union.rtunion_def* %14 to %struct.mem_attrs**, !dbg !14401
  br label %for.cond, !dbg !14402

for.cond:                                         ; preds = %cleanup, %if.end86
  %value.0 = phi %union.tree_node* [ undef, %if.end86 ], [ %value.1, %cleanup ]
  %15 = phi %struct.tree_field_decl* [ undef, %if.end86 ], [ %22, %cleanup ]
  %field.0 = phi %union.tree_node* [ undef, %if.end86 ], [ %field.1, %cleanup ]
  %idx.0 = phi i64 [ 0, %if.end86 ], [ %inc, %cleanup ], !dbg !14403
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !14235, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !14238, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !14239, metadata !DIExpression()), !dbg !14397
  %16 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %13, align 8, !dbg !14404
  %tobool89 = icmp eq %struct.VEC_constructor_elt_gc* %16, null, !dbg !14404
  br i1 %tobool89, label %cond.end95, label %cond.true90, !dbg !14404

cond.true90:                                      ; preds = %for.cond
  %base93 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %16, i64 0, i32 0, !dbg !14404
  br label %cond.end95, !dbg !14404

cond.end95:                                       ; preds = %for.cond, %cond.true90
  %cond96 = phi %struct.VEC_constructor_elt_base* [ %base93, %cond.true90 ], [ null, %for.cond ], !dbg !14404
  %call97 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond96) #8, !dbg !14404
  %conv98 = zext i32 %call97 to i64, !dbg !14404
  %cmp99 = icmp ult i64 %idx.0, %conv98, !dbg !14404
  br i1 %cmp99, label %cond.false102, label %cond.end128, !dbg !14404

cond.false102:                                    ; preds = %cond.end95
  %17 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %13, align 8, !dbg !14404
  %tobool105 = icmp eq %struct.VEC_constructor_elt_gc* %17, null, !dbg !14404
  br i1 %tobool105, label %cond.end111, label %cond.true106, !dbg !14404

cond.true106:                                     ; preds = %cond.false102
  %base109 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %17, i64 0, i32 0, !dbg !14404
  br label %cond.end111, !dbg !14404

cond.end111:                                      ; preds = %cond.false102, %cond.true106
  %cond112 = phi %struct.VEC_constructor_elt_base* [ %base109, %cond.true106 ], [ null, %cond.false102 ], !dbg !14404
  %conv113 = trunc i64 %idx.0 to i32, !dbg !14404
  %call114 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond112, i32 %conv113) #8, !dbg !14404
  %value115 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call114, i64 0, i32 1, !dbg !14404
  %18 = load %union.tree_node*, %union.tree_node** %value115, align 8, !dbg !14404
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !14239, metadata !DIExpression()), !dbg !14397
  %19 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %13, align 8, !dbg !14404
  %tobool118 = icmp eq %struct.VEC_constructor_elt_gc* %19, null, !dbg !14404
  br i1 %tobool118, label %cond.end124, label %cond.true119, !dbg !14404

cond.true119:                                     ; preds = %cond.end111
  %base122 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %19, i64 0, i32 0, !dbg !14404
  br label %cond.end124, !dbg !14404

cond.end124:                                      ; preds = %cond.end111, %cond.true119
  %cond125 = phi %struct.VEC_constructor_elt_base* [ %base122, %cond.true119 ], [ null, %cond.end111 ], !dbg !14404
  %call127 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond125, i32 %conv113) #8, !dbg !14404
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call127, i64 0, i32 0, !dbg !14404
  %20 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !14404
  %21 = bitcast %union.tree_node* %20 to %struct.tree_field_decl*, !dbg !14397
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !14238, metadata !DIExpression()), !dbg !14397
  br label %cond.end128, !dbg !14404

cond.end128:                                      ; preds = %cond.end95, %cond.end124
  %value.1 = phi %union.tree_node* [ %18, %cond.end124 ], [ %value.0, %cond.end95 ]
  %22 = phi %struct.tree_field_decl* [ %21, %cond.end124 ], [ %15, %cond.end95 ]
  %field.1 = phi %union.tree_node* [ %20, %cond.end124 ], [ %field.0, %cond.end95 ]
  %cond129 = phi i1 [ true, %cond.end124 ], [ false, %cond.end95 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1, metadata !14238, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !14239, metadata !DIExpression()), !dbg !14397
  br i1 %cond129, label %for.body, label %sw.epilog.loopexit, !dbg !14402

for.body:                                         ; preds = %cond.end128
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !14405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !14247, metadata !DIExpression()), !dbg !14405
  %cmp131 = icmp eq %union.tree_node* %field.1, null, !dbg !14406
  br i1 %cmp131, label %cleanup, label %if.end134, !dbg !14408

if.end134:                                        ; preds = %for.body
  br i1 %tobool135, label %if.end141, label %land.lhs.true136, !dbg !14409

land.lhs.true136:                                 ; preds = %if.end134
  %call137 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %value.1) #6, !dbg !14410
  %tobool139 = icmp eq i8 %call137, 0, !dbg !14410
  br i1 %tobool139, label %if.end141, label %cleanup, !dbg !14411

if.end141:                                        ; preds = %land.lhs.true136, %if.end134
  %size142 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14412
  %23 = load %union.tree_node*, %union.tree_node** %size142, align 8, !dbg !14412
  %call143 = tail call i32 @host_integerp(%union.tree_node* %23, i32 1) #6, !dbg !14414
  %tobool144 = icmp eq i32 %call143, 0, !dbg !14414
  br i1 %tobool144, label %if.end150, label %if.then145, !dbg !14415

if.then145:                                       ; preds = %if.end141
  %24 = load %union.tree_node*, %union.tree_node** %size142, align 8, !dbg !14416
  %call148 = tail call i64 @tree_low_cst(%union.tree_node* %24, i32 1) #6, !dbg !14417
  call void @llvm.dbg.value(metadata i64 %call148, metadata !14244, metadata !DIExpression()), !dbg !14405
  br label %if.end150, !dbg !14418

if.end150:                                        ; preds = %if.end141, %if.then145
  %bitsize.0 = phi i64 [ %call148, %if.then145 ], [ -1, %if.end141 ], !dbg !14419
  call void @llvm.dbg.value(metadata i64 %bitsize.0, metadata !14244, metadata !DIExpression()), !dbg !14405
  %mode152 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14420
  %25 = bitcast i40* %mode152 to i64*, !dbg !14420
  %bf.load153 = load i64, i64* %25, align 8, !dbg !14420
  %26 = trunc i64 %bf.load153 to i32, !dbg !14420
  %bf.cast155 = and i32 %26, 255, !dbg !14420
  call void @llvm.dbg.value(metadata i32 %bf.cast155, metadata !14240, metadata !DIExpression()), !dbg !14405
  %bf.cast16031 = and i64 %bf.load153, 33554432, !dbg !14421
  %tobool161 = icmp eq i64 %bf.cast16031, 0, !dbg !14421
  %spec.select = select i1 %tobool161, i32 %bf.cast155, i32 0, !dbg !14423
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !14240, metadata !DIExpression()), !dbg !14405
  %offset164 = getelementptr inbounds %struct.tree_field_decl, %struct.tree_field_decl* %22, i64 0, i32 1, !dbg !14424
  %27 = load %union.tree_node*, %union.tree_node** %offset164, align 8, !dbg !14424
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !14246, metadata !DIExpression()), !dbg !14405
  %call165 = tail call i32 @host_integerp(%union.tree_node* %27, i32 0) #6, !dbg !14425
  %tobool166 = icmp eq i32 %call165, 0, !dbg !14425
  br i1 %tobool166, label %if.else173, label %land.lhs.true167, !dbg !14427

land.lhs.true167:                                 ; preds = %if.end150
  %call168 = tail call %union.tree_node* @bit_position(%union.tree_node* nonnull %field.1) #6, !dbg !14428
  %call169 = tail call i32 @host_integerp(%union.tree_node* %call168, i32 0) #6, !dbg !14429
  %tobool170 = icmp eq i32 %call169, 0, !dbg !14429
  br i1 %tobool170, label %if.else173, label %if.then171, !dbg !14430

if.then171:                                       ; preds = %land.lhs.true167
  %call172 = tail call i64 @int_bit_position(%union.tree_node* nonnull %field.1) #6, !dbg !14431
  call void @llvm.dbg.value(metadata i64 %call172, metadata !14245, metadata !DIExpression()), !dbg !14405
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !14246, metadata !DIExpression()), !dbg !14405
  br label %if.end176, !dbg !14433

if.else173:                                       ; preds = %land.lhs.true167, %if.end150
  %bit_offset = getelementptr inbounds %struct.tree_field_decl, %struct.tree_field_decl* %22, i64 0, i32 4, !dbg !14434
  %28 = load %union.tree_node*, %union.tree_node** %bit_offset, align 8, !dbg !14434
  %call175 = tail call i64 @tree_low_cst(%union.tree_node* %28, i32 0) #6, !dbg !14435
  call void @llvm.dbg.value(metadata i64 %call175, metadata !14245, metadata !DIExpression()), !dbg !14405
  br label %if.end176

if.end176:                                        ; preds = %if.else173, %if.then171
  %offset.0 = phi %union.tree_node* [ null, %if.then171 ], [ %27, %if.else173 ], !dbg !14405
  %bitpos.0 = phi i64 [ %call172, %if.then171 ], [ %call175, %if.else173 ], !dbg !14436
  call void @llvm.dbg.value(metadata i64 %bitpos.0, metadata !14245, metadata !DIExpression()), !dbg !14405
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.0, metadata !14246, metadata !DIExpression()), !dbg !14405
  %tobool177 = icmp eq %union.tree_node* %offset.0, null, !dbg !14437
  br i1 %tobool177, label %if.end229, label %lor.lhs.false181, !dbg !14438

lor.lhs.false181:                                 ; preds = %if.end176
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14439
  %bf.load183 = load i64, i64* %29, align 8, !dbg !14439
  %bf.cast18633 = and i64 %bf.load183, 131072, !dbg !14439
  %tobool187 = icmp eq i64 %bf.cast18633, 0, !dbg !14439
  br i1 %tobool187, label %cond.false189, label %cond.end194, !dbg !14439

cond.false189:                                    ; preds = %lor.lhs.false181
  %30 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !14439
  %call192 = tail call %union.tree_node* @make_tree(%union.tree_node* %30, %struct.rtx_def* %target) #6, !dbg !14439
  %call193 = tail call %union.tree_node* @substitute_placeholder_in_expr(%union.tree_node* nonnull %offset.0, %union.tree_node* %call192) #6, !dbg !14439
  br label %cond.end194, !dbg !14439

cond.end194:                                      ; preds = %lor.lhs.false181, %cond.false189
  %cond195 = phi %union.tree_node* [ %call193, %cond.false189 ], [ %offset.0, %lor.lhs.false181 ], !dbg !14439
  call void @llvm.dbg.value(metadata %union.tree_node* %cond195, metadata !14246, metadata !DIExpression()), !dbg !14405
  %call196 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %cond195) #8, !dbg !14440
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call196, metadata !14251, metadata !DIExpression()), !dbg !14401
  %bf.load197 = load i32, i32* %12, align 8, !dbg !14441
  %bf.clear198 = and i32 %bf.load197, 65535, !dbg !14441
  %cmp199 = icmp eq i32 %bf.clear198, 43, !dbg !14441
  br i1 %cmp199, label %cond.end203, label %cond.true201, !dbg !14441

cond.true201:                                     ; preds = %cond.end194
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5300, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14441
  br label %cond.end203, !dbg !14441

cond.end203:                                      ; preds = %cond.end194, %cond.true201
  %31 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !14442
  %32 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !14443
  %cmp206 = icmp eq %struct.mem_attrs* %32, null, !dbg !14443
  br i1 %cmp206, label %cond.end215, label %cond.false209, !dbg !14443

cond.false209:                                    ; preds = %cond.end203
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %32, i64 0, i32 5, !dbg !14443
  %33 = load i8, i8* %addrspace, align 8, !dbg !14443
  br label %cond.end215, !dbg !14443

cond.end215:                                      ; preds = %cond.end203, %cond.false209
  %cond216 = phi i8 [ %33, %cond.false209 ], [ 0, %cond.end203 ], !dbg !14443
  %call218 = tail call i32 %31(i8 zeroext %cond216) #6, !dbg !14444
  call void @llvm.dbg.value(metadata i32 %call218, metadata !14248, metadata !DIExpression()), !dbg !14401
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call196, i64 0, i32 0, !dbg !14445
  %bf.load219 = load i32, i32* %34, align 8, !dbg !14445
  %bf.lshr220 = lshr i32 %bf.load219, 16, !dbg !14445
  %bf.clear221 = and i32 %bf.lshr220, 255, !dbg !14445
  %cmp222 = icmp eq i32 %bf.clear221, %call218, !dbg !14447
  br i1 %cmp222, label %if.end226, label %if.then224, !dbg !14448

if.then224:                                       ; preds = %cond.end215
  %call225 = tail call %struct.rtx_def* @convert_to_mode(i32 %call218, %struct.rtx_def* %call196, i32 0) #8, !dbg !14449
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call225, metadata !14251, metadata !DIExpression()), !dbg !14401
  br label %if.end226, !dbg !14450

if.end226:                                        ; preds = %cond.end215, %if.then224
  %offset_rtx.0 = phi %struct.rtx_def* [ %call225, %if.then224 ], [ %call196, %cond.end215 ], !dbg !14401
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset_rtx.0, metadata !14251, metadata !DIExpression()), !dbg !14401
  %call227 = tail call i64 @highest_pow2_factor(%union.tree_node* %cond195) #8, !dbg !14451
  %call228 = tail call %struct.rtx_def* @offset_address(%struct.rtx_def* %target, %struct.rtx_def* %offset_rtx.0, i64 %call227) #6, !dbg !14452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call228, metadata !14247, metadata !DIExpression()), !dbg !14405
  br label %if.end229, !dbg !14453

if.end229:                                        ; preds = %if.end176, %if.end226
  %to_rtx.0 = phi %struct.rtx_def* [ %call228, %if.end226 ], [ %target, %if.end176 ], !dbg !14405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_rtx.0, metadata !14247, metadata !DIExpression()), !dbg !14405
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %to_rtx.0, i64 0, i32 0, !dbg !14454
  %bf.load230 = load i32, i32* %35, align 8, !dbg !14454
  %bf.clear231 = and i32 %bf.load230, 65535, !dbg !14454
  %cmp232 = icmp eq i32 %bf.clear231, 43, !dbg !14454
  br i1 %cmp232, label %land.lhs.true234, label %if.end250, !dbg !14456

land.lhs.true234:                                 ; preds = %if.end229
  %bf.clear237 = and i32 %bf.load230, 16777216, !dbg !14457
  %tobool238 = icmp eq i32 %bf.clear237, 0, !dbg !14457
  br i1 %tobool238, label %land.lhs.true239, label %if.end250, !dbg !14458

land.lhs.true239:                                 ; preds = %land.lhs.true234
  %bf.load241 = load i64, i64* %25, align 8, !dbg !14459
  %bf.cast24432 = and i64 %bf.load241, 67108864, !dbg !14459
  %tobool245 = icmp eq i64 %bf.cast24432, 0, !dbg !14459
  br i1 %tobool245, label %if.end250, label %if.then246, !dbg !14460

if.then246:                                       ; preds = %land.lhs.true239
  %call247 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %to_rtx.0) #6, !dbg !14461
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call247, metadata !14247, metadata !DIExpression()), !dbg !14405
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call247, i64 0, i32 0, !dbg !14463
  %bf.load248 = load i32, i32* %36, align 8, !dbg !14464
  %bf.set = or i32 %bf.load248, 16777216, !dbg !14464
  store i32 %bf.set, i32* %36, align 8, !dbg !14464
  br label %if.end250, !dbg !14465

if.end250:                                        ; preds = %land.lhs.true239, %land.lhs.true234, %if.then246, %if.end229
  %to_rtx.1 = phi %struct.rtx_def* [ %to_rtx.0, %land.lhs.true234 ], [ %call247, %if.then246 ], [ %to_rtx.0, %land.lhs.true239 ], [ %to_rtx.0, %if.end229 ], !dbg !14405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %to_rtx.1, metadata !14247, metadata !DIExpression()), !dbg !14405
  %type252 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14466
  %37 = load %union.tree_node*, %union.tree_node** %type252, align 8, !dbg !14466
  %call253 = tail call i32 @get_alias_set(%union.tree_node* %37) #6, !dbg !14467
  tail call fastcc void @store_constructor_field(%struct.rtx_def* %to_rtx.1, i64 %bitsize.0, i64 %bitpos.0, i32 %spec.select, %union.tree_node* %value.1, %union.tree_node* %0, i32 %cleared.addr.3, i32 %call253) #8, !dbg !14468
  br label %cleanup, !dbg !14469

cleanup:                                          ; preds = %land.lhs.true136, %for.body, %if.end250
  %inc = add i64 %idx.0, 1, !dbg !14404
  call void @llvm.dbg.value(metadata i64 %inc, metadata !14235, metadata !DIExpression()), !dbg !14397
  br label %for.cond, !dbg !14404, !llvm.loop !14470

sw.bb261:                                         ; preds = %entry
  %type265 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14472
  %38 = load %union.tree_node*, %union.tree_node** %type265, align 8, !dbg !14472
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !14258, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 0, metadata !14260, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !14473
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14474
  %39 = bitcast i32* %values to %union.tree_node**, !dbg !14474
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8, !dbg !14474
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !14257, metadata !DIExpression()), !dbg !14473
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !14475
  %41 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !14475
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !14475
  %tobool268 = icmp eq %union.tree_node* %42, null, !dbg !14475
  br i1 %tobool268, label %land.end, label %land.lhs.true269, !dbg !14476

land.lhs.true269:                                 ; preds = %sw.bb261
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14477
  %43 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !14477
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !14477
  %tobool271 = icmp eq %union.tree_node* %44, null, !dbg !14477
  br i1 %tobool271, label %land.end, label %land.lhs.true272, !dbg !14478

land.lhs.true272:                                 ; preds = %land.lhs.true269
  %call275 = tail call i32 @host_integerp(%union.tree_node* nonnull %42, i32 0) #6, !dbg !14479
  %tobool276 = icmp eq i32 %call275, 0, !dbg !14479
  br i1 %tobool276, label %land.end, label %land.rhs, !dbg !14480

land.rhs:                                         ; preds = %land.lhs.true272
  %45 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !14481
  %call279 = tail call i32 @host_integerp(%union.tree_node* %45, i32 0) #6, !dbg !14482
  %tobool280 = icmp ne i32 %call279, 0, !dbg !14480
  br label %land.end

land.end:                                         ; preds = %land.lhs.true272, %land.lhs.true269, %sw.bb261, %land.rhs
  %46 = phi i1 [ false, %land.lhs.true272 ], [ false, %land.lhs.true269 ], [ false, %sw.bb261 ], [ %tobool280, %land.rhs ]
  br i1 %46, label %if.then282, label %if.end289, !dbg !14483

if.then282:                                       ; preds = %land.end
  %47 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !14484
  %call285 = tail call i64 @tree_low_cst(%union.tree_node* %47, i32 0) #6, !dbg !14487
  call void @llvm.dbg.value(metadata i64 %call285, metadata !14260, metadata !DIExpression()), !dbg !14473
  %maxval287 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14488
  %48 = bitcast %struct.rtx_def** %maxval287 to %union.tree_node**, !dbg !14488
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8, !dbg !14488
  %call288 = tail call i64 @tree_low_cst(%union.tree_node* %49, i32 0) #6, !dbg !14489
  call void @llvm.dbg.value(metadata i64 %call288, metadata !14261, metadata !DIExpression()), !dbg !14473
  br label %if.end289, !dbg !14490

if.end289:                                        ; preds = %if.then282, %land.end
  %maxelt.0 = phi i64 [ %call288, %if.then282 ], [ 0, %land.end ], !dbg !14473
  %minelt.0 = phi i64 [ %call285, %if.then282 ], [ 0, %land.end ], !dbg !14473
  call void @llvm.dbg.value(metadata i64 %minelt.0, metadata !14260, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %maxelt.0, metadata !14261, metadata !DIExpression()), !dbg !14473
  %tobool290 = icmp eq i32 %cleared, 0, !dbg !14491
  br i1 %tobool290, label %if.else292, label %if.end415, !dbg !14492

if.else292:                                       ; preds = %if.end289
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14493
  %bf.load293 = load i32, i32* %50, align 8, !dbg !14493
  %bf.clear294 = and i32 %bf.load293, 65535, !dbg !14493
  %cmp295 = icmp eq i32 %bf.clear294, 37, !dbg !14493
  br i1 %cmp295, label %land.lhs.true297, label %if.else305, !dbg !14494

land.lhs.true297:                                 ; preds = %if.else292
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14495
  %bf.load299 = load i64, i64* %51, align 8, !dbg !14495
  %bf.cast30228 = and i64 %bf.load299, 67108864, !dbg !14495
  %tobool303 = icmp eq i64 %bf.cast30228, 0, !dbg !14495
  br i1 %tobool303, label %if.else305, label %if.end415, !dbg !14496

if.else305:                                       ; preds = %land.lhs.true297, %if.else292
  call void @llvm.dbg.value(metadata i64 0, metadata !14268, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i64 0, metadata !14269, metadata !DIExpression()), !dbg !14497
  %lnot = xor i1 %46, true, !dbg !14498
  %lnot.ext = zext i1 %lnot to i32, !dbg !14498
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !14256, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 0, metadata !14262, metadata !DIExpression()), !dbg !14497
  %elts312 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14499
  %52 = bitcast i32* %elts312 to %struct.VEC_constructor_elt_gc**, !dbg !14499
  br label %for.cond310, !dbg !14500

for.cond310:                                      ; preds = %for.inc399, %if.else305
  %this_node_count.0 = phi i64 [ undef, %if.else305 ], [ %this_node_count.3, %for.inc399 ]
  %zero_count.0 = phi i64 [ 0, %if.else305 ], [ %zero_count.2, %for.inc399 ], !dbg !14501
  %count.0 = phi i64 [ 0, %if.else305 ], [ %count.1, %for.inc399 ], !dbg !14502
  %value308.0 = phi %union.tree_node* [ undef, %if.else305 ], [ %value308.1, %for.inc399 ]
  %53 = phi %struct.tree_exp* [ undef, %if.else305 ], [ %60, %for.inc399 ]
  %index307.0 = phi %union.tree_node* [ undef, %if.else305 ], [ %index307.1, %for.inc399 ]
  %idx306.0 = phi i64 [ 0, %if.else305 ], [ %inc400, %for.inc399 ], !dbg !14503
  %need_to_clear.0 = phi i32 [ %lnot.ext, %if.else305 ], [ %need_to_clear.3, %for.inc399 ], !dbg !14504
  call void @llvm.dbg.value(metadata i32 %need_to_clear.0, metadata !14256, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %idx306.0, metadata !14262, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata %union.tree_node* %index307.0, metadata !14266, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata %union.tree_node* %value308.0, metadata !14267, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i64 %count.0, metadata !14268, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i64 %zero_count.0, metadata !14269, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i64 %this_node_count.0, metadata !14270, metadata !DIExpression()), !dbg !14505
  %54 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %52, align 8, !dbg !14506
  %tobool313 = icmp eq %struct.VEC_constructor_elt_gc* %54, null, !dbg !14506
  br i1 %tobool313, label %cond.end319, label %cond.true314, !dbg !14506

cond.true314:                                     ; preds = %for.cond310
  %base317 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %54, i64 0, i32 0, !dbg !14506
  br label %cond.end319, !dbg !14506

cond.end319:                                      ; preds = %for.cond310, %cond.true314
  %cond320 = phi %struct.VEC_constructor_elt_base* [ %base317, %cond.true314 ], [ null, %for.cond310 ], !dbg !14506
  %call321 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond320) #8, !dbg !14506
  %conv322 = zext i32 %call321 to i64, !dbg !14506
  %cmp323 = icmp ult i64 %idx306.0, %conv322, !dbg !14506
  br i1 %cmp323, label %cond.false326, label %cond.end353, !dbg !14506

cond.false326:                                    ; preds = %cond.end319
  %55 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %52, align 8, !dbg !14506
  %tobool329 = icmp eq %struct.VEC_constructor_elt_gc* %55, null, !dbg !14506
  br i1 %tobool329, label %cond.end335, label %cond.true330, !dbg !14506

cond.true330:                                     ; preds = %cond.false326
  %base333 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %55, i64 0, i32 0, !dbg !14506
  br label %cond.end335, !dbg !14506

cond.end335:                                      ; preds = %cond.false326, %cond.true330
  %cond336 = phi %struct.VEC_constructor_elt_base* [ %base333, %cond.true330 ], [ null, %cond.false326 ], !dbg !14506
  %conv337 = trunc i64 %idx306.0 to i32, !dbg !14506
  %call338 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond336, i32 %conv337) #8, !dbg !14506
  %value339 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call338, i64 0, i32 1, !dbg !14506
  %56 = load %union.tree_node*, %union.tree_node** %value339, align 8, !dbg !14506
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !14267, metadata !DIExpression()), !dbg !14497
  %57 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %52, align 8, !dbg !14506
  %tobool342 = icmp eq %struct.VEC_constructor_elt_gc* %57, null, !dbg !14506
  br i1 %tobool342, label %cond.end348, label %cond.true343, !dbg !14506

cond.true343:                                     ; preds = %cond.end335
  %base346 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %57, i64 0, i32 0, !dbg !14506
  br label %cond.end348, !dbg !14506

cond.end348:                                      ; preds = %cond.end335, %cond.true343
  %cond349 = phi %struct.VEC_constructor_elt_base* [ %base346, %cond.true343 ], [ null, %cond.end335 ], !dbg !14506
  %call351 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond349, i32 %conv337) #8, !dbg !14506
  %index352 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call351, i64 0, i32 0, !dbg !14506
  %58 = load %union.tree_node*, %union.tree_node** %index352, align 8, !dbg !14506
  %59 = bitcast %union.tree_node* %58 to %struct.tree_exp*, !dbg !14497
  call void @llvm.dbg.value(metadata %union.tree_node* %58, metadata !14266, metadata !DIExpression()), !dbg !14497
  br label %cond.end353, !dbg !14506

cond.end353:                                      ; preds = %cond.end319, %cond.end348
  %value308.1 = phi %union.tree_node* [ %56, %cond.end348 ], [ %value308.0, %cond.end319 ]
  %60 = phi %struct.tree_exp* [ %59, %cond.end348 ], [ %53, %cond.end319 ]
  %index307.1 = phi %union.tree_node* [ %58, %cond.end348 ], [ %index307.0, %cond.end319 ]
  %cond354 = phi i1 [ true, %cond.end348 ], [ false, %cond.end319 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %index307.1, metadata !14266, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata %union.tree_node* %value308.1, metadata !14267, metadata !DIExpression()), !dbg !14497
  br i1 %cond354, label %for.body356, label %for.end401, !dbg !14500

for.body356:                                      ; preds = %cond.end353
  %tobool357 = icmp eq i32 %need_to_clear.0, 0, !dbg !14507
  br i1 %tobool357, label %if.end359, label %cleanup396, !dbg !14509

if.end359:                                        ; preds = %for.body356
  %cmp360 = icmp eq %union.tree_node* %index307.1, null, !dbg !14510
  br i1 %cmp360, label %if.end389, label %land.lhs.true362, !dbg !14511

land.lhs.true362:                                 ; preds = %if.end359
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %index307.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14512
  %bf.load364 = load i64, i64* %61, align 8, !dbg !14512
  %bf.cast36627 = and i64 %bf.load364, 65535, !dbg !14513
  %cmp367 = icmp eq i64 %bf.cast36627, 111, !dbg !14513
  br i1 %cmp367, label %if.then369, label %if.end389, !dbg !14514

if.then369:                                       ; preds = %land.lhs.true362
  %arrayidx371 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %60, i64 0, i32 3, i64 0, !dbg !14515
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx371, align 8, !dbg !14515
  call void @llvm.dbg.value(metadata %union.tree_node* %62, metadata !14274, metadata !DIExpression()), !dbg !14516
  %arrayidx374 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %60, i64 0, i32 3, i64 1, !dbg !14517
  %63 = load %union.tree_node*, %union.tree_node** %arrayidx374, align 8, !dbg !14517
  call void @llvm.dbg.value(metadata %union.tree_node* %63, metadata !14277, metadata !DIExpression()), !dbg !14516
  %call375 = tail call i32 @host_integerp(%union.tree_node* %62, i32 1) #6, !dbg !14518
  %tobool376 = icmp eq i32 %call375, 0, !dbg !14518
  br i1 %tobool376, label %cleanup384, label %lor.lhs.false377, !dbg !14520

lor.lhs.false377:                                 ; preds = %if.then369
  %call378 = tail call i32 @host_integerp(%union.tree_node* %63, i32 1) #6, !dbg !14521
  %tobool379 = icmp eq i32 %call378, 0, !dbg !14521
  br i1 %tobool379, label %cleanup384, label %if.end381, !dbg !14522

if.end381:                                        ; preds = %lor.lhs.false377
  %call382 = tail call i64 @tree_low_cst(%union.tree_node* %63, i32 1) #6, !dbg !14523
  %call383 = tail call i64 @tree_low_cst(%union.tree_node* %62, i32 1) #6, !dbg !14524
  %sub = sub nsw i64 %call382, %call383, !dbg !14525
  %add = add nsw i64 %sub, 1, !dbg !14526
  call void @llvm.dbg.value(metadata i64 %add, metadata !14270, metadata !DIExpression()), !dbg !14505
  br label %cleanup384, !dbg !14527

cleanup384:                                       ; preds = %lor.lhs.false377, %if.then369, %if.end381
  %this_node_count.1 = phi i64 [ %add, %if.end381 ], [ %this_node_count.0, %lor.lhs.false377 ], [ %this_node_count.0, %if.then369 ]
  %need_to_clear.1 = phi i32 [ 0, %if.end381 ], [ 1, %lor.lhs.false377 ], [ 1, %if.then369 ], !dbg !14497
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end381 ], [ 6, %lor.lhs.false377 ], [ 6, %if.then369 ]
  call void @llvm.dbg.value(metadata i32 %need_to_clear.1, metadata !14256, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %this_node_count.1, metadata !14270, metadata !DIExpression()), !dbg !14505
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end389, label %cleanup396

if.end389:                                        ; preds = %if.end359, %land.lhs.true362, %cleanup384
  %this_node_count.2 = phi i64 [ %this_node_count.1, %cleanup384 ], [ 1, %land.lhs.true362 ], [ 1, %if.end359 ], !dbg !14528
  %need_to_clear.2 = phi i32 [ %need_to_clear.1, %cleanup384 ], [ 0, %land.lhs.true362 ], [ 0, %if.end359 ], !dbg !14504
  call void @llvm.dbg.value(metadata i32 %need_to_clear.2, metadata !14256, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %this_node_count.2, metadata !14270, metadata !DIExpression()), !dbg !14505
  %add390 = add nsw i64 %count.0, %this_node_count.2, !dbg !14529
  call void @llvm.dbg.value(metadata i64 %add390, metadata !14268, metadata !DIExpression()), !dbg !14497
  %call391 = tail call fastcc i32 @mostly_zeros_p(%union.tree_node* %value308.1) #8, !dbg !14530
  %tobool392 = icmp eq i32 %call391, 0, !dbg !14530
  %add394 = select i1 %tobool392, i64 0, i64 %this_node_count.2, !dbg !14532
  %spec.select3 = add nsw i64 %zero_count.0, %add394, !dbg !14532
  call void @llvm.dbg.value(metadata i64 %spec.select3, metadata !14269, metadata !DIExpression()), !dbg !14497
  br label %cleanup396, !dbg !14533

cleanup396:                                       ; preds = %for.body356, %cleanup384, %if.end389
  %this_node_count.3 = phi i64 [ %this_node_count.1, %cleanup384 ], [ %this_node_count.2, %if.end389 ], [ %this_node_count.0, %for.body356 ]
  %zero_count.2 = phi i64 [ %zero_count.0, %cleanup384 ], [ %spec.select3, %if.end389 ], [ %zero_count.0, %for.body356 ], !dbg !14497
  %count.1 = phi i64 [ %count.0, %cleanup384 ], [ %add390, %if.end389 ], [ %count.0, %for.body356 ], !dbg !14497
  %need_to_clear.3 = phi i32 [ %need_to_clear.1, %cleanup384 ], [ %need_to_clear.2, %if.end389 ], [ %need_to_clear.0, %for.body356 ], !dbg !14504
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup384 ], [ 0, %if.end389 ], [ 6, %for.body356 ]
  call void @llvm.dbg.value(metadata i32 %need_to_clear.3, metadata !14256, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %count.1, metadata !14268, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i64 %zero_count.2, metadata !14269, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i64 %this_node_count.3, metadata !14270, metadata !DIExpression()), !dbg !14505
  %switch4 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %switch4, label %for.inc399, label %for.end401

for.inc399:                                       ; preds = %cleanup396
  %inc400 = add i64 %idx306.0, 1, !dbg !14506
  call void @llvm.dbg.value(metadata i64 %inc400, metadata !14262, metadata !DIExpression()), !dbg !14497
  br label %for.cond310, !dbg !14506, !llvm.loop !14534

for.end401:                                       ; preds = %cleanup396, %cond.end353
  %zero_count.3 = phi i64 [ %zero_count.2, %cleanup396 ], [ %zero_count.0, %cond.end353 ], !dbg !14501
  %count.2 = phi i64 [ %count.1, %cleanup396 ], [ %count.0, %cond.end353 ], !dbg !14502
  %need_to_clear.4 = phi i32 [ %need_to_clear.3, %cleanup396 ], [ %need_to_clear.0, %cond.end353 ], !dbg !14504
  call void @llvm.dbg.value(metadata i32 %need_to_clear.4, metadata !14256, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %count.2, metadata !14268, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i64 %zero_count.3, metadata !14269, metadata !DIExpression()), !dbg !14497
  %tobool402 = icmp eq i32 %need_to_clear.4, 0, !dbg !14536
  br i1 %tobool402, label %land.lhs.true403, label %if.end415, !dbg !14538

land.lhs.true403:                                 ; preds = %for.end401
  %sub404 = sub nsw i64 %maxelt.0, %minelt.0, !dbg !14539
  %cmp406 = icmp sgt i64 %count.2, %sub404, !dbg !14540
  br i1 %cmp406, label %lor.lhs.false408, label %if.then412, !dbg !14541

lor.lhs.false408:                                 ; preds = %land.lhs.true403
  %mul = shl nsw i64 %zero_count.3, 2, !dbg !14542
  %mul409 = mul nsw i64 %count.2, 3, !dbg !14543
  %cmp410 = icmp slt i64 %mul, %mul409, !dbg !14544
  br i1 %cmp410, label %if.end415, label %if.then412, !dbg !14545

if.then412:                                       ; preds = %lor.lhs.false408, %land.lhs.true403
  call void @llvm.dbg.value(metadata i32 1, metadata !14256, metadata !DIExpression()), !dbg !14473
  br label %if.end415, !dbg !14546

if.end415:                                        ; preds = %land.lhs.true297, %lor.lhs.false408, %for.end401, %if.end289, %if.then412
  %need_to_clear.7 = phi i32 [ 0, %if.end289 ], [ 1, %land.lhs.true297 ], [ %need_to_clear.4, %for.end401 ], [ 1, %if.then412 ], [ 0, %lor.lhs.false408 ], !dbg !14547
  call void @llvm.dbg.value(metadata i32 %need_to_clear.7, metadata !14256, metadata !DIExpression()), !dbg !14473
  %tobool416 = icmp ne i32 %need_to_clear.7, 0, !dbg !14548
  %cmp418 = icmp sgt i64 %size, 0, !dbg !14550
  %or.cond5 = and i1 %tobool416, %cmp418, !dbg !14551
  br i1 %or.cond5, label %if.then420, label %if.end436, !dbg !14551

if.then420:                                       ; preds = %if.end415
  %64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14552
  %bf.load421 = load i32, i32* %64, align 8, !dbg !14552
  %bf.clear422 = and i32 %bf.load421, 65535, !dbg !14552
  %cmp423 = icmp eq i32 %bf.clear422, 37, !dbg !14552
  br i1 %cmp423, label %if.then425, label %if.else432, !dbg !14555

if.then425:                                       ; preds = %if.then420
  %bf.lshr427 = lshr i32 %bf.load421, 16, !dbg !14556
  %bf.clear428 = and i32 %bf.lshr427, 255, !dbg !14556
  %idxprom429 = zext i32 %bf.clear428 to i64, !dbg !14556
  %arrayidx430 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom429, !dbg !14556
  %65 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx430, align 8, !dbg !14556
  %call431 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %65) #8, !dbg !14557
  br label %if.end436, !dbg !14557

if.else432:                                       ; preds = %if.then420
  %call433 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %size) #6, !dbg !14558
  %call434 = tail call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call433, i32 0) #8, !dbg !14559
  br label %if.end436

if.end436:                                        ; preds = %if.then425, %if.else432, %if.end415
  %cleared.addr.4 = phi i32 [ %cleared, %if.end415 ], [ 1, %if.else432 ], [ 1, %if.then425 ]
  call void @llvm.dbg.value(metadata i32 %cleared.addr.4, metadata !14232, metadata !DIExpression()), !dbg !14341
  %tobool437 = icmp eq i32 %cleared.addr.4, 0, !dbg !14560
  br i1 %tobool437, label %land.lhs.true438, label %if.end445, !dbg !14562

land.lhs.true438:                                 ; preds = %if.end436
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14563
  %bf.load439 = load i32, i32* %66, align 8, !dbg !14563
  %bf.clear440 = and i32 %bf.load439, 65535, !dbg !14563
  %cmp441 = icmp eq i32 %bf.clear440, 37, !dbg !14563
  br i1 %cmp441, label %if.then443, label %if.end445, !dbg !14564

if.then443:                                       ; preds = %land.lhs.true438
  %call444 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %target) #6, !dbg !14565
  br label %if.end445, !dbg !14565

if.end445:                                        ; preds = %if.end436, %if.then443, %land.lhs.true438
  call void @llvm.dbg.value(metadata i64 0, metadata !14255, metadata !DIExpression()), !dbg !14473
  %elts448 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14566
  %67 = bitcast i32* %elts448 to %struct.VEC_constructor_elt_gc**, !dbg !14566
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14567
  %type512 = bitcast %union.tree_node* %38 to %struct.tree_type*, !dbg !14567
  %mode513 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type512, i64 0, i32 6, !dbg !14567
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14568
  %type621 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !14570
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type621, i64 0, i32 6, !dbg !14570
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14576
  %71 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14576
  %tobool714 = icmp eq i64 %minelt.0, 0, !dbg !14577
  br label %for.cond446, !dbg !14579

for.cond446:                                      ; preds = %cleanup780, %if.end445
  %i.0 = phi i64 [ 0, %if.end445 ], [ %inc787, %cleanup780 ], !dbg !14580
  %index263.0 = phi %union.tree_node* [ undef, %if.end445 ], [ %index263.7, %cleanup780 ]
  %value262.0 = phi %union.tree_node* [ undef, %if.end445 ], [ %value262.1, %cleanup780 ]
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.end445 ], [ %target.addr.7, %cleanup780 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !14231, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata %union.tree_node* %value262.0, metadata !14252, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata %union.tree_node* %index263.0, metadata !14254, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !14255, metadata !DIExpression()), !dbg !14473
  %72 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %67, align 8, !dbg !14581
  %tobool449 = icmp eq %struct.VEC_constructor_elt_gc* %72, null, !dbg !14581
  br i1 %tobool449, label %cond.end455, label %cond.true450, !dbg !14581

cond.true450:                                     ; preds = %for.cond446
  %base453 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %72, i64 0, i32 0, !dbg !14581
  br label %cond.end455, !dbg !14581

cond.end455:                                      ; preds = %for.cond446, %cond.true450
  %cond456 = phi %struct.VEC_constructor_elt_base* [ %base453, %cond.true450 ], [ null, %for.cond446 ], !dbg !14581
  %call457 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond456) #8, !dbg !14581
  %conv458 = zext i32 %call457 to i64, !dbg !14581
  %cmp459 = icmp ult i64 %i.0, %conv458, !dbg !14581
  br i1 %cmp459, label %cond.false462, label %cond.end489, !dbg !14581

cond.false462:                                    ; preds = %cond.end455
  %73 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %67, align 8, !dbg !14581
  %tobool465 = icmp eq %struct.VEC_constructor_elt_gc* %73, null, !dbg !14581
  br i1 %tobool465, label %cond.end471, label %cond.true466, !dbg !14581

cond.true466:                                     ; preds = %cond.false462
  %base469 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %73, i64 0, i32 0, !dbg !14581
  br label %cond.end471, !dbg !14581

cond.end471:                                      ; preds = %cond.false462, %cond.true466
  %cond472 = phi %struct.VEC_constructor_elt_base* [ %base469, %cond.true466 ], [ null, %cond.false462 ], !dbg !14581
  %conv473 = trunc i64 %i.0 to i32, !dbg !14581
  %call474 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond472, i32 %conv473) #8, !dbg !14581
  %value475 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call474, i64 0, i32 1, !dbg !14581
  %74 = load %union.tree_node*, %union.tree_node** %value475, align 8, !dbg !14581
  call void @llvm.dbg.value(metadata %union.tree_node* %74, metadata !14252, metadata !DIExpression()), !dbg !14473
  %75 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %67, align 8, !dbg !14581
  %tobool478 = icmp eq %struct.VEC_constructor_elt_gc* %75, null, !dbg !14581
  br i1 %tobool478, label %cond.end484, label %cond.true479, !dbg !14581

cond.true479:                                     ; preds = %cond.end471
  %base482 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %75, i64 0, i32 0, !dbg !14581
  br label %cond.end484, !dbg !14581

cond.end484:                                      ; preds = %cond.end471, %cond.true479
  %cond485 = phi %struct.VEC_constructor_elt_base* [ %base482, %cond.true479 ], [ null, %cond.end471 ], !dbg !14581
  %call487 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond485, i32 %conv473) #8, !dbg !14581
  %index488 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call487, i64 0, i32 0, !dbg !14581
  %76 = load %union.tree_node*, %union.tree_node** %index488, align 8, !dbg !14581
  call void @llvm.dbg.value(metadata %union.tree_node* %76, metadata !14254, metadata !DIExpression()), !dbg !14473
  br label %cond.end489, !dbg !14581

cond.end489:                                      ; preds = %cond.end455, %cond.end484
  %index263.1 = phi %union.tree_node* [ %76, %cond.end484 ], [ %index263.0, %cond.end455 ]
  %value262.1 = phi %union.tree_node* [ %74, %cond.end484 ], [ %value262.0, %cond.end455 ]
  %cond490 = phi i1 [ true, %cond.end484 ], [ false, %cond.end455 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value262.1, metadata !14252, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata %union.tree_node* %index263.1, metadata !14254, metadata !DIExpression()), !dbg !14473
  br i1 %cond490, label %for.body492, label %sw.epilog.loopexit35, !dbg !14579

for.body492:                                      ; preds = %cond.end489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !14284, metadata !DIExpression()), !dbg !14567
  br i1 %tobool437, label %if.end502, label %land.lhs.true497, !dbg !14582

land.lhs.true497:                                 ; preds = %for.body492
  %call498 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %value262.1) #6, !dbg !14584
  %tobool500 = icmp eq i8 %call498, 0, !dbg !14584
  br i1 %tobool500, label %if.end502, label %cleanup780, !dbg !14585

if.end502:                                        ; preds = %land.lhs.true497, %for.body492
  %bf.load504 = load i64, i64* %68, align 8, !dbg !14586
  %bf.cast50622 = and i64 %bf.load504, 65535, !dbg !14586
  %cmp507 = icmp eq i64 %bf.cast50622, 14, !dbg !14586
  br i1 %cmp507, label %cond.true509, label %cond.false511, !dbg !14586

cond.true509:                                     ; preds = %if.end502
  %call510 = tail call i32 @vector_type_mode(%union.tree_node* %38) #6, !dbg !14586
  br label %cond.end517, !dbg !14586

cond.false511:                                    ; preds = %if.end502
  %bf.load514 = load i32, i32* %mode513, align 4, !dbg !14586
  %bf.lshr515 = lshr i32 %bf.load514, 16, !dbg !14586
  %bf.clear516 = and i32 %bf.lshr515, 255, !dbg !14586
  br label %cond.end517, !dbg !14586

cond.end517:                                      ; preds = %cond.false511, %cond.true509
  %cond518 = phi i32 [ %call510, %cond.true509 ], [ %bf.clear516, %cond.false511 ], !dbg !14586
  call void @llvm.dbg.value(metadata i32 %cond518, metadata !14278, metadata !DIExpression()), !dbg !14567
  %cmp519 = icmp eq i32 %cond518, 1, !dbg !14587
  br i1 %cmp519, label %if.then521, label %if.else533, !dbg !14588

if.then521:                                       ; preds = %cond.end517
  %77 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14589
  %call524 = tail call i32 @host_integerp(%union.tree_node* %77, i32 1) #6, !dbg !14590
  %tobool525 = icmp eq i32 %call524, 0, !dbg !14590
  br i1 %tobool525, label %if.end541, label %cond.true526, !dbg !14590

cond.true526:                                     ; preds = %if.then521
  %78 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14591
  %call529 = tail call i64 @tree_low_cst(%union.tree_node* %78, i32 1) #6, !dbg !14592
  br label %if.end541, !dbg !14590

if.else533:                                       ; preds = %cond.end517
  %idxprom534 = zext i32 %cond518 to i64, !dbg !14593
  %arrayidx535 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom534, !dbg !14593
  %79 = load i8, i8* %arrayidx535, align 1, !dbg !14593
  %conv537 = zext i8 %79 to i64, !dbg !14593
  %mul538 = shl nuw nsw i64 %conv537, 3, !dbg !14593
  call void @llvm.dbg.value(metadata i64 %mul538, metadata !14282, metadata !DIExpression()), !dbg !14567
  br label %if.end541

if.end541:                                        ; preds = %if.then521, %cond.true526, %if.else533
  %bitsize494.0 = phi i64 [ %mul538, %if.else533 ], [ %call529, %cond.true526 ], [ -1, %if.then521 ], !dbg !14568
  call void @llvm.dbg.value(metadata i64 %bitsize494.0, metadata !14282, metadata !DIExpression()), !dbg !14567
  %cond12 = icmp eq %union.tree_node* %index263.1, null, !dbg !14594
  br i1 %cond12, label %lor.lhs.false702, label %land.lhs.true544, !dbg !14594

land.lhs.true544:                                 ; preds = %if.end541
  %80 = getelementptr inbounds %union.tree_node, %union.tree_node* %index263.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14595
  %bf.load546 = load i64, i64* %80, align 8, !dbg !14595
  %bf.cast54823 = and i64 %bf.load546, 65535, !dbg !14596
  %cmp549 = icmp eq i64 %bf.cast54823, 111, !dbg !14596
  br i1 %cmp549, label %if.then551, label %if.else696, !dbg !14597

if.then551:                                       ; preds = %land.lhs.true544
  %operands554 = getelementptr inbounds %union.tree_node, %union.tree_node* %index263.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14598
  %81 = load %union.tree_node*, %union.tree_node** %operands554, align 8, !dbg !14598
  call void @llvm.dbg.value(metadata %union.tree_node* %81, metadata !14285, metadata !DIExpression()), !dbg !14599
  %arrayidx559 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands554, i64 1, !dbg !14600
  %82 = load %union.tree_node*, %union.tree_node** %arrayidx559, align 8, !dbg !14600
  call void @llvm.dbg.value(metadata %union.tree_node* %82, metadata !14288, metadata !DIExpression()), !dbg !14599
  br i1 %46, label %land.lhs.true562, label %if.else636, !dbg !14601

land.lhs.true562:                                 ; preds = %if.then551
  %call563 = tail call i32 @host_integerp(%union.tree_node* %81, i32 0) #6, !dbg !14602
  %tobool564 = icmp eq i32 %call563, 0, !dbg !14602
  br i1 %tobool564, label %if.else636, label %land.lhs.true565, !dbg !14603

land.lhs.true565:                                 ; preds = %land.lhs.true562
  %call566 = tail call i32 @host_integerp(%union.tree_node* %82, i32 0) #6, !dbg !14604
  %tobool567 = icmp eq i32 %call566, 0, !dbg !14604
  br i1 %tobool567, label %if.else636, label %land.lhs.true568, !dbg !14605

land.lhs.true568:                                 ; preds = %land.lhs.true565
  %call569 = tail call i64 @tree_low_cst(%union.tree_node* %81, i32 0) #6, !dbg !14606
  call void @llvm.dbg.value(metadata i64 %call569, metadata !14291, metadata !DIExpression()), !dbg !14599
  %call570 = tail call i64 @tree_low_cst(%union.tree_node* %82, i32 0) #6, !dbg !14607
  call void @llvm.dbg.value(metadata i64 %call570, metadata !14292, metadata !DIExpression()), !dbg !14599
  %sub571 = sub nsw i64 %call570, %call569, !dbg !14608
  %add572 = add nsw i64 %sub571, 1, !dbg !14609
  call void @llvm.dbg.value(metadata i64 %add572, metadata !14293, metadata !DIExpression()), !dbg !14599
  %83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.0, i64 0, i32 0, !dbg !14610
  %bf.load573 = load i32, i32* %83, align 8, !dbg !14610
  %bf.clear574 = and i32 %bf.load573, 65535, !dbg !14610
  %cmp575 = icmp ne i32 %bf.clear574, 43, !dbg !14610
  %cmp578 = icmp slt i64 %add572, 3, !dbg !14611
  %or.cond6 = or i1 %cmp575, %cmp578, !dbg !14612
  br i1 %or.cond6, label %if.then593, label %lor.rhs, !dbg !14612

lor.rhs:                                          ; preds = %land.lhs.true568
  %84 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14613
  %call582 = tail call i32 @host_integerp(%union.tree_node* %84, i32 1) #6, !dbg !14614
  %tobool583 = icmp eq i32 %call582, 0, !dbg !14614
  br i1 %tobool583, label %if.else636, label %land.rhs584, !dbg !14615

land.rhs584:                                      ; preds = %lor.rhs
  %85 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14616
  %call587 = tail call i64 @tree_low_cst(%union.tree_node* %85, i32 1) #6, !dbg !14617
  %mul588 = mul nsw i64 %call587, %add572, !dbg !14618
  %cmp589 = icmp slt i64 %mul588, 321, !dbg !14619
  br i1 %cmp589, label %if.then593, label %if.else636, !dbg !14620

if.then593:                                       ; preds = %land.lhs.true568, %land.rhs584
  %sub594 = sub nsw i64 %call569, %minelt.0, !dbg !14621
  call void @llvm.dbg.value(metadata i64 %sub594, metadata !14291, metadata !DIExpression()), !dbg !14599
  %sub595 = sub nsw i64 %call570, %minelt.0, !dbg !14622
  call void @llvm.dbg.value(metadata i64 %sub595, metadata !14292, metadata !DIExpression()), !dbg !14599
  br label %for.cond596, !dbg !14623

for.cond596:                                      ; preds = %if.end631, %if.then593
  %lo.0 = phi i64 [ %sub594, %if.then593 ], [ %inc634, %if.end631 ], !dbg !14624
  %target.addr.1 = phi %struct.rtx_def* [ %target.addr.0, %if.then593 ], [ %target.addr.2, %if.end631 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !14231, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata i64 %lo.0, metadata !14291, metadata !DIExpression()), !dbg !14599
  %cmp597 = icmp sgt i64 %lo.0, %sub595, !dbg !14625
  br i1 %cmp597, label %cleanup780.loopexit, label %for.body599, !dbg !14626

for.body599:                                      ; preds = %for.cond596
  %86 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14627
  %call602 = tail call i64 @tree_low_cst(%union.tree_node* %86, i32 0) #6, !dbg !14628
  %mul603 = mul nsw i64 %lo.0, %call602, !dbg !14629
  call void @llvm.dbg.value(metadata i64 %mul603, metadata !14283, metadata !DIExpression()), !dbg !14567
  %87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.1, i64 0, i32 0, !dbg !14630
  %bf.load604 = load i32, i32* %87, align 8, !dbg !14630
  %bf.clear605 = and i32 %bf.load604, 65535, !dbg !14630
  %cmp606 = icmp eq i32 %bf.clear605, 43, !dbg !14630
  br i1 %cmp606, label %land.lhs.true608, label %if.end631, !dbg !14631

land.lhs.true608:                                 ; preds = %for.body599
  %bf.clear611 = and i32 %bf.load604, 16777216, !dbg !14632
  %tobool612 = icmp eq i32 %bf.clear611, 0, !dbg !14632
  br i1 %tobool612, label %land.lhs.true613, label %if.end631, !dbg !14633

land.lhs.true613:                                 ; preds = %land.lhs.true608
  %bf.load615 = load i64, i64* %1, align 8, !dbg !14634
  %bf.cast61726 = and i64 %bf.load615, 65535, !dbg !14635
  %cmp618 = icmp eq i64 %bf.cast61726, 15, !dbg !14635
  br i1 %cmp618, label %land.lhs.true620, label %if.end631, !dbg !14636

land.lhs.true620:                                 ; preds = %land.lhs.true613
  %bf.load622 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !14637
  %bf.clear624 = and i32 %bf.load622, 4096, !dbg !14637
  %tobool625 = icmp eq i32 %bf.clear624, 0, !dbg !14637
  br i1 %tobool625, label %if.end631, label %if.then626, !dbg !14638

if.then626:                                       ; preds = %land.lhs.true620
  %call627 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target.addr.1) #6, !dbg !14639
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call627, metadata !14231, metadata !DIExpression()), !dbg !14341
  %88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call627, i64 0, i32 0, !dbg !14641
  %bf.load628 = load i32, i32* %88, align 8, !dbg !14642
  %bf.set630 = or i32 %bf.load628, 16777216, !dbg !14642
  store i32 %bf.set630, i32* %88, align 8, !dbg !14642
  br label %if.end631, !dbg !14643

if.end631:                                        ; preds = %land.lhs.true620, %land.lhs.true608, %if.then626, %land.lhs.true613, %for.body599
  %target.addr.2 = phi %struct.rtx_def* [ %target.addr.1, %land.lhs.true608 ], [ %call627, %if.then626 ], [ %target.addr.1, %land.lhs.true620 ], [ %target.addr.1, %land.lhs.true613 ], [ %target.addr.1, %for.body599 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.2, metadata !14231, metadata !DIExpression()), !dbg !14341
  %call632 = tail call i32 @get_alias_set(%union.tree_node* %38) #6, !dbg !14644
  tail call fastcc void @store_constructor_field(%struct.rtx_def* %target.addr.2, i64 %bitsize494.0, i64 %mul603, i32 %cond518, %union.tree_node* %value262.1, %union.tree_node* %0, i32 %cleared.addr.4, i32 %call632) #8, !dbg !14645
  %inc634 = add nsw i64 %lo.0, 1, !dbg !14646
  call void @llvm.dbg.value(metadata i64 %inc634, metadata !14291, metadata !DIExpression()), !dbg !14599
  br label %for.cond596, !dbg !14647, !llvm.loop !14648

if.else636:                                       ; preds = %lor.rhs, %land.lhs.true565, %land.lhs.true562, %land.rhs584, %if.then551
  %call637 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !14650
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call637, metadata !14295, metadata !DIExpression()), !dbg !14576
  %call638 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !14651
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call638, metadata !14298, metadata !DIExpression()), !dbg !14576
  %call639 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %82) #8, !dbg !14652
  %bf.load641 = load i64, i64* %70, align 8, !dbg !14653
  %bf.cast643 = and i64 %bf.load641, 65535, !dbg !14653
  %arrayidx645 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast643, !dbg !14653
  %89 = load i32, i32* %arrayidx645, align 4, !dbg !14653
  %cmp646 = icmp ugt i32 %89, 3, !dbg !14653
  br i1 %cmp646, label %land.lhs.true648, label %cond.end660, !dbg !14653

land.lhs.true648:                                 ; preds = %if.else636
  %cmp655 = icmp ult i32 %89, 11, !dbg !14653
  br i1 %cmp655, label %cond.true657, label %cond.end660, !dbg !14653

cond.true657:                                     ; preds = %land.lhs.true648
  %90 = load i32, i32* %elts448, align 8, !dbg !14653
  br label %cond.end660, !dbg !14653

cond.end660:                                      ; preds = %if.else636, %land.lhs.true648, %cond.true657
  %cond661 = phi i32 [ %90, %cond.true657 ], [ 0, %land.lhs.true648 ], [ 0, %if.else636 ], !dbg !14653
  %call662 = tail call %union.tree_node* @build_decl_stat(i32 %cond661, i32 32, %union.tree_node* null, %union.tree_node* %40) #6, !dbg !14653
  call void @llvm.dbg.value(metadata %union.tree_node* %call662, metadata !14254, metadata !DIExpression()), !dbg !14473
  %call663 = tail call i32 @promote_decl_mode(%union.tree_node* %call662, i32* null) #6, !dbg !14654
  %call664 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call663) #6, !dbg !14655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call664, metadata !14289, metadata !DIExpression()), !dbg !14599
  tail call void @set_decl_rtl(%union.tree_node* %call662, %struct.rtx_def* %call664) #6, !dbg !14656
  %call665 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %81, %struct.rtx_def* %call664, i32 0, i8 zeroext 0) #8, !dbg !14657
  tail call void @do_pending_stack_adjust() #6, !dbg !14658
  %call666 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call637) #6, !dbg !14659
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !14660
  %type668 = getelementptr inbounds %union.tree_node, %union.tree_node* %call662, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14660
  %92 = load %union.tree_node*, %union.tree_node** %type668, align 8, !dbg !14660
  %93 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !14660
  %call671 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %92, %union.tree_node* %call662, %union.tree_node* %93) #6, !dbg !14660
  %call672 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %91, %union.tree_node* %call671) #6, !dbg !14660
  call void @llvm.dbg.value(metadata %union.tree_node* %call672, metadata !14294, metadata !DIExpression()), !dbg !14599
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !14661
  %95 = load %union.tree_node*, %union.tree_node** %71, align 8, !dbg !14661
  %call674 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %94, %union.tree_node* %95) #6, !dbg !14661
  %call675 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %call672, %union.tree_node* %call674) #6, !dbg !14661
  call void @llvm.dbg.value(metadata %union.tree_node* %call675, metadata !14294, metadata !DIExpression()), !dbg !14599
  %call676 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call675) #8, !dbg !14662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call676, metadata !14290, metadata !DIExpression()), !dbg !14599
  %call677 = tail call i64 @highest_pow2_factor(%union.tree_node* %call675) #8, !dbg !14663
  %call678 = tail call %struct.rtx_def* @offset_address(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call676, i64 %call677) #6, !dbg !14664
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call678, metadata !14284, metadata !DIExpression()), !dbg !14567
  %call679 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call678, i32 %cond518, i64 0, i32 1, i32 1) #6, !dbg !14665
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call679, metadata !14284, metadata !DIExpression()), !dbg !14567
  %96 = getelementptr inbounds %union.tree_node, %union.tree_node* %value262.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14666
  %bf.load681 = load i64, i64* %96, align 8, !dbg !14666
  %bf.cast68325 = and i64 %bf.load681, 65535, !dbg !14668
  %cmp684 = icmp eq i64 %bf.cast68325, 51, !dbg !14668
  br i1 %cmp684, label %if.then686, label %if.else687, !dbg !14669

if.then686:                                       ; preds = %cond.end660
  %div = sdiv i64 %bitsize494.0, 8, !dbg !14670
  tail call fastcc void @store_constructor(%union.tree_node* %value262.1, %struct.rtx_def* %call679, i32 %cleared.addr.4, i64 %div) #8, !dbg !14671
  br label %if.end689, !dbg !14671

if.else687:                                       ; preds = %cond.end660
  %call688 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %value262.1, %struct.rtx_def* %call679, i32 0, i8 zeroext 0) #8, !dbg !14672
  br label %if.end689

if.end689:                                        ; preds = %if.else687, %if.then686
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !14673
  %call690 = tail call %union.tree_node* @build2_stat(i32 97, %union.tree_node* %97, %union.tree_node* %call662, %union.tree_node* %82) #6, !dbg !14673
  call void @llvm.dbg.value(metadata %union.tree_node* %call690, metadata !14299, metadata !DIExpression()), !dbg !14576
  tail call void @jumpif(%union.tree_node* %call690, %struct.rtx_def* %call638, i32 -1) #6, !dbg !14674
  %98 = load %union.tree_node*, %union.tree_node** %type668, align 8, !dbg !14675
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !14675
  %call693 = tail call %union.tree_node* @build2_stat(i32 63, %union.tree_node* %98, %union.tree_node* %call662, %union.tree_node* %99) #6, !dbg !14675
  tail call void @expand_assignment(%union.tree_node* %call662, %union.tree_node* %call693, i8 zeroext 0) #8, !dbg !14676
  tail call void @emit_jump(%struct.rtx_def* %call637) #6, !dbg !14677
  %call694 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call638) #6, !dbg !14678
  br label %cleanup780

if.else696:                                       ; preds = %land.lhs.true544
  %call700 = tail call i32 @host_integerp(%union.tree_node* nonnull %index263.1, i32 0) #6, !dbg !14679
  %tobool701 = icmp eq i32 %call700, 0, !dbg !14679
  br i1 %tobool701, label %if.then707, label %lor.lhs.false702, !dbg !14680

lor.lhs.false702:                                 ; preds = %if.else696, %if.end541
  %100 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14681
  %call705 = tail call i32 @host_integerp(%union.tree_node* %100, i32 1) #6, !dbg !14682
  %tobool706 = icmp eq i32 %call705, 0, !dbg !14682
  br i1 %tobool706, label %if.then707, label %if.else732, !dbg !14683

if.then707:                                       ; preds = %if.else696, %lor.lhs.false702
  br i1 %cond12, label %if.then711, label %if.end713, !dbg !14684

if.then711:                                       ; preds = %if.then707
  %call712 = tail call %union.tree_node* @size_int_kind(i64 1, i32 1) #6, !dbg !14685
  call void @llvm.dbg.value(metadata %union.tree_node* %call712, metadata !14254, metadata !DIExpression()), !dbg !14473
  br label %if.end713, !dbg !14687

if.end713:                                        ; preds = %if.then711, %if.then707
  %index263.3 = phi %union.tree_node* [ %call712, %if.then711 ], [ %index263.1, %if.then707 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %index263.3, metadata !14254, metadata !DIExpression()), !dbg !14473
  br i1 %tobool714, label %if.end722, label %if.then715, !dbg !14688

if.then715:                                       ; preds = %if.end713
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !14689
  %type717 = getelementptr inbounds %union.tree_node, %union.tree_node* %index263.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14689
  %102 = load %union.tree_node*, %union.tree_node** %type717, align 8, !dbg !14689
  %103 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !14689
  %call720 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %102, %union.tree_node* %index263.3, %union.tree_node* %103) #6, !dbg !14689
  %call721 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %101, %union.tree_node* %call720) #6, !dbg !14689
  call void @llvm.dbg.value(metadata %union.tree_node* %call721, metadata !14254, metadata !DIExpression()), !dbg !14473
  br label %if.end722, !dbg !14690

if.end722:                                        ; preds = %if.end713, %if.then715
  %index263.4 = phi %union.tree_node* [ %call721, %if.then715 ], [ %index263.3, %if.end713 ], !dbg !14691
  call void @llvm.dbg.value(metadata %union.tree_node* %index263.4, metadata !14254, metadata !DIExpression()), !dbg !14473
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !14692
  %105 = load %union.tree_node*, %union.tree_node** %71, align 8, !dbg !14692
  %call725 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %104, %union.tree_node* %105) #6, !dbg !14692
  %call726 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %index263.4, %union.tree_node* %call725) #6, !dbg !14692
  call void @llvm.dbg.value(metadata %union.tree_node* %call726, metadata !14300, metadata !DIExpression()), !dbg !14691
  %call727 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call726) #8, !dbg !14693
  %call728 = tail call i64 @highest_pow2_factor(%union.tree_node* %call726) #8, !dbg !14694
  %call729 = tail call %struct.rtx_def* @offset_address(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %call727, i64 %call728) #6, !dbg !14695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call729, metadata !14284, metadata !DIExpression()), !dbg !14567
  %call730 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call729, i32 %cond518, i64 0, i32 1, i32 1) #6, !dbg !14696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call730, metadata !14284, metadata !DIExpression()), !dbg !14567
  %call731 = tail call %struct.rtx_def* @store_expr(%union.tree_node* %value262.1, %struct.rtx_def* %call730, i32 0, i8 zeroext 0) #8, !dbg !14697
  br label %cleanup780, !dbg !14698

if.else732:                                       ; preds = %lor.lhs.false702
  br i1 %cond12, label %if.else742, label %if.then735, !dbg !14699

if.then735:                                       ; preds = %if.else732
  %call736 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %index263.1, i32 0) #6, !dbg !14701
  %sub737 = sub nsw i64 %call736, %minelt.0, !dbg !14703
  %106 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14704
  %call740 = tail call i64 @tree_low_cst(%union.tree_node* %106, i32 1) #6, !dbg !14705
  %mul741 = mul nsw i64 %sub737, %call740, !dbg !14706
  call void @llvm.dbg.value(metadata i64 %mul741, metadata !14283, metadata !DIExpression()), !dbg !14567
  br label %if.end747, !dbg !14707

if.else742:                                       ; preds = %if.else732
  %107 = load %union.tree_node*, %union.tree_node** %69, align 8, !dbg !14708
  %call745 = tail call i64 @tree_low_cst(%union.tree_node* %107, i32 1) #6, !dbg !14709
  %mul746 = mul i64 %i.0, %call745, !dbg !14710
  call void @llvm.dbg.value(metadata i64 %mul746, metadata !14283, metadata !DIExpression()), !dbg !14567
  br label %if.end747

if.end747:                                        ; preds = %if.else742, %if.then735
  %bitpos495.0 = phi i64 [ %mul741, %if.then735 ], [ %mul746, %if.else742 ], !dbg !14711
  call void @llvm.dbg.value(metadata i64 %bitpos495.0, metadata !14283, metadata !DIExpression()), !dbg !14567
  %108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.0, i64 0, i32 0, !dbg !14712
  %bf.load748 = load i32, i32* %108, align 8, !dbg !14712
  %bf.clear749 = and i32 %bf.load748, 65535, !dbg !14712
  %cmp750 = icmp eq i32 %bf.clear749, 43, !dbg !14712
  br i1 %cmp750, label %land.lhs.true752, label %if.end776, !dbg !14714

land.lhs.true752:                                 ; preds = %if.end747
  %bf.clear755 = and i32 %bf.load748, 16777216, !dbg !14715
  %tobool756 = icmp eq i32 %bf.clear755, 0, !dbg !14715
  br i1 %tobool756, label %land.lhs.true757, label %if.end776, !dbg !14716

land.lhs.true757:                                 ; preds = %land.lhs.true752
  %bf.load759 = load i64, i64* %1, align 8, !dbg !14717
  %bf.cast76124 = and i64 %bf.load759, 65535, !dbg !14718
  %cmp762 = icmp eq i64 %bf.cast76124, 15, !dbg !14718
  br i1 %cmp762, label %land.lhs.true764, label %if.end776, !dbg !14719

land.lhs.true764:                                 ; preds = %land.lhs.true757
  %bf.load767 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !14720
  %bf.clear769 = and i32 %bf.load767, 4096, !dbg !14720
  %tobool770 = icmp eq i32 %bf.clear769, 0, !dbg !14720
  br i1 %tobool770, label %if.end776, label %if.then771, !dbg !14721

if.then771:                                       ; preds = %land.lhs.true764
  %call772 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target.addr.0) #6, !dbg !14722
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call772, metadata !14231, metadata !DIExpression()), !dbg !14341
  %109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call772, i64 0, i32 0, !dbg !14724
  %bf.load773 = load i32, i32* %109, align 8, !dbg !14725
  %bf.set775 = or i32 %bf.load773, 16777216, !dbg !14725
  store i32 %bf.set775, i32* %109, align 8, !dbg !14725
  br label %if.end776, !dbg !14726

if.end776:                                        ; preds = %land.lhs.true764, %land.lhs.true752, %if.then771, %land.lhs.true757, %if.end747
  %target.addr.4 = phi %struct.rtx_def* [ %target.addr.0, %land.lhs.true752 ], [ %call772, %if.then771 ], [ %target.addr.0, %land.lhs.true764 ], [ %target.addr.0, %land.lhs.true757 ], [ %target.addr.0, %if.end747 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.4, metadata !14231, metadata !DIExpression()), !dbg !14341
  %call777 = tail call i32 @get_alias_set(%union.tree_node* %38) #6, !dbg !14727
  tail call fastcc void @store_constructor_field(%struct.rtx_def* %target.addr.4, i64 %bitsize494.0, i64 %bitpos495.0, i32 %cond518, %union.tree_node* %value262.1, %union.tree_node* %0, i32 %cleared.addr.4, i32 %call777) #8, !dbg !14728
  br label %cleanup780

cleanup780.loopexit:                              ; preds = %for.cond596
  %target.addr.1.lcssa = phi %struct.rtx_def* [ %target.addr.1, %for.cond596 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1.lcssa, metadata !14231, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1.lcssa, metadata !14231, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1.lcssa, metadata !14231, metadata !DIExpression()), !dbg !14341
  br label %cleanup780, !dbg !14581

cleanup780:                                       ; preds = %cleanup780.loopexit, %land.lhs.true497, %if.end689, %if.end776, %if.end722
  %index263.7 = phi %union.tree_node* [ %index263.1, %land.lhs.true497 ], [ %call662, %if.end689 ], [ %index263.1, %if.end776 ], [ %index263.4, %if.end722 ], [ %index263.1, %cleanup780.loopexit ]
  %target.addr.7 = phi %struct.rtx_def* [ %target.addr.0, %land.lhs.true497 ], [ %target.addr.0, %if.end689 ], [ %target.addr.4, %if.end776 ], [ %target.addr.0, %if.end722 ], [ %target.addr.1.lcssa, %cleanup780.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.7, metadata !14231, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata %union.tree_node* %index263.7, metadata !14254, metadata !DIExpression()), !dbg !14473
  %inc787 = add i64 %i.0, 1, !dbg !14581
  call void @llvm.dbg.value(metadata i64 %inc787, metadata !14255, metadata !DIExpression()), !dbg !14473
  br label %for.cond446, !dbg !14581, !llvm.loop !14729

sw.bb798:                                         ; preds = %entry
  %110 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !14731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7, !dbg !14731
  call void @llvm.dbg.value(metadata i32 0, metadata !14308, metadata !DIExpression()), !dbg !14732
  %type804 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14733
  %111 = load %union.tree_node*, %union.tree_node** %type804, align 8, !dbg !14733
  call void @llvm.dbg.value(metadata %union.tree_node* %111, metadata !14309, metadata !DIExpression()), !dbg !14732
  %112 = getelementptr inbounds %union.tree_node, %union.tree_node* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14734
  %113 = load %union.tree_node*, %union.tree_node** %112, align 8, !dbg !14734
  %call807 = tail call i64 @tree_low_cst(%union.tree_node* %113, i32 1) #6, !dbg !14735
  %114 = getelementptr inbounds %union.tree_node, %union.tree_node* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14736
  %bf.load810 = load i64, i64* %114, align 8, !dbg !14736
  %bf.cast81213 = and i64 %bf.load810, 65535, !dbg !14736
  %cmp813 = icmp eq i64 %bf.cast81213, 14, !dbg !14736
  br i1 %cmp813, label %cond.true815, label %cond.false817, !dbg !14736

cond.true815:                                     ; preds = %sw.bb798
  %call816 = tail call i32 @vector_type_mode(%union.tree_node* %111) #6, !dbg !14736
  br label %cond.end823, !dbg !14736

cond.false817:                                    ; preds = %sw.bb798
  %type818 = bitcast %union.tree_node* %111 to %struct.tree_type*, !dbg !14736
  %mode819 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type818, i64 0, i32 6, !dbg !14736
  %bf.load820 = load i32, i32* %mode819, align 4, !dbg !14736
  %bf.lshr821 = lshr i32 %bf.load820, 16, !dbg !14736
  %bf.clear822 = and i32 %bf.lshr821, 255, !dbg !14736
  br label %cond.end823, !dbg !14736

cond.end823:                                      ; preds = %cond.false817, %cond.true815
  %cond824 = phi i32 [ %call816, %cond.true815 ], [ %bf.clear822, %cond.false817 ], !dbg !14736
  call void @llvm.dbg.value(metadata i32 %cond824, metadata !14311, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata %struct.rtvec_def* null, metadata !14314, metadata !DIExpression()), !dbg !14732
  %cmp827 = icmp eq i32 %cond824, 1, !dbg !14737
  br i1 %cmp827, label %cond.true829, label %cond.end831, !dbg !14737

cond.true829:                                     ; preds = %cond.end823
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5633, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14737
  br label %cond.end831, !dbg !14737

cond.end831:                                      ; preds = %cond.end823, %cond.true829
  %type833 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !14738
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type833, i64 0, i32 6, !dbg !14738
  %bf.load834 = load i32, i32* %precision, align 4, !dbg !14738
  %bf.clear835 = and i32 %bf.load834, 1023, !dbg !14738
  %sh_prom = zext i32 %bf.clear835 to i64, !dbg !14738
  %shl = shl i64 1, %sh_prom, !dbg !14738
  %conv836 = trunc i64 %shl to i32, !dbg !14738
  call void @llvm.dbg.value(metadata i32 %conv836, metadata !14315, metadata !DIExpression()), !dbg !14732
  %115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14739
  %bf.load837 = load i32, i32* %115, align 8, !dbg !14739
  %bf.clear838 = and i32 %bf.load837, 65535, !dbg !14739
  %cmp839 = icmp eq i32 %bf.clear838, 37, !dbg !14739
  br i1 %cmp839, label %land.lhs.true841, label %if.end922, !dbg !14740

land.lhs.true841:                                 ; preds = %cond.end831
  %bf.lshr843 = lshr i32 %bf.load837, 16, !dbg !14741
  %bf.clear844 = and i32 %bf.lshr843, 255, !dbg !14741
  %idxprom845 = zext i32 %bf.clear844 to i64, !dbg !14741
  %arrayidx846 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom845, !dbg !14741
  %116 = load i8, i8* %arrayidx846, align 1, !dbg !14741
  %cmp848 = icmp eq i8 %116, 12, !dbg !14741
  br i1 %cmp848, label %if.then895, label %lor.lhs.false850, !dbg !14741

lor.lhs.false850:                                 ; preds = %land.lhs.true841
  %cmp857 = icmp eq i8 %116, 17, !dbg !14741
  br i1 %cmp857, label %if.then895, label %lor.lhs.false859, !dbg !14741

lor.lhs.false859:                                 ; preds = %lor.lhs.false850
  %cmp866 = icmp eq i8 %116, 13, !dbg !14741
  br i1 %cmp866, label %if.then895, label %lor.lhs.false868, !dbg !14741

lor.lhs.false868:                                 ; preds = %lor.lhs.false859
  %cmp875 = icmp eq i8 %116, 14, !dbg !14741
  br i1 %cmp875, label %if.then895, label %lor.lhs.false877, !dbg !14741

lor.lhs.false877:                                 ; preds = %lor.lhs.false868
  %cmp884 = icmp eq i8 %116, 15, !dbg !14741
  br i1 %cmp884, label %if.then895, label %lor.lhs.false886, !dbg !14741

lor.lhs.false886:                                 ; preds = %lor.lhs.false877
  %cmp893 = icmp eq i8 %116, 16, !dbg !14741
  br i1 %cmp893, label %if.then895, label %if.end922, !dbg !14742

if.then895:                                       ; preds = %lor.lhs.false886, %lor.lhs.false877, %lor.lhs.false868, %lor.lhs.false859, %lor.lhs.false850, %land.lhs.true841
  call void @llvm.dbg.value(metadata i32 %bf.clear844, metadata !14317, metadata !DIExpression()), !dbg !14743
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 137, i32 4, i64 %idxprom845, i32 0, !dbg !14744
  %117 = load i32, i32* %insn_code, align 4, !dbg !14744
  call void @llvm.dbg.value(metadata i32 %117, metadata !14308, metadata !DIExpression()), !dbg !14732
  %cmp902 = icmp eq i32 %117, 2956, !dbg !14745
  br i1 %cmp902, label %if.end922, label %if.then904, !dbg !14746

if.then904:                                       ; preds = %if.then895
  %call906 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %conv836) #6, !dbg !14747
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call906, metadata !14314, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata i32 0, metadata !14320, metadata !DIExpression()), !dbg !14748
  %arrayidx912 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom845, !dbg !14749
  %wide.trip.count = and i64 %shl, 4294967295, !dbg !14752
  br label %for.cond907, !dbg !14753

for.cond907:                                      ; preds = %for.body910, %if.then904
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body910 ], [ 0, %if.then904 ], !dbg !14754
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !14320, metadata !DIExpression()), !dbg !14748
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !14752
  br i1 %exitcond, label %if.end922.loopexit, label %for.body910, !dbg !14755

for.body910:                                      ; preds = %for.cond907
  %118 = load i8, i8* %arrayidx912, align 1, !dbg !14756
  %idxprom914 = zext i8 %118 to i64, !dbg !14756
  %arrayidx915 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom914, !dbg !14756
  %119 = bitcast %struct.rtx_def** %arrayidx915 to i64*, !dbg !14756
  %120 = load i64, i64* %119, align 8, !dbg !14756
  %arrayidx917 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %call906, i64 0, i32 1, i64 %indvars.iv, !dbg !14757
  %121 = bitcast %struct.rtx_def** %arrayidx917 to i64*, !dbg !14758
  store i64 %120, i64* %121, align 8, !dbg !14758
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !14759
  br label %for.cond907, !dbg !14760, !llvm.loop !14761

if.end922.loopexit:                               ; preds = %for.cond907
  %phitmp36 = sext i32 %117 to i64, !dbg !14763
  br label %if.end922, !dbg !14763

if.end922:                                        ; preds = %if.end922.loopexit, %if.then895, %lor.lhs.false886, %cond.end831
  %icode.0 = phi i64 [ 0, %lor.lhs.false886 ], [ 0, %cond.end831 ], [ 2956, %if.then895 ], [ %phitmp36, %if.end922.loopexit ]
  %vector.1 = phi %struct.rtvec_def* [ null, %lor.lhs.false886 ], [ null, %cond.end831 ], [ null, %if.then895 ], [ %call906, %if.end922.loopexit ], !dbg !14732
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %vector.1, metadata !14314, metadata !DIExpression()), !dbg !14732
  %tobool923 = icmp eq i32 %cleared, 0, !dbg !14763
  br i1 %tobool923, label %if.else925, label %if.end1006, !dbg !14764

if.else925:                                       ; preds = %if.end922
  %bf.load926 = load i32, i32* %115, align 8, !dbg !14765
  %bf.clear927 = and i32 %bf.load926, 65535, !dbg !14765
  %cmp928 = icmp eq i32 %bf.clear927, 37, !dbg !14765
  br i1 %cmp928, label %land.lhs.true930, label %if.else938, !dbg !14766

land.lhs.true930:                                 ; preds = %if.else925
  %122 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14767
  %bf.load932 = load i64, i64* %122, align 8, !dbg !14767
  %bf.cast93519 = and i64 %bf.load932, 67108864, !dbg !14767
  %tobool936 = icmp eq i64 %bf.cast93519, 0, !dbg !14767
  br i1 %tobool936, label %if.else938, label %if.end1006, !dbg !14768

if.else938:                                       ; preds = %land.lhs.true930, %if.else925
  call void @llvm.dbg.value(metadata i64 0, metadata !14323, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 0, metadata !14327, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 0, metadata !14303, metadata !DIExpression()), !dbg !14732
  %elts944 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14770
  %123 = bitcast i32* %elts944 to %struct.VEC_constructor_elt_gc**, !dbg !14770
  br label %for.cond942, !dbg !14771

for.cond942:                                      ; preds = %for.body975, %if.else938
  %idx799.0 = phi i64 [ 0, %if.else938 ], [ %inc994, %for.body975 ], !dbg !14772
  %count939.0 = phi i64 [ 0, %if.else938 ], [ %add986, %for.body975 ], !dbg !14769
  %zero_count940.0 = phi i64 [ 0, %if.else938 ], [ %zero_count940.1, %for.body975 ], !dbg !14769
  %value941.0 = phi %union.tree_node* [ undef, %if.else938 ], [ %value941.1, %for.body975 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value941.0, metadata !14328, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %zero_count940.0, metadata !14327, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %count939.0, metadata !14323, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %idx799.0, metadata !14303, metadata !DIExpression()), !dbg !14732
  %124 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %123, align 8, !dbg !14773
  %tobool945 = icmp eq %struct.VEC_constructor_elt_gc* %124, null, !dbg !14773
  br i1 %tobool945, label %cond.end951, label %cond.true946, !dbg !14773

cond.true946:                                     ; preds = %for.cond942
  %base949 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %124, i64 0, i32 0, !dbg !14773
  br label %cond.end951, !dbg !14773

cond.end951:                                      ; preds = %for.cond942, %cond.true946
  %cond952 = phi %struct.VEC_constructor_elt_base* [ %base949, %cond.true946 ], [ null, %for.cond942 ], !dbg !14773
  %call953 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond952) #8, !dbg !14773
  %conv954 = zext i32 %call953 to i64, !dbg !14773
  %cmp955 = icmp ult i64 %idx799.0, %conv954, !dbg !14773
  br i1 %cmp955, label %cond.false958, label %cond.end972, !dbg !14773

cond.false958:                                    ; preds = %cond.end951
  %125 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %123, align 8, !dbg !14773
  %tobool961 = icmp eq %struct.VEC_constructor_elt_gc* %125, null, !dbg !14773
  br i1 %tobool961, label %cond.end967, label %cond.true962, !dbg !14773

cond.true962:                                     ; preds = %cond.false958
  %base965 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %125, i64 0, i32 0, !dbg !14773
  br label %cond.end967, !dbg !14773

cond.end967:                                      ; preds = %cond.false958, %cond.true962
  %cond968 = phi %struct.VEC_constructor_elt_base* [ %base965, %cond.true962 ], [ null, %cond.false958 ], !dbg !14773
  %conv969 = trunc i64 %idx799.0 to i32, !dbg !14773
  %call970 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond968, i32 %conv969) #8, !dbg !14773
  %value971 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call970, i64 0, i32 1, !dbg !14773
  %126 = load %union.tree_node*, %union.tree_node** %value971, align 8, !dbg !14773
  call void @llvm.dbg.value(metadata %union.tree_node* %126, metadata !14328, metadata !DIExpression()), !dbg !14769
  br label %cond.end972, !dbg !14773

cond.end972:                                      ; preds = %cond.end951, %cond.end967
  %value941.1 = phi %union.tree_node* [ %126, %cond.end967 ], [ %value941.0, %cond.end951 ]
  %cond973 = phi i1 [ true, %cond.end967 ], [ false, %cond.end951 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value941.1, metadata !14328, metadata !DIExpression()), !dbg !14769
  br i1 %cond973, label %for.body975, label %for.end995, !dbg !14771

for.body975:                                      ; preds = %cond.end972
  %type977 = getelementptr inbounds %union.tree_node, %union.tree_node* %value941.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14774
  %127 = bitcast %union.tree_node** %type977 to %struct.tree_type**, !dbg !14774
  %128 = load %struct.tree_type*, %struct.tree_type** %127, align 8, !dbg !14774
  %size979 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %128, i64 0, i32 2, !dbg !14774
  %129 = load %union.tree_node*, %union.tree_node** %size979, align 8, !dbg !14774
  %130 = load %union.tree_node*, %union.tree_node** %112, align 8, !dbg !14775
  %call982 = tail call %union.tree_node* @int_const_binop(i32 67, %union.tree_node* %129, %union.tree_node* %130, i32 0) #6, !dbg !14776
  %call983 = tail call i64 @tree_low_cst(%union.tree_node* %call982, i32 1) #6, !dbg !14777
  %sext17 = shl i64 %call983, 32, !dbg !14778
  %conv985 = ashr exact i64 %sext17, 32, !dbg !14778
  %add986 = add i64 %count939.0, %conv985, !dbg !14779
  call void @llvm.dbg.value(metadata i64 %add986, metadata !14323, metadata !DIExpression()), !dbg !14769
  %call987 = tail call fastcc i32 @mostly_zeros_p(%union.tree_node* %value941.1) #8, !dbg !14780
  %tobool988 = icmp eq i32 %call987, 0, !dbg !14780
  %add991 = select i1 %tobool988, i64 0, i64 %conv985, !dbg !14782
  %zero_count940.1 = add i64 %zero_count940.0, %add991, !dbg !14782
  call void @llvm.dbg.value(metadata i64 %zero_count940.1, metadata !14327, metadata !DIExpression()), !dbg !14769
  %inc994 = add i64 %idx799.0, 1, !dbg !14773
  call void @llvm.dbg.value(metadata i64 %inc994, metadata !14303, metadata !DIExpression()), !dbg !14732
  br label %for.cond942, !dbg !14773, !llvm.loop !14783

for.end995:                                       ; preds = %cond.end972
  %count939.0.lcssa = phi i64 [ %count939.0, %cond.end972 ], !dbg !14769
  %zero_count940.0.lcssa = phi i64 [ %zero_count940.0, %cond.end972 ], !dbg !14769
  call void @llvm.dbg.value(metadata i64 %count939.0.lcssa, metadata !14323, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %zero_count940.0.lcssa, metadata !14327, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %count939.0.lcssa, metadata !14323, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %zero_count940.0.lcssa, metadata !14327, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %count939.0.lcssa, metadata !14323, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 %zero_count940.0.lcssa, metadata !14327, metadata !DIExpression()), !dbg !14769
  %conv996 = and i64 %shl, 4294967295, !dbg !14785
  %cmp997 = icmp ult i64 %count939.0.lcssa, %conv996, !dbg !14786
  br i1 %cmp997, label %lor.end1004, label %lor.rhs999, !dbg !14787

lor.rhs999:                                       ; preds = %for.end995
  %mul1000 = shl i64 %zero_count940.0.lcssa, 2, !dbg !14788
  %mul1001 = mul i64 %count939.0.lcssa, 3, !dbg !14789
  %cmp1002 = icmp uge i64 %mul1000, %mul1001, !dbg !14790
  %phitmp = zext i1 %cmp1002 to i32, !dbg !14787
  br label %lor.end1004, !dbg !14787

lor.end1004:                                      ; preds = %lor.rhs999, %for.end995
  %131 = phi i32 [ 1, %for.end995 ], [ %phitmp, %lor.rhs999 ]
  call void @llvm.dbg.value(metadata i32 %131, metadata !14307, metadata !DIExpression()), !dbg !14732
  br label %if.end1006

if.end1006:                                       ; preds = %land.lhs.true930, %if.end922, %lor.end1004
  %need_to_clear801.1 = phi i32 [ 0, %if.end922 ], [ %131, %lor.end1004 ], [ 1, %land.lhs.true930 ], !dbg !14791
  call void @llvm.dbg.value(metadata i32 %need_to_clear801.1, metadata !14307, metadata !DIExpression()), !dbg !14732
  %tobool1007 = icmp eq i32 %need_to_clear801.1, 0, !dbg !14792
  %cmp1009 = icmp slt i64 %size, 1, !dbg !14794
  %or.cond8.not = or i1 %cmp1009, %tobool1007, !dbg !14795
  %tobool1012 = icmp ne %struct.rtvec_def* %vector.1, null, !dbg !14796
  %or.cond9 = or i1 %or.cond8.not, %tobool1012, !dbg !14795
  br i1 %or.cond9, label %if.end1029, label %if.then1013, !dbg !14795

if.then1013:                                      ; preds = %if.end1006
  %bf.load1014 = load i32, i32* %115, align 8, !dbg !14797
  %bf.clear1015 = and i32 %bf.load1014, 65535, !dbg !14797
  %cmp1016 = icmp eq i32 %bf.clear1015, 37, !dbg !14797
  br i1 %cmp1016, label %if.then1018, label %if.else1025, !dbg !14800

if.then1018:                                      ; preds = %if.then1013
  %bf.lshr1020 = lshr i32 %bf.load1014, 16, !dbg !14801
  %bf.clear1021 = and i32 %bf.lshr1020, 255, !dbg !14801
  %idxprom1022 = zext i32 %bf.clear1021 to i64, !dbg !14801
  %arrayidx1023 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom1022, !dbg !14801
  %132 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1023, align 8, !dbg !14801
  %call1024 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %132) #8, !dbg !14802
  br label %if.end1029, !dbg !14802

if.else1025:                                      ; preds = %if.then1013
  %call1026 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %size) #6, !dbg !14803
  %call1027 = tail call %struct.rtx_def* @clear_storage(%struct.rtx_def* %target, %struct.rtx_def* %call1026, i32 0) #8, !dbg !14804
  br label %if.end1029

if.end1029:                                       ; preds = %if.then1018, %if.else1025, %if.end1006
  %cleared.addr.5 = phi i32 [ %cleared, %if.end1006 ], [ 1, %if.else1025 ], [ 1, %if.then1018 ]
  call void @llvm.dbg.value(metadata i32 %cleared.addr.5, metadata !14232, metadata !DIExpression()), !dbg !14341
  %tobool1030 = icmp ne i32 %cleared.addr.5, 0, !dbg !14805
  %or.cond10 = or i1 %tobool1030, %tobool1012, !dbg !14807
  br i1 %or.cond10, label %if.end1045, label %land.lhs.true1033, !dbg !14807

land.lhs.true1033:                                ; preds = %if.end1029
  %bf.load1034 = load i32, i32* %115, align 8, !dbg !14808
  %bf.clear1035 = and i32 %bf.load1034, 65535, !dbg !14808
  %cmp1036 = icmp eq i32 %bf.clear1035, 37, !dbg !14808
  br i1 %cmp1036, label %if.then1038, label %if.end1045, !dbg !14809

if.then1038:                                      ; preds = %land.lhs.true1033
  %bf.lshr1040 = lshr i32 %bf.load1034, 16, !dbg !14810
  %bf.clear1041 = and i32 %bf.lshr1040, 255, !dbg !14810
  %idxprom1042 = zext i32 %bf.clear1041 to i64, !dbg !14810
  %arrayidx1043 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom1042, !dbg !14810
  %133 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1043, align 8, !dbg !14810
  %call1044 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %133) #8, !dbg !14811
  br label %if.end1045, !dbg !14811

if.end1045:                                       ; preds = %if.then1038, %land.lhs.true1033, %if.end1029
  %bf.load1046 = load i32, i32* %115, align 8, !dbg !14812
  %bf.clear1047 = and i32 %bf.load1046, 65535, !dbg !14812
  %cmp1048 = icmp eq i32 %bf.clear1047, 43, !dbg !14812
  br i1 %cmp1048, label %if.then1050, label %if.else1066, !dbg !14814

if.then1050:                                      ; preds = %if.end1045
  %134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !14815
  %rt_mem1054 = bitcast %union.rtunion_def* %134 to %struct.mem_attrs**, !dbg !14815
  %135 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem1054, align 8, !dbg !14815
  %cmp1055 = icmp eq %struct.mem_attrs* %135, null, !dbg !14815
  br i1 %cmp1055, label %if.end1068, label %cond.false1058, !dbg !14815

cond.false1058:                                   ; preds = %if.then1050
  %alias1063 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %135, i64 0, i32 3, !dbg !14815
  %136 = load i32, i32* %alias1063, align 8, !dbg !14815
  br label %if.end1068, !dbg !14815

if.else1066:                                      ; preds = %if.end1045
  %call1067 = tail call i32 @get_alias_set(%union.tree_node* %111) #6, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %call1067, metadata !14316, metadata !DIExpression()), !dbg !14732
  br label %if.end1068

if.end1068:                                       ; preds = %cond.false1058, %if.then1050, %if.else1066
  %alias.0 = phi i32 [ %call1067, %if.else1066 ], [ %136, %cond.false1058 ], [ 0, %if.then1050 ], !dbg !14817
  call void @llvm.dbg.value(metadata i32 %alias.0, metadata !14316, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata i64 0, metadata !14303, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata i32 0, metadata !14306, metadata !DIExpression()), !dbg !14732
  %elts1071 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14818
  %137 = bitcast i32* %elts1071 to %struct.VEC_constructor_elt_gc**, !dbg !14818
  %tobool1091 = icmp eq i32 %cleared.addr.5, 0, !dbg !14819
  %tobool1106 = icmp eq %struct.rtvec_def* %vector.1, null, !dbg !14821
  %sext = shl i64 %call807, 32, !dbg !14822
  %conv1158 = ashr exact i64 %sext, 32, !dbg !14822
  br i1 %tobool1091, label %if.end1068.split.us, label %if.end1068.if.end1068.split_crit_edge, !dbg !14823

if.end1068.if.end1068.split_crit_edge:            ; preds = %if.end1068
  br label %for.cond1069, !dbg !14823

if.end1068.split.us:                              ; preds = %if.end1068
  br label %for.cond1069.us, !dbg !14823

for.cond1069.us:                                  ; preds = %cleanup1161.us, %if.end1068.split.us
  %idx799.1.us = phi i64 [ 0, %if.end1068.split.us ], [ %inc1166.us, %cleanup1161.us ], !dbg !14824
  %i800.0.us = phi i32 [ 0, %if.end1068.split.us ], [ %conv1171.us, %cleanup1161.us ], !dbg !14824
  call void @llvm.dbg.value(metadata i32 %i800.0.us, metadata !14306, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata i64 %idx799.1.us, metadata !14303, metadata !DIExpression()), !dbg !14732
  %138 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %137, align 8, !dbg !14825
  %tobool1072.us = icmp eq %struct.VEC_constructor_elt_gc* %138, null, !dbg !14825
  br i1 %tobool1072.us, label %cond.end1078.us, label %cond.true1073.us, !dbg !14825

cond.true1073.us:                                 ; preds = %for.cond1069.us
  %base1076.us = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %138, i64 0, i32 0, !dbg !14825
  br label %cond.end1078.us, !dbg !14825

cond.end1078.us:                                  ; preds = %cond.true1073.us, %for.cond1069.us
  %cond1079.us = phi %struct.VEC_constructor_elt_base* [ %base1076.us, %cond.true1073.us ], [ null, %for.cond1069.us ], !dbg !14825
  %conv1080.us = trunc i64 %idx799.1.us to i32, !dbg !14825
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !14305, metadata !DIExpression(DW_OP_deref)), !dbg !14732
  %call1081.us = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %cond1079.us, i32 %conv1080.us, %struct.constructor_elt_d** nonnull %ce) #8, !dbg !14825
  %tobool1082.us = icmp eq i32 %call1081.us, 0, !dbg !14826
  br i1 %tobool1082.us, label %for.end1172.us-lcssa.us, label %for.body1083.us, !dbg !14826

for.body1083.us:                                  ; preds = %cond.end1078.us
  %139 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !14827
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %139, metadata !14305, metadata !DIExpression()), !dbg !14732
  %value1085.us = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %139, i64 0, i32 1, !dbg !14828
  %140 = load %union.tree_node*, %union.tree_node** %value1085.us, align 8, !dbg !14828
  call void @llvm.dbg.value(metadata %union.tree_node* %140, metadata !14337, metadata !DIExpression()), !dbg !14829
  %type1087.us = getelementptr inbounds %union.tree_node, %union.tree_node* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14830
  %141 = bitcast %union.tree_node** %type1087.us to %struct.tree_type**, !dbg !14830
  %142 = load %struct.tree_type*, %struct.tree_type** %141, align 8, !dbg !14830
  %size1089.us = getelementptr inbounds %struct.tree_type, %struct.tree_type* %142, i64 0, i32 2, !dbg !14830
  %143 = load %union.tree_node*, %union.tree_node** %size1089.us, align 8, !dbg !14830
  %call1090.us = call i64 @tree_low_cst(%union.tree_node* %143, i32 1) #6, !dbg !14831
  call void @llvm.dbg.value(metadata i64 %call1090.us, metadata !14312, metadata !DIExpression()), !dbg !14732
  %144 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !14832
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %144, metadata !14305, metadata !DIExpression()), !dbg !14732
  %index1098.us = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %144, i64 0, i32 0, !dbg !14834
  %145 = load %union.tree_node*, %union.tree_node** %index1098.us, align 8, !dbg !14834
  %tobool1099.us = icmp eq %union.tree_node* %145, null, !dbg !14832
  br i1 %tobool1099.us, label %if.else1103.us, label %if.then1100.us, !dbg !14835

if.then1100.us:                                   ; preds = %for.body1083.us
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %144, metadata !14305, metadata !DIExpression()), !dbg !14732
  %call1102.us = call i64 @tree_low_cst(%union.tree_node* nonnull %145, i32 1) #6, !dbg !14836
  call void @llvm.dbg.value(metadata i64 %call1102.us, metadata !14333, metadata !DIExpression()), !dbg !14829
  br label %if.end1105.us, !dbg !14837

if.else1103.us:                                   ; preds = %for.body1083.us
  %conv1104.us = sext i32 %i800.0.us to i64, !dbg !14838
  call void @llvm.dbg.value(metadata i64 %conv1104.us, metadata !14333, metadata !DIExpression()), !dbg !14829
  br label %if.end1105.us

if.end1105.us:                                    ; preds = %if.else1103.us, %if.then1100.us
  %eltpos.0.us = phi i64 [ %call1102.us, %if.then1100.us ], [ %conv1104.us, %if.else1103.us ], !dbg !14839
  call void @llvm.dbg.value(metadata i64 %eltpos.0.us, metadata !14333, metadata !DIExpression()), !dbg !14829
  %146 = bitcast %union.tree_node** %type1087.us to i64**, !dbg !14821
  %147 = load i64*, i64** %146, align 8, !dbg !14821
  %bf.load1111.us = load i64, i64* %147, align 8, !dbg !14821
  %148 = trunc i64 %bf.load1111.us to i32, !dbg !14821
  %bf.cast1113.us = and i32 %148, 65535, !dbg !14821
  br i1 %tobool1106, label %if.else1123.us, label %if.then1107.us, !dbg !14840

if.then1107.us:                                   ; preds = %if.end1105.us
  %cmp1114.us = icmp eq i32 %bf.cast1113.us, 14, !dbg !14841
  br i1 %cmp1114.us, label %cond.true1116.us, label %cond.end1118.us, !dbg !14841

cond.true1116.us:                                 ; preds = %if.then1107.us
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5720, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14841
  br label %cond.end1118.us, !dbg !14841

cond.end1118.us:                                  ; preds = %cond.true1116.us, %if.then1107.us
  %call1120.us = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %140) #8, !dbg !14843
  %arrayidx1122.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %vector.1, i64 0, i32 1, i64 %eltpos.0.us, !dbg !14844
  store %struct.rtx_def* %call1120.us, %struct.rtx_def** %arrayidx1122.us, align 8, !dbg !14845
  br label %cleanup1161.us, !dbg !14846

if.else1123.us:                                   ; preds = %if.end1105.us
  %cmp1130.us = icmp eq i32 %bf.cast1113.us, 14, !dbg !14847
  br i1 %cmp1130.us, label %cond.true1132.us, label %cond.end1156.us, !dbg !14848

cond.true1132.us:                                 ; preds = %if.else1123.us
  %bf.cast113816.us = and i64 %bf.load1111.us, 65535, !dbg !14849
  %cmp1139.us = icmp eq i64 %bf.cast113816.us, 14, !dbg !14849
  br i1 %cmp1139.us, label %cond.true1141.us, label %cond.false1145.us, !dbg !14849

cond.false1145.us:                                ; preds = %cond.true1132.us
  %type1148.us = bitcast i64* %147 to %struct.tree_type*, !dbg !14849
  %mode1149.us = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1148.us, i64 0, i32 6, !dbg !14849
  %bf.load1150.us = load i32, i32* %mode1149.us, align 4, !dbg !14849
  %bf.lshr1151.us = lshr i32 %bf.load1150.us, 16, !dbg !14849
  %bf.clear1152.us = and i32 %bf.lshr1151.us, 255, !dbg !14849
  br label %cond.end1156.us, !dbg !14849

cond.true1141.us:                                 ; preds = %cond.true1132.us
  %.cast.us = bitcast i64* %147 to %union.tree_node*, !dbg !14849
  %call1144.us = call i32 @vector_type_mode(%union.tree_node* %.cast.us) #6, !dbg !14849
  br label %cond.end1156.us, !dbg !14849

cond.end1156.us:                                  ; preds = %cond.true1141.us, %cond.false1145.us, %if.else1123.us
  %cond1157.us = phi i32 [ %call1144.us, %cond.true1141.us ], [ %bf.clear1152.us, %cond.false1145.us ], [ %cond824, %if.else1123.us ], !dbg !14848
  call void @llvm.dbg.value(metadata i32 %cond1157.us, metadata !14338, metadata !DIExpression()), !dbg !14822
  %mul1159.us = mul nsw i64 %eltpos.0.us, %conv1158, !dbg !14850
  call void @llvm.dbg.value(metadata i64 %mul1159.us, metadata !14313, metadata !DIExpression()), !dbg !14732
  call fastcc void @store_constructor_field(%struct.rtx_def* %target, i64 %call1090.us, i64 %mul1159.us, i32 %cond1157.us, %union.tree_node* %140, %union.tree_node* %0, i32 0, i32 %alias.0) #8, !dbg !14851
  br label %cleanup1161.us

cleanup1161.us:                                   ; preds = %cond.end1156.us, %cond.end1118.us
  %inc1166.us = add i64 %idx799.1.us, 1, !dbg !14852
  call void @llvm.dbg.value(metadata i64 %inc1166.us, metadata !14303, metadata !DIExpression()), !dbg !14732
  %div1168.us = sdiv i64 %call1090.us, %conv1158, !dbg !14853
  %149 = trunc i64 %div1168.us to i32, !dbg !14854
  %conv1171.us = add i32 %i800.0.us, %149, !dbg !14854
  call void @llvm.dbg.value(metadata i32 %conv1171.us, metadata !14306, metadata !DIExpression()), !dbg !14732
  br label %for.cond1069.us, !dbg !14855, !llvm.loop !14856

for.end1172.us-lcssa.us:                          ; preds = %cond.end1078.us
  br label %for.end1172, !dbg !14858

for.cond1069:                                     ; preds = %cleanup1161, %if.end1068.if.end1068.split_crit_edge
  %idx799.1 = phi i64 [ 0, %if.end1068.if.end1068.split_crit_edge ], [ %inc1166, %cleanup1161 ], !dbg !14824
  %i800.0 = phi i32 [ 0, %if.end1068.if.end1068.split_crit_edge ], [ %conv1171, %cleanup1161 ], !dbg !14824
  call void @llvm.dbg.value(metadata i32 %i800.0, metadata !14306, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.value(metadata i64 %idx799.1, metadata !14303, metadata !DIExpression()), !dbg !14732
  %150 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %137, align 8, !dbg !14825
  %tobool1072 = icmp eq %struct.VEC_constructor_elt_gc* %150, null, !dbg !14825
  br i1 %tobool1072, label %cond.end1078, label %cond.true1073, !dbg !14825

cond.true1073:                                    ; preds = %for.cond1069
  %base1076 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %150, i64 0, i32 0, !dbg !14825
  br label %cond.end1078, !dbg !14825

cond.end1078:                                     ; preds = %for.cond1069, %cond.true1073
  %cond1079 = phi %struct.VEC_constructor_elt_base* [ %base1076, %cond.true1073 ], [ null, %for.cond1069 ], !dbg !14825
  %conv1080 = trunc i64 %idx799.1 to i32, !dbg !14825
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !14305, metadata !DIExpression(DW_OP_deref)), !dbg !14732
  %call1081 = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %cond1079, i32 %conv1080, %struct.constructor_elt_d** nonnull %ce) #8, !dbg !14825
  %tobool1082 = icmp eq i32 %call1081, 0, !dbg !14826
  br i1 %tobool1082, label %for.end1172.us-lcssa, label %for.body1083, !dbg !14826

for.body1083:                                     ; preds = %cond.end1078
  %151 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !14827
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %151, metadata !14305, metadata !DIExpression()), !dbg !14732
  %value1085 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %151, i64 0, i32 1, !dbg !14828
  %152 = load %union.tree_node*, %union.tree_node** %value1085, align 8, !dbg !14828
  call void @llvm.dbg.value(metadata %union.tree_node* %152, metadata !14337, metadata !DIExpression()), !dbg !14829
  %type1087 = getelementptr inbounds %union.tree_node, %union.tree_node* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14830
  %153 = bitcast %union.tree_node** %type1087 to %struct.tree_type**, !dbg !14830
  %154 = load %struct.tree_type*, %struct.tree_type** %153, align 8, !dbg !14830
  %size1089 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %154, i64 0, i32 2, !dbg !14830
  %155 = load %union.tree_node*, %union.tree_node** %size1089, align 8, !dbg !14830
  %call1090 = call i64 @tree_low_cst(%union.tree_node* %155, i32 1) #6, !dbg !14831
  call void @llvm.dbg.value(metadata i64 %call1090, metadata !14312, metadata !DIExpression()), !dbg !14732
  %call1093 = call zeroext i8 @initializer_zerop(%union.tree_node* %152) #6, !dbg !14860
  %tobool1095 = icmp eq i8 %call1093, 0, !dbg !14860
  br i1 %tobool1095, label %if.end1097, label %cleanup1161, !dbg !14861

if.end1097:                                       ; preds = %for.body1083
  %156 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !14832
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %156, metadata !14305, metadata !DIExpression()), !dbg !14732
  %index1098 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %156, i64 0, i32 0, !dbg !14834
  %157 = load %union.tree_node*, %union.tree_node** %index1098, align 8, !dbg !14834
  %tobool1099 = icmp eq %union.tree_node* %157, null, !dbg !14832
  br i1 %tobool1099, label %if.else1103, label %if.then1100, !dbg !14835

if.then1100:                                      ; preds = %if.end1097
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %156, metadata !14305, metadata !DIExpression()), !dbg !14732
  %call1102 = call i64 @tree_low_cst(%union.tree_node* nonnull %157, i32 1) #6, !dbg !14836
  call void @llvm.dbg.value(metadata i64 %call1102, metadata !14333, metadata !DIExpression()), !dbg !14829
  br label %if.end1105, !dbg !14837

if.else1103:                                      ; preds = %if.end1097
  %conv1104 = sext i32 %i800.0 to i64, !dbg !14838
  call void @llvm.dbg.value(metadata i64 %conv1104, metadata !14333, metadata !DIExpression()), !dbg !14829
  br label %if.end1105

if.end1105:                                       ; preds = %if.else1103, %if.then1100
  %eltpos.0 = phi i64 [ %call1102, %if.then1100 ], [ %conv1104, %if.else1103 ], !dbg !14839
  call void @llvm.dbg.value(metadata i64 %eltpos.0, metadata !14333, metadata !DIExpression()), !dbg !14829
  %158 = bitcast %union.tree_node** %type1087 to i64**, !dbg !14821
  %159 = load i64*, i64** %158, align 8, !dbg !14821
  %bf.load1111 = load i64, i64* %159, align 8, !dbg !14821
  %160 = trunc i64 %bf.load1111 to i32, !dbg !14821
  %bf.cast1113 = and i32 %160, 65535, !dbg !14821
  br i1 %tobool1106, label %if.else1123, label %if.then1107, !dbg !14840

if.then1107:                                      ; preds = %if.end1105
  %cmp1114 = icmp eq i32 %bf.cast1113, 14, !dbg !14841
  br i1 %cmp1114, label %cond.true1116, label %cond.end1118, !dbg !14841

cond.true1116:                                    ; preds = %if.then1107
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5720, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14841
  br label %cond.end1118, !dbg !14841

cond.end1118:                                     ; preds = %if.then1107, %cond.true1116
  %call1120 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %152) #8, !dbg !14843
  %arrayidx1122 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %vector.1, i64 0, i32 1, i64 %eltpos.0, !dbg !14844
  store %struct.rtx_def* %call1120, %struct.rtx_def** %arrayidx1122, align 8, !dbg !14845
  br label %cleanup1161, !dbg !14846

if.else1123:                                      ; preds = %if.end1105
  %cmp1130 = icmp eq i32 %bf.cast1113, 14, !dbg !14847
  br i1 %cmp1130, label %cond.true1132, label %cond.end1156, !dbg !14848

cond.true1132:                                    ; preds = %if.else1123
  %bf.cast113816 = and i64 %bf.load1111, 65535, !dbg !14849
  %cmp1139 = icmp eq i64 %bf.cast113816, 14, !dbg !14849
  br i1 %cmp1139, label %cond.true1141, label %cond.false1145, !dbg !14849

cond.true1141:                                    ; preds = %cond.true1132
  %.cast = bitcast i64* %159 to %union.tree_node*, !dbg !14849
  %call1144 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !14849
  br label %cond.end1156, !dbg !14849

cond.false1145:                                   ; preds = %cond.true1132
  %type1148 = bitcast i64* %159 to %struct.tree_type*, !dbg !14849
  %mode1149 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1148, i64 0, i32 6, !dbg !14849
  %bf.load1150 = load i32, i32* %mode1149, align 4, !dbg !14849
  %bf.lshr1151 = lshr i32 %bf.load1150, 16, !dbg !14849
  %bf.clear1152 = and i32 %bf.lshr1151, 255, !dbg !14849
  br label %cond.end1156, !dbg !14849

cond.end1156:                                     ; preds = %if.else1123, %cond.true1141, %cond.false1145
  %cond1157 = phi i32 [ %call1144, %cond.true1141 ], [ %bf.clear1152, %cond.false1145 ], [ %cond824, %if.else1123 ], !dbg !14848
  call void @llvm.dbg.value(metadata i32 %cond1157, metadata !14338, metadata !DIExpression()), !dbg !14822
  %mul1159 = mul nsw i64 %eltpos.0, %conv1158, !dbg !14850
  call void @llvm.dbg.value(metadata i64 %mul1159, metadata !14313, metadata !DIExpression()), !dbg !14732
  call fastcc void @store_constructor_field(%struct.rtx_def* %target, i64 %call1090, i64 %mul1159, i32 %cond1157, %union.tree_node* %152, %union.tree_node* %0, i32 %cleared.addr.5, i32 %alias.0) #8, !dbg !14851
  br label %cleanup1161

cleanup1161:                                      ; preds = %for.body1083, %cond.end1118, %cond.end1156
  %inc1166 = add i64 %idx799.1, 1, !dbg !14852
  call void @llvm.dbg.value(metadata i64 %inc1166, metadata !14303, metadata !DIExpression()), !dbg !14732
  %div1168 = sdiv i64 %call1090, %conv1158, !dbg !14853
  %161 = trunc i64 %div1168 to i32, !dbg !14854
  %conv1171 = add i32 %i800.0, %161, !dbg !14854
  call void @llvm.dbg.value(metadata i32 %conv1171, metadata !14306, metadata !DIExpression()), !dbg !14732
  br label %for.cond1069, !dbg !14855, !llvm.loop !14856

for.end1172.us-lcssa:                             ; preds = %cond.end1078
  br label %for.end1172, !dbg !14858

for.end1172:                                      ; preds = %for.end1172.us-lcssa.us, %for.end1172.us-lcssa
  br i1 %tobool1106, label %if.end1183, label %if.then1174, !dbg !14862

if.then1174:                                      ; preds = %for.end1172
  %genfun = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %icode.0, i32 2, !dbg !14863
  %162 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !14863
  %bf.load1177 = load i32, i32* %115, align 8, !dbg !14864
  %bf.lshr1178 = lshr i32 %bf.load1177, 16, !dbg !14864
  %bf.clear1179 = and i32 %bf.lshr1178, 255, !dbg !14864
  %call1180 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 %bf.clear1179, %struct.rtvec_def* nonnull %vector.1) #6, !dbg !14864
  %call1181 = call %struct.rtx_def* (%struct.rtx_def*, ...) %162(%struct.rtx_def* %target, %struct.rtx_def* %call1180) #6, !dbg !14863
  %call1182 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1181) #6, !dbg !14865
  br label %if.end1183, !dbg !14865

if.end1183:                                       ; preds = %for.end1172, %if.then1174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7, !dbg !14866
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 5745, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14867
  br label %sw.epilog, !dbg !14868

sw.epilog.loopexit:                               ; preds = %cond.end128
  br label %sw.epilog, !dbg !14869

sw.epilog.loopexit35:                             ; preds = %cond.end489
  br label %sw.epilog, !dbg !14869

sw.epilog:                                        ; preds = %sw.epilog.loopexit35, %sw.epilog.loopexit, %sw.default, %if.end1183
  ret void, !dbg !14869
}

declare dso_local i32 @fields_length(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @bit_position(%union.tree_node*) local_unnamed_addr #1

declare dso_local i64 @int_bit_position(%union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @store_constructor_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %union.tree_node* %exp, %union.tree_node* %type, i32 %cleared, i32 %alias_set) unnamed_addr #4 !dbg !14870 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !14874, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata i64 %bitsize, metadata !14875, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata i64 %bitpos, metadata !14876, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata i32 %mode, metadata !14877, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !14878, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !14879, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata i32 %cleared, metadata !14880, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata i32 %alias_set, metadata !14881, metadata !DIExpression()), !dbg !14882
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14883
  %bf.load = load i64, i64* %0, align 8, !dbg !14883
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !14885
  %cmp = icmp eq i64 %bf.cast3, 51, !dbg !14885
  %rem4 = and i64 %bitpos, 7, !dbg !14886
  %cmp1 = icmp eq i64 %rem4, 0, !dbg !14886
  %or.cond = and i1 %cmp, %cmp1, !dbg !14887
  %cmp3 = icmp ne i64 %bitsize, 0, !dbg !14888
  %or.cond1 = and i1 %or.cond, %cmp3, !dbg !14887
  %rem5 = and i64 %bitsize, 7, !dbg !14889
  %cmp6 = icmp eq i64 %rem5, 0, !dbg !14890
  %or.cond2 = and i1 %or.cond1, %cmp6, !dbg !14887
  br i1 %or.cond2, label %land.lhs.true7, label %if.else, !dbg !14887

land.lhs.true7:                                   ; preds = %entry
  %cmp8 = icmp eq i64 %bitpos, 0, !dbg !14891
  br i1 %cmp8, label %land.lhs.true7.if.then_crit_edge, label %lor.lhs.false, !dbg !14892

land.lhs.true7.if.then_crit_edge:                 ; preds = %land.lhs.true7
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14893
  %bf.load12.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !14896
  br label %if.then, !dbg !14892

lor.lhs.false:                                    ; preds = %land.lhs.true7
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !14897
  %bf.load9 = load i32, i32* %1, align 8, !dbg !14897
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !14897
  %cmp11 = icmp eq i32 %bf.clear10, 43, !dbg !14897
  br i1 %cmp11, label %if.then, label %if.else, !dbg !14898

if.then:                                          ; preds = %land.lhs.true7.if.then_crit_edge, %lor.lhs.false
  %bf.load19 = phi i32 [ %bf.load12.pre, %land.lhs.true7.if.then_crit_edge ], [ %bf.load9, %lor.lhs.false ], !dbg !14896
  %bf.clear13 = and i32 %bf.load19, 65535, !dbg !14896
  %cmp14 = icmp eq i32 %bf.clear13, 43, !dbg !14896
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !14899

if.then15:                                        ; preds = %if.then
  %bf.clear17 = and i32 %bf.load19, 16711680, !dbg !14900
  %cmp18 = icmp eq i32 %bf.clear17, 65536, !dbg !14900
  br i1 %cmp18, label %lor.end, label %lor.rhs, !dbg !14900

lor.rhs:                                          ; preds = %if.then15
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !14900
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !14900
  %call = tail call i32 @get_mode_alignment(i32 %bf.clear21) #6, !dbg !14900
  %conv = zext i32 %call to i64, !dbg !14900
  %rem22 = srem i64 %bitpos, %conv, !dbg !14900
  %cmp23 = icmp ne i64 %rem22, 0, !dbg !14900
  %phitmp5 = zext i1 %cmp23 to i32, !dbg !14900
  br label %lor.end, !dbg !14900

lor.end:                                          ; preds = %lor.rhs, %if.then15
  %2 = phi i32 [ 1, %if.then15 ], [ %phitmp5, %lor.rhs ]
  %div = sdiv i64 %bitpos, 8, !dbg !14900
  %call25 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %target, i32 %2, i64 %div, i32 1, i32 1) #6, !dbg !14900
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !14874, metadata !DIExpression()), !dbg !14882
  %.phi.trans.insert7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call25, i64 0, i32 0, !dbg !14901
  %bf.load26.pre = load i32, i32* %.phi.trans.insert7, align 8, !dbg !14903
  br label %if.end, !dbg !14904

if.end:                                           ; preds = %lor.end, %if.then
  %bf.load31 = phi i32 [ %bf.load26.pre, %lor.end ], [ %bf.load19, %if.then ], !dbg !14903
  %target.addr.0 = phi %struct.rtx_def* [ %call25, %lor.end ], [ %target, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.0, metadata !14874, metadata !DIExpression()), !dbg !14882
  %bf.clear27 = and i32 %bf.load31, 65535, !dbg !14903
  %cmp28 = icmp eq i32 %bf.clear27, 43, !dbg !14903
  br i1 %cmp28, label %land.lhs.true30, label %if.end46, !dbg !14905

land.lhs.true30:                                  ; preds = %if.end
  %bf.clear33 = and i32 %bf.load31, 16777216, !dbg !14906
  %tobool = icmp eq i32 %bf.clear33, 0, !dbg !14906
  br i1 %tobool, label %land.lhs.true34, label %if.end46, !dbg !14907

land.lhs.true34:                                  ; preds = %land.lhs.true30
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !14908
  %rt_mem = bitcast %union.rtunion_def* %3 to %struct.mem_attrs**, !dbg !14908
  %4 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !14908
  %cmp35 = icmp eq %struct.mem_attrs* %4, null, !dbg !14908
  br i1 %cmp35, label %cond.end, label %cond.false, !dbg !14908

cond.false:                                       ; preds = %land.lhs.true34
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %4, i64 0, i32 3, !dbg !14908
  %5 = load i32, i32* %alias, align 8, !dbg !14908
  %phitmp = icmp ne i32 %5, 0, !dbg !14908
  br label %cond.end, !dbg !14908

cond.end:                                         ; preds = %land.lhs.true34, %cond.false
  %cond41 = phi i1 [ %phitmp, %cond.false ], [ false, %land.lhs.true34 ]
  br i1 %cond41, label %if.then44, label %if.end46, !dbg !14909

if.then44:                                        ; preds = %cond.end
  %call45 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %target.addr.0) #6, !dbg !14910
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !14874, metadata !DIExpression()), !dbg !14882
  tail call void @set_mem_alias_set(%struct.rtx_def* %call45, i32 %alias_set) #6, !dbg !14912
  br label %if.end46, !dbg !14913

if.end46:                                         ; preds = %land.lhs.true30, %if.then44, %cond.end, %if.end
  %target.addr.1 = phi %struct.rtx_def* [ %target.addr.0, %land.lhs.true30 ], [ %call45, %if.then44 ], [ %target.addr.0, %cond.end ], [ %target.addr.0, %if.end ], !dbg !14914
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.addr.1, metadata !14874, metadata !DIExpression()), !dbg !14882
  %div47 = lshr i64 %bitsize, 3, !dbg !14915
  tail call fastcc void @store_constructor(%union.tree_node* %exp, %struct.rtx_def* %target.addr.1, i32 %cleared, i64 %div47) #8, !dbg !14916
  br label %if.end49, !dbg !14917

if.else:                                          ; preds = %lor.lhs.false, %entry
  %call48 = tail call fastcc %struct.rtx_def* @store_field(%struct.rtx_def* %target, i64 %bitsize, i64 %bitpos, i32 %mode, %union.tree_node* %exp, %union.tree_node* %type, i32 %alias_set, i8 zeroext 0) #8, !dbg !14918
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.end46
  ret void, !dbg !14919
}

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @jumpif(%union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @int_const_binop(i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr_addr_expr_1(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, i8 zeroext %as) unnamed_addr #4 !dbg !14920 {
entry:
  %offset = alloca %union.tree_node*, align 8
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %volatilep = alloca i32, align 4
  %unsignedp = alloca i32, align 4
  %mode1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !14924, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !14925, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata i32 %tmode, metadata !14926, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !14927, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata i8 %as, metadata !14928, metadata !DIExpression()), !dbg !14941
  %0 = bitcast %union.tree_node** %offset to i8*, !dbg !14942
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !14942
  %1 = bitcast i64* %bitsize to i8*, !dbg !14943
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !14943
  %2 = bitcast i64* %bitpos to i8*, !dbg !14943
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !14943
  %3 = bitcast i32* %volatilep to i8*, !dbg !14944
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !14944
  %4 = bitcast i32* %unsignedp to i8*, !dbg !14944
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7, !dbg !14944
  %5 = bitcast i32* %mode1 to i8*, !dbg !14945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7, !dbg !14945
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14946
  %bf.load = load i64, i64* %6, align 8, !dbg !14946
  %bf.cast = and i64 %bf.load, 65535, !dbg !14946
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !14946
  %7 = load i32, i32* %arrayidx, align 4, !dbg !14946
  %cmp = icmp eq i32 %7, 1, !dbg !14946
  br i1 %cmp, label %if.then, label %if.end, !dbg !14948

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.rtx_def* @expand_expr_constant(%union.tree_node* %exp, i32 0, i32 %modifier) #8, !dbg !14949
  %arrayidx1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !14949
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**, !dbg !14949
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !14949
  br label %cleanup, !dbg !14950

if.end:                                           ; preds = %entry
  %9 = trunc i64 %bf.load to i16, !dbg !14951
  switch i16 %9, label %sw.default [
    i16 47, label %sw.bb
    i16 33, label %sw.bb9
    i16 43, label %sw.bb15
    i16 44, label %sw.bb19
    i16 32, label %sw.bb41
  ], !dbg !14952

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14953
  %10 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !14953
  %call8 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %10, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) #8, !dbg !14955
  br label %cleanup, !dbg !14956

sw.bb9:                                           ; preds = %if.end
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !14957
  %11 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !14957
  %call10 = tail call fastcc %struct.rtx_def* @expand_expr_constant(%union.tree_node* %11, i32 0, i32 %modifier) #8, !dbg !14957
  %arrayidx13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !14957
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !14957
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !14957
  br label %cleanup, !dbg !14958

sw.bb15:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !14932, metadata !DIExpression()), !dbg !14941
  store %union.tree_node* null, %union.tree_node** %offset, align 8, !dbg !14959
  call void @llvm.dbg.value(metadata i64 0, metadata !14934, metadata !DIExpression()), !dbg !14941
  store i64 0, i64* %bitpos, align 8, !dbg !14960
  %operands17 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14961
  %13 = load %union.tree_node*, %union.tree_node** %operands17, align 8, !dbg !14961
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !14931, metadata !DIExpression()), !dbg !14941
  br label %sw.epilog, !dbg !14962

sw.bb19:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !14932, metadata !DIExpression()), !dbg !14941
  store %union.tree_node* null, %union.tree_node** %offset, align 8, !dbg !14963
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14964
  %14 = bitcast %union.tree_node** %type to i64**, !dbg !14964
  %15 = load i64*, i64** %14, align 8, !dbg !14964
  %bf.load21 = load i64, i64* %15, align 8, !dbg !14964
  %bf.cast237 = and i64 %bf.load21, 65535, !dbg !14964
  %cmp24 = icmp eq i64 %bf.cast237, 14, !dbg !14964
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !14964

cond.true:                                        ; preds = %sw.bb19
  %.cast = bitcast i64* %15 to %union.tree_node*, !dbg !14964
  %call27 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !14964
  br label %cond.end, !dbg !14964

cond.false:                                       ; preds = %sw.bb19
  %type30 = bitcast i64* %15 to %struct.tree_type*, !dbg !14964
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i64 0, i32 6, !dbg !14964
  %bf.load31 = load i32, i32* %mode, align 4, !dbg !14964
  %bf.lshr = lshr i32 %bf.load31, 16, !dbg !14964
  %bf.clear32 = and i32 %bf.lshr, 255, !dbg !14964
  br label %cond.end, !dbg !14964

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call27, %cond.true ], [ %bf.clear32, %cond.false ], !dbg !14964
  %idxprom33 = zext i32 %cond to i64, !dbg !14964
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom33, !dbg !14964
  %16 = load i8, i8* %arrayidx34, align 1, !dbg !14964
  %conv35 = zext i8 %16 to i64, !dbg !14964
  %mul = shl nuw nsw i64 %conv35, 3, !dbg !14964
  call void @llvm.dbg.value(metadata i64 %mul, metadata !14934, metadata !DIExpression()), !dbg !14941
  store i64 %mul, i64* %bitpos, align 8, !dbg !14965
  %operands39 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14966
  %17 = load %union.tree_node*, %union.tree_node** %operands39, align 8, !dbg !14966
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !14931, metadata !DIExpression()), !dbg !14941
  br label %sw.epilog, !dbg !14967

sw.bb41:                                          ; preds = %if.end
  %18 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !14968
  %tobool = icmp eq i8 %18, 0, !dbg !14970
  br i1 %tobool, label %land.lhs.true, label %sw.default, !dbg !14971

land.lhs.true:                                    ; preds = %sw.bb41
  %cmp46 = icmp eq i64 %bf.cast, 32, !dbg !14972
  br i1 %cmp46, label %land.lhs.true48, label %sw.default, !dbg !14973

land.lhs.true48:                                  ; preds = %land.lhs.true
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !14974
  %19 = bitcast i24* %tls_model to i32*, !dbg !14974
  %bf.load49 = load i32, i32* %19, align 8, !dbg !14974
  %bf.clear51 = and i32 %bf.load49, 49152, !dbg !14974
  %cmp52 = icmp eq i32 %bf.clear51, 0, !dbg !14974
  br i1 %cmp52, label %sw.default, label %if.then54, !dbg !14975

if.then54:                                        ; preds = %land.lhs.true48
  %call55 = tail call fastcc %union.tree_node* @emutls_var_address(%union.tree_node* %exp) #8, !dbg !14976
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !14924, metadata !DIExpression()), !dbg !14941
  %call56 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call55, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) #8, !dbg !14978
  br label %cleanup, !dbg !14979

sw.default:                                       ; preds = %land.lhs.true48, %sw.bb41, %land.lhs.true, %if.end
  %bf.cast612 = and i64 %bf.load, 65532, !dbg !14980
  %cmp62 = icmp ult i64 %bf.cast612, 188, !dbg !14980
  br i1 %cmp62, label %cond.end66, label %cond.true64, !dbg !14980

cond.true64:                                      ; preds = %sw.default
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6889, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14980
  %bf.load69.pre = load i64, i64* %6, align 8, !dbg !14981
  %.pre10 = and i64 %bf.load69.pre, 65535, !dbg !14981
  br label %cond.end66, !dbg !14980

cond.end66:                                       ; preds = %sw.default, %cond.true64
  %bf.cast71.pre-phi = phi i64 [ %bf.cast, %sw.default ], [ %.pre10, %cond.true64 ], !dbg !14981
  %arrayidx73 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast71.pre-phi, !dbg !14981
  %20 = load i32, i32* %arrayidx73, align 4, !dbg !14981
  %cmp74 = icmp eq i32 %20, 3, !dbg !14981
  br i1 %cmp74, label %if.then89, label %lor.lhs.false, !dbg !14983

lor.lhs.false:                                    ; preds = %cond.end66
  %cmp80 = icmp eq i64 %bf.cast71.pre-phi, 51, !dbg !14984
  br i1 %cmp80, label %if.then89, label %lor.lhs.false82, !dbg !14985

lor.lhs.false82:                                  ; preds = %lor.lhs.false
  %cmp87 = icmp eq i64 %bf.cast71.pre-phi, 119, !dbg !14986
  br i1 %cmp87, label %if.then89, label %if.end136, !dbg !14987

if.then89:                                        ; preds = %lor.lhs.false82, %lor.lhs.false, %cond.end66
  %cmp90 = icmp eq i32 %modifier, 4, !dbg !14988
  %cond92 = select i1 %cmp90, i32 4, i32 3, !dbg !14990
  %call93 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %cond92) #8, !dbg !14991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call93, metadata !14929, metadata !DIExpression()), !dbg !14941
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call93, i64 0, i32 0, !dbg !14992
  %bf.load94 = load i32, i32* %21, align 8, !dbg !14992
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !14992
  %cmp96 = icmp eq i32 %bf.clear95, 43, !dbg !14992
  br i1 %cmp96, label %cond.end100, label %cond.true98, !dbg !14992

cond.true98:                                      ; preds = %if.then89
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6901, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !14992
  br label %cond.end100, !dbg !14992

cond.end100:                                      ; preds = %if.then89, %cond.true98
  %arrayidx104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call93, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !14993
  %rt_rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**, !dbg !14993
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx105, align 8, !dbg !14993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !14929, metadata !DIExpression()), !dbg !14941
  %bf.load107 = load i64, i64* %6, align 8, !dbg !14994
  %bf.cast109 = and i64 %bf.load107, 65535, !dbg !14994
  %arrayidx111 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast109, !dbg !14994
  %23 = load i32, i32* %arrayidx111, align 4, !dbg !14994
  %cmp112 = icmp eq i32 %23, 3, !dbg !14994
  br i1 %cmp112, label %land.lhs.true114, label %if.end127, !dbg !14996

land.lhs.true114:                                 ; preds = %cond.end100
  %24 = and i64 %bf.load107, 16777216, !dbg !14997
  %cmp121 = icmp eq i64 %24, 0, !dbg !14997
  br i1 %cmp121, label %if.end127, label %if.then123, !dbg !14998

if.then123:                                       ; preds = %land.lhs.true114
  tail call void @assemble_external(%union.tree_node* %exp) #6, !dbg !14999
  %bf.load125 = load i64, i64* %6, align 8, !dbg !15001
  %bf.set = or i64 %bf.load125, 16777216, !dbg !15001
  store i64 %bf.set, i64* %6, align 8, !dbg !15001
  br label %if.end127, !dbg !15002

if.end127:                                        ; preds = %land.lhs.true114, %if.then123, %cond.end100
  %modifier.off = add i32 %modifier, -3, !dbg !15003
  %switch = icmp ult i32 %modifier.off, 2, !dbg !15003
  br i1 %switch, label %cleanup, label %if.then133, !dbg !15003

if.then133:                                       ; preds = %if.end127
  %call134 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %22, %struct.rtx_def* %target) #8, !dbg !15005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call134, metadata !14929, metadata !DIExpression()), !dbg !14941
  br label %cleanup, !dbg !15006

if.end136:                                        ; preds = %lor.lhs.false82
  call void @llvm.dbg.value(metadata %union.tree_node** %offset, metadata !14932, metadata !DIExpression(DW_OP_deref)), !dbg !14941
  call void @llvm.dbg.value(metadata i64* %bitsize, metadata !14933, metadata !DIExpression(DW_OP_deref)), !dbg !14941
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !14934, metadata !DIExpression(DW_OP_deref)), !dbg !14941
  call void @llvm.dbg.value(metadata i32* %volatilep, metadata !14935, metadata !DIExpression(DW_OP_deref)), !dbg !14941
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !14936, metadata !DIExpression(DW_OP_deref)), !dbg !14941
  call void @llvm.dbg.value(metadata i32* %mode1, metadata !14937, metadata !DIExpression(DW_OP_deref)), !dbg !14941
  %call137 = call %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* nonnull %bitsize, i64* nonnull %bitpos, %union.tree_node** nonnull %offset, i32* nonnull %mode1, i32* nonnull %unsignedp, i32* nonnull %volatilep, i8 zeroext 0) #8, !dbg !15007
  call void @llvm.dbg.value(metadata %union.tree_node* %call137, metadata !14931, metadata !DIExpression()), !dbg !14941
  br label %sw.epilog, !dbg !15008

sw.epilog:                                        ; preds = %if.end136, %cond.end, %sw.bb15
  %inner.0 = phi %union.tree_node* [ %call137, %if.end136 ], [ %17, %cond.end ], [ %13, %sw.bb15 ], !dbg !15009
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !14931, metadata !DIExpression()), !dbg !14941
  %cmp138 = icmp eq %union.tree_node* %inner.0, %exp, !dbg !15010
  br i1 %cmp138, label %cond.true140, label %cond.end142, !dbg !15010

cond.true140:                                     ; preds = %sw.epilog
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6928, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !15010
  br label %cond.end142, !dbg !15010

cond.end142:                                      ; preds = %sw.epilog, %cond.true140
  %25 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !15011
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !14932, metadata !DIExpression()), !dbg !14941
  %tobool144 = icmp ne %union.tree_node* %25, null, !dbg !15011
  %26 = load i64, i64* %bitpos, align 8, !dbg !15012
  call void @llvm.dbg.value(metadata i64 %26, metadata !14934, metadata !DIExpression()), !dbg !14941
  %tobool146 = icmp ne i64 %26, 0, !dbg !15012
  %or.cond = or i1 %tobool144, %tobool146, !dbg !15013
  %cond150 = select i1 %or.cond, %struct.rtx_def* null, %struct.rtx_def* %target, !dbg !15013
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond150, metadata !14930, metadata !DIExpression()), !dbg !14941
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !15014
  %bf.load152 = load i64, i64* %27, align 8, !dbg !15014
  %bf.cast154 = and i64 %bf.load152, 65535, !dbg !15014
  %arrayidx156 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast154, !dbg !15014
  %28 = load i32, i32* %arrayidx156, align 4, !dbg !15014
  %cmp157 = icmp eq i32 %28, 1, !dbg !15014
  br i1 %cmp157, label %land.lhs.true159, label %if.end191, !dbg !15016

land.lhs.true159:                                 ; preds = %cond.end142
  %type161 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !15017
  %29 = bitcast %union.tree_node** %type161 to %struct.tree_type**, !dbg !15017
  %30 = load %struct.tree_type*, %struct.tree_type** %29, align 8, !dbg !15017
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %30, i64 0, i32 7, !dbg !15017
  %31 = load i32, i32* %align, align 8, !dbg !15017
  %type164 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !15018
  %32 = bitcast %union.tree_node** %type164 to %struct.tree_type**, !dbg !15018
  %33 = load %struct.tree_type*, %struct.tree_type** %32, align 8, !dbg !15018
  %align166 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 7, !dbg !15018
  %34 = load i32, i32* %align166, align 8, !dbg !15018
  %cmp167 = icmp ult i32 %31, %34, !dbg !15019
  br i1 %cmp167, label %if.then169, label %if.end191, !dbg !15020

if.then169:                                       ; preds = %land.lhs.true159
  %call170 = call %union.tree_node* @copy_node_stat(%union.tree_node* %inner.0) #6, !dbg !15021
  call void @llvm.dbg.value(metadata %union.tree_node* %call170, metadata !14931, metadata !DIExpression()), !dbg !14941
  %type172 = getelementptr inbounds %union.tree_node, %union.tree_node* %call170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !15023
  %35 = load %union.tree_node*, %union.tree_node** %type172, align 8, !dbg !15023
  %call173 = call %union.tree_node* @copy_node_stat(%union.tree_node* %35) #6, !dbg !15023
  store %union.tree_node* %call173, %union.tree_node** %type172, align 8, !dbg !15024
  %36 = load %struct.tree_type*, %struct.tree_type** %32, align 8, !dbg !15025
  %align179 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %36, i64 0, i32 7, !dbg !15025
  %37 = load i32, i32* %align179, align 8, !dbg !15025
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !15026
  store i32 %37, i32* %38, align 8, !dbg !15027
  %39 = bitcast %union.tree_node** %type172 to %struct.tree_common**, !dbg !15028
  %40 = load %struct.tree_common*, %struct.tree_common** %39, align 8, !dbg !15028
  %41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %40, i64 0, i32 0, i32 0, !dbg !15028
  %bf.load188 = load i64, i64* %41, align 8, !dbg !15029
  %bf.set190 = or i64 %bf.load188, 4398046511104, !dbg !15029
  store i64 %bf.set190, i64* %41, align 8, !dbg !15029
  br label %if.end191, !dbg !15030

if.end191:                                        ; preds = %if.then169, %land.lhs.true159, %cond.end142
  %inner.1 = phi %union.tree_node* [ %call170, %if.then169 ], [ %inner.0, %land.lhs.true159 ], [ %inner.0, %cond.end142 ], !dbg !14941
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1, metadata !14931, metadata !DIExpression()), !dbg !14941
  %call192 = call fastcc %struct.rtx_def* @expand_expr_addr_expr_1(%union.tree_node* %inner.1, %struct.rtx_def* %cond150, i32 %tmode, i32 %modifier, i8 zeroext %as) #8, !dbg !15031
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call192, metadata !14929, metadata !DIExpression()), !dbg !14941
  %42 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !15032
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !14932, metadata !DIExpression()), !dbg !14941
  %tobool193 = icmp eq %union.tree_node* %42, null, !dbg !15032
  br i1 %tobool193, label %if.end220, label %if.then194, !dbg !15033

if.then194:                                       ; preds = %if.end191
  %cmp195 = icmp eq i32 %modifier, 0, !dbg !15034
  br i1 %cmp195, label %if.end199, label %if.then197, !dbg !15036

if.then197:                                       ; preds = %if.then194
  %call198 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call192, %struct.rtx_def* null) #8, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call198, metadata !14929, metadata !DIExpression()), !dbg !14941
  %.pre = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !15038
  br label %if.end199, !dbg !15039

if.end199:                                        ; preds = %if.then194, %if.then197
  %43 = phi %union.tree_node* [ %.pre, %if.then197 ], [ %42, %if.then194 ], !dbg !15038
  %result.1 = phi %struct.rtx_def* [ %call198, %if.then197 ], [ %call192, %if.then194 ], !dbg !14941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result.1, metadata !14929, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !14932, metadata !DIExpression()), !dbg !14941
  %cmp200 = icmp eq i32 %modifier, 4, !dbg !15040
  %cond202 = select i1 %cmp200, i32 4, i32 0, !dbg !15041
  %call203 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %43, %struct.rtx_def* null, i32 %tmode, i32 %cond202) #8, !dbg !15042
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call203, metadata !14938, metadata !DIExpression()), !dbg !15043
  %call204 = call %struct.rtx_def* @convert_memory_address_addr_space(i32 %tmode, %struct.rtx_def* %result.1, i8 zeroext %as) #6, !dbg !15044
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call204, metadata !14929, metadata !DIExpression()), !dbg !14941
  %call205 = call %struct.rtx_def* @convert_memory_address_addr_space(i32 %tmode, %struct.rtx_def* %call203, i8 zeroext %as) #6, !dbg !15045
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call205, metadata !14938, metadata !DIExpression()), !dbg !15043
  switch i32 %modifier, label %if.else [
    i32 2, label %if.then211
    i32 4, label %if.then211
  ], !dbg !15046

if.then211:                                       ; preds = %if.end199, %if.end199
  %call212 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %tmode, %struct.rtx_def* %call204, %struct.rtx_def* %call205) #6, !dbg !15048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call212, metadata !14929, metadata !DIExpression()), !dbg !14941
  br label %if.end220, !dbg !15049

if.else:                                          ; preds = %if.end199
  %44 = load i64, i64* %bitpos, align 8, !dbg !15050
  call void @llvm.dbg.value(metadata i64 %44, metadata !14934, metadata !DIExpression()), !dbg !14941
  %tobool213 = icmp eq i64 %44, 0, !dbg !15050
  %.target = select i1 %tobool213, %struct.rtx_def* %target, %struct.rtx_def* null, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.target, metadata !14930, metadata !DIExpression()), !dbg !14941
  %call218 = call %struct.rtx_def* @expand_simple_binop(i32 %tmode, i32 49, %struct.rtx_def* %call204, %struct.rtx_def* %call205, %struct.rtx_def* %.target, i32 1, i32 3) #6, !dbg !15052
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call218, metadata !14929, metadata !DIExpression()), !dbg !14941
  br label %if.end220

if.end220:                                        ; preds = %if.end191, %if.then211, %if.else
  %result.3 = phi %struct.rtx_def* [ %call192, %if.end191 ], [ %call212, %if.then211 ], [ %call218, %if.else ], !dbg !14941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result.3, metadata !14929, metadata !DIExpression()), !dbg !14941
  %45 = load i64, i64* %bitpos, align 8, !dbg !15053
  call void @llvm.dbg.value(metadata i64 %45, metadata !14934, metadata !DIExpression()), !dbg !14941
  %tobool221 = icmp eq i64 %45, 0, !dbg !15053
  br i1 %tobool221, label %cleanup, label %if.then222, !dbg !15055

if.then222:                                       ; preds = %if.end220
  call void @llvm.dbg.value(metadata i64 %45, metadata !14934, metadata !DIExpression()), !dbg !14941
  %rem5 = and i64 %45, 7, !dbg !15056
  %cmp223 = icmp eq i64 %rem5, 0, !dbg !15056
  br i1 %cmp223, label %cond.end227, label %cond.true225, !dbg !15056

cond.true225:                                     ; preds = %if.then222
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6970, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !15056
  %.pre9 = load i64, i64* %bitpos, align 8, !dbg !15058
  br label %cond.end227, !dbg !15056

cond.end227:                                      ; preds = %if.then222, %cond.true225
  %46 = phi i64 [ %45, %if.then222 ], [ %.pre9, %cond.true225 ], !dbg !15058
  call void @llvm.dbg.value(metadata i64 %46, metadata !14934, metadata !DIExpression()), !dbg !14941
  %div = sdiv i64 %46, 8, !dbg !15059
  %call229 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %result.3, i64 %div) #6, !dbg !15060
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call229, metadata !14929, metadata !DIExpression()), !dbg !14941
  %cmp230 = icmp ult i32 %modifier, 2, !dbg !15061
  br i1 %cmp230, label %if.then232, label %cleanup, !dbg !15063

if.then232:                                       ; preds = %cond.end227
  %call233 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call229, %struct.rtx_def* %target) #8, !dbg !15064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call233, metadata !14929, metadata !DIExpression()), !dbg !14941
  br label %cleanup, !dbg !15065

cleanup:                                          ; preds = %if.end220, %if.end127, %if.then232, %cond.end227, %if.then133, %if.then54, %sw.bb9, %sw.bb, %if.then
  %retval.0 = phi %struct.rtx_def* [ %8, %if.then ], [ %call56, %if.then54 ], [ %12, %sw.bb9 ], [ %call8, %sw.bb ], [ %call134, %if.then133 ], [ %22, %if.end127 ], [ %result.3, %if.end220 ], [ %call233, %if.then232 ], [ %call229, %cond.end227 ], !dbg !14941
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7, !dbg !15066
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7, !dbg !15066
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !15066
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !15066
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !15066
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !15066
  ret %struct.rtx_def* %retval.0, !dbg !15066
}

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build_int_cst_type(%union.tree_node*, i64) local_unnamed_addr #1

declare dso_local i32 @integer_all_onesp(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #1

declare dso_local %union.tree_node* @fold_single_bit_test(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_const_mem(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_tablejump(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32, %struct.rtvec_def*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3710, !3711, !3712}
!llvm.ident = !{!3713}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "direct_store", scope: !2, file: !3, line: 168, type: !3632, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !2172, globals: !3613, nameTableKind: None)
!3 = !DIFile(filename: "expr.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !336, !342, !347, !352, !370, !377, !384, !1876, !1898, !2041, !2048, !2082, !2087, !2096, !2101, !2108, !2146}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !142, line: 39, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335}
!144 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!173 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!174 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!175 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!176 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!177 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!178 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!179 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!180 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!181 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!182 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!183 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!184 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!185 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!186 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!187 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!188 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!189 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!190 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!191 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!192 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!193 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!194 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!195 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!196 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!197 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!198 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!199 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!200 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!201 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!202 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!203 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!204 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!205 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!206 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!207 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!208 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!209 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!210 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!211 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!212 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!213 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!214 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!215 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!216 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!217 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!218 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!219 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!220 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!221 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!222 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!223 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!224 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!225 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!226 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!227 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!228 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!229 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!230 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!233 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!239 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!240 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!241 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!242 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!243 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!244 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!245 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!246 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!247 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!248 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!249 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!250 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!251 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!252 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!253 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!254 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!255 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!256 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!257 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!259 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!260 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!261 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!262 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!263 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!264 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!265 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!266 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!267 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!268 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!269 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!270 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!271 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!272 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!273 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!274 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!275 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!276 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!277 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!278 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!279 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!280 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!281 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!282 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!283 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!284 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!285 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!286 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!287 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!288 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!289 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!290 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!291 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!292 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!293 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!294 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!295 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!296 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!307 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!309 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!310 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!311 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!312 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!313 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!329 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!330 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!331 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!332 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!333 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!334 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!335 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !337, line: 363, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !337, line: 355, baseType: !7, size: 32, elements: !343)
!343 = !{!344, !345, !346}
!344 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !348, line: 474, baseType: !7, size: 32, elements: !349)
!348 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!349 = !{!350, !351}
!350 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !142, line: 280, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!354 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !142, line: 1817, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !142, line: 1805, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_code", file: !385, line: 7, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./insn-codes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875}
!387 = !DIEnumerator(name: "CODE_FOR_x86_fnstsw_1", value: 30, isUnsigned: true)
!388 = !DIEnumerator(name: "CODE_FOR_x86_sahf_1", value: 31, isUnsigned: true)
!389 = !DIEnumerator(name: "CODE_FOR_popsi1", value: 41, isUnsigned: true)
!390 = !DIEnumerator(name: "CODE_FOR_movsi_insv_1", value: 63, isUnsigned: true)
!391 = !DIEnumerator(name: "CODE_FOR_swapxf", value: 83, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2_and", value: 84, isUnsigned: true)
!393 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2_32", value: 92, isUnsigned: true)
!394 = !DIEnumerator(name: "CODE_FOR_extendhisi2", value: 94, isUnsigned: true)
!395 = !DIEnumerator(name: "CODE_FOR_extendqihi2", value: 95, isUnsigned: true)
!396 = !DIEnumerator(name: "CODE_FOR_extendqisi2", value: 96, isUnsigned: true)
!397 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop", value: 110, isUnsigned: true)
!398 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop", value: 111, isUnsigned: true)
!399 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi_sse", value: 116, isUnsigned: true)
!400 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi_sse", value: 117, isUnsigned: true)
!401 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_fisttp_i387_1", value: 118, isUnsigned: true)
!402 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_fisttp_i387_1", value: 119, isUnsigned: true)
!403 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_fisttp_i387_1", value: 120, isUnsigned: true)
!404 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp", value: 121, isUnsigned: true)
!405 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp", value: 122, isUnsigned: true)
!406 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp", value: 123, isUnsigned: true)
!407 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp_with_temp", value: 124, isUnsigned: true)
!408 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp_with_temp", value: 125, isUnsigned: true)
!409 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp_with_temp", value: 126, isUnsigned: true)
!410 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387", value: 130, isUnsigned: true)
!411 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_with_temp", value: 131, isUnsigned: true)
!412 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387", value: 132, isUnsigned: true)
!413 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387", value: 133, isUnsigned: true)
!414 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_with_temp", value: 134, isUnsigned: true)
!415 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_with_temp", value: 135, isUnsigned: true)
!416 = !DIEnumerator(name: "CODE_FOR_x86_fnstcw_1", value: 136, isUnsigned: true)
!417 = !DIEnumerator(name: "CODE_FOR_x86_fldcw_1", value: 137, isUnsigned: true)
!418 = !DIEnumerator(name: "CODE_FOR_floatdisf2_i387_with_xmm", value: 185, isUnsigned: true)
!419 = !DIEnumerator(name: "CODE_FOR_floatdidf2_i387_with_xmm", value: 186, isUnsigned: true)
!420 = !DIEnumerator(name: "CODE_FOR_floatdixf2_i387_with_xmm", value: 187, isUnsigned: true)
!421 = !DIEnumerator(name: "CODE_FOR_addqi3_cc", value: 195, isUnsigned: true)
!422 = !DIEnumerator(name: "CODE_FOR_addqi_ext_1", value: 219, isUnsigned: true)
!423 = !DIEnumerator(name: "CODE_FOR_divqi3", value: 271, isUnsigned: true)
!424 = !DIEnumerator(name: "CODE_FOR_udivqi3", value: 272, isUnsigned: true)
!425 = !DIEnumerator(name: "CODE_FOR_andqi_ext_0", value: 298, isUnsigned: true)
!426 = !DIEnumerator(name: "CODE_FOR_copysignsf3_const", value: 367, isUnsigned: true)
!427 = !DIEnumerator(name: "CODE_FOR_copysigndf3_const", value: 368, isUnsigned: true)
!428 = !DIEnumerator(name: "CODE_FOR_copysigntf3_const", value: 369, isUnsigned: true)
!429 = !DIEnumerator(name: "CODE_FOR_copysignsf3_var", value: 370, isUnsigned: true)
!430 = !DIEnumerator(name: "CODE_FOR_copysigndf3_var", value: 371, isUnsigned: true)
!431 = !DIEnumerator(name: "CODE_FOR_copysigntf3_var", value: 372, isUnsigned: true)
!432 = !DIEnumerator(name: "CODE_FOR_x86_shld", value: 382, isUnsigned: true)
!433 = !DIEnumerator(name: "CODE_FOR_x86_shrd", value: 395, isUnsigned: true)
!434 = !DIEnumerator(name: "CODE_FOR_ix86_rotldi3", value: 438, isUnsigned: true)
!435 = !DIEnumerator(name: "CODE_FOR_ix86_rotrdi3", value: 447, isUnsigned: true)
!436 = !DIEnumerator(name: "CODE_FOR_jump", value: 478, isUnsigned: true)
!437 = !DIEnumerator(name: "CODE_FOR_blockage", value: 487, isUnsigned: true)
!438 = !DIEnumerator(name: "CODE_FOR_prologue_use", value: 489, isUnsigned: true)
!439 = !DIEnumerator(name: "CODE_FOR_return_internal", value: 490, isUnsigned: true)
!440 = !DIEnumerator(name: "CODE_FOR_return_internal_long", value: 491, isUnsigned: true)
!441 = !DIEnumerator(name: "CODE_FOR_return_pop_internal", value: 492, isUnsigned: true)
!442 = !DIEnumerator(name: "CODE_FOR_return_indirect_internal", value: 493, isUnsigned: true)
!443 = !DIEnumerator(name: "CODE_FOR_nop", value: 494, isUnsigned: true)
!444 = !DIEnumerator(name: "CODE_FOR_vswapmov", value: 495, isUnsigned: true)
!445 = !DIEnumerator(name: "CODE_FOR_pad", value: 496, isUnsigned: true)
!446 = !DIEnumerator(name: "CODE_FOR_set_got", value: 497, isUnsigned: true)
!447 = !DIEnumerator(name: "CODE_FOR_set_got_labelled", value: 498, isUnsigned: true)
!448 = !DIEnumerator(name: "CODE_FOR_eh_return_internal", value: 499, isUnsigned: true)
!449 = !DIEnumerator(name: "CODE_FOR_leave", value: 500, isUnsigned: true)
!450 = !DIEnumerator(name: "CODE_FOR_ctzsi2", value: 503, isUnsigned: true)
!451 = !DIEnumerator(name: "CODE_FOR_clzsi2_abm", value: 504, isUnsigned: true)
!452 = !DIEnumerator(name: "CODE_FOR_bsr", value: 505, isUnsigned: true)
!453 = !DIEnumerator(name: "CODE_FOR_popcounthi2", value: 506, isUnsigned: true)
!454 = !DIEnumerator(name: "CODE_FOR_popcountsi2", value: 507, isUnsigned: true)
!455 = !DIEnumerator(name: "CODE_FOR_bswaphi_lowpart", value: 514, isUnsigned: true)
!456 = !DIEnumerator(name: "CODE_FOR_clzhi2_abm", value: 515, isUnsigned: true)
!457 = !DIEnumerator(name: "CODE_FOR_paritydi2_cmp", value: 517, isUnsigned: true)
!458 = !DIEnumerator(name: "CODE_FOR_paritysi2_cmp", value: 518, isUnsigned: true)
!459 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop_unspec", value: 573, isUnsigned: true)
!460 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop_unspec", value: 574, isUnsigned: true)
!461 = !DIEnumerator(name: "CODE_FOR_sqrtxf2", value: 575, isUnsigned: true)
!462 = !DIEnumerator(name: "CODE_FOR_sqrt_extendsfxf2_i387", value: 576, isUnsigned: true)
!463 = !DIEnumerator(name: "CODE_FOR_sqrt_extenddfxf2_i387", value: 577, isUnsigned: true)
!464 = !DIEnumerator(name: "CODE_FOR_fpremxf4_i387", value: 581, isUnsigned: true)
!465 = !DIEnumerator(name: "CODE_FOR_fprem1xf4_i387", value: 582, isUnsigned: true)
!466 = !DIEnumerator(name: "CODE_FOR_sincosxf3", value: 589, isUnsigned: true)
!467 = !DIEnumerator(name: "CODE_FOR_sincos_extendsfxf3_i387", value: 590, isUnsigned: true)
!468 = !DIEnumerator(name: "CODE_FOR_sincos_extenddfxf3_i387", value: 591, isUnsigned: true)
!469 = !DIEnumerator(name: "CODE_FOR_fptanxf4_i387", value: 592, isUnsigned: true)
!470 = !DIEnumerator(name: "CODE_FOR_fptan_extendsfxf4_i387", value: 593, isUnsigned: true)
!471 = !DIEnumerator(name: "CODE_FOR_fptan_extenddfxf4_i387", value: 594, isUnsigned: true)
!472 = !DIEnumerator(name: "CODE_FOR_fpatan_extendsfxf3_i387", value: 596, isUnsigned: true)
!473 = !DIEnumerator(name: "CODE_FOR_fpatan_extenddfxf3_i387", value: 597, isUnsigned: true)
!474 = !DIEnumerator(name: "CODE_FOR_fyl2xxf3_i387", value: 598, isUnsigned: true)
!475 = !DIEnumerator(name: "CODE_FOR_fyl2x_extendsfxf3_i387", value: 599, isUnsigned: true)
!476 = !DIEnumerator(name: "CODE_FOR_fyl2x_extenddfxf3_i387", value: 600, isUnsigned: true)
!477 = !DIEnumerator(name: "CODE_FOR_fyl2xp1xf3_i387", value: 601, isUnsigned: true)
!478 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extendsfxf3_i387", value: 602, isUnsigned: true)
!479 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extenddfxf3_i387", value: 603, isUnsigned: true)
!480 = !DIEnumerator(name: "CODE_FOR_fxtractxf3_i387", value: 604, isUnsigned: true)
!481 = !DIEnumerator(name: "CODE_FOR_fxtract_extendsfxf3_i387", value: 605, isUnsigned: true)
!482 = !DIEnumerator(name: "CODE_FOR_fxtract_extenddfxf3_i387", value: 606, isUnsigned: true)
!483 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsf2", value: 609, isUnsigned: true)
!484 = !DIEnumerator(name: "CODE_FOR_sse4_1_rounddf2", value: 610, isUnsigned: true)
!485 = !DIEnumerator(name: "CODE_FOR_rintxf2", value: 611, isUnsigned: true)
!486 = !DIEnumerator(name: "CODE_FOR_fistdi2", value: 613, isUnsigned: true)
!487 = !DIEnumerator(name: "CODE_FOR_fistdi2_with_temp", value: 614, isUnsigned: true)
!488 = !DIEnumerator(name: "CODE_FOR_fisthi2", value: 617, isUnsigned: true)
!489 = !DIEnumerator(name: "CODE_FOR_fistsi2", value: 618, isUnsigned: true)
!490 = !DIEnumerator(name: "CODE_FOR_fisthi2_with_temp", value: 619, isUnsigned: true)
!491 = !DIEnumerator(name: "CODE_FOR_fistsi2_with_temp", value: 620, isUnsigned: true)
!492 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor", value: 621, isUnsigned: true)
!493 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor_i387", value: 622, isUnsigned: true)
!494 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor", value: 626, isUnsigned: true)
!495 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor_with_temp", value: 627, isUnsigned: true)
!496 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor", value: 628, isUnsigned: true)
!497 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor", value: 629, isUnsigned: true)
!498 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor_with_temp", value: 630, isUnsigned: true)
!499 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor_with_temp", value: 631, isUnsigned: true)
!500 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil", value: 632, isUnsigned: true)
!501 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil_i387", value: 633, isUnsigned: true)
!502 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil", value: 637, isUnsigned: true)
!503 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil_with_temp", value: 638, isUnsigned: true)
!504 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil", value: 639, isUnsigned: true)
!505 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil", value: 640, isUnsigned: true)
!506 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil_with_temp", value: 641, isUnsigned: true)
!507 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil_with_temp", value: 642, isUnsigned: true)
!508 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc", value: 643, isUnsigned: true)
!509 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc_i387", value: 644, isUnsigned: true)
!510 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm", value: 645, isUnsigned: true)
!511 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm_i387", value: 646, isUnsigned: true)
!512 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387", value: 647, isUnsigned: true)
!513 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387", value: 648, isUnsigned: true)
!514 = !DIEnumerator(name: "CODE_FOR_fxamxf2_i387", value: 649, isUnsigned: true)
!515 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387_with_temp", value: 650, isUnsigned: true)
!516 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387_with_temp", value: 651, isUnsigned: true)
!517 = !DIEnumerator(name: "CODE_FOR_cld", value: 652, isUnsigned: true)
!518 = !DIEnumerator(name: "CODE_FOR_smaxsf3", value: 681, isUnsigned: true)
!519 = !DIEnumerator(name: "CODE_FOR_sminsf3", value: 682, isUnsigned: true)
!520 = !DIEnumerator(name: "CODE_FOR_smaxdf3", value: 683, isUnsigned: true)
!521 = !DIEnumerator(name: "CODE_FOR_smindf3", value: 684, isUnsigned: true)
!522 = !DIEnumerator(name: "CODE_FOR_pro_epilogue_adjust_stack_1", value: 693, isUnsigned: true)
!523 = !DIEnumerator(name: "CODE_FOR_allocate_stack_worker_32", value: 694, isUnsigned: true)
!524 = !DIEnumerator(name: "CODE_FOR_trap", value: 701, isUnsigned: true)
!525 = !DIEnumerator(name: "CODE_FOR_stack_protect_set_si", value: 704, isUnsigned: true)
!526 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_set_si", value: 705, isUnsigned: true)
!527 = !DIEnumerator(name: "CODE_FOR_stack_protect_test_si", value: 706, isUnsigned: true)
!528 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_test_si", value: 707, isUnsigned: true)
!529 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32qi", value: 708, isUnsigned: true)
!530 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32hi", value: 709, isUnsigned: true)
!531 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32si", value: 710, isUnsigned: true)
!532 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcbsi", value: 715, isUnsigned: true)
!533 = !DIEnumerator(name: "CODE_FOR_sse_movntdi", value: 728, isUnsigned: true)
!534 = !DIEnumerator(name: "CODE_FOR_mmx_rcpv2sf2", value: 736, isUnsigned: true)
!535 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit1v2sf3", value: 737, isUnsigned: true)
!536 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit2v2sf3", value: 738, isUnsigned: true)
!537 = !DIEnumerator(name: "CODE_FOR_mmx_rsqrtv2sf2", value: 739, isUnsigned: true)
!538 = !DIEnumerator(name: "CODE_FOR_mmx_rsqit1v2sf3", value: 740, isUnsigned: true)
!539 = !DIEnumerator(name: "CODE_FOR_mmx_haddv2sf3", value: 741, isUnsigned: true)
!540 = !DIEnumerator(name: "CODE_FOR_mmx_hsubv2sf3", value: 742, isUnsigned: true)
!541 = !DIEnumerator(name: "CODE_FOR_mmx_addsubv2sf3", value: 743, isUnsigned: true)
!542 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2sf3", value: 745, isUnsigned: true)
!543 = !DIEnumerator(name: "CODE_FOR_mmx_gev2sf3", value: 746, isUnsigned: true)
!544 = !DIEnumerator(name: "CODE_FOR_mmx_pf2id", value: 747, isUnsigned: true)
!545 = !DIEnumerator(name: "CODE_FOR_mmx_pf2iw", value: 748, isUnsigned: true)
!546 = !DIEnumerator(name: "CODE_FOR_mmx_pi2fw", value: 749, isUnsigned: true)
!547 = !DIEnumerator(name: "CODE_FOR_mmx_floatv2si2", value: 750, isUnsigned: true)
!548 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2sf2", value: 751, isUnsigned: true)
!549 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv4hi3", value: 782, isUnsigned: true)
!550 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv2si3", value: 783, isUnsigned: true)
!551 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv4hi3", value: 784, isUnsigned: true)
!552 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv2si3", value: 785, isUnsigned: true)
!553 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv1di3", value: 786, isUnsigned: true)
!554 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv4hi3", value: 787, isUnsigned: true)
!555 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv2si3", value: 788, isUnsigned: true)
!556 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv1di3", value: 789, isUnsigned: true)
!557 = !DIEnumerator(name: "CODE_FOR_mmx_gtv8qi3", value: 793, isUnsigned: true)
!558 = !DIEnumerator(name: "CODE_FOR_mmx_gtv4hi3", value: 794, isUnsigned: true)
!559 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2si3", value: 795, isUnsigned: true)
!560 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv8qi3", value: 796, isUnsigned: true)
!561 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv4hi3", value: 797, isUnsigned: true)
!562 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv2si3", value: 798, isUnsigned: true)
!563 = !DIEnumerator(name: "CODE_FOR_mmx_packsswb", value: 808, isUnsigned: true)
!564 = !DIEnumerator(name: "CODE_FOR_mmx_packssdw", value: 809, isUnsigned: true)
!565 = !DIEnumerator(name: "CODE_FOR_mmx_packuswb", value: 810, isUnsigned: true)
!566 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhbw", value: 811, isUnsigned: true)
!567 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklbw", value: 812, isUnsigned: true)
!568 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhwd", value: 813, isUnsigned: true)
!569 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklwd", value: 814, isUnsigned: true)
!570 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhdq", value: 815, isUnsigned: true)
!571 = !DIEnumerator(name: "CODE_FOR_mmx_punpckldq", value: 816, isUnsigned: true)
!572 = !DIEnumerator(name: "CODE_FOR_mmx_pextrw", value: 818, isUnsigned: true)
!573 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw_1", value: 819, isUnsigned: true)
!574 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2si2", value: 820, isUnsigned: true)
!575 = !DIEnumerator(name: "CODE_FOR_mmx_psadbw", value: 828, isUnsigned: true)
!576 = !DIEnumerator(name: "CODE_FOR_mmx_pmovmskb", value: 829, isUnsigned: true)
!577 = !DIEnumerator(name: "CODE_FOR_movdi_to_sse", value: 853, isUnsigned: true)
!578 = !DIEnumerator(name: "CODE_FOR_avx_movups", value: 854, isUnsigned: true)
!579 = !DIEnumerator(name: "CODE_FOR_avx_movupd", value: 855, isUnsigned: true)
!580 = !DIEnumerator(name: "CODE_FOR_avx_movups256", value: 856, isUnsigned: true)
!581 = !DIEnumerator(name: "CODE_FOR_avx_movupd256", value: 857, isUnsigned: true)
!582 = !DIEnumerator(name: "CODE_FOR_sse2_movq128", value: 858, isUnsigned: true)
!583 = !DIEnumerator(name: "CODE_FOR_sse_movups", value: 859, isUnsigned: true)
!584 = !DIEnumerator(name: "CODE_FOR_sse2_movupd", value: 860, isUnsigned: true)
!585 = !DIEnumerator(name: "CODE_FOR_avx_movdqu256", value: 861, isUnsigned: true)
!586 = !DIEnumerator(name: "CODE_FOR_avx_movdqu", value: 862, isUnsigned: true)
!587 = !DIEnumerator(name: "CODE_FOR_sse2_movdqu", value: 863, isUnsigned: true)
!588 = !DIEnumerator(name: "CODE_FOR_avx_movntv4sf", value: 864, isUnsigned: true)
!589 = !DIEnumerator(name: "CODE_FOR_avx_movntv2df", value: 865, isUnsigned: true)
!590 = !DIEnumerator(name: "CODE_FOR_avx_movntv8sf", value: 866, isUnsigned: true)
!591 = !DIEnumerator(name: "CODE_FOR_avx_movntv4df", value: 867, isUnsigned: true)
!592 = !DIEnumerator(name: "CODE_FOR_sse_movntv4sf", value: 868, isUnsigned: true)
!593 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2df", value: 869, isUnsigned: true)
!594 = !DIEnumerator(name: "CODE_FOR_avx_movntv4di", value: 870, isUnsigned: true)
!595 = !DIEnumerator(name: "CODE_FOR_avx_movntv2di", value: 871, isUnsigned: true)
!596 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2di", value: 872, isUnsigned: true)
!597 = !DIEnumerator(name: "CODE_FOR_sse2_movntsi", value: 873, isUnsigned: true)
!598 = !DIEnumerator(name: "CODE_FOR_avx_lddqu256", value: 874, isUnsigned: true)
!599 = !DIEnumerator(name: "CODE_FOR_avx_lddqu", value: 875, isUnsigned: true)
!600 = !DIEnumerator(name: "CODE_FOR_sse3_lddqu", value: 876, isUnsigned: true)
!601 = !DIEnumerator(name: "CODE_FOR_sse_vmaddv4sf3", value: 893, isUnsigned: true)
!602 = !DIEnumerator(name: "CODE_FOR_sse_vmsubv4sf3", value: 894, isUnsigned: true)
!603 = !DIEnumerator(name: "CODE_FOR_sse2_vmaddv2df3", value: 895, isUnsigned: true)
!604 = !DIEnumerator(name: "CODE_FOR_sse2_vmsubv2df3", value: 896, isUnsigned: true)
!605 = !DIEnumerator(name: "CODE_FOR_sse_vmmulv4sf3", value: 905, isUnsigned: true)
!606 = !DIEnumerator(name: "CODE_FOR_sse2_vmmulv2df3", value: 906, isUnsigned: true)
!607 = !DIEnumerator(name: "CODE_FOR_avx_divv4sf3", value: 907, isUnsigned: true)
!608 = !DIEnumerator(name: "CODE_FOR_avx_divv2df3", value: 908, isUnsigned: true)
!609 = !DIEnumerator(name: "CODE_FOR_avx_divv8sf3", value: 909, isUnsigned: true)
!610 = !DIEnumerator(name: "CODE_FOR_avx_divv4df3", value: 910, isUnsigned: true)
!611 = !DIEnumerator(name: "CODE_FOR_sse_divv4sf3", value: 913, isUnsigned: true)
!612 = !DIEnumerator(name: "CODE_FOR_sse2_divv2df3", value: 914, isUnsigned: true)
!613 = !DIEnumerator(name: "CODE_FOR_sse_vmdivv4sf3", value: 917, isUnsigned: true)
!614 = !DIEnumerator(name: "CODE_FOR_sse2_vmdivv2df3", value: 918, isUnsigned: true)
!615 = !DIEnumerator(name: "CODE_FOR_avx_rcpv8sf2", value: 919, isUnsigned: true)
!616 = !DIEnumerator(name: "CODE_FOR_sse_rcpv4sf2", value: 920, isUnsigned: true)
!617 = !DIEnumerator(name: "CODE_FOR_sse_vmrcpv4sf2", value: 922, isUnsigned: true)
!618 = !DIEnumerator(name: "CODE_FOR_avx_sqrtv8sf2", value: 923, isUnsigned: true)
!619 = !DIEnumerator(name: "CODE_FOR_sse_sqrtv4sf2", value: 924, isUnsigned: true)
!620 = !DIEnumerator(name: "CODE_FOR_sqrtv4df2", value: 925, isUnsigned: true)
!621 = !DIEnumerator(name: "CODE_FOR_sqrtv2df2", value: 926, isUnsigned: true)
!622 = !DIEnumerator(name: "CODE_FOR_sse_vmsqrtv4sf2", value: 929, isUnsigned: true)
!623 = !DIEnumerator(name: "CODE_FOR_sse2_vmsqrtv2df2", value: 930, isUnsigned: true)
!624 = !DIEnumerator(name: "CODE_FOR_avx_rsqrtv8sf2", value: 931, isUnsigned: true)
!625 = !DIEnumerator(name: "CODE_FOR_sse_rsqrtv4sf2", value: 932, isUnsigned: true)
!626 = !DIEnumerator(name: "CODE_FOR_sse_vmrsqrtv4sf2", value: 934, isUnsigned: true)
!627 = !DIEnumerator(name: "CODE_FOR_sse_vmsmaxv4sf3", value: 963, isUnsigned: true)
!628 = !DIEnumerator(name: "CODE_FOR_sse_vmsminv4sf3", value: 964, isUnsigned: true)
!629 = !DIEnumerator(name: "CODE_FOR_sse2_vmsmaxv2df3", value: 965, isUnsigned: true)
!630 = !DIEnumerator(name: "CODE_FOR_sse2_vmsminv2df3", value: 966, isUnsigned: true)
!631 = !DIEnumerator(name: "CODE_FOR_avx_addsubv8sf3", value: 979, isUnsigned: true)
!632 = !DIEnumerator(name: "CODE_FOR_avx_addsubv4df3", value: 980, isUnsigned: true)
!633 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv4sf3", value: 982, isUnsigned: true)
!634 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv2df3", value: 984, isUnsigned: true)
!635 = !DIEnumerator(name: "CODE_FOR_avx_haddv4df3", value: 985, isUnsigned: true)
!636 = !DIEnumerator(name: "CODE_FOR_avx_hsubv4df3", value: 986, isUnsigned: true)
!637 = !DIEnumerator(name: "CODE_FOR_avx_haddv8sf3", value: 987, isUnsigned: true)
!638 = !DIEnumerator(name: "CODE_FOR_avx_hsubv8sf3", value: 988, isUnsigned: true)
!639 = !DIEnumerator(name: "CODE_FOR_sse3_haddv4sf3", value: 991, isUnsigned: true)
!640 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv4sf3", value: 992, isUnsigned: true)
!641 = !DIEnumerator(name: "CODE_FOR_sse3_haddv2df3", value: 995, isUnsigned: true)
!642 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv2df3", value: 996, isUnsigned: true)
!643 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv4sf3", value: 997, isUnsigned: true)
!644 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv2df3", value: 998, isUnsigned: true)
!645 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv8sf3", value: 999, isUnsigned: true)
!646 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv4df3", value: 1000, isUnsigned: true)
!647 = !DIEnumerator(name: "CODE_FOR_avx_cmpssv4sf3", value: 1001, isUnsigned: true)
!648 = !DIEnumerator(name: "CODE_FOR_avx_cmpsdv2df3", value: 1002, isUnsigned: true)
!649 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpsf3", value: 1007, isUnsigned: true)
!650 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpdf3", value: 1008, isUnsigned: true)
!651 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpv4sf3", value: 1009, isUnsigned: true)
!652 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpv2df3", value: 1010, isUnsigned: true)
!653 = !DIEnumerator(name: "CODE_FOR_sse_vmmaskcmpv4sf3", value: 1011, isUnsigned: true)
!654 = !DIEnumerator(name: "CODE_FOR_sse2_vmmaskcmpv2df3", value: 1012, isUnsigned: true)
!655 = !DIEnumerator(name: "CODE_FOR_sse_comi", value: 1013, isUnsigned: true)
!656 = !DIEnumerator(name: "CODE_FOR_sse2_comi", value: 1014, isUnsigned: true)
!657 = !DIEnumerator(name: "CODE_FOR_sse_ucomi", value: 1015, isUnsigned: true)
!658 = !DIEnumerator(name: "CODE_FOR_sse2_ucomi", value: 1016, isUnsigned: true)
!659 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4sf3", value: 1017, isUnsigned: true)
!660 = !DIEnumerator(name: "CODE_FOR_avx_andnotv2df3", value: 1018, isUnsigned: true)
!661 = !DIEnumerator(name: "CODE_FOR_avx_andnotv8sf3", value: 1019, isUnsigned: true)
!662 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4df3", value: 1020, isUnsigned: true)
!663 = !DIEnumerator(name: "CODE_FOR_sse_andnotv4sf3", value: 1021, isUnsigned: true)
!664 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2df3", value: 1022, isUnsigned: true)
!665 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv8sf4256", value: 1057, isUnsigned: true)
!666 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4df4256", value: 1058, isUnsigned: true)
!667 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv8sf4256", value: 1059, isUnsigned: true)
!668 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4df4256", value: 1060, isUnsigned: true)
!669 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv8sf4256", value: 1061, isUnsigned: true)
!670 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4df4256", value: 1062, isUnsigned: true)
!671 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv8sf4256", value: 1063, isUnsigned: true)
!672 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4df4256", value: 1064, isUnsigned: true)
!673 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsf4", value: 1065, isUnsigned: true)
!674 = !DIEnumerator(name: "CODE_FOR_fma4_fmadddf4", value: 1066, isUnsigned: true)
!675 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4sf4", value: 1067, isUnsigned: true)
!676 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv2df4", value: 1068, isUnsigned: true)
!677 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv4sf4", value: 1069, isUnsigned: true)
!678 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv2df4", value: 1070, isUnsigned: true)
!679 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubsf4", value: 1071, isUnsigned: true)
!680 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubdf4", value: 1072, isUnsigned: true)
!681 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4sf4", value: 1073, isUnsigned: true)
!682 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv2df4", value: 1074, isUnsigned: true)
!683 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv4sf4", value: 1075, isUnsigned: true)
!684 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv2df4", value: 1076, isUnsigned: true)
!685 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddsf4", value: 1077, isUnsigned: true)
!686 = !DIEnumerator(name: "CODE_FOR_fma4_fnmadddf4", value: 1078, isUnsigned: true)
!687 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4sf4", value: 1079, isUnsigned: true)
!688 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv2df4", value: 1080, isUnsigned: true)
!689 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv4sf4", value: 1081, isUnsigned: true)
!690 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv2df4", value: 1082, isUnsigned: true)
!691 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubsf4", value: 1083, isUnsigned: true)
!692 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubdf4", value: 1084, isUnsigned: true)
!693 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4sf4", value: 1085, isUnsigned: true)
!694 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv2df4", value: 1086, isUnsigned: true)
!695 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv4sf4", value: 1087, isUnsigned: true)
!696 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv2df4", value: 1088, isUnsigned: true)
!697 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv8sf4256", value: 1089, isUnsigned: true)
!698 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4df4256", value: 1090, isUnsigned: true)
!699 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv8sf4256", value: 1091, isUnsigned: true)
!700 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4df4256", value: 1092, isUnsigned: true)
!701 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv8sf4256", value: 1093, isUnsigned: true)
!702 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4df4256", value: 1094, isUnsigned: true)
!703 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv8sf4256", value: 1095, isUnsigned: true)
!704 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4df4256", value: 1096, isUnsigned: true)
!705 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4sf4", value: 1097, isUnsigned: true)
!706 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv2df4", value: 1098, isUnsigned: true)
!707 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4sf4", value: 1099, isUnsigned: true)
!708 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv2df4", value: 1100, isUnsigned: true)
!709 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4sf4", value: 1101, isUnsigned: true)
!710 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv2df4", value: 1102, isUnsigned: true)
!711 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4sf4", value: 1103, isUnsigned: true)
!712 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv2df4", value: 1104, isUnsigned: true)
!713 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv4sf4", value: 1105, isUnsigned: true)
!714 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv2df4", value: 1106, isUnsigned: true)
!715 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv4sf4", value: 1107, isUnsigned: true)
!716 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv2df4", value: 1108, isUnsigned: true)
!717 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv4sf4", value: 1109, isUnsigned: true)
!718 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv2df4", value: 1110, isUnsigned: true)
!719 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv4sf4", value: 1111, isUnsigned: true)
!720 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv2df4", value: 1112, isUnsigned: true)
!721 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv8sf4", value: 1113, isUnsigned: true)
!722 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4df4", value: 1114, isUnsigned: true)
!723 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4sf4", value: 1115, isUnsigned: true)
!724 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv2df4", value: 1116, isUnsigned: true)
!725 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv8sf4", value: 1117, isUnsigned: true)
!726 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4df4", value: 1118, isUnsigned: true)
!727 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4sf4", value: 1119, isUnsigned: true)
!728 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv2df4", value: 1120, isUnsigned: true)
!729 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv8sf4", value: 1121, isUnsigned: true)
!730 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4df4", value: 1122, isUnsigned: true)
!731 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4sf4", value: 1123, isUnsigned: true)
!732 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv2df4", value: 1124, isUnsigned: true)
!733 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv8sf4", value: 1125, isUnsigned: true)
!734 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4df4", value: 1126, isUnsigned: true)
!735 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4sf4", value: 1127, isUnsigned: true)
!736 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv2df4", value: 1128, isUnsigned: true)
!737 = !DIEnumerator(name: "CODE_FOR_sse_cvtpi2ps", value: 1129, isUnsigned: true)
!738 = !DIEnumerator(name: "CODE_FOR_sse_cvtps2pi", value: 1130, isUnsigned: true)
!739 = !DIEnumerator(name: "CODE_FOR_sse_cvttps2pi", value: 1131, isUnsigned: true)
!740 = !DIEnumerator(name: "CODE_FOR_sse_cvtsi2ss", value: 1133, isUnsigned: true)
!741 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si", value: 1134, isUnsigned: true)
!742 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si_2", value: 1135, isUnsigned: true)
!743 = !DIEnumerator(name: "CODE_FOR_sse_cvttss2si", value: 1136, isUnsigned: true)
!744 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps", value: 1137, isUnsigned: true)
!745 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps256", value: 1138, isUnsigned: true)
!746 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2ps", value: 1139, isUnsigned: true)
!747 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq", value: 1140, isUnsigned: true)
!748 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq256", value: 1141, isUnsigned: true)
!749 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2dq", value: 1142, isUnsigned: true)
!750 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq", value: 1143, isUnsigned: true)
!751 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq256", value: 1144, isUnsigned: true)
!752 = !DIEnumerator(name: "CODE_FOR_sse2_cvttps2dq", value: 1145, isUnsigned: true)
!753 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpi2pd", value: 1146, isUnsigned: true)
!754 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2pi", value: 1147, isUnsigned: true)
!755 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2pi", value: 1148, isUnsigned: true)
!756 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsi2sd", value: 1150, isUnsigned: true)
!757 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si", value: 1151, isUnsigned: true)
!758 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si_2", value: 1152, isUnsigned: true)
!759 = !DIEnumerator(name: "CODE_FOR_sse2_cvttsd2si", value: 1153, isUnsigned: true)
!760 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2pd256", value: 1154, isUnsigned: true)
!761 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2pd", value: 1155, isUnsigned: true)
!762 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2dq256", value: 1156, isUnsigned: true)
!763 = !DIEnumerator(name: "CODE_FOR_avx_cvttpd2dq256", value: 1158, isUnsigned: true)
!764 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2ss", value: 1161, isUnsigned: true)
!765 = !DIEnumerator(name: "CODE_FOR_sse2_cvtss2sd", value: 1163, isUnsigned: true)
!766 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2ps256", value: 1164, isUnsigned: true)
!767 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2pd256", value: 1166, isUnsigned: true)
!768 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2pd", value: 1167, isUnsigned: true)
!769 = !DIEnumerator(name: "CODE_FOR_sse_movhlps", value: 1169, isUnsigned: true)
!770 = !DIEnumerator(name: "CODE_FOR_sse_movlhps", value: 1171, isUnsigned: true)
!771 = !DIEnumerator(name: "CODE_FOR_avx_unpckhps256", value: 1172, isUnsigned: true)
!772 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4sf", value: 1174, isUnsigned: true)
!773 = !DIEnumerator(name: "CODE_FOR_avx_unpcklps256", value: 1175, isUnsigned: true)
!774 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4sf", value: 1177, isUnsigned: true)
!775 = !DIEnumerator(name: "CODE_FOR_avx_movshdup256", value: 1178, isUnsigned: true)
!776 = !DIEnumerator(name: "CODE_FOR_sse3_movshdup", value: 1179, isUnsigned: true)
!777 = !DIEnumerator(name: "CODE_FOR_avx_movsldup256", value: 1180, isUnsigned: true)
!778 = !DIEnumerator(name: "CODE_FOR_sse3_movsldup", value: 1181, isUnsigned: true)
!779 = !DIEnumerator(name: "CODE_FOR_avx_shufps256_1", value: 1182, isUnsigned: true)
!780 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4sf", value: 1185, isUnsigned: true)
!781 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4si", value: 1186, isUnsigned: true)
!782 = !DIEnumerator(name: "CODE_FOR_sse_storehps", value: 1187, isUnsigned: true)
!783 = !DIEnumerator(name: "CODE_FOR_sse_loadhps", value: 1189, isUnsigned: true)
!784 = !DIEnumerator(name: "CODE_FOR_sse_storelps", value: 1191, isUnsigned: true)
!785 = !DIEnumerator(name: "CODE_FOR_sse_loadlps", value: 1193, isUnsigned: true)
!786 = !DIEnumerator(name: "CODE_FOR_sse_movss", value: 1195, isUnsigned: true)
!787 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf_0", value: 1209, isUnsigned: true)
!788 = !DIEnumerator(name: "CODE_FOR_vec_setv4si_0", value: 1210, isUnsigned: true)
!789 = !DIEnumerator(name: "CODE_FOR_sse4_1_insertps", value: 1214, isUnsigned: true)
!790 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4di", value: 1216, isUnsigned: true)
!791 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4df", value: 1217, isUnsigned: true)
!792 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4di", value: 1218, isUnsigned: true)
!793 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4df", value: 1219, isUnsigned: true)
!794 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8si", value: 1220, isUnsigned: true)
!795 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8sf", value: 1221, isUnsigned: true)
!796 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8si", value: 1222, isUnsigned: true)
!797 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8sf", value: 1223, isUnsigned: true)
!798 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v16hi", value: 1224, isUnsigned: true)
!799 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v16hi", value: 1225, isUnsigned: true)
!800 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v32qi", value: 1226, isUnsigned: true)
!801 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v32qi", value: 1227, isUnsigned: true)
!802 = !DIEnumerator(name: "CODE_FOR_avx_unpckhpd256", value: 1230, isUnsigned: true)
!803 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256_1", value: 1238, isUnsigned: true)
!804 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2di", value: 1240, isUnsigned: true)
!805 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2di", value: 1242, isUnsigned: true)
!806 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2df", value: 1245, isUnsigned: true)
!807 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2di", value: 1246, isUnsigned: true)
!808 = !DIEnumerator(name: "CODE_FOR_sse2_storehpd", value: 1248, isUnsigned: true)
!809 = !DIEnumerator(name: "CODE_FOR_sse2_storelpd", value: 1249, isUnsigned: true)
!810 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd", value: 1251, isUnsigned: true)
!811 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd", value: 1253, isUnsigned: true)
!812 = !DIEnumerator(name: "CODE_FOR_sse2_movsd", value: 1257, isUnsigned: true)
!813 = !DIEnumerator(name: "CODE_FOR_vec_dupv2df", value: 1259, isUnsigned: true)
!814 = !DIEnumerator(name: "CODE_FOR_mulv16qi3", value: 1295, isUnsigned: true)
!815 = !DIEnumerator(name: "CODE_FOR_mulv2di3", value: 1311, isUnsigned: true)
!816 = !DIEnumerator(name: "CODE_FOR_ashrv8hi3", value: 1314, isUnsigned: true)
!817 = !DIEnumerator(name: "CODE_FOR_ashrv4si3", value: 1315, isUnsigned: true)
!818 = !DIEnumerator(name: "CODE_FOR_sse2_lshrv1ti3", value: 1320, isUnsigned: true)
!819 = !DIEnumerator(name: "CODE_FOR_lshrv8hi3", value: 1321, isUnsigned: true)
!820 = !DIEnumerator(name: "CODE_FOR_lshrv4si3", value: 1322, isUnsigned: true)
!821 = !DIEnumerator(name: "CODE_FOR_lshrv2di3", value: 1323, isUnsigned: true)
!822 = !DIEnumerator(name: "CODE_FOR_sse2_ashlv1ti3", value: 1328, isUnsigned: true)
!823 = !DIEnumerator(name: "CODE_FOR_ashlv8hi3", value: 1329, isUnsigned: true)
!824 = !DIEnumerator(name: "CODE_FOR_ashlv4si3", value: 1330, isUnsigned: true)
!825 = !DIEnumerator(name: "CODE_FOR_ashlv2di3", value: 1331, isUnsigned: true)
!826 = !DIEnumerator(name: "CODE_FOR_sse2_gtv16qi3", value: 1368, isUnsigned: true)
!827 = !DIEnumerator(name: "CODE_FOR_sse2_gtv8hi3", value: 1369, isUnsigned: true)
!828 = !DIEnumerator(name: "CODE_FOR_sse2_gtv4si3", value: 1370, isUnsigned: true)
!829 = !DIEnumerator(name: "CODE_FOR_sse4_2_gtv2di3", value: 1371, isUnsigned: true)
!830 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv16qi3", value: 1384, isUnsigned: true)
!831 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv8hi3", value: 1385, isUnsigned: true)
!832 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv4si3", value: 1386, isUnsigned: true)
!833 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2di3", value: 1387, isUnsigned: true)
!834 = !DIEnumerator(name: "CODE_FOR_sse2_packsswb", value: 1441, isUnsigned: true)
!835 = !DIEnumerator(name: "CODE_FOR_sse2_packssdw", value: 1443, isUnsigned: true)
!836 = !DIEnumerator(name: "CODE_FOR_sse2_packuswb", value: 1445, isUnsigned: true)
!837 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv16qi", value: 1447, isUnsigned: true)
!838 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv16qi", value: 1449, isUnsigned: true)
!839 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv8hi", value: 1451, isUnsigned: true)
!840 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv8hi", value: 1453, isUnsigned: true)
!841 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4si", value: 1455, isUnsigned: true)
!842 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4si", value: 1457, isUnsigned: true)
!843 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd_1", value: 1469, isUnsigned: true)
!844 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw_1", value: 1470, isUnsigned: true)
!845 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw_1", value: 1471, isUnsigned: true)
!846 = !DIEnumerator(name: "CODE_FOR_sse2_loadld", value: 1473, isUnsigned: true)
!847 = !DIEnumerator(name: "CODE_FOR_sse2_stored", value: 1474, isUnsigned: true)
!848 = !DIEnumerator(name: "CODE_FOR_vec_concatv2di", value: 1492, isUnsigned: true)
!849 = !DIEnumerator(name: "CODE_FOR_sse2_psadbw", value: 1498, isUnsigned: true)
!850 = !DIEnumerator(name: "CODE_FOR_avx_movmskps256", value: 1499, isUnsigned: true)
!851 = !DIEnumerator(name: "CODE_FOR_avx_movmskpd256", value: 1500, isUnsigned: true)
!852 = !DIEnumerator(name: "CODE_FOR_sse_movmskps", value: 1501, isUnsigned: true)
!853 = !DIEnumerator(name: "CODE_FOR_sse2_movmskpd", value: 1502, isUnsigned: true)
!854 = !DIEnumerator(name: "CODE_FOR_sse2_pmovmskb", value: 1503, isUnsigned: true)
!855 = !DIEnumerator(name: "CODE_FOR_sse_ldmxcsr", value: 1505, isUnsigned: true)
!856 = !DIEnumerator(name: "CODE_FOR_sse_stmxcsr", value: 1506, isUnsigned: true)
!857 = !DIEnumerator(name: "CODE_FOR_sse2_clflush", value: 1508, isUnsigned: true)
!858 = !DIEnumerator(name: "CODE_FOR_sse3_mwait", value: 1511, isUnsigned: true)
!859 = !DIEnumerator(name: "CODE_FOR_sse3_monitor", value: 1512, isUnsigned: true)
!860 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv8hi3", value: 1514, isUnsigned: true)
!861 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv4hi3", value: 1515, isUnsigned: true)
!862 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv4si3", value: 1517, isUnsigned: true)
!863 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv2si3", value: 1518, isUnsigned: true)
!864 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv8hi3", value: 1520, isUnsigned: true)
!865 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv4hi3", value: 1521, isUnsigned: true)
!866 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv8hi3", value: 1523, isUnsigned: true)
!867 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv4hi3", value: 1524, isUnsigned: true)
!868 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv4si3", value: 1526, isUnsigned: true)
!869 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv2si3", value: 1527, isUnsigned: true)
!870 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv8hi3", value: 1529, isUnsigned: true)
!871 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv4hi3", value: 1530, isUnsigned: true)
!872 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw128", value: 1532, isUnsigned: true)
!873 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw", value: 1533, isUnsigned: true)
!874 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv16qi3", value: 1538, isUnsigned: true)
!875 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv8qi3", value: 1539, isUnsigned: true)
!876 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv16qi3", value: 1543, isUnsigned: true)
!877 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8hi3", value: 1544, isUnsigned: true)
!878 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4si3", value: 1545, isUnsigned: true)
!879 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8qi3", value: 1546, isUnsigned: true)
!880 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4hi3", value: 1547, isUnsigned: true)
!881 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv2si3", value: 1548, isUnsigned: true)
!882 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrti", value: 1550, isUnsigned: true)
!883 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrdi", value: 1551, isUnsigned: true)
!884 = !DIEnumerator(name: "CODE_FOR_absv16qi2", value: 1552, isUnsigned: true)
!885 = !DIEnumerator(name: "CODE_FOR_absv8hi2", value: 1553, isUnsigned: true)
!886 = !DIEnumerator(name: "CODE_FOR_absv4si2", value: 1554, isUnsigned: true)
!887 = !DIEnumerator(name: "CODE_FOR_absv8qi2", value: 1555, isUnsigned: true)
!888 = !DIEnumerator(name: "CODE_FOR_absv4hi2", value: 1556, isUnsigned: true)
!889 = !DIEnumerator(name: "CODE_FOR_absv2si2", value: 1557, isUnsigned: true)
!890 = !DIEnumerator(name: "CODE_FOR_sse4a_movntsf", value: 1558, isUnsigned: true)
!891 = !DIEnumerator(name: "CODE_FOR_sse4a_movntdf", value: 1559, isUnsigned: true)
!892 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv4sf", value: 1560, isUnsigned: true)
!893 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv2df", value: 1561, isUnsigned: true)
!894 = !DIEnumerator(name: "CODE_FOR_sse4a_extrqi", value: 1562, isUnsigned: true)
!895 = !DIEnumerator(name: "CODE_FOR_sse4a_extrq", value: 1563, isUnsigned: true)
!896 = !DIEnumerator(name: "CODE_FOR_sse4a_insertqi", value: 1564, isUnsigned: true)
!897 = !DIEnumerator(name: "CODE_FOR_sse4a_insertq", value: 1565, isUnsigned: true)
!898 = !DIEnumerator(name: "CODE_FOR_avx_blendps", value: 1566, isUnsigned: true)
!899 = !DIEnumerator(name: "CODE_FOR_avx_blendpd", value: 1567, isUnsigned: true)
!900 = !DIEnumerator(name: "CODE_FOR_avx_blendps256", value: 1568, isUnsigned: true)
!901 = !DIEnumerator(name: "CODE_FOR_avx_blendpd256", value: 1569, isUnsigned: true)
!902 = !DIEnumerator(name: "CODE_FOR_avx_blendvps", value: 1570, isUnsigned: true)
!903 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd", value: 1571, isUnsigned: true)
!904 = !DIEnumerator(name: "CODE_FOR_avx_blendvps256", value: 1572, isUnsigned: true)
!905 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd256", value: 1573, isUnsigned: true)
!906 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendps", value: 1574, isUnsigned: true)
!907 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendpd", value: 1575, isUnsigned: true)
!908 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvps", value: 1576, isUnsigned: true)
!909 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvpd", value: 1577, isUnsigned: true)
!910 = !DIEnumerator(name: "CODE_FOR_avx_dpps", value: 1578, isUnsigned: true)
!911 = !DIEnumerator(name: "CODE_FOR_avx_dppd", value: 1579, isUnsigned: true)
!912 = !DIEnumerator(name: "CODE_FOR_avx_dpps256", value: 1580, isUnsigned: true)
!913 = !DIEnumerator(name: "CODE_FOR_avx_dppd256", value: 1581, isUnsigned: true)
!914 = !DIEnumerator(name: "CODE_FOR_sse4_1_dpps", value: 1582, isUnsigned: true)
!915 = !DIEnumerator(name: "CODE_FOR_sse4_1_dppd", value: 1583, isUnsigned: true)
!916 = !DIEnumerator(name: "CODE_FOR_sse4_1_movntdqa", value: 1584, isUnsigned: true)
!917 = !DIEnumerator(name: "CODE_FOR_sse4_1_mpsadbw", value: 1586, isUnsigned: true)
!918 = !DIEnumerator(name: "CODE_FOR_sse4_1_packusdw", value: 1588, isUnsigned: true)
!919 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendvb", value: 1590, isUnsigned: true)
!920 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendw", value: 1592, isUnsigned: true)
!921 = !DIEnumerator(name: "CODE_FOR_sse4_1_phminposuw", value: 1593, isUnsigned: true)
!922 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv8qiv8hi2", value: 1594, isUnsigned: true)
!923 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4qiv4si2", value: 1596, isUnsigned: true)
!924 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2qiv2di2", value: 1598, isUnsigned: true)
!925 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4hiv4si2", value: 1600, isUnsigned: true)
!926 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2hiv2di2", value: 1602, isUnsigned: true)
!927 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2siv2di2", value: 1604, isUnsigned: true)
!928 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv8qiv8hi2", value: 1606, isUnsigned: true)
!929 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4qiv4si2", value: 1608, isUnsigned: true)
!930 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2qiv2di2", value: 1610, isUnsigned: true)
!931 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4hiv4si2", value: 1612, isUnsigned: true)
!932 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2hiv2di2", value: 1614, isUnsigned: true)
!933 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2siv2di2", value: 1616, isUnsigned: true)
!934 = !DIEnumerator(name: "CODE_FOR_avx_vtestps", value: 1618, isUnsigned: true)
!935 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd", value: 1619, isUnsigned: true)
!936 = !DIEnumerator(name: "CODE_FOR_avx_vtestps256", value: 1620, isUnsigned: true)
!937 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd256", value: 1621, isUnsigned: true)
!938 = !DIEnumerator(name: "CODE_FOR_avx_ptest256", value: 1622, isUnsigned: true)
!939 = !DIEnumerator(name: "CODE_FOR_sse4_1_ptest", value: 1623, isUnsigned: true)
!940 = !DIEnumerator(name: "CODE_FOR_avx_roundps256", value: 1624, isUnsigned: true)
!941 = !DIEnumerator(name: "CODE_FOR_avx_roundpd256", value: 1625, isUnsigned: true)
!942 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundps", value: 1626, isUnsigned: true)
!943 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundpd", value: 1627, isUnsigned: true)
!944 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundss", value: 1630, isUnsigned: true)
!945 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsd", value: 1631, isUnsigned: true)
!946 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr", value: 1632, isUnsigned: true)
!947 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestri", value: 1633, isUnsigned: true)
!948 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestrm", value: 1634, isUnsigned: true)
!949 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr_cconly", value: 1635, isUnsigned: true)
!950 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr", value: 1636, isUnsigned: true)
!951 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistri", value: 1637, isUnsigned: true)
!952 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistrm", value: 1638, isUnsigned: true)
!953 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr_cconly", value: 1639, isUnsigned: true)
!954 = !DIEnumerator(name: "CODE_FOR_xop_pmacsww", value: 1640, isUnsigned: true)
!955 = !DIEnumerator(name: "CODE_FOR_xop_pmacssww", value: 1641, isUnsigned: true)
!956 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdd", value: 1642, isUnsigned: true)
!957 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdd", value: 1643, isUnsigned: true)
!958 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdql", value: 1644, isUnsigned: true)
!959 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdqh", value: 1645, isUnsigned: true)
!960 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdql", value: 1646, isUnsigned: true)
!961 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_low", value: 1647, isUnsigned: true)
!962 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdqh", value: 1648, isUnsigned: true)
!963 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_high", value: 1649, isUnsigned: true)
!964 = !DIEnumerator(name: "CODE_FOR_xop_pmacsswd", value: 1650, isUnsigned: true)
!965 = !DIEnumerator(name: "CODE_FOR_xop_pmacswd", value: 1651, isUnsigned: true)
!966 = !DIEnumerator(name: "CODE_FOR_xop_pmadcsswd", value: 1652, isUnsigned: true)
!967 = !DIEnumerator(name: "CODE_FOR_xop_pmadcswd", value: 1653, isUnsigned: true)
!968 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16qi", value: 1654, isUnsigned: true)
!969 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8hi", value: 1655, isUnsigned: true)
!970 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4si", value: 1656, isUnsigned: true)
!971 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2di", value: 1657, isUnsigned: true)
!972 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4sf", value: 1658, isUnsigned: true)
!973 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2df", value: 1659, isUnsigned: true)
!974 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v32qi256", value: 1660, isUnsigned: true)
!975 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16hi256", value: 1661, isUnsigned: true)
!976 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8si256", value: 1662, isUnsigned: true)
!977 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4di256", value: 1663, isUnsigned: true)
!978 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8sf256", value: 1664, isUnsigned: true)
!979 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4df256", value: 1665, isUnsigned: true)
!980 = !DIEnumerator(name: "CODE_FOR_xop_phaddbw", value: 1666, isUnsigned: true)
!981 = !DIEnumerator(name: "CODE_FOR_xop_phaddbd", value: 1667, isUnsigned: true)
!982 = !DIEnumerator(name: "CODE_FOR_xop_phaddbq", value: 1668, isUnsigned: true)
!983 = !DIEnumerator(name: "CODE_FOR_xop_phaddwd", value: 1669, isUnsigned: true)
!984 = !DIEnumerator(name: "CODE_FOR_xop_phaddwq", value: 1670, isUnsigned: true)
!985 = !DIEnumerator(name: "CODE_FOR_xop_phadddq", value: 1671, isUnsigned: true)
!986 = !DIEnumerator(name: "CODE_FOR_xop_phaddubw", value: 1672, isUnsigned: true)
!987 = !DIEnumerator(name: "CODE_FOR_xop_phaddubd", value: 1673, isUnsigned: true)
!988 = !DIEnumerator(name: "CODE_FOR_xop_phaddubq", value: 1674, isUnsigned: true)
!989 = !DIEnumerator(name: "CODE_FOR_xop_phadduwd", value: 1675, isUnsigned: true)
!990 = !DIEnumerator(name: "CODE_FOR_xop_phadduwq", value: 1676, isUnsigned: true)
!991 = !DIEnumerator(name: "CODE_FOR_xop_phaddudq", value: 1677, isUnsigned: true)
!992 = !DIEnumerator(name: "CODE_FOR_xop_phsubbw", value: 1678, isUnsigned: true)
!993 = !DIEnumerator(name: "CODE_FOR_xop_phsubwd", value: 1679, isUnsigned: true)
!994 = !DIEnumerator(name: "CODE_FOR_xop_phsubdq", value: 1680, isUnsigned: true)
!995 = !DIEnumerator(name: "CODE_FOR_xop_pperm", value: 1681, isUnsigned: true)
!996 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v2di_v4si", value: 1682, isUnsigned: true)
!997 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v4si_v8hi", value: 1683, isUnsigned: true)
!998 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v8hi_v16qi", value: 1684, isUnsigned: true)
!999 = !DIEnumerator(name: "CODE_FOR_xop_rotlv16qi3", value: 1685, isUnsigned: true)
!1000 = !DIEnumerator(name: "CODE_FOR_xop_rotlv8hi3", value: 1686, isUnsigned: true)
!1001 = !DIEnumerator(name: "CODE_FOR_xop_rotlv4si3", value: 1687, isUnsigned: true)
!1002 = !DIEnumerator(name: "CODE_FOR_xop_rotlv2di3", value: 1688, isUnsigned: true)
!1003 = !DIEnumerator(name: "CODE_FOR_xop_rotrv16qi3", value: 1689, isUnsigned: true)
!1004 = !DIEnumerator(name: "CODE_FOR_xop_rotrv8hi3", value: 1690, isUnsigned: true)
!1005 = !DIEnumerator(name: "CODE_FOR_xop_rotrv4si3", value: 1691, isUnsigned: true)
!1006 = !DIEnumerator(name: "CODE_FOR_xop_rotrv2di3", value: 1692, isUnsigned: true)
!1007 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv16qi3", value: 1693, isUnsigned: true)
!1008 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv8hi3", value: 1694, isUnsigned: true)
!1009 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv4si3", value: 1695, isUnsigned: true)
!1010 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv2di3", value: 1696, isUnsigned: true)
!1011 = !DIEnumerator(name: "CODE_FOR_xop_ashlv16qi3", value: 1697, isUnsigned: true)
!1012 = !DIEnumerator(name: "CODE_FOR_xop_ashlv8hi3", value: 1698, isUnsigned: true)
!1013 = !DIEnumerator(name: "CODE_FOR_xop_ashlv4si3", value: 1699, isUnsigned: true)
!1014 = !DIEnumerator(name: "CODE_FOR_xop_ashlv2di3", value: 1700, isUnsigned: true)
!1015 = !DIEnumerator(name: "CODE_FOR_xop_lshlv16qi3", value: 1701, isUnsigned: true)
!1016 = !DIEnumerator(name: "CODE_FOR_xop_lshlv8hi3", value: 1702, isUnsigned: true)
!1017 = !DIEnumerator(name: "CODE_FOR_xop_lshlv4si3", value: 1703, isUnsigned: true)
!1018 = !DIEnumerator(name: "CODE_FOR_xop_lshlv2di3", value: 1704, isUnsigned: true)
!1019 = !DIEnumerator(name: "CODE_FOR_xop_frczv4sf2", value: 1705, isUnsigned: true)
!1020 = !DIEnumerator(name: "CODE_FOR_xop_frczv2df2", value: 1706, isUnsigned: true)
!1021 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv4sf2", value: 1707, isUnsigned: true)
!1022 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv2df2", value: 1708, isUnsigned: true)
!1023 = !DIEnumerator(name: "CODE_FOR_xop_frczv8sf2256", value: 1709, isUnsigned: true)
!1024 = !DIEnumerator(name: "CODE_FOR_xop_frczv4df2256", value: 1710, isUnsigned: true)
!1025 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv16qi3", value: 1711, isUnsigned: true)
!1026 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv8hi3", value: 1712, isUnsigned: true)
!1027 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv4si3", value: 1713, isUnsigned: true)
!1028 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv2di3", value: 1714, isUnsigned: true)
!1029 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv16qi3", value: 1715, isUnsigned: true)
!1030 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv8hi3", value: 1716, isUnsigned: true)
!1031 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv4si3", value: 1717, isUnsigned: true)
!1032 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv2di3", value: 1718, isUnsigned: true)
!1033 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v16qi3", value: 1719, isUnsigned: true)
!1034 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v8hi3", value: 1720, isUnsigned: true)
!1035 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v4si3", value: 1721, isUnsigned: true)
!1036 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v2di3", value: 1722, isUnsigned: true)
!1037 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv16qi3", value: 1723, isUnsigned: true)
!1038 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv8hi3", value: 1724, isUnsigned: true)
!1039 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv4si3", value: 1725, isUnsigned: true)
!1040 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv2di3", value: 1726, isUnsigned: true)
!1041 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4sf3", value: 1727, isUnsigned: true)
!1042 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v2df3", value: 1728, isUnsigned: true)
!1043 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v8sf3", value: 1729, isUnsigned: true)
!1044 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4df3", value: 1730, isUnsigned: true)
!1045 = !DIEnumerator(name: "CODE_FOR_aesenc", value: 1732, isUnsigned: true)
!1046 = !DIEnumerator(name: "CODE_FOR_aesenclast", value: 1734, isUnsigned: true)
!1047 = !DIEnumerator(name: "CODE_FOR_aesdec", value: 1736, isUnsigned: true)
!1048 = !DIEnumerator(name: "CODE_FOR_aesdeclast", value: 1738, isUnsigned: true)
!1049 = !DIEnumerator(name: "CODE_FOR_aesimc", value: 1739, isUnsigned: true)
!1050 = !DIEnumerator(name: "CODE_FOR_aeskeygenassist", value: 1740, isUnsigned: true)
!1051 = !DIEnumerator(name: "CODE_FOR_pclmulqdq", value: 1742, isUnsigned: true)
!1052 = !DIEnumerator(name: "CODE_FOR_vec_dupv8si", value: 1745, isUnsigned: true)
!1053 = !DIEnumerator(name: "CODE_FOR_vec_dupv8sf", value: 1746, isUnsigned: true)
!1054 = !DIEnumerator(name: "CODE_FOR_vec_dupv4di", value: 1747, isUnsigned: true)
!1055 = !DIEnumerator(name: "CODE_FOR_vec_dupv4df", value: 1748, isUnsigned: true)
!1056 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v32qi", value: 1749, isUnsigned: true)
!1057 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v16hi", value: 1750, isUnsigned: true)
!1058 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8si", value: 1751, isUnsigned: true)
!1059 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4di", value: 1752, isUnsigned: true)
!1060 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8sf", value: 1753, isUnsigned: true)
!1061 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4df", value: 1754, isUnsigned: true)
!1062 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4sf3", value: 1762, isUnsigned: true)
!1063 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv2df3", value: 1763, isUnsigned: true)
!1064 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv8sf3", value: 1764, isUnsigned: true)
!1065 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4df3", value: 1765, isUnsigned: true)
!1066 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4di", value: 1772, isUnsigned: true)
!1067 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4df", value: 1773, isUnsigned: true)
!1068 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4di", value: 1774, isUnsigned: true)
!1069 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4df", value: 1775, isUnsigned: true)
!1070 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8si", value: 1776, isUnsigned: true)
!1071 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8sf", value: 1777, isUnsigned: true)
!1072 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8si", value: 1778, isUnsigned: true)
!1073 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8sf", value: 1779, isUnsigned: true)
!1074 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v16hi", value: 1780, isUnsigned: true)
!1075 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v16hi", value: 1781, isUnsigned: true)
!1076 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v32qi", value: 1782, isUnsigned: true)
!1077 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v32qi", value: 1783, isUnsigned: true)
!1078 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps", value: 1784, isUnsigned: true)
!1079 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd", value: 1785, isUnsigned: true)
!1080 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps256", value: 1786, isUnsigned: true)
!1081 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd256", value: 1787, isUnsigned: true)
!1082 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps", value: 1788, isUnsigned: true)
!1083 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd", value: 1789, isUnsigned: true)
!1084 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps256", value: 1790, isUnsigned: true)
!1085 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd256", value: 1791, isUnsigned: true)
!1086 = !DIEnumerator(name: "CODE_FOR_avx_si256_si", value: 1792, isUnsigned: true)
!1087 = !DIEnumerator(name: "CODE_FOR_avx_ps256_ps", value: 1793, isUnsigned: true)
!1088 = !DIEnumerator(name: "CODE_FOR_avx_pd256_pd", value: 1794, isUnsigned: true)
!1089 = !DIEnumerator(name: "CODE_FOR_avx_si_si256", value: 1795, isUnsigned: true)
!1090 = !DIEnumerator(name: "CODE_FOR_avx_ps_ps256", value: 1796, isUnsigned: true)
!1091 = !DIEnumerator(name: "CODE_FOR_avx_pd_pd256", value: 1797, isUnsigned: true)
!1092 = !DIEnumerator(name: "CODE_FOR_memory_barrier_nosse", value: 1804, isUnsigned: true)
!1093 = !DIEnumerator(name: "CODE_FOR_sync_double_compare_and_swapdi", value: 1808, isUnsigned: true)
!1094 = !DIEnumerator(name: "CODE_FOR_sync_old_addqi", value: 1810, isUnsigned: true)
!1095 = !DIEnumerator(name: "CODE_FOR_sync_old_addhi", value: 1811, isUnsigned: true)
!1096 = !DIEnumerator(name: "CODE_FOR_sync_old_addsi", value: 1812, isUnsigned: true)
!1097 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setqi", value: 1813, isUnsigned: true)
!1098 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_sethi", value: 1814, isUnsigned: true)
!1099 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setsi", value: 1815, isUnsigned: true)
!1100 = !DIEnumerator(name: "CODE_FOR_sync_addqi", value: 1816, isUnsigned: true)
!1101 = !DIEnumerator(name: "CODE_FOR_sync_addhi", value: 1817, isUnsigned: true)
!1102 = !DIEnumerator(name: "CODE_FOR_sync_addsi", value: 1818, isUnsigned: true)
!1103 = !DIEnumerator(name: "CODE_FOR_sync_subqi", value: 1819, isUnsigned: true)
!1104 = !DIEnumerator(name: "CODE_FOR_sync_subhi", value: 1820, isUnsigned: true)
!1105 = !DIEnumerator(name: "CODE_FOR_sync_subsi", value: 1821, isUnsigned: true)
!1106 = !DIEnumerator(name: "CODE_FOR_sync_andqi", value: 1822, isUnsigned: true)
!1107 = !DIEnumerator(name: "CODE_FOR_sync_iorqi", value: 1823, isUnsigned: true)
!1108 = !DIEnumerator(name: "CODE_FOR_sync_xorqi", value: 1824, isUnsigned: true)
!1109 = !DIEnumerator(name: "CODE_FOR_sync_andhi", value: 1825, isUnsigned: true)
!1110 = !DIEnumerator(name: "CODE_FOR_sync_iorhi", value: 1826, isUnsigned: true)
!1111 = !DIEnumerator(name: "CODE_FOR_sync_xorhi", value: 1827, isUnsigned: true)
!1112 = !DIEnumerator(name: "CODE_FOR_sync_andsi", value: 1828, isUnsigned: true)
!1113 = !DIEnumerator(name: "CODE_FOR_sync_iorsi", value: 1829, isUnsigned: true)
!1114 = !DIEnumerator(name: "CODE_FOR_sync_xorsi", value: 1830, isUnsigned: true)
!1115 = !DIEnumerator(name: "CODE_FOR_cbranchqi4", value: 1831, isUnsigned: true)
!1116 = !DIEnumerator(name: "CODE_FOR_cbranchhi4", value: 1832, isUnsigned: true)
!1117 = !DIEnumerator(name: "CODE_FOR_cbranchsi4", value: 1833, isUnsigned: true)
!1118 = !DIEnumerator(name: "CODE_FOR_cbranchdi4", value: 1834, isUnsigned: true)
!1119 = !DIEnumerator(name: "CODE_FOR_cstoreqi4", value: 1835, isUnsigned: true)
!1120 = !DIEnumerator(name: "CODE_FOR_cstorehi4", value: 1836, isUnsigned: true)
!1121 = !DIEnumerator(name: "CODE_FOR_cstoresi4", value: 1837, isUnsigned: true)
!1122 = !DIEnumerator(name: "CODE_FOR_cmpsi_1", value: 1838, isUnsigned: true)
!1123 = !DIEnumerator(name: "CODE_FOR_cmpqi_ext_3", value: 1839, isUnsigned: true)
!1124 = !DIEnumerator(name: "CODE_FOR_cbranchxf4", value: 1840, isUnsigned: true)
!1125 = !DIEnumerator(name: "CODE_FOR_cstorexf4", value: 1841, isUnsigned: true)
!1126 = !DIEnumerator(name: "CODE_FOR_cbranchsf4", value: 1842, isUnsigned: true)
!1127 = !DIEnumerator(name: "CODE_FOR_cbranchdf4", value: 1843, isUnsigned: true)
!1128 = !DIEnumerator(name: "CODE_FOR_cstoresf4", value: 1844, isUnsigned: true)
!1129 = !DIEnumerator(name: "CODE_FOR_cstoredf4", value: 1845, isUnsigned: true)
!1130 = !DIEnumerator(name: "CODE_FOR_cbranchcc4", value: 1846, isUnsigned: true)
!1131 = !DIEnumerator(name: "CODE_FOR_cstorecc4", value: 1847, isUnsigned: true)
!1132 = !DIEnumerator(name: "CODE_FOR_movsi", value: 1855, isUnsigned: true)
!1133 = !DIEnumerator(name: "CODE_FOR_movhi", value: 1856, isUnsigned: true)
!1134 = !DIEnumerator(name: "CODE_FOR_movstricthi", value: 1857, isUnsigned: true)
!1135 = !DIEnumerator(name: "CODE_FOR_movqi", value: 1858, isUnsigned: true)
!1136 = !DIEnumerator(name: "CODE_FOR_movstrictqi", value: 1859, isUnsigned: true)
!1137 = !DIEnumerator(name: "CODE_FOR_movdi", value: 1860, isUnsigned: true)
!1138 = !DIEnumerator(name: "CODE_FOR_movoi", value: 1863, isUnsigned: true)
!1139 = !DIEnumerator(name: "CODE_FOR_movti", value: 1864, isUnsigned: true)
!1140 = !DIEnumerator(name: "CODE_FOR_movcdi", value: 1866, isUnsigned: true)
!1141 = !DIEnumerator(name: "CODE_FOR_movsf", value: 1867, isUnsigned: true)
!1142 = !DIEnumerator(name: "CODE_FOR_movdf", value: 1870, isUnsigned: true)
!1143 = !DIEnumerator(name: "CODE_FOR_movxf", value: 1874, isUnsigned: true)
!1144 = !DIEnumerator(name: "CODE_FOR_movtf", value: 1877, isUnsigned: true)
!1145 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2", value: 1887, isUnsigned: true)
!1146 = !DIEnumerator(name: "CODE_FOR_zero_extendqihi2", value: 1889, isUnsigned: true)
!1147 = !DIEnumerator(name: "CODE_FOR_zero_extendqisi2", value: 1893, isUnsigned: true)
!1148 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2", value: 1897, isUnsigned: true)
!1149 = !DIEnumerator(name: "CODE_FOR_extendsidi2", value: 1900, isUnsigned: true)
!1150 = !DIEnumerator(name: "CODE_FOR_extendsfdf2", value: 1907, isUnsigned: true)
!1151 = !DIEnumerator(name: "CODE_FOR_extendsfxf2", value: 1909, isUnsigned: true)
!1152 = !DIEnumerator(name: "CODE_FOR_extenddfxf2", value: 1910, isUnsigned: true)
!1153 = !DIEnumerator(name: "CODE_FOR_truncdfsf2", value: 1911, isUnsigned: true)
!1154 = !DIEnumerator(name: "CODE_FOR_truncdfsf2_with_temp", value: 1913, isUnsigned: true)
!1155 = !DIEnumerator(name: "CODE_FOR_truncxfsf2", value: 1915, isUnsigned: true)
!1156 = !DIEnumerator(name: "CODE_FOR_truncxfdf2", value: 1916, isUnsigned: true)
!1157 = !DIEnumerator(name: "CODE_FOR_fix_truncxfdi2", value: 1921, isUnsigned: true)
!1158 = !DIEnumerator(name: "CODE_FOR_fix_truncsfdi2", value: 1922, isUnsigned: true)
!1159 = !DIEnumerator(name: "CODE_FOR_fix_truncdfdi2", value: 1923, isUnsigned: true)
!1160 = !DIEnumerator(name: "CODE_FOR_fix_truncxfsi2", value: 1924, isUnsigned: true)
!1161 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi2", value: 1925, isUnsigned: true)
!1162 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi2", value: 1926, isUnsigned: true)
!1163 = !DIEnumerator(name: "CODE_FOR_fix_truncsfhi2", value: 1927, isUnsigned: true)
!1164 = !DIEnumerator(name: "CODE_FOR_fix_truncdfhi2", value: 1928, isUnsigned: true)
!1165 = !DIEnumerator(name: "CODE_FOR_fix_truncxfhi2", value: 1929, isUnsigned: true)
!1166 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfsi2", value: 1930, isUnsigned: true)
!1167 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfsi2", value: 1931, isUnsigned: true)
!1168 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfhi2", value: 1934, isUnsigned: true)
!1169 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfhi2", value: 1935, isUnsigned: true)
!1170 = !DIEnumerator(name: "CODE_FOR_floathisf2", value: 1962, isUnsigned: true)
!1171 = !DIEnumerator(name: "CODE_FOR_floathidf2", value: 1963, isUnsigned: true)
!1172 = !DIEnumerator(name: "CODE_FOR_floathixf2", value: 1964, isUnsigned: true)
!1173 = !DIEnumerator(name: "CODE_FOR_floatsisf2", value: 1974, isUnsigned: true)
!1174 = !DIEnumerator(name: "CODE_FOR_floatdisf2", value: 1975, isUnsigned: true)
!1175 = !DIEnumerator(name: "CODE_FOR_floatsidf2", value: 1976, isUnsigned: true)
!1176 = !DIEnumerator(name: "CODE_FOR_floatdidf2", value: 1977, isUnsigned: true)
!1177 = !DIEnumerator(name: "CODE_FOR_floatsixf2", value: 1978, isUnsigned: true)
!1178 = !DIEnumerator(name: "CODE_FOR_floatdixf2", value: 1979, isUnsigned: true)
!1179 = !DIEnumerator(name: "CODE_FOR_floatunssisf2", value: 2028, isUnsigned: true)
!1180 = !DIEnumerator(name: "CODE_FOR_floatunssidf2", value: 2029, isUnsigned: true)
!1181 = !DIEnumerator(name: "CODE_FOR_floatunssixf2", value: 2030, isUnsigned: true)
!1182 = !DIEnumerator(name: "CODE_FOR_addqi3", value: 2031, isUnsigned: true)
!1183 = !DIEnumerator(name: "CODE_FOR_addhi3", value: 2032, isUnsigned: true)
!1184 = !DIEnumerator(name: "CODE_FOR_addsi3", value: 2033, isUnsigned: true)
!1185 = !DIEnumerator(name: "CODE_FOR_adddi3", value: 2034, isUnsigned: true)
!1186 = !DIEnumerator(name: "CODE_FOR_subqi3", value: 2040, isUnsigned: true)
!1187 = !DIEnumerator(name: "CODE_FOR_subhi3", value: 2041, isUnsigned: true)
!1188 = !DIEnumerator(name: "CODE_FOR_subsi3", value: 2042, isUnsigned: true)
!1189 = !DIEnumerator(name: "CODE_FOR_subdi3", value: 2043, isUnsigned: true)
!1190 = !DIEnumerator(name: "CODE_FOR_addqi3_carry", value: 2045, isUnsigned: true)
!1191 = !DIEnumerator(name: "CODE_FOR_subqi3_carry", value: 2046, isUnsigned: true)
!1192 = !DIEnumerator(name: "CODE_FOR_addhi3_carry", value: 2047, isUnsigned: true)
!1193 = !DIEnumerator(name: "CODE_FOR_subhi3_carry", value: 2048, isUnsigned: true)
!1194 = !DIEnumerator(name: "CODE_FOR_addsi3_carry", value: 2049, isUnsigned: true)
!1195 = !DIEnumerator(name: "CODE_FOR_subsi3_carry", value: 2050, isUnsigned: true)
!1196 = !DIEnumerator(name: "CODE_FOR_adddi3_carry", value: 2051, isUnsigned: true)
!1197 = !DIEnumerator(name: "CODE_FOR_subdi3_carry", value: 2052, isUnsigned: true)
!1198 = !DIEnumerator(name: "CODE_FOR_addxf3", value: 2053, isUnsigned: true)
!1199 = !DIEnumerator(name: "CODE_FOR_subxf3", value: 2054, isUnsigned: true)
!1200 = !DIEnumerator(name: "CODE_FOR_addsf3", value: 2055, isUnsigned: true)
!1201 = !DIEnumerator(name: "CODE_FOR_subsf3", value: 2056, isUnsigned: true)
!1202 = !DIEnumerator(name: "CODE_FOR_adddf3", value: 2057, isUnsigned: true)
!1203 = !DIEnumerator(name: "CODE_FOR_subdf3", value: 2058, isUnsigned: true)
!1204 = !DIEnumerator(name: "CODE_FOR_mulhi3", value: 2059, isUnsigned: true)
!1205 = !DIEnumerator(name: "CODE_FOR_mulsi3", value: 2060, isUnsigned: true)
!1206 = !DIEnumerator(name: "CODE_FOR_mulqi3", value: 2061, isUnsigned: true)
!1207 = !DIEnumerator(name: "CODE_FOR_mulsidi3", value: 2062, isUnsigned: true)
!1208 = !DIEnumerator(name: "CODE_FOR_umulsidi3", value: 2063, isUnsigned: true)
!1209 = !DIEnumerator(name: "CODE_FOR_mulqihi3", value: 2064, isUnsigned: true)
!1210 = !DIEnumerator(name: "CODE_FOR_umulqihi3", value: 2065, isUnsigned: true)
!1211 = !DIEnumerator(name: "CODE_FOR_smulsi3_highpart", value: 2066, isUnsigned: true)
!1212 = !DIEnumerator(name: "CODE_FOR_umulsi3_highpart", value: 2067, isUnsigned: true)
!1213 = !DIEnumerator(name: "CODE_FOR_mulxf3", value: 2068, isUnsigned: true)
!1214 = !DIEnumerator(name: "CODE_FOR_mulsf3", value: 2069, isUnsigned: true)
!1215 = !DIEnumerator(name: "CODE_FOR_muldf3", value: 2070, isUnsigned: true)
!1216 = !DIEnumerator(name: "CODE_FOR_divxf3", value: 2071, isUnsigned: true)
!1217 = !DIEnumerator(name: "CODE_FOR_divdf3", value: 2072, isUnsigned: true)
!1218 = !DIEnumerator(name: "CODE_FOR_divsf3", value: 2073, isUnsigned: true)
!1219 = !DIEnumerator(name: "CODE_FOR_divmodhi4", value: 2074, isUnsigned: true)
!1220 = !DIEnumerator(name: "CODE_FOR_divmodsi4", value: 2075, isUnsigned: true)
!1221 = !DIEnumerator(name: "CODE_FOR_udivmodhi4", value: 2078, isUnsigned: true)
!1222 = !DIEnumerator(name: "CODE_FOR_udivmodsi4", value: 2079, isUnsigned: true)
!1223 = !DIEnumerator(name: "CODE_FOR_testsi_ccno_1", value: 2082, isUnsigned: true)
!1224 = !DIEnumerator(name: "CODE_FOR_testqi_ccz_1", value: 2083, isUnsigned: true)
!1225 = !DIEnumerator(name: "CODE_FOR_testqi_ext_ccno_0", value: 2084, isUnsigned: true)
!1226 = !DIEnumerator(name: "CODE_FOR_andqi3", value: 2088, isUnsigned: true)
!1227 = !DIEnumerator(name: "CODE_FOR_andhi3", value: 2089, isUnsigned: true)
!1228 = !DIEnumerator(name: "CODE_FOR_andsi3", value: 2090, isUnsigned: true)
!1229 = !DIEnumerator(name: "CODE_FOR_iorqi3", value: 2096, isUnsigned: true)
!1230 = !DIEnumerator(name: "CODE_FOR_xorqi3", value: 2097, isUnsigned: true)
!1231 = !DIEnumerator(name: "CODE_FOR_iorhi3", value: 2098, isUnsigned: true)
!1232 = !DIEnumerator(name: "CODE_FOR_xorhi3", value: 2099, isUnsigned: true)
!1233 = !DIEnumerator(name: "CODE_FOR_iorsi3", value: 2100, isUnsigned: true)
!1234 = !DIEnumerator(name: "CODE_FOR_xorsi3", value: 2101, isUnsigned: true)
!1235 = !DIEnumerator(name: "CODE_FOR_xorqi_cc_ext_1", value: 2106, isUnsigned: true)
!1236 = !DIEnumerator(name: "CODE_FOR_negqi2", value: 2107, isUnsigned: true)
!1237 = !DIEnumerator(name: "CODE_FOR_neghi2", value: 2108, isUnsigned: true)
!1238 = !DIEnumerator(name: "CODE_FOR_negsi2", value: 2109, isUnsigned: true)
!1239 = !DIEnumerator(name: "CODE_FOR_negdi2", value: 2110, isUnsigned: true)
!1240 = !DIEnumerator(name: "CODE_FOR_abssf2", value: 2112, isUnsigned: true)
!1241 = !DIEnumerator(name: "CODE_FOR_negsf2", value: 2113, isUnsigned: true)
!1242 = !DIEnumerator(name: "CODE_FOR_absdf2", value: 2114, isUnsigned: true)
!1243 = !DIEnumerator(name: "CODE_FOR_negdf2", value: 2115, isUnsigned: true)
!1244 = !DIEnumerator(name: "CODE_FOR_absxf2", value: 2116, isUnsigned: true)
!1245 = !DIEnumerator(name: "CODE_FOR_negxf2", value: 2117, isUnsigned: true)
!1246 = !DIEnumerator(name: "CODE_FOR_abstf2", value: 2118, isUnsigned: true)
!1247 = !DIEnumerator(name: "CODE_FOR_negtf2", value: 2119, isUnsigned: true)
!1248 = !DIEnumerator(name: "CODE_FOR_copysignsf3", value: 2125, isUnsigned: true)
!1249 = !DIEnumerator(name: "CODE_FOR_copysigndf3", value: 2126, isUnsigned: true)
!1250 = !DIEnumerator(name: "CODE_FOR_copysigntf3", value: 2127, isUnsigned: true)
!1251 = !DIEnumerator(name: "CODE_FOR_one_cmplqi2", value: 2134, isUnsigned: true)
!1252 = !DIEnumerator(name: "CODE_FOR_one_cmplhi2", value: 2135, isUnsigned: true)
!1253 = !DIEnumerator(name: "CODE_FOR_one_cmplsi2", value: 2136, isUnsigned: true)
!1254 = !DIEnumerator(name: "CODE_FOR_ashldi3", value: 2142, isUnsigned: true)
!1255 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_1", value: 2145, isUnsigned: true)
!1256 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_2", value: 2146, isUnsigned: true)
!1257 = !DIEnumerator(name: "CODE_FOR_ashlsi3", value: 2147, isUnsigned: true)
!1258 = !DIEnumerator(name: "CODE_FOR_ashlhi3", value: 2150, isUnsigned: true)
!1259 = !DIEnumerator(name: "CODE_FOR_ashlqi3", value: 2151, isUnsigned: true)
!1260 = !DIEnumerator(name: "CODE_FOR_ashrdi3", value: 2152, isUnsigned: true)
!1261 = !DIEnumerator(name: "CODE_FOR_x86_64_shift_adj_3", value: 2153, isUnsigned: true)
!1262 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_3", value: 2156, isUnsigned: true)
!1263 = !DIEnumerator(name: "CODE_FOR_ashrsi3_31", value: 2157, isUnsigned: true)
!1264 = !DIEnumerator(name: "CODE_FOR_ashrsi3", value: 2158, isUnsigned: true)
!1265 = !DIEnumerator(name: "CODE_FOR_ashrhi3", value: 2159, isUnsigned: true)
!1266 = !DIEnumerator(name: "CODE_FOR_ashrqi3", value: 2160, isUnsigned: true)
!1267 = !DIEnumerator(name: "CODE_FOR_lshrdi3", value: 2161, isUnsigned: true)
!1268 = !DIEnumerator(name: "CODE_FOR_lshrsi3", value: 2164, isUnsigned: true)
!1269 = !DIEnumerator(name: "CODE_FOR_lshrhi3", value: 2165, isUnsigned: true)
!1270 = !DIEnumerator(name: "CODE_FOR_lshrqi3", value: 2166, isUnsigned: true)
!1271 = !DIEnumerator(name: "CODE_FOR_rotldi3", value: 2167, isUnsigned: true)
!1272 = !DIEnumerator(name: "CODE_FOR_rotlsi3", value: 2169, isUnsigned: true)
!1273 = !DIEnumerator(name: "CODE_FOR_rotlhi3", value: 2170, isUnsigned: true)
!1274 = !DIEnumerator(name: "CODE_FOR_rotlqi3", value: 2172, isUnsigned: true)
!1275 = !DIEnumerator(name: "CODE_FOR_rotrdi3", value: 2173, isUnsigned: true)
!1276 = !DIEnumerator(name: "CODE_FOR_rotrsi3", value: 2175, isUnsigned: true)
!1277 = !DIEnumerator(name: "CODE_FOR_rotrhi3", value: 2176, isUnsigned: true)
!1278 = !DIEnumerator(name: "CODE_FOR_rotrqi3", value: 2178, isUnsigned: true)
!1279 = !DIEnumerator(name: "CODE_FOR_extv", value: 2179, isUnsigned: true)
!1280 = !DIEnumerator(name: "CODE_FOR_extzv", value: 2180, isUnsigned: true)
!1281 = !DIEnumerator(name: "CODE_FOR_insv", value: 2181, isUnsigned: true)
!1282 = !DIEnumerator(name: "CODE_FOR_indirect_jump", value: 2200, isUnsigned: true)
!1283 = !DIEnumerator(name: "CODE_FOR_tablejump", value: 2201, isUnsigned: true)
!1284 = !DIEnumerator(name: "CODE_FOR_call_pop", value: 2204, isUnsigned: true)
!1285 = !DIEnumerator(name: "CODE_FOR_call", value: 2205, isUnsigned: true)
!1286 = !DIEnumerator(name: "CODE_FOR_sibcall", value: 2206, isUnsigned: true)
!1287 = !DIEnumerator(name: "CODE_FOR_call_value_pop", value: 2207, isUnsigned: true)
!1288 = !DIEnumerator(name: "CODE_FOR_call_value", value: 2208, isUnsigned: true)
!1289 = !DIEnumerator(name: "CODE_FOR_sibcall_value", value: 2209, isUnsigned: true)
!1290 = !DIEnumerator(name: "CODE_FOR_untyped_call", value: 2210, isUnsigned: true)
!1291 = !DIEnumerator(name: "CODE_FOR_memory_blockage", value: 2211, isUnsigned: true)
!1292 = !DIEnumerator(name: "CODE_FOR_return", value: 2212, isUnsigned: true)
!1293 = !DIEnumerator(name: "CODE_FOR_prologue", value: 2213, isUnsigned: true)
!1294 = !DIEnumerator(name: "CODE_FOR_epilogue", value: 2214, isUnsigned: true)
!1295 = !DIEnumerator(name: "CODE_FOR_sibcall_epilogue", value: 2215, isUnsigned: true)
!1296 = !DIEnumerator(name: "CODE_FOR_eh_return", value: 2216, isUnsigned: true)
!1297 = !DIEnumerator(name: "CODE_FOR_ffssi2", value: 2218, isUnsigned: true)
!1298 = !DIEnumerator(name: "CODE_FOR_ffs_cmove", value: 2219, isUnsigned: true)
!1299 = !DIEnumerator(name: "CODE_FOR_clzsi2", value: 2221, isUnsigned: true)
!1300 = !DIEnumerator(name: "CODE_FOR_bswapsi2", value: 2222, isUnsigned: true)
!1301 = !DIEnumerator(name: "CODE_FOR_clzhi2", value: 2223, isUnsigned: true)
!1302 = !DIEnumerator(name: "CODE_FOR_paritydi2", value: 2224, isUnsigned: true)
!1303 = !DIEnumerator(name: "CODE_FOR_paritysi2", value: 2226, isUnsigned: true)
!1304 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_32", value: 2228, isUnsigned: true)
!1305 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_64", value: 2229, isUnsigned: true)
!1306 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_32", value: 2230, isUnsigned: true)
!1307 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_64", value: 2231, isUnsigned: true)
!1308 = !DIEnumerator(name: "CODE_FOR_tls_dynamic_gnu2_32", value: 2233, isUnsigned: true)
!1309 = !DIEnumerator(name: "CODE_FOR_rsqrtsf2", value: 2240, isUnsigned: true)
!1310 = !DIEnumerator(name: "CODE_FOR_sqrtsf2", value: 2241, isUnsigned: true)
!1311 = !DIEnumerator(name: "CODE_FOR_sqrtdf2", value: 2242, isUnsigned: true)
!1312 = !DIEnumerator(name: "CODE_FOR_fmodxf3", value: 2243, isUnsigned: true)
!1313 = !DIEnumerator(name: "CODE_FOR_fmodsf3", value: 2244, isUnsigned: true)
!1314 = !DIEnumerator(name: "CODE_FOR_fmoddf3", value: 2245, isUnsigned: true)
!1315 = !DIEnumerator(name: "CODE_FOR_remainderxf3", value: 2246, isUnsigned: true)
!1316 = !DIEnumerator(name: "CODE_FOR_remaindersf3", value: 2247, isUnsigned: true)
!1317 = !DIEnumerator(name: "CODE_FOR_remainderdf3", value: 2248, isUnsigned: true)
!1318 = !DIEnumerator(name: "CODE_FOR_sincossf3", value: 2255, isUnsigned: true)
!1319 = !DIEnumerator(name: "CODE_FOR_sincosdf3", value: 2256, isUnsigned: true)
!1320 = !DIEnumerator(name: "CODE_FOR_tanxf2", value: 2257, isUnsigned: true)
!1321 = !DIEnumerator(name: "CODE_FOR_tansf2", value: 2258, isUnsigned: true)
!1322 = !DIEnumerator(name: "CODE_FOR_tandf2", value: 2259, isUnsigned: true)
!1323 = !DIEnumerator(name: "CODE_FOR_atan2xf3", value: 2260, isUnsigned: true)
!1324 = !DIEnumerator(name: "CODE_FOR_atan2sf3", value: 2261, isUnsigned: true)
!1325 = !DIEnumerator(name: "CODE_FOR_atan2df3", value: 2262, isUnsigned: true)
!1326 = !DIEnumerator(name: "CODE_FOR_atanxf2", value: 2263, isUnsigned: true)
!1327 = !DIEnumerator(name: "CODE_FOR_atansf2", value: 2264, isUnsigned: true)
!1328 = !DIEnumerator(name: "CODE_FOR_atandf2", value: 2265, isUnsigned: true)
!1329 = !DIEnumerator(name: "CODE_FOR_asinxf2", value: 2266, isUnsigned: true)
!1330 = !DIEnumerator(name: "CODE_FOR_asinsf2", value: 2267, isUnsigned: true)
!1331 = !DIEnumerator(name: "CODE_FOR_asindf2", value: 2268, isUnsigned: true)
!1332 = !DIEnumerator(name: "CODE_FOR_acosxf2", value: 2269, isUnsigned: true)
!1333 = !DIEnumerator(name: "CODE_FOR_acossf2", value: 2270, isUnsigned: true)
!1334 = !DIEnumerator(name: "CODE_FOR_acosdf2", value: 2271, isUnsigned: true)
!1335 = !DIEnumerator(name: "CODE_FOR_logxf2", value: 2272, isUnsigned: true)
!1336 = !DIEnumerator(name: "CODE_FOR_logsf2", value: 2273, isUnsigned: true)
!1337 = !DIEnumerator(name: "CODE_FOR_logdf2", value: 2274, isUnsigned: true)
!1338 = !DIEnumerator(name: "CODE_FOR_log10xf2", value: 2275, isUnsigned: true)
!1339 = !DIEnumerator(name: "CODE_FOR_log10sf2", value: 2276, isUnsigned: true)
!1340 = !DIEnumerator(name: "CODE_FOR_log10df2", value: 2277, isUnsigned: true)
!1341 = !DIEnumerator(name: "CODE_FOR_log2xf2", value: 2278, isUnsigned: true)
!1342 = !DIEnumerator(name: "CODE_FOR_log2sf2", value: 2279, isUnsigned: true)
!1343 = !DIEnumerator(name: "CODE_FOR_log2df2", value: 2280, isUnsigned: true)
!1344 = !DIEnumerator(name: "CODE_FOR_log1pxf2", value: 2281, isUnsigned: true)
!1345 = !DIEnumerator(name: "CODE_FOR_log1psf2", value: 2282, isUnsigned: true)
!1346 = !DIEnumerator(name: "CODE_FOR_log1pdf2", value: 2283, isUnsigned: true)
!1347 = !DIEnumerator(name: "CODE_FOR_logbxf2", value: 2284, isUnsigned: true)
!1348 = !DIEnumerator(name: "CODE_FOR_logbsf2", value: 2285, isUnsigned: true)
!1349 = !DIEnumerator(name: "CODE_FOR_logbdf2", value: 2286, isUnsigned: true)
!1350 = !DIEnumerator(name: "CODE_FOR_ilogbxf2", value: 2287, isUnsigned: true)
!1351 = !DIEnumerator(name: "CODE_FOR_ilogbsf2", value: 2288, isUnsigned: true)
!1352 = !DIEnumerator(name: "CODE_FOR_ilogbdf2", value: 2289, isUnsigned: true)
!1353 = !DIEnumerator(name: "CODE_FOR_expNcorexf3", value: 2290, isUnsigned: true)
!1354 = !DIEnumerator(name: "CODE_FOR_expxf2", value: 2291, isUnsigned: true)
!1355 = !DIEnumerator(name: "CODE_FOR_expsf2", value: 2292, isUnsigned: true)
!1356 = !DIEnumerator(name: "CODE_FOR_expdf2", value: 2293, isUnsigned: true)
!1357 = !DIEnumerator(name: "CODE_FOR_exp10xf2", value: 2294, isUnsigned: true)
!1358 = !DIEnumerator(name: "CODE_FOR_exp10sf2", value: 2295, isUnsigned: true)
!1359 = !DIEnumerator(name: "CODE_FOR_exp10df2", value: 2296, isUnsigned: true)
!1360 = !DIEnumerator(name: "CODE_FOR_exp2xf2", value: 2297, isUnsigned: true)
!1361 = !DIEnumerator(name: "CODE_FOR_exp2sf2", value: 2298, isUnsigned: true)
!1362 = !DIEnumerator(name: "CODE_FOR_exp2df2", value: 2299, isUnsigned: true)
!1363 = !DIEnumerator(name: "CODE_FOR_expm1xf2", value: 2300, isUnsigned: true)
!1364 = !DIEnumerator(name: "CODE_FOR_expm1sf2", value: 2301, isUnsigned: true)
!1365 = !DIEnumerator(name: "CODE_FOR_expm1df2", value: 2302, isUnsigned: true)
!1366 = !DIEnumerator(name: "CODE_FOR_ldexpxf3", value: 2303, isUnsigned: true)
!1367 = !DIEnumerator(name: "CODE_FOR_ldexpsf3", value: 2304, isUnsigned: true)
!1368 = !DIEnumerator(name: "CODE_FOR_ldexpdf3", value: 2305, isUnsigned: true)
!1369 = !DIEnumerator(name: "CODE_FOR_scalbxf3", value: 2306, isUnsigned: true)
!1370 = !DIEnumerator(name: "CODE_FOR_scalbsf3", value: 2307, isUnsigned: true)
!1371 = !DIEnumerator(name: "CODE_FOR_scalbdf3", value: 2308, isUnsigned: true)
!1372 = !DIEnumerator(name: "CODE_FOR_significandxf2", value: 2309, isUnsigned: true)
!1373 = !DIEnumerator(name: "CODE_FOR_significandsf2", value: 2310, isUnsigned: true)
!1374 = !DIEnumerator(name: "CODE_FOR_significanddf2", value: 2311, isUnsigned: true)
!1375 = !DIEnumerator(name: "CODE_FOR_rintsf2", value: 2312, isUnsigned: true)
!1376 = !DIEnumerator(name: "CODE_FOR_rintdf2", value: 2313, isUnsigned: true)
!1377 = !DIEnumerator(name: "CODE_FOR_roundsf2", value: 2314, isUnsigned: true)
!1378 = !DIEnumerator(name: "CODE_FOR_rounddf2", value: 2315, isUnsigned: true)
!1379 = !DIEnumerator(name: "CODE_FOR_lrintxfhi2", value: 2325, isUnsigned: true)
!1380 = !DIEnumerator(name: "CODE_FOR_lrintxfsi2", value: 2326, isUnsigned: true)
!1381 = !DIEnumerator(name: "CODE_FOR_lrintxfdi2", value: 2327, isUnsigned: true)
!1382 = !DIEnumerator(name: "CODE_FOR_lrintsfsi2", value: 2328, isUnsigned: true)
!1383 = !DIEnumerator(name: "CODE_FOR_lrintdfsi2", value: 2329, isUnsigned: true)
!1384 = !DIEnumerator(name: "CODE_FOR_lroundsfsi2", value: 2330, isUnsigned: true)
!1385 = !DIEnumerator(name: "CODE_FOR_lrounddfsi2", value: 2331, isUnsigned: true)
!1386 = !DIEnumerator(name: "CODE_FOR_floorxf2", value: 2333, isUnsigned: true)
!1387 = !DIEnumerator(name: "CODE_FOR_floorsf2", value: 2334, isUnsigned: true)
!1388 = !DIEnumerator(name: "CODE_FOR_floordf2", value: 2335, isUnsigned: true)
!1389 = !DIEnumerator(name: "CODE_FOR_lfloorxfhi2", value: 2345, isUnsigned: true)
!1390 = !DIEnumerator(name: "CODE_FOR_lfloorxfsi2", value: 2346, isUnsigned: true)
!1391 = !DIEnumerator(name: "CODE_FOR_lfloorxfdi2", value: 2347, isUnsigned: true)
!1392 = !DIEnumerator(name: "CODE_FOR_lfloorsfsi2", value: 2348, isUnsigned: true)
!1393 = !DIEnumerator(name: "CODE_FOR_lfloordfsi2", value: 2349, isUnsigned: true)
!1394 = !DIEnumerator(name: "CODE_FOR_ceilxf2", value: 2351, isUnsigned: true)
!1395 = !DIEnumerator(name: "CODE_FOR_ceilsf2", value: 2352, isUnsigned: true)
!1396 = !DIEnumerator(name: "CODE_FOR_ceildf2", value: 2353, isUnsigned: true)
!1397 = !DIEnumerator(name: "CODE_FOR_lceilxfhi2", value: 2363, isUnsigned: true)
!1398 = !DIEnumerator(name: "CODE_FOR_lceilxfsi2", value: 2364, isUnsigned: true)
!1399 = !DIEnumerator(name: "CODE_FOR_lceilxfdi2", value: 2365, isUnsigned: true)
!1400 = !DIEnumerator(name: "CODE_FOR_lceilsfsi2", value: 2366, isUnsigned: true)
!1401 = !DIEnumerator(name: "CODE_FOR_lceildfsi2", value: 2367, isUnsigned: true)
!1402 = !DIEnumerator(name: "CODE_FOR_btruncxf2", value: 2369, isUnsigned: true)
!1403 = !DIEnumerator(name: "CODE_FOR_btruncsf2", value: 2370, isUnsigned: true)
!1404 = !DIEnumerator(name: "CODE_FOR_btruncdf2", value: 2371, isUnsigned: true)
!1405 = !DIEnumerator(name: "CODE_FOR_nearbyintxf2", value: 2373, isUnsigned: true)
!1406 = !DIEnumerator(name: "CODE_FOR_nearbyintsf2", value: 2374, isUnsigned: true)
!1407 = !DIEnumerator(name: "CODE_FOR_nearbyintdf2", value: 2375, isUnsigned: true)
!1408 = !DIEnumerator(name: "CODE_FOR_isinfxf2", value: 2378, isUnsigned: true)
!1409 = !DIEnumerator(name: "CODE_FOR_isinfsf2", value: 2379, isUnsigned: true)
!1410 = !DIEnumerator(name: "CODE_FOR_isinfdf2", value: 2380, isUnsigned: true)
!1411 = !DIEnumerator(name: "CODE_FOR_signbitsf2", value: 2381, isUnsigned: true)
!1412 = !DIEnumerator(name: "CODE_FOR_signbitdf2", value: 2382, isUnsigned: true)
!1413 = !DIEnumerator(name: "CODE_FOR_signbitxf2", value: 2383, isUnsigned: true)
!1414 = !DIEnumerator(name: "CODE_FOR_movmemsi", value: 2384, isUnsigned: true)
!1415 = !DIEnumerator(name: "CODE_FOR_strmov", value: 2385, isUnsigned: true)
!1416 = !DIEnumerator(name: "CODE_FOR_strmov_singleop", value: 2386, isUnsigned: true)
!1417 = !DIEnumerator(name: "CODE_FOR_rep_mov", value: 2387, isUnsigned: true)
!1418 = !DIEnumerator(name: "CODE_FOR_setmemsi", value: 2388, isUnsigned: true)
!1419 = !DIEnumerator(name: "CODE_FOR_strset", value: 2389, isUnsigned: true)
!1420 = !DIEnumerator(name: "CODE_FOR_strset_singleop", value: 2390, isUnsigned: true)
!1421 = !DIEnumerator(name: "CODE_FOR_rep_stos", value: 2391, isUnsigned: true)
!1422 = !DIEnumerator(name: "CODE_FOR_cmpstrnsi", value: 2392, isUnsigned: true)
!1423 = !DIEnumerator(name: "CODE_FOR_cmpintqi", value: 2393, isUnsigned: true)
!1424 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_nz_1", value: 2394, isUnsigned: true)
!1425 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_1", value: 2395, isUnsigned: true)
!1426 = !DIEnumerator(name: "CODE_FOR_strlensi", value: 2396, isUnsigned: true)
!1427 = !DIEnumerator(name: "CODE_FOR_strlendi", value: 2397, isUnsigned: true)
!1428 = !DIEnumerator(name: "CODE_FOR_strlenqi_1", value: 2398, isUnsigned: true)
!1429 = !DIEnumerator(name: "CODE_FOR_movqicc", value: 2401, isUnsigned: true)
!1430 = !DIEnumerator(name: "CODE_FOR_movhicc", value: 2402, isUnsigned: true)
!1431 = !DIEnumerator(name: "CODE_FOR_movsicc", value: 2403, isUnsigned: true)
!1432 = !DIEnumerator(name: "CODE_FOR_x86_movsicc_0_m1", value: 2404, isUnsigned: true)
!1433 = !DIEnumerator(name: "CODE_FOR_movsfcc", value: 2406, isUnsigned: true)
!1434 = !DIEnumerator(name: "CODE_FOR_movdfcc", value: 2407, isUnsigned: true)
!1435 = !DIEnumerator(name: "CODE_FOR_movxfcc", value: 2408, isUnsigned: true)
!1436 = !DIEnumerator(name: "CODE_FOR_addqicc", value: 2411, isUnsigned: true)
!1437 = !DIEnumerator(name: "CODE_FOR_addhicc", value: 2412, isUnsigned: true)
!1438 = !DIEnumerator(name: "CODE_FOR_addsicc", value: 2413, isUnsigned: true)
!1439 = !DIEnumerator(name: "CODE_FOR_allocate_stack", value: 2414, isUnsigned: true)
!1440 = !DIEnumerator(name: "CODE_FOR_probe_stack", value: 2415, isUnsigned: true)
!1441 = !DIEnumerator(name: "CODE_FOR_builtin_setjmp_receiver", value: 2416, isUnsigned: true)
!1442 = !DIEnumerator(name: "CODE_FOR_prefetch", value: 2486, isUnsigned: true)
!1443 = !DIEnumerator(name: "CODE_FOR_stack_protect_set", value: 2487, isUnsigned: true)
!1444 = !DIEnumerator(name: "CODE_FOR_stack_protect_test", value: 2488, isUnsigned: true)
!1445 = !DIEnumerator(name: "CODE_FOR_rdpmc", value: 2489, isUnsigned: true)
!1446 = !DIEnumerator(name: "CODE_FOR_rdtsc", value: 2490, isUnsigned: true)
!1447 = !DIEnumerator(name: "CODE_FOR_rdtscp", value: 2491, isUnsigned: true)
!1448 = !DIEnumerator(name: "CODE_FOR_lwp_llwpcb", value: 2492, isUnsigned: true)
!1449 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcb", value: 2493, isUnsigned: true)
!1450 = !DIEnumerator(name: "CODE_FOR_lwp_lwpvalsi3", value: 2494, isUnsigned: true)
!1451 = !DIEnumerator(name: "CODE_FOR_lwp_lwpinssi3", value: 2495, isUnsigned: true)
!1452 = !DIEnumerator(name: "CODE_FOR_movv8qi", value: 2496, isUnsigned: true)
!1453 = !DIEnumerator(name: "CODE_FOR_movv4hi", value: 2497, isUnsigned: true)
!1454 = !DIEnumerator(name: "CODE_FOR_movv2si", value: 2498, isUnsigned: true)
!1455 = !DIEnumerator(name: "CODE_FOR_movv1di", value: 2499, isUnsigned: true)
!1456 = !DIEnumerator(name: "CODE_FOR_movv2sf", value: 2500, isUnsigned: true)
!1457 = !DIEnumerator(name: "CODE_FOR_pushv8qi1", value: 2506, isUnsigned: true)
!1458 = !DIEnumerator(name: "CODE_FOR_pushv4hi1", value: 2507, isUnsigned: true)
!1459 = !DIEnumerator(name: "CODE_FOR_pushv2si1", value: 2508, isUnsigned: true)
!1460 = !DIEnumerator(name: "CODE_FOR_pushv1di1", value: 2509, isUnsigned: true)
!1461 = !DIEnumerator(name: "CODE_FOR_pushv2sf1", value: 2510, isUnsigned: true)
!1462 = !DIEnumerator(name: "CODE_FOR_movmisalignv8qi", value: 2511, isUnsigned: true)
!1463 = !DIEnumerator(name: "CODE_FOR_movmisalignv4hi", value: 2512, isUnsigned: true)
!1464 = !DIEnumerator(name: "CODE_FOR_movmisalignv2si", value: 2513, isUnsigned: true)
!1465 = !DIEnumerator(name: "CODE_FOR_movmisalignv1di", value: 2514, isUnsigned: true)
!1466 = !DIEnumerator(name: "CODE_FOR_movmisalignv2sf", value: 2515, isUnsigned: true)
!1467 = !DIEnumerator(name: "CODE_FOR_mmx_addv2sf3", value: 2516, isUnsigned: true)
!1468 = !DIEnumerator(name: "CODE_FOR_mmx_subv2sf3", value: 2517, isUnsigned: true)
!1469 = !DIEnumerator(name: "CODE_FOR_mmx_subrv2sf3", value: 2518, isUnsigned: true)
!1470 = !DIEnumerator(name: "CODE_FOR_mmx_mulv2sf3", value: 2519, isUnsigned: true)
!1471 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv2sf3", value: 2520, isUnsigned: true)
!1472 = !DIEnumerator(name: "CODE_FOR_mmx_sminv2sf3", value: 2521, isUnsigned: true)
!1473 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2sf3", value: 2522, isUnsigned: true)
!1474 = !DIEnumerator(name: "CODE_FOR_vec_setv2sf", value: 2523, isUnsigned: true)
!1475 = !DIEnumerator(name: "CODE_FOR_vec_extractv2sf", value: 2526, isUnsigned: true)
!1476 = !DIEnumerator(name: "CODE_FOR_vec_initv2sf", value: 2527, isUnsigned: true)
!1477 = !DIEnumerator(name: "CODE_FOR_mmx_addv8qi3", value: 2528, isUnsigned: true)
!1478 = !DIEnumerator(name: "CODE_FOR_mmx_subv8qi3", value: 2529, isUnsigned: true)
!1479 = !DIEnumerator(name: "CODE_FOR_mmx_addv4hi3", value: 2530, isUnsigned: true)
!1480 = !DIEnumerator(name: "CODE_FOR_mmx_subv4hi3", value: 2531, isUnsigned: true)
!1481 = !DIEnumerator(name: "CODE_FOR_mmx_addv2si3", value: 2532, isUnsigned: true)
!1482 = !DIEnumerator(name: "CODE_FOR_mmx_subv2si3", value: 2533, isUnsigned: true)
!1483 = !DIEnumerator(name: "CODE_FOR_mmx_addv1di3", value: 2534, isUnsigned: true)
!1484 = !DIEnumerator(name: "CODE_FOR_mmx_subv1di3", value: 2535, isUnsigned: true)
!1485 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv8qi3", value: 2536, isUnsigned: true)
!1486 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv8qi3", value: 2537, isUnsigned: true)
!1487 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv8qi3", value: 2538, isUnsigned: true)
!1488 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv8qi3", value: 2539, isUnsigned: true)
!1489 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv4hi3", value: 2540, isUnsigned: true)
!1490 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv4hi3", value: 2541, isUnsigned: true)
!1491 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv4hi3", value: 2542, isUnsigned: true)
!1492 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv4hi3", value: 2543, isUnsigned: true)
!1493 = !DIEnumerator(name: "CODE_FOR_mmx_mulv4hi3", value: 2544, isUnsigned: true)
!1494 = !DIEnumerator(name: "CODE_FOR_mmx_smulv4hi3_highpart", value: 2545, isUnsigned: true)
!1495 = !DIEnumerator(name: "CODE_FOR_mmx_umulv4hi3_highpart", value: 2546, isUnsigned: true)
!1496 = !DIEnumerator(name: "CODE_FOR_mmx_pmaddwd", value: 2547, isUnsigned: true)
!1497 = !DIEnumerator(name: "CODE_FOR_mmx_pmulhrwv4hi3", value: 2548, isUnsigned: true)
!1498 = !DIEnumerator(name: "CODE_FOR_sse2_umulv1siv1di3", value: 2549, isUnsigned: true)
!1499 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv4hi3", value: 2550, isUnsigned: true)
!1500 = !DIEnumerator(name: "CODE_FOR_mmx_sminv4hi3", value: 2551, isUnsigned: true)
!1501 = !DIEnumerator(name: "CODE_FOR_mmx_umaxv8qi3", value: 2552, isUnsigned: true)
!1502 = !DIEnumerator(name: "CODE_FOR_mmx_uminv8qi3", value: 2553, isUnsigned: true)
!1503 = !DIEnumerator(name: "CODE_FOR_mmx_eqv8qi3", value: 2554, isUnsigned: true)
!1504 = !DIEnumerator(name: "CODE_FOR_mmx_eqv4hi3", value: 2555, isUnsigned: true)
!1505 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2si3", value: 2556, isUnsigned: true)
!1506 = !DIEnumerator(name: "CODE_FOR_mmx_andv8qi3", value: 2557, isUnsigned: true)
!1507 = !DIEnumerator(name: "CODE_FOR_mmx_iorv8qi3", value: 2558, isUnsigned: true)
!1508 = !DIEnumerator(name: "CODE_FOR_mmx_xorv8qi3", value: 2559, isUnsigned: true)
!1509 = !DIEnumerator(name: "CODE_FOR_mmx_andv4hi3", value: 2560, isUnsigned: true)
!1510 = !DIEnumerator(name: "CODE_FOR_mmx_iorv4hi3", value: 2561, isUnsigned: true)
!1511 = !DIEnumerator(name: "CODE_FOR_mmx_xorv4hi3", value: 2562, isUnsigned: true)
!1512 = !DIEnumerator(name: "CODE_FOR_mmx_andv2si3", value: 2563, isUnsigned: true)
!1513 = !DIEnumerator(name: "CODE_FOR_mmx_iorv2si3", value: 2564, isUnsigned: true)
!1514 = !DIEnumerator(name: "CODE_FOR_mmx_xorv2si3", value: 2565, isUnsigned: true)
!1515 = !DIEnumerator(name: "CODE_FOR_mmx_pinsrw", value: 2566, isUnsigned: true)
!1516 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw", value: 2567, isUnsigned: true)
!1517 = !DIEnumerator(name: "CODE_FOR_vec_setv2si", value: 2568, isUnsigned: true)
!1518 = !DIEnumerator(name: "CODE_FOR_vec_extractv2si", value: 2571, isUnsigned: true)
!1519 = !DIEnumerator(name: "CODE_FOR_vec_initv2si", value: 2572, isUnsigned: true)
!1520 = !DIEnumerator(name: "CODE_FOR_vec_setv4hi", value: 2573, isUnsigned: true)
!1521 = !DIEnumerator(name: "CODE_FOR_vec_extractv4hi", value: 2574, isUnsigned: true)
!1522 = !DIEnumerator(name: "CODE_FOR_vec_initv4hi", value: 2575, isUnsigned: true)
!1523 = !DIEnumerator(name: "CODE_FOR_vec_setv8qi", value: 2576, isUnsigned: true)
!1524 = !DIEnumerator(name: "CODE_FOR_vec_extractv8qi", value: 2577, isUnsigned: true)
!1525 = !DIEnumerator(name: "CODE_FOR_vec_initv8qi", value: 2578, isUnsigned: true)
!1526 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv8qi3", value: 2579, isUnsigned: true)
!1527 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv4hi3", value: 2580, isUnsigned: true)
!1528 = !DIEnumerator(name: "CODE_FOR_mmx_maskmovq", value: 2581, isUnsigned: true)
!1529 = !DIEnumerator(name: "CODE_FOR_mmx_emms", value: 2582, isUnsigned: true)
!1530 = !DIEnumerator(name: "CODE_FOR_mmx_femms", value: 2583, isUnsigned: true)
!1531 = !DIEnumerator(name: "CODE_FOR_movv32qi", value: 2584, isUnsigned: true)
!1532 = !DIEnumerator(name: "CODE_FOR_movv16hi", value: 2585, isUnsigned: true)
!1533 = !DIEnumerator(name: "CODE_FOR_movv8si", value: 2586, isUnsigned: true)
!1534 = !DIEnumerator(name: "CODE_FOR_movv4di", value: 2587, isUnsigned: true)
!1535 = !DIEnumerator(name: "CODE_FOR_movv8sf", value: 2588, isUnsigned: true)
!1536 = !DIEnumerator(name: "CODE_FOR_movv4df", value: 2589, isUnsigned: true)
!1537 = !DIEnumerator(name: "CODE_FOR_movv16qi", value: 2590, isUnsigned: true)
!1538 = !DIEnumerator(name: "CODE_FOR_movv8hi", value: 2591, isUnsigned: true)
!1539 = !DIEnumerator(name: "CODE_FOR_movv4si", value: 2592, isUnsigned: true)
!1540 = !DIEnumerator(name: "CODE_FOR_movv2di", value: 2593, isUnsigned: true)
!1541 = !DIEnumerator(name: "CODE_FOR_movv1ti", value: 2594, isUnsigned: true)
!1542 = !DIEnumerator(name: "CODE_FOR_movv4sf", value: 2595, isUnsigned: true)
!1543 = !DIEnumerator(name: "CODE_FOR_movv2df", value: 2596, isUnsigned: true)
!1544 = !DIEnumerator(name: "CODE_FOR_pushv32qi1", value: 2600, isUnsigned: true)
!1545 = !DIEnumerator(name: "CODE_FOR_pushv16hi1", value: 2601, isUnsigned: true)
!1546 = !DIEnumerator(name: "CODE_FOR_pushv8si1", value: 2602, isUnsigned: true)
!1547 = !DIEnumerator(name: "CODE_FOR_pushv4di1", value: 2603, isUnsigned: true)
!1548 = !DIEnumerator(name: "CODE_FOR_pushv8sf1", value: 2604, isUnsigned: true)
!1549 = !DIEnumerator(name: "CODE_FOR_pushv4df1", value: 2605, isUnsigned: true)
!1550 = !DIEnumerator(name: "CODE_FOR_pushv16qi1", value: 2606, isUnsigned: true)
!1551 = !DIEnumerator(name: "CODE_FOR_pushv8hi1", value: 2607, isUnsigned: true)
!1552 = !DIEnumerator(name: "CODE_FOR_pushv4si1", value: 2608, isUnsigned: true)
!1553 = !DIEnumerator(name: "CODE_FOR_pushv2di1", value: 2609, isUnsigned: true)
!1554 = !DIEnumerator(name: "CODE_FOR_pushv1ti1", value: 2610, isUnsigned: true)
!1555 = !DIEnumerator(name: "CODE_FOR_pushv4sf1", value: 2611, isUnsigned: true)
!1556 = !DIEnumerator(name: "CODE_FOR_pushv2df1", value: 2612, isUnsigned: true)
!1557 = !DIEnumerator(name: "CODE_FOR_movmisalignv32qi", value: 2613, isUnsigned: true)
!1558 = !DIEnumerator(name: "CODE_FOR_movmisalignv16hi", value: 2614, isUnsigned: true)
!1559 = !DIEnumerator(name: "CODE_FOR_movmisalignv8si", value: 2615, isUnsigned: true)
!1560 = !DIEnumerator(name: "CODE_FOR_movmisalignv4di", value: 2616, isUnsigned: true)
!1561 = !DIEnumerator(name: "CODE_FOR_movmisalignv8sf", value: 2617, isUnsigned: true)
!1562 = !DIEnumerator(name: "CODE_FOR_movmisalignv4df", value: 2618, isUnsigned: true)
!1563 = !DIEnumerator(name: "CODE_FOR_movmisalignv16qi", value: 2619, isUnsigned: true)
!1564 = !DIEnumerator(name: "CODE_FOR_movmisalignv8hi", value: 2620, isUnsigned: true)
!1565 = !DIEnumerator(name: "CODE_FOR_movmisalignv4si", value: 2621, isUnsigned: true)
!1566 = !DIEnumerator(name: "CODE_FOR_movmisalignv2di", value: 2622, isUnsigned: true)
!1567 = !DIEnumerator(name: "CODE_FOR_movmisalignv1ti", value: 2623, isUnsigned: true)
!1568 = !DIEnumerator(name: "CODE_FOR_movmisalignv4sf", value: 2624, isUnsigned: true)
!1569 = !DIEnumerator(name: "CODE_FOR_movmisalignv2df", value: 2625, isUnsigned: true)
!1570 = !DIEnumerator(name: "CODE_FOR_storentv4sf", value: 2626, isUnsigned: true)
!1571 = !DIEnumerator(name: "CODE_FOR_storentv2df", value: 2627, isUnsigned: true)
!1572 = !DIEnumerator(name: "CODE_FOR_storentsf", value: 2628, isUnsigned: true)
!1573 = !DIEnumerator(name: "CODE_FOR_storentdf", value: 2629, isUnsigned: true)
!1574 = !DIEnumerator(name: "CODE_FOR_storentv2di", value: 2630, isUnsigned: true)
!1575 = !DIEnumerator(name: "CODE_FOR_storentsi", value: 2631, isUnsigned: true)
!1576 = !DIEnumerator(name: "CODE_FOR_absv4sf2", value: 2632, isUnsigned: true)
!1577 = !DIEnumerator(name: "CODE_FOR_negv4sf2", value: 2633, isUnsigned: true)
!1578 = !DIEnumerator(name: "CODE_FOR_absv2df2", value: 2634, isUnsigned: true)
!1579 = !DIEnumerator(name: "CODE_FOR_negv2df2", value: 2635, isUnsigned: true)
!1580 = !DIEnumerator(name: "CODE_FOR_addv8sf3", value: 2636, isUnsigned: true)
!1581 = !DIEnumerator(name: "CODE_FOR_subv8sf3", value: 2637, isUnsigned: true)
!1582 = !DIEnumerator(name: "CODE_FOR_addv4df3", value: 2638, isUnsigned: true)
!1583 = !DIEnumerator(name: "CODE_FOR_subv4df3", value: 2639, isUnsigned: true)
!1584 = !DIEnumerator(name: "CODE_FOR_addv4sf3", value: 2640, isUnsigned: true)
!1585 = !DIEnumerator(name: "CODE_FOR_subv4sf3", value: 2641, isUnsigned: true)
!1586 = !DIEnumerator(name: "CODE_FOR_addv2df3", value: 2642, isUnsigned: true)
!1587 = !DIEnumerator(name: "CODE_FOR_subv2df3", value: 2643, isUnsigned: true)
!1588 = !DIEnumerator(name: "CODE_FOR_mulv8sf3", value: 2644, isUnsigned: true)
!1589 = !DIEnumerator(name: "CODE_FOR_mulv4df3", value: 2645, isUnsigned: true)
!1590 = !DIEnumerator(name: "CODE_FOR_mulv4sf3", value: 2646, isUnsigned: true)
!1591 = !DIEnumerator(name: "CODE_FOR_mulv2df3", value: 2647, isUnsigned: true)
!1592 = !DIEnumerator(name: "CODE_FOR_divv8sf3", value: 2648, isUnsigned: true)
!1593 = !DIEnumerator(name: "CODE_FOR_divv4df3", value: 2649, isUnsigned: true)
!1594 = !DIEnumerator(name: "CODE_FOR_divv4sf3", value: 2650, isUnsigned: true)
!1595 = !DIEnumerator(name: "CODE_FOR_divv2df3", value: 2651, isUnsigned: true)
!1596 = !DIEnumerator(name: "CODE_FOR_sqrtv8sf2", value: 2652, isUnsigned: true)
!1597 = !DIEnumerator(name: "CODE_FOR_sqrtv4sf2", value: 2653, isUnsigned: true)
!1598 = !DIEnumerator(name: "CODE_FOR_rsqrtv8sf2", value: 2654, isUnsigned: true)
!1599 = !DIEnumerator(name: "CODE_FOR_rsqrtv4sf2", value: 2655, isUnsigned: true)
!1600 = !DIEnumerator(name: "CODE_FOR_smaxv8sf3", value: 2656, isUnsigned: true)
!1601 = !DIEnumerator(name: "CODE_FOR_sminv8sf3", value: 2657, isUnsigned: true)
!1602 = !DIEnumerator(name: "CODE_FOR_smaxv4df3", value: 2658, isUnsigned: true)
!1603 = !DIEnumerator(name: "CODE_FOR_sminv4df3", value: 2659, isUnsigned: true)
!1604 = !DIEnumerator(name: "CODE_FOR_smaxv4sf3", value: 2660, isUnsigned: true)
!1605 = !DIEnumerator(name: "CODE_FOR_sminv4sf3", value: 2661, isUnsigned: true)
!1606 = !DIEnumerator(name: "CODE_FOR_smaxv2df3", value: 2662, isUnsigned: true)
!1607 = !DIEnumerator(name: "CODE_FOR_sminv2df3", value: 2663, isUnsigned: true)
!1608 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v4sf", value: 2664, isUnsigned: true)
!1609 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v2df", value: 2665, isUnsigned: true)
!1610 = !DIEnumerator(name: "CODE_FOR_reduc_smax_v4sf", value: 2666, isUnsigned: true)
!1611 = !DIEnumerator(name: "CODE_FOR_reduc_smin_v4sf", value: 2667, isUnsigned: true)
!1612 = !DIEnumerator(name: "CODE_FOR_vcondv4sf", value: 2668, isUnsigned: true)
!1613 = !DIEnumerator(name: "CODE_FOR_vcondv2df", value: 2669, isUnsigned: true)
!1614 = !DIEnumerator(name: "CODE_FOR_andv8sf3", value: 2670, isUnsigned: true)
!1615 = !DIEnumerator(name: "CODE_FOR_iorv8sf3", value: 2671, isUnsigned: true)
!1616 = !DIEnumerator(name: "CODE_FOR_xorv8sf3", value: 2672, isUnsigned: true)
!1617 = !DIEnumerator(name: "CODE_FOR_andv4df3", value: 2673, isUnsigned: true)
!1618 = !DIEnumerator(name: "CODE_FOR_iorv4df3", value: 2674, isUnsigned: true)
!1619 = !DIEnumerator(name: "CODE_FOR_xorv4df3", value: 2675, isUnsigned: true)
!1620 = !DIEnumerator(name: "CODE_FOR_andv4sf3", value: 2676, isUnsigned: true)
!1621 = !DIEnumerator(name: "CODE_FOR_iorv4sf3", value: 2677, isUnsigned: true)
!1622 = !DIEnumerator(name: "CODE_FOR_xorv4sf3", value: 2678, isUnsigned: true)
!1623 = !DIEnumerator(name: "CODE_FOR_andv2df3", value: 2679, isUnsigned: true)
!1624 = !DIEnumerator(name: "CODE_FOR_iorv2df3", value: 2680, isUnsigned: true)
!1625 = !DIEnumerator(name: "CODE_FOR_xorv2df3", value: 2681, isUnsigned: true)
!1626 = !DIEnumerator(name: "CODE_FOR_copysignv4sf3", value: 2682, isUnsigned: true)
!1627 = !DIEnumerator(name: "CODE_FOR_copysignv2df3", value: 2683, isUnsigned: true)
!1628 = !DIEnumerator(name: "CODE_FOR_sse2_cvtudq2ps", value: 2684, isUnsigned: true)
!1629 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2dq", value: 2685, isUnsigned: true)
!1630 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2dq", value: 2686, isUnsigned: true)
!1631 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2ps", value: 2687, isUnsigned: true)
!1632 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4sf", value: 2688, isUnsigned: true)
!1633 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4sf", value: 2689, isUnsigned: true)
!1634 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v8hi", value: 2690, isUnsigned: true)
!1635 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v8hi", value: 2691, isUnsigned: true)
!1636 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v8hi", value: 2692, isUnsigned: true)
!1637 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v8hi", value: 2693, isUnsigned: true)
!1638 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v4si", value: 2694, isUnsigned: true)
!1639 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v4si", value: 2695, isUnsigned: true)
!1640 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v4si", value: 2696, isUnsigned: true)
!1641 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v4si", value: 2697, isUnsigned: true)
!1642 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2df", value: 2698, isUnsigned: true)
!1643 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_trunc_v2df", value: 2699, isUnsigned: true)
!1644 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_v2df", value: 2700, isUnsigned: true)
!1645 = !DIEnumerator(name: "CODE_FOR_sse_movhlps_exp", value: 2701, isUnsigned: true)
!1646 = !DIEnumerator(name: "CODE_FOR_sse_movlhps_exp", value: 2702, isUnsigned: true)
!1647 = !DIEnumerator(name: "CODE_FOR_avx_shufps256", value: 2703, isUnsigned: true)
!1648 = !DIEnumerator(name: "CODE_FOR_sse_shufps", value: 2704, isUnsigned: true)
!1649 = !DIEnumerator(name: "CODE_FOR_sse_loadhps_exp", value: 2705, isUnsigned: true)
!1650 = !DIEnumerator(name: "CODE_FOR_sse_loadlps_exp", value: 2706, isUnsigned: true)
!1651 = !DIEnumerator(name: "CODE_FOR_vec_dupv4sf", value: 2707, isUnsigned: true)
!1652 = !DIEnumerator(name: "CODE_FOR_vec_initv16qi", value: 2708, isUnsigned: true)
!1653 = !DIEnumerator(name: "CODE_FOR_vec_initv8hi", value: 2709, isUnsigned: true)
!1654 = !DIEnumerator(name: "CODE_FOR_vec_initv4si", value: 2710, isUnsigned: true)
!1655 = !DIEnumerator(name: "CODE_FOR_vec_initv2di", value: 2711, isUnsigned: true)
!1656 = !DIEnumerator(name: "CODE_FOR_vec_initv4sf", value: 2712, isUnsigned: true)
!1657 = !DIEnumerator(name: "CODE_FOR_vec_initv2df", value: 2713, isUnsigned: true)
!1658 = !DIEnumerator(name: "CODE_FOR_vec_setv16qi", value: 2715, isUnsigned: true)
!1659 = !DIEnumerator(name: "CODE_FOR_vec_setv8hi", value: 2716, isUnsigned: true)
!1660 = !DIEnumerator(name: "CODE_FOR_vec_setv4si", value: 2717, isUnsigned: true)
!1661 = !DIEnumerator(name: "CODE_FOR_vec_setv2di", value: 2718, isUnsigned: true)
!1662 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf", value: 2719, isUnsigned: true)
!1663 = !DIEnumerator(name: "CODE_FOR_vec_setv2df", value: 2720, isUnsigned: true)
!1664 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v32qi", value: 2722, isUnsigned: true)
!1665 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v16hi", value: 2723, isUnsigned: true)
!1666 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8si", value: 2724, isUnsigned: true)
!1667 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4di", value: 2725, isUnsigned: true)
!1668 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8sf", value: 2726, isUnsigned: true)
!1669 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4df", value: 2727, isUnsigned: true)
!1670 = !DIEnumerator(name: "CODE_FOR_vec_extractv16qi", value: 2729, isUnsigned: true)
!1671 = !DIEnumerator(name: "CODE_FOR_vec_extractv8hi", value: 2730, isUnsigned: true)
!1672 = !DIEnumerator(name: "CODE_FOR_vec_extractv4si", value: 2731, isUnsigned: true)
!1673 = !DIEnumerator(name: "CODE_FOR_vec_extractv2di", value: 2732, isUnsigned: true)
!1674 = !DIEnumerator(name: "CODE_FOR_vec_extractv4sf", value: 2733, isUnsigned: true)
!1675 = !DIEnumerator(name: "CODE_FOR_vec_extractv2df", value: 2734, isUnsigned: true)
!1676 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2df", value: 2735, isUnsigned: true)
!1677 = !DIEnumerator(name: "CODE_FOR_avx_movddup256", value: 2736, isUnsigned: true)
!1678 = !DIEnumerator(name: "CODE_FOR_avx_unpcklpd256", value: 2737, isUnsigned: true)
!1679 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2df", value: 2738, isUnsigned: true)
!1680 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256", value: 2741, isUnsigned: true)
!1681 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd", value: 2742, isUnsigned: true)
!1682 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4sf", value: 2743, isUnsigned: true)
!1683 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2df", value: 2744, isUnsigned: true)
!1684 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2di", value: 2745, isUnsigned: true)
!1685 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4si", value: 2746, isUnsigned: true)
!1686 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8hi", value: 2747, isUnsigned: true)
!1687 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv16qi", value: 2748, isUnsigned: true)
!1688 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4df", value: 2749, isUnsigned: true)
!1689 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8sf", value: 2750, isUnsigned: true)
!1690 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4sf", value: 2751, isUnsigned: true)
!1691 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2df", value: 2752, isUnsigned: true)
!1692 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2di", value: 2753, isUnsigned: true)
!1693 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4si", value: 2754, isUnsigned: true)
!1694 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8hi", value: 2755, isUnsigned: true)
!1695 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv16qi", value: 2756, isUnsigned: true)
!1696 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4df", value: 2757, isUnsigned: true)
!1697 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8sf", value: 2758, isUnsigned: true)
!1698 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd_exp", value: 2761, isUnsigned: true)
!1699 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd_exp", value: 2763, isUnsigned: true)
!1700 = !DIEnumerator(name: "CODE_FOR_negv16qi2", value: 2765, isUnsigned: true)
!1701 = !DIEnumerator(name: "CODE_FOR_negv8hi2", value: 2766, isUnsigned: true)
!1702 = !DIEnumerator(name: "CODE_FOR_negv4si2", value: 2767, isUnsigned: true)
!1703 = !DIEnumerator(name: "CODE_FOR_negv2di2", value: 2768, isUnsigned: true)
!1704 = !DIEnumerator(name: "CODE_FOR_addv16qi3", value: 2769, isUnsigned: true)
!1705 = !DIEnumerator(name: "CODE_FOR_subv16qi3", value: 2770, isUnsigned: true)
!1706 = !DIEnumerator(name: "CODE_FOR_addv8hi3", value: 2771, isUnsigned: true)
!1707 = !DIEnumerator(name: "CODE_FOR_subv8hi3", value: 2772, isUnsigned: true)
!1708 = !DIEnumerator(name: "CODE_FOR_addv4si3", value: 2773, isUnsigned: true)
!1709 = !DIEnumerator(name: "CODE_FOR_subv4si3", value: 2774, isUnsigned: true)
!1710 = !DIEnumerator(name: "CODE_FOR_addv2di3", value: 2775, isUnsigned: true)
!1711 = !DIEnumerator(name: "CODE_FOR_subv2di3", value: 2776, isUnsigned: true)
!1712 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv16qi3", value: 2777, isUnsigned: true)
!1713 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv16qi3", value: 2778, isUnsigned: true)
!1714 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv16qi3", value: 2779, isUnsigned: true)
!1715 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv16qi3", value: 2780, isUnsigned: true)
!1716 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv8hi3", value: 2781, isUnsigned: true)
!1717 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv8hi3", value: 2782, isUnsigned: true)
!1718 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv8hi3", value: 2783, isUnsigned: true)
!1719 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv8hi3", value: 2784, isUnsigned: true)
!1720 = !DIEnumerator(name: "CODE_FOR_mulv8hi3", value: 2786, isUnsigned: true)
!1721 = !DIEnumerator(name: "CODE_FOR_smulv8hi3_highpart", value: 2787, isUnsigned: true)
!1722 = !DIEnumerator(name: "CODE_FOR_umulv8hi3_highpart", value: 2788, isUnsigned: true)
!1723 = !DIEnumerator(name: "CODE_FOR_sse2_umulv2siv2di3", value: 2789, isUnsigned: true)
!1724 = !DIEnumerator(name: "CODE_FOR_sse4_1_mulv2siv2di3", value: 2790, isUnsigned: true)
!1725 = !DIEnumerator(name: "CODE_FOR_sse2_pmaddwd", value: 2791, isUnsigned: true)
!1726 = !DIEnumerator(name: "CODE_FOR_mulv4si3", value: 2792, isUnsigned: true)
!1727 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v8hi", value: 2795, isUnsigned: true)
!1728 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v8hi", value: 2796, isUnsigned: true)
!1729 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v8hi", value: 2797, isUnsigned: true)
!1730 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v8hi", value: 2798, isUnsigned: true)
!1731 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v4si", value: 2799, isUnsigned: true)
!1732 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v4si", value: 2800, isUnsigned: true)
!1733 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v4si", value: 2801, isUnsigned: true)
!1734 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v4si", value: 2802, isUnsigned: true)
!1735 = !DIEnumerator(name: "CODE_FOR_sdot_prodv8hi", value: 2803, isUnsigned: true)
!1736 = !DIEnumerator(name: "CODE_FOR_udot_prodv4si", value: 2804, isUnsigned: true)
!1737 = !DIEnumerator(name: "CODE_FOR_vec_shl_v16qi", value: 2805, isUnsigned: true)
!1738 = !DIEnumerator(name: "CODE_FOR_vec_shl_v8hi", value: 2806, isUnsigned: true)
!1739 = !DIEnumerator(name: "CODE_FOR_vec_shl_v4si", value: 2807, isUnsigned: true)
!1740 = !DIEnumerator(name: "CODE_FOR_vec_shl_v2di", value: 2808, isUnsigned: true)
!1741 = !DIEnumerator(name: "CODE_FOR_vec_shr_v16qi", value: 2809, isUnsigned: true)
!1742 = !DIEnumerator(name: "CODE_FOR_vec_shr_v8hi", value: 2810, isUnsigned: true)
!1743 = !DIEnumerator(name: "CODE_FOR_vec_shr_v4si", value: 2811, isUnsigned: true)
!1744 = !DIEnumerator(name: "CODE_FOR_vec_shr_v2di", value: 2812, isUnsigned: true)
!1745 = !DIEnumerator(name: "CODE_FOR_umaxv16qi3", value: 2813, isUnsigned: true)
!1746 = !DIEnumerator(name: "CODE_FOR_uminv16qi3", value: 2814, isUnsigned: true)
!1747 = !DIEnumerator(name: "CODE_FOR_smaxv8hi3", value: 2815, isUnsigned: true)
!1748 = !DIEnumerator(name: "CODE_FOR_sminv8hi3", value: 2816, isUnsigned: true)
!1749 = !DIEnumerator(name: "CODE_FOR_umaxv8hi3", value: 2817, isUnsigned: true)
!1750 = !DIEnumerator(name: "CODE_FOR_smaxv16qi3", value: 2818, isUnsigned: true)
!1751 = !DIEnumerator(name: "CODE_FOR_smaxv4si3", value: 2819, isUnsigned: true)
!1752 = !DIEnumerator(name: "CODE_FOR_smaxv2di3", value: 2820, isUnsigned: true)
!1753 = !DIEnumerator(name: "CODE_FOR_umaxv4si3", value: 2821, isUnsigned: true)
!1754 = !DIEnumerator(name: "CODE_FOR_umaxv2di3", value: 2822, isUnsigned: true)
!1755 = !DIEnumerator(name: "CODE_FOR_sminv16qi3", value: 2823, isUnsigned: true)
!1756 = !DIEnumerator(name: "CODE_FOR_sminv4si3", value: 2824, isUnsigned: true)
!1757 = !DIEnumerator(name: "CODE_FOR_sminv2di3", value: 2825, isUnsigned: true)
!1758 = !DIEnumerator(name: "CODE_FOR_uminv8hi3", value: 2826, isUnsigned: true)
!1759 = !DIEnumerator(name: "CODE_FOR_uminv4si3", value: 2827, isUnsigned: true)
!1760 = !DIEnumerator(name: "CODE_FOR_uminv2di3", value: 2828, isUnsigned: true)
!1761 = !DIEnumerator(name: "CODE_FOR_sse2_eqv16qi3", value: 2829, isUnsigned: true)
!1762 = !DIEnumerator(name: "CODE_FOR_sse2_eqv8hi3", value: 2830, isUnsigned: true)
!1763 = !DIEnumerator(name: "CODE_FOR_sse2_eqv4si3", value: 2831, isUnsigned: true)
!1764 = !DIEnumerator(name: "CODE_FOR_sse4_1_eqv2di3", value: 2832, isUnsigned: true)
!1765 = !DIEnumerator(name: "CODE_FOR_vcondv16qi", value: 2833, isUnsigned: true)
!1766 = !DIEnumerator(name: "CODE_FOR_vcondv8hi", value: 2834, isUnsigned: true)
!1767 = !DIEnumerator(name: "CODE_FOR_vcondv4si", value: 2835, isUnsigned: true)
!1768 = !DIEnumerator(name: "CODE_FOR_vcondv2di", value: 2836, isUnsigned: true)
!1769 = !DIEnumerator(name: "CODE_FOR_vconduv16qi", value: 2837, isUnsigned: true)
!1770 = !DIEnumerator(name: "CODE_FOR_vconduv8hi", value: 2838, isUnsigned: true)
!1771 = !DIEnumerator(name: "CODE_FOR_vconduv4si", value: 2839, isUnsigned: true)
!1772 = !DIEnumerator(name: "CODE_FOR_vconduv2di", value: 2840, isUnsigned: true)
!1773 = !DIEnumerator(name: "CODE_FOR_one_cmplv16qi2", value: 2841, isUnsigned: true)
!1774 = !DIEnumerator(name: "CODE_FOR_one_cmplv8hi2", value: 2842, isUnsigned: true)
!1775 = !DIEnumerator(name: "CODE_FOR_one_cmplv4si2", value: 2843, isUnsigned: true)
!1776 = !DIEnumerator(name: "CODE_FOR_one_cmplv2di2", value: 2844, isUnsigned: true)
!1777 = !DIEnumerator(name: "CODE_FOR_andv16qi3", value: 2845, isUnsigned: true)
!1778 = !DIEnumerator(name: "CODE_FOR_iorv16qi3", value: 2846, isUnsigned: true)
!1779 = !DIEnumerator(name: "CODE_FOR_xorv16qi3", value: 2847, isUnsigned: true)
!1780 = !DIEnumerator(name: "CODE_FOR_andv8hi3", value: 2848, isUnsigned: true)
!1781 = !DIEnumerator(name: "CODE_FOR_iorv8hi3", value: 2849, isUnsigned: true)
!1782 = !DIEnumerator(name: "CODE_FOR_xorv8hi3", value: 2850, isUnsigned: true)
!1783 = !DIEnumerator(name: "CODE_FOR_andv4si3", value: 2851, isUnsigned: true)
!1784 = !DIEnumerator(name: "CODE_FOR_iorv4si3", value: 2852, isUnsigned: true)
!1785 = !DIEnumerator(name: "CODE_FOR_xorv4si3", value: 2853, isUnsigned: true)
!1786 = !DIEnumerator(name: "CODE_FOR_andv2di3", value: 2854, isUnsigned: true)
!1787 = !DIEnumerator(name: "CODE_FOR_iorv2di3", value: 2855, isUnsigned: true)
!1788 = !DIEnumerator(name: "CODE_FOR_xorv2di3", value: 2856, isUnsigned: true)
!1789 = !DIEnumerator(name: "CODE_FOR_andtf3", value: 2857, isUnsigned: true)
!1790 = !DIEnumerator(name: "CODE_FOR_iortf3", value: 2858, isUnsigned: true)
!1791 = !DIEnumerator(name: "CODE_FOR_xortf3", value: 2859, isUnsigned: true)
!1792 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v8hi", value: 2860, isUnsigned: true)
!1793 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v4si", value: 2861, isUnsigned: true)
!1794 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2di", value: 2862, isUnsigned: true)
!1795 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd", value: 2863, isUnsigned: true)
!1796 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw", value: 2864, isUnsigned: true)
!1797 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw", value: 2865, isUnsigned: true)
!1798 = !DIEnumerator(name: "CODE_FOR_sse2_loadd", value: 2866, isUnsigned: true)
!1799 = !DIEnumerator(name: "CODE_FOR_sse_storeq", value: 2869, isUnsigned: true)
!1800 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v16qi", value: 2871, isUnsigned: true)
!1801 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v16qi", value: 2872, isUnsigned: true)
!1802 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v16qi", value: 2873, isUnsigned: true)
!1803 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v16qi", value: 2874, isUnsigned: true)
!1804 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v8hi", value: 2875, isUnsigned: true)
!1805 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v8hi", value: 2876, isUnsigned: true)
!1806 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v8hi", value: 2877, isUnsigned: true)
!1807 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v8hi", value: 2878, isUnsigned: true)
!1808 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v4si", value: 2879, isUnsigned: true)
!1809 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4si", value: 2880, isUnsigned: true)
!1810 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v4si", value: 2881, isUnsigned: true)
!1811 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4si", value: 2882, isUnsigned: true)
!1812 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv16qi3", value: 2883, isUnsigned: true)
!1813 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv8hi3", value: 2884, isUnsigned: true)
!1814 = !DIEnumerator(name: "CODE_FOR_sse2_maskmovdqu", value: 2885, isUnsigned: true)
!1815 = !DIEnumerator(name: "CODE_FOR_sse_sfence", value: 2886, isUnsigned: true)
!1816 = !DIEnumerator(name: "CODE_FOR_sse2_mfence", value: 2887, isUnsigned: true)
!1817 = !DIEnumerator(name: "CODE_FOR_sse2_lfence", value: 2888, isUnsigned: true)
!1818 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv8hi3", value: 2889, isUnsigned: true)
!1819 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv4hi3", value: 2890, isUnsigned: true)
!1820 = !DIEnumerator(name: "CODE_FOR_rotlv16qi3", value: 2895, isUnsigned: true)
!1821 = !DIEnumerator(name: "CODE_FOR_rotlv8hi3", value: 2896, isUnsigned: true)
!1822 = !DIEnumerator(name: "CODE_FOR_rotlv4si3", value: 2897, isUnsigned: true)
!1823 = !DIEnumerator(name: "CODE_FOR_rotlv2di3", value: 2898, isUnsigned: true)
!1824 = !DIEnumerator(name: "CODE_FOR_rotrv16qi3", value: 2899, isUnsigned: true)
!1825 = !DIEnumerator(name: "CODE_FOR_rotrv8hi3", value: 2900, isUnsigned: true)
!1826 = !DIEnumerator(name: "CODE_FOR_rotrv4si3", value: 2901, isUnsigned: true)
!1827 = !DIEnumerator(name: "CODE_FOR_rotrv2di3", value: 2902, isUnsigned: true)
!1828 = !DIEnumerator(name: "CODE_FOR_vrotrv16qi3", value: 2903, isUnsigned: true)
!1829 = !DIEnumerator(name: "CODE_FOR_vrotrv8hi3", value: 2904, isUnsigned: true)
!1830 = !DIEnumerator(name: "CODE_FOR_vrotrv4si3", value: 2905, isUnsigned: true)
!1831 = !DIEnumerator(name: "CODE_FOR_vrotrv2di3", value: 2906, isUnsigned: true)
!1832 = !DIEnumerator(name: "CODE_FOR_vrotlv16qi3", value: 2907, isUnsigned: true)
!1833 = !DIEnumerator(name: "CODE_FOR_vrotlv8hi3", value: 2908, isUnsigned: true)
!1834 = !DIEnumerator(name: "CODE_FOR_vrotlv4si3", value: 2909, isUnsigned: true)
!1835 = !DIEnumerator(name: "CODE_FOR_vrotlv2di3", value: 2910, isUnsigned: true)
!1836 = !DIEnumerator(name: "CODE_FOR_vlshrv16qi3", value: 2911, isUnsigned: true)
!1837 = !DIEnumerator(name: "CODE_FOR_vlshrv8hi3", value: 2912, isUnsigned: true)
!1838 = !DIEnumerator(name: "CODE_FOR_vlshrv4si3", value: 2913, isUnsigned: true)
!1839 = !DIEnumerator(name: "CODE_FOR_vashrv16qi3", value: 2914, isUnsigned: true)
!1840 = !DIEnumerator(name: "CODE_FOR_vashrv8hi3", value: 2915, isUnsigned: true)
!1841 = !DIEnumerator(name: "CODE_FOR_vashrv4si3", value: 2916, isUnsigned: true)
!1842 = !DIEnumerator(name: "CODE_FOR_vashlv16qi3", value: 2917, isUnsigned: true)
!1843 = !DIEnumerator(name: "CODE_FOR_vashlv8hi3", value: 2918, isUnsigned: true)
!1844 = !DIEnumerator(name: "CODE_FOR_vashlv4si3", value: 2919, isUnsigned: true)
!1845 = !DIEnumerator(name: "CODE_FOR_ashlv16qi3", value: 2920, isUnsigned: true)
!1846 = !DIEnumerator(name: "CODE_FOR_lshlv16qi3", value: 2921, isUnsigned: true)
!1847 = !DIEnumerator(name: "CODE_FOR_ashrv16qi3", value: 2922, isUnsigned: true)
!1848 = !DIEnumerator(name: "CODE_FOR_ashrv2di3", value: 2923, isUnsigned: true)
!1849 = !DIEnumerator(name: "CODE_FOR_avx_vzeroall", value: 2924, isUnsigned: true)
!1850 = !DIEnumerator(name: "CODE_FOR_avx_vzeroupper", value: 2925, isUnsigned: true)
!1851 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv2df", value: 2932, isUnsigned: true)
!1852 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4df", value: 2933, isUnsigned: true)
!1853 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4sf", value: 2934, isUnsigned: true)
!1854 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv8sf", value: 2935, isUnsigned: true)
!1855 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8si3", value: 2936, isUnsigned: true)
!1856 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8sf3", value: 2937, isUnsigned: true)
!1857 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v4df3", value: 2938, isUnsigned: true)
!1858 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v32qi", value: 2939, isUnsigned: true)
!1859 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v16hi", value: 2940, isUnsigned: true)
!1860 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8si", value: 2941, isUnsigned: true)
!1861 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4di", value: 2942, isUnsigned: true)
!1862 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8sf", value: 2943, isUnsigned: true)
!1863 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4df", value: 2944, isUnsigned: true)
!1864 = !DIEnumerator(name: "CODE_FOR_vec_initv32qi", value: 2945, isUnsigned: true)
!1865 = !DIEnumerator(name: "CODE_FOR_vec_initv16hi", value: 2946, isUnsigned: true)
!1866 = !DIEnumerator(name: "CODE_FOR_vec_initv8si", value: 2947, isUnsigned: true)
!1867 = !DIEnumerator(name: "CODE_FOR_vec_initv4di", value: 2948, isUnsigned: true)
!1868 = !DIEnumerator(name: "CODE_FOR_vec_initv8sf", value: 2949, isUnsigned: true)
!1869 = !DIEnumerator(name: "CODE_FOR_vec_initv4df", value: 2950, isUnsigned: true)
!1870 = !DIEnumerator(name: "CODE_FOR_memory_barrier", value: 2951, isUnsigned: true)
!1871 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapqi", value: 2952, isUnsigned: true)
!1872 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swaphi", value: 2953, isUnsigned: true)
!1873 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapsi", value: 2954, isUnsigned: true)
!1874 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapdi", value: 2955, isUnsigned: true)
!1875 = !DIEnumerator(name: "CODE_FOR_nothing", value: 2956, isUnsigned: true)
!1876 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !1877, line: 36, baseType: !7, size: 32, elements: !1878)
!1877 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897}
!1879 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!1880 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!1881 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!1882 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!1883 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!1884 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!1885 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!1886 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!1887 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!1888 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!1889 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!1890 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!1891 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!1892 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!1893 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!1894 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!1895 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!1896 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!1897 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!1898 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !1899, line: 45, baseType: !7, size: 32, elements: !1900)
!1899 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1900 = !{!1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040}
!1901 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!1902 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!1903 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!1904 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!1905 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!1906 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!1907 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!1908 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!1909 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!1910 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!1911 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!1912 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!1913 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!1914 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!1915 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!1916 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!1917 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!1918 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!1919 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!1920 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!1921 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!1922 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!1923 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!1924 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!1925 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!1926 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!1927 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!1928 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!1929 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!1930 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!1931 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!1932 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!1933 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!1934 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!1935 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!1936 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!1937 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!1938 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!1939 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!1940 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!1941 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!1942 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!1943 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!1944 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!1945 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!1946 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!1947 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!1948 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!1949 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!1950 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!1951 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!1952 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!1953 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!1954 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!1955 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!1956 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!1957 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!1958 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!1959 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!1960 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!1961 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!1962 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!1963 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!1964 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!1965 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!1966 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!1967 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!1968 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!1969 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!1970 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!1971 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!1972 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!1973 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!1974 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!1975 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!1976 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!1977 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!1978 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!1979 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!1980 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!1981 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!1982 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!1983 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!1984 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!1985 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!1986 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!1987 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!1988 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!1989 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!1990 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!1991 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!1992 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!1993 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!1994 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!1995 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!1996 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!1997 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!1998 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!1999 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!2000 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!2001 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!2002 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!2003 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!2004 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!2005 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!2006 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!2007 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!2008 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!2009 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!2010 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!2011 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!2012 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!2013 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!2014 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!2015 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!2016 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!2017 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!2018 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!2019 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!2020 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!2021 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!2022 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!2023 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!2024 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!2025 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!2026 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!2027 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!2028 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!2029 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!2030 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!2031 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!2032 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!2033 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!2034 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!2035 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!2036 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!2037 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!2038 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!2039 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!2040 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!2041 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "block_op_methods", file: !2042, line: 412, baseType: !7, size: 32, elements: !2043)
!2042 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2043 = !{!2044, !2045, !2046, !2047}
!2044 = !DIEnumerator(name: "BLOCK_OP_NORMAL", value: 0, isUnsigned: true)
!2045 = !DIEnumerator(name: "BLOCK_OP_NO_LIBCALL", value: 1, isUnsigned: true)
!2046 = !DIEnumerator(name: "BLOCK_OP_CALL_PARM", value: 2, isUnsigned: true)
!2047 = !DIEnumerator(name: "BLOCK_OP_TAILCALL", value: 3, isUnsigned: true)
!2048 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !1899, line: 836, baseType: !7, size: 32, elements: !2049)
!2049 = !{!2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081}
!2050 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!2051 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!2052 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!2053 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!2054 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!2055 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!2056 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!2057 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!2058 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!2059 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!2060 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!2061 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!2062 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!2063 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!2064 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!2065 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!2066 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!2067 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!2068 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!2069 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!2070 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!2071 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!2072 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!2073 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!2074 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!2075 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!2076 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!2077 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!2078 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!2079 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!2080 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!2081 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!2082 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "direction", file: !2042, line: 95, baseType: !7, size: 32, elements: !2083)
!2083 = !{!2084, !2085, !2086}
!2084 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!2085 = !DIEnumerator(name: "upward", value: 1, isUnsigned: true)
!2086 = !DIEnumerator(name: "downward", value: 2, isUnsigned: true)
!2087 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !2042, line: 52, baseType: !7, size: 32, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095}
!2089 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!2090 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!2091 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!2092 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!2093 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!2094 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!2095 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!2096 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_personality_kind", file: !135, line: 352, baseType: !7, size: 32, elements: !2097)
!2097 = !{!2098, !2099, !2100}
!2098 = !DIEnumerator(name: "eh_personality_none", value: 0, isUnsigned: true)
!2099 = !DIEnumerator(name: "eh_personality_any", value: 1, isUnsigned: true)
!2100 = !DIEnumerator(name: "eh_personality_lang", value: 2, isUnsigned: true)
!2101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !2102, line: 80, baseType: !7, size: 32, elements: !2103)
!2102 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2103 = !{!2104, !2105, !2106, !2107}
!2104 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!2105 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!2106 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!2107 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!2108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !2102, line: 51, baseType: !7, size: 32, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145}
!2110 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!2111 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!2112 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!2113 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!2114 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!2115 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!2116 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!2117 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!2118 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!2119 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!2120 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!2121 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!2122 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!2123 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!2124 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!2125 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!2126 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!2127 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!2128 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!2129 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!2130 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!2131 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!2132 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!2133 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!2134 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!2135 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!2136 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!2137 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!2138 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!2139 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!2140 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!2141 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!2142 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!2143 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!2144 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!2145 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!2146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !2102, line: 727, baseType: !7, size: 32, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171}
!2148 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!2149 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!2150 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!2151 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!2152 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!2153 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!2154 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!2155 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!2156 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!2157 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!2158 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!2159 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!2160 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!2161 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!2162 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!2163 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!2164 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!2165 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!2166 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!2167 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!2168 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!2169 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!2170 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!2171 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!2172 = !{!2173, !2174, !2175, !2176, !2179, !2180, !2182, !5, !1876, !1898, !3605, !2298, !2269, !7, !141, !2420, !3606, !2048, !2252, !2177, !2299, !3607, !3609, !2101, !2763, !3611, !2797}
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2175 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2178)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !2183, line: 50, baseType: !2184)
!2183 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !1899, line: 240, size: 384, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2185, file: !1899, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2185, file: !1899, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !2185, file: !1899, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2185, file: !1899, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !2185, file: !1899, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !2185, file: !1899, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !2185, file: !1899, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2185, file: !1899, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !2185, file: !1899, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !2185, file: !1899, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2185, file: !1899, line: 321, baseType: !2198, size: 320, offset: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !1899, line: 315, size: 320, elements: !2199)
!2199 = !{!2200, !3540, !3542, !3603, !3604}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2198, file: !1899, line: 316, baseType: !2201, size: 64)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 64, elements: !2217)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !1899, line: 183, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !1899, line: 166, size: 64, elements: !2204)
!2204 = !{!2205, !2206, !2207, !2208, !2209, !2219, !2220, !2232, !2235, !2297, !3518, !3519, !3530, !3537}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !2203, file: !1899, line: 168, baseType: !2175, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !2203, file: !1899, line: 169, baseType: !7, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !2203, file: !1899, line: 170, baseType: !2180, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !2203, file: !1899, line: 171, baseType: !2182, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !2203, file: !1899, line: 172, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !2183, line: 53, baseType: !2211)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !1899, line: 359, size: 128, elements: !2213)
!2213 = !{!2214, !2215}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !2212, file: !1899, line: 360, baseType: !2175, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2212, file: !1899, line: 361, baseType: !2216, size: 64, offset: 64)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2182, size: 64, elements: !2217)
!2217 = !{!2218}
!2218 = !DISubrange(count: 1)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !2203, file: !1899, line: 173, baseType: !5, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !2203, file: !1899, line: 174, baseType: !2221, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !1899, line: 133, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1899, line: 115, size: 32, elements: !2223)
!2223 = !{!2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !2222, file: !1899, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !2222, file: !1899, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !2222, file: !1899, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !2222, file: !1899, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !2222, file: !1899, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !2222, file: !1899, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !2222, file: !1899, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2222, file: !1899, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !2203, file: !1899, line: 175, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !1899, line: 175, flags: DIFlagFwdDecl)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !2203, file: !1899, line: 176, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !2238, line: 75, size: 256, elements: !2239)
!2238 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2239 = !{!2240, !2255, !2256, !2257}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2237, file: !2238, line: 76, baseType: !2241, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !2238, line: 68, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !2238, line: 63, size: 320, elements: !2244)
!2244 = !{!2245, !2247, !2248, !2249}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2243, file: !2238, line: 64, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2243, file: !2238, line: 65, baseType: !2246, size: 64, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2243, file: !2238, line: 66, baseType: !7, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2243, file: !2238, line: 67, baseType: !2250, size: 128, offset: 192)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2251, size: 128, elements: !2253)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !2238, line: 29, baseType: !2252)
!2252 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2253 = !{!2254}
!2254 = !DISubrange(count: 2)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2237, file: !2238, line: 77, baseType: !2241, size: 64, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2237, file: !2238, line: 78, baseType: !7, size: 32, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2237, file: !2238, line: 79, baseType: !2258, size: 64, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !2238, line: 49, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !2238, line: 45, size: 832, elements: !2261)
!2261 = !{!2262, !2263, !2264}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2260, file: !2238, line: 46, baseType: !2246, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !2260, file: !2238, line: 47, baseType: !2236, size: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2260, file: !2238, line: 48, baseType: !2265, size: 704, offset: 128)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !2266, line: 164, size: 704, elements: !2267)
!2266 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2267 = !{!2268, !2270, !2280, !2281, !2282, !2283, !2284, !2285, !2289, !2293, !2294, !2295, !2296}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2265, file: !2266, line: 166, baseType: !2269, size: 64)
!2269 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2265, file: !2266, line: 167, baseType: !2271, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !2266, line: 157, size: 192, elements: !2273)
!2273 = !{!2274, !2275, !2276}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2272, file: !2266, line: 159, baseType: !2177, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2272, file: !2266, line: 160, baseType: !2271, size: 64, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2272, file: !2266, line: 161, baseType: !2277, size: 32, offset: 128)
!2277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2178, size: 32, elements: !2278)
!2278 = !{!2279}
!2279 = !DISubrange(count: 4)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2265, file: !2266, line: 168, baseType: !2177, size: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2265, file: !2266, line: 169, baseType: !2177, size: 64, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2265, file: !2266, line: 170, baseType: !2177, size: 64, offset: 256)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2265, file: !2266, line: 171, baseType: !2269, size: 64, offset: 320)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2265, file: !2266, line: 172, baseType: !2175, size: 32, offset: 384)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2265, file: !2266, line: 176, baseType: !2286, size: 64, offset: 448)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!2271, !2179, !2269}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2265, file: !2266, line: 177, baseType: !2290, size: 64, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{null, !2179, !2271}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2265, file: !2266, line: 178, baseType: !2179, size: 64, offset: 576)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2265, file: !2266, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2265, file: !2266, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2265, file: !2266, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !2203, file: !1899, line: 177, baseType: !2298, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !2183, line: 56, baseType: !2299)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !142, line: 3371, size: 1792, elements: !2301)
!2301 = !{!2302, !2335, !2341, !2352, !2371, !2382, !2387, !2394, !2400, !2413, !2425, !2463, !2468, !2496, !2513, !2514, !2519, !2528, !2534, !2539, !2543, !2547, !3167, !3216, !3222, !3228, !3235, !3248, !3262, !3279, !3291, !3313, !3328, !3500}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2300, file: !142, line: 3372, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !142, line: 360, size: 64, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2303, file: !142, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !2303, file: !142, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !2303, file: !142, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !2303, file: !142, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !2303, file: !142, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !2303, file: !142, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !2303, file: !142, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !2303, file: !142, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !2303, file: !142, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !2303, file: !142, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !2303, file: !142, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !2303, file: !142, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !2303, file: !142, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !2303, file: !142, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !2303, file: !142, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !2303, file: !142, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !2303, file: !142, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !2303, file: !142, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2303, file: !142, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2303, file: !142, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2303, file: !142, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2303, file: !142, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2303, file: !142, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2303, file: !142, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2303, file: !142, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2303, file: !142, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !2303, file: !142, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !2303, file: !142, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !2303, file: !142, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2303, file: !142, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2300, file: !142, line: 3373, baseType: !2336, size: 192)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !142, line: 402, size: 192, elements: !2337)
!2337 = !{!2338, !2339, !2340}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2336, file: !142, line: 403, baseType: !2303, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2336, file: !142, line: 404, baseType: !2298, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2336, file: !142, line: 405, baseType: !2298, size: 64, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2300, file: !142, line: 3374, baseType: !2342, size: 320)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !142, line: 1384, size: 320, elements: !2343)
!2343 = !{!2344, !2345}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2342, file: !142, line: 1385, baseType: !2336, size: 192)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2342, file: !142, line: 1386, baseType: !2346, size: 128, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !2347, line: 58, baseType: !2348)
!2347 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2347, line: 54, size: 128, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !2348, file: !2347, line: 56, baseType: !2252, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !2348, file: !2347, line: 57, baseType: !2269, size: 64, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !2300, file: !142, line: 3375, baseType: !2353, size: 256)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !142, line: 1397, size: 256, elements: !2354)
!2354 = !{!2355, !2356}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2353, file: !142, line: 1398, baseType: !2336, size: 192)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !2353, file: !142, line: 1399, baseType: !2357, size: 64, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !2359, line: 52, size: 256, elements: !2360)
!2359 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2360 = !{!2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2358, file: !2359, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !2358, file: !2359, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !2358, file: !2359, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !2358, file: !2359, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2358, file: !2359, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !2358, file: !2359, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2358, file: !2359, line: 62, baseType: !2368, size: 192, offset: 64)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 192, elements: !2369)
!2369 = !{!2370}
!2370 = !DISubrange(count: 3)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !2300, file: !142, line: 3376, baseType: !2372, size: 256)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !142, line: 1408, size: 256, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2372, file: !142, line: 1409, baseType: !2336, size: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !2372, file: !142, line: 1410, baseType: !2376, size: 64, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !2378, line: 27, size: 192, elements: !2379)
!2378 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2377, file: !2378, line: 29, baseType: !2346, size: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2377, file: !2378, line: 30, baseType: !5, size: 32, offset: 128)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !2300, file: !142, line: 3377, baseType: !2383, size: 256)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !142, line: 1437, size: 256, elements: !2384)
!2384 = !{!2385, !2386}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2383, file: !142, line: 1438, baseType: !2336, size: 192)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2383, file: !142, line: 1439, baseType: !2298, size: 64, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2300, file: !142, line: 3378, baseType: !2388, size: 256)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !142, line: 1418, size: 256, elements: !2389)
!2389 = !{!2390, !2391, !2392}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2388, file: !142, line: 1419, baseType: !2336, size: 192)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2388, file: !142, line: 1420, baseType: !2175, size: 32, offset: 192)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2388, file: !142, line: 1421, baseType: !2393, size: 8, offset: 224)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2178, size: 8, elements: !2217)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2300, file: !142, line: 3379, baseType: !2395, size: 320)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !142, line: 1428, size: 320, elements: !2396)
!2396 = !{!2397, !2398, !2399}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2395, file: !142, line: 1429, baseType: !2336, size: 192)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !2395, file: !142, line: 1430, baseType: !2298, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !2395, file: !142, line: 1431, baseType: !2298, size: 64, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2300, file: !142, line: 3380, baseType: !2401, size: 320)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !142, line: 1460, size: 320, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2401, file: !142, line: 1461, baseType: !2336, size: 192)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2401, file: !142, line: 1462, baseType: !2405, size: 128, offset: 192)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !2406, line: 31, size: 128, elements: !2407)
!2406 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2407 = !{!2408, !2411, !2412}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2405, file: !2406, line: 32, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2174)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2405, file: !2406, line: 33, baseType: !7, size: 32, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !2405, file: !2406, line: 34, baseType: !7, size: 32, offset: 96)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !2300, file: !142, line: 3381, baseType: !2414, size: 384)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !142, line: 2507, size: 384, elements: !2415)
!2415 = !{!2416, !2417, !2422, !2423, !2424}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2414, file: !142, line: 2508, baseType: !2336, size: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2414, file: !142, line: 2509, baseType: !2418, size: 32, offset: 192)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !2419, line: 58, baseType: !2420)
!2419 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !2421, line: 44, baseType: !7)
!2421 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2414, file: !142, line: 2510, baseType: !7, size: 32, offset: 224)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2414, file: !142, line: 2511, baseType: !2298, size: 64, offset: 256)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2414, file: !142, line: 2512, baseType: !2298, size: 64, offset: 320)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !2300, file: !142, line: 3382, baseType: !2426, size: 896)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !142, line: 2652, size: 896, elements: !2427)
!2427 = !{!2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2426, file: !142, line: 2653, baseType: !2414, size: 384)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2426, file: !142, line: 2654, baseType: !2298, size: 64, offset: 384)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2426, file: !142, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !2426, file: !142, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !2426, file: !142, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !2426, file: !142, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2426, file: !142, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !2426, file: !142, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !2426, file: !142, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !2426, file: !142, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2426, file: !142, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2426, file: !142, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2426, file: !142, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2426, file: !142, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2426, file: !142, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2426, file: !142, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2426, file: !142, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !2426, file: !142, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !2426, file: !142, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !2426, file: !142, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !2426, file: !142, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !2426, file: !142, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !2426, file: !142, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !2426, file: !142, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !2426, file: !142, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !2426, file: !142, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !2426, file: !142, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2426, file: !142, line: 2703, baseType: !7, size: 32, offset: 512)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2426, file: !142, line: 2705, baseType: !2298, size: 64, offset: 576)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2426, file: !142, line: 2706, baseType: !2298, size: 64, offset: 640)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2426, file: !142, line: 2707, baseType: !2298, size: 64, offset: 704)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2426, file: !142, line: 2708, baseType: !2298, size: 64, offset: 768)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2426, file: !142, line: 2711, baseType: !2461, size: 64, offset: 832)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !142, line: 2711, flags: DIFlagFwdDecl)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !2300, file: !142, line: 3383, baseType: !2464, size: 960)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !142, line: 2756, size: 960, elements: !2465)
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2464, file: !142, line: 2757, baseType: !2426, size: 896)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2464, file: !142, line: 2758, baseType: !2182, size: 64, offset: 896)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !2300, file: !142, line: 3384, baseType: !2469, size: 1472)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !142, line: 3114, size: 1472, elements: !2470)
!2470 = !{!2471, !2492, !2493, !2494, !2495}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2469, file: !142, line: 3115, baseType: !2472, size: 1216)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !142, line: 2984, size: 1216, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2472, file: !142, line: 2985, baseType: !2464, size: 960)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2472, file: !142, line: 2986, baseType: !2298, size: 64, offset: 960)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2472, file: !142, line: 2987, baseType: !2298, size: 64, offset: 1024)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2472, file: !142, line: 2988, baseType: !2298, size: 64, offset: 1088)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2472, file: !142, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2472, file: !142, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2472, file: !142, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2472, file: !142, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2472, file: !142, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2472, file: !142, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2472, file: !142, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2472, file: !142, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2472, file: !142, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2472, file: !142, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2472, file: !142, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2472, file: !142, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2472, file: !142, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2472, file: !142, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2469, file: !142, line: 3117, baseType: !2298, size: 64, offset: 1216)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2469, file: !142, line: 3119, baseType: !2298, size: 64, offset: 1280)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2469, file: !142, line: 3121, baseType: !2298, size: 64, offset: 1344)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2469, file: !142, line: 3123, baseType: !2298, size: 64, offset: 1408)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !2300, file: !142, line: 3385, baseType: !2497, size: 1088)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !142, line: 2874, size: 1088, elements: !2498)
!2498 = !{!2499, !2500, !2501}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2497, file: !142, line: 2875, baseType: !2464, size: 960)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2497, file: !142, line: 2876, baseType: !2182, size: 64, offset: 960)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2497, file: !142, line: 2877, baseType: !2502, size: 64, offset: 1024)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !2504, line: 172, size: 128, elements: !2505)
!2504 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2505 = !{!2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !2503, file: !2504, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2503, file: !2504, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !2503, file: !2504, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !2503, file: !2504, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !2503, file: !2504, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !2503, file: !2504, line: 195, baseType: !7, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !2503, file: !2504, line: 199, baseType: !2298, size: 64, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !2300, file: !142, line: 3386, baseType: !2472, size: 1216)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !2300, file: !142, line: 3387, baseType: !2515, size: 1280)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !142, line: 3093, size: 1280, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2515, file: !142, line: 3094, baseType: !2472, size: 1216)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2515, file: !142, line: 3095, baseType: !2502, size: 64, offset: 1216)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !2300, file: !142, line: 3388, baseType: !2520, size: 1216)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !142, line: 2824, size: 1216, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525, !2526, !2527}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2520, file: !142, line: 2825, baseType: !2426, size: 896)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2520, file: !142, line: 2827, baseType: !2298, size: 64, offset: 896)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2520, file: !142, line: 2828, baseType: !2298, size: 64, offset: 960)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2520, file: !142, line: 2829, baseType: !2298, size: 64, offset: 1024)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2520, file: !142, line: 2830, baseType: !2298, size: 64, offset: 1088)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2520, file: !142, line: 2831, baseType: !2298, size: 64, offset: 1152)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !2300, file: !142, line: 3389, baseType: !2529, size: 1024)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !142, line: 2850, size: 1024, elements: !2530)
!2530 = !{!2531, !2532, !2533}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2529, file: !142, line: 2851, baseType: !2464, size: 960)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2529, file: !142, line: 2852, baseType: !2175, size: 32, offset: 960)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2529, file: !142, line: 2853, baseType: !2175, size: 32, offset: 992)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !2300, file: !142, line: 3390, baseType: !2535, size: 1024)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !142, line: 2857, size: 1024, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2535, file: !142, line: 2858, baseType: !2464, size: 960)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2535, file: !142, line: 2859, baseType: !2502, size: 64, offset: 960)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !2300, file: !142, line: 3391, baseType: !2540, size: 960)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !142, line: 2862, size: 960, elements: !2541)
!2541 = !{!2542}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2540, file: !142, line: 2863, baseType: !2464, size: 960)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !2300, file: !142, line: 3392, baseType: !2544, size: 1472)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !142, line: 3304, size: 1472, elements: !2545)
!2545 = !{!2546}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2544, file: !142, line: 3305, baseType: !2469, size: 1472)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !2300, file: !142, line: 3393, baseType: !2548, size: 1792)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !142, line: 3248, size: 1792, elements: !2549)
!2549 = !{!2550, !2551, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2548, file: !142, line: 3249, baseType: !2469, size: 1472)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2548, file: !142, line: 3251, baseType: !2552, size: 64, offset: 1472)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !2554, line: 463, size: 1152, elements: !2555)
!2554 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2555 = !{!2556, !2720, !3032, !3033, !3087, !3090, !3091, !3092, !3093, !3094, !3095, !3119, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2553, file: !2554, line: 464, baseType: !2557, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !2559)
!2559 = !{!2560, !2609, !2622, !2636, !2688, !2701}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !2558, file: !135, line: 197, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !2562)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !2564)
!2564 = !{!2565, !2566, !2567, !2568, !2569, !2570, !2597, !2606, !2607, !2608}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !2563, file: !135, line: 119, baseType: !2562, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2563, file: !135, line: 122, baseType: !2562, size: 64, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !2563, file: !135, line: 123, baseType: !2562, size: 64, offset: 128)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2563, file: !135, line: 126, baseType: !2175, size: 32, offset: 192)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2563, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2563, file: !135, line: 165, baseType: !2571, size: 192, offset: 256)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !2572)
!2572 = !{!2573, !2586, !2592}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !2571, file: !135, line: 137, baseType: !2574, size: 128)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !2575)
!2575 = !{!2576, !2585}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !2574, file: !135, line: 135, baseType: !2577, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2583, !2584}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !2578, file: !135, line: 96, baseType: !2577, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !2578, file: !135, line: 97, baseType: !2577, size: 64, offset: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2578, file: !135, line: 101, baseType: !2298, size: 64, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !2578, file: !135, line: 106, baseType: !2298, size: 64, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2578, file: !135, line: 111, baseType: !2298, size: 64, offset: 256)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !2574, file: !135, line: 136, baseType: !2577, size: 64, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !2571, file: !135, line: 151, baseType: !2587, size: 192)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !2588)
!2588 = !{!2589, !2590, !2591}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2587, file: !135, line: 141, baseType: !2298, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2587, file: !135, line: 145, baseType: !2298, size: 64, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2587, file: !135, line: 150, baseType: !2175, size: 32, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !2571, file: !135, line: 164, baseType: !2593, size: 128)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !2594)
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !2593, file: !135, line: 161, baseType: !2298, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !2593, file: !135, line: 163, baseType: !2418, size: 32, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !2563, file: !135, line: 168, baseType: !2598, size: 64, offset: 448)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !2600)
!2600 = !{!2601, !2602, !2603, !2604, !2605}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !2599, file: !135, line: 70, baseType: !2598, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2599, file: !135, line: 73, baseType: !2562, size: 64, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !2599, file: !135, line: 78, baseType: !2298, size: 64, offset: 128)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !2599, file: !135, line: 85, baseType: !2182, size: 64, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2599, file: !135, line: 88, baseType: !2175, size: 32, offset: 256)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !2563, file: !135, line: 173, baseType: !2182, size: 64, offset: 512)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !2563, file: !135, line: 173, baseType: !2182, size: 64, offset: 576)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !2563, file: !135, line: 177, baseType: !2174, size: 8, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !2558, file: !135, line: 200, baseType: !2610, size: 64, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !2613)
!2613 = !{!2614}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2612, file: !135, line: 185, baseType: !2615, size: 128)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !2617)
!2617 = !{!2618, !2619, !2620}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2616, file: !135, line: 184, baseType: !7, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2616, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2616, file: !135, line: 184, baseType: !2621, size: 64, offset: 64)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2561, size: 64, elements: !2217)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !2558, file: !135, line: 203, baseType: !2623, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !2625)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !2626)
!2626 = !{!2627}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2625, file: !135, line: 189, baseType: !2628, size: 128)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !2630)
!2630 = !{!2631, !2632, !2633}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2629, file: !135, line: 188, baseType: !7, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2629, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2629, file: !135, line: 188, baseType: !2634, size: 64, offset: 64)
!2634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2635, size: 64, elements: !2217)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !2598)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !2558, file: !135, line: 207, baseType: !2637, size: 64, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2638, line: 144, baseType: !2639)
!2638 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2638, line: 100, size: 896, elements: !2641)
!2641 = !{!2642, !2650, !2655, !2660, !2662, !2665, !2666, !2667, !2668, !2669, !2674, !2676, !2677, !2682, !2687}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2640, file: !2638, line: 102, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2638, line: 52, baseType: !2644)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!2647, !2648}
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2638, line: 47, baseType: !7)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2640, file: !2638, line: 105, baseType: !2651, size: 64, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2638, line: 59, baseType: !2652)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!2175, !2648, !2648}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2640, file: !2638, line: 108, baseType: !2656, size: 64, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2638, line: 63, baseType: !2657)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{null, !2179}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2640, file: !2638, line: 111, baseType: !2661, size: 64, offset: 192)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2640, file: !2638, line: 114, baseType: !2663, size: 64, offset: 256)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2664, line: 46, baseType: !2252)
!2664 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2640, file: !2638, line: 117, baseType: !2663, size: 64, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2640, file: !2638, line: 120, baseType: !2663, size: 64, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2640, file: !2638, line: 124, baseType: !7, size: 32, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2640, file: !2638, line: 128, baseType: !7, size: 32, offset: 480)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2640, file: !2638, line: 131, baseType: !2670, size: 64, offset: 512)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2638, line: 75, baseType: !2671)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!2179, !2663, !2663}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2640, file: !2638, line: 132, baseType: !2675, size: 64, offset: 576)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2638, line: 78, baseType: !2657)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2640, file: !2638, line: 135, baseType: !2179, size: 64, offset: 640)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2640, file: !2638, line: 136, baseType: !2678, size: 64, offset: 704)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2638, line: 82, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!2179, !2179, !2663, !2663}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2640, file: !2638, line: 137, baseType: !2683, size: 64, offset: 768)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2638, line: 83, baseType: !2684)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{null, !2179, !2179}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2640, file: !2638, line: 141, baseType: !7, size: 32, offset: 832)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !2558, file: !135, line: 211, baseType: !2689, size: 64, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !142, line: 183, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !142, line: 183, size: 128, elements: !2692)
!2692 = !{!2693}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2691, file: !142, line: 183, baseType: !2694, size: 128)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !142, line: 182, baseType: !2695)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !142, line: 182, size: 128, elements: !2696)
!2696 = !{!2697, !2698, !2699}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2695, file: !142, line: 182, baseType: !7, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2695, file: !142, line: 182, baseType: !7, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2695, file: !142, line: 182, baseType: !2700, size: 64, offset: 64)
!2700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2298, size: 64, elements: !2217)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !2558, file: !135, line: 220, baseType: !2702, size: 64, offset: 320)
!2702 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !2703)
!2703 = !{!2704, !2705}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !2702, file: !135, line: 218, baseType: !2689, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2702, file: !135, line: 219, baseType: !2706, size: 64)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !2708, line: 29, baseType: !2709)
!2708 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !2708, line: 29, size: 96, elements: !2710)
!2710 = !{!2711}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2709, file: !2708, line: 29, baseType: !2712, size: 96)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !2708, line: 27, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !2708, line: 27, size: 96, elements: !2714)
!2714 = !{!2715, !2716, !2717}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2713, file: !2708, line: 27, baseType: !7, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2713, file: !2708, line: 27, baseType: !7, size: 32, offset: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2713, file: !2708, line: 27, baseType: !2718, size: 8, offset: 64)
!2718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2719, size: 8, elements: !2217)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !2708, line: 26, baseType: !2174)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2553, file: !2554, line: 467, baseType: !2721, size: 64, offset: 64)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !337, line: 374, size: 640, elements: !2723)
!2723 = !{!2724, !3007, !3008, !3021, !3022, !3023, !3024, !3025, !3026, !3028, !3030, !3031}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2722, file: !337, line: 377, baseType: !2725, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !2183, line: 111, baseType: !2726)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !337, line: 217, size: 832, elements: !2728)
!2728 = !{!2729, !2972, !2973, !2974, !2977, !2981, !2982, !2983, !3001, !3002, !3003, !3004, !3005, !3006}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !2727, file: !337, line: 219, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !337, line: 151, baseType: !2732)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !337, line: 151, size: 128, elements: !2733)
!2733 = !{!2734}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2732, file: !337, line: 151, baseType: !2735, size: 128)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !337, line: 150, baseType: !2736)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !337, line: 150, size: 128, elements: !2737)
!2737 = !{!2738, !2739, !2740}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2736, file: !337, line: 150, baseType: !7, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2736, file: !337, line: 150, baseType: !7, size: 32, offset: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2736, file: !337, line: 150, baseType: !2741, size: 64, offset: 64)
!2741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2742, size: 64, elements: !2217)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !2183, line: 108, baseType: !2743)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !337, line: 122, size: 512, elements: !2745)
!2745 = !{!2746, !2747, !2748, !2964, !2965, !2966, !2967, !2968, !2969, !2970}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2744, file: !337, line: 124, baseType: !2726, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !2744, file: !337, line: 125, baseType: !2726, size: 64, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2744, file: !337, line: 131, baseType: !2749, size: 64, offset: 128)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !337, line: 128, size: 64, elements: !2750)
!2750 = !{!2751, !2963}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2749, file: !337, line: 129, baseType: !2752, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !2183, line: 66, baseType: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !2102, line: 143, size: 192, elements: !2755)
!2755 = !{!2756, !2961, !2962}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2754, file: !2102, line: 145, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !2183, line: 69, baseType: !2758)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !2102, line: 136, size: 192, elements: !2760)
!2760 = !{!2761, !2959, !2960}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2759, file: !2102, line: 137, baseType: !2762, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !2183, line: 58, baseType: !2763)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !2102, line: 737, size: 768, elements: !2765)
!2765 = !{!2766, !2783, !2816, !2822, !2827, !2832, !2839, !2845, !2851, !2856, !2870, !2875, !2881, !2886, !2896, !2901, !2917, !2924, !2931, !2937, !2942, !2948, !2954}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2764, file: !2102, line: 738, baseType: !2767, size: 256)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !2102, line: 271, size: 256, elements: !2768)
!2768 = !{!2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2767, file: !2102, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !2767, file: !2102, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2767, file: !2102, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !2767, file: !2102, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !2767, file: !2102, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !2767, file: !2102, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !2767, file: !2102, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2767, file: !2102, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2767, file: !2102, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2767, file: !2102, line: 312, baseType: !7, size: 32, offset: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !2767, file: !2102, line: 316, baseType: !2418, size: 32, offset: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !2767, file: !2102, line: 319, baseType: !7, size: 32, offset: 96)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2767, file: !2102, line: 323, baseType: !2726, size: 64, offset: 128)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2767, file: !2102, line: 327, baseType: !2298, size: 64, offset: 192)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !2764, file: !2102, line: 739, baseType: !2784, size: 448)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !2102, line: 350, size: 448, elements: !2785)
!2785 = !{!2786, !2815}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !2784, file: !2102, line: 353, baseType: !2787, size: 384)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !2102, line: 333, size: 384, elements: !2788)
!2788 = !{!2789, !2790, !2798}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2787, file: !2102, line: 336, baseType: !2767, size: 256)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !2787, file: !2102, line: 343, baseType: !2791, size: 64, offset: 256)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !2793, line: 37, size: 128, elements: !2794)
!2793 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2794 = !{!2795, !2796}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2792, file: !2793, line: 39, baseType: !2791, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !2792, file: !2793, line: 40, baseType: !2797, size: 64, offset: 64)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !2787, file: !2102, line: 344, baseType: !2799, size: 64, offset: 320)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !2793, line: 45, size: 320, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2800, file: !2793, line: 47, baseType: !2799, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !2800, file: !2793, line: 48, baseType: !2804, size: 256, offset: 64)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !142, line: 1883, size: 256, elements: !2805)
!2805 = !{!2806, !2808, !2809, !2814}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2804, file: !142, line: 1884, baseType: !2807, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2804, file: !142, line: 1885, baseType: !2807, size: 64, offset: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2804, file: !142, line: 1891, baseType: !2810, size: 64, offset: 128)
!2810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !142, line: 1891, size: 64, elements: !2811)
!2811 = !{!2812, !2813}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2810, file: !142, line: 1891, baseType: !2762, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2810, file: !142, line: 1891, baseType: !2298, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2804, file: !142, line: 1892, baseType: !2797, size: 64, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2784, file: !2102, line: 359, baseType: !2700, size: 64, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !2764, file: !2102, line: 740, baseType: !2817, size: 512)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !2102, line: 365, size: 512, elements: !2818)
!2818 = !{!2819, !2820, !2821}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !2817, file: !2102, line: 368, baseType: !2787, size: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !2817, file: !2102, line: 373, baseType: !2298, size: 64, offset: 384)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !2817, file: !2102, line: 374, baseType: !2298, size: 64, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !2764, file: !2102, line: 741, baseType: !2823, size: 576)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !2102, line: 380, size: 576, elements: !2824)
!2824 = !{!2825, !2826}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !2823, file: !2102, line: 383, baseType: !2817, size: 512)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2823, file: !2102, line: 389, baseType: !2700, size: 64, offset: 512)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2764, file: !2102, line: 742, baseType: !2828, size: 320)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !2102, line: 395, size: 320, elements: !2829)
!2829 = !{!2830, !2831}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2828, file: !2102, line: 397, baseType: !2767, size: 256)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !2828, file: !2102, line: 400, baseType: !2752, size: 64, offset: 256)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !2764, file: !2102, line: 743, baseType: !2833, size: 448)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !2102, line: 406, size: 448, elements: !2834)
!2834 = !{!2835, !2836, !2837, !2838}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2833, file: !2102, line: 408, baseType: !2767, size: 256)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2833, file: !2102, line: 412, baseType: !2298, size: 64, offset: 256)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2833, file: !2102, line: 420, baseType: !2298, size: 64, offset: 320)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !2833, file: !2102, line: 423, baseType: !2752, size: 64, offset: 384)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !2764, file: !2102, line: 744, baseType: !2840, size: 384)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !2102, line: 429, size: 384, elements: !2841)
!2841 = !{!2842, !2843, !2844}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2840, file: !2102, line: 431, baseType: !2767, size: 256)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2840, file: !2102, line: 434, baseType: !2298, size: 64, offset: 256)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2840, file: !2102, line: 437, baseType: !2752, size: 64, offset: 320)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !2764, file: !2102, line: 745, baseType: !2846, size: 384)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !2102, line: 443, size: 384, elements: !2847)
!2847 = !{!2848, !2849, !2850}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2846, file: !2102, line: 445, baseType: !2767, size: 256)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2846, file: !2102, line: 449, baseType: !2298, size: 64, offset: 256)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !2846, file: !2102, line: 453, baseType: !2752, size: 64, offset: 320)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !2764, file: !2102, line: 746, baseType: !2852, size: 320)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !2102, line: 459, size: 320, elements: !2853)
!2853 = !{!2854, !2855}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2852, file: !2102, line: 461, baseType: !2767, size: 256)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !2852, file: !2102, line: 464, baseType: !2298, size: 64, offset: 256)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !2764, file: !2102, line: 747, baseType: !2857, size: 768)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !2102, line: 469, size: 768, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2862, !2863}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2857, file: !2102, line: 471, baseType: !2767, size: 256)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2857, file: !2102, line: 474, baseType: !7, size: 32, offset: 256)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2857, file: !2102, line: 475, baseType: !7, size: 32, offset: 288)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2857, file: !2102, line: 478, baseType: !2298, size: 64, offset: 320)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2857, file: !2102, line: 481, baseType: !2864, size: 384, offset: 384)
!2864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2865, size: 384, elements: !2217)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !142, line: 1917, size: 384, elements: !2866)
!2866 = !{!2867, !2868, !2869}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !2865, file: !142, line: 1920, baseType: !2804, size: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2865, file: !142, line: 1921, baseType: !2298, size: 64, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2865, file: !142, line: 1922, baseType: !2418, size: 32, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !2764, file: !2102, line: 748, baseType: !2871, size: 320)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !2102, line: 487, size: 320, elements: !2872)
!2872 = !{!2873, !2874}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2871, file: !2102, line: 490, baseType: !2767, size: 256)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2871, file: !2102, line: 494, baseType: !2175, size: 32, offset: 256)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !2764, file: !2102, line: 749, baseType: !2876, size: 384)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !2102, line: 500, size: 384, elements: !2877)
!2877 = !{!2878, !2879, !2880}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2876, file: !2102, line: 502, baseType: !2767, size: 256)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !2876, file: !2102, line: 506, baseType: !2752, size: 64, offset: 256)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2876, file: !2102, line: 510, baseType: !2752, size: 64, offset: 320)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !2764, file: !2102, line: 750, baseType: !2882, size: 320)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !2102, line: 529, size: 320, elements: !2883)
!2883 = !{!2884, !2885}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2882, file: !2102, line: 531, baseType: !2767, size: 256)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2882, file: !2102, line: 540, baseType: !2752, size: 64, offset: 256)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !2764, file: !2102, line: 751, baseType: !2887, size: 704)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !2102, line: 546, size: 704, elements: !2888)
!2888 = !{!2889, !2890, !2891, !2892, !2893, !2894, !2895}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !2887, file: !2102, line: 549, baseType: !2817, size: 512)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2887, file: !2102, line: 553, baseType: !2180, size: 64, offset: 512)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !2887, file: !2102, line: 557, baseType: !2174, size: 8, offset: 576)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2887, file: !2102, line: 558, baseType: !2174, size: 8, offset: 584)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !2887, file: !2102, line: 559, baseType: !2174, size: 8, offset: 592)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !2887, file: !2102, line: 560, baseType: !2174, size: 8, offset: 600)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2887, file: !2102, line: 566, baseType: !2700, size: 64, offset: 640)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !2764, file: !2102, line: 752, baseType: !2897, size: 384)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !2102, line: 571, size: 384, elements: !2898)
!2898 = !{!2899, !2900}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2897, file: !2102, line: 573, baseType: !2828, size: 320)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2897, file: !2102, line: 577, baseType: !2298, size: 64, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !2764, file: !2102, line: 753, baseType: !2902, size: 576)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !2102, line: 600, size: 576, elements: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2916}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2902, file: !2102, line: 602, baseType: !2828, size: 320)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2902, file: !2102, line: 605, baseType: !2298, size: 64, offset: 320)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !2902, file: !2102, line: 609, baseType: !2663, size: 64, offset: 384)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !2902, file: !2102, line: 612, baseType: !2908, size: 64, offset: 448)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !2102, line: 581, size: 320, elements: !2910)
!2910 = !{!2911, !2912, !2913, !2914, !2915}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2909, file: !2102, line: 583, baseType: !141, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2909, file: !2102, line: 586, baseType: !2298, size: 64, offset: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2909, file: !2102, line: 589, baseType: !2298, size: 64, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !2909, file: !2102, line: 592, baseType: !2298, size: 64, offset: 192)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2909, file: !2102, line: 595, baseType: !2298, size: 64, offset: 256)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !2902, file: !2102, line: 616, baseType: !2752, size: 64, offset: 512)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !2764, file: !2102, line: 754, baseType: !2918, size: 512)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !2102, line: 622, size: 512, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2918, file: !2102, line: 624, baseType: !2828, size: 320)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2918, file: !2102, line: 628, baseType: !2298, size: 64, offset: 320)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !2918, file: !2102, line: 632, baseType: !2298, size: 64, offset: 384)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !2918, file: !2102, line: 636, baseType: !2298, size: 64, offset: 448)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !2764, file: !2102, line: 755, baseType: !2925, size: 704)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !2102, line: 642, size: 704, elements: !2926)
!2926 = !{!2927, !2928, !2929, !2930}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2925, file: !2102, line: 644, baseType: !2918, size: 512)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !2925, file: !2102, line: 648, baseType: !2298, size: 64, offset: 512)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2925, file: !2102, line: 652, baseType: !2298, size: 64, offset: 576)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !2925, file: !2102, line: 653, baseType: !2298, size: 64, offset: 640)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !2764, file: !2102, line: 756, baseType: !2932, size: 448)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !2102, line: 663, size: 448, elements: !2933)
!2933 = !{!2934, !2935, !2936}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2932, file: !2102, line: 665, baseType: !2828, size: 320)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2932, file: !2102, line: 668, baseType: !2298, size: 64, offset: 320)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2932, file: !2102, line: 673, baseType: !2298, size: 64, offset: 384)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !2764, file: !2102, line: 757, baseType: !2938, size: 384)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !2102, line: 694, size: 384, elements: !2939)
!2939 = !{!2940, !2941}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2938, file: !2102, line: 696, baseType: !2828, size: 320)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2938, file: !2102, line: 699, baseType: !2298, size: 64, offset: 320)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !2764, file: !2102, line: 758, baseType: !2943, size: 384)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !2102, line: 681, size: 384, elements: !2944)
!2944 = !{!2945, !2946, !2947}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2943, file: !2102, line: 683, baseType: !2767, size: 256)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !2943, file: !2102, line: 686, baseType: !2298, size: 64, offset: 256)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !2943, file: !2102, line: 689, baseType: !2298, size: 64, offset: 320)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !2764, file: !2102, line: 759, baseType: !2949, size: 384)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !2102, line: 707, size: 384, elements: !2950)
!2950 = !{!2951, !2952, !2953}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2949, file: !2102, line: 709, baseType: !2767, size: 256)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2949, file: !2102, line: 712, baseType: !2298, size: 64, offset: 256)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2949, file: !2102, line: 712, baseType: !2298, size: 64, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !2764, file: !2102, line: 760, baseType: !2955, size: 320)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !2102, line: 718, size: 320, elements: !2956)
!2956 = !{!2957, !2958}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2955, file: !2102, line: 720, baseType: !2767, size: 256)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2955, file: !2102, line: 723, baseType: !2298, size: 64, offset: 256)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2759, file: !2102, line: 138, baseType: !2758, size: 64, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2759, file: !2102, line: 139, baseType: !2758, size: 64, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2754, file: !2102, line: 146, baseType: !2757, size: 64, offset: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2754, file: !2102, line: 152, baseType: !2752, size: 64, offset: 128)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2749, file: !337, line: 130, baseType: !2182, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2744, file: !337, line: 134, baseType: !2179, size: 64, offset: 192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !2744, file: !337, line: 137, baseType: !2298, size: 64, offset: 256)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !2744, file: !337, line: 138, baseType: !2418, size: 32, offset: 320)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !2744, file: !337, line: 142, baseType: !7, size: 32, offset: 352)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2744, file: !337, line: 144, baseType: !2175, size: 32, offset: 384)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !2744, file: !337, line: 145, baseType: !2175, size: 32, offset: 416)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2744, file: !337, line: 146, baseType: !2971, size: 64, offset: 448)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !337, line: 119, baseType: !2269)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !2727, file: !337, line: 220, baseType: !2730, size: 64, offset: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2727, file: !337, line: 223, baseType: !2179, size: 64, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !2727, file: !337, line: 226, baseType: !2975, size: 64, offset: 192)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 185, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !2727, file: !337, line: 229, baseType: !2978, size: 128, offset: 256)
!2978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2979, size: 128, elements: !2253)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !337, line: 229, flags: DIFlagFwdDecl)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !2727, file: !337, line: 232, baseType: !2726, size: 64, offset: 384)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !2727, file: !337, line: 233, baseType: !2726, size: 64, offset: 448)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !2727, file: !337, line: 238, baseType: !2984, size: 64, offset: 512)
!2984 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !337, line: 235, size: 64, elements: !2985)
!2985 = !{!2986, !2992}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2984, file: !337, line: 236, baseType: !2987, size: 64)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !337, line: 273, size: 128, elements: !2989)
!2989 = !{!2990, !2991}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2988, file: !337, line: 275, baseType: !2752, size: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2988, file: !337, line: 278, baseType: !2752, size: 64, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2984, file: !337, line: 237, baseType: !2993, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !337, line: 259, size: 320, elements: !2995)
!2995 = !{!2996, !2997, !2998, !2999, !3000}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2994, file: !337, line: 261, baseType: !2182, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2994, file: !337, line: 262, baseType: !2182, size: 64, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2994, file: !337, line: 266, baseType: !2182, size: 64, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2994, file: !337, line: 267, baseType: !2182, size: 64, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2994, file: !337, line: 270, baseType: !2175, size: 32, offset: 256)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2727, file: !337, line: 241, baseType: !2971, size: 64, offset: 576)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2727, file: !337, line: 244, baseType: !2175, size: 32, offset: 640)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !2727, file: !337, line: 247, baseType: !2175, size: 32, offset: 672)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2727, file: !337, line: 250, baseType: !2175, size: 32, offset: 704)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !2727, file: !337, line: 253, baseType: !2175, size: 32, offset: 736)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2727, file: !337, line: 256, baseType: !2175, size: 32, offset: 768)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2722, file: !337, line: 378, baseType: !2725, size: 64, offset: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2722, file: !337, line: 381, baseType: !3009, size: 64, offset: 128)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !337, line: 282, baseType: !3011)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !337, line: 282, size: 128, elements: !3012)
!3012 = !{!3013}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3011, file: !337, line: 282, baseType: !3014, size: 128)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !337, line: 281, baseType: !3015)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !337, line: 281, size: 128, elements: !3016)
!3016 = !{!3017, !3018, !3019}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3015, file: !337, line: 281, baseType: !7, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3015, file: !337, line: 281, baseType: !7, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3015, file: !337, line: 281, baseType: !3020, size: 64, offset: 64)
!3020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2725, size: 64, elements: !2217)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2722, file: !337, line: 384, baseType: !2175, size: 32, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2722, file: !337, line: 387, baseType: !2175, size: 32, offset: 224)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2722, file: !337, line: 390, baseType: !2175, size: 32, offset: 256)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2722, file: !337, line: 394, baseType: !3009, size: 64, offset: 320)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2722, file: !337, line: 396, baseType: !336, size: 32, offset: 384)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2722, file: !337, line: 399, baseType: !3027, size: 64, offset: 416)
!3027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !2253)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2722, file: !337, line: 402, baseType: !3029, size: 64, offset: 480)
!3029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2253)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2722, file: !337, line: 406, baseType: !2175, size: 32, offset: 544)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2722, file: !337, line: 409, baseType: !2175, size: 32, offset: 576)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2553, file: !2554, line: 470, baseType: !2753, size: 64, offset: 128)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2553, file: !2554, line: 473, baseType: !3034, size: 64, offset: 192)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2504, line: 39, size: 1152, elements: !3036)
!3036 = !{!3037, !3038, !3051, !3052, !3053, !3065, !3066, !3069, !3070, !3071, !3072, !3073}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !3035, file: !2504, line: 41, baseType: !2637, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !3035, file: !2504, line: 48, baseType: !3039, size: 64, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !2102, line: 35, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !2102, line: 35, size: 128, elements: !3042)
!3042 = !{!3043}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3041, file: !2102, line: 35, baseType: !3044, size: 128)
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !2102, line: 33, baseType: !3045)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !2102, line: 33, size: 128, elements: !3046)
!3046 = !{!3047, !3048, !3049}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3045, file: !2102, line: 33, baseType: !7, size: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3045, file: !2102, line: 33, baseType: !7, size: 32, offset: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3045, file: !2102, line: 33, baseType: !3050, size: 64, offset: 64)
!3050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2762, size: 64, elements: !2217)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !3035, file: !2504, line: 51, baseType: !2689, size: 64, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !3035, file: !2504, line: 54, baseType: !2298, size: 64, offset: 192)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !3035, file: !2504, line: 57, baseType: !3054, size: 128, offset: 256)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !3055, line: 31, size: 128, elements: !3056)
!3055 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !3054, file: !3055, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !3054, file: !3055, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !3054, file: !3055, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !3054, file: !3055, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !3054, file: !3055, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !3054, file: !3055, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3054, file: !3055, line: 56, baseType: !3064, size: 64, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !2183, line: 47, baseType: !2236)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !3035, file: !2504, line: 60, baseType: !3054, size: 128, offset: 384)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !3035, file: !2504, line: 64, baseType: !3067, size: 64, offset: 512)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !135, line: 27, flags: DIFlagFwdDecl)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !3035, file: !2504, line: 67, baseType: !2298, size: 64, offset: 576)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !3035, file: !2504, line: 73, baseType: !2637, size: 64, offset: 640)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !3035, file: !2504, line: 77, baseType: !3064, size: 64, offset: 704)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !3035, file: !2504, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !3035, file: !2504, line: 82, baseType: !3074, size: 320, offset: 832)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !2793, line: 62, size: 320, elements: !3075)
!3075 = !{!3076, !3082, !3083, !3084, !3085, !3086}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !3074, file: !2793, line: 63, baseType: !3077, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !2793, line: 56, size: 128, elements: !3079)
!3079 = !{!3080, !3081}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3078, file: !2793, line: 57, baseType: !3077, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3078, file: !2793, line: 58, baseType: !2393, size: 8, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !3074, file: !2793, line: 64, baseType: !7, size: 32, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !3074, file: !2793, line: 66, baseType: !7, size: 32, offset: 96)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !3074, file: !2793, line: 68, baseType: !2174, size: 8, offset: 128)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !3074, file: !2793, line: 70, baseType: !2791, size: 64, offset: 192)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !3074, file: !2793, line: 71, baseType: !2799, size: 64, offset: 256)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2553, file: !2554, line: 476, baseType: !3088, size: 64, offset: 256)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !2554, line: 476, flags: DIFlagFwdDecl)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2553, file: !2554, line: 479, baseType: !2637, size: 64, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2553, file: !2554, line: 484, baseType: !2298, size: 64, offset: 384)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2553, file: !2554, line: 488, baseType: !2298, size: 64, offset: 448)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2553, file: !2554, line: 493, baseType: !2298, size: 64, offset: 512)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2553, file: !2554, line: 496, baseType: !2298, size: 64, offset: 576)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2553, file: !2554, line: 501, baseType: !3096, size: 64, offset: 640)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !348, line: 2355, size: 576, elements: !3098)
!3098 = !{!3099, !3102, !3103, !3104, !3105, !3107, !3108, !3113, !3114, !3115, !3116, !3117, !3118}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !3097, file: !348, line: 2356, baseType: !3100, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !348, line: 2356, flags: DIFlagFwdDecl)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !3097, file: !348, line: 2357, baseType: !2180, size: 64, offset: 64)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !3097, file: !348, line: 2358, baseType: !2175, size: 32, offset: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !3097, file: !348, line: 2359, baseType: !2175, size: 32, offset: 160)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !3097, file: !348, line: 2360, baseType: !3106, size: 128, offset: 192)
!3106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 128, elements: !2278)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !3097, file: !348, line: 2364, baseType: !2175, size: 32, offset: 320)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !3097, file: !348, line: 2367, baseType: !3109, size: 128, offset: 384)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !348, line: 2349, size: 128, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3109, file: !348, line: 2351, baseType: !2182, size: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3109, file: !348, line: 2352, baseType: !2269, size: 64, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !3097, file: !348, line: 2371, baseType: !347, size: 32, offset: 512)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !3097, file: !348, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !3097, file: !348, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !3097, file: !348, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !3097, file: !348, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !3097, file: !348, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2553, file: !2554, line: 504, baseType: !3120, size: 64, offset: 704)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !2554, line: 504, flags: DIFlagFwdDecl)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2553, file: !2554, line: 507, baseType: !2637, size: 64, offset: 768)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2553, file: !2554, line: 510, baseType: !2175, size: 32, offset: 832)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2553, file: !2554, line: 513, baseType: !2175, size: 32, offset: 864)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2553, file: !2554, line: 516, baseType: !2418, size: 32, offset: 896)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2553, file: !2554, line: 519, baseType: !2418, size: 32, offset: 928)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2553, file: !2554, line: 522, baseType: !7, size: 32, offset: 960)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2553, file: !2554, line: 523, baseType: !7, size: 32, offset: 992)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2553, file: !2554, line: 528, baseType: !2180, size: 64, offset: 1024)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2553, file: !2554, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2553, file: !2554, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2553, file: !2554, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2553, file: !2554, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2553, file: !2554, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2553, file: !2554, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2553, file: !2554, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2553, file: !2554, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2553, file: !2554, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2553, file: !2554, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2553, file: !2554, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2553, file: !2554, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2553, file: !2554, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2553, file: !2554, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2553, file: !2554, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2553, file: !2554, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2548, file: !142, line: 3254, baseType: !2298, size: 64, offset: 1536)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2548, file: !142, line: 3257, baseType: !2298, size: 64, offset: 1600)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2548, file: !142, line: 3258, baseType: !2298, size: 64, offset: 1664)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2548, file: !142, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2548, file: !142, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2548, file: !142, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2548, file: !142, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2548, file: !142, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2548, file: !142, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2548, file: !142, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2548, file: !142, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2548, file: !142, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2548, file: !142, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2548, file: !142, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2548, file: !142, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2548, file: !142, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2548, file: !142, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2548, file: !142, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2548, file: !142, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2548, file: !142, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2548, file: !142, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2300, file: !142, line: 3394, baseType: !3168, size: 1344)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !142, line: 2279, size: 1344, elements: !3169)
!3169 = !{!3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3195, !3196, !3197, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3168, file: !142, line: 2280, baseType: !2336, size: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3168, file: !142, line: 2281, baseType: !2298, size: 64, offset: 192)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3168, file: !142, line: 2282, baseType: !2298, size: 64, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !3168, file: !142, line: 2283, baseType: !2298, size: 64, offset: 320)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3168, file: !142, line: 2284, baseType: !2298, size: 64, offset: 384)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3168, file: !142, line: 2285, baseType: !7, size: 32, offset: 448)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !3168, file: !142, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !3168, file: !142, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !3168, file: !142, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !3168, file: !142, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !3168, file: !142, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !3168, file: !142, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3168, file: !142, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !3168, file: !142, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !3168, file: !142, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !3168, file: !142, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !3168, file: !142, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !3168, file: !142, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !3168, file: !142, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !3168, file: !142, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !3168, file: !142, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3168, file: !142, line: 2305, baseType: !7, size: 32, offset: 512)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !3168, file: !142, line: 2306, baseType: !3193, size: 32, offset: 544)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !3194, line: 31, baseType: !2175)
!3194 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !3168, file: !142, line: 2307, baseType: !2298, size: 64, offset: 576)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !3168, file: !142, line: 2308, baseType: !2298, size: 64, offset: 640)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !3168, file: !142, line: 2314, baseType: !3198, size: 64, offset: 704)
!3198 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !142, line: 2309, size: 64, elements: !3199)
!3199 = !{!3200, !3201, !3202}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !3198, file: !142, line: 2310, baseType: !2175, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3198, file: !142, line: 2311, baseType: !2180, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !3198, file: !142, line: 2312, baseType: !3203, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !142, line: 2277, flags: DIFlagFwdDecl)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3168, file: !142, line: 2315, baseType: !2298, size: 64, offset: 768)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !3168, file: !142, line: 2316, baseType: !2298, size: 64, offset: 832)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !3168, file: !142, line: 2317, baseType: !2298, size: 64, offset: 896)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !3168, file: !142, line: 2318, baseType: !2298, size: 64, offset: 960)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !3168, file: !142, line: 2319, baseType: !2298, size: 64, offset: 1024)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !3168, file: !142, line: 2320, baseType: !2298, size: 64, offset: 1088)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3168, file: !142, line: 2321, baseType: !2298, size: 64, offset: 1152)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !3168, file: !142, line: 2322, baseType: !2298, size: 64, offset: 1216)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !3168, file: !142, line: 2324, baseType: !3214, size: 64, offset: 1280)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !142, line: 2324, flags: DIFlagFwdDecl)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2300, file: !142, line: 3395, baseType: !3217, size: 320)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !142, line: 1469, size: 320, elements: !3218)
!3218 = !{!3219, !3220, !3221}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3217, file: !142, line: 1470, baseType: !2336, size: 192)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !3217, file: !142, line: 1471, baseType: !2298, size: 64, offset: 192)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3217, file: !142, line: 1472, baseType: !2298, size: 64, offset: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2300, file: !142, line: 3396, baseType: !3223, size: 320)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !142, line: 1482, size: 320, elements: !3224)
!3224 = !{!3225, !3226, !3227}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3223, file: !142, line: 1483, baseType: !2336, size: 192)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3223, file: !142, line: 1484, baseType: !2175, size: 32, offset: 192)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3223, file: !142, line: 1485, baseType: !2700, size: 64, offset: 256)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2300, file: !142, line: 3397, baseType: !3229, size: 384)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !142, line: 1829, size: 384, elements: !3230)
!3230 = !{!3231, !3232, !3233, !3234}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3229, file: !142, line: 1830, baseType: !2336, size: 192)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3229, file: !142, line: 1831, baseType: !2418, size: 32, offset: 192)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3229, file: !142, line: 1832, baseType: !2298, size: 64, offset: 256)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !3229, file: !142, line: 1835, baseType: !2700, size: 64, offset: 320)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2300, file: !142, line: 3398, baseType: !3236, size: 704)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !142, line: 1898, size: 704, elements: !3237)
!3237 = !{!3238, !3239, !3240, !3241, !3242, !3247}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3236, file: !142, line: 1899, baseType: !2336, size: 192)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !3236, file: !142, line: 1902, baseType: !2298, size: 64, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !3236, file: !142, line: 1905, baseType: !2762, size: 64, offset: 256)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3236, file: !142, line: 1908, baseType: !7, size: 32, offset: 320)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !3236, file: !142, line: 1911, baseType: !3243, size: 64, offset: 384)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !2504, line: 117, size: 128, elements: !3245)
!3245 = !{!3246}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !3244, file: !2504, line: 120, baseType: !3054, size: 128)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !3236, file: !142, line: 1914, baseType: !2804, size: 256, offset: 448)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2300, file: !142, line: 3399, baseType: !3249, size: 704)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !142, line: 2008, size: 704, elements: !3250)
!3250 = !{!3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3249, file: !142, line: 2009, baseType: !2336, size: 192)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !3249, file: !142, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !3249, file: !142, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3249, file: !142, line: 2014, baseType: !2418, size: 32, offset: 224)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3249, file: !142, line: 2016, baseType: !2298, size: 64, offset: 256)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !3249, file: !142, line: 2017, baseType: !2689, size: 64, offset: 320)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !3249, file: !142, line: 2019, baseType: !2298, size: 64, offset: 384)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !3249, file: !142, line: 2020, baseType: !2298, size: 64, offset: 448)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !3249, file: !142, line: 2021, baseType: !2298, size: 64, offset: 512)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !3249, file: !142, line: 2022, baseType: !2298, size: 64, offset: 576)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !3249, file: !142, line: 2023, baseType: !2298, size: 64, offset: 640)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2300, file: !142, line: 3400, baseType: !3263, size: 832)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !142, line: 2430, size: 832, elements: !3264)
!3264 = !{!3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3263, file: !142, line: 2431, baseType: !2336, size: 192)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3263, file: !142, line: 2433, baseType: !2298, size: 64, offset: 192)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3263, file: !142, line: 2434, baseType: !2298, size: 64, offset: 256)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !3263, file: !142, line: 2435, baseType: !2298, size: 64, offset: 320)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !3263, file: !142, line: 2436, baseType: !2298, size: 64, offset: 384)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !3263, file: !142, line: 2437, baseType: !2689, size: 64, offset: 448)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !3263, file: !142, line: 2438, baseType: !2298, size: 64, offset: 512)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !3263, file: !142, line: 2440, baseType: !2298, size: 64, offset: 576)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !3263, file: !142, line: 2441, baseType: !2298, size: 64, offset: 640)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !3263, file: !142, line: 2443, baseType: !3275, size: 128, offset: 704)
!3275 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !142, line: 182, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !142, line: 182, size: 128, elements: !3277)
!3277 = !{!3278}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3276, file: !142, line: 182, baseType: !2694, size: 128)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !2300, file: !142, line: 3401, baseType: !3280, size: 320)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !142, line: 3327, size: 320, elements: !3281)
!3281 = !{!3282, !3283, !3290}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3280, file: !142, line: 3329, baseType: !2336, size: 192)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3280, file: !142, line: 3330, baseType: !3284, size: 64, offset: 192)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !142, line: 3320, size: 192, elements: !3286)
!3286 = !{!3287, !3288, !3289}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3285, file: !142, line: 3322, baseType: !3284, size: 64)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3285, file: !142, line: 3323, baseType: !3284, size: 64, offset: 64)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3285, file: !142, line: 3324, baseType: !2298, size: 64, offset: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3280, file: !142, line: 3331, baseType: !3284, size: 64, offset: 256)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2300, file: !142, line: 3402, baseType: !3292, size: 256)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !142, line: 1540, size: 256, elements: !3293)
!3293 = !{!3294, !3295}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3292, file: !142, line: 1541, baseType: !2336, size: 192)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !3292, file: !142, line: 1542, baseType: !3296, size: 64, offset: 192)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !142, line: 1538, baseType: !3298)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !142, line: 1538, size: 192, elements: !3299)
!3299 = !{!3300}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3298, file: !142, line: 1538, baseType: !3301, size: 192)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !142, line: 1537, baseType: !3302)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !142, line: 1537, size: 192, elements: !3303)
!3303 = !{!3304, !3305, !3306}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3302, file: !142, line: 1537, baseType: !7, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3302, file: !142, line: 1537, baseType: !7, size: 32, offset: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3302, file: !142, line: 1537, baseType: !3307, size: 128, offset: 64)
!3307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3308, size: 128, elements: !2217)
!3308 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !142, line: 1535, baseType: !3309)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !142, line: 1532, size: 128, elements: !3310)
!3310 = !{!3311, !3312}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3309, file: !142, line: 1533, baseType: !2298, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3309, file: !142, line: 1534, baseType: !2298, size: 64, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !2300, file: !142, line: 3403, baseType: !3314, size: 512)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !142, line: 1938, size: 512, elements: !3315)
!3315 = !{!3316, !3317, !3318, !3319, !3325, !3326, !3327}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3314, file: !142, line: 1939, baseType: !2336, size: 192)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3314, file: !142, line: 1940, baseType: !2418, size: 32, offset: 192)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3314, file: !142, line: 1941, baseType: !352, size: 32, offset: 224)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !3314, file: !142, line: 1946, baseType: !3320, size: 32, offset: 256)
!3320 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !142, line: 1942, size: 32, elements: !3321)
!3321 = !{!3322, !3323, !3324}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !3320, file: !142, line: 1943, baseType: !370, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !3320, file: !142, line: 1944, baseType: !377, size: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !3320, file: !142, line: 1945, baseType: !141, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !3314, file: !142, line: 1950, baseType: !2752, size: 64, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !3314, file: !142, line: 1951, baseType: !2752, size: 64, offset: 384)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3314, file: !142, line: 1953, baseType: !2700, size: 64, offset: 448)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !2300, file: !142, line: 3404, baseType: !3329, size: 1664)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !142, line: 3337, size: 1664, elements: !3330)
!3330 = !{!3331, !3332}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3329, file: !142, line: 3338, baseType: !2336, size: 192)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3329, file: !142, line: 3341, baseType: !3333, size: 1472, offset: 192)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !3334, line: 410, size: 1472, elements: !3335)
!3334 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3335 = !{!3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !3333, file: !3334, line: 412, baseType: !2175, size: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !3333, file: !3334, line: 413, baseType: !2175, size: 32, offset: 32)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !3333, file: !3334, line: 414, baseType: !2175, size: 32, offset: 64)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !3333, file: !3334, line: 415, baseType: !2175, size: 32, offset: 96)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !3333, file: !3334, line: 416, baseType: !2175, size: 32, offset: 128)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !3333, file: !3334, line: 417, baseType: !2175, size: 32, offset: 160)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !3333, file: !3334, line: 418, baseType: !2174, size: 8, offset: 192)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !3333, file: !3334, line: 419, baseType: !2174, size: 8, offset: 200)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !3333, file: !3334, line: 420, baseType: !3345, size: 8, offset: 208)
!3345 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !3333, file: !3334, line: 421, baseType: !3345, size: 8, offset: 216)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !3333, file: !3334, line: 422, baseType: !3345, size: 8, offset: 224)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !3333, file: !3334, line: 423, baseType: !3345, size: 8, offset: 232)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !3333, file: !3334, line: 424, baseType: !3345, size: 8, offset: 240)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !3333, file: !3334, line: 425, baseType: !3345, size: 8, offset: 248)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !3333, file: !3334, line: 426, baseType: !3345, size: 8, offset: 256)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !3333, file: !3334, line: 427, baseType: !3345, size: 8, offset: 264)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !3333, file: !3334, line: 428, baseType: !3345, size: 8, offset: 272)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !3333, file: !3334, line: 429, baseType: !3345, size: 8, offset: 280)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !3333, file: !3334, line: 430, baseType: !3345, size: 8, offset: 288)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !3333, file: !3334, line: 431, baseType: !3345, size: 8, offset: 296)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !3333, file: !3334, line: 432, baseType: !3345, size: 8, offset: 304)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !3333, file: !3334, line: 433, baseType: !3345, size: 8, offset: 312)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !3333, file: !3334, line: 434, baseType: !3345, size: 8, offset: 320)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !3333, file: !3334, line: 435, baseType: !3345, size: 8, offset: 328)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !3333, file: !3334, line: 436, baseType: !3345, size: 8, offset: 336)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !3333, file: !3334, line: 437, baseType: !3345, size: 8, offset: 344)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !3333, file: !3334, line: 438, baseType: !3345, size: 8, offset: 352)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !3333, file: !3334, line: 439, baseType: !3345, size: 8, offset: 360)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !3333, file: !3334, line: 440, baseType: !3345, size: 8, offset: 368)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !3333, file: !3334, line: 441, baseType: !3345, size: 8, offset: 376)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !3333, file: !3334, line: 442, baseType: !3345, size: 8, offset: 384)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !3333, file: !3334, line: 443, baseType: !3345, size: 8, offset: 392)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !3333, file: !3334, line: 444, baseType: !3345, size: 8, offset: 400)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !3333, file: !3334, line: 445, baseType: !3345, size: 8, offset: 408)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !3333, file: !3334, line: 446, baseType: !3345, size: 8, offset: 416)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !3333, file: !3334, line: 447, baseType: !3345, size: 8, offset: 424)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !3333, file: !3334, line: 448, baseType: !3345, size: 8, offset: 432)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !3333, file: !3334, line: 449, baseType: !3345, size: 8, offset: 440)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !3333, file: !3334, line: 450, baseType: !3345, size: 8, offset: 448)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !3333, file: !3334, line: 451, baseType: !3345, size: 8, offset: 456)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !3333, file: !3334, line: 452, baseType: !3345, size: 8, offset: 464)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !3333, file: !3334, line: 453, baseType: !3345, size: 8, offset: 472)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !3333, file: !3334, line: 454, baseType: !3345, size: 8, offset: 480)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !3333, file: !3334, line: 455, baseType: !3345, size: 8, offset: 488)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !3333, file: !3334, line: 456, baseType: !3345, size: 8, offset: 496)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !3333, file: !3334, line: 457, baseType: !3345, size: 8, offset: 504)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !3333, file: !3334, line: 458, baseType: !3345, size: 8, offset: 512)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !3333, file: !3334, line: 459, baseType: !3345, size: 8, offset: 520)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !3333, file: !3334, line: 460, baseType: !3345, size: 8, offset: 528)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !3333, file: !3334, line: 461, baseType: !3345, size: 8, offset: 536)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !3333, file: !3334, line: 462, baseType: !3345, size: 8, offset: 544)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !3333, file: !3334, line: 463, baseType: !3345, size: 8, offset: 552)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !3333, file: !3334, line: 464, baseType: !3345, size: 8, offset: 560)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !3333, file: !3334, line: 465, baseType: !3345, size: 8, offset: 568)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !3333, file: !3334, line: 466, baseType: !3345, size: 8, offset: 576)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !3333, file: !3334, line: 467, baseType: !3345, size: 8, offset: 584)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !3333, file: !3334, line: 468, baseType: !3345, size: 8, offset: 592)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !3333, file: !3334, line: 469, baseType: !3345, size: 8, offset: 600)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !3333, file: !3334, line: 470, baseType: !3345, size: 8, offset: 608)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !3333, file: !3334, line: 471, baseType: !3345, size: 8, offset: 616)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !3333, file: !3334, line: 472, baseType: !3345, size: 8, offset: 624)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !3333, file: !3334, line: 473, baseType: !3345, size: 8, offset: 632)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !3333, file: !3334, line: 474, baseType: !3345, size: 8, offset: 640)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !3333, file: !3334, line: 475, baseType: !3345, size: 8, offset: 648)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !3333, file: !3334, line: 476, baseType: !3345, size: 8, offset: 656)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !3333, file: !3334, line: 477, baseType: !3345, size: 8, offset: 664)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !3333, file: !3334, line: 478, baseType: !3345, size: 8, offset: 672)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !3333, file: !3334, line: 479, baseType: !3345, size: 8, offset: 680)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !3333, file: !3334, line: 480, baseType: !3345, size: 8, offset: 688)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !3333, file: !3334, line: 481, baseType: !3345, size: 8, offset: 696)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !3333, file: !3334, line: 482, baseType: !3345, size: 8, offset: 704)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !3333, file: !3334, line: 483, baseType: !3345, size: 8, offset: 712)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !3333, file: !3334, line: 484, baseType: !3345, size: 8, offset: 720)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !3333, file: !3334, line: 485, baseType: !3345, size: 8, offset: 728)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !3333, file: !3334, line: 486, baseType: !3345, size: 8, offset: 736)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !3333, file: !3334, line: 487, baseType: !3345, size: 8, offset: 744)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !3333, file: !3334, line: 488, baseType: !3345, size: 8, offset: 752)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !3333, file: !3334, line: 489, baseType: !3345, size: 8, offset: 760)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !3333, file: !3334, line: 490, baseType: !3345, size: 8, offset: 768)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !3333, file: !3334, line: 491, baseType: !3345, size: 8, offset: 776)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !3333, file: !3334, line: 492, baseType: !3345, size: 8, offset: 784)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !3333, file: !3334, line: 493, baseType: !3345, size: 8, offset: 792)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !3333, file: !3334, line: 494, baseType: !3345, size: 8, offset: 800)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !3333, file: !3334, line: 495, baseType: !3345, size: 8, offset: 808)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !3333, file: !3334, line: 496, baseType: !3345, size: 8, offset: 816)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !3333, file: !3334, line: 497, baseType: !3345, size: 8, offset: 824)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !3333, file: !3334, line: 498, baseType: !3345, size: 8, offset: 832)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !3333, file: !3334, line: 499, baseType: !3345, size: 8, offset: 840)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !3333, file: !3334, line: 500, baseType: !3345, size: 8, offset: 848)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !3333, file: !3334, line: 501, baseType: !3345, size: 8, offset: 856)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !3333, file: !3334, line: 502, baseType: !3345, size: 8, offset: 864)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !3333, file: !3334, line: 503, baseType: !3345, size: 8, offset: 872)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !3333, file: !3334, line: 504, baseType: !3345, size: 8, offset: 880)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !3333, file: !3334, line: 505, baseType: !3345, size: 8, offset: 888)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !3333, file: !3334, line: 506, baseType: !3345, size: 8, offset: 896)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !3333, file: !3334, line: 507, baseType: !3345, size: 8, offset: 904)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !3333, file: !3334, line: 508, baseType: !3345, size: 8, offset: 912)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !3333, file: !3334, line: 509, baseType: !3345, size: 8, offset: 920)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !3333, file: !3334, line: 510, baseType: !3345, size: 8, offset: 928)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !3333, file: !3334, line: 511, baseType: !3345, size: 8, offset: 936)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !3333, file: !3334, line: 512, baseType: !3345, size: 8, offset: 944)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !3333, file: !3334, line: 513, baseType: !3345, size: 8, offset: 952)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !3333, file: !3334, line: 514, baseType: !3345, size: 8, offset: 960)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !3333, file: !3334, line: 515, baseType: !3345, size: 8, offset: 968)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !3333, file: !3334, line: 516, baseType: !3345, size: 8, offset: 976)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !3333, file: !3334, line: 517, baseType: !3345, size: 8, offset: 984)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !3333, file: !3334, line: 518, baseType: !3345, size: 8, offset: 992)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !3333, file: !3334, line: 519, baseType: !3345, size: 8, offset: 1000)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !3333, file: !3334, line: 520, baseType: !3345, size: 8, offset: 1008)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !3333, file: !3334, line: 521, baseType: !3345, size: 8, offset: 1016)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !3333, file: !3334, line: 522, baseType: !3345, size: 8, offset: 1024)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !3333, file: !3334, line: 523, baseType: !3345, size: 8, offset: 1032)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !3333, file: !3334, line: 524, baseType: !3345, size: 8, offset: 1040)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !3333, file: !3334, line: 525, baseType: !3345, size: 8, offset: 1048)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !3333, file: !3334, line: 526, baseType: !3345, size: 8, offset: 1056)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !3333, file: !3334, line: 527, baseType: !3345, size: 8, offset: 1064)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !3333, file: !3334, line: 528, baseType: !3345, size: 8, offset: 1072)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !3333, file: !3334, line: 529, baseType: !3345, size: 8, offset: 1080)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !3333, file: !3334, line: 530, baseType: !3345, size: 8, offset: 1088)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !3333, file: !3334, line: 531, baseType: !3345, size: 8, offset: 1096)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !3333, file: !3334, line: 532, baseType: !3345, size: 8, offset: 1104)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !3333, file: !3334, line: 533, baseType: !3345, size: 8, offset: 1112)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !3333, file: !3334, line: 534, baseType: !3345, size: 8, offset: 1120)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !3333, file: !3334, line: 535, baseType: !3345, size: 8, offset: 1128)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !3333, file: !3334, line: 536, baseType: !3345, size: 8, offset: 1136)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !3333, file: !3334, line: 537, baseType: !3345, size: 8, offset: 1144)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !3333, file: !3334, line: 538, baseType: !3345, size: 8, offset: 1152)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !3333, file: !3334, line: 539, baseType: !3345, size: 8, offset: 1160)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !3333, file: !3334, line: 540, baseType: !3345, size: 8, offset: 1168)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !3333, file: !3334, line: 541, baseType: !3345, size: 8, offset: 1176)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !3333, file: !3334, line: 542, baseType: !3345, size: 8, offset: 1184)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !3333, file: !3334, line: 543, baseType: !3345, size: 8, offset: 1192)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !3333, file: !3334, line: 544, baseType: !3345, size: 8, offset: 1200)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !3333, file: !3334, line: 545, baseType: !3345, size: 8, offset: 1208)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !3333, file: !3334, line: 546, baseType: !3345, size: 8, offset: 1216)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !3333, file: !3334, line: 547, baseType: !3345, size: 8, offset: 1224)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !3333, file: !3334, line: 548, baseType: !3345, size: 8, offset: 1232)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !3333, file: !3334, line: 549, baseType: !3345, size: 8, offset: 1240)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !3333, file: !3334, line: 550, baseType: !3345, size: 8, offset: 1248)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !3333, file: !3334, line: 551, baseType: !3345, size: 8, offset: 1256)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !3333, file: !3334, line: 552, baseType: !3345, size: 8, offset: 1264)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !3333, file: !3334, line: 553, baseType: !3345, size: 8, offset: 1272)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !3333, file: !3334, line: 554, baseType: !3345, size: 8, offset: 1280)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !3333, file: !3334, line: 555, baseType: !3345, size: 8, offset: 1288)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !3333, file: !3334, line: 556, baseType: !3345, size: 8, offset: 1296)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !3333, file: !3334, line: 557, baseType: !3345, size: 8, offset: 1304)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !3333, file: !3334, line: 558, baseType: !3345, size: 8, offset: 1312)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !3333, file: !3334, line: 559, baseType: !3345, size: 8, offset: 1320)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !3333, file: !3334, line: 560, baseType: !3345, size: 8, offset: 1328)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !3333, file: !3334, line: 561, baseType: !3345, size: 8, offset: 1336)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !3333, file: !3334, line: 562, baseType: !3345, size: 8, offset: 1344)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !3333, file: !3334, line: 563, baseType: !3345, size: 8, offset: 1352)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !3333, file: !3334, line: 564, baseType: !3345, size: 8, offset: 1360)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !3333, file: !3334, line: 565, baseType: !3345, size: 8, offset: 1368)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !3333, file: !3334, line: 566, baseType: !3345, size: 8, offset: 1376)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !3333, file: !3334, line: 567, baseType: !3345, size: 8, offset: 1384)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !3333, file: !3334, line: 568, baseType: !3345, size: 8, offset: 1392)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !3333, file: !3334, line: 569, baseType: !3345, size: 8, offset: 1400)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !3333, file: !3334, line: 570, baseType: !3345, size: 8, offset: 1408)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !3333, file: !3334, line: 571, baseType: !3345, size: 8, offset: 1416)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !3333, file: !3334, line: 572, baseType: !3345, size: 8, offset: 1424)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !3333, file: !3334, line: 573, baseType: !3345, size: 8, offset: 1432)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !3333, file: !3334, line: 574, baseType: !3345, size: 8, offset: 1440)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !2300, file: !142, line: 3405, baseType: !3501, size: 384)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !142, line: 3352, size: 384, elements: !3502)
!3502 = !{!3503, !3504}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3501, file: !142, line: 3353, baseType: !2336, size: 192)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3501, file: !142, line: 3356, baseType: !3505, size: 192, offset: 192)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !3334, line: 578, size: 192, elements: !3506)
!3506 = !{!3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !3505, file: !3334, line: 580, baseType: !2175, size: 32)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !3505, file: !3334, line: 581, baseType: !2175, size: 32, offset: 32)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !3505, file: !3334, line: 582, baseType: !2175, size: 32, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !3505, file: !3334, line: 583, baseType: !2175, size: 32, offset: 96)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3505, file: !3334, line: 584, baseType: !2174, size: 8, offset: 128)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !3505, file: !3334, line: 585, baseType: !2174, size: 8, offset: 136)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !3505, file: !3334, line: 586, baseType: !2174, size: 8, offset: 144)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !3505, file: !3334, line: 587, baseType: !2174, size: 8, offset: 152)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !3505, file: !3334, line: 588, baseType: !2174, size: 8, offset: 160)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !3505, file: !3334, line: 589, baseType: !2174, size: 8, offset: 168)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !3505, file: !3334, line: 590, baseType: !2174, size: 8, offset: 176)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !2203, file: !1899, line: 178, baseType: !2726, size: 64)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !2203, file: !1899, line: 179, baseType: !3520, size: 64)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !1899, line: 150, baseType: !3522)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !1899, line: 142, size: 320, elements: !3523)
!3523 = !{!3524, !3525, !3526, !3527, !3528, !3529}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !3522, file: !1899, line: 144, baseType: !2298, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3522, file: !1899, line: 145, baseType: !2182, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3522, file: !1899, line: 146, baseType: !2182, size: 64, offset: 128)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3522, file: !1899, line: 147, baseType: !3193, size: 32, offset: 192)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3522, file: !1899, line: 148, baseType: !7, size: 32, offset: 224)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !3522, file: !1899, line: 149, baseType: !2174, size: 8, offset: 256)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !2203, file: !1899, line: 180, baseType: !3531, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !1899, line: 162, baseType: !3533)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !1899, line: 159, size: 128, elements: !3534)
!3534 = !{!3535, !3536}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3533, file: !1899, line: 160, baseType: !2298, size: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3533, file: !1899, line: 161, baseType: !2269, size: 64, offset: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !2203, file: !1899, line: 181, baseType: !3538, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !1899, line: 181, flags: DIFlagFwdDecl)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !2198, file: !1899, line: 317, baseType: !3541, size: 64)
!3541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2269, size: 64, elements: !2217)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !2198, file: !1899, line: 318, baseType: !3543, size: 320)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !1899, line: 188, size: 320, elements: !3544)
!3544 = !{!3545, !3547, !3602}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !3543, file: !1899, line: 190, baseType: !3546, size: 192)
!3546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 192, elements: !2369)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3543, file: !1899, line: 193, baseType: !3548, size: 64, offset: 192)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !1899, line: 206, size: 320, elements: !3550)
!3550 = !{!3551, !3587, !3588, !3589, !3601}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !3549, file: !1899, line: 208, baseType: !3552, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !2183, line: 62, baseType: !3554)
!3554 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !3555, line: 538, size: 256, elements: !3556)
!3555 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3556 = !{!3557, !3561, !3567, !3578}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3554, file: !3555, line: 539, baseType: !3558, size: 32)
!3558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !3555, line: 482, size: 32, elements: !3559)
!3559 = !{!3560}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3558, file: !3555, line: 484, baseType: !7, size: 32)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !3554, file: !3555, line: 540, baseType: !3562, size: 192)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !3555, line: 488, size: 192, elements: !3563)
!3563 = !{!3564, !3565, !3566}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3562, file: !3555, line: 489, baseType: !3558, size: 32)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3562, file: !3555, line: 492, baseType: !2180, size: 64, offset: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3562, file: !3555, line: 496, baseType: !2298, size: 64, offset: 128)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !3554, file: !3555, line: 541, baseType: !3568, size: 256)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !3555, line: 504, size: 256, elements: !3569)
!3569 = !{!3570, !3571, !3576, !3577}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3568, file: !3555, line: 505, baseType: !3558, size: 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3568, file: !3555, line: 509, baseType: !3572, size: 64, offset: 64)
!3572 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !3555, line: 501, baseType: !3573)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{null, !2648}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3568, file: !3555, line: 510, baseType: !2648, size: 64, offset: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3568, file: !3555, line: 513, baseType: !3552, size: 64, offset: 192)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !3554, file: !3555, line: 542, baseType: !3579, size: 128)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !3555, line: 530, size: 128, elements: !3580)
!3580 = !{!3581, !3582}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3579, file: !3555, line: 531, baseType: !3558, size: 32)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3579, file: !3555, line: 534, baseType: !3583, size: 64, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !3555, line: 525, baseType: !3584)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!2174, !2298, !2180, !2252, !2252}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3549, file: !1899, line: 211, baseType: !7, size: 32, offset: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3549, file: !1899, line: 214, baseType: !2269, size: 64, offset: 128)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3549, file: !1899, line: 224, baseType: !3590, size: 64, offset: 192)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !1899, line: 202, baseType: !3592)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !1899, line: 202, size: 128, elements: !3593)
!3593 = !{!3594}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3592, file: !1899, line: 202, baseType: !3595, size: 128)
!3595 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !1899, line: 200, baseType: !3596)
!3596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !1899, line: 200, size: 128, elements: !3597)
!3597 = !{!3598, !3599, !3600}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3596, file: !1899, line: 200, baseType: !7, size: 32)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3596, file: !1899, line: 200, baseType: !7, size: 32, offset: 32)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3596, file: !1899, line: 200, baseType: !2216, size: 64, offset: 64)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !3549, file: !1899, line: 234, baseType: !3590, size: 64, offset: 256)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3543, file: !1899, line: 197, baseType: !2269, size: 64, offset: 256)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !2198, file: !1899, line: 319, baseType: !2358, size: 256)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !2198, file: !1899, line: 320, baseType: !2377, size: 192)
!3605 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2300)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2358)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2764)
!3613 = !{!3614, !3628, !3630, !0, !3635, !3639, !3642, !3644, !3646, !3648, !3650, !3652, !3654, !3656, !3658, !3660, !3662, !3664, !3666, !3668, !3670, !3672, !3674, !3676, !3678, !3680, !3682, !3684, !3686, !3688, !3690, !3692, !3694, !3696, !3703}
!3614 = !DIGlobalVariableExpression(var: !3615, expr: !DIExpression())
!3615 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_expr_h", scope: !2, file: !3616, line: 24, type: !3617, isLocal: false, isDefinition: true)
!3616 = !DIFile(filename: "./gt-expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3618, size: 640, elements: !2253)
!3618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3619)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !3620, line: 69, size: 320, elements: !3621)
!3620 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3621 = !{!3622, !3623, !3624, !3625, !3627}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3619, file: !3620, line: 70, baseType: !2179, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !3619, file: !3620, line: 71, baseType: !2663, size: 64, offset: 64)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !3619, file: !3620, line: 72, baseType: !2663, size: 64, offset: 128)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !3619, file: !3620, line: 73, baseType: !3626, size: 64, offset: 192)
!3626 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !3620, line: 65, baseType: !2657)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !3619, file: !3620, line: 74, baseType: !3626, size: 64, offset: 256)
!3628 = !DIGlobalVariableExpression(var: !3629, expr: !DIExpression())
!3629 = distinct !DIGlobalVariable(name: "cse_not_expected", scope: !2, file: !3, line: 90, type: !2175, isLocal: false, isDefinition: true)
!3630 = !DIGlobalVariableExpression(var: !3631, expr: !DIExpression())
!3631 = distinct !DIGlobalVariable(name: "direct_load", scope: !2, file: !3, line: 167, type: !3632, isLocal: true, isDefinition: true)
!3632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2178, size: 696, elements: !3633)
!3633 = !{!3634}
!3634 = !DISubrange(count: 87)
!3635 = !DIGlobalVariableExpression(var: !3636, expr: !DIExpression())
!3636 = distinct !DIGlobalVariable(name: "float_extend_from_mem", scope: !2, file: !3, line: 172, type: !3637, isLocal: true, isDefinition: true)
!3637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2174, size: 60552, elements: !3638)
!3638 = !{!3634, !3634}
!3639 = !DIGlobalVariableExpression(var: !3640, expr: !DIExpression())
!3640 = distinct !DIGlobalVariable(name: "movmem_optab", scope: !2, file: !3, line: 207, type: !3641, isLocal: false, isDefinition: true)
!3641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 2784, elements: !3633)
!3642 = !DIGlobalVariableExpression(var: !3643, expr: !DIExpression())
!3643 = distinct !DIGlobalVariable(name: "setmem_optab", scope: !2, file: !3, line: 210, type: !3641, isLocal: false, isDefinition: true)
!3644 = !DIGlobalVariableExpression(var: !3645, expr: !DIExpression())
!3645 = distinct !DIGlobalVariable(name: "cmpstr_optab", scope: !2, file: !3, line: 214, type: !3641, isLocal: false, isDefinition: true)
!3646 = !DIGlobalVariableExpression(var: !3647, expr: !DIExpression())
!3647 = distinct !DIGlobalVariable(name: "cmpstrn_optab", scope: !2, file: !3, line: 215, type: !3641, isLocal: false, isDefinition: true)
!3648 = !DIGlobalVariableExpression(var: !3649, expr: !DIExpression())
!3649 = distinct !DIGlobalVariable(name: "cmpmem_optab", scope: !2, file: !3, line: 216, type: !3641, isLocal: false, isDefinition: true)
!3650 = !DIGlobalVariableExpression(var: !3651, expr: !DIExpression())
!3651 = distinct !DIGlobalVariable(name: "sync_add_optab", scope: !2, file: !3, line: 219, type: !3641, isLocal: false, isDefinition: true)
!3652 = !DIGlobalVariableExpression(var: !3653, expr: !DIExpression())
!3653 = distinct !DIGlobalVariable(name: "sync_sub_optab", scope: !2, file: !3, line: 220, type: !3641, isLocal: false, isDefinition: true)
!3654 = !DIGlobalVariableExpression(var: !3655, expr: !DIExpression())
!3655 = distinct !DIGlobalVariable(name: "sync_ior_optab", scope: !2, file: !3, line: 221, type: !3641, isLocal: false, isDefinition: true)
!3656 = !DIGlobalVariableExpression(var: !3657, expr: !DIExpression())
!3657 = distinct !DIGlobalVariable(name: "sync_and_optab", scope: !2, file: !3, line: 222, type: !3641, isLocal: false, isDefinition: true)
!3658 = !DIGlobalVariableExpression(var: !3659, expr: !DIExpression())
!3659 = distinct !DIGlobalVariable(name: "sync_xor_optab", scope: !2, file: !3, line: 223, type: !3641, isLocal: false, isDefinition: true)
!3660 = !DIGlobalVariableExpression(var: !3661, expr: !DIExpression())
!3661 = distinct !DIGlobalVariable(name: "sync_nand_optab", scope: !2, file: !3, line: 224, type: !3641, isLocal: false, isDefinition: true)
!3662 = !DIGlobalVariableExpression(var: !3663, expr: !DIExpression())
!3663 = distinct !DIGlobalVariable(name: "sync_old_add_optab", scope: !2, file: !3, line: 225, type: !3641, isLocal: false, isDefinition: true)
!3664 = !DIGlobalVariableExpression(var: !3665, expr: !DIExpression())
!3665 = distinct !DIGlobalVariable(name: "sync_old_sub_optab", scope: !2, file: !3, line: 226, type: !3641, isLocal: false, isDefinition: true)
!3666 = !DIGlobalVariableExpression(var: !3667, expr: !DIExpression())
!3667 = distinct !DIGlobalVariable(name: "sync_old_ior_optab", scope: !2, file: !3, line: 227, type: !3641, isLocal: false, isDefinition: true)
!3668 = !DIGlobalVariableExpression(var: !3669, expr: !DIExpression())
!3669 = distinct !DIGlobalVariable(name: "sync_old_and_optab", scope: !2, file: !3, line: 228, type: !3641, isLocal: false, isDefinition: true)
!3670 = !DIGlobalVariableExpression(var: !3671, expr: !DIExpression())
!3671 = distinct !DIGlobalVariable(name: "sync_old_xor_optab", scope: !2, file: !3, line: 229, type: !3641, isLocal: false, isDefinition: true)
!3672 = !DIGlobalVariableExpression(var: !3673, expr: !DIExpression())
!3673 = distinct !DIGlobalVariable(name: "sync_old_nand_optab", scope: !2, file: !3, line: 230, type: !3641, isLocal: false, isDefinition: true)
!3674 = !DIGlobalVariableExpression(var: !3675, expr: !DIExpression())
!3675 = distinct !DIGlobalVariable(name: "sync_new_add_optab", scope: !2, file: !3, line: 231, type: !3641, isLocal: false, isDefinition: true)
!3676 = !DIGlobalVariableExpression(var: !3677, expr: !DIExpression())
!3677 = distinct !DIGlobalVariable(name: "sync_new_sub_optab", scope: !2, file: !3, line: 232, type: !3641, isLocal: false, isDefinition: true)
!3678 = !DIGlobalVariableExpression(var: !3679, expr: !DIExpression())
!3679 = distinct !DIGlobalVariable(name: "sync_new_ior_optab", scope: !2, file: !3, line: 233, type: !3641, isLocal: false, isDefinition: true)
!3680 = !DIGlobalVariableExpression(var: !3681, expr: !DIExpression())
!3681 = distinct !DIGlobalVariable(name: "sync_new_and_optab", scope: !2, file: !3, line: 234, type: !3641, isLocal: false, isDefinition: true)
!3682 = !DIGlobalVariableExpression(var: !3683, expr: !DIExpression())
!3683 = distinct !DIGlobalVariable(name: "sync_new_xor_optab", scope: !2, file: !3, line: 235, type: !3641, isLocal: false, isDefinition: true)
!3684 = !DIGlobalVariableExpression(var: !3685, expr: !DIExpression())
!3685 = distinct !DIGlobalVariable(name: "sync_new_nand_optab", scope: !2, file: !3, line: 236, type: !3641, isLocal: false, isDefinition: true)
!3686 = !DIGlobalVariableExpression(var: !3687, expr: !DIExpression())
!3687 = distinct !DIGlobalVariable(name: "sync_compare_and_swap", scope: !2, file: !3, line: 237, type: !3641, isLocal: false, isDefinition: true)
!3688 = !DIGlobalVariableExpression(var: !3689, expr: !DIExpression())
!3689 = distinct !DIGlobalVariable(name: "sync_lock_test_and_set", scope: !2, file: !3, line: 238, type: !3641, isLocal: false, isDefinition: true)
!3690 = !DIGlobalVariableExpression(var: !3691, expr: !DIExpression())
!3691 = distinct !DIGlobalVariable(name: "sync_lock_release", scope: !2, file: !3, line: 239, type: !3641, isLocal: false, isDefinition: true)
!3692 = !DIGlobalVariableExpression(var: !3693, expr: !DIExpression())
!3693 = distinct !DIGlobalVariable(name: "block_move_fn", scope: !2, file: !3, line: 1423, type: !2298, isLocal: true, isDefinition: true)
!3694 = !DIGlobalVariableExpression(var: !3695, expr: !DIExpression())
!3695 = distinct !DIGlobalVariable(name: "block_clear_fn", scope: !2, file: !3, line: 2728, type: !2298, isLocal: false, isDefinition: true)
!3696 = !DIGlobalVariableExpression(var: !3697, expr: !DIExpression())
!3697 = distinct !DIGlobalVariable(name: "emitted_extern", scope: !3698, file: !3, line: 1455, type: !2174, isLocal: true, isDefinition: true)
!3698 = distinct !DISubprogram(name: "emit_block_move_libcall_fn", scope: !3, file: !3, line: 1453, type: !3699, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3701)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!2298, !2175}
!3701 = !{!3702}
!3702 = !DILocalVariable(name: "for_call", arg: 1, scope: !3698, file: !3, line: 1453, type: !2175)
!3703 = !DIGlobalVariableExpression(var: !3704, expr: !DIExpression())
!3704 = distinct !DIGlobalVariable(name: "emitted_extern", scope: !3705, file: !3, line: 2760, type: !2174, isLocal: true, isDefinition: true)
!3705 = distinct !DISubprogram(name: "clear_storage_libcall_fn", scope: !3, file: !3, line: 2758, type: !3699, scopeLine: 2759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3706)
!3706 = !{!3707}
!3707 = !DILocalVariable(name: "for_call", arg: 1, scope: !3705, file: !3, line: 2758, type: !2175)
!3708 = !DIGlobalVariableExpression(var: !3697, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3709 = !DIGlobalVariableExpression(var: !3704, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3710 = !{i32 2, !"Dwarf Version", i32 4}
!3711 = !{i32 2, !"Debug Info Version", i32 3}
!3712 = !{i32 1, !"wchar_size", i32 4}
!3713 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!3714 = distinct !DISubprogram(name: "vprintf", scope: !3715, file: !3715, line: 39, type: !3716, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3726)
!3715 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!2175, !3718, !3719}
!3718 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2180)
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !3721)
!3721 = !{!3722, !3723, !3724, !3725}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3720, file: !3, baseType: !7, size: 32)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3720, file: !3, baseType: !7, size: 32, offset: 32)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3720, file: !3, baseType: !2179, size: 64, offset: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3720, file: !3, baseType: !2179, size: 64, offset: 128)
!3726 = !{!3727, !3728}
!3727 = !DILocalVariable(name: "__fmt", arg: 1, scope: !3714, file: !3715, line: 39, type: !3718)
!3728 = !DILocalVariable(name: "__arg", arg: 2, scope: !3714, file: !3715, line: 39, type: !3719)
!3729 = !DILocation(line: 0, scope: !3714)
!3730 = !DILocation(line: 41, column: 20, scope: !3714)
!3731 = !DILocation(line: 41, column: 10, scope: !3714)
!3732 = !DILocation(line: 41, column: 3, scope: !3714)
!3733 = distinct !DISubprogram(name: "getchar", scope: !3715, file: !3715, line: 47, type: !3734, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3736)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!2175}
!3736 = !{}
!3737 = !DILocation(line: 49, column: 16, scope: !3733)
!3738 = !DILocation(line: 49, column: 10, scope: !3733)
!3739 = !DILocation(line: 49, column: 3, scope: !3733)
!3740 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !3715, file: !3715, line: 56, type: !3741, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3793)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!2175, !3743}
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3745, line: 7, baseType: !3746)
!3745 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3747, line: 49, size: 1728, elements: !3748)
!3747 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3748 = !{!3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3764, !3766, !3767, !3768, !3771, !3772, !3773, !3774, !3777, !3779, !3782, !3785, !3786, !3787, !3788, !3789}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3746, file: !3747, line: 51, baseType: !2175, size: 32)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3746, file: !3747, line: 54, baseType: !2177, size: 64, offset: 64)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3746, file: !3747, line: 55, baseType: !2177, size: 64, offset: 128)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3746, file: !3747, line: 56, baseType: !2177, size: 64, offset: 192)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3746, file: !3747, line: 57, baseType: !2177, size: 64, offset: 256)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3746, file: !3747, line: 58, baseType: !2177, size: 64, offset: 320)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3746, file: !3747, line: 59, baseType: !2177, size: 64, offset: 384)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3746, file: !3747, line: 60, baseType: !2177, size: 64, offset: 448)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3746, file: !3747, line: 61, baseType: !2177, size: 64, offset: 512)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3746, file: !3747, line: 64, baseType: !2177, size: 64, offset: 576)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3746, file: !3747, line: 65, baseType: !2177, size: 64, offset: 640)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3746, file: !3747, line: 66, baseType: !2177, size: 64, offset: 704)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3746, file: !3747, line: 68, baseType: !3762, size: 64, offset: 768)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3747, line: 36, flags: DIFlagFwdDecl)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3746, file: !3747, line: 70, baseType: !3765, size: 64, offset: 832)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3746, file: !3747, line: 72, baseType: !2175, size: 32, offset: 896)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3746, file: !3747, line: 73, baseType: !2175, size: 32, offset: 928)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3746, file: !3747, line: 74, baseType: !3769, size: 64, offset: 960)
!3769 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3770, line: 152, baseType: !2269)
!3770 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3746, file: !3747, line: 77, baseType: !3605, size: 16, offset: 1024)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3746, file: !3747, line: 78, baseType: !3345, size: 8, offset: 1040)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3746, file: !3747, line: 79, baseType: !2393, size: 8, offset: 1048)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3746, file: !3747, line: 81, baseType: !3775, size: 64, offset: 1088)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3747, line: 43, baseType: null)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3746, file: !3747, line: 89, baseType: !3778, size: 64, offset: 1152)
!3778 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3770, line: 153, baseType: !2269)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3746, file: !3747, line: 91, baseType: !3780, size: 64, offset: 1216)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3747, line: 37, flags: DIFlagFwdDecl)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3746, file: !3747, line: 92, baseType: !3783, size: 64, offset: 1280)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3747, line: 38, flags: DIFlagFwdDecl)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3746, file: !3747, line: 93, baseType: !3765, size: 64, offset: 1344)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3746, file: !3747, line: 94, baseType: !2179, size: 64, offset: 1408)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3746, file: !3747, line: 95, baseType: !2663, size: 64, offset: 1472)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3746, file: !3747, line: 96, baseType: !2175, size: 32, offset: 1536)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3746, file: !3747, line: 98, baseType: !3790, size: 160, offset: 1568)
!3790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2178, size: 160, elements: !3791)
!3791 = !{!3792}
!3792 = !DISubrange(count: 20)
!3793 = !{!3794}
!3794 = !DILocalVariable(name: "__fp", arg: 1, scope: !3740, file: !3715, line: 56, type: !3743)
!3795 = !DILocation(line: 0, scope: !3740)
!3796 = !DILocation(line: 58, column: 10, scope: !3740)
!3797 = !DILocation(line: 58, column: 3, scope: !3740)
!3798 = distinct !DISubprogram(name: "getc_unlocked", scope: !3715, file: !3715, line: 66, type: !3741, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3799)
!3799 = !{!3800}
!3800 = !DILocalVariable(name: "__fp", arg: 1, scope: !3798, file: !3715, line: 66, type: !3743)
!3801 = !DILocation(line: 0, scope: !3798)
!3802 = !DILocation(line: 68, column: 10, scope: !3798)
!3803 = !DILocation(line: 68, column: 3, scope: !3798)
!3804 = distinct !DISubprogram(name: "getchar_unlocked", scope: !3715, file: !3715, line: 73, type: !3734, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3736)
!3805 = !DILocation(line: 75, column: 10, scope: !3804)
!3806 = !DILocation(line: 75, column: 3, scope: !3804)
!3807 = distinct !DISubprogram(name: "putchar", scope: !3715, file: !3715, line: 82, type: !3808, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3810)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{!2175, !2175}
!3810 = !{!3811}
!3811 = !DILocalVariable(name: "__c", arg: 1, scope: !3807, file: !3715, line: 82, type: !2175)
!3812 = !DILocation(line: 0, scope: !3807)
!3813 = !DILocation(line: 84, column: 21, scope: !3807)
!3814 = !DILocation(line: 84, column: 10, scope: !3807)
!3815 = !DILocation(line: 84, column: 3, scope: !3807)
!3816 = distinct !DISubprogram(name: "fputc_unlocked", scope: !3715, file: !3715, line: 91, type: !3817, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3819)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!2175, !2175, !3743}
!3819 = !{!3820, !3821}
!3820 = !DILocalVariable(name: "__c", arg: 1, scope: !3816, file: !3715, line: 91, type: !2175)
!3821 = !DILocalVariable(name: "__stream", arg: 2, scope: !3816, file: !3715, line: 91, type: !3743)
!3822 = !DILocation(line: 0, scope: !3816)
!3823 = !DILocation(line: 93, column: 10, scope: !3816)
!3824 = !DILocation(line: 93, column: 3, scope: !3816)
!3825 = distinct !DISubprogram(name: "putc_unlocked", scope: !3715, file: !3715, line: 101, type: !3817, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3826)
!3826 = !{!3827, !3828}
!3827 = !DILocalVariable(name: "__c", arg: 1, scope: !3825, file: !3715, line: 101, type: !2175)
!3828 = !DILocalVariable(name: "__stream", arg: 2, scope: !3825, file: !3715, line: 101, type: !3743)
!3829 = !DILocation(line: 0, scope: !3825)
!3830 = !DILocation(line: 103, column: 10, scope: !3825)
!3831 = !DILocation(line: 103, column: 3, scope: !3825)
!3832 = distinct !DISubprogram(name: "putchar_unlocked", scope: !3715, file: !3715, line: 108, type: !3808, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3833)
!3833 = !{!3834}
!3834 = !DILocalVariable(name: "__c", arg: 1, scope: !3832, file: !3715, line: 108, type: !2175)
!3835 = !DILocation(line: 0, scope: !3832)
!3836 = !DILocation(line: 110, column: 10, scope: !3832)
!3837 = !DILocation(line: 110, column: 3, scope: !3832)
!3838 = distinct !DISubprogram(name: "getline", scope: !3715, file: !3715, line: 118, type: !3839, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3843)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!3841, !2176, !3842, !3743}
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !3770, line: 193, baseType: !2269)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!3843 = !{!3844, !3845, !3846}
!3844 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !3838, file: !3715, line: 118, type: !2176)
!3845 = !DILocalVariable(name: "__n", arg: 2, scope: !3838, file: !3715, line: 118, type: !3842)
!3846 = !DILocalVariable(name: "__stream", arg: 3, scope: !3838, file: !3715, line: 118, type: !3743)
!3847 = !DILocation(line: 0, scope: !3838)
!3848 = !DILocation(line: 120, column: 10, scope: !3838)
!3849 = !DILocation(line: 120, column: 3, scope: !3838)
!3850 = distinct !DISubprogram(name: "feof_unlocked", scope: !3715, file: !3715, line: 128, type: !3741, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3851)
!3851 = !{!3852}
!3852 = !DILocalVariable(name: "__stream", arg: 1, scope: !3850, file: !3715, line: 128, type: !3743)
!3853 = !DILocation(line: 0, scope: !3850)
!3854 = !DILocation(line: 130, column: 10, scope: !3850)
!3855 = !DILocation(line: 130, column: 3, scope: !3850)
!3856 = distinct !DISubprogram(name: "ferror_unlocked", scope: !3715, file: !3715, line: 135, type: !3741, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3857)
!3857 = !{!3858}
!3858 = !DILocalVariable(name: "__stream", arg: 1, scope: !3856, file: !3715, line: 135, type: !3743)
!3859 = !DILocation(line: 0, scope: !3856)
!3860 = !DILocation(line: 137, column: 10, scope: !3856)
!3861 = !DILocation(line: 137, column: 3, scope: !3856)
!3862 = distinct !DISubprogram(name: "tolower", scope: !3863, file: !3863, line: 207, type: !3808, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3864)
!3863 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!3864 = !{!3865}
!3865 = !DILocalVariable(name: "__c", arg: 1, scope: !3862, file: !3863, line: 207, type: !2175)
!3866 = !DILocation(line: 0, scope: !3862)
!3867 = !DILocation(line: 209, column: 22, scope: !3862)
!3868 = !DILocation(line: 209, column: 39, scope: !3862)
!3869 = !DILocation(line: 209, column: 38, scope: !3862)
!3870 = !DILocation(line: 209, column: 37, scope: !3862)
!3871 = !DILocation(line: 209, column: 10, scope: !3862)
!3872 = !DILocation(line: 209, column: 3, scope: !3862)
!3873 = distinct !DISubprogram(name: "toupper", scope: !3863, file: !3863, line: 213, type: !3808, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3874)
!3874 = !{!3875}
!3875 = !DILocalVariable(name: "__c", arg: 1, scope: !3873, file: !3863, line: 213, type: !2175)
!3876 = !DILocation(line: 0, scope: !3873)
!3877 = !DILocation(line: 215, column: 22, scope: !3873)
!3878 = !DILocation(line: 215, column: 39, scope: !3873)
!3879 = !DILocation(line: 215, column: 38, scope: !3873)
!3880 = !DILocation(line: 215, column: 37, scope: !3873)
!3881 = !DILocation(line: 215, column: 10, scope: !3873)
!3882 = !DILocation(line: 215, column: 3, scope: !3873)
!3883 = distinct !DISubprogram(name: "atoi", scope: !3884, file: !3884, line: 361, type: !3885, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3887)
!3884 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!2175, !2180}
!3887 = !{!3888}
!3888 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3883, file: !3884, line: 361, type: !2180)
!3889 = !DILocation(line: 0, scope: !3883)
!3890 = !DILocation(line: 363, column: 16, scope: !3883)
!3891 = !DILocation(line: 363, column: 10, scope: !3883)
!3892 = !DILocation(line: 363, column: 3, scope: !3883)
!3893 = distinct !DISubprogram(name: "atol", scope: !3884, file: !3884, line: 366, type: !3894, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3896)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!2269, !2180}
!3896 = !{!3897}
!3897 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3893, file: !3884, line: 366, type: !2180)
!3898 = !DILocation(line: 0, scope: !3893)
!3899 = !DILocation(line: 368, column: 10, scope: !3893)
!3900 = !DILocation(line: 368, column: 3, scope: !3893)
!3901 = distinct !DISubprogram(name: "atoll", scope: !3884, file: !3884, line: 373, type: !3902, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3905)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!3904, !2180}
!3904 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!3905 = !{!3906}
!3906 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3901, file: !3884, line: 373, type: !2180)
!3907 = !DILocation(line: 0, scope: !3901)
!3908 = !DILocation(line: 375, column: 10, scope: !3901)
!3909 = !DILocation(line: 375, column: 3, scope: !3901)
!3910 = distinct !DISubprogram(name: "bsearch", scope: !3911, file: !3911, line: 20, type: !3912, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3915)
!3911 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!2179, !2648, !2648, !2663, !2663, !3914}
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !3884, line: 808, baseType: !2652)
!3915 = !{!3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925}
!3916 = !DILocalVariable(name: "__key", arg: 1, scope: !3910, file: !3911, line: 20, type: !2648)
!3917 = !DILocalVariable(name: "__base", arg: 2, scope: !3910, file: !3911, line: 20, type: !2648)
!3918 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !3910, file: !3911, line: 20, type: !2663)
!3919 = !DILocalVariable(name: "__size", arg: 4, scope: !3910, file: !3911, line: 20, type: !2663)
!3920 = !DILocalVariable(name: "__compar", arg: 5, scope: !3910, file: !3911, line: 21, type: !3914)
!3921 = !DILocalVariable(name: "__l", scope: !3910, file: !3911, line: 23, type: !2663)
!3922 = !DILocalVariable(name: "__u", scope: !3910, file: !3911, line: 23, type: !2663)
!3923 = !DILocalVariable(name: "__idx", scope: !3910, file: !3911, line: 23, type: !2663)
!3924 = !DILocalVariable(name: "__p", scope: !3910, file: !3911, line: 24, type: !2648)
!3925 = !DILocalVariable(name: "__comparison", scope: !3910, file: !3911, line: 25, type: !2175)
!3926 = !DILocation(line: 0, scope: !3910)
!3927 = !DILocation(line: 29, column: 3, scope: !3910)
!3928 = !DILocation(line: 27, column: 7, scope: !3910)
!3929 = !DILocation(line: 29, column: 14, scope: !3910)
!3930 = !DILocation(line: 31, column: 20, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3910, file: !3911, line: 30, column: 5)
!3932 = !DILocation(line: 31, column: 27, scope: !3931)
!3933 = !DILocation(line: 32, column: 56, scope: !3931)
!3934 = !DILocation(line: 32, column: 47, scope: !3931)
!3935 = !DILocation(line: 33, column: 22, scope: !3931)
!3936 = !DILocation(line: 34, column: 24, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3931, file: !3911, line: 34, column: 11)
!3938 = !DILocation(line: 34, column: 11, scope: !3931)
!3939 = !DILocation(line: 36, column: 29, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3937, file: !3911, line: 36, column: 16)
!3941 = !DILocation(line: 36, column: 16, scope: !3937)
!3942 = !DILocation(line: 37, column: 14, scope: !3940)
!3943 = distinct !{!3943, !3927, !3944}
!3944 = !DILocation(line: 40, column: 5, scope: !3910)
!3945 = !DILocation(line: 43, column: 1, scope: !3910)
!3946 = distinct !DISubprogram(name: "atof", scope: !3947, file: !3947, line: 25, type: !3948, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3951)
!3947 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!3950, !2180}
!3950 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3951 = !{!3952}
!3952 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3946, file: !3947, line: 25, type: !2180)
!3953 = !DILocation(line: 0, scope: !3946)
!3954 = !DILocation(line: 27, column: 10, scope: !3946)
!3955 = !DILocation(line: 27, column: 3, scope: !3946)
!3956 = distinct !DISubprogram(name: "strtoimax", scope: !3957, file: !3957, line: 324, type: !3958, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3964)
!3957 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!3960, !3718, !3963, !2175}
!3960 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3961, line: 101, baseType: !3962)
!3961 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !3770, line: 72, baseType: !2269)
!3963 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2176)
!3964 = !{!3965, !3966, !3967}
!3965 = !DILocalVariable(name: "nptr", arg: 1, scope: !3956, file: !3957, line: 324, type: !3718)
!3966 = !DILocalVariable(name: "endptr", arg: 2, scope: !3956, file: !3957, line: 324, type: !3963)
!3967 = !DILocalVariable(name: "base", arg: 3, scope: !3956, file: !3957, line: 324, type: !2175)
!3968 = !DILocation(line: 0, scope: !3956)
!3969 = !DILocation(line: 327, column: 10, scope: !3956)
!3970 = !DILocation(line: 327, column: 3, scope: !3956)
!3971 = distinct !DISubprogram(name: "strtoumax", scope: !3957, file: !3957, line: 336, type: !3972, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3976)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!3974, !3718, !3963, !2175}
!3974 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3961, line: 102, baseType: !3975)
!3975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !3770, line: 73, baseType: !2252)
!3976 = !{!3977, !3978, !3979}
!3977 = !DILocalVariable(name: "nptr", arg: 1, scope: !3971, file: !3957, line: 336, type: !3718)
!3978 = !DILocalVariable(name: "endptr", arg: 2, scope: !3971, file: !3957, line: 336, type: !3963)
!3979 = !DILocalVariable(name: "base", arg: 3, scope: !3971, file: !3957, line: 336, type: !2175)
!3980 = !DILocation(line: 0, scope: !3971)
!3981 = !DILocation(line: 339, column: 10, scope: !3971)
!3982 = !DILocation(line: 339, column: 3, scope: !3971)
!3983 = distinct !DISubprogram(name: "wcstoimax", scope: !3957, file: !3957, line: 348, type: !3984, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3993)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!3960, !3986, !3990, !2175}
!3986 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3987)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3989)
!3989 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !3957, line: 34, baseType: !2175)
!3990 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3991)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3993 = !{!3994, !3995, !3996}
!3994 = !DILocalVariable(name: "nptr", arg: 1, scope: !3983, file: !3957, line: 348, type: !3986)
!3995 = !DILocalVariable(name: "endptr", arg: 2, scope: !3983, file: !3957, line: 348, type: !3990)
!3996 = !DILocalVariable(name: "base", arg: 3, scope: !3983, file: !3957, line: 348, type: !2175)
!3997 = !DILocation(line: 0, scope: !3983)
!3998 = !DILocation(line: 351, column: 10, scope: !3983)
!3999 = !DILocation(line: 351, column: 3, scope: !3983)
!4000 = distinct !DISubprogram(name: "wcstoumax", scope: !3957, file: !3957, line: 362, type: !4001, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4003)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!3974, !3986, !3990, !2175}
!4003 = !{!4004, !4005, !4006}
!4004 = !DILocalVariable(name: "nptr", arg: 1, scope: !4000, file: !3957, line: 362, type: !3986)
!4005 = !DILocalVariable(name: "endptr", arg: 2, scope: !4000, file: !3957, line: 362, type: !3990)
!4006 = !DILocalVariable(name: "base", arg: 3, scope: !4000, file: !3957, line: 362, type: !2175)
!4007 = !DILocation(line: 0, scope: !4000)
!4008 = !DILocation(line: 365, column: 10, scope: !4000)
!4009 = !DILocation(line: 365, column: 3, scope: !4000)
!4010 = distinct !DISubprogram(name: "stat", scope: !4011, file: !4011, line: 453, type: !4012, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4049)
!4011 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!2175, !2180, !4014}
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !4016, line: 46, size: 1152, elements: !4017)
!4016 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!4017 = !{!4018, !4020, !4022, !4024, !4026, !4028, !4030, !4031, !4032, !4033, !4035, !4037, !4045, !4046, !4047}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4015, file: !4016, line: 48, baseType: !4019, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !3770, line: 145, baseType: !2252)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4015, file: !4016, line: 53, baseType: !4021, size: 64, offset: 64)
!4021 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !3770, line: 148, baseType: !2252)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4015, file: !4016, line: 61, baseType: !4023, size: 64, offset: 128)
!4023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !3770, line: 151, baseType: !2252)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4015, file: !4016, line: 62, baseType: !4025, size: 32, offset: 192)
!4025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !3770, line: 150, baseType: !7)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4015, file: !4016, line: 64, baseType: !4027, size: 32, offset: 224)
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !3770, line: 146, baseType: !7)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4015, file: !4016, line: 65, baseType: !4029, size: 32, offset: 256)
!4029 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !3770, line: 147, baseType: !7)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4015, file: !4016, line: 67, baseType: !2175, size: 32, offset: 288)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4015, file: !4016, line: 69, baseType: !4019, size: 64, offset: 320)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4015, file: !4016, line: 74, baseType: !3769, size: 64, offset: 384)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4015, file: !4016, line: 78, baseType: !4034, size: 64, offset: 448)
!4034 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !3770, line: 174, baseType: !2269)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4015, file: !4016, line: 80, baseType: !4036, size: 64, offset: 512)
!4036 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !3770, line: 179, baseType: !2269)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4015, file: !4016, line: 91, baseType: !4038, size: 128, offset: 576)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !4039, line: 10, size: 128, elements: !4040)
!4039 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!4040 = !{!4041, !4043}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4038, file: !4039, line: 12, baseType: !4042, size: 64)
!4042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3770, line: 160, baseType: !2269)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4038, file: !4039, line: 16, baseType: !4044, size: 64, offset: 64)
!4044 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !3770, line: 196, baseType: !2269)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4015, file: !4016, line: 92, baseType: !4038, size: 128, offset: 704)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4015, file: !4016, line: 93, baseType: !4038, size: 128, offset: 832)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4015, file: !4016, line: 106, baseType: !4048, size: 192, offset: 960)
!4048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4044, size: 192, elements: !2369)
!4049 = !{!4050, !4051}
!4050 = !DILocalVariable(name: "__path", arg: 1, scope: !4010, file: !4011, line: 453, type: !2180)
!4051 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4010, file: !4011, line: 453, type: !4014)
!4052 = !DILocation(line: 0, scope: !4010)
!4053 = !DILocation(line: 455, column: 10, scope: !4010)
!4054 = !DILocation(line: 455, column: 3, scope: !4010)
!4055 = distinct !DISubprogram(name: "lstat", scope: !4011, file: !4011, line: 460, type: !4012, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4056)
!4056 = !{!4057, !4058}
!4057 = !DILocalVariable(name: "__path", arg: 1, scope: !4055, file: !4011, line: 460, type: !2180)
!4058 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4055, file: !4011, line: 460, type: !4014)
!4059 = !DILocation(line: 0, scope: !4055)
!4060 = !DILocation(line: 462, column: 10, scope: !4055)
!4061 = !DILocation(line: 462, column: 3, scope: !4055)
!4062 = distinct !DISubprogram(name: "fstat", scope: !4011, file: !4011, line: 467, type: !4063, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4065)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!2175, !2175, !4014}
!4065 = !{!4066, !4067}
!4066 = !DILocalVariable(name: "__fd", arg: 1, scope: !4062, file: !4011, line: 467, type: !2175)
!4067 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4062, file: !4011, line: 467, type: !4014)
!4068 = !DILocation(line: 0, scope: !4062)
!4069 = !DILocation(line: 469, column: 10, scope: !4062)
!4070 = !DILocation(line: 469, column: 3, scope: !4062)
!4071 = distinct !DISubprogram(name: "fstatat", scope: !4011, file: !4011, line: 474, type: !4072, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4074)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!2175, !2175, !2180, !4014, !2175}
!4074 = !{!4075, !4076, !4077, !4078}
!4075 = !DILocalVariable(name: "__fd", arg: 1, scope: !4071, file: !4011, line: 474, type: !2175)
!4076 = !DILocalVariable(name: "__filename", arg: 2, scope: !4071, file: !4011, line: 474, type: !2180)
!4077 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !4071, file: !4011, line: 474, type: !4014)
!4078 = !DILocalVariable(name: "__flag", arg: 4, scope: !4071, file: !4011, line: 474, type: !2175)
!4079 = !DILocation(line: 0, scope: !4071)
!4080 = !DILocation(line: 477, column: 10, scope: !4071)
!4081 = !DILocation(line: 477, column: 3, scope: !4071)
!4082 = distinct !DISubprogram(name: "mknod", scope: !4011, file: !4011, line: 483, type: !4083, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4085)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!2175, !2180, !4025, !4019}
!4085 = !{!4086, !4087, !4088}
!4086 = !DILocalVariable(name: "__path", arg: 1, scope: !4082, file: !4011, line: 483, type: !2180)
!4087 = !DILocalVariable(name: "__mode", arg: 2, scope: !4082, file: !4011, line: 483, type: !4025)
!4088 = !DILocalVariable(name: "__dev", arg: 3, scope: !4082, file: !4011, line: 483, type: !4019)
!4089 = !DILocation(line: 0, scope: !4082)
!4090 = !DILocation(line: 485, column: 10, scope: !4082)
!4091 = !DILocation(line: 485, column: 3, scope: !4082)
!4092 = distinct !DISubprogram(name: "mknodat", scope: !4011, file: !4011, line: 491, type: !4093, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4095)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!2175, !2175, !2180, !4025, !4019}
!4095 = !{!4096, !4097, !4098, !4099}
!4096 = !DILocalVariable(name: "__fd", arg: 1, scope: !4092, file: !4011, line: 491, type: !2175)
!4097 = !DILocalVariable(name: "__path", arg: 2, scope: !4092, file: !4011, line: 491, type: !2180)
!4098 = !DILocalVariable(name: "__mode", arg: 3, scope: !4092, file: !4011, line: 491, type: !4025)
!4099 = !DILocalVariable(name: "__dev", arg: 4, scope: !4092, file: !4011, line: 491, type: !4019)
!4100 = !DILocation(line: 0, scope: !4092)
!4101 = !DILocation(line: 494, column: 10, scope: !4092)
!4102 = !DILocation(line: 494, column: 3, scope: !4092)
!4103 = distinct !DISubprogram(name: "stat64", scope: !4011, file: !4011, line: 502, type: !4104, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4126)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!2175, !2180, !4106}
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !4016, line: 119, size: 1152, elements: !4108)
!4108 = !{!4109, !4110, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4122, !4123, !4124, !4125}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4107, file: !4016, line: 121, baseType: !4019, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4107, file: !4016, line: 123, baseType: !4111, size: 64, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !3770, line: 149, baseType: !2252)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4107, file: !4016, line: 124, baseType: !4023, size: 64, offset: 128)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4107, file: !4016, line: 125, baseType: !4025, size: 32, offset: 192)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4107, file: !4016, line: 132, baseType: !4027, size: 32, offset: 224)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4107, file: !4016, line: 133, baseType: !4029, size: 32, offset: 256)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4107, file: !4016, line: 135, baseType: !2175, size: 32, offset: 288)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4107, file: !4016, line: 136, baseType: !4019, size: 64, offset: 320)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4107, file: !4016, line: 137, baseType: !3769, size: 64, offset: 384)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4107, file: !4016, line: 143, baseType: !4034, size: 64, offset: 448)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4107, file: !4016, line: 144, baseType: !4121, size: 64, offset: 512)
!4121 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !3770, line: 180, baseType: !2269)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4107, file: !4016, line: 152, baseType: !4038, size: 128, offset: 576)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4107, file: !4016, line: 153, baseType: !4038, size: 128, offset: 704)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4107, file: !4016, line: 154, baseType: !4038, size: 128, offset: 832)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4107, file: !4016, line: 164, baseType: !4048, size: 192, offset: 960)
!4126 = !{!4127, !4128}
!4127 = !DILocalVariable(name: "__path", arg: 1, scope: !4103, file: !4011, line: 502, type: !2180)
!4128 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4103, file: !4011, line: 502, type: !4106)
!4129 = !DILocation(line: 0, scope: !4103)
!4130 = !DILocation(line: 504, column: 10, scope: !4103)
!4131 = !DILocation(line: 504, column: 3, scope: !4103)
!4132 = distinct !DISubprogram(name: "lstat64", scope: !4011, file: !4011, line: 509, type: !4104, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4133)
!4133 = !{!4134, !4135}
!4134 = !DILocalVariable(name: "__path", arg: 1, scope: !4132, file: !4011, line: 509, type: !2180)
!4135 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4132, file: !4011, line: 509, type: !4106)
!4136 = !DILocation(line: 0, scope: !4132)
!4137 = !DILocation(line: 511, column: 10, scope: !4132)
!4138 = !DILocation(line: 511, column: 3, scope: !4132)
!4139 = distinct !DISubprogram(name: "fstat64", scope: !4011, file: !4011, line: 516, type: !4140, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4142)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!2175, !2175, !4106}
!4142 = !{!4143, !4144}
!4143 = !DILocalVariable(name: "__fd", arg: 1, scope: !4139, file: !4011, line: 516, type: !2175)
!4144 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4139, file: !4011, line: 516, type: !4106)
!4145 = !DILocation(line: 0, scope: !4139)
!4146 = !DILocation(line: 518, column: 10, scope: !4139)
!4147 = !DILocation(line: 518, column: 3, scope: !4139)
!4148 = distinct !DISubprogram(name: "fstatat64", scope: !4011, file: !4011, line: 523, type: !4149, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4151)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!2175, !2175, !2180, !4106, !2175}
!4151 = !{!4152, !4153, !4154, !4155}
!4152 = !DILocalVariable(name: "__fd", arg: 1, scope: !4148, file: !4011, line: 523, type: !2175)
!4153 = !DILocalVariable(name: "__filename", arg: 2, scope: !4148, file: !4011, line: 523, type: !2180)
!4154 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !4148, file: !4011, line: 523, type: !4106)
!4155 = !DILocalVariable(name: "__flag", arg: 4, scope: !4148, file: !4011, line: 523, type: !2175)
!4156 = !DILocation(line: 0, scope: !4148)
!4157 = !DILocation(line: 526, column: 10, scope: !4148)
!4158 = !DILocation(line: 526, column: 3, scope: !4148)
!4159 = distinct !DISubprogram(name: "init_expr_target", scope: !3, file: !3, line: 252, type: !4160, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4162)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{null}
!4162 = !{!4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4174, !4178}
!4163 = !DILocalVariable(name: "insn", scope: !4159, file: !3, line: 254, type: !2182)
!4164 = !DILocalVariable(name: "pat", scope: !4159, file: !3, line: 254, type: !2182)
!4165 = !DILocalVariable(name: "mode", scope: !4159, file: !3, line: 255, type: !5)
!4166 = !DILocalVariable(name: "num_clobbers", scope: !4159, file: !3, line: 256, type: !2175)
!4167 = !DILocalVariable(name: "mem", scope: !4159, file: !3, line: 257, type: !2182)
!4168 = !DILocalVariable(name: "mem1", scope: !4159, file: !3, line: 257, type: !2182)
!4169 = !DILocalVariable(name: "reg", scope: !4159, file: !3, line: 258, type: !2182)
!4170 = !DILocalVariable(name: "regno", scope: !4171, file: !3, line: 277, type: !2175)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 276, column: 5)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 274, column: 3)
!4173 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 274, column: 3)
!4174 = !DILocalVariable(name: "srcmode", scope: !4175, file: !3, line: 324, type: !5)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 323, column: 5)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 321, column: 3)
!4177 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 321, column: 3)
!4178 = !DILocalVariable(name: "ic", scope: !4179, file: !3, line: 328, type: !384)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 327, column: 2)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !3, line: 325, column: 7)
!4181 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 325, column: 7)
!4182 = !DILocation(line: 256, column: 3, scope: !4159)
!4183 = !DILocation(line: 263, column: 32, scope: !4159)
!4184 = !DILocation(line: 263, column: 9, scope: !4159)
!4185 = !DILocation(line: 0, scope: !4159)
!4186 = !DILocation(line: 264, column: 33, scope: !4159)
!4187 = !DILocation(line: 264, column: 10, scope: !4159)
!4188 = !DILocation(line: 268, column: 9, scope: !4159)
!4189 = !DILocation(line: 270, column: 10, scope: !4159)
!4190 = !DILocation(line: 271, column: 9, scope: !4159)
!4191 = !DILocation(line: 272, column: 3, scope: !4159)
!4192 = !DILocation(line: 272, column: 18, scope: !4159)
!4193 = !DILocation(line: 0, scope: !4171)
!4194 = !DILocation(line: 0, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 291, column: 4)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 288, column: 2)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 288, column: 2)
!4198 = distinct !DILexicalBlock(scope: !4171, file: !3, line: 287, column: 11)
!4199 = !DILocation(line: 274, column: 8, scope: !4173)
!4200 = !DILocation(line: 0, scope: !4173)
!4201 = !DILocation(line: 274, column: 36, scope: !4172)
!4202 = !DILocation(line: 274, column: 3, scope: !4173)
!4203 = !DILocation(line: 279, column: 33, scope: !4171)
!4204 = !DILocation(line: 279, column: 58, scope: !4171)
!4205 = !DILocation(line: 279, column: 7, scope: !4171)
!4206 = !DILocation(line: 279, column: 31, scope: !4171)
!4207 = !DILocation(line: 280, column: 7, scope: !4171)
!4208 = !DILocation(line: 281, column: 7, scope: !4171)
!4209 = !DILocation(line: 282, column: 7, scope: !4171)
!4210 = !DILocation(line: 287, column: 28, scope: !4198)
!4211 = !DILocation(line: 288, column: 2, scope: !4197)
!4212 = !DILocation(line: 0, scope: !4197)
!4213 = !DILocation(line: 288, column: 24, scope: !4196)
!4214 = !DILocation(line: 289, column: 7, scope: !4196)
!4215 = !DILocation(line: 289, column: 11, scope: !4196)
!4216 = !DILocation(line: 289, column: 35, scope: !4196)
!4217 = !DILocation(line: 289, column: 40, scope: !4196)
!4218 = !DILocation(line: 289, column: 43, scope: !4196)
!4219 = !DILocation(line: 289, column: 68, scope: !4196)
!4220 = !DILocation(line: 292, column: 12, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 292, column: 10)
!4222 = !DILocation(line: 292, column: 10, scope: !4195)
!4223 = !DILocation(line: 295, column: 6, scope: !4195)
!4224 = !DILocation(line: 297, column: 20, scope: !4195)
!4225 = !DILocation(line: 298, column: 21, scope: !4195)
!4226 = !DILocation(line: 299, column: 10, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 299, column: 10)
!4228 = !DILocation(line: 299, column: 43, scope: !4227)
!4229 = !DILocation(line: 299, column: 10, scope: !4195)
!4230 = !DILocation(line: 300, column: 32, scope: !4227)
!4231 = !DILocation(line: 300, column: 8, scope: !4227)
!4232 = !DILocation(line: 302, column: 20, scope: !4195)
!4233 = !DILocation(line: 303, column: 21, scope: !4195)
!4234 = !DILocation(line: 304, column: 10, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 304, column: 10)
!4236 = !DILocation(line: 304, column: 43, scope: !4235)
!4237 = !DILocation(line: 304, column: 10, scope: !4195)
!4238 = !DILocation(line: 305, column: 32, scope: !4235)
!4239 = !DILocation(line: 305, column: 8, scope: !4235)
!4240 = !DILocation(line: 307, column: 20, scope: !4195)
!4241 = !DILocation(line: 308, column: 21, scope: !4195)
!4242 = !DILocation(line: 309, column: 10, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 309, column: 10)
!4244 = !DILocation(line: 309, column: 43, scope: !4243)
!4245 = !DILocation(line: 309, column: 10, scope: !4195)
!4246 = !DILocation(line: 310, column: 33, scope: !4243)
!4247 = !DILocation(line: 310, column: 8, scope: !4243)
!4248 = !DILocation(line: 312, column: 20, scope: !4195)
!4249 = !DILocation(line: 313, column: 21, scope: !4195)
!4250 = !DILocation(line: 314, column: 10, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 314, column: 10)
!4252 = !DILocation(line: 314, column: 43, scope: !4251)
!4253 = !DILocation(line: 314, column: 10, scope: !4195)
!4254 = !DILocation(line: 315, column: 33, scope: !4251)
!4255 = !DILocation(line: 315, column: 8, scope: !4251)
!4256 = !DILocation(line: 290, column: 12, scope: !4196)
!4257 = !DILocation(line: 288, column: 2, scope: !4196)
!4258 = distinct !{!4258, !4211, !4259}
!4259 = !DILocation(line: 316, column: 4, scope: !4197)
!4260 = !DILocation(line: 275, column: 47, scope: !4172)
!4261 = !DILocation(line: 274, column: 3, scope: !4172)
!4262 = distinct !{!4262, !4202, !4263}
!4263 = !DILocation(line: 317, column: 5, scope: !4173)
!4264 = !DILocation(line: 319, column: 32, scope: !4159)
!4265 = !DILocation(line: 319, column: 9, scope: !4159)
!4266 = !DILocation(line: 0, scope: !4179)
!4267 = !DILocation(line: 321, column: 8, scope: !4177)
!4268 = !DILocation(line: 0, scope: !4177)
!4269 = !DILocation(line: 321, column: 59, scope: !4176)
!4270 = !DILocation(line: 321, column: 3, scope: !4177)
!4271 = !DILocation(line: 0, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 336, column: 8)
!4273 = !DILocation(line: 325, column: 12, scope: !4181)
!4274 = !DILocation(line: 0, scope: !4181)
!4275 = !DILocation(line: 0, scope: !4175)
!4276 = !DILocation(line: 325, column: 69, scope: !4180)
!4277 = !DILocation(line: 325, column: 7, scope: !4181)
!4278 = !DILocation(line: 330, column: 9, scope: !4179)
!4279 = !DILocation(line: 331, column: 11, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 331, column: 8)
!4281 = !DILocation(line: 331, column: 8, scope: !4179)
!4282 = !DILocation(line: 334, column: 4, scope: !4179)
!4283 = !DILocation(line: 336, column: 10, scope: !4272)
!4284 = !DILocation(line: 336, column: 24, scope: !4272)
!4285 = !DILocation(line: 336, column: 35, scope: !4272)
!4286 = !DILocation(line: 336, column: 8, scope: !4272)
!4287 = !DILocation(line: 336, column: 8, scope: !4179)
!4288 = !DILocation(line: 337, column: 6, scope: !4272)
!4289 = !DILocation(line: 337, column: 43, scope: !4272)
!4290 = !DILocation(line: 326, column: 15, scope: !4180)
!4291 = !DILocation(line: 325, column: 7, scope: !4180)
!4292 = distinct !{!4292, !4277, !4293}
!4293 = !DILocation(line: 338, column: 2, scope: !4181)
!4294 = !DILocation(line: 322, column: 15, scope: !4176)
!4295 = !DILocation(line: 321, column: 3, scope: !4176)
!4296 = distinct !{!4296, !4270, !4297}
!4297 = !DILocation(line: 339, column: 5, scope: !4177)
!4298 = !DILocation(line: 340, column: 1, scope: !4159)
!4299 = distinct !DISubprogram(name: "rhs_regno", scope: !1899, file: !1899, line: 1051, type: !4300, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4305)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!7, !4302}
!4302 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !2183, line: 51, baseType: !4303)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!4305 = !{!4306}
!4306 = !DILocalVariable(name: "x", arg: 1, scope: !4299, file: !1899, line: 1051, type: !4302)
!4307 = !DILocation(line: 0, scope: !4299)
!4308 = !DILocation(line: 1053, column: 10, scope: !4299)
!4309 = !DILocation(line: 1053, column: 3, scope: !4299)
!4310 = distinct !DISubprogram(name: "init_expr", scope: !3, file: !3, line: 345, type: !4160, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3736)
!4311 = !DILocation(line: 347, column: 3, scope: !4310)
!4312 = !DILocation(line: 348, column: 1, scope: !4310)
!4313 = distinct !DISubprogram(name: "convert_move", scope: !3, file: !3, line: 357, type: !4314, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4316)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{null, !2182, !2182, !2175}
!4316 = !{!4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4330, !4331, !4348, !4351, !4354, !4355, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4368, !4372, !4373, !4378, !4379, !4380}
!4317 = !DILocalVariable(name: "to", arg: 1, scope: !4313, file: !3, line: 357, type: !2182)
!4318 = !DILocalVariable(name: "from", arg: 2, scope: !4313, file: !3, line: 357, type: !2182)
!4319 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !4313, file: !3, line: 357, type: !2175)
!4320 = !DILocalVariable(name: "to_mode", scope: !4313, file: !3, line: 359, type: !5)
!4321 = !DILocalVariable(name: "from_mode", scope: !4313, file: !3, line: 360, type: !5)
!4322 = !DILocalVariable(name: "to_real", scope: !4313, file: !3, line: 361, type: !2175)
!4323 = !DILocalVariable(name: "from_real", scope: !4313, file: !3, line: 362, type: !2175)
!4324 = !DILocalVariable(name: "code", scope: !4313, file: !3, line: 363, type: !384)
!4325 = !DILocalVariable(name: "libcall", scope: !4313, file: !3, line: 364, type: !2182)
!4326 = !DILocalVariable(name: "equiv_code", scope: !4313, file: !3, line: 367, type: !1898)
!4327 = !DILocalVariable(name: "value", scope: !4328, file: !3, line: 421, type: !2182)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 420, column: 5)
!4329 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 419, column: 7)
!4330 = !DILocalVariable(name: "insns", scope: !4328, file: !3, line: 421, type: !2182)
!4331 = !DILocalVariable(name: "tab", scope: !4328, file: !3, line: 422, type: !4332)
!4332 = !DIDerivedType(tag: DW_TAG_typedef, name: "convert_optab", file: !4333, line: 69, baseType: !4334)
!4333 = !DIFile(filename: "./optabs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "convert_optab_d", file: !4333, line: 60, size: 242432, elements: !4336)
!4336 = !{!4337, !4338, !4339, !4343}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !4335, file: !4333, line: 62, baseType: !1898, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_basename", scope: !4335, file: !4333, line: 63, baseType: !2180, size: 64, offset: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_gen", scope: !4335, file: !4333, line: 64, baseType: !4340, size: 64, offset: 128)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{null, !4334, !2180, !5, !5}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !4335, file: !4333, line: 67, baseType: !4344, size: 242208, offset: 192)
!4344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4345, size: 242208, elements: !3638)
!4345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_handlers", file: !4333, line: 41, size: 32, elements: !4346)
!4346 = !{!4347}
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "insn_code", scope: !4345, file: !4333, line: 43, baseType: !384, size: 32)
!4348 = !DILocalVariable(name: "full_mode", scope: !4349, file: !3, line: 470, type: !5)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 469, column: 5)
!4350 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 468, column: 7)
!4351 = !DILocalVariable(name: "new_from", scope: !4352, file: !3, line: 484, type: !2182)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 483, column: 5)
!4353 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 482, column: 7)
!4354 = !DILocalVariable(name: "full_mode", scope: !4352, file: !3, line: 485, type: !5)
!4355 = !DILocalVariable(name: "insns", scope: !4356, file: !3, line: 529, type: !2182)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 528, column: 5)
!4357 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 526, column: 7)
!4358 = !DILocalVariable(name: "lowpart", scope: !4356, file: !3, line: 530, type: !2182)
!4359 = !DILocalVariable(name: "fill_value", scope: !4356, file: !3, line: 531, type: !2182)
!4360 = !DILocalVariable(name: "lowfrom", scope: !4356, file: !3, line: 532, type: !2182)
!4361 = !DILocalVariable(name: "i", scope: !4356, file: !3, line: 533, type: !2175)
!4362 = !DILocalVariable(name: "lowpart_mode", scope: !4356, file: !3, line: 534, type: !5)
!4363 = !DILocalVariable(name: "nwords", scope: !4356, file: !3, line: 535, type: !2175)
!4364 = !DILocalVariable(name: "word_to", scope: !4365, file: !3, line: 555, type: !2182)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 554, column: 2)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 551, column: 16)
!4367 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 538, column: 11)
!4368 = !DILocalVariable(name: "index", scope: !4369, file: !3, line: 598, type: !2175)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 597, column: 2)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 596, column: 7)
!4371 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 596, column: 7)
!4372 = !DILocalVariable(name: "subword", scope: !4369, file: !3, line: 599, type: !2182)
!4373 = !DILocalVariable(name: "intermediate", scope: !4374, file: !3, line: 663, type: !5)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 662, column: 2)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 655, column: 11)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 653, column: 5)
!4377 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 652, column: 7)
!4378 = !DILocalVariable(name: "tmp", scope: !4374, file: !3, line: 664, type: !2182)
!4379 = !DILocalVariable(name: "shift_amount", scope: !4374, file: !3, line: 665, type: !2298)
!4380 = !DILocalVariable(name: "temp", scope: !4381, file: !3, line: 716, type: !2182)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 715, column: 5)
!4382 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 714, column: 7)
!4383 = !DILocation(line: 678, column: 3, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 677, column: 8)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 670, column: 10)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 668, column: 4)
!4387 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 668, column: 4)
!4388 = !DILocation(line: 0, scope: !4313)
!4389 = !DILocation(line: 361, column: 17, scope: !4313)
!4390 = !DILocation(line: 359, column: 31, scope: !4313)
!4391 = !DILocation(line: 360, column: 33, scope: !4313)
!4392 = !DILocation(line: 362, column: 19, scope: !4313)
!4393 = !DILocation(line: 367, column: 31, scope: !4313)
!4394 = !DILocation(line: 371, column: 3, scope: !4313)
!4395 = !DILocation(line: 372, column: 3, scope: !4313)
!4396 = !DILocation(line: 373, column: 3, scope: !4313)
!4397 = !DILocation(line: 377, column: 10, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 377, column: 7)
!4399 = !DILocation(line: 377, column: 7, scope: !4313)
!4400 = !DILocation(line: 384, column: 7, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 384, column: 7)
!4402 = !DILocation(line: 384, column: 23, scope: !4401)
!4403 = !DILocation(line: 384, column: 33, scope: !4401)
!4404 = !DILocation(line: 384, column: 36, scope: !4401)
!4405 = !DILocation(line: 385, column: 7, scope: !4401)
!4406 = !DILocation(line: 385, column: 11, scope: !4401)
!4407 = !DILocation(line: 386, column: 7, scope: !4401)
!4408 = !DILocation(line: 386, column: 4, scope: !4401)
!4409 = !DILocation(line: 387, column: 7, scope: !4401)
!4410 = !DILocation(line: 387, column: 10, scope: !4401)
!4411 = !DILocation(line: 387, column: 44, scope: !4401)
!4412 = !DILocation(line: 384, column: 7, scope: !4313)
!4413 = !DILocation(line: 388, column: 12, scope: !4401)
!4414 = !DILocation(line: 388, column: 5, scope: !4401)
!4415 = !DILocation(line: 390, column: 3, scope: !4313)
!4416 = !DILocation(line: 392, column: 15, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 392, column: 7)
!4418 = !DILocation(line: 393, column: 7, scope: !4417)
!4419 = !DILocation(line: 393, column: 21, scope: !4417)
!4420 = !DILocation(line: 393, column: 33, scope: !4417)
!4421 = !DILocation(line: 393, column: 36, scope: !4417)
!4422 = !DILocation(line: 392, column: 7, scope: !4313)
!4423 = !DILocation(line: 395, column: 7, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 394, column: 5)
!4425 = !DILocation(line: 396, column: 7, scope: !4424)
!4426 = !DILocation(line: 399, column: 7, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 399, column: 7)
!4428 = !DILocation(line: 399, column: 31, scope: !4427)
!4429 = !DILocation(line: 399, column: 34, scope: !4427)
!4430 = !DILocation(line: 399, column: 7, scope: !4313)
!4431 = !DILocation(line: 401, column: 7, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 400, column: 5)
!4433 = !DILocation(line: 403, column: 11, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 403, column: 11)
!4435 = !DILocation(line: 403, column: 11, scope: !4432)
!4436 = !DILocation(line: 404, column: 45, scope: !4434)
!4437 = !DILocation(line: 404, column: 9, scope: !4434)
!4438 = !DILocation(line: 404, column: 2, scope: !4434)
!4439 = !DILocation(line: 406, column: 43, scope: !4434)
!4440 = !DILocation(line: 406, column: 7, scope: !4434)
!4441 = !DILocation(line: 408, column: 7, scope: !4432)
!4442 = !DILocation(line: 409, column: 7, scope: !4432)
!4443 = !DILocation(line: 412, column: 7, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 412, column: 7)
!4445 = !DILocation(line: 412, column: 21, scope: !4444)
!4446 = !DILocation(line: 412, column: 31, scope: !4444)
!4447 = !DILocation(line: 412, column: 34, scope: !4444)
!4448 = !DILocation(line: 412, column: 50, scope: !4444)
!4449 = !DILocation(line: 412, column: 7, scope: !4313)
!4450 = !DILocation(line: 414, column: 21, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 413, column: 5)
!4452 = !DILocation(line: 414, column: 35, scope: !4451)
!4453 = !DILocation(line: 414, column: 7, scope: !4451)
!4454 = !DILocation(line: 415, column: 21, scope: !4451)
!4455 = !DILocation(line: 415, column: 35, scope: !4451)
!4456 = !DILocation(line: 415, column: 7, scope: !4451)
!4457 = !DILocation(line: 419, column: 7, scope: !4313)
!4458 = !DILocation(line: 424, column: 7, scope: !4328)
!4459 = !DILocation(line: 429, column: 11, scope: !4328)
!4460 = !DILocation(line: 431, column: 8, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 429, column: 11)
!4462 = !DILocation(line: 0, scope: !4328)
!4463 = !DILocation(line: 431, column: 2, scope: !4461)
!4464 = !DILocation(line: 432, column: 47, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 432, column: 16)
!4466 = !DILocation(line: 0, scope: !4461)
!4467 = !DILocation(line: 439, column: 63, scope: !4328)
!4468 = !DILocation(line: 440, column: 16, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 440, column: 11)
!4470 = !DILocation(line: 440, column: 11, scope: !4328)
!4471 = !DILocation(line: 443, column: 10, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 441, column: 2)
!4473 = !DILocation(line: 443, column: 6, scope: !4472)
!4474 = !DILocation(line: 442, column: 4, scope: !4472)
!4475 = !DILocation(line: 444, column: 4, scope: !4472)
!4476 = !DILocation(line: 448, column: 17, scope: !4328)
!4477 = !DILocation(line: 451, column: 7, scope: !4328)
!4478 = !DILocation(line: 453, column: 7, scope: !4328)
!4479 = !DILocation(line: 454, column: 15, scope: !4328)
!4480 = !DILocation(line: 456, column: 15, scope: !4328)
!4481 = !DILocation(line: 457, column: 7, scope: !4328)
!4482 = !DILocation(line: 459, column: 10, scope: !4328)
!4483 = !DILocation(line: 459, column: 6, scope: !4328)
!4484 = !DILocation(line: 459, column: 27, scope: !4328)
!4485 = !DILocation(line: 461, column: 8, scope: !4328)
!4486 = !DILocation(line: 458, column: 7, scope: !4328)
!4487 = !DILocation(line: 462, column: 7, scope: !4328)
!4488 = !DILocation(line: 468, column: 32, scope: !4350)
!4489 = !DILocation(line: 468, column: 7, scope: !4313)
!4490 = !DILocation(line: 471, column: 28, scope: !4349)
!4491 = !DILocation(line: 471, column: 4, scope: !4349)
!4492 = !DILocation(line: 0, scope: !4349)
!4493 = !DILocation(line: 473, column: 7, scope: !4349)
!4494 = !DILocation(line: 476, column: 21, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 476, column: 11)
!4496 = !DILocation(line: 476, column: 11, scope: !4349)
!4497 = !DILocation(line: 477, column: 9, scope: !4495)
!4498 = !DILocation(line: 477, column: 2, scope: !4495)
!4499 = !DILocation(line: 478, column: 80, scope: !4349)
!4500 = !DILocation(line: 478, column: 7, scope: !4349)
!4501 = !DILocation(line: 482, column: 34, scope: !4353)
!4502 = !DILocation(line: 482, column: 7, scope: !4313)
!4503 = !DILocation(line: 486, column: 28, scope: !4352)
!4504 = !DILocation(line: 486, column: 4, scope: !4352)
!4505 = !DILocation(line: 0, scope: !4352)
!4506 = !DILocation(line: 488, column: 7, scope: !4352)
!4507 = !DILocation(line: 491, column: 19, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 491, column: 11)
!4509 = !DILocation(line: 491, column: 11, scope: !4352)
!4510 = !DILocation(line: 493, column: 20, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 492, column: 2)
!4512 = !DILocation(line: 493, column: 78, scope: !4511)
!4513 = !DILocation(line: 493, column: 4, scope: !4511)
!4514 = !DILocation(line: 495, column: 4, scope: !4511)
!4515 = !DILocation(line: 498, column: 18, scope: !4352)
!4516 = !DILocation(line: 499, column: 81, scope: !4352)
!4517 = !DILocation(line: 499, column: 7, scope: !4352)
!4518 = !DILocation(line: 505, column: 5, scope: !4353)
!4519 = !DILocation(line: 508, column: 4, scope: !4313)
!4520 = !DILocation(line: 388, column: 51, scope: !4401)
!4521 = !DILocation(line: 388, column: 10, scope: !4401)
!4522 = !DILocation(line: 510, column: 8, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 510, column: 8)
!4524 = !DILocation(line: 510, column: 8, scope: !4313)
!4525 = !DILocation(line: 515, column: 38, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 515, column: 11)
!4527 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 511, column: 5)
!4528 = !DILocation(line: 516, column: 4, scope: !4526)
!4529 = !DILocation(line: 516, column: 7, scope: !4526)
!4530 = !DILocation(line: 516, column: 35, scope: !4526)
!4531 = !DILocation(line: 516, column: 33, scope: !4526)
!4532 = !DILocation(line: 515, column: 11, scope: !4527)
!4533 = !DILocation(line: 517, column: 2, scope: !4526)
!4534 = !DILocation(line: 519, column: 2, scope: !4526)
!4535 = !DILocation(line: 526, column: 7, scope: !4357)
!4536 = !DILocation(line: 526, column: 38, scope: !4357)
!4537 = !DILocation(line: 526, column: 36, scope: !4357)
!4538 = !DILocation(line: 527, column: 7, scope: !4357)
!4539 = !DILocation(line: 527, column: 37, scope: !4357)
!4540 = !DILocation(line: 526, column: 7, scope: !4313)
!4541 = !DILocation(line: 535, column: 20, scope: !4356)
!4542 = !DILocation(line: 0, scope: !4356)
!4543 = !DILocation(line: 538, column: 19, scope: !4367)
!4544 = !DILocation(line: 539, column: 4, scope: !4367)
!4545 = !DILocation(line: 538, column: 11, scope: !4356)
!4546 = !DILocation(line: 545, column: 8, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 545, column: 8)
!4548 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 540, column: 2)
!4549 = !DILocation(line: 545, column: 17, scope: !4547)
!4550 = !DILocation(line: 545, column: 21, scope: !4547)
!4551 = !DILocation(line: 545, column: 24, scope: !4547)
!4552 = !DILocation(line: 545, column: 40, scope: !4547)
!4553 = !DILocation(line: 545, column: 8, scope: !4548)
!4554 = !DILocation(line: 546, column: 13, scope: !4547)
!4555 = !DILocation(line: 546, column: 6, scope: !4547)
!4556 = !DILocation(line: 547, column: 4, scope: !4548)
!4557 = !DILocation(line: 548, column: 4, scope: !4548)
!4558 = !DILocation(line: 551, column: 16, scope: !4366)
!4559 = !DILocation(line: 551, column: 45, scope: !4366)
!4560 = !DILocation(line: 552, column: 9, scope: !4366)
!4561 = !DILocation(line: 552, column: 44, scope: !4366)
!4562 = !DILocation(line: 552, column: 21, scope: !4366)
!4563 = !DILocation(line: 553, column: 6, scope: !4366)
!4564 = !DILocation(line: 551, column: 16, scope: !4367)
!4565 = !DILocation(line: 555, column: 31, scope: !4365)
!4566 = !DILocation(line: 555, column: 18, scope: !4365)
!4567 = !DILocation(line: 0, scope: !4365)
!4568 = !DILocation(line: 556, column: 8, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 556, column: 8)
!4570 = !DILocation(line: 556, column: 8, scope: !4365)
!4571 = !DILocation(line: 558, column: 12, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 558, column: 12)
!4573 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 557, column: 6)
!4574 = !DILocation(line: 558, column: 12, scope: !4573)
!4575 = !DILocation(line: 559, column: 10, scope: !4572)
!4576 = !DILocation(line: 559, column: 3, scope: !4572)
!4577 = !DILocation(line: 560, column: 8, scope: !4573)
!4578 = !DILocation(line: 561, column: 6, scope: !4573)
!4579 = !DILocation(line: 562, column: 4, scope: !4365)
!4580 = !DILocation(line: 563, column: 4, scope: !4365)
!4581 = !DILocation(line: 723, column: 1, scope: !4313)
!4582 = !DILocation(line: 568, column: 7, scope: !4356)
!4583 = !DILocation(line: 573, column: 11, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 573, column: 11)
!4585 = !DILocation(line: 573, column: 11, scope: !4356)
!4586 = !DILocation(line: 574, column: 9, scope: !4584)
!4587 = !DILocation(line: 574, column: 2, scope: !4584)
!4588 = !DILocation(line: 577, column: 11, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 577, column: 11)
!4590 = !DILocation(line: 577, column: 40, scope: !4589)
!4591 = !DILocation(line: 577, column: 11, scope: !4356)
!4592 = !DILocation(line: 582, column: 17, scope: !4356)
!4593 = !DILocation(line: 584, column: 17, scope: !4356)
!4594 = !DILocation(line: 585, column: 7, scope: !4356)
!4595 = !DILocation(line: 588, column: 11, scope: !4356)
!4596 = !DILocation(line: 589, column: 15, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 588, column: 11)
!4598 = !DILocation(line: 589, column: 2, scope: !4597)
!4599 = !DILocation(line: 591, column: 45, scope: !4597)
!4600 = !DILocation(line: 591, column: 32, scope: !4597)
!4601 = !DILocation(line: 592, column: 24, scope: !4597)
!4602 = !DILocation(line: 591, column: 15, scope: !4597)
!4603 = !DILocation(line: 0, scope: !4597)
!4604 = !DILocation(line: 596, column: 16, scope: !4371)
!4605 = !DILocation(line: 596, column: 45, scope: !4371)
!4606 = !DILocation(line: 596, column: 12, scope: !4371)
!4607 = !DILocation(line: 0, scope: !4371)
!4608 = !DILocation(line: 596, column: 65, scope: !4370)
!4609 = !DILocation(line: 596, column: 7, scope: !4371)
!4610 = !DILocation(line: 0, scope: !4369)
!4611 = !DILocation(line: 599, column: 18, scope: !4369)
!4612 = !DILocation(line: 601, column: 4, scope: !4369)
!4613 = !DILocation(line: 603, column: 19, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 603, column: 8)
!4615 = !DILocation(line: 603, column: 8, scope: !4369)
!4616 = !DILocation(line: 604, column: 6, scope: !4614)
!4617 = !DILocation(line: 596, column: 76, scope: !4370)
!4618 = !DILocation(line: 596, column: 7, scope: !4370)
!4619 = distinct !{!4619, !4609, !4620}
!4620 = !DILocation(line: 605, column: 2, scope: !4371)
!4621 = !DILocation(line: 607, column: 15, scope: !4356)
!4622 = !DILocation(line: 608, column: 7, scope: !4356)
!4623 = !DILocation(line: 610, column: 7, scope: !4356)
!4624 = !DILocation(line: 611, column: 7, scope: !4356)
!4625 = !DILocation(line: 615, column: 36, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 615, column: 7)
!4627 = !DILocation(line: 616, column: 7, scope: !4626)
!4628 = !DILocation(line: 616, column: 37, scope: !4626)
!4629 = !DILocation(line: 615, column: 7, scope: !4313)
!4630 = !DILocation(line: 618, column: 14, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 618, column: 11)
!4632 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 617, column: 5)
!4633 = !DILocation(line: 619, column: 7, scope: !4631)
!4634 = !DILocation(line: 619, column: 12, scope: !4631)
!4635 = !DILocation(line: 620, column: 7, scope: !4631)
!4636 = !DILocation(line: 620, column: 10, scope: !4631)
!4637 = !DILocation(line: 621, column: 7, scope: !4631)
!4638 = !DILocation(line: 621, column: 38, scope: !4631)
!4639 = !DILocation(line: 621, column: 12, scope: !4631)
!4640 = !DILocation(line: 622, column: 6, scope: !4631)
!4641 = !DILocation(line: 622, column: 9, scope: !4631)
!4642 = !DILocation(line: 623, column: 6, scope: !4631)
!4643 = !DILocation(line: 623, column: 25, scope: !4631)
!4644 = !DILocation(line: 618, column: 11, scope: !4632)
!4645 = !DILocation(line: 624, column: 9, scope: !4631)
!4646 = !DILocation(line: 624, column: 2, scope: !4631)
!4647 = !DILocation(line: 625, column: 25, scope: !4632)
!4648 = !DILocation(line: 625, column: 38, scope: !4632)
!4649 = !DILocation(line: 625, column: 7, scope: !4632)
!4650 = !DILocation(line: 633, column: 34, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 633, column: 7)
!4652 = !DILocation(line: 633, column: 7, scope: !4313)
!4653 = !DILocation(line: 637, column: 14, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 637, column: 11)
!4655 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 636, column: 5)
!4656 = !DILocation(line: 638, column: 7, scope: !4654)
!4657 = !DILocation(line: 638, column: 12, scope: !4654)
!4658 = !DILocation(line: 639, column: 7, scope: !4654)
!4659 = !DILocation(line: 639, column: 10, scope: !4654)
!4660 = !DILocation(line: 640, column: 7, scope: !4654)
!4661 = !DILocation(line: 640, column: 38, scope: !4654)
!4662 = !DILocation(line: 640, column: 12, scope: !4654)
!4663 = !DILocation(line: 641, column: 6, scope: !4654)
!4664 = !DILocation(line: 641, column: 9, scope: !4654)
!4665 = !DILocation(line: 642, column: 6, scope: !4654)
!4666 = !DILocation(line: 642, column: 25, scope: !4654)
!4667 = !DILocation(line: 637, column: 11, scope: !4655)
!4668 = !DILocation(line: 643, column: 9, scope: !4654)
!4669 = !DILocation(line: 643, column: 2, scope: !4654)
!4670 = !DILocation(line: 644, column: 11, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 644, column: 11)
!4672 = !DILocation(line: 644, column: 24, scope: !4671)
!4673 = !DILocation(line: 644, column: 27, scope: !4671)
!4674 = !DILocation(line: 644, column: 40, scope: !4671)
!4675 = !DILocation(line: 645, column: 4, scope: !4671)
!4676 = !DILocation(line: 645, column: 9, scope: !4671)
!4677 = !DILocation(line: 644, column: 11, scope: !4655)
!4678 = !DILocation(line: 646, column: 9, scope: !4671)
!4679 = !DILocation(line: 646, column: 2, scope: !4671)
!4680 = !DILocation(line: 647, column: 27, scope: !4655)
!4681 = !DILocation(line: 647, column: 7, scope: !4655)
!4682 = !DILocation(line: 648, column: 7, scope: !4655)
!4683 = !DILocation(line: 652, column: 7, scope: !4313)
!4684 = !DILocation(line: 655, column: 19, scope: !4375)
!4685 = !DILocation(line: 656, column: 4, scope: !4375)
!4686 = !DILocation(line: 655, column: 11, scope: !4376)
!4687 = !DILocation(line: 668, column: 4, scope: !4387)
!4688 = !DILocation(line: 658, column: 4, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 657, column: 2)
!4690 = !DILocation(line: 659, column: 4, scope: !4689)
!4691 = !DILocation(line: 0, scope: !4387)
!4692 = !DILocation(line: 0, scope: !4374)
!4693 = !DILocation(line: 668, column: 48, scope: !4386)
!4694 = !DILocation(line: 670, column: 12, scope: !4385)
!4695 = !DILocation(line: 671, column: 5, scope: !4385)
!4696 = !DILocation(line: 672, column: 4, scope: !4385)
!4697 = !DILocation(line: 672, column: 8, scope: !4385)
!4698 = !DILocation(line: 672, column: 34, scope: !4385)
!4699 = !DILocation(line: 672, column: 32, scope: !4385)
!4700 = !DILocation(line: 675, column: 3, scope: !4385)
!4701 = !DILocation(line: 675, column: 7, scope: !4385)
!4702 = !DILocation(line: 676, column: 7, scope: !4385)
!4703 = !DILocation(line: 670, column: 10, scope: !4386)
!4704 = !DILocation(line: 669, column: 24, scope: !4386)
!4705 = !DILocation(line: 678, column: 21, scope: !4384)
!4706 = !DILocation(line: 668, column: 4, scope: !4386)
!4707 = distinct !{!4707, !4687, !4708}
!4708 = !DILocation(line: 681, column: 8, scope: !4387)
!4709 = !DILocation(line: 686, column: 6, scope: !4374)
!4710 = !DILocation(line: 687, column: 8, scope: !4374)
!4711 = !DILocation(line: 687, column: 6, scope: !4374)
!4712 = !DILocation(line: 685, column: 19, scope: !4374)
!4713 = !DILocation(line: 688, column: 11, scope: !4374)
!4714 = !DILocation(line: 688, column: 33, scope: !4374)
!4715 = !DILocation(line: 689, column: 10, scope: !4374)
!4716 = !DILocation(line: 691, column: 10, scope: !4374)
!4717 = !DILocation(line: 693, column: 12, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 693, column: 8)
!4719 = !DILocation(line: 693, column: 8, scope: !4374)
!4720 = !DILocation(line: 694, column: 6, scope: !4718)
!4721 = !DILocation(line: 700, column: 7, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 700, column: 7)
!4723 = !DILocation(line: 700, column: 64, scope: !4722)
!4724 = !DILocation(line: 700, column: 74, scope: !4722)
!4725 = !DILocation(line: 700, column: 7, scope: !4313)
!4726 = !DILocation(line: 702, column: 7, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 701, column: 5)
!4728 = !DILocation(line: 704, column: 7, scope: !4727)
!4729 = !DILocation(line: 714, column: 7, scope: !4313)
!4730 = !DILocation(line: 722, column: 3, scope: !4313)
!4731 = distinct !DISubprogram(name: "emit_move_insn", scope: !3, file: !3, line: 3425, type: !4732, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4734)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!2182, !2182, !2182}
!4734 = !{!4735, !4736, !4737, !4738, !4739, !4740}
!4735 = !DILocalVariable(name: "x", arg: 1, scope: !4731, file: !3, line: 3425, type: !2182)
!4736 = !DILocalVariable(name: "y", arg: 2, scope: !4731, file: !3, line: 3425, type: !2182)
!4737 = !DILocalVariable(name: "mode", scope: !4731, file: !3, line: 3427, type: !5)
!4738 = !DILocalVariable(name: "y_cst", scope: !4731, file: !3, line: 3428, type: !2182)
!4739 = !DILocalVariable(name: "last_insn", scope: !4731, file: !3, line: 3429, type: !2182)
!4740 = !DILocalVariable(name: "set", scope: !4731, file: !3, line: 3429, type: !2182)
!4741 = !DILocation(line: 0, scope: !4731)
!4742 = !DILocation(line: 3427, column: 28, scope: !4731)
!4743 = !DILocation(line: 3431, column: 3, scope: !4731)
!4744 = !DILocation(line: 0, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 3434, column: 7)
!4746 = !DILocation(line: 3434, column: 7, scope: !4745)
!4747 = !DILocation(line: 3434, column: 7, scope: !4731)
!4748 = !DILocation(line: 3436, column: 11, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 3436, column: 11)
!4750 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 3435, column: 5)
!4751 = !DILocation(line: 3437, column: 4, scope: !4749)
!4752 = !DILocation(line: 3437, column: 7, scope: !4749)
!4753 = !DILocation(line: 3438, column: 4, scope: !4749)
!4754 = !DILocation(line: 3438, column: 20, scope: !4749)
!4755 = !DILocation(line: 3438, column: 18, scope: !4749)
!4756 = !DILocation(line: 3436, column: 11, scope: !4750)
!4757 = !DILocation(line: 3443, column: 12, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 3443, column: 11)
!4759 = !DILocation(line: 3443, column: 11, scope: !4750)
!4760 = !DILocation(line: 3445, column: 8, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 3444, column: 2)
!4762 = !DILocation(line: 3450, column: 9, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 3450, column: 8)
!4764 = !DILocation(line: 3450, column: 8, scope: !4761)
!4765 = !DILocation(line: 3453, column: 10, scope: !4763)
!4766 = !DILocation(line: 3459, column: 7, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 3459, column: 7)
!4768 = !DILocation(line: 3460, column: 7, scope: !4767)
!4769 = !DILocation(line: 3460, column: 42, scope: !4767)
!4770 = !DILocation(line: 3460, column: 56, scope: !4767)
!4771 = !DILocation(line: 3461, column: 7, scope: !4767)
!4772 = !DILocation(line: 3460, column: 13, scope: !4767)
!4773 = !DILocation(line: 3462, column: 4, scope: !4767)
!4774 = !DILocation(line: 3462, column: 26, scope: !4767)
!4775 = !DILocation(line: 3462, column: 9, scope: !4767)
!4776 = !DILocation(line: 3459, column: 7, scope: !4731)
!4777 = !DILocation(line: 3463, column: 9, scope: !4767)
!4778 = !DILocation(line: 3463, column: 5, scope: !4767)
!4779 = !DILocation(line: 3465, column: 7, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 3465, column: 7)
!4781 = !DILocation(line: 3466, column: 7, scope: !4780)
!4782 = !DILocation(line: 3466, column: 41, scope: !4780)
!4783 = !DILocation(line: 3466, column: 55, scope: !4780)
!4784 = !DILocation(line: 3467, column: 6, scope: !4780)
!4785 = !DILocation(line: 3466, column: 12, scope: !4780)
!4786 = !DILocation(line: 3465, column: 7, scope: !4731)
!4787 = !DILocation(line: 3468, column: 9, scope: !4780)
!4788 = !DILocation(line: 3468, column: 5, scope: !4780)
!4789 = !DILocation(line: 3470, column: 3, scope: !4731)
!4790 = !DILocation(line: 3472, column: 15, scope: !4731)
!4791 = !DILocation(line: 3474, column: 7, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 3474, column: 7)
!4793 = !DILocation(line: 3474, column: 13, scope: !4792)
!4794 = !DILocation(line: 3474, column: 16, scope: !4792)
!4795 = !DILocation(line: 3475, column: 7, scope: !4792)
!4796 = !DILocation(line: 3475, column: 17, scope: !4792)
!4797 = !DILocation(line: 3475, column: 41, scope: !4792)
!4798 = !DILocation(line: 3476, column: 7, scope: !4792)
!4799 = !DILocation(line: 3476, column: 10, scope: !4792)
!4800 = !DILocation(line: 3476, column: 25, scope: !4792)
!4801 = !DILocation(line: 3477, column: 7, scope: !4792)
!4802 = !DILocation(line: 3477, column: 32, scope: !4792)
!4803 = !DILocation(line: 3477, column: 12, scope: !4792)
!4804 = !DILocation(line: 3474, column: 7, scope: !4731)
!4805 = !DILocation(line: 3478, column: 5, scope: !4792)
!4806 = !DILocation(line: 3481, column: 1, scope: !4731)
!4807 = distinct !DISubprogram(name: "convert_to_mode", scope: !3, file: !3, line: 733, type: !4808, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4810)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!2182, !5, !2182, !2175}
!4810 = !{!4811, !4812, !4813}
!4811 = !DILocalVariable(name: "mode", arg: 1, scope: !4807, file: !3, line: 733, type: !5)
!4812 = !DILocalVariable(name: "x", arg: 2, scope: !4807, file: !3, line: 733, type: !2182)
!4813 = !DILocalVariable(name: "unsignedp", arg: 3, scope: !4807, file: !3, line: 733, type: !2175)
!4814 = !DILocation(line: 0, scope: !4807)
!4815 = !DILocation(line: 735, column: 10, scope: !4807)
!4816 = !DILocation(line: 735, column: 3, scope: !4807)
!4817 = distinct !DISubprogram(name: "convert_modes", scope: !3, file: !3, line: 749, type: !4818, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4820)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!2182, !5, !5, !2182, !2175}
!4820 = !{!4821, !4822, !4823, !4824, !4825, !4826, !4829, !4832, !4837}
!4821 = !DILocalVariable(name: "mode", arg: 1, scope: !4817, file: !3, line: 749, type: !5)
!4822 = !DILocalVariable(name: "oldmode", arg: 2, scope: !4817, file: !3, line: 749, type: !5)
!4823 = !DILocalVariable(name: "x", arg: 3, scope: !4817, file: !3, line: 749, type: !2182)
!4824 = !DILocalVariable(name: "unsignedp", arg: 4, scope: !4817, file: !3, line: 749, type: !2175)
!4825 = !DILocalVariable(name: "temp", scope: !4817, file: !3, line: 751, type: !2182)
!4826 = !DILocalVariable(name: "val", scope: !4827, file: !3, line: 777, type: !2269)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 776, column: 5)
!4828 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 773, column: 7)
!4829 = !DILocalVariable(name: "width", scope: !4830, file: !3, line: 782, type: !2175)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 781, column: 2)
!4831 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 779, column: 11)
!4832 = !DILocalVariable(name: "val", scope: !4833, file: !3, line: 816, type: !2269)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 815, column: 2)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 813, column: 11)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 809, column: 5)
!4836 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 796, column: 7)
!4837 = !DILocalVariable(name: "width", scope: !4833, file: !3, line: 817, type: !2175)
!4838 = !DILocation(line: 0, scope: !4817)
!4839 = !DILocation(line: 756, column: 7, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 756, column: 7)
!4841 = !DILocation(line: 756, column: 20, scope: !4840)
!4842 = !DILocation(line: 756, column: 30, scope: !4840)
!4843 = !DILocation(line: 756, column: 33, scope: !4840)
!4844 = !DILocation(line: 757, column: 7, scope: !4840)
!4845 = !DILocation(line: 757, column: 10, scope: !4840)
!4846 = !DILocation(line: 757, column: 55, scope: !4840)
!4847 = !DILocation(line: 757, column: 52, scope: !4840)
!4848 = !DILocation(line: 758, column: 7, scope: !4840)
!4849 = !DILocation(line: 758, column: 10, scope: !4840)
!4850 = !DILocation(line: 758, column: 41, scope: !4840)
!4851 = !DILocation(line: 756, column: 7, scope: !4817)
!4852 = !DILocation(line: 759, column: 9, scope: !4840)
!4853 = !DILocation(line: 0, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 761, column: 7)
!4855 = !DILocation(line: 761, column: 7, scope: !4854)
!4856 = !DILocation(line: 759, column: 5, scope: !4840)
!4857 = !DILocation(line: 761, column: 20, scope: !4854)
!4858 = !DILocation(line: 761, column: 7, scope: !4817)
!4859 = !DILocation(line: 762, column: 15, scope: !4854)
!4860 = !DILocation(line: 762, column: 5, scope: !4854)
!4861 = !DILocation(line: 764, column: 12, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 764, column: 7)
!4863 = !DILocation(line: 764, column: 7, scope: !4817)
!4864 = !DILocation(line: 773, column: 7, scope: !4828)
!4865 = !DILocation(line: 773, column: 17, scope: !4828)
!4866 = !DILocation(line: 773, column: 20, scope: !4828)
!4867 = !DILocation(line: 773, column: 42, scope: !4828)
!4868 = !DILocation(line: 774, column: 7, scope: !4828)
!4869 = !DILocation(line: 774, column: 10, scope: !4828)
!4870 = !DILocation(line: 774, column: 34, scope: !4828)
!4871 = !DILocation(line: 775, column: 7, scope: !4828)
!4872 = !DILocation(line: 775, column: 10, scope: !4828)
!4873 = !DILocation(line: 775, column: 26, scope: !4828)
!4874 = !DILocation(line: 775, column: 29, scope: !4828)
!4875 = !DILocation(line: 775, column: 40, scope: !4828)
!4876 = !DILocation(line: 773, column: 7, scope: !4817)
!4877 = !DILocation(line: 0, scope: !4827)
!4878 = !DILocation(line: 779, column: 19, scope: !4831)
!4879 = !DILocation(line: 780, column: 4, scope: !4831)
!4880 = !DILocation(line: 780, column: 32, scope: !4831)
!4881 = !DILocation(line: 780, column: 30, scope: !4831)
!4882 = !DILocation(line: 779, column: 11, scope: !4827)
!4883 = !DILocation(line: 782, column: 16, scope: !4830)
!4884 = !DILocation(line: 0, scope: !4830)
!4885 = !DILocation(line: 785, column: 40, scope: !4830)
!4886 = !DILocation(line: 785, column: 8, scope: !4830)
!4887 = !DILocation(line: 786, column: 2, scope: !4830)
!4888 = !DILocation(line: 788, column: 14, scope: !4827)
!4889 = !DILocation(line: 796, column: 8, scope: !4836)
!4890 = !DILocation(line: 797, column: 8, scope: !4836)
!4891 = !DILocation(line: 798, column: 11, scope: !4836)
!4892 = !DILocation(line: 797, column: 11, scope: !4836)
!4893 = !DILocation(line: 797, column: 35, scope: !4836)
!4894 = !DILocation(line: 798, column: 7, scope: !4836)
!4895 = !DILocation(line: 798, column: 33, scope: !4836)
!4896 = !DILocation(line: 799, column: 4, scope: !4836)
!4897 = !DILocation(line: 799, column: 7, scope: !4836)
!4898 = !DILocation(line: 799, column: 32, scope: !4836)
!4899 = !DILocation(line: 800, column: 4, scope: !4836)
!4900 = !DILocation(line: 800, column: 21, scope: !4836)
!4901 = !DILocation(line: 801, column: 8, scope: !4836)
!4902 = !DILocation(line: 801, column: 12, scope: !4836)
!4903 = !DILocation(line: 801, column: 36, scope: !4836)
!4904 = !DILocation(line: 801, column: 33, scope: !4836)
!4905 = !DILocation(line: 802, column: 5, scope: !4836)
!4906 = !DILocation(line: 802, column: 10, scope: !4836)
!4907 = !DILocation(line: 802, column: 20, scope: !4836)
!4908 = !DILocation(line: 802, column: 25, scope: !4836)
!4909 = !DILocation(line: 803, column: 10, scope: !4836)
!4910 = !DILocation(line: 803, column: 13, scope: !4836)
!4911 = !DILocation(line: 804, column: 9, scope: !4836)
!4912 = !DILocation(line: 804, column: 13, scope: !4836)
!4913 = !DILocation(line: 805, column: 6, scope: !4836)
!4914 = !DILocation(line: 805, column: 12, scope: !4836)
!4915 = !DILocation(line: 806, column: 10, scope: !4836)
!4916 = !DILocation(line: 806, column: 13, scope: !4836)
!4917 = !DILocation(line: 796, column: 7, scope: !4817)
!4918 = !DILocation(line: 813, column: 11, scope: !4834)
!4919 = !DILocation(line: 813, column: 38, scope: !4834)
!4920 = !DILocation(line: 813, column: 27, scope: !4834)
!4921 = !DILocation(line: 814, column: 7, scope: !4834)
!4922 = !DILocation(line: 814, column: 30, scope: !4834)
!4923 = !DILocation(line: 814, column: 28, scope: !4834)
!4924 = !DILocation(line: 813, column: 11, scope: !4835)
!4925 = !DILocation(line: 816, column: 24, scope: !4833)
!4926 = !DILocation(line: 0, scope: !4833)
!4927 = !DILocation(line: 817, column: 16, scope: !4833)
!4928 = !DILocation(line: 821, column: 30, scope: !4833)
!4929 = !DILocation(line: 821, column: 40, scope: !4833)
!4930 = !DILocation(line: 821, column: 8, scope: !4833)
!4931 = !DILocation(line: 823, column: 8, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 822, column: 8)
!4933 = !DILocation(line: 823, column: 47, scope: !4932)
!4934 = !DILocation(line: 823, column: 37, scope: !4932)
!4935 = !DILocation(line: 823, column: 16, scope: !4932)
!4936 = !DILocation(line: 822, column: 8, scope: !4833)
!4937 = !DILocation(line: 824, column: 10, scope: !4932)
!4938 = !DILocation(line: 824, column: 6, scope: !4932)
!4939 = !DILocation(line: 826, column: 11, scope: !4833)
!4940 = !DILocation(line: 829, column: 14, scope: !4835)
!4941 = !DILocation(line: 829, column: 7, scope: !4835)
!4942 = !DILocation(line: 834, column: 7, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 834, column: 7)
!4944 = !DILocation(line: 834, column: 28, scope: !4943)
!4945 = !DILocation(line: 834, column: 31, scope: !4943)
!4946 = !DILocation(line: 834, column: 44, scope: !4943)
!4947 = !DILocation(line: 834, column: 7, scope: !4817)
!4948 = !DILocation(line: 836, column: 7, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 835, column: 5)
!4950 = !DILocation(line: 837, column: 14, scope: !4949)
!4951 = !DILocation(line: 837, column: 7, scope: !4949)
!4952 = !DILocation(line: 840, column: 10, scope: !4817)
!4953 = !DILocation(line: 841, column: 3, scope: !4817)
!4954 = !DILocation(line: 842, column: 3, scope: !4817)
!4955 = !DILocation(line: 843, column: 1, scope: !4817)
!4956 = distinct !DISubprogram(name: "can_move_by_pieces", scope: !3, file: !3, line: 857, type: !4957, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4959)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!2175, !2252, !7}
!4959 = !{!4960, !4961}
!4960 = !DILocalVariable(name: "len", arg: 1, scope: !4956, file: !3, line: 857, type: !2252)
!4961 = !DILocalVariable(name: "align", arg: 2, scope: !4956, file: !3, line: 858, type: !7)
!4962 = !DILocation(line: 0, scope: !4956)
!4963 = !DILocation(line: 860, column: 10, scope: !4956)
!4964 = !DILocation(line: 860, column: 3, scope: !4956)
!4965 = distinct !DISubprogram(name: "move_by_pieces_ninsns", scope: !3, file: !3, line: 1045, type: !4966, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4968)
!4966 = !DISubroutineType(types: !4967)
!4967 = !{!2252, !2252, !7, !7}
!4968 = !{!4969, !4970, !4971, !4972, !4973, !4974, !4977, !4978, !4980}
!4969 = !DILocalVariable(name: "l", arg: 1, scope: !4965, file: !3, line: 1045, type: !2252)
!4970 = !DILocalVariable(name: "align", arg: 2, scope: !4965, file: !3, line: 1045, type: !7)
!4971 = !DILocalVariable(name: "max_size", arg: 3, scope: !4965, file: !3, line: 1046, type: !7)
!4972 = !DILocalVariable(name: "n_insns", scope: !4965, file: !3, line: 1048, type: !2252)
!4973 = !DILocalVariable(name: "tmode", scope: !4965, file: !3, line: 1049, type: !5)
!4974 = !DILocalVariable(name: "tmode", scope: !4975, file: !3, line: 1056, type: !5)
!4975 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 1055, column: 5)
!4976 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 1052, column: 7)
!4977 = !DILocalVariable(name: "xmode", scope: !4975, file: !3, line: 1056, type: !5)
!4978 = !DILocalVariable(name: "mode", scope: !4979, file: !3, line: 1070, type: !5)
!4979 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 1069, column: 5)
!4980 = !DILocalVariable(name: "icode", scope: !4979, file: !3, line: 1071, type: !384)
!4981 = !DILocation(line: 0, scope: !4965)
!4982 = !DILocation(line: 1051, column: 11, scope: !4965)
!4983 = !DILocation(line: 1052, column: 16, scope: !4976)
!4984 = !DILocation(line: 1052, column: 13, scope: !4976)
!4985 = !DILocation(line: 1052, column: 7, scope: !4965)
!4986 = !DILocation(line: 1053, column: 13, scope: !4976)
!4987 = !DILocation(line: 1053, column: 5, scope: !4976)
!4988 = !DILocation(line: 1058, column: 20, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1058, column: 7)
!4990 = !DILocation(line: 0, scope: !4975)
!4991 = !DILocation(line: 1058, column: 12, scope: !4989)
!4992 = !DILocation(line: 0, scope: !4989)
!4993 = !DILocation(line: 1059, column: 11, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1058, column: 7)
!4995 = !DILocation(line: 1058, column: 7, scope: !4989)
!4996 = !DILocation(line: 1061, column: 6, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1061, column: 6)
!4998 = !DILocation(line: 1061, column: 28, scope: !4997)
!4999 = !DILocation(line: 1061, column: 6, scope: !4994)
!5000 = !DILocation(line: 1060, column: 28, scope: !4994)
!5001 = !DILocation(line: 1058, column: 7, scope: !4994)
!5002 = distinct !{!5002, !4995, !5003}
!5003 = !DILocation(line: 1063, column: 4, scope: !4989)
!5004 = !DILocation(line: 1065, column: 15, scope: !4975)
!5005 = !DILocation(line: 0, scope: !4976)
!5006 = !DILocation(line: 1068, column: 3, scope: !4965)
!5007 = !DILocation(line: 1048, column: 26, scope: !4965)
!5008 = !DILocation(line: 1068, column: 19, scope: !4965)
!5009 = !DILocation(line: 0, scope: !4979)
!5010 = !DILocation(line: 1073, column: 12, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1073, column: 7)
!5012 = !DILocation(line: 0, scope: !5011)
!5013 = !DILocation(line: 1074, column: 11, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1073, column: 7)
!5015 = !DILocation(line: 1073, column: 7, scope: !5011)
!5016 = !DILocation(line: 1075, column: 6, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 1075, column: 6)
!5018 = !DILocation(line: 1075, column: 28, scope: !5017)
!5019 = !DILocation(line: 1075, column: 6, scope: !5014)
!5020 = !DILocation(line: 1074, column: 32, scope: !5014)
!5021 = !DILocation(line: 1073, column: 7, scope: !5014)
!5022 = distinct !{!5022, !5015, !5023}
!5023 = !DILocation(line: 1076, column: 11, scope: !5011)
!5024 = !DILocation(line: 1078, column: 16, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1078, column: 11)
!5026 = !DILocation(line: 1078, column: 11, scope: !4979)
!5027 = !DILocation(line: 1081, column: 15, scope: !4979)
!5028 = !DILocation(line: 1081, column: 48, scope: !4979)
!5029 = !DILocation(line: 1082, column: 17, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1082, column: 11)
!5031 = !DILocation(line: 1082, column: 37, scope: !5030)
!5032 = !DILocation(line: 1082, column: 49, scope: !5030)
!5033 = !DILocation(line: 1082, column: 46, scope: !5030)
!5034 = !DILocation(line: 1082, column: 11, scope: !4979)
!5035 = !DILocation(line: 1083, column: 17, scope: !5030)
!5036 = !DILocation(line: 1083, column: 15, scope: !5030)
!5037 = !DILocation(line: 1083, column: 10, scope: !5030)
!5038 = !DILocation(line: 1083, column: 41, scope: !5030)
!5039 = !DILocation(line: 1083, column: 2, scope: !5030)
!5040 = !DILocation(line: 1085, column: 18, scope: !4979)
!5041 = !DILocation(line: 1086, column: 5, scope: !4965)
!5042 = distinct !{!5042, !5006, !5041}
!5043 = !DILocation(line: 1088, column: 3, scope: !4965)
!5044 = !DILocation(line: 1089, column: 3, scope: !4965)
!5045 = distinct !DISubprogram(name: "move_by_pieces", scope: !3, file: !3, line: 876, type: !5046, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5048)
!5046 = !DISubroutineType(types: !5047)
!5047 = !{!2182, !2182, !2182, !2252, !7, !2175}
!5048 = !{!5049, !5050, !5051, !5052, !5053, !5054, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5079}
!5049 = !DILocalVariable(name: "to", arg: 1, scope: !5045, file: !3, line: 876, type: !2182)
!5050 = !DILocalVariable(name: "from", arg: 2, scope: !5045, file: !3, line: 876, type: !2182)
!5051 = !DILocalVariable(name: "len", arg: 3, scope: !5045, file: !3, line: 876, type: !2252)
!5052 = !DILocalVariable(name: "align", arg: 4, scope: !5045, file: !3, line: 877, type: !7)
!5053 = !DILocalVariable(name: "endp", arg: 5, scope: !5045, file: !3, line: 877, type: !2175)
!5054 = !DILocalVariable(name: "data", scope: !5045, file: !3, line: 879, type: !5055)
!5055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "move_by_pieces_d", file: !3, line: 94, size: 576, elements: !5056)
!5056 = !{!5057, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !5055, file: !3, line: 96, baseType: !2182, size: 64)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "to_addr", scope: !5055, file: !3, line: 97, baseType: !2182, size: 64, offset: 64)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "autinc_to", scope: !5055, file: !3, line: 98, baseType: !2175, size: 32, offset: 128)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_inc_to", scope: !5055, file: !3, line: 99, baseType: !2175, size: 32, offset: 160)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !5055, file: !3, line: 100, baseType: !2182, size: 64, offset: 192)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "from_addr", scope: !5055, file: !3, line: 101, baseType: !2182, size: 64, offset: 256)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "autinc_from", scope: !5055, file: !3, line: 102, baseType: !2175, size: 32, offset: 320)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_inc_from", scope: !5055, file: !3, line: 103, baseType: !2175, size: 32, offset: 352)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5055, file: !3, line: 104, baseType: !2252, size: 64, offset: 384)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5055, file: !3, line: 105, baseType: !2269, size: 64, offset: 448)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !5055, file: !3, line: 106, baseType: !2175, size: 32, offset: 512)
!5068 = !DILocalVariable(name: "to_addr_mode", scope: !5045, file: !3, line: 880, type: !5)
!5069 = !DILocalVariable(name: "from_addr_mode", scope: !5045, file: !3, line: 880, type: !5)
!5070 = !DILocalVariable(name: "to_addr", scope: !5045, file: !3, line: 882, type: !2182)
!5071 = !DILocalVariable(name: "from_addr", scope: !5045, file: !3, line: 882, type: !2182)
!5072 = !DILocalVariable(name: "max_size", scope: !5045, file: !3, line: 883, type: !7)
!5073 = !DILocalVariable(name: "mode", scope: !5045, file: !3, line: 884, type: !5)
!5074 = !DILocalVariable(name: "tmode", scope: !5045, file: !3, line: 884, type: !5)
!5075 = !DILocalVariable(name: "icode", scope: !5045, file: !3, line: 885, type: !384)
!5076 = !DILocalVariable(name: "xmode", scope: !5077, file: !3, line: 975, type: !5)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 974, column: 5)
!5078 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 971, column: 7)
!5079 = !DILocalVariable(name: "to1", scope: !5080, file: !3, line: 1012, type: !2182)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1011, column: 5)
!5081 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1010, column: 7)
!5082 = !DILocation(line: 0, scope: !5045)
!5083 = !DILocation(line: 879, column: 3, scope: !5045)
!5084 = !DILocation(line: 881, column: 26, scope: !5045)
!5085 = !DILocation(line: 881, column: 40, scope: !5045)
!5086 = !DILocation(line: 881, column: 7, scope: !5045)
!5087 = !DILocation(line: 882, column: 28, scope: !5045)
!5088 = !DILocation(line: 887, column: 11, scope: !5045)
!5089 = !DILocation(line: 889, column: 8, scope: !5045)
!5090 = !DILocation(line: 889, column: 15, scope: !5045)
!5091 = !DILocation(line: 890, column: 8, scope: !5045)
!5092 = !DILocation(line: 890, column: 18, scope: !5045)
!5093 = !DILocation(line: 891, column: 7, scope: !5045)
!5094 = !DILocation(line: 893, column: 41, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 892, column: 5)
!5096 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 891, column: 7)
!5097 = !DILocation(line: 893, column: 55, scope: !5095)
!5098 = !DILocation(line: 893, column: 22, scope: !5095)
!5099 = !DILocation(line: 894, column: 17, scope: !5095)
!5100 = !DILocation(line: 895, column: 12, scope: !5095)
!5101 = !DILocation(line: 895, column: 15, scope: !5095)
!5102 = !DILocation(line: 897, column: 5, scope: !5095)
!5103 = !DILocation(line: 897, column: 24, scope: !5095)
!5104 = !DILocation(line: 897, column: 35, scope: !5095)
!5105 = !DILocation(line: 897, column: 57, scope: !5095)
!5106 = !DILocation(line: 898, column: 5, scope: !5095)
!5107 = !DILocation(line: 898, column: 27, scope: !5095)
!5108 = !DILocation(line: 898, column: 39, scope: !5095)
!5109 = !DILocation(line: 898, column: 61, scope: !5095)
!5110 = !DILocation(line: 896, column: 12, scope: !5095)
!5111 = !DILocation(line: 897, column: 2, scope: !5095)
!5112 = !DILocation(line: 900, column: 5, scope: !5095)
!5113 = !DILocation(line: 900, column: 24, scope: !5095)
!5114 = !DILocation(line: 900, column: 35, scope: !5095)
!5115 = !DILocation(line: 900, column: 57, scope: !5095)
!5116 = !DILocation(line: 899, column: 12, scope: !5095)
!5117 = !DILocation(line: 900, column: 2, scope: !5095)
!5118 = !DILocation(line: 901, column: 5, scope: !5095)
!5119 = !DILocation(line: 906, column: 12, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 903, column: 5)
!5121 = !DILocation(line: 906, column: 15, scope: !5120)
!5122 = !DILocation(line: 907, column: 12, scope: !5120)
!5123 = !DILocation(line: 907, column: 22, scope: !5120)
!5124 = !DILocation(line: 909, column: 12, scope: !5120)
!5125 = !DILocation(line: 909, column: 20, scope: !5120)
!5126 = !DILocation(line: 0, scope: !5096)
!5127 = !DILocation(line: 914, column: 8, scope: !5045)
!5128 = !DILocation(line: 914, column: 16, scope: !5045)
!5129 = !DILocation(line: 915, column: 8, scope: !5045)
!5130 = !DILocation(line: 915, column: 13, scope: !5045)
!5131 = !DILocation(line: 917, column: 8, scope: !5045)
!5132 = !DILocation(line: 917, column: 29, scope: !5045)
!5133 = !DILocation(line: 917, column: 40, scope: !5045)
!5134 = !DILocation(line: 917, column: 64, scope: !5045)
!5135 = !DILocation(line: 918, column: 8, scope: !5045)
!5136 = !DILocation(line: 918, column: 32, scope: !5045)
!5137 = !DILocation(line: 919, column: 8, scope: !5045)
!5138 = !DILocation(line: 919, column: 32, scope: !5045)
!5139 = !DILocation(line: 916, column: 8, scope: !5045)
!5140 = !DILocation(line: 917, column: 5, scope: !5045)
!5141 = !DILocation(line: 921, column: 8, scope: !5045)
!5142 = !DILocation(line: 921, column: 26, scope: !5045)
!5143 = !DILocation(line: 922, column: 8, scope: !5045)
!5144 = !DILocation(line: 922, column: 24, scope: !5045)
!5145 = !DILocation(line: 923, column: 12, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 923, column: 7)
!5147 = !DILocation(line: 923, column: 7, scope: !5146)
!5148 = !DILocation(line: 923, column: 7, scope: !5045)
!5149 = !DILocation(line: 923, column: 33, scope: !5146)
!5150 = !DILocation(line: 923, column: 21, scope: !5146)
!5151 = !DILocation(line: 924, column: 8, scope: !5045)
!5152 = !DILocation(line: 924, column: 12, scope: !5045)
!5153 = !DILocation(line: 929, column: 26, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 929, column: 7)
!5155 = !DILocation(line: 929, column: 29, scope: !5154)
!5156 = !DILocation(line: 930, column: 7, scope: !5154)
!5157 = !DILocation(line: 930, column: 10, scope: !5154)
!5158 = !DILocation(line: 930, column: 55, scope: !5154)
!5159 = !DILocation(line: 929, column: 7, scope: !5045)
!5160 = !DILocation(line: 933, column: 12, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 933, column: 7)
!5162 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 931, column: 5)
!5163 = !DILocation(line: 0, scope: !5161)
!5164 = !DILocation(line: 934, column: 11, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 933, column: 7)
!5166 = !DILocation(line: 933, column: 7, scope: !5161)
!5167 = !DILocation(line: 935, column: 6, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 935, column: 6)
!5169 = !DILocation(line: 935, column: 28, scope: !5168)
!5170 = !DILocation(line: 935, column: 6, scope: !5165)
!5171 = !DILocation(line: 934, column: 32, scope: !5165)
!5172 = !DILocation(line: 933, column: 7, scope: !5165)
!5173 = distinct !{!5173, !5166, !5174}
!5174 = !DILocation(line: 936, column: 11, scope: !5161)
!5175 = !DILocation(line: 951, column: 29, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 951, column: 11)
!5177 = !DILocation(line: 951, column: 32, scope: !5176)
!5178 = !DILocation(line: 951, column: 11, scope: !5162)
!5179 = !DILocation(line: 952, column: 19, scope: !5176)
!5180 = !DILocation(line: 952, column: 17, scope: !5176)
!5181 = !DILocation(line: 952, column: 2, scope: !5176)
!5182 = !DILocation(line: 966, column: 12, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 966, column: 11)
!5184 = !DILocation(line: 966, column: 27, scope: !5183)
!5185 = !DILocation(line: 966, column: 30, scope: !5183)
!5186 = !DILocation(line: 966, column: 11, scope: !5162)
!5187 = !DILocation(line: 967, column: 17, scope: !5183)
!5188 = !DILocation(line: 967, column: 15, scope: !5183)
!5189 = !DILocation(line: 967, column: 2, scope: !5183)
!5190 = !DILocation(line: 884, column: 21, scope: !5045)
!5191 = !DILocation(line: 970, column: 11, scope: !5045)
!5192 = !DILocation(line: 971, column: 16, scope: !5078)
!5193 = !DILocation(line: 971, column: 13, scope: !5078)
!5194 = !DILocation(line: 971, column: 7, scope: !5045)
!5195 = !DILocation(line: 972, column: 13, scope: !5078)
!5196 = !DILocation(line: 972, column: 5, scope: !5078)
!5197 = !DILocation(line: 977, column: 20, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 977, column: 7)
!5199 = !DILocation(line: 0, scope: !5077)
!5200 = !DILocation(line: 977, column: 12, scope: !5198)
!5201 = !DILocation(line: 0, scope: !5198)
!5202 = !DILocation(line: 978, column: 11, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5198, file: !3, line: 977, column: 7)
!5204 = !DILocation(line: 977, column: 7, scope: !5198)
!5205 = !DILocation(line: 980, column: 6, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 980, column: 6)
!5207 = !DILocation(line: 980, column: 28, scope: !5206)
!5208 = !DILocation(line: 980, column: 6, scope: !5203)
!5209 = !DILocation(line: 979, column: 28, scope: !5203)
!5210 = !DILocation(line: 977, column: 7, scope: !5203)
!5211 = distinct !{!5211, !5204, !5212}
!5212 = !DILocation(line: 982, column: 4, scope: !5198)
!5213 = !DILocation(line: 984, column: 15, scope: !5077)
!5214 = !DILocation(line: 0, scope: !5078)
!5215 = !DILocation(line: 990, column: 3, scope: !5045)
!5216 = !DILocation(line: 990, column: 19, scope: !5045)
!5217 = !DILocation(line: 992, column: 12, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 992, column: 7)
!5219 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 991, column: 5)
!5220 = !DILocation(line: 0, scope: !5218)
!5221 = !DILocation(line: 993, column: 11, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 992, column: 7)
!5223 = !DILocation(line: 992, column: 7, scope: !5218)
!5224 = !DILocation(line: 994, column: 6, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 994, column: 6)
!5226 = !DILocation(line: 994, column: 28, scope: !5225)
!5227 = !DILocation(line: 994, column: 6, scope: !5222)
!5228 = !DILocation(line: 993, column: 32, scope: !5222)
!5229 = !DILocation(line: 992, column: 7, scope: !5222)
!5230 = distinct !{!5230, !5223, !5231}
!5231 = !DILocation(line: 995, column: 11, scope: !5218)
!5232 = !DILocation(line: 997, column: 16, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 997, column: 11)
!5234 = !DILocation(line: 997, column: 11, scope: !5219)
!5235 = !DILocation(line: 1000, column: 15, scope: !5219)
!5236 = !DILocation(line: 1000, column: 48, scope: !5219)
!5237 = !DILocation(line: 1001, column: 17, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 1001, column: 11)
!5239 = !DILocation(line: 1001, column: 37, scope: !5238)
!5240 = !DILocation(line: 1001, column: 49, scope: !5238)
!5241 = !DILocation(line: 1001, column: 46, scope: !5238)
!5242 = !DILocation(line: 1001, column: 11, scope: !5219)
!5243 = !DILocation(line: 1002, column: 20, scope: !5238)
!5244 = !DILocation(line: 1002, column: 2, scope: !5238)
!5245 = !DILocation(line: 1004, column: 18, scope: !5219)
!5246 = distinct !{!5246, !5215, !5247}
!5247 = !DILocation(line: 1005, column: 5, scope: !5045)
!5248 = !DILocation(line: 1008, column: 3, scope: !5045)
!5249 = !DILocation(line: 1010, column: 7, scope: !5081)
!5250 = !DILocation(line: 1010, column: 7, scope: !5045)
!5251 = !DILocation(line: 1014, column: 7, scope: !5080)
!5252 = !DILocation(line: 1015, column: 16, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1015, column: 11)
!5254 = !DILocation(line: 1015, column: 11, scope: !5253)
!5255 = !DILocation(line: 0, scope: !5253)
!5256 = !DILocation(line: 1015, column: 11, scope: !5080)
!5257 = !DILocation(line: 1017, column: 8, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1016, column: 2)
!5259 = !DILocation(line: 1026, column: 10, scope: !5258)
!5260 = !DILocation(line: 1023, column: 28, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1019, column: 12)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 1018, column: 6)
!5263 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 1017, column: 8)
!5264 = !DILocation(line: 1023, column: 8, scope: !5261)
!5265 = !DILocation(line: 1022, column: 18, scope: !5261)
!5266 = !DILocation(line: 1022, column: 16, scope: !5261)
!5267 = !DILocation(line: 1025, column: 6, scope: !5262)
!5268 = !DILocation(line: 0, scope: !5080)
!5269 = !DILocation(line: 1028, column: 2, scope: !5258)
!5270 = !DILocation(line: 1031, column: 8, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1030, column: 2)
!5272 = !DILocation(line: 1033, column: 10, scope: !5271)
!5273 = !DILocation(line: 1032, column: 6, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 1031, column: 8)
!5275 = !DILocation(line: 1038, column: 17, scope: !5081)
!5276 = !DILocation(line: 1038, column: 5, scope: !5081)
!5277 = !DILocation(line: 0, scope: !5081)
!5278 = !DILocation(line: 1039, column: 1, scope: !5045)
!5279 = distinct !DISubprogram(name: "move_by_pieces_1", scope: !3, file: !3, line: 1097, type: !5280, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5286)
!5280 = !DISubroutineType(types: !5281)
!5281 = !{null, !5282, !5, !5285}
!5282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5283, size: 64)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{!2182, !2182, null}
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5055, size: 64)
!5286 = !{!5287, !5288, !5289, !5290, !5291, !5292}
!5287 = !DILocalVariable(name: "genfun", arg: 1, scope: !5279, file: !3, line: 1097, type: !5282)
!5288 = !DILocalVariable(name: "mode", arg: 2, scope: !5279, file: !3, line: 1097, type: !5)
!5289 = !DILocalVariable(name: "data", arg: 3, scope: !5279, file: !3, line: 1098, type: !5285)
!5290 = !DILocalVariable(name: "size", scope: !5279, file: !3, line: 1100, type: !7)
!5291 = !DILocalVariable(name: "to1", scope: !5279, file: !3, line: 1101, type: !2182)
!5292 = !DILocalVariable(name: "from1", scope: !5279, file: !3, line: 1101, type: !2182)
!5293 = !DILocation(line: 0, scope: !5279)
!5294 = !DILocation(line: 1100, column: 23, scope: !5279)
!5295 = !DILocation(line: 0, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1105, column: 11)
!5297 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1104, column: 5)
!5298 = !DILocation(line: 0, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1108, column: 11)
!5300 = !DILocation(line: 0, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 1110, column: 8)
!5302 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 1109, column: 2)
!5303 = !DILocation(line: 0, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1117, column: 11)
!5305 = !DILocation(line: 1103, column: 16, scope: !5279)
!5306 = !DILocation(line: 1103, column: 3, scope: !5279)
!5307 = !DILocation(line: 1103, column: 20, scope: !5279)
!5308 = !DILocation(line: 1105, column: 17, scope: !5296)
!5309 = !DILocation(line: 1105, column: 11, scope: !5296)
!5310 = !DILocation(line: 1105, column: 11, scope: !5297)
!5311 = !DILocation(line: 1106, column: 15, scope: !5296)
!5312 = !DILocation(line: 1106, column: 2, scope: !5296)
!5313 = !DILocation(line: 1108, column: 17, scope: !5299)
!5314 = !DILocation(line: 1108, column: 11, scope: !5299)
!5315 = !DILocation(line: 1108, column: 11, scope: !5297)
!5316 = !DILocation(line: 1110, column: 14, scope: !5301)
!5317 = !DILocation(line: 1110, column: 8, scope: !5301)
!5318 = !DILocation(line: 1110, column: 8, scope: !5302)
!5319 = !DILocation(line: 1111, column: 12, scope: !5301)
!5320 = !DILocation(line: 1111, column: 6, scope: !5301)
!5321 = !DILocation(line: 1114, column: 12, scope: !5301)
!5322 = !DILocation(line: 1117, column: 17, scope: !5304)
!5323 = !DILocation(line: 1117, column: 11, scope: !5304)
!5324 = !DILocation(line: 1117, column: 11, scope: !5297)
!5325 = !DILocation(line: 1118, column: 10, scope: !5304)
!5326 = !DILocation(line: 1118, column: 2, scope: !5304)
!5327 = !DILocation(line: 1121, column: 10, scope: !5304)
!5328 = !DILocation(line: 1130, column: 17, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1130, column: 11)
!5330 = !DILocation(line: 1130, column: 11, scope: !5329)
!5331 = !DILocation(line: 1130, column: 11, scope: !5297)
!5332 = !DILocation(line: 1131, column: 13, scope: !5329)
!5333 = !DILocation(line: 1131, column: 2, scope: !5329)
!5334 = !DILocation(line: 1135, column: 4, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1133, column: 2)
!5336 = !DILocation(line: 1146, column: 19, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1146, column: 11)
!5338 = !DILocation(line: 1146, column: 13, scope: !5337)
!5339 = !DILocation(line: 1146, column: 11, scope: !5297)
!5340 = !DILocation(line: 1147, column: 15, scope: !5337)
!5341 = !DILocation(line: 1147, column: 2, scope: !5337)
!5342 = !DILocation(line: 1149, column: 17, scope: !5297)
!5343 = distinct !{!5343, !5306, !5344}
!5344 = !DILocation(line: 1150, column: 5, scope: !5279)
!5345 = !DILocation(line: 1151, column: 1, scope: !5279)
!5346 = distinct !DISubprogram(name: "emit_block_move_hints", scope: !3, file: !3, line: 1166, type: !5347, scopeLine: 1168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5349)
!5347 = !DISubroutineType(types: !5348)
!5348 = !{!2182, !2182, !2182, !2182, !2041, !7, !2269}
!5349 = !{!5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358}
!5350 = !DILocalVariable(name: "x", arg: 1, scope: !5346, file: !3, line: 1166, type: !2182)
!5351 = !DILocalVariable(name: "y", arg: 2, scope: !5346, file: !3, line: 1166, type: !2182)
!5352 = !DILocalVariable(name: "size", arg: 3, scope: !5346, file: !3, line: 1166, type: !2182)
!5353 = !DILocalVariable(name: "method", arg: 4, scope: !5346, file: !3, line: 1166, type: !2041)
!5354 = !DILocalVariable(name: "expected_align", arg: 5, scope: !5346, file: !3, line: 1167, type: !7)
!5355 = !DILocalVariable(name: "expected_size", arg: 6, scope: !5346, file: !3, line: 1167, type: !2269)
!5356 = !DILocalVariable(name: "may_use_call", scope: !5346, file: !3, line: 1169, type: !2174)
!5357 = !DILocalVariable(name: "retval", scope: !5346, file: !3, line: 1170, type: !2182)
!5358 = !DILocalVariable(name: "align", scope: !5346, file: !3, line: 1171, type: !7)
!5359 = !DILocation(line: 0, scope: !5346)
!5360 = !DILocation(line: 1173, column: 3, scope: !5346)
!5361 = !DILocation(line: 1181, column: 22, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 1174, column: 5)
!5363 = !DILocation(line: 1185, column: 7, scope: !5362)
!5364 = !DILocation(line: 1186, column: 7, scope: !5362)
!5365 = !DILocation(line: 1190, column: 7, scope: !5362)
!5366 = !DILocation(line: 1193, column: 7, scope: !5362)
!5367 = !DILocation(line: 1194, column: 5, scope: !5362)
!5368 = !DILocation(line: 1196, column: 11, scope: !5346)
!5369 = !DILocation(line: 1197, column: 3, scope: !5346)
!5370 = !DILocation(line: 1199, column: 3, scope: !5346)
!5371 = !DILocation(line: 1200, column: 3, scope: !5346)
!5372 = !DILocation(line: 1201, column: 3, scope: !5346)
!5373 = !DILocation(line: 1205, column: 7, scope: !5346)
!5374 = !DILocation(line: 1206, column: 7, scope: !5346)
!5375 = !DILocation(line: 1210, column: 7, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 1210, column: 7)
!5377 = !DILocation(line: 1210, column: 7, scope: !5346)
!5378 = !DILocation(line: 1212, column: 11, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1212, column: 11)
!5380 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 1211, column: 5)
!5381 = !DILocation(line: 1212, column: 25, scope: !5379)
!5382 = !DILocation(line: 1212, column: 11, scope: !5380)
!5383 = !DILocation(line: 1215, column: 11, scope: !5380)
!5384 = !DILocation(line: 1216, column: 11, scope: !5380)
!5385 = !DILocation(line: 1217, column: 7, scope: !5380)
!5386 = !DILocation(line: 1218, column: 7, scope: !5380)
!5387 = !DILocation(line: 1221, column: 7, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 1221, column: 7)
!5389 = !DILocation(line: 1219, column: 5, scope: !5380)
!5390 = !DILocation(line: 1221, column: 26, scope: !5388)
!5391 = !DILocation(line: 1221, column: 29, scope: !5388)
!5392 = !DILocation(line: 1221, column: 7, scope: !5346)
!5393 = !DILocation(line: 1222, column: 27, scope: !5388)
!5394 = !DILocation(line: 1222, column: 5, scope: !5388)
!5395 = !DILocation(line: 1223, column: 12, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1223, column: 12)
!5397 = !DILocation(line: 1223, column: 12, scope: !5388)
!5398 = !DILocation(line: 1226, column: 12, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 1226, column: 12)
!5400 = !DILocation(line: 1227, column: 5, scope: !5399)
!5401 = !DILocation(line: 1227, column: 8, scope: !5399)
!5402 = !DILocation(line: 1228, column: 5, scope: !5399)
!5403 = !DILocation(line: 1228, column: 8, scope: !5399)
!5404 = !DILocation(line: 1226, column: 12, scope: !5396)
!5405 = !DILocation(line: 1230, column: 15, scope: !5399)
!5406 = !DILocation(line: 1230, column: 8, scope: !5399)
!5407 = !DILocation(line: 1229, column: 14, scope: !5399)
!5408 = !DILocation(line: 1229, column: 5, scope: !5399)
!5409 = !DILocation(line: 1232, column: 5, scope: !5399)
!5410 = !DILocation(line: 1170, column: 7, scope: !5346)
!5411 = !DILocation(line: 1234, column: 14, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 1234, column: 7)
!5413 = !DILocation(line: 1234, column: 7, scope: !5346)
!5414 = !DILocation(line: 1235, column: 5, scope: !5412)
!5415 = !DILocation(line: 1238, column: 1, scope: !5346)
!5416 = distinct !DISubprogram(name: "block_move_libcall_safe_for_call_parm", scope: !3, file: !3, line: 1251, type: !5417, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5419)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!2174}
!5419 = !{!5420, !5421, !5442, !5443, !5444, !5448}
!5420 = !DILocalVariable(name: "fn", scope: !5416, file: !3, line: 1254, type: !2298)
!5421 = !DILocalVariable(name: "args_so_far", scope: !5422, file: !3, line: 1273, type: !5423)
!5422 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1272, column: 3)
!5423 = !DIDerivedType(tag: DW_TAG_typedef, name: "CUMULATIVE_ARGS", file: !348, line: 1598, baseType: !5424)
!5424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ix86_args", file: !348, line: 1579, size: 512, elements: !5425)
!5425 = !{!5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441}
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !5424, file: !348, line: 1580, baseType: !2175, size: 32)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !5424, file: !348, line: 1581, baseType: !2175, size: 32, offset: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !5424, file: !348, line: 1582, baseType: !2175, size: 32, offset: 64)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "fastcall", scope: !5424, file: !348, line: 1583, baseType: !2175, size: 32, offset: 96)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "sse_words", scope: !5424, file: !348, line: 1584, baseType: !2175, size: 32, offset: 128)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "sse_nregs", scope: !5424, file: !348, line: 1585, baseType: !2175, size: 32, offset: 160)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "warn_avx", scope: !5424, file: !348, line: 1586, baseType: !2175, size: 32, offset: 192)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "warn_sse", scope: !5424, file: !348, line: 1587, baseType: !2175, size: 32, offset: 224)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "warn_mmx", scope: !5424, file: !348, line: 1588, baseType: !2175, size: 32, offset: 256)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "sse_regno", scope: !5424, file: !348, line: 1589, baseType: !2175, size: 32, offset: 288)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_words", scope: !5424, file: !348, line: 1590, baseType: !2175, size: 32, offset: 320)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_nregs", scope: !5424, file: !348, line: 1591, baseType: !2175, size: 32, offset: 352)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "mmx_regno", scope: !5424, file: !348, line: 1592, baseType: !2175, size: 32, offset: 384)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_vaarg", scope: !5424, file: !348, line: 1593, baseType: !2175, size: 32, offset: 416)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "float_in_sse", scope: !5424, file: !348, line: 1594, baseType: !2175, size: 32, offset: 448)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !5424, file: !348, line: 1596, baseType: !347, size: 32, offset: 480)
!5442 = !DILocalVariable(name: "fn", scope: !5422, file: !3, line: 1274, type: !2298)
!5443 = !DILocalVariable(name: "arg", scope: !5422, file: !3, line: 1274, type: !2298)
!5444 = !DILocalVariable(name: "mode", scope: !5445, file: !3, line: 1282, type: !5)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 1281, column: 7)
!5446 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1280, column: 5)
!5447 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 1280, column: 5)
!5448 = !DILocalVariable(name: "tmp", scope: !5445, file: !3, line: 1283, type: !2182)
!5449 = !DILocation(line: 1258, column: 7, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1258, column: 7)
!5451 = !DILocation(line: 1258, column: 7, scope: !5416)
!5452 = !DILocation(line: 1264, column: 8, scope: !5416)
!5453 = !DILocation(line: 0, scope: !5416)
!5454 = !DILocation(line: 1265, column: 7, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1265, column: 7)
!5456 = !DILocation(line: 1266, column: 7, scope: !5455)
!5457 = !DILocation(line: 1266, column: 10, scope: !5455)
!5458 = !DILocation(line: 1266, column: 36, scope: !5455)
!5459 = !DILocation(line: 1265, column: 7, scope: !5416)
!5460 = !DILocation(line: 1273, column: 5, scope: !5422)
!5461 = !DILocation(line: 1276, column: 10, scope: !5422)
!5462 = !DILocation(line: 0, scope: !5422)
!5463 = !DILocation(line: 1277, column: 5, scope: !5422)
!5464 = !DILocation(line: 1279, column: 11, scope: !5422)
!5465 = !DILocation(line: 1280, column: 5, scope: !5422)
!5466 = !DILocation(line: 1280, column: 20, scope: !5446)
!5467 = !DILocation(line: 1280, column: 17, scope: !5446)
!5468 = !DILocation(line: 1280, column: 5, scope: !5447)
!5469 = !DILocation(line: 1282, column: 27, scope: !5445)
!5470 = !DILocation(line: 0, scope: !5445)
!5471 = !DILocation(line: 1283, column: 12, scope: !5445)
!5472 = !DILocation(line: 1284, column: 7, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 1284, column: 6)
!5474 = !DILocation(line: 1284, column: 11, scope: !5473)
!5475 = !DILocation(line: 1284, column: 15, scope: !5473)
!5476 = !DILocation(line: 1284, column: 6, scope: !5445)
!5477 = !DILocation(line: 1286, column: 20, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 1286, column: 6)
!5479 = !DILocation(line: 1286, column: 6, scope: !5478)
!5480 = !DILocation(line: 1286, column: 6, scope: !5445)
!5481 = !DILocation(line: 1288, column: 2, scope: !5445)
!5482 = !DILocation(line: 1289, column: 7, scope: !5446)
!5483 = !DILocation(line: 1280, column: 43, scope: !5446)
!5484 = !DILocation(line: 1280, column: 5, scope: !5446)
!5485 = distinct !{!5485, !5468, !5486}
!5486 = !DILocation(line: 1289, column: 7, scope: !5447)
!5487 = !DILocation(line: 1290, column: 3, scope: !5416)
!5488 = !DILocation(line: 1292, column: 1, scope: !5416)
!5489 = distinct !DISubprogram(name: "emit_block_move_via_movmem", scope: !3, file: !3, line: 1298, type: !5490, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5492)
!5490 = !DISubroutineType(types: !5491)
!5491 = !{!2174, !2182, !2182, !2182, !7, !7, !2269}
!5492 = !{!5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5506, !5512, !5515, !5516}
!5493 = !DILocalVariable(name: "x", arg: 1, scope: !5489, file: !3, line: 1298, type: !2182)
!5494 = !DILocalVariable(name: "y", arg: 2, scope: !5489, file: !3, line: 1298, type: !2182)
!5495 = !DILocalVariable(name: "size", arg: 3, scope: !5489, file: !3, line: 1298, type: !2182)
!5496 = !DILocalVariable(name: "align", arg: 4, scope: !5489, file: !3, line: 1298, type: !7)
!5497 = !DILocalVariable(name: "expected_align", arg: 5, scope: !5489, file: !3, line: 1299, type: !7)
!5498 = !DILocalVariable(name: "expected_size", arg: 6, scope: !5489, file: !3, line: 1299, type: !2269)
!5499 = !DILocalVariable(name: "opalign", scope: !5489, file: !3, line: 1301, type: !2182)
!5500 = !DILocalVariable(name: "save_volatile_ok", scope: !5489, file: !3, line: 1302, type: !2175)
!5501 = !DILocalVariable(name: "mode", scope: !5489, file: !3, line: 1303, type: !5)
!5502 = !DILocalVariable(name: "code", scope: !5503, file: !3, line: 1318, type: !384)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 1317, column: 5)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 1315, column: 3)
!5505 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 1315, column: 3)
!5506 = !DILocalVariable(name: "pred", scope: !5503, file: !3, line: 1319, type: !5507)
!5507 = !DIDerivedType(tag: DW_TAG_typedef, name: "insn_operand_predicate_fn", file: !5508, line: 249, baseType: !5509)
!5508 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 64)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{!2175, !2182, !5}
!5512 = !DILocalVariable(name: "op2", scope: !5513, file: !3, line: 1337, type: !2182)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 1336, column: 2)
!5514 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 1321, column: 11)
!5515 = !DILocalVariable(name: "last", scope: !5513, file: !3, line: 1338, type: !2182)
!5516 = !DILocalVariable(name: "pat", scope: !5513, file: !3, line: 1339, type: !2182)
!5517 = !DILocation(line: 0, scope: !5489)
!5518 = !DILocation(line: 1301, column: 17, scope: !5489)
!5519 = !DILocation(line: 1302, column: 26, scope: !5489)
!5520 = !DILocation(line: 1305, column: 22, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 1305, column: 7)
!5522 = !DILocation(line: 1305, column: 7, scope: !5489)
!5523 = !DILocation(line: 1309, column: 15, scope: !5489)
!5524 = !DILocation(line: 0, scope: !5514)
!5525 = !DILocation(line: 0, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1351, column: 8)
!5527 = !DILocation(line: 1315, column: 8, scope: !5505)
!5528 = !DILocation(line: 0, scope: !5505)
!5529 = !DILocation(line: 1315, column: 57, scope: !5504)
!5530 = !DILocation(line: 1315, column: 3, scope: !5505)
!5531 = !DILocation(line: 1318, column: 29, scope: !5503)
!5532 = !DILocation(line: 0, scope: !5503)
!5533 = !DILocation(line: 1321, column: 16, scope: !5514)
!5534 = !DILocation(line: 1326, column: 4, scope: !5514)
!5535 = !DILocation(line: 1326, column: 9, scope: !5514)
!5536 = !DILocation(line: 1327, column: 9, scope: !5514)
!5537 = !DILocation(line: 1327, column: 38, scope: !5514)
!5538 = !DILocation(line: 1328, column: 10, scope: !5514)
!5539 = !DILocation(line: 1328, column: 31, scope: !5514)
!5540 = !DILocation(line: 1328, column: 6, scope: !5514)
!5541 = !DILocation(line: 1329, column: 8, scope: !5514)
!5542 = !DILocation(line: 1329, column: 11, scope: !5514)
!5543 = !DILocation(line: 1329, column: 35, scope: !5514)
!5544 = !DILocation(line: 1330, column: 4, scope: !5514)
!5545 = !DILocation(line: 1330, column: 16, scope: !5514)
!5546 = !DILocation(line: 1330, column: 38, scope: !5514)
!5547 = !DILocation(line: 1330, column: 49, scope: !5514)
!5548 = !DILocation(line: 1330, column: 60, scope: !5514)
!5549 = !DILocation(line: 1331, column: 8, scope: !5514)
!5550 = !DILocation(line: 1331, column: 11, scope: !5514)
!5551 = !DILocation(line: 1332, column: 4, scope: !5514)
!5552 = !DILocation(line: 1332, column: 49, scope: !5514)
!5553 = !DILocation(line: 1332, column: 60, scope: !5514)
!5554 = !DILocation(line: 1333, column: 8, scope: !5514)
!5555 = !DILocation(line: 1333, column: 11, scope: !5514)
!5556 = !DILocation(line: 1334, column: 4, scope: !5514)
!5557 = !DILocation(line: 1334, column: 49, scope: !5514)
!5558 = !DILocation(line: 1334, column: 60, scope: !5514)
!5559 = !DILocation(line: 1335, column: 8, scope: !5514)
!5560 = !DILocation(line: 1335, column: 11, scope: !5514)
!5561 = !DILocation(line: 1321, column: 11, scope: !5503)
!5562 = !DILocation(line: 1338, column: 15, scope: !5513)
!5563 = !DILocation(line: 0, scope: !5513)
!5564 = !DILocation(line: 1341, column: 10, scope: !5513)
!5565 = !DILocation(line: 1342, column: 44, scope: !5513)
!5566 = !DILocation(line: 1343, column: 13, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1343, column: 8)
!5568 = !DILocation(line: 1343, column: 18, scope: !5567)
!5569 = !DILocation(line: 1343, column: 23, scope: !5567)
!5570 = !DILocation(line: 1343, column: 8, scope: !5513)
!5571 = !DILocation(line: 1344, column: 12, scope: !5567)
!5572 = !DILocation(line: 1344, column: 6, scope: !5567)
!5573 = !DILocation(line: 1351, column: 30, scope: !5526)
!5574 = !DILocation(line: 1351, column: 41, scope: !5526)
!5575 = !DILocation(line: 1351, column: 8, scope: !5513)
!5576 = !DILocation(line: 1352, column: 12, scope: !5526)
!5577 = !DILocation(line: 1352, column: 6, scope: !5526)
!5578 = !DILocation(line: 1355, column: 6, scope: !5526)
!5579 = !DILocation(line: 1357, column: 6, scope: !5526)
!5580 = !DILocation(line: 1354, column: 12, scope: !5526)
!5581 = !DILocation(line: 1358, column: 8, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1358, column: 8)
!5583 = !DILocation(line: 1358, column: 8, scope: !5513)
!5584 = !DILocation(line: 1360, column: 8, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 1359, column: 6)
!5586 = !DILocation(line: 1361, column: 20, scope: !5585)
!5587 = !DILocation(line: 1362, column: 8, scope: !5585)
!5588 = !DILocation(line: 1365, column: 6, scope: !5582)
!5589 = !DILocation(line: 1366, column: 2, scope: !5514)
!5590 = !DILocation(line: 1367, column: 5, scope: !5504)
!5591 = !DILocation(line: 1316, column: 15, scope: !5504)
!5592 = !DILocation(line: 1315, column: 3, scope: !5504)
!5593 = distinct !{!5593, !5530, !5594}
!5594 = !DILocation(line: 1367, column: 5, scope: !5505)
!5595 = !DILocation(line: 1369, column: 15, scope: !5489)
!5596 = !DILocation(line: 1370, column: 3, scope: !5489)
!5597 = !DILocation(line: 1371, column: 1, scope: !5489)
!5598 = distinct !DISubprogram(name: "emit_block_move_via_libcall", scope: !3, file: !3, line: 1377, type: !5599, scopeLine: 1378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5601)
!5599 = !DISubroutineType(types: !5600)
!5600 = !{!2182, !2182, !2182, !2182, !2174}
!5601 = !{!5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614}
!5602 = !DILocalVariable(name: "dst", arg: 1, scope: !5598, file: !3, line: 1377, type: !2182)
!5603 = !DILocalVariable(name: "src", arg: 2, scope: !5598, file: !3, line: 1377, type: !2182)
!5604 = !DILocalVariable(name: "size", arg: 3, scope: !5598, file: !3, line: 1377, type: !2182)
!5605 = !DILocalVariable(name: "tailcall", arg: 4, scope: !5598, file: !3, line: 1377, type: !2174)
!5606 = !DILocalVariable(name: "dst_addr", scope: !5598, file: !3, line: 1379, type: !2182)
!5607 = !DILocalVariable(name: "src_addr", scope: !5598, file: !3, line: 1379, type: !2182)
!5608 = !DILocalVariable(name: "call_expr", scope: !5598, file: !3, line: 1380, type: !2298)
!5609 = !DILocalVariable(name: "fn", scope: !5598, file: !3, line: 1380, type: !2298)
!5610 = !DILocalVariable(name: "src_tree", scope: !5598, file: !3, line: 1380, type: !2298)
!5611 = !DILocalVariable(name: "dst_tree", scope: !5598, file: !3, line: 1380, type: !2298)
!5612 = !DILocalVariable(name: "size_tree", scope: !5598, file: !3, line: 1380, type: !2298)
!5613 = !DILocalVariable(name: "size_mode", scope: !5598, file: !3, line: 1381, type: !5)
!5614 = !DILocalVariable(name: "retval", scope: !5598, file: !3, line: 1382, type: !2182)
!5615 = !DILocation(line: 0, scope: !5598)
!5616 = !DILocation(line: 1388, column: 39, scope: !5598)
!5617 = !DILocation(line: 1388, column: 14, scope: !5598)
!5618 = !DILocation(line: 1389, column: 39, scope: !5598)
!5619 = !DILocation(line: 1389, column: 14, scope: !5598)
!5620 = !DILocation(line: 1391, column: 14, scope: !5598)
!5621 = !DILocation(line: 1392, column: 14, scope: !5598)
!5622 = !DILocation(line: 1394, column: 25, scope: !5598)
!5623 = !DILocation(line: 1394, column: 14, scope: !5598)
!5624 = !DILocation(line: 1395, column: 25, scope: !5598)
!5625 = !DILocation(line: 1395, column: 14, scope: !5598)
!5626 = !DILocation(line: 1397, column: 15, scope: !5598)
!5627 = !DILocation(line: 1399, column: 10, scope: !5598)
!5628 = !DILocation(line: 1400, column: 10, scope: !5598)
!5629 = !DILocation(line: 1408, column: 26, scope: !5598)
!5630 = !DILocation(line: 1408, column: 15, scope: !5598)
!5631 = !DILocation(line: 1410, column: 8, scope: !5598)
!5632 = !DILocation(line: 1411, column: 15, scope: !5598)
!5633 = !DILocation(line: 1412, column: 3, scope: !5598)
!5634 = !DILocation(line: 1412, column: 34, scope: !5598)
!5635 = !DILocation(line: 1414, column: 12, scope: !5598)
!5636 = !DILocation(line: 1416, column: 3, scope: !5598)
!5637 = distinct !DISubprogram(name: "emit_block_move_via_loop", scope: !3, file: !3, line: 1475, type: !5638, scopeLine: 1477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5640)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{null, !2182, !2182, !2182, !7}
!5640 = !{!5641, !5642, !5643, !5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653}
!5641 = !DILocalVariable(name: "x", arg: 1, scope: !5637, file: !3, line: 1475, type: !2182)
!5642 = !DILocalVariable(name: "y", arg: 2, scope: !5637, file: !3, line: 1475, type: !2182)
!5643 = !DILocalVariable(name: "size", arg: 3, scope: !5637, file: !3, line: 1475, type: !2182)
!5644 = !DILocalVariable(name: "align", arg: 4, scope: !5637, file: !3, line: 1476, type: !7)
!5645 = !DILocalVariable(name: "cmp_label", scope: !5637, file: !3, line: 1478, type: !2182)
!5646 = !DILocalVariable(name: "top_label", scope: !5637, file: !3, line: 1478, type: !2182)
!5647 = !DILocalVariable(name: "iter", scope: !5637, file: !3, line: 1478, type: !2182)
!5648 = !DILocalVariable(name: "x_addr", scope: !5637, file: !3, line: 1478, type: !2182)
!5649 = !DILocalVariable(name: "y_addr", scope: !5637, file: !3, line: 1478, type: !2182)
!5650 = !DILocalVariable(name: "tmp", scope: !5637, file: !3, line: 1478, type: !2182)
!5651 = !DILocalVariable(name: "x_addr_mode", scope: !5637, file: !3, line: 1479, type: !5)
!5652 = !DILocalVariable(name: "y_addr_mode", scope: !5637, file: !3, line: 1481, type: !5)
!5653 = !DILocalVariable(name: "iter_mode", scope: !5637, file: !3, line: 1483, type: !5)
!5654 = !DILocation(line: 0, scope: !5637)
!5655 = !DILocation(line: 1480, column: 26, scope: !5637)
!5656 = !DILocation(line: 1480, column: 40, scope: !5637)
!5657 = !DILocation(line: 1480, column: 7, scope: !5637)
!5658 = !DILocation(line: 1482, column: 26, scope: !5637)
!5659 = !DILocation(line: 1482, column: 40, scope: !5637)
!5660 = !DILocation(line: 1482, column: 7, scope: !5637)
!5661 = !DILocation(line: 1485, column: 15, scope: !5637)
!5662 = !DILocation(line: 1486, column: 17, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 1486, column: 7)
!5664 = !DILocation(line: 1487, column: 17, scope: !5663)
!5665 = !DILocation(line: 1486, column: 7, scope: !5637)
!5666 = !DILocation(line: 1489, column: 15, scope: !5637)
!5667 = !DILocation(line: 1490, column: 15, scope: !5637)
!5668 = !DILocation(line: 1491, column: 10, scope: !5637)
!5669 = !DILocation(line: 1493, column: 25, scope: !5637)
!5670 = !DILocation(line: 1493, column: 3, scope: !5637)
!5671 = !DILocation(line: 1495, column: 27, scope: !5637)
!5672 = !DILocation(line: 1495, column: 12, scope: !5637)
!5673 = !DILocation(line: 1496, column: 27, scope: !5637)
!5674 = !DILocation(line: 1496, column: 12, scope: !5637)
!5675 = !DILocation(line: 1497, column: 3, scope: !5637)
!5676 = !DILocation(line: 1499, column: 3, scope: !5637)
!5677 = !DILocation(line: 1500, column: 3, scope: !5637)
!5678 = !DILocation(line: 1502, column: 9, scope: !5637)
!5679 = !DILocation(line: 1503, column: 12, scope: !5637)
!5680 = !DILocation(line: 1505, column: 19, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 1505, column: 7)
!5682 = !DILocation(line: 1505, column: 7, scope: !5637)
!5683 = !DILocation(line: 1506, column: 11, scope: !5681)
!5684 = !DILocation(line: 1506, column: 5, scope: !5681)
!5685 = !DILocation(line: 1507, column: 12, scope: !5637)
!5686 = !DILocation(line: 1509, column: 7, scope: !5637)
!5687 = !DILocation(line: 1510, column: 7, scope: !5637)
!5688 = !DILocation(line: 1512, column: 3, scope: !5637)
!5689 = !DILocation(line: 1514, column: 53, scope: !5637)
!5690 = !DILocation(line: 1514, column: 9, scope: !5637)
!5691 = !DILocation(line: 1516, column: 11, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 1516, column: 7)
!5693 = !DILocation(line: 1516, column: 7, scope: !5637)
!5694 = !DILocation(line: 1517, column: 5, scope: !5692)
!5695 = !DILocation(line: 1519, column: 3, scope: !5637)
!5696 = !DILocation(line: 1521, column: 3, scope: !5637)
!5697 = !DILocation(line: 1523, column: 1, scope: !5637)
!5698 = distinct !DISubprogram(name: "emit_block_move", scope: !3, file: !3, line: 1241, type: !5699, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5701)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{!2182, !2182, !2182, !2182, !2041}
!5701 = !{!5702, !5703, !5704, !5705}
!5702 = !DILocalVariable(name: "x", arg: 1, scope: !5698, file: !3, line: 1241, type: !2182)
!5703 = !DILocalVariable(name: "y", arg: 2, scope: !5698, file: !3, line: 1241, type: !2182)
!5704 = !DILocalVariable(name: "size", arg: 3, scope: !5698, file: !3, line: 1241, type: !2182)
!5705 = !DILocalVariable(name: "method", arg: 4, scope: !5698, file: !3, line: 1241, type: !2041)
!5706 = !DILocation(line: 0, scope: !5698)
!5707 = !DILocation(line: 1243, column: 10, scope: !5698)
!5708 = !DILocation(line: 1243, column: 3, scope: !5698)
!5709 = !DILocation(line: 0, scope: !3698)
!5710 = !DILocation(line: 1457, column: 8, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 1457, column: 7)
!5712 = !DILocation(line: 1457, column: 7, scope: !3698)
!5713 = !DILocation(line: 1458, column: 5, scope: !5711)
!5714 = !DILocation(line: 1460, column: 7, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 1460, column: 7)
!5716 = !DILocation(line: 1460, column: 20, scope: !5715)
!5717 = !DILocation(line: 1460, column: 16, scope: !5715)
!5718 = !DILocation(line: 1462, column: 22, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1461, column: 5)
!5720 = !DILocation(line: 1463, column: 22, scope: !5719)
!5721 = !DILocation(line: 1463, column: 7, scope: !5719)
!5722 = !DILocation(line: 1464, column: 26, scope: !5719)
!5723 = !DILocation(line: 1464, column: 7, scope: !5719)
!5724 = !DILocation(line: 1465, column: 5, scope: !5719)
!5725 = !DILocation(line: 1467, column: 10, scope: !3698)
!5726 = !DILocation(line: 1467, column: 3, scope: !3698)
!5727 = distinct !DISubprogram(name: "expand_normal", scope: !2042, file: !2042, line: 562, type: !5728, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5730)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!2182, !2298}
!5730 = !{!5731}
!5731 = !DILocalVariable(name: "exp", arg: 1, scope: !5727, file: !2042, line: 562, type: !2298)
!5732 = !DILocation(line: 0, scope: !5727)
!5733 = !DILocation(line: 564, column: 10, scope: !5727)
!5734 = !DILocation(line: 564, column: 3, scope: !5727)
!5735 = distinct !DISubprogram(name: "init_block_move_fn", scope: !3, file: !3, line: 1426, type: !5736, scopeLine: 1427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5738)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{null, !2180}
!5738 = !{!5739, !5740, !5743}
!5739 = !DILocalVariable(name: "asmspec", arg: 1, scope: !5735, file: !3, line: 1426, type: !2180)
!5740 = !DILocalVariable(name: "args", scope: !5741, file: !3, line: 1430, type: !2298)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 1429, column: 5)
!5742 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1428, column: 7)
!5743 = !DILocalVariable(name: "fn", scope: !5741, file: !3, line: 1430, type: !2298)
!5744 = !DILocation(line: 0, scope: !5735)
!5745 = !DILocation(line: 1428, column: 8, scope: !5742)
!5746 = !DILocation(line: 1428, column: 7, scope: !5735)
!5747 = !DILocation(line: 1432, column: 12, scope: !5741)
!5748 = !DILocation(line: 0, scope: !5741)
!5749 = !DILocation(line: 1433, column: 40, scope: !5741)
!5750 = !DILocation(line: 1434, column: 12, scope: !5741)
!5751 = !DILocation(line: 1434, column: 33, scope: !5741)
!5752 = !DILocation(line: 1433, column: 14, scope: !5741)
!5753 = !DILocation(line: 1437, column: 12, scope: !5741)
!5754 = !DILocation(line: 1438, column: 7, scope: !5741)
!5755 = !DILocation(line: 1438, column: 26, scope: !5741)
!5756 = !DILocation(line: 1439, column: 7, scope: !5741)
!5757 = !DILocation(line: 1439, column: 24, scope: !5741)
!5758 = !DILocation(line: 1440, column: 28, scope: !5741)
!5759 = !DILocation(line: 1441, column: 25, scope: !5741)
!5760 = !DILocation(line: 1442, column: 7, scope: !5741)
!5761 = !DILocation(line: 1442, column: 28, scope: !5741)
!5762 = !DILocation(line: 1443, column: 38, scope: !5741)
!5763 = !DILocation(line: 1445, column: 21, scope: !5741)
!5764 = !DILocation(line: 1446, column: 5, scope: !5741)
!5765 = !DILocation(line: 1448, column: 7, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1448, column: 7)
!5767 = !DILocation(line: 1448, column: 7, scope: !5735)
!5768 = !DILocation(line: 1449, column: 5, scope: !5766)
!5769 = !DILocation(line: 1450, column: 1, scope: !5735)
!5770 = distinct !DISubprogram(name: "move_block_to_reg", scope: !3, file: !3, line: 1529, type: !5771, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5773)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{null, !2175, !2182, !2175, !5}
!5773 = !{!5774, !5775, !5776, !5777, !5778}
!5774 = !DILocalVariable(name: "regno", arg: 1, scope: !5770, file: !3, line: 1529, type: !2175)
!5775 = !DILocalVariable(name: "x", arg: 2, scope: !5770, file: !3, line: 1529, type: !2182)
!5776 = !DILocalVariable(name: "nregs", arg: 3, scope: !5770, file: !3, line: 1529, type: !2175)
!5777 = !DILocalVariable(name: "mode", arg: 4, scope: !5770, file: !3, line: 1529, type: !5)
!5778 = !DILocalVariable(name: "i", scope: !5770, file: !3, line: 1531, type: !2175)
!5779 = !DILocation(line: 0, scope: !5770)
!5780 = !DILocation(line: 1537, column: 13, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 1537, column: 7)
!5782 = !DILocation(line: 1537, column: 7, scope: !5770)
!5783 = !DILocation(line: 1540, column: 7, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 1540, column: 7)
!5785 = !DILocation(line: 1540, column: 22, scope: !5784)
!5786 = !DILocation(line: 1540, column: 27, scope: !5784)
!5787 = !DILocation(line: 1540, column: 7, scope: !5770)
!5788 = !DILocation(line: 1541, column: 23, scope: !5784)
!5789 = !DILocation(line: 1541, column: 9, scope: !5784)
!5790 = !DILocation(line: 1541, column: 5, scope: !5784)
!5791 = !DILocation(line: 1560, column: 8, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 1560, column: 3)
!5793 = !DILocation(line: 0, scope: !5792)
!5794 = !DILocation(line: 1560, column: 17, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1560, column: 3)
!5796 = !DILocation(line: 1560, column: 3, scope: !5792)
!5797 = !DILocation(line: 1561, column: 34, scope: !5795)
!5798 = !DILocation(line: 1561, column: 51, scope: !5795)
!5799 = !DILocation(line: 1561, column: 21, scope: !5795)
!5800 = !DILocation(line: 1562, column: 7, scope: !5795)
!5801 = !DILocation(line: 1561, column: 5, scope: !5795)
!5802 = !DILocation(line: 1560, column: 27, scope: !5795)
!5803 = !DILocation(line: 1560, column: 3, scope: !5795)
!5804 = distinct !{!5804, !5796, !5805}
!5805 = !DILocation(line: 1562, column: 41, scope: !5792)
!5806 = !DILocation(line: 1563, column: 1, scope: !5770)
!5807 = distinct !DISubprogram(name: "move_block_from_reg", scope: !3, file: !3, line: 1569, type: !5808, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5810)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{null, !2175, !2182, !2175}
!5810 = !{!5811, !5812, !5813, !5814, !5815}
!5811 = !DILocalVariable(name: "regno", arg: 1, scope: !5807, file: !3, line: 1569, type: !2175)
!5812 = !DILocalVariable(name: "x", arg: 2, scope: !5807, file: !3, line: 1569, type: !2182)
!5813 = !DILocalVariable(name: "nregs", arg: 3, scope: !5807, file: !3, line: 1569, type: !2175)
!5814 = !DILocalVariable(name: "i", scope: !5807, file: !3, line: 1571, type: !2175)
!5815 = !DILocalVariable(name: "tem", scope: !5816, file: !3, line: 1595, type: !2182)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1594, column: 5)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1593, column: 3)
!5818 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1593, column: 3)
!5819 = !DILocation(line: 0, scope: !5807)
!5820 = !DILocation(line: 1573, column: 13, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1573, column: 7)
!5822 = !DILocation(line: 1573, column: 7, scope: !5807)
!5823 = !DILocation(line: 1593, column: 3, scope: !5818)
!5824 = !DILocation(line: 0, scope: !5818)
!5825 = !DILocation(line: 1593, column: 17, scope: !5817)
!5826 = !DILocation(line: 1595, column: 17, scope: !5816)
!5827 = !DILocation(line: 0, scope: !5816)
!5828 = !DILocation(line: 1597, column: 7, scope: !5816)
!5829 = !DILocation(line: 1599, column: 41, scope: !5816)
!5830 = !DILocation(line: 1599, column: 58, scope: !5816)
!5831 = !DILocation(line: 1599, column: 28, scope: !5816)
!5832 = !DILocation(line: 1599, column: 7, scope: !5816)
!5833 = !DILocation(line: 1593, column: 27, scope: !5817)
!5834 = !DILocation(line: 1593, column: 3, scope: !5817)
!5835 = distinct !{!5835, !5823, !5836}
!5836 = !DILocation(line: 1600, column: 5, scope: !5818)
!5837 = !DILocation(line: 1601, column: 1, scope: !5807)
!5838 = distinct !DISubprogram(name: "gen_group_rtx", scope: !3, file: !3, line: 1610, type: !5839, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5841)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!2182, !2182}
!5841 = !{!5842, !5843, !5844, !5845, !5846, !5850}
!5842 = !DILocalVariable(name: "orig", arg: 1, scope: !5838, file: !3, line: 1610, type: !2182)
!5843 = !DILocalVariable(name: "i", scope: !5838, file: !3, line: 1612, type: !2175)
!5844 = !DILocalVariable(name: "length", scope: !5838, file: !3, line: 1612, type: !2175)
!5845 = !DILocalVariable(name: "tmps", scope: !5838, file: !3, line: 1613, type: !3606)
!5846 = !DILocalVariable(name: "mode", scope: !5847, file: !3, line: 1628, type: !5)
!5847 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 1627, column: 5)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 1626, column: 3)
!5849 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1626, column: 3)
!5850 = !DILocalVariable(name: "offset", scope: !5847, file: !3, line: 1629, type: !2182)
!5851 = !DILocation(line: 0, scope: !5838)
!5852 = !DILocation(line: 1615, column: 3, scope: !5838)
!5853 = !DILocation(line: 1617, column: 12, scope: !5838)
!5854 = !DILocation(line: 1618, column: 10, scope: !5838)
!5855 = !DILocation(line: 1621, column: 7, scope: !5838)
!5856 = !DILocation(line: 1623, column: 7, scope: !5838)
!5857 = !DILocation(line: 1624, column: 13, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1623, column: 7)
!5859 = !DILocation(line: 1624, column: 5, scope: !5858)
!5860 = !DILocation(line: 1626, column: 3, scope: !5838)
!5861 = !DILocation(line: 1626, column: 12, scope: !5848)
!5862 = !DILocation(line: 1626, column: 3, scope: !5849)
!5863 = !DILocation(line: 1628, column: 32, scope: !5847)
!5864 = !DILocation(line: 0, scope: !5847)
!5865 = !DILocation(line: 1629, column: 20, scope: !5847)
!5866 = !DILocation(line: 1631, column: 17, scope: !5847)
!5867 = !DILocation(line: 1631, column: 7, scope: !5847)
!5868 = !DILocation(line: 1631, column: 15, scope: !5847)
!5869 = !DILocation(line: 1626, column: 23, scope: !5848)
!5870 = !DILocation(line: 1626, column: 3, scope: !5848)
!5871 = distinct !{!5871, !5862, !5872}
!5872 = !DILocation(line: 1632, column: 5, scope: !5849)
!5873 = !DILocation(line: 1634, column: 10, scope: !5838)
!5874 = !DILocation(line: 1634, column: 3, scope: !5838)
!5875 = distinct !DISubprogram(name: "emit_group_load", scope: !3, file: !3, line: 1818, type: !5876, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5878)
!5876 = !DISubroutineType(types: !5877)
!5877 = !{null, !2182, !2182, !2298, !2175}
!5878 = !{!5879, !5880, !5881, !5882, !5883, !5884, !5885}
!5879 = !DILocalVariable(name: "dst", arg: 1, scope: !5875, file: !3, line: 1818, type: !2182)
!5880 = !DILocalVariable(name: "src", arg: 2, scope: !5875, file: !3, line: 1818, type: !2182)
!5881 = !DILocalVariable(name: "type", arg: 3, scope: !5875, file: !3, line: 1818, type: !2298)
!5882 = !DILocalVariable(name: "ssize", arg: 4, scope: !5875, file: !3, line: 1818, type: !2175)
!5883 = !DILocalVariable(name: "tmps", scope: !5875, file: !3, line: 1820, type: !3606)
!5884 = !DILocalVariable(name: "i", scope: !5875, file: !3, line: 1821, type: !2175)
!5885 = !DILocalVariable(name: "d", scope: !5886, file: !3, line: 1829, type: !2182)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1828, column: 5)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 1827, column: 3)
!5888 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 1827, column: 3)
!5889 = !DILocation(line: 0, scope: !5875)
!5890 = !DILocation(line: 1823, column: 10, scope: !5875)
!5891 = !DILocation(line: 1824, column: 3, scope: !5875)
!5892 = !DILocation(line: 1827, column: 8, scope: !5888)
!5893 = !DILocation(line: 0, scope: !5888)
!5894 = !DILocation(line: 1827, column: 19, scope: !5887)
!5895 = !DILocation(line: 1827, column: 17, scope: !5887)
!5896 = !DILocation(line: 1827, column: 3, scope: !5888)
!5897 = !DILocation(line: 1829, column: 15, scope: !5886)
!5898 = !DILocation(line: 0, scope: !5886)
!5899 = !DILocation(line: 1830, column: 13, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1830, column: 11)
!5901 = !DILocation(line: 1830, column: 11, scope: !5886)
!5902 = !DILocation(line: 1832, column: 26, scope: !5886)
!5903 = !DILocation(line: 1832, column: 7, scope: !5886)
!5904 = !DILocation(line: 1833, column: 5, scope: !5887)
!5905 = !DILocation(line: 1827, column: 38, scope: !5887)
!5906 = !DILocation(line: 1827, column: 3, scope: !5887)
!5907 = distinct !{!5907, !5896, !5908}
!5908 = !DILocation(line: 1833, column: 5, scope: !5888)
!5909 = !DILocation(line: 1834, column: 1, scope: !5875)
!5910 = distinct !DISubprogram(name: "emit_group_load_1", scope: !3, file: !3, line: 1642, type: !5911, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5913)
!5911 = !DISubroutineType(types: !5912)
!5912 = !{null, !3606, !2182, !2182, !2298, !2175}
!5913 = !{!5914, !5915, !5916, !5917, !5918, !5919, !5920, !5921, !5922, !5923, !5926, !5930, !5931, !5932, !5933, !5938, !5939, !5942, !5945, !5946, !5950, !5953}
!5914 = !DILocalVariable(name: "tmps", arg: 1, scope: !5910, file: !3, line: 1642, type: !3606)
!5915 = !DILocalVariable(name: "dst", arg: 2, scope: !5910, file: !3, line: 1642, type: !2182)
!5916 = !DILocalVariable(name: "orig_src", arg: 3, scope: !5910, file: !3, line: 1642, type: !2182)
!5917 = !DILocalVariable(name: "type", arg: 4, scope: !5910, file: !3, line: 1642, type: !2298)
!5918 = !DILocalVariable(name: "ssize", arg: 5, scope: !5910, file: !3, line: 1642, type: !2175)
!5919 = !DILocalVariable(name: "src", scope: !5910, file: !3, line: 1644, type: !2182)
!5920 = !DILocalVariable(name: "start", scope: !5910, file: !3, line: 1645, type: !2175)
!5921 = !DILocalVariable(name: "i", scope: !5910, file: !3, line: 1645, type: !2175)
!5922 = !DILocalVariable(name: "m", scope: !5910, file: !3, line: 1646, type: !5)
!5923 = !DILocalVariable(name: "imode", scope: !5924, file: !3, line: 1655, type: !5)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1654, column: 5)
!5925 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1650, column: 7)
!5926 = !DILocalVariable(name: "mode", scope: !5927, file: !3, line: 1680, type: !5)
!5927 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 1679, column: 5)
!5928 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 1678, column: 3)
!5929 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1678, column: 3)
!5930 = !DILocalVariable(name: "bytepos", scope: !5927, file: !3, line: 1681, type: !2269)
!5931 = !DILocalVariable(name: "bytelen", scope: !5927, file: !3, line: 1682, type: !7)
!5932 = !DILocalVariable(name: "shift", scope: !5927, file: !3, line: 1683, type: !2175)
!5933 = !DILocalVariable(name: "slen", scope: !5934, file: !3, line: 1737, type: !7)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 1736, column: 2)
!5935 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1735, column: 16)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1730, column: 16)
!5937 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1721, column: 11)
!5938 = !DILocalVariable(name: "slen0", scope: !5934, file: !3, line: 1738, type: !7)
!5939 = !DILocalVariable(name: "mem", scope: !5940, file: !3, line: 1756, type: !2182)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1755, column: 6)
!5941 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 1740, column: 8)
!5942 = !DILocalVariable(name: "slen", scope: !5943, file: !3, line: 1771, type: !2175)
!5943 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1770, column: 2)
!5944 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 1768, column: 16)
!5945 = !DILocalVariable(name: "mem", scope: !5943, file: !3, line: 1772, type: !2182)
!5946 = !DILocalVariable(name: "len", scope: !5947, file: !3, line: 1783, type: !2269)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1782, column: 2)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 1781, column: 16)
!5949 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 1778, column: 16)
!5950 = !DILocalVariable(name: "first", scope: !5951, file: !3, line: 1789, type: !2182)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 1788, column: 6)
!5952 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 1785, column: 8)
!5953 = !DILocalVariable(name: "second", scope: !5951, file: !3, line: 1789, type: !2182)
!5954 = !DILocation(line: 0, scope: !5910)
!5955 = !DILocation(line: 1646, column: 25, scope: !5910)
!5956 = !DILocation(line: 1648, column: 3, scope: !5910)
!5957 = !DILocation(line: 1650, column: 9, scope: !5925)
!5958 = !DILocation(line: 1651, column: 7, scope: !5925)
!5959 = !DILocation(line: 1651, column: 11, scope: !5925)
!5960 = !DILocation(line: 1652, column: 7, scope: !5925)
!5961 = !DILocation(line: 1652, column: 11, scope: !5925)
!5962 = !DILocation(line: 1653, column: 7, scope: !5925)
!5963 = !DILocation(line: 1653, column: 30, scope: !5925)
!5964 = !DILocation(line: 1650, column: 7, scope: !5910)
!5965 = !DILocation(line: 1655, column: 52, scope: !5924)
!5966 = !DILocation(line: 1655, column: 33, scope: !5924)
!5967 = !DILocation(line: 0, scope: !5924)
!5968 = !DILocation(line: 1656, column: 17, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1656, column: 11)
!5970 = !DILocation(line: 1656, column: 11, scope: !5924)
!5971 = !DILocation(line: 1657, column: 27, scope: !5969)
!5972 = !DILocation(line: 1657, column: 48, scope: !5969)
!5973 = !DILocation(line: 1657, column: 8, scope: !5969)
!5974 = !DILocation(line: 1657, column: 2, scope: !5969)
!5975 = !DILocation(line: 1659, column: 8, scope: !5969)
!5976 = !DILocation(line: 0, scope: !5969)
!5977 = !DILocation(line: 1660, column: 11, scope: !5924)
!5978 = !DILocation(line: 1661, column: 8, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1660, column: 11)
!5980 = !DILocation(line: 1661, column: 21, scope: !5979)
!5981 = !DILocation(line: 1661, column: 2, scope: !5979)
!5982 = !DILocation(line: 1662, column: 7, scope: !5924)
!5983 = !DILocation(line: 1664, column: 11, scope: !5924)
!5984 = !DILocation(line: 1665, column: 8, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1664, column: 11)
!5986 = !DILocation(line: 1665, column: 2, scope: !5985)
!5987 = !DILocation(line: 1666, column: 7, scope: !5924)
!5988 = !DILocation(line: 1672, column: 7, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1672, column: 7)
!5990 = !DILocation(line: 0, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1686, column: 11)
!5992 = !DILocation(line: 0, scope: !5951)
!5993 = !DILocation(line: 0, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1793, column: 12)
!5995 = !DILocation(line: 1678, column: 8, scope: !5929)
!5996 = !DILocation(line: 1678, column: 23, scope: !5928)
!5997 = !DILocation(line: 1678, column: 21, scope: !5928)
!5998 = !DILocation(line: 1678, column: 3, scope: !5929)
!5999 = !DILocation(line: 1680, column: 32, scope: !5927)
!6000 = !DILocation(line: 0, scope: !5927)
!6001 = !DILocation(line: 1681, column: 31, scope: !5927)
!6002 = !DILocation(line: 1682, column: 30, scope: !5927)
!6003 = !DILocation(line: 1686, column: 22, scope: !5991)
!6004 = !DILocation(line: 1686, column: 35, scope: !5991)
!6005 = !DILocation(line: 1686, column: 33, scope: !5991)
!6006 = !DILocation(line: 1686, column: 59, scope: !5991)
!6007 = !DILocation(line: 1686, column: 11, scope: !5927)
!6008 = !DILocation(line: 1699, column: 14, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1687, column: 2)
!6010 = !DILocation(line: 1700, column: 4, scope: !6009)
!6011 = !DILocation(line: 1707, column: 12, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1707, column: 11)
!6013 = !DILocation(line: 1708, column: 4, scope: !6012)
!6014 = !DILocation(line: 1708, column: 9, scope: !6012)
!6015 = !DILocation(line: 1709, column: 8, scope: !6012)
!6016 = !DILocation(line: 1712, column: 8, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 1712, column: 8)
!6018 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1711, column: 2)
!6019 = !DILocation(line: 1709, column: 12, scope: !6012)
!6020 = !DILocation(line: 1709, column: 32, scope: !6012)
!6021 = !DILocation(line: 1710, column: 5, scope: !6012)
!6022 = !DILocation(line: 1710, column: 8, scope: !6012)
!6023 = !DILocation(line: 1710, column: 28, scope: !6012)
!6024 = !DILocation(line: 1707, column: 11, scope: !5927)
!6025 = !DILocation(line: 1712, column: 28, scope: !6017)
!6026 = !DILocation(line: 1712, column: 8, scope: !6018)
!6027 = !DILocation(line: 1713, column: 12, scope: !6017)
!6028 = !DILocation(line: 1713, column: 6, scope: !6017)
!6029 = !DILocation(line: 1715, column: 25, scope: !6017)
!6030 = !DILocation(line: 1715, column: 12, scope: !6017)
!6031 = !DILocation(line: 0, scope: !6017)
!6032 = !DILocation(line: 1717, column: 4, scope: !6018)
!6033 = !DILocation(line: 0, scope: !5937)
!6034 = !DILocation(line: 1721, column: 11, scope: !5937)
!6035 = !DILocation(line: 1718, column: 2, scope: !6018)
!6036 = !DILocation(line: 1724, column: 4, scope: !5937)
!6037 = !DILocation(line: 1724, column: 15, scope: !5937)
!6038 = !DILocation(line: 1724, column: 33, scope: !5937)
!6039 = !DILocation(line: 1724, column: 31, scope: !5937)
!6040 = !DILocation(line: 1724, column: 59, scope: !5937)
!6041 = !DILocation(line: 1725, column: 4, scope: !5937)
!6042 = !DILocation(line: 1725, column: 18, scope: !5937)
!6043 = !DILocation(line: 1725, column: 15, scope: !5937)
!6044 = !DILocation(line: 1721, column: 11, scope: !5927)
!6045 = !DILocation(line: 1727, column: 14, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1726, column: 2)
!6047 = !DILocation(line: 1727, column: 4, scope: !6046)
!6048 = !DILocation(line: 1727, column: 12, scope: !6046)
!6049 = !DILocation(line: 1728, column: 29, scope: !6046)
!6050 = !DILocation(line: 1728, column: 4, scope: !6046)
!6051 = !DILocation(line: 1729, column: 2, scope: !6046)
!6052 = !DILocation(line: 1730, column: 16, scope: !5936)
!6053 = !DILocation(line: 1731, column: 9, scope: !5936)
!6054 = !DILocation(line: 1735, column: 16, scope: !5935)
!6055 = !DILocation(line: 1731, column: 12, scope: !5936)
!6056 = !DILocation(line: 1731, column: 27, scope: !5936)
!6057 = !DILocation(line: 1732, column: 9, scope: !5936)
!6058 = !DILocation(line: 1732, column: 23, scope: !5936)
!6059 = !DILocation(line: 1732, column: 20, scope: !5936)
!6060 = !DILocation(line: 1730, column: 16, scope: !5937)
!6061 = !DILocation(line: 1734, column: 2, scope: !5936)
!6062 = !DILocation(line: 1734, column: 10, scope: !5936)
!6063 = !DILocation(line: 1735, column: 31, scope: !5935)
!6064 = !DILocation(line: 1735, column: 16, scope: !5936)
!6065 = !DILocation(line: 1737, column: 24, scope: !5934)
!6066 = !DILocation(line: 0, scope: !5934)
!6067 = !DILocation(line: 1738, column: 25, scope: !5934)
!6068 = !DILocation(line: 1740, column: 17, scope: !5941)
!6069 = !DILocation(line: 1740, column: 33, scope: !5941)
!6070 = !DILocation(line: 1740, column: 22, scope: !5941)
!6071 = !DILocation(line: 1741, column: 25, scope: !5941)
!6072 = !DILocation(line: 1759, column: 49, scope: !5940)
!6073 = !DILocation(line: 1741, column: 38, scope: !5941)
!6074 = !DILocation(line: 1741, column: 36, scope: !5941)
!6075 = !DILocation(line: 1741, column: 49, scope: !5941)
!6076 = !DILocation(line: 1741, column: 46, scope: !5941)
!6077 = !DILocation(line: 1740, column: 8, scope: !5934)
!6078 = !DILocation(line: 1747, column: 18, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1742, column: 6)
!6080 = !DILocation(line: 1747, column: 8, scope: !6079)
!6081 = !DILocation(line: 1747, column: 16, scope: !6079)
!6082 = !DILocation(line: 1748, column: 14, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 1748, column: 12)
!6084 = !DILocation(line: 1749, column: 5, scope: !6083)
!6085 = !DILocation(line: 1749, column: 10, scope: !6083)
!6086 = !DILocation(line: 1749, column: 26, scope: !6083)
!6087 = !DILocation(line: 1749, column: 29, scope: !6083)
!6088 = !DILocation(line: 1749, column: 48, scope: !6083)
!6089 = !DILocation(line: 1748, column: 12, scope: !6079)
!6090 = !DILocation(line: 1750, column: 49, scope: !6083)
!6091 = !DILocation(line: 1750, column: 41, scope: !6083)
!6092 = !DILocation(line: 1751, column: 20, scope: !6083)
!6093 = !DILocation(line: 1751, column: 29, scope: !6083)
!6094 = !DILocation(line: 1750, column: 13, scope: !6083)
!6095 = !DILocation(line: 1750, column: 11, scope: !6083)
!6096 = !DILocation(line: 1750, column: 3, scope: !6083)
!6097 = !DILocation(line: 1758, column: 8, scope: !5940)
!6098 = !DILocation(line: 1759, column: 33, scope: !5940)
!6099 = !DILocation(line: 1759, column: 14, scope: !5940)
!6100 = !DILocation(line: 0, scope: !5940)
!6101 = !DILocation(line: 1760, column: 8, scope: !5940)
!6102 = !DILocation(line: 1761, column: 50, scope: !5940)
!6103 = !DILocation(line: 1761, column: 42, scope: !5940)
!6104 = !DILocation(line: 1761, column: 18, scope: !5940)
!6105 = !DILocation(line: 1761, column: 8, scope: !5940)
!6106 = !DILocation(line: 1761, column: 16, scope: !5940)
!6107 = !DILocation(line: 1768, column: 16, scope: !5944)
!6108 = !DILocation(line: 1769, column: 9, scope: !5944)
!6109 = !DILocation(line: 1769, column: 12, scope: !5944)
!6110 = !DILocation(line: 1768, column: 16, scope: !5935)
!6111 = !DILocation(line: 1771, column: 15, scope: !5943)
!6112 = !DILocation(line: 0, scope: !5943)
!6113 = !DILocation(line: 1774, column: 45, scope: !5943)
!6114 = !DILocation(line: 1774, column: 10, scope: !5943)
!6115 = !DILocation(line: 1775, column: 4, scope: !5943)
!6116 = !DILocation(line: 1776, column: 14, scope: !5943)
!6117 = !DILocation(line: 1776, column: 4, scope: !5943)
!6118 = !DILocation(line: 1776, column: 12, scope: !5943)
!6119 = !DILocation(line: 1777, column: 2, scope: !5943)
!6120 = !DILocation(line: 1778, column: 16, scope: !5949)
!6121 = !DILocation(line: 1778, column: 33, scope: !5949)
!6122 = !DILocation(line: 1778, column: 36, scope: !5949)
!6123 = !DILocation(line: 1778, column: 51, scope: !5949)
!6124 = !DILocation(line: 1779, column: 16, scope: !5949)
!6125 = !DILocation(line: 1779, column: 19, scope: !5949)
!6126 = !DILocation(line: 1779, column: 36, scope: !5949)
!6127 = !DILocation(line: 1778, column: 16, scope: !5944)
!6128 = !DILocation(line: 1780, column: 66, scope: !5949)
!6129 = !DILocation(line: 1780, column: 19, scope: !5949)
!6130 = !DILocation(line: 1780, column: 9, scope: !5949)
!6131 = !DILocation(line: 1780, column: 17, scope: !5949)
!6132 = !DILocation(line: 1781, column: 16, scope: !5949)
!6133 = !DILocation(line: 1783, column: 24, scope: !5947)
!6134 = !DILocation(line: 0, scope: !5947)
!6135 = !DILocation(line: 1785, column: 12, scope: !5952)
!6136 = !DILocation(line: 1785, column: 8, scope: !5947)
!6137 = !DILocation(line: 1786, column: 6, scope: !5952)
!6138 = !DILocation(line: 1786, column: 14, scope: !5952)
!6139 = !DILocation(line: 1789, column: 8, scope: !5951)
!6140 = !DILocation(line: 1791, column: 8, scope: !5951)
!6141 = !DILocation(line: 1792, column: 8, scope: !5951)
!6142 = !DILocation(line: 1793, column: 12, scope: !5994)
!6143 = !DILocation(line: 1793, column: 12, scope: !5951)
!6144 = !DILocation(line: 1794, column: 13, scope: !5994)
!6145 = !DILocation(line: 1794, column: 3, scope: !5994)
!6146 = !DILocation(line: 1794, column: 11, scope: !5994)
!6147 = !DILocation(line: 1796, column: 13, scope: !5994)
!6148 = !DILocation(line: 1796, column: 11, scope: !5994)
!6149 = !DILocation(line: 1797, column: 6, scope: !5952)
!6150 = !DILocation(line: 1799, column: 16, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1799, column: 16)
!6152 = !DILocation(line: 1799, column: 28, scope: !6151)
!6153 = !DILocation(line: 1799, column: 31, scope: !6151)
!6154 = !DILocation(line: 1799, column: 46, scope: !6151)
!6155 = !DILocation(line: 1799, column: 16, scope: !5948)
!6156 = !DILocation(line: 1800, column: 2, scope: !6151)
!6157 = !DILocation(line: 1800, column: 10, scope: !6151)
!6158 = !DILocation(line: 1802, column: 44, scope: !6151)
!6159 = !DILocation(line: 1802, column: 36, scope: !6151)
!6160 = !DILocation(line: 1803, column: 18, scope: !6151)
!6161 = !DILocation(line: 1802, column: 12, scope: !6151)
!6162 = !DILocation(line: 1802, column: 2, scope: !6151)
!6163 = !DILocation(line: 1802, column: 10, scope: !6151)
!6164 = !DILocation(line: 1678, column: 42, scope: !5928)
!6165 = !DILocation(line: 1678, column: 3, scope: !5928)
!6166 = distinct !{!6166, !5998, !6167}
!6167 = !DILocation(line: 1809, column: 5, scope: !5929)
!6168 = !DILocation(line: 1810, column: 1, scope: !5910)
!6169 = distinct !DISubprogram(name: "emit_group_load_into_temps", scope: !3, file: !3, line: 1841, type: !6170, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6172)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{!2182, !2182, !2182, !2298, !2175}
!6172 = !{!6173, !6174, !6175, !6176, !6177, !6178, !6179, !6183}
!6173 = !DILocalVariable(name: "parallel", arg: 1, scope: !6169, file: !3, line: 1841, type: !2182)
!6174 = !DILocalVariable(name: "src", arg: 2, scope: !6169, file: !3, line: 1841, type: !2182)
!6175 = !DILocalVariable(name: "type", arg: 3, scope: !6169, file: !3, line: 1841, type: !2298)
!6176 = !DILocalVariable(name: "ssize", arg: 4, scope: !6169, file: !3, line: 1841, type: !2175)
!6177 = !DILocalVariable(name: "vec", scope: !6169, file: !3, line: 1843, type: !2210)
!6178 = !DILocalVariable(name: "i", scope: !6169, file: !3, line: 1844, type: !2175)
!6179 = !DILocalVariable(name: "e", scope: !6180, file: !3, line: 1853, type: !2182)
!6180 = distinct !DILexicalBlock(scope: !6181, file: !3, line: 1852, column: 5)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 1851, column: 3)
!6182 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 1851, column: 3)
!6183 = !DILocalVariable(name: "d", scope: !6180, file: !3, line: 1854, type: !2182)
!6184 = !DILocation(line: 0, scope: !6169)
!6185 = !DILocation(line: 1846, column: 22, scope: !6169)
!6186 = !DILocation(line: 1846, column: 9, scope: !6169)
!6187 = !DILocation(line: 1847, column: 23, scope: !6169)
!6188 = !DILocation(line: 1847, column: 3, scope: !6169)
!6189 = !DILocation(line: 1851, column: 8, scope: !6182)
!6190 = !DILocation(line: 0, scope: !6182)
!6191 = !DILocation(line: 1851, column: 19, scope: !6181)
!6192 = !DILocation(line: 1851, column: 17, scope: !6181)
!6193 = !DILocation(line: 1851, column: 3, scope: !6182)
!6194 = !DILocation(line: 1853, column: 15, scope: !6180)
!6195 = !DILocation(line: 0, scope: !6180)
!6196 = !DILocation(line: 1854, column: 15, scope: !6180)
!6197 = !DILocation(line: 1856, column: 11, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 1856, column: 11)
!6199 = !DILocation(line: 1856, column: 11, scope: !6180)
!6200 = !DILocation(line: 1858, column: 19, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1857, column: 2)
!6202 = !DILocation(line: 1858, column: 33, scope: !6201)
!6203 = !DILocation(line: 1858, column: 8, scope: !6201)
!6204 = !DILocation(line: 1859, column: 25, scope: !6201)
!6205 = !DILocation(line: 1859, column: 47, scope: !6201)
!6206 = !DILocation(line: 1859, column: 8, scope: !6201)
!6207 = !DILocation(line: 1860, column: 2, scope: !6201)
!6208 = !DILocation(line: 1861, column: 7, scope: !6180)
!6209 = !DILocation(line: 1861, column: 26, scope: !6180)
!6210 = !DILocation(line: 1851, column: 43, scope: !6181)
!6211 = !DILocation(line: 1851, column: 3, scope: !6181)
!6212 = distinct !{!6212, !6193, !6213}
!6213 = !DILocation(line: 1862, column: 5, scope: !6182)
!6214 = !DILocation(line: 1864, column: 10, scope: !6169)
!6215 = !DILocation(line: 1864, column: 3, scope: !6169)
!6216 = distinct !DISubprogram(name: "emit_group_move", scope: !3, file: !3, line: 1871, type: !6217, scopeLine: 1872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6219)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !2182, !2182}
!6219 = !{!6220, !6221, !6222}
!6220 = !DILocalVariable(name: "dst", arg: 1, scope: !6216, file: !3, line: 1871, type: !2182)
!6221 = !DILocalVariable(name: "src", arg: 2, scope: !6216, file: !3, line: 1871, type: !2182)
!6222 = !DILocalVariable(name: "i", scope: !6216, file: !3, line: 1873, type: !2175)
!6223 = !DILocation(line: 0, scope: !6216)
!6224 = !DILocation(line: 1875, column: 3, scope: !6216)
!6225 = !DILocation(line: 0, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 1880, column: 3)
!6227 = !DILocation(line: 1880, column: 12, scope: !6226)
!6228 = !DILocation(line: 0, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 1880, column: 3)
!6230 = !DILocation(line: 1880, column: 8, scope: !6226)
!6231 = !DILocation(line: 1880, column: 55, scope: !6229)
!6232 = !DILocation(line: 1880, column: 53, scope: !6229)
!6233 = !DILocation(line: 1880, column: 3, scope: !6226)
!6234 = !DILocation(line: 1881, column: 21, scope: !6229)
!6235 = !DILocation(line: 1882, column: 7, scope: !6229)
!6236 = !DILocation(line: 1881, column: 5, scope: !6229)
!6237 = !DILocation(line: 1880, column: 74, scope: !6229)
!6238 = !DILocation(line: 1880, column: 3, scope: !6229)
!6239 = distinct !{!6239, !6233, !6240}
!6240 = !DILocation(line: 1882, column: 36, scope: !6226)
!6241 = !DILocation(line: 1883, column: 1, scope: !6216)
!6242 = distinct !DISubprogram(name: "emit_group_move_into_temps", scope: !3, file: !3, line: 1888, type: !5839, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6243)
!6243 = !{!6244, !6245, !6246, !6247, !6251}
!6244 = !DILocalVariable(name: "src", arg: 1, scope: !6242, file: !3, line: 1888, type: !2182)
!6245 = !DILocalVariable(name: "vec", scope: !6242, file: !3, line: 1890, type: !2210)
!6246 = !DILocalVariable(name: "i", scope: !6242, file: !3, line: 1891, type: !2175)
!6247 = !DILocalVariable(name: "e", scope: !6248, file: !3, line: 1895, type: !2182)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1894, column: 5)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 1893, column: 3)
!6250 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 1893, column: 3)
!6251 = !DILocalVariable(name: "d", scope: !6248, file: !3, line: 1896, type: !2182)
!6252 = !DILocation(line: 0, scope: !6242)
!6253 = !DILocation(line: 1890, column: 28, scope: !6242)
!6254 = !DILocation(line: 1890, column: 15, scope: !6242)
!6255 = !DILocation(line: 1893, column: 8, scope: !6250)
!6256 = !DILocation(line: 0, scope: !6250)
!6257 = !DILocation(line: 1893, column: 19, scope: !6249)
!6258 = !DILocation(line: 1893, column: 17, scope: !6249)
!6259 = !DILocation(line: 1893, column: 3, scope: !6250)
!6260 = !DILocation(line: 1895, column: 15, scope: !6248)
!6261 = !DILocation(line: 0, scope: !6248)
!6262 = !DILocation(line: 1896, column: 15, scope: !6248)
!6263 = !DILocation(line: 1898, column: 11, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 1898, column: 11)
!6265 = !DILocation(line: 1898, column: 11, scope: !6248)
!6266 = !DILocation(line: 1899, column: 23, scope: !6264)
!6267 = !DILocation(line: 1899, column: 42, scope: !6264)
!6268 = !DILocation(line: 1899, column: 59, scope: !6264)
!6269 = !DILocation(line: 1899, column: 6, scope: !6264)
!6270 = !DILocation(line: 1899, column: 2, scope: !6264)
!6271 = !DILocation(line: 1900, column: 7, scope: !6248)
!6272 = !DILocation(line: 1900, column: 26, scope: !6248)
!6273 = !DILocation(line: 1893, column: 38, scope: !6249)
!6274 = !DILocation(line: 1893, column: 3, scope: !6249)
!6275 = distinct !{!6275, !6259, !6276}
!6276 = !DILocation(line: 1901, column: 5, scope: !6250)
!6277 = !DILocation(line: 1903, column: 10, scope: !6242)
!6278 = !DILocation(line: 1903, column: 3, scope: !6242)
!6279 = distinct !DISubprogram(name: "emit_group_store", scope: !3, file: !3, line: 1912, type: !5876, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6280)
!6280 = !{!6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6294, !6298, !6301, !6304, !6305, !6306, !6307, !6308, !6312, !6313, !6314, !6315, !6316, !6322}
!6281 = !DILocalVariable(name: "orig_dst", arg: 1, scope: !6279, file: !3, line: 1912, type: !2182)
!6282 = !DILocalVariable(name: "src", arg: 2, scope: !6279, file: !3, line: 1912, type: !2182)
!6283 = !DILocalVariable(name: "type", arg: 3, scope: !6279, file: !3, line: 1912, type: !2298)
!6284 = !DILocalVariable(name: "ssize", arg: 4, scope: !6279, file: !3, line: 1912, type: !2175)
!6285 = !DILocalVariable(name: "tmps", scope: !6279, file: !3, line: 1914, type: !3606)
!6286 = !DILocalVariable(name: "dst", scope: !6279, file: !3, line: 1914, type: !2182)
!6287 = !DILocalVariable(name: "start", scope: !6279, file: !3, line: 1915, type: !2175)
!6288 = !DILocalVariable(name: "finish", scope: !6279, file: !3, line: 1915, type: !2175)
!6289 = !DILocalVariable(name: "i", scope: !6279, file: !3, line: 1915, type: !2175)
!6290 = !DILocalVariable(name: "m", scope: !6279, file: !3, line: 1916, type: !5)
!6291 = !DILocalVariable(name: "imode", scope: !6292, file: !3, line: 1923, type: !5)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1922, column: 5)
!6293 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1920, column: 7)
!6294 = !DILocalVariable(name: "reg", scope: !6295, file: !3, line: 1948, type: !2182)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1947, column: 5)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 1946, column: 3)
!6297 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1946, column: 3)
!6298 = !DILocalVariable(name: "temp", scope: !6299, file: !3, line: 1963, type: !2182)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1962, column: 5)
!6300 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1961, column: 7)
!6301 = !DILocalVariable(name: "outer", scope: !6302, file: !3, line: 1982, type: !5)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 1981, column: 5)
!6303 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1980, column: 12)
!6304 = !DILocalVariable(name: "inner", scope: !6302, file: !3, line: 1983, type: !5)
!6305 = !DILocalVariable(name: "bytepos", scope: !6302, file: !3, line: 1984, type: !2269)
!6306 = !DILocalVariable(name: "done", scope: !6302, file: !3, line: 1985, type: !2174)
!6307 = !DILocalVariable(name: "temp", scope: !6302, file: !3, line: 1986, type: !2182)
!6308 = !DILocalVariable(name: "bytepos", scope: !6309, file: !3, line: 2039, type: !2269)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 2038, column: 5)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 2037, column: 3)
!6311 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 2037, column: 3)
!6312 = !DILocalVariable(name: "mode", scope: !6309, file: !3, line: 2040, type: !5)
!6313 = !DILocalVariable(name: "bytelen", scope: !6309, file: !3, line: 2041, type: !7)
!6314 = !DILocalVariable(name: "adj_bytelen", scope: !6309, file: !3, line: 2042, type: !7)
!6315 = !DILocalVariable(name: "dest", scope: !6309, file: !3, line: 2043, type: !2182)
!6316 = !DILocalVariable(name: "dest_mode", scope: !6317, file: !3, line: 2061, type: !5)
!6317 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 2060, column: 6)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 2054, column: 13)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2051, column: 8)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 2050, column: 2)
!6321 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 2049, column: 11)
!6322 = !DILocalVariable(name: "tmp_mode", scope: !6317, file: !3, line: 2062, type: !5)
!6323 = !DILocation(line: 0, scope: !6279)
!6324 = !DILocation(line: 1916, column: 25, scope: !6279)
!6325 = !DILocation(line: 1918, column: 3, scope: !6279)
!6326 = !DILocation(line: 1920, column: 8, scope: !6293)
!6327 = !DILocation(line: 1921, column: 7, scope: !6293)
!6328 = !DILocation(line: 1921, column: 11, scope: !6293)
!6329 = !DILocation(line: 1921, column: 28, scope: !6293)
!6330 = !DILocation(line: 1921, column: 51, scope: !6293)
!6331 = !DILocation(line: 1920, column: 7, scope: !6279)
!6332 = !DILocation(line: 1923, column: 52, scope: !6292)
!6333 = !DILocation(line: 1923, column: 33, scope: !6292)
!6334 = !DILocation(line: 0, scope: !6292)
!6335 = !DILocation(line: 1924, column: 17, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1924, column: 11)
!6337 = !DILocation(line: 1924, column: 11, scope: !6292)
!6338 = !DILocation(line: 1925, column: 34, scope: !6336)
!6339 = !DILocation(line: 1925, column: 55, scope: !6336)
!6340 = !DILocation(line: 1925, column: 15, scope: !6336)
!6341 = !DILocation(line: 1925, column: 9, scope: !6336)
!6342 = !DILocation(line: 1927, column: 15, scope: !6336)
!6343 = !DILocation(line: 0, scope: !6336)
!6344 = !DILocation(line: 1928, column: 7, scope: !6292)
!6345 = !DILocation(line: 1929, column: 11, scope: !6292)
!6346 = !DILocation(line: 1930, column: 15, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1929, column: 11)
!6348 = !DILocation(line: 1930, column: 28, scope: !6347)
!6349 = !DILocation(line: 1930, column: 9, scope: !6347)
!6350 = !DILocation(line: 1931, column: 7, scope: !6292)
!6351 = !DILocation(line: 1937, column: 7, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1937, column: 7)
!6353 = !DILocation(line: 1941, column: 12, scope: !6279)
!6354 = !DILocation(line: 1943, column: 10, scope: !6279)
!6355 = !DILocation(line: 1946, column: 8, scope: !6297)
!6356 = !DILocation(line: 0, scope: !6297)
!6357 = !DILocation(line: 1946, column: 21, scope: !6296)
!6358 = !DILocation(line: 1946, column: 3, scope: !6297)
!6359 = !DILocation(line: 1948, column: 17, scope: !6295)
!6360 = !DILocation(line: 0, scope: !6295)
!6361 = !DILocation(line: 1949, column: 12, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 1949, column: 11)
!6363 = !DILocation(line: 1949, column: 24, scope: !6362)
!6364 = !DILocation(line: 1949, column: 27, scope: !6362)
!6365 = !DILocation(line: 1949, column: 39, scope: !6362)
!6366 = !DILocation(line: 1949, column: 11, scope: !6295)
!6367 = !DILocation(line: 1951, column: 27, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1950, column: 2)
!6369 = !DILocation(line: 1951, column: 14, scope: !6368)
!6370 = !DILocation(line: 1951, column: 4, scope: !6368)
!6371 = !DILocation(line: 1951, column: 12, scope: !6368)
!6372 = !DILocation(line: 1952, column: 4, scope: !6368)
!6373 = !DILocation(line: 1953, column: 2, scope: !6368)
!6374 = !DILocation(line: 1955, column: 2, scope: !6362)
!6375 = !DILocation(line: 1955, column: 10, scope: !6362)
!6376 = !DILocation(line: 1946, column: 32, scope: !6296)
!6377 = !DILocation(line: 1946, column: 3, scope: !6296)
!6378 = distinct !{!6378, !6358, !6379}
!6379 = !DILocation(line: 1956, column: 5, scope: !6297)
!6380 = !DILocation(line: 1961, column: 7, scope: !6300)
!6381 = !DILocation(line: 1961, column: 22, scope: !6300)
!6382 = !DILocation(line: 1961, column: 7, scope: !6279)
!6383 = !DILocation(line: 1968, column: 11, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 1968, column: 11)
!6385 = !DILocation(line: 1968, column: 11, scope: !6299)
!6386 = !DILocation(line: 1975, column: 33, scope: !6299)
!6387 = !DILocation(line: 1975, column: 49, scope: !6299)
!6388 = !DILocation(line: 1975, column: 14, scope: !6299)
!6389 = !DILocation(line: 0, scope: !6299)
!6390 = !DILocation(line: 1976, column: 7, scope: !6299)
!6391 = !DILocation(line: 1977, column: 7, scope: !6299)
!6392 = !DILocation(line: 1978, column: 7, scope: !6299)
!6393 = !DILocation(line: 1980, column: 13, scope: !6303)
!6394 = !DILocation(line: 1980, column: 25, scope: !6303)
!6395 = !DILocation(line: 1980, column: 43, scope: !6303)
!6396 = !DILocation(line: 1980, column: 12, scope: !6300)
!6397 = !DILocation(line: 1982, column: 33, scope: !6302)
!6398 = !DILocation(line: 0, scope: !6302)
!6399 = !DILocation(line: 1988, column: 12, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 1988, column: 11)
!6401 = !DILocation(line: 1988, column: 24, scope: !6400)
!6402 = !DILocation(line: 1988, column: 27, scope: !6400)
!6403 = !DILocation(line: 1988, column: 39, scope: !6400)
!6404 = !DILocation(line: 1988, column: 11, scope: !6302)
!6405 = !DILocation(line: 1989, column: 8, scope: !6400)
!6406 = !DILocation(line: 1989, column: 2, scope: !6400)
!6407 = !DILocation(line: 1995, column: 17, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 1995, column: 11)
!6409 = !DILocation(line: 1995, column: 11, scope: !6302)
!6410 = !DILocation(line: 1997, column: 12, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 1996, column: 2)
!6412 = !DILocation(line: 1998, column: 14, scope: !6411)
!6413 = !DILocation(line: 1999, column: 8, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1999, column: 8)
!6415 = !DILocation(line: 1999, column: 51, scope: !6414)
!6416 = !DILocation(line: 1999, column: 8, scope: !6411)
!6417 = !DILocation(line: 2001, column: 15, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 2000, column: 6)
!6419 = !DILocation(line: 2003, column: 12, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 2003, column: 12)
!6421 = !DILocation(line: 2003, column: 12, scope: !6418)
!6422 = !DILocation(line: 2005, column: 5, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 2004, column: 3)
!6424 = !DILocation(line: 2007, column: 10, scope: !6423)
!6425 = !DILocation(line: 2008, column: 3, scope: !6423)
!6426 = !DILocation(line: 2013, column: 12, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 2013, column: 11)
!6428 = !DILocation(line: 2014, column: 22, scope: !6427)
!6429 = !DILocation(line: 2014, column: 13, scope: !6427)
!6430 = !DILocation(line: 2014, column: 4, scope: !6427)
!6431 = !DILocation(line: 2016, column: 12, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 2015, column: 2)
!6433 = !DILocation(line: 2017, column: 14, scope: !6432)
!6434 = !DILocation(line: 2018, column: 8, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 2018, column: 8)
!6436 = !DILocation(line: 2018, column: 56, scope: !6435)
!6437 = !DILocation(line: 2018, column: 8, scope: !6432)
!6438 = !DILocation(line: 2020, column: 15, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 2019, column: 6)
!6440 = !DILocation(line: 2022, column: 12, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 2022, column: 12)
!6442 = !DILocation(line: 2022, column: 12, scope: !6439)
!6443 = !DILocation(line: 2024, column: 5, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 2023, column: 3)
!6445 = !DILocation(line: 2027, column: 3, scope: !6444)
!6446 = !DILocation(line: 2032, column: 12, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 2032, column: 11)
!6448 = !DILocation(line: 2032, column: 11, scope: !6302)
!6449 = !DILocation(line: 2033, column: 30, scope: !6447)
!6450 = !DILocation(line: 2033, column: 9, scope: !6447)
!6451 = !DILocation(line: 1941, column: 10, scope: !6279)
!6452 = !DILocation(line: 0, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 2046, column: 11)
!6454 = !DILocation(line: 2037, column: 8, scope: !6311)
!6455 = !DILocation(line: 0, scope: !6311)
!6456 = !DILocation(line: 1960, column: 7, scope: !6279)
!6457 = !DILocation(line: 2037, column: 21, scope: !6310)
!6458 = !DILocation(line: 2037, column: 3, scope: !6311)
!6459 = !DILocation(line: 2039, column: 31, scope: !6309)
!6460 = !DILocation(line: 0, scope: !6309)
!6461 = !DILocation(line: 2040, column: 32, scope: !6309)
!6462 = !DILocation(line: 2041, column: 30, scope: !6309)
!6463 = !DILocation(line: 2046, column: 22, scope: !6453)
!6464 = !DILocation(line: 2046, column: 35, scope: !6453)
!6465 = !DILocation(line: 2046, column: 33, scope: !6453)
!6466 = !DILocation(line: 2046, column: 59, scope: !6453)
!6467 = !DILocation(line: 2046, column: 11, scope: !6309)
!6468 = !DILocation(line: 2047, column: 16, scope: !6453)
!6469 = !DILocation(line: 2047, column: 2, scope: !6453)
!6470 = !DILocation(line: 2049, column: 11, scope: !6321)
!6471 = !DILocation(line: 2049, column: 26, scope: !6321)
!6472 = !DILocation(line: 2049, column: 11, scope: !6309)
!6473 = !DILocation(line: 2051, column: 18, scope: !6319)
!6474 = !DILocation(line: 2051, column: 16, scope: !6319)
!6475 = !DILocation(line: 2052, column: 11, scope: !6319)
!6476 = !DILocation(line: 2052, column: 8, scope: !6319)
!6477 = !DILocation(line: 0, scope: !6319)
!6478 = !DILocation(line: 2051, column: 8, scope: !6320)
!6479 = !DILocation(line: 2054, column: 21, scope: !6318)
!6480 = !DILocation(line: 2054, column: 13, scope: !6319)
!6481 = !DILocation(line: 2056, column: 16, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 2055, column: 6)
!6483 = !DILocation(line: 2057, column: 15, scope: !6482)
!6484 = !DILocation(line: 2061, column: 38, scope: !6317)
!6485 = !DILocation(line: 0, scope: !6317)
!6486 = !DILocation(line: 2064, column: 8, scope: !6317)
!6487 = !DILocation(line: 2066, column: 12, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2066, column: 12)
!6489 = !DILocation(line: 2067, column: 8, scope: !6488)
!6490 = !DILocation(line: 2067, column: 5, scope: !6488)
!6491 = !DILocation(line: 2066, column: 12, scope: !6317)
!6492 = !DILocation(line: 2070, column: 10, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 2068, column: 3)
!6494 = !DILocation(line: 2069, column: 12, scope: !6493)
!6495 = !DILocation(line: 2072, column: 21, scope: !6493)
!6496 = !DILocation(line: 2072, column: 5, scope: !6493)
!6497 = !DILocation(line: 2077, column: 3, scope: !6493)
!6498 = !DILocation(line: 2081, column: 10, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 2079, column: 3)
!6500 = !DILocation(line: 2080, column: 12, scope: !6499)
!6501 = !DILocation(line: 2083, column: 5, scope: !6499)
!6502 = !DILocation(line: 2084, column: 11, scope: !6499)
!6503 = !DILocation(line: 2039, column: 21, scope: !6309)
!6504 = !DILocation(line: 2090, column: 22, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 2090, column: 11)
!6506 = !DILocation(line: 2090, column: 35, scope: !6505)
!6507 = !DILocation(line: 2090, column: 33, scope: !6505)
!6508 = !DILocation(line: 2090, column: 59, scope: !6505)
!6509 = !DILocation(line: 2090, column: 11, scope: !6309)
!6510 = !DILocation(line: 2112, column: 11, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 2112, column: 11)
!6512 = !DILocation(line: 2115, column: 4, scope: !6511)
!6513 = !DILocation(line: 2119, column: 58, scope: !6511)
!6514 = !DILocation(line: 2115, column: 15, scope: !6511)
!6515 = !DILocation(line: 2115, column: 33, scope: !6511)
!6516 = !DILocation(line: 2115, column: 31, scope: !6511)
!6517 = !DILocation(line: 2115, column: 59, scope: !6511)
!6518 = !DILocation(line: 2116, column: 4, scope: !6511)
!6519 = !DILocation(line: 2116, column: 18, scope: !6511)
!6520 = !DILocation(line: 2116, column: 15, scope: !6511)
!6521 = !DILocation(line: 2112, column: 11, scope: !6309)
!6522 = !DILocation(line: 2117, column: 18, scope: !6511)
!6523 = !DILocation(line: 2117, column: 2, scope: !6511)
!6524 = !DILocation(line: 2119, column: 33, scope: !6511)
!6525 = !DILocation(line: 2119, column: 25, scope: !6511)
!6526 = !DILocation(line: 2119, column: 2, scope: !6511)
!6527 = !DILocation(line: 2037, column: 32, scope: !6310)
!6528 = !DILocation(line: 2037, column: 3, scope: !6310)
!6529 = distinct !{!6529, !6458, !6530}
!6530 = !DILocation(line: 2121, column: 5, scope: !6311)
!6531 = !DILocation(line: 2124, column: 16, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 2124, column: 7)
!6533 = !DILocation(line: 2124, column: 7, scope: !6279)
!6534 = !DILocation(line: 2125, column: 5, scope: !6532)
!6535 = !DILocation(line: 2126, column: 1, scope: !6279)
!6536 = distinct !DISubprogram(name: "copy_blkmode_from_reg", scope: !3, file: !3, line: 2138, type: !6537, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6539)
!6537 = !DISubroutineType(types: !6538)
!6538 = !{!2182, !2182, !2182, !2298}
!6539 = !{!6540, !6541, !6542, !6543, !6544, !6545, !6546, !6547, !6548, !6549, !6550, !6551}
!6540 = !DILocalVariable(name: "tgtblk", arg: 1, scope: !6536, file: !3, line: 2138, type: !2182)
!6541 = !DILocalVariable(name: "srcreg", arg: 2, scope: !6536, file: !3, line: 2138, type: !2182)
!6542 = !DILocalVariable(name: "type", arg: 3, scope: !6536, file: !3, line: 2138, type: !2298)
!6543 = !DILocalVariable(name: "bytes", scope: !6536, file: !3, line: 2140, type: !2252)
!6544 = !DILocalVariable(name: "src", scope: !6536, file: !3, line: 2141, type: !2182)
!6545 = !DILocalVariable(name: "dst", scope: !6536, file: !3, line: 2141, type: !2182)
!6546 = !DILocalVariable(name: "bitsize", scope: !6536, file: !3, line: 2142, type: !2252)
!6547 = !DILocalVariable(name: "bitpos", scope: !6536, file: !3, line: 2143, type: !2252)
!6548 = !DILocalVariable(name: "xbitpos", scope: !6536, file: !3, line: 2143, type: !2252)
!6549 = !DILocalVariable(name: "padding_correction", scope: !6536, file: !3, line: 2143, type: !2252)
!6550 = !DILocalVariable(name: "copy_mode", scope: !6536, file: !3, line: 2144, type: !5)
!6551 = !DILocalVariable(name: "mem_mode", scope: !6552, file: !3, line: 2190, type: !5)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2189, column: 5)
!6553 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 2188, column: 7)
!6554 = !DILocation(line: 0, scope: !6536)
!6555 = !DILocation(line: 2140, column: 34, scope: !6536)
!6556 = !DILocation(line: 2142, column: 36, scope: !6536)
!6557 = !DILocation(line: 2146, column: 14, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 2146, column: 7)
!6559 = !DILocation(line: 2146, column: 7, scope: !6536)
!6560 = !DILocation(line: 2149, column: 10, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 2147, column: 5)
!6562 = !DILocation(line: 2150, column: 10, scope: !6561)
!6563 = !DILocation(line: 2148, column: 29, scope: !6561)
!6564 = !DILocation(line: 2148, column: 16, scope: !6561)
!6565 = !DILocation(line: 2152, column: 7, scope: !6561)
!6566 = !DILocation(line: 2153, column: 5, scope: !6561)
!6567 = !DILocation(line: 2158, column: 7, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 2158, column: 7)
!6569 = !DILocation(line: 2158, column: 25, scope: !6568)
!6570 = !DILocation(line: 2159, column: 7, scope: !6568)
!6571 = !DILocation(line: 2159, column: 10, scope: !6568)
!6572 = !DILocation(line: 2159, column: 44, scope: !6568)
!6573 = !DILocation(line: 2158, column: 7, scope: !6536)
!6574 = !DILocation(line: 2160, column: 31, scope: !6568)
!6575 = !DILocation(line: 2160, column: 50, scope: !6568)
!6576 = !DILocation(line: 2160, column: 14, scope: !6568)
!6577 = !DILocation(line: 2160, column: 5, scope: !6568)
!6578 = !DILocation(line: 2171, column: 13, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 2171, column: 7)
!6580 = !DILocation(line: 2171, column: 30, scope: !6579)
!6581 = !DILocation(line: 2172, column: 7, scope: !6579)
!6582 = !DILocation(line: 2172, column: 25, scope: !6579)
!6583 = !DILocation(line: 2172, column: 11, scope: !6579)
!6584 = !DILocation(line: 2171, column: 7, scope: !6536)
!6585 = !DILocation(line: 2176, column: 52, scope: !6579)
!6586 = !DILocation(line: 2176, column: 24, scope: !6579)
!6587 = !DILocation(line: 2175, column: 5, scope: !6579)
!6588 = !DILocation(line: 2187, column: 15, scope: !6536)
!6589 = !DILocation(line: 2188, column: 7, scope: !6553)
!6590 = !DILocation(line: 2188, column: 7, scope: !6536)
!6591 = !DILocation(line: 2190, column: 51, scope: !6552)
!6592 = !DILocation(line: 2190, column: 36, scope: !6552)
!6593 = !DILocation(line: 0, scope: !6552)
!6594 = !DILocation(line: 2191, column: 20, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 2191, column: 11)
!6596 = !DILocation(line: 2191, column: 11, scope: !6552)
!6597 = !DILocation(line: 2193, column: 5, scope: !6552)
!6598 = !DILocation(line: 0, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 2195, column: 3)
!6600 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 2195, column: 3)
!6601 = !DILocation(line: 0, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2202, column: 11)
!6603 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2198, column: 5)
!6604 = !DILocation(line: 2195, column: 8, scope: !6600)
!6605 = !DILocation(line: 0, scope: !6600)
!6606 = !DILocation(line: 2196, column: 15, scope: !6599)
!6607 = !DILocation(line: 2195, column: 3, scope: !6600)
!6608 = !DILocation(line: 2202, column: 19, scope: !6602)
!6609 = !DILocation(line: 2202, column: 35, scope: !6602)
!6610 = !DILocation(line: 2203, column: 15, scope: !6602)
!6611 = !DILocation(line: 2203, column: 4, scope: !6602)
!6612 = !DILocation(line: 2204, column: 47, scope: !6602)
!6613 = !DILocation(line: 2204, column: 39, scope: !6602)
!6614 = !DILocation(line: 2205, column: 10, scope: !6602)
!6615 = !DILocation(line: 2204, column: 8, scope: !6602)
!6616 = !DILocation(line: 2204, column: 2, scope: !6602)
!6617 = !DILocation(line: 2209, column: 18, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2209, column: 11)
!6619 = !DILocation(line: 2209, column: 34, scope: !6618)
!6620 = !DILocation(line: 2209, column: 11, scope: !6603)
!6621 = !DILocation(line: 2210, column: 40, scope: !6618)
!6622 = !DILocation(line: 2210, column: 33, scope: !6618)
!6623 = !DILocation(line: 2210, column: 8, scope: !6618)
!6624 = !DILocation(line: 2210, column: 2, scope: !6618)
!6625 = !DILocation(line: 2215, column: 10, scope: !6603)
!6626 = !DILocation(line: 2214, column: 7, scope: !6603)
!6627 = !DILocation(line: 2197, column: 15, scope: !6599)
!6628 = !DILocation(line: 2197, column: 35, scope: !6599)
!6629 = !DILocation(line: 2195, column: 3, scope: !6599)
!6630 = distinct !{!6630, !6607, !6631}
!6631 = !DILocation(line: 2218, column: 5, scope: !6600)
!6632 = !DILocation(line: 2220, column: 3, scope: !6536)
!6633 = distinct !DISubprogram(name: "use_reg", scope: !3, file: !3, line: 2227, type: !6634, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6636)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{null, !3606, !2182}
!6636 = !{!6637, !6638}
!6637 = !DILocalVariable(name: "call_fusage", arg: 1, scope: !6633, file: !3, line: 2227, type: !3606)
!6638 = !DILocalVariable(name: "reg", arg: 2, scope: !6633, file: !3, line: 2227, type: !2182)
!6639 = !DILocation(line: 0, scope: !6633)
!6640 = !DILocation(line: 2229, column: 3, scope: !6633)
!6641 = !DILocation(line: 2232, column: 7, scope: !6633)
!6642 = !DILocation(line: 2232, column: 5, scope: !6633)
!6643 = !DILocation(line: 2234, column: 1, scope: !6633)
!6644 = distinct !DISubprogram(name: "use_regs", scope: !3, file: !3, line: 2240, type: !6645, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6647)
!6645 = !DISubroutineType(types: !6646)
!6646 = !{null, !3606, !2175, !2175}
!6647 = !{!6648, !6649, !6650, !6651}
!6648 = !DILocalVariable(name: "call_fusage", arg: 1, scope: !6644, file: !3, line: 2240, type: !3606)
!6649 = !DILocalVariable(name: "regno", arg: 2, scope: !6644, file: !3, line: 2240, type: !2175)
!6650 = !DILocalVariable(name: "nregs", arg: 3, scope: !6644, file: !3, line: 2240, type: !2175)
!6651 = !DILocalVariable(name: "i", scope: !6644, file: !3, line: 2242, type: !2175)
!6652 = !DILocation(line: 0, scope: !6644)
!6653 = !DILocation(line: 2244, column: 3, scope: !6644)
!6654 = !DILocation(line: 2246, column: 8, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 2246, column: 3)
!6656 = !DILocation(line: 0, scope: !6655)
!6657 = !DILocation(line: 2246, column: 17, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2246, column: 3)
!6659 = !DILocation(line: 2246, column: 3, scope: !6655)
!6660 = !DILocation(line: 2247, column: 27, scope: !6658)
!6661 = !DILocation(line: 2247, column: 47, scope: !6658)
!6662 = !DILocation(line: 2247, column: 5, scope: !6658)
!6663 = !DILocation(line: 2246, column: 27, scope: !6658)
!6664 = !DILocation(line: 2246, column: 3, scope: !6658)
!6665 = distinct !{!6665, !6659, !6666}
!6666 = !DILocation(line: 2247, column: 51, scope: !6655)
!6667 = !DILocation(line: 2248, column: 1, scope: !6644)
!6668 = distinct !DISubprogram(name: "use_group_regs", scope: !3, file: !3, line: 2255, type: !6634, scopeLine: 2256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6669)
!6669 = !{!6670, !6671, !6672, !6673}
!6670 = !DILocalVariable(name: "call_fusage", arg: 1, scope: !6668, file: !3, line: 2255, type: !3606)
!6671 = !DILocalVariable(name: "regs", arg: 2, scope: !6668, file: !3, line: 2255, type: !2182)
!6672 = !DILocalVariable(name: "i", scope: !6668, file: !3, line: 2257, type: !2175)
!6673 = !DILocalVariable(name: "reg", scope: !6674, file: !3, line: 2261, type: !2182)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 2260, column: 5)
!6675 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 2259, column: 3)
!6676 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 2259, column: 3)
!6677 = !DILocation(line: 0, scope: !6668)
!6678 = !DILocation(line: 0, scope: !6675)
!6679 = !DILocation(line: 2259, column: 8, scope: !6676)
!6680 = !DILocation(line: 0, scope: !6676)
!6681 = !DILocation(line: 2259, column: 19, scope: !6675)
!6682 = !DILocation(line: 2259, column: 17, scope: !6675)
!6683 = !DILocation(line: 2259, column: 3, scope: !6676)
!6684 = !DILocation(line: 2261, column: 17, scope: !6674)
!6685 = !DILocation(line: 0, scope: !6674)
!6686 = !DILocation(line: 2266, column: 15, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 2266, column: 11)
!6688 = !DILocation(line: 2266, column: 20, scope: !6687)
!6689 = !DILocation(line: 2266, column: 23, scope: !6687)
!6690 = !DILocation(line: 2266, column: 11, scope: !6674)
!6691 = !DILocation(line: 2267, column: 2, scope: !6687)
!6692 = !DILocation(line: 2259, column: 39, scope: !6675)
!6693 = !DILocation(line: 2259, column: 3, scope: !6675)
!6694 = distinct !{!6694, !6683, !6695}
!6695 = !DILocation(line: 2268, column: 5, scope: !6676)
!6696 = !DILocation(line: 2269, column: 1, scope: !6668)
!6697 = distinct !DISubprogram(name: "can_store_by_pieces", scope: !3, file: !3, line: 2300, type: !6698, scopeLine: 2303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6703)
!6698 = !DISubroutineType(types: !6699)
!6699 = !{!2175, !2252, !6700, !2179, !7, !2174}
!6700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6701, size: 64)
!6701 = !DISubroutineType(types: !6702)
!6702 = !{!2182, !2179, !2269, !5}
!6703 = !{!6704, !6705, !6706, !6707, !6708, !6709, !6710, !6711, !6712, !6713, !6714, !6715, !6716, !6717, !6720}
!6704 = !DILocalVariable(name: "len", arg: 1, scope: !6697, file: !3, line: 2300, type: !2252)
!6705 = !DILocalVariable(name: "constfun", arg: 2, scope: !6697, file: !3, line: 2301, type: !6700)
!6706 = !DILocalVariable(name: "constfundata", arg: 3, scope: !6697, file: !3, line: 2302, type: !2179)
!6707 = !DILocalVariable(name: "align", arg: 4, scope: !6697, file: !3, line: 2302, type: !7)
!6708 = !DILocalVariable(name: "memsetp", arg: 5, scope: !6697, file: !3, line: 2302, type: !2174)
!6709 = !DILocalVariable(name: "l", scope: !6697, file: !3, line: 2304, type: !2252)
!6710 = !DILocalVariable(name: "max_size", scope: !6697, file: !3, line: 2305, type: !7)
!6711 = !DILocalVariable(name: "offset", scope: !6697, file: !3, line: 2306, type: !2269)
!6712 = !DILocalVariable(name: "mode", scope: !6697, file: !3, line: 2307, type: !5)
!6713 = !DILocalVariable(name: "tmode", scope: !6697, file: !3, line: 2307, type: !5)
!6714 = !DILocalVariable(name: "icode", scope: !6697, file: !3, line: 2308, type: !384)
!6715 = !DILocalVariable(name: "reverse", scope: !6697, file: !3, line: 2309, type: !2175)
!6716 = !DILocalVariable(name: "cst", scope: !6697, file: !3, line: 2310, type: !2182)
!6717 = !DILocalVariable(name: "xmode", scope: !6718, file: !3, line: 2325, type: !5)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 2324, column: 5)
!6719 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2321, column: 7)
!6720 = !DILocalVariable(name: "size", scope: !6721, file: !3, line: 2361, type: !7)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 2360, column: 6)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2358, column: 8)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 2348, column: 2)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 2343, column: 5)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 2340, column: 3)
!6726 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2340, column: 3)
!6727 = !DILocation(line: 0, scope: !6697)
!6728 = !DILocation(line: 2312, column: 11, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2312, column: 7)
!6730 = !DILocation(line: 2312, column: 7, scope: !6697)
!6731 = !DILocation(line: 2315, column: 10, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2315, column: 7)
!6733 = !DILocation(line: 0, scope: !6732)
!6734 = !DILocation(line: 2315, column: 7, scope: !6697)
!6735 = !DILocation(line: 2316, column: 5, scope: !6732)
!6736 = !DILocation(line: 2317, column: 5, scope: !6732)
!6737 = !DILocation(line: 2320, column: 11, scope: !6697)
!6738 = !DILocation(line: 2321, column: 16, scope: !6719)
!6739 = !DILocation(line: 2321, column: 13, scope: !6719)
!6740 = !DILocation(line: 2321, column: 7, scope: !6697)
!6741 = !DILocation(line: 2322, column: 13, scope: !6719)
!6742 = !DILocation(line: 2322, column: 5, scope: !6719)
!6743 = !DILocation(line: 2327, column: 20, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2327, column: 7)
!6745 = !DILocation(line: 0, scope: !6718)
!6746 = !DILocation(line: 2327, column: 12, scope: !6744)
!6747 = !DILocation(line: 0, scope: !6744)
!6748 = !DILocation(line: 2328, column: 11, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 2327, column: 7)
!6750 = !DILocation(line: 2327, column: 7, scope: !6744)
!6751 = !DILocation(line: 2330, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 2330, column: 6)
!6753 = !DILocation(line: 2330, column: 28, scope: !6752)
!6754 = !DILocation(line: 2330, column: 6, scope: !6749)
!6755 = !DILocation(line: 2329, column: 28, scope: !6749)
!6756 = !DILocation(line: 2327, column: 7, scope: !6749)
!6757 = distinct !{!6757, !6750, !6758}
!6758 = !DILocation(line: 2332, column: 4, scope: !6744)
!6759 = !DILocation(line: 2334, column: 15, scope: !6718)
!6760 = !DILocation(line: 0, scope: !6719)
!6761 = !DILocation(line: 2340, column: 8, scope: !6726)
!6762 = !DILocation(line: 2306, column: 17, scope: !6697)
!6763 = !DILocation(line: 2340, column: 3, scope: !6726)
!6764 = !DILocation(line: 2347, column: 7, scope: !6724)
!6765 = !DILocation(line: 2345, column: 12, scope: !6724)
!6766 = !DILocation(line: 0, scope: !6724)
!6767 = !DILocation(line: 2344, column: 9, scope: !6724)
!6768 = !DILocation(line: 2347, column: 23, scope: !6724)
!6769 = !DILocation(line: 2349, column: 9, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2349, column: 4)
!6771 = !DILocation(line: 0, scope: !6770)
!6772 = !DILocation(line: 2350, column: 15, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2349, column: 4)
!6774 = !DILocation(line: 2349, column: 4, scope: !6770)
!6775 = !DILocation(line: 2351, column: 10, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 2351, column: 10)
!6777 = !DILocation(line: 2351, column: 32, scope: !6776)
!6778 = !DILocation(line: 2351, column: 10, scope: !6773)
!6779 = !DILocation(line: 2350, column: 36, scope: !6773)
!6780 = !DILocation(line: 2349, column: 4, scope: !6773)
!6781 = distinct !{!6781, !6774, !6782}
!6782 = !DILocation(line: 2352, column: 15, scope: !6770)
!6783 = !DILocation(line: 2354, column: 13, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2354, column: 8)
!6785 = !DILocation(line: 2354, column: 8, scope: !6723)
!6786 = !DILocation(line: 2357, column: 12, scope: !6723)
!6787 = !DILocation(line: 2357, column: 45, scope: !6723)
!6788 = !DILocation(line: 2358, column: 14, scope: !6722)
!6789 = !DILocation(line: 2359, column: 8, scope: !6722)
!6790 = !DILocation(line: 2359, column: 20, scope: !6722)
!6791 = !DILocation(line: 2359, column: 17, scope: !6722)
!6792 = !DILocation(line: 2358, column: 8, scope: !6723)
!6793 = !DILocation(line: 2361, column: 28, scope: !6721)
!6794 = !DILocation(line: 0, scope: !6721)
!6795 = !DILocation(line: 2363, column: 8, scope: !6721)
!6796 = !DILocation(line: 2363, column: 17, scope: !6721)
!6797 = !DILocation(line: 2368, column: 11, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 2364, column: 3)
!6799 = !DILocation(line: 2369, column: 10, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 2369, column: 9)
!6801 = !DILocation(line: 2369, column: 9, scope: !6798)
!6802 = !DILocation(line: 2372, column: 9, scope: !6798)
!6803 = !DILocation(line: 2375, column: 7, scope: !6798)
!6804 = distinct !{!6804, !6795, !6805}
!6805 = !DILocation(line: 2376, column: 3, scope: !6721)
!6806 = !DILocation(line: 2379, column: 15, scope: !6723)
!6807 = distinct !{!6807, !6764, !6808}
!6808 = !DILocation(line: 2380, column: 2, scope: !6724)
!6809 = !DILocation(line: 2383, column: 7, scope: !6724)
!6810 = !DILocation(line: 2387, column: 1, scope: !6697)
!6811 = !DILocation(line: 2340, column: 3, scope: !6725)
!6812 = distinct !{!6812, !6763, !6813}
!6813 = !DILocation(line: 2384, column: 5, scope: !6726)
!6814 = distinct !DISubprogram(name: "store_by_pieces", scope: !3, file: !3, line: 2399, type: !6815, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6817)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{!2182, !2182, !2252, !6700, !2179, !7, !2174, !2175}
!6817 = !{!6818, !6819, !6820, !6821, !6822, !6823, !6824, !6825, !6826, !6838}
!6818 = !DILocalVariable(name: "to", arg: 1, scope: !6814, file: !3, line: 2399, type: !2182)
!6819 = !DILocalVariable(name: "len", arg: 2, scope: !6814, file: !3, line: 2399, type: !2252)
!6820 = !DILocalVariable(name: "constfun", arg: 3, scope: !6814, file: !3, line: 2400, type: !6700)
!6821 = !DILocalVariable(name: "constfundata", arg: 4, scope: !6814, file: !3, line: 2401, type: !2179)
!6822 = !DILocalVariable(name: "align", arg: 5, scope: !6814, file: !3, line: 2401, type: !7)
!6823 = !DILocalVariable(name: "memsetp", arg: 6, scope: !6814, file: !3, line: 2401, type: !2174)
!6824 = !DILocalVariable(name: "endp", arg: 7, scope: !6814, file: !3, line: 2401, type: !2175)
!6825 = !DILocalVariable(name: "to_addr_mode", scope: !6814, file: !3, line: 2403, type: !5)
!6826 = !DILocalVariable(name: "data", scope: !6814, file: !3, line: 2405, type: !6827)
!6827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "store_by_pieces_d", file: !3, line: 112, size: 512, elements: !6828)
!6828 = !{!6829, !6830, !6831, !6832, !6833, !6834, !6835, !6836, !6837}
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !6827, file: !3, line: 114, baseType: !2182, size: 64)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "to_addr", scope: !6827, file: !3, line: 115, baseType: !2182, size: 64, offset: 64)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "autinc_to", scope: !6827, file: !3, line: 116, baseType: !2175, size: 32, offset: 128)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_inc_to", scope: !6827, file: !3, line: 117, baseType: !2175, size: 32, offset: 160)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6827, file: !3, line: 118, baseType: !2252, size: 64, offset: 192)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6827, file: !3, line: 119, baseType: !2269, size: 64, offset: 256)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "constfun", scope: !6827, file: !3, line: 120, baseType: !6700, size: 64, offset: 320)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "constfundata", scope: !6827, file: !3, line: 121, baseType: !2179, size: 64, offset: 384)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !6827, file: !3, line: 122, baseType: !2175, size: 32, offset: 448)
!6838 = !DILocalVariable(name: "to1", scope: !6839, file: !3, line: 2423, type: !2182)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 2422, column: 5)
!6840 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 2421, column: 7)
!6841 = !DILocation(line: 0, scope: !6814)
!6842 = !DILocation(line: 2404, column: 26, scope: !6814)
!6843 = !DILocation(line: 2404, column: 40, scope: !6814)
!6844 = !DILocation(line: 2404, column: 7, scope: !6814)
!6845 = !DILocation(line: 2405, column: 3, scope: !6814)
!6846 = !DILocation(line: 2407, column: 11, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 2407, column: 7)
!6848 = !DILocation(line: 2407, column: 7, scope: !6814)
!6849 = !DILocation(line: 2409, column: 7, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 2408, column: 5)
!6851 = !DILocation(line: 2413, column: 3, scope: !6814)
!6852 = !DILocation(line: 2416, column: 8, scope: !6814)
!6853 = !DILocation(line: 2416, column: 17, scope: !6814)
!6854 = !DILocation(line: 2417, column: 8, scope: !6814)
!6855 = !DILocation(line: 2417, column: 21, scope: !6814)
!6856 = !DILocation(line: 2418, column: 8, scope: !6814)
!6857 = !DILocation(line: 2418, column: 12, scope: !6814)
!6858 = !DILocation(line: 2419, column: 8, scope: !6814)
!6859 = !DILocation(line: 2419, column: 11, scope: !6814)
!6860 = !DILocation(line: 2420, column: 3, scope: !6814)
!6861 = !DILocation(line: 2421, column: 7, scope: !6840)
!6862 = !DILocation(line: 2421, column: 7, scope: !6814)
!6863 = !DILocation(line: 2425, column: 7, scope: !6839)
!6864 = !DILocation(line: 2426, column: 16, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 2426, column: 11)
!6866 = !DILocation(line: 2426, column: 11, scope: !6865)
!6867 = !DILocation(line: 0, scope: !6865)
!6868 = !DILocation(line: 2426, column: 11, scope: !6839)
!6869 = !DILocation(line: 2428, column: 8, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 2427, column: 2)
!6871 = !DILocation(line: 0, scope: !6870)
!6872 = !DILocation(line: 2437, column: 10, scope: !6870)
!6873 = !DILocation(line: 2434, column: 28, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2430, column: 12)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 2429, column: 6)
!6876 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 2428, column: 8)
!6877 = !DILocation(line: 2434, column: 8, scope: !6874)
!6878 = !DILocation(line: 2433, column: 18, scope: !6874)
!6879 = !DILocation(line: 2433, column: 16, scope: !6874)
!6880 = !DILocation(line: 2436, column: 6, scope: !6875)
!6881 = !DILocation(line: 0, scope: !6839)
!6882 = !DILocation(line: 2439, column: 2, scope: !6870)
!6883 = !DILocation(line: 2442, column: 8, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 2441, column: 2)
!6885 = !DILocation(line: 0, scope: !6884)
!6886 = !DILocation(line: 2444, column: 10, scope: !6884)
!6887 = !DILocation(line: 2443, column: 13, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 2442, column: 8)
!6889 = !DILocation(line: 2443, column: 6, scope: !6888)
!6890 = !DILocation(line: 2449, column: 17, scope: !6840)
!6891 = !DILocation(line: 2449, column: 5, scope: !6840)
!6892 = !DILocation(line: 2450, column: 1, scope: !6814)
!6893 = distinct !DISubprogram(name: "store_by_pieces_1", scope: !3, file: !3, line: 2486, type: !6894, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6897)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{null, !6896, !7}
!6896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6827, size: 64)
!6897 = !{!6898, !6899, !6900, !6901, !6902, !6903, !6904, !6905, !6906}
!6898 = !DILocalVariable(name: "data", arg: 1, scope: !6893, file: !3, line: 2486, type: !6896)
!6899 = !DILocalVariable(name: "align", arg: 2, scope: !6893, file: !3, line: 2487, type: !7)
!6900 = !DILocalVariable(name: "to_addr_mode", scope: !6893, file: !3, line: 2489, type: !5)
!6901 = !DILocalVariable(name: "to_addr", scope: !6893, file: !3, line: 2491, type: !2182)
!6902 = !DILocalVariable(name: "max_size", scope: !6893, file: !3, line: 2492, type: !7)
!6903 = !DILocalVariable(name: "mode", scope: !6893, file: !3, line: 2493, type: !5)
!6904 = !DILocalVariable(name: "tmode", scope: !6893, file: !3, line: 2493, type: !5)
!6905 = !DILocalVariable(name: "icode", scope: !6893, file: !3, line: 2494, type: !384)
!6906 = !DILocalVariable(name: "xmode", scope: !6907, file: !3, line: 2545, type: !5)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 2544, column: 5)
!6908 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2541, column: 7)
!6909 = !DILocation(line: 0, scope: !6893)
!6910 = !DILocation(line: 2490, column: 26, scope: !6893)
!6911 = !DILocation(line: 2490, column: 40, scope: !6893)
!6912 = !DILocation(line: 2490, column: 7, scope: !6893)
!6913 = !DILocation(line: 2491, column: 17, scope: !6893)
!6914 = !DILocation(line: 2496, column: 9, scope: !6893)
!6915 = !DILocation(line: 2496, column: 16, scope: !6893)
!6916 = !DILocation(line: 2497, column: 9, scope: !6893)
!6917 = !DILocation(line: 2497, column: 17, scope: !6893)
!6918 = !DILocation(line: 2499, column: 8, scope: !6893)
!6919 = !DILocation(line: 2499, column: 27, scope: !6893)
!6920 = !DILocation(line: 2499, column: 38, scope: !6893)
!6921 = !DILocation(line: 2499, column: 60, scope: !6893)
!6922 = !DILocation(line: 2500, column: 8, scope: !6893)
!6923 = !DILocation(line: 2500, column: 30, scope: !6893)
!6924 = !DILocation(line: 2500, column: 42, scope: !6893)
!6925 = !DILocation(line: 2500, column: 64, scope: !6893)
!6926 = !DILocation(line: 2498, column: 9, scope: !6893)
!6927 = !DILocation(line: 2499, column: 5, scope: !6893)
!6928 = !DILocation(line: 2502, column: 9, scope: !6893)
!6929 = !DILocation(line: 2502, column: 25, scope: !6893)
!6930 = !DILocation(line: 2504, column: 8, scope: !6893)
!6931 = !DILocation(line: 2504, column: 27, scope: !6893)
!6932 = !DILocation(line: 2504, column: 38, scope: !6893)
!6933 = !DILocation(line: 2504, column: 60, scope: !6893)
!6934 = !DILocation(line: 2503, column: 9, scope: !6893)
!6935 = !DILocation(line: 2504, column: 5, scope: !6893)
!6936 = !DILocation(line: 2505, column: 7, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2505, column: 7)
!6938 = !DILocation(line: 2505, column: 7, scope: !6893)
!6939 = !DILocation(line: 2506, column: 26, scope: !6937)
!6940 = !DILocation(line: 2506, column: 18, scope: !6937)
!6941 = !DILocation(line: 2506, column: 5, scope: !6937)
!6942 = !DILocation(line: 2511, column: 8, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2511, column: 7)
!6944 = !DILocation(line: 2512, column: 7, scope: !6943)
!6945 = !DILocation(line: 2512, column: 39, scope: !6943)
!6946 = !DILocation(line: 2512, column: 10, scope: !6943)
!6947 = !DILocation(line: 2512, column: 61, scope: !6943)
!6948 = !DILocation(line: 2511, column: 7, scope: !6893)
!6949 = !DILocation(line: 2515, column: 12, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2515, column: 7)
!6951 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 2513, column: 5)
!6952 = !DILocation(line: 0, scope: !6950)
!6953 = !DILocation(line: 2516, column: 11, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 2515, column: 7)
!6955 = !DILocation(line: 2515, column: 7, scope: !6950)
!6956 = !DILocation(line: 2517, column: 6, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 2517, column: 6)
!6958 = !DILocation(line: 2517, column: 28, scope: !6957)
!6959 = !DILocation(line: 2517, column: 6, scope: !6954)
!6960 = !DILocation(line: 2516, column: 32, scope: !6954)
!6961 = !DILocation(line: 2515, column: 7, scope: !6954)
!6962 = distinct !{!6962, !6955, !6963}
!6963 = !DILocation(line: 2518, column: 11, scope: !6950)
!6964 = !DILocation(line: 2536, column: 19, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2536, column: 12)
!6966 = !DILocation(line: 2536, column: 13, scope: !6965)
!6967 = !DILocation(line: 2536, column: 29, scope: !6965)
!6968 = !DILocation(line: 2536, column: 32, scope: !6965)
!6969 = !DILocation(line: 2536, column: 12, scope: !6951)
!6970 = !DILocation(line: 2537, column: 18, scope: !6965)
!6971 = !DILocation(line: 2537, column: 16, scope: !6965)
!6972 = !DILocation(line: 2537, column: 2, scope: !6965)
!6973 = !DILocation(line: 2493, column: 21, scope: !6893)
!6974 = !DILocation(line: 2540, column: 11, scope: !6893)
!6975 = !DILocation(line: 2541, column: 16, scope: !6908)
!6976 = !DILocation(line: 2541, column: 13, scope: !6908)
!6977 = !DILocation(line: 2541, column: 7, scope: !6893)
!6978 = !DILocation(line: 2542, column: 13, scope: !6908)
!6979 = !DILocation(line: 2542, column: 5, scope: !6908)
!6980 = !DILocation(line: 2547, column: 20, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 2547, column: 7)
!6982 = !DILocation(line: 0, scope: !6907)
!6983 = !DILocation(line: 2547, column: 12, scope: !6981)
!6984 = !DILocation(line: 0, scope: !6981)
!6985 = !DILocation(line: 2548, column: 11, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 2547, column: 7)
!6987 = !DILocation(line: 2547, column: 7, scope: !6981)
!6988 = !DILocation(line: 2550, column: 6, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 2550, column: 6)
!6990 = !DILocation(line: 2550, column: 28, scope: !6989)
!6991 = !DILocation(line: 2550, column: 6, scope: !6986)
!6992 = !DILocation(line: 2549, column: 28, scope: !6986)
!6993 = !DILocation(line: 2547, column: 7, scope: !6986)
!6994 = distinct !{!6994, !6987, !6995}
!6995 = !DILocation(line: 2552, column: 4, scope: !6981)
!6996 = !DILocation(line: 2554, column: 15, scope: !6907)
!6997 = !DILocation(line: 0, scope: !6908)
!6998 = !DILocation(line: 2560, column: 3, scope: !6893)
!6999 = !DILocation(line: 2560, column: 19, scope: !6893)
!7000 = !DILocation(line: 2562, column: 12, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 2562, column: 7)
!7002 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2561, column: 5)
!7003 = !DILocation(line: 0, scope: !7001)
!7004 = !DILocation(line: 2563, column: 11, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 2562, column: 7)
!7006 = !DILocation(line: 2562, column: 7, scope: !7001)
!7007 = !DILocation(line: 2564, column: 6, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 2564, column: 6)
!7009 = !DILocation(line: 2564, column: 28, scope: !7008)
!7010 = !DILocation(line: 2564, column: 6, scope: !7005)
!7011 = !DILocation(line: 2563, column: 32, scope: !7005)
!7012 = !DILocation(line: 2562, column: 7, scope: !7005)
!7013 = distinct !{!7013, !7006, !7014}
!7014 = !DILocation(line: 2565, column: 11, scope: !7001)
!7015 = !DILocation(line: 2567, column: 16, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 2567, column: 11)
!7017 = !DILocation(line: 2567, column: 11, scope: !7002)
!7018 = !DILocation(line: 2570, column: 15, scope: !7002)
!7019 = !DILocation(line: 2570, column: 48, scope: !7002)
!7020 = !DILocation(line: 2571, column: 17, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 2571, column: 11)
!7022 = !DILocation(line: 2571, column: 37, scope: !7021)
!7023 = !DILocation(line: 2571, column: 49, scope: !7021)
!7024 = !DILocation(line: 2571, column: 46, scope: !7021)
!7025 = !DILocation(line: 2571, column: 11, scope: !7002)
!7026 = !DILocation(line: 2572, column: 21, scope: !7021)
!7027 = !DILocation(line: 2572, column: 2, scope: !7021)
!7028 = !DILocation(line: 2574, column: 18, scope: !7002)
!7029 = distinct !{!7029, !6998, !7030}
!7030 = !DILocation(line: 2575, column: 5, scope: !6893)
!7031 = !DILocation(line: 2578, column: 3, scope: !6893)
!7032 = !DILocation(line: 2579, column: 1, scope: !6893)
!7033 = distinct !DISubprogram(name: "clear_storage_hints", scope: !3, file: !3, line: 2624, type: !7034, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7036)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!2182, !2182, !2182, !2041, !7, !2269}
!7036 = !{!7037, !7038, !7039, !7040, !7041, !7042, !7043, !7044}
!7037 = !DILocalVariable(name: "object", arg: 1, scope: !7033, file: !3, line: 2624, type: !2182)
!7038 = !DILocalVariable(name: "size", arg: 2, scope: !7033, file: !3, line: 2624, type: !2182)
!7039 = !DILocalVariable(name: "method", arg: 3, scope: !7033, file: !3, line: 2624, type: !2041)
!7040 = !DILocalVariable(name: "expected_align", arg: 4, scope: !7033, file: !3, line: 2625, type: !7)
!7041 = !DILocalVariable(name: "expected_size", arg: 5, scope: !7033, file: !3, line: 2625, type: !2269)
!7042 = !DILocalVariable(name: "mode", scope: !7033, file: !3, line: 2627, type: !5)
!7043 = !DILocalVariable(name: "align", scope: !7033, file: !3, line: 2628, type: !7)
!7044 = !DILocalVariable(name: "zero", scope: !7045, file: !3, line: 2638, type: !2182)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2637, column: 5)
!7046 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 2634, column: 7)
!7047 = !DILocation(line: 0, scope: !7033)
!7048 = !DILocation(line: 2627, column: 28, scope: !7033)
!7049 = !DILocation(line: 2630, column: 3, scope: !7033)
!7050 = !DILocation(line: 2634, column: 12, scope: !7046)
!7051 = !DILocation(line: 2635, column: 7, scope: !7046)
!7052 = !DILocation(line: 2635, column: 10, scope: !7046)
!7053 = !DILocation(line: 2636, column: 7, scope: !7046)
!7054 = !DILocation(line: 2636, column: 10, scope: !7046)
!7055 = !DILocation(line: 2636, column: 43, scope: !7046)
!7056 = !DILocation(line: 2636, column: 27, scope: !7046)
!7057 = !DILocation(line: 2636, column: 24, scope: !7046)
!7058 = !DILocation(line: 2634, column: 7, scope: !7033)
!7059 = !DILocation(line: 2638, column: 18, scope: !7045)
!7060 = !DILocation(line: 0, scope: !7045)
!7061 = !DILocation(line: 2639, column: 16, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 2639, column: 11)
!7063 = !DILocation(line: 2639, column: 11, scope: !7045)
!7064 = !DILocation(line: 2641, column: 4, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 2640, column: 2)
!7066 = !DILocation(line: 2642, column: 4, scope: !7065)
!7067 = !DILocation(line: 2645, column: 11, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 2645, column: 11)
!7069 = !DILocation(line: 2645, column: 11, scope: !7045)
!7070 = !DILocation(line: 2647, column: 11, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2646, column: 2)
!7072 = !DILocation(line: 2648, column: 13, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 2648, column: 8)
!7074 = !DILocation(line: 2648, column: 8, scope: !7071)
!7075 = !DILocation(line: 2650, column: 8, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 2649, column: 6)
!7077 = !DILocation(line: 2651, column: 8, scope: !7076)
!7078 = !DILocation(line: 2652, column: 8, scope: !7076)
!7079 = !DILocation(line: 2657, column: 15, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 2657, column: 7)
!7081 = !DILocation(line: 2657, column: 12, scope: !7080)
!7082 = !DILocation(line: 2657, column: 7, scope: !7033)
!7083 = !DILocation(line: 2660, column: 11, scope: !7033)
!7084 = !DILocation(line: 2662, column: 7, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 2662, column: 7)
!7086 = !DILocation(line: 2663, column: 7, scope: !7085)
!7087 = !DILocation(line: 2663, column: 10, scope: !7085)
!7088 = !DILocation(line: 2662, column: 7, scope: !7033)
!7089 = !DILocation(line: 2665, column: 50, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 2665, column: 12)
!7091 = !DILocation(line: 2664, column: 30, scope: !7085)
!7092 = !DILocation(line: 2664, column: 5, scope: !7085)
!7093 = !DILocation(line: 2665, column: 12, scope: !7090)
!7094 = !DILocation(line: 2665, column: 12, scope: !7085)
!7095 = !DILocation(line: 2668, column: 12, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2668, column: 12)
!7097 = !DILocation(line: 2668, column: 12, scope: !7090)
!7098 = !DILocation(line: 2669, column: 51, scope: !7096)
!7099 = !DILocation(line: 2670, column: 16, scope: !7096)
!7100 = !DILocation(line: 2670, column: 9, scope: !7096)
!7101 = !DILocation(line: 2669, column: 12, scope: !7096)
!7102 = !DILocation(line: 2669, column: 5, scope: !7096)
!7103 = !DILocation(line: 2672, column: 5, scope: !7096)
!7104 = !DILocation(line: 2675, column: 1, scope: !7033)
!7105 = distinct !DISubprogram(name: "write_complex_part", scope: !3, file: !3, line: 2856, type: !7106, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7108)
!7106 = !DISubroutineType(types: !7107)
!7107 = !{null, !2182, !2182, !2174}
!7108 = !{!7109, !7110, !7111, !7112, !7113, !7114, !7115}
!7109 = !DILocalVariable(name: "cplx", arg: 1, scope: !7105, file: !3, line: 2856, type: !2182)
!7110 = !DILocalVariable(name: "val", arg: 2, scope: !7105, file: !3, line: 2856, type: !2182)
!7111 = !DILocalVariable(name: "imag_p", arg: 3, scope: !7105, file: !3, line: 2856, type: !2174)
!7112 = !DILocalVariable(name: "cmode", scope: !7105, file: !3, line: 2858, type: !5)
!7113 = !DILocalVariable(name: "imode", scope: !7105, file: !3, line: 2859, type: !5)
!7114 = !DILocalVariable(name: "ibitsize", scope: !7105, file: !3, line: 2860, type: !7)
!7115 = !DILocalVariable(name: "part", scope: !7116, file: !3, line: 2898, type: !2182)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 2897, column: 5)
!7117 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 2889, column: 7)
!7118 = !DILocation(line: 0, scope: !7105)
!7119 = !DILocation(line: 2862, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 2862, column: 7)
!7121 = !DILocation(line: 2862, column: 23, scope: !7120)
!7122 = !DILocation(line: 2862, column: 7, scope: !7105)
!7123 = !DILocation(line: 2864, column: 23, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 2863, column: 5)
!7125 = !DILocation(line: 2864, column: 7, scope: !7124)
!7126 = !DILocation(line: 2865, column: 7, scope: !7124)
!7127 = !DILocation(line: 2868, column: 11, scope: !7105)
!7128 = !DILocation(line: 2869, column: 11, scope: !7105)
!7129 = !DILocation(line: 2870, column: 14, scope: !7105)
!7130 = !DILocation(line: 2877, column: 7, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 2877, column: 7)
!7132 = !DILocation(line: 2877, column: 7, scope: !7105)
!7133 = !DILocation(line: 2879, column: 23, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 2878, column: 5)
!7135 = !DILocation(line: 2879, column: 7, scope: !7134)
!7136 = !DILocation(line: 2882, column: 7, scope: !7134)
!7137 = !DILocation(line: 2889, column: 16, scope: !7117)
!7138 = !DILocation(line: 2894, column: 7, scope: !7117)
!7139 = !DILocation(line: 2894, column: 11, scope: !7117)
!7140 = !DILocation(line: 2895, column: 4, scope: !7117)
!7141 = !DILocation(line: 2895, column: 7, scope: !7117)
!7142 = !DILocation(line: 2895, column: 20, scope: !7117)
!7143 = !DILocation(line: 2896, column: 4, scope: !7117)
!7144 = !DILocation(line: 2896, column: 24, scope: !7117)
!7145 = !DILocation(line: 2896, column: 7, scope: !7117)
!7146 = !DILocation(line: 2896, column: 45, scope: !7117)
!7147 = !DILocation(line: 2896, column: 49, scope: !7117)
!7148 = !DILocation(line: 2889, column: 7, scope: !7105)
!7149 = !DILocation(line: 2899, column: 11, scope: !7116)
!7150 = !DILocation(line: 2899, column: 20, scope: !7116)
!7151 = !DILocation(line: 2898, column: 18, scope: !7116)
!7152 = !DILocation(line: 0, scope: !7116)
!7153 = !DILocation(line: 2900, column: 11, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 2900, column: 11)
!7155 = !DILocation(line: 2900, column: 11, scope: !7116)
!7156 = !DILocation(line: 2902, column: 4, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 2901, column: 9)
!7158 = !DILocation(line: 2903, column: 4, scope: !7157)
!7159 = !DILocation(line: 2907, column: 2, scope: !7154)
!7160 = !DILocation(line: 2910, column: 36, scope: !7105)
!7161 = !DILocation(line: 2910, column: 3, scope: !7105)
!7162 = !DILocation(line: 2911, column: 1, scope: !7105)
!7163 = distinct !DISubprogram(name: "clear_by_pieces", scope: !3, file: !3, line: 2456, type: !7164, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7166)
!7164 = !DISubroutineType(types: !7165)
!7165 = !{null, !2182, !2252, !7}
!7166 = !{!7167, !7168, !7169, !7170}
!7167 = !DILocalVariable(name: "to", arg: 1, scope: !7163, file: !3, line: 2456, type: !2182)
!7168 = !DILocalVariable(name: "len", arg: 2, scope: !7163, file: !3, line: 2456, type: !2252)
!7169 = !DILocalVariable(name: "align", arg: 3, scope: !7163, file: !3, line: 2456, type: !7)
!7170 = !DILocalVariable(name: "data", scope: !7163, file: !3, line: 2458, type: !6827)
!7171 = !DILocation(line: 0, scope: !7163)
!7172 = !DILocation(line: 2458, column: 3, scope: !7163)
!7173 = !DILocation(line: 2460, column: 11, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 2460, column: 7)
!7175 = !DILocation(line: 2460, column: 7, scope: !7163)
!7176 = !DILocation(line: 2463, column: 8, scope: !7163)
!7177 = !DILocation(line: 2463, column: 17, scope: !7163)
!7178 = !DILocation(line: 2464, column: 8, scope: !7163)
!7179 = !DILocation(line: 2464, column: 21, scope: !7163)
!7180 = !DILocation(line: 2465, column: 8, scope: !7163)
!7181 = !DILocation(line: 2465, column: 12, scope: !7163)
!7182 = !DILocation(line: 2466, column: 8, scope: !7163)
!7183 = !DILocation(line: 2466, column: 11, scope: !7163)
!7184 = !DILocation(line: 2467, column: 3, scope: !7163)
!7185 = !DILocation(line: 2468, column: 1, scope: !7163)
!7186 = distinct !DISubprogram(name: "set_storage_via_setmem", scope: !3, file: !3, line: 2778, type: !5490, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7187)
!7187 = !{!7188, !7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7200, !7201, !7204, !7205, !7206, !7207}
!7188 = !DILocalVariable(name: "object", arg: 1, scope: !7186, file: !3, line: 2778, type: !2182)
!7189 = !DILocalVariable(name: "size", arg: 2, scope: !7186, file: !3, line: 2778, type: !2182)
!7190 = !DILocalVariable(name: "val", arg: 3, scope: !7186, file: !3, line: 2778, type: !2182)
!7191 = !DILocalVariable(name: "align", arg: 4, scope: !7186, file: !3, line: 2778, type: !7)
!7192 = !DILocalVariable(name: "expected_align", arg: 5, scope: !7186, file: !3, line: 2779, type: !7)
!7193 = !DILocalVariable(name: "expected_size", arg: 6, scope: !7186, file: !3, line: 2779, type: !2269)
!7194 = !DILocalVariable(name: "opalign", scope: !7186, file: !3, line: 2785, type: !2182)
!7195 = !DILocalVariable(name: "mode", scope: !7186, file: !3, line: 2786, type: !5)
!7196 = !DILocalVariable(name: "code", scope: !7197, file: !3, line: 2794, type: !384)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 2793, column: 5)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 2791, column: 3)
!7199 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 2791, column: 3)
!7200 = !DILocalVariable(name: "pred", scope: !7197, file: !3, line: 2795, type: !5507)
!7201 = !DILocalVariable(name: "opsize", scope: !7202, file: !3, line: 2811, type: !2182)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2810, column: 2)
!7203 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 2797, column: 11)
!7204 = !DILocalVariable(name: "opchar", scope: !7202, file: !3, line: 2811, type: !2182)
!7205 = !DILocalVariable(name: "char_mode", scope: !7202, file: !3, line: 2812, type: !5)
!7206 = !DILocalVariable(name: "last", scope: !7202, file: !3, line: 2813, type: !2182)
!7207 = !DILocalVariable(name: "pat", scope: !7202, file: !3, line: 2814, type: !2182)
!7208 = !DILocation(line: 0, scope: !7186)
!7209 = !DILocation(line: 2785, column: 17, scope: !7186)
!7210 = !DILocation(line: 2788, column: 22, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 2788, column: 7)
!7212 = !DILocation(line: 2788, column: 7, scope: !7186)
!7213 = !DILocation(line: 0, scope: !7203)
!7214 = !DILocation(line: 0, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 2831, column: 8)
!7216 = !DILocation(line: 2791, column: 8, scope: !7199)
!7217 = !DILocation(line: 0, scope: !7199)
!7218 = !DILocation(line: 2791, column: 57, scope: !7198)
!7219 = !DILocation(line: 2791, column: 3, scope: !7199)
!7220 = !DILocation(line: 2794, column: 29, scope: !7197)
!7221 = !DILocation(line: 0, scope: !7197)
!7222 = !DILocation(line: 2797, column: 16, scope: !7203)
!7223 = !DILocation(line: 2802, column: 4, scope: !7203)
!7224 = !DILocation(line: 2802, column: 9, scope: !7203)
!7225 = !DILocation(line: 2803, column: 9, scope: !7203)
!7226 = !DILocation(line: 2803, column: 38, scope: !7203)
!7227 = !DILocation(line: 2804, column: 10, scope: !7203)
!7228 = !DILocation(line: 2804, column: 31, scope: !7203)
!7229 = !DILocation(line: 2804, column: 6, scope: !7203)
!7230 = !DILocation(line: 2805, column: 8, scope: !7203)
!7231 = !DILocation(line: 2805, column: 11, scope: !7203)
!7232 = !DILocation(line: 2805, column: 35, scope: !7203)
!7233 = !DILocation(line: 2806, column: 4, scope: !7203)
!7234 = !DILocation(line: 2806, column: 16, scope: !7203)
!7235 = !DILocation(line: 2806, column: 38, scope: !7203)
!7236 = !DILocation(line: 2806, column: 49, scope: !7203)
!7237 = !DILocation(line: 2806, column: 60, scope: !7203)
!7238 = !DILocation(line: 2807, column: 8, scope: !7203)
!7239 = !DILocation(line: 2807, column: 11, scope: !7203)
!7240 = !DILocation(line: 2808, column: 4, scope: !7203)
!7241 = !DILocation(line: 2808, column: 49, scope: !7203)
!7242 = !DILocation(line: 2808, column: 60, scope: !7203)
!7243 = !DILocation(line: 2809, column: 8, scope: !7203)
!7244 = !DILocation(line: 2809, column: 11, scope: !7203)
!7245 = !DILocation(line: 2797, column: 11, scope: !7197)
!7246 = !DILocation(line: 2813, column: 15, scope: !7202)
!7247 = !DILocation(line: 0, scope: !7202)
!7248 = !DILocation(line: 2816, column: 13, scope: !7202)
!7249 = !DILocation(line: 2817, column: 44, scope: !7202)
!7250 = !DILocation(line: 2818, column: 13, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 2818, column: 8)
!7252 = !DILocation(line: 2818, column: 18, scope: !7251)
!7253 = !DILocation(line: 2818, column: 23, scope: !7251)
!7254 = !DILocation(line: 2818, column: 8, scope: !7202)
!7255 = !DILocation(line: 2819, column: 15, scope: !7251)
!7256 = !DILocation(line: 2819, column: 6, scope: !7251)
!7257 = !DILocation(line: 2822, column: 49, scope: !7202)
!7258 = !DILocation(line: 2823, column: 18, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 2823, column: 8)
!7260 = !DILocation(line: 2823, column: 8, scope: !7202)
!7261 = !DILocation(line: 2825, column: 17, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 2824, column: 6)
!7263 = !DILocation(line: 2826, column: 48, scope: !7262)
!7264 = !DILocation(line: 2827, column: 17, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 2827, column: 12)
!7266 = !DILocation(line: 2827, column: 22, scope: !7265)
!7267 = !DILocation(line: 2827, column: 27, scope: !7265)
!7268 = !DILocation(line: 2827, column: 12, scope: !7262)
!7269 = !DILocation(line: 2828, column: 12, scope: !7265)
!7270 = !DILocation(line: 2828, column: 3, scope: !7265)
!7271 = !DILocation(line: 2831, column: 30, scope: !7215)
!7272 = !DILocation(line: 2831, column: 41, scope: !7215)
!7273 = !DILocation(line: 2831, column: 8, scope: !7202)
!7274 = !DILocation(line: 2832, column: 12, scope: !7215)
!7275 = !DILocation(line: 2832, column: 6, scope: !7215)
!7276 = !DILocation(line: 2835, column: 6, scope: !7215)
!7277 = !DILocation(line: 2837, column: 6, scope: !7215)
!7278 = !DILocation(line: 2834, column: 12, scope: !7215)
!7279 = !DILocation(line: 2838, column: 8, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 2838, column: 8)
!7281 = !DILocation(line: 2838, column: 8, scope: !7202)
!7282 = !DILocation(line: 2840, column: 8, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 2839, column: 6)
!7284 = !DILocation(line: 2841, column: 8, scope: !7283)
!7285 = !DILocation(line: 2844, column: 6, scope: !7280)
!7286 = !DILocation(line: 2845, column: 2, scope: !7203)
!7287 = !DILocation(line: 2846, column: 5, scope: !7198)
!7288 = !DILocation(line: 2792, column: 15, scope: !7198)
!7289 = !DILocation(line: 2791, column: 3, scope: !7198)
!7290 = distinct !{!7290, !7219, !7291}
!7291 = !DILocation(line: 2846, column: 5, scope: !7199)
!7292 = !DILocation(line: 2849, column: 1, scope: !7186)
!7293 = distinct !DISubprogram(name: "set_storage_via_libcall", scope: !3, file: !3, line: 2688, type: !5599, scopeLine: 2689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7294)
!7294 = !{!7295, !7296, !7297, !7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305}
!7295 = !DILocalVariable(name: "object", arg: 1, scope: !7293, file: !3, line: 2688, type: !2182)
!7296 = !DILocalVariable(name: "size", arg: 2, scope: !7293, file: !3, line: 2688, type: !2182)
!7297 = !DILocalVariable(name: "val", arg: 3, scope: !7293, file: !3, line: 2688, type: !2182)
!7298 = !DILocalVariable(name: "tailcall", arg: 4, scope: !7293, file: !3, line: 2688, type: !2174)
!7299 = !DILocalVariable(name: "call_expr", scope: !7293, file: !3, line: 2690, type: !2298)
!7300 = !DILocalVariable(name: "fn", scope: !7293, file: !3, line: 2690, type: !2298)
!7301 = !DILocalVariable(name: "object_tree", scope: !7293, file: !3, line: 2690, type: !2298)
!7302 = !DILocalVariable(name: "size_tree", scope: !7293, file: !3, line: 2690, type: !2298)
!7303 = !DILocalVariable(name: "val_tree", scope: !7293, file: !3, line: 2690, type: !2298)
!7304 = !DILocalVariable(name: "size_mode", scope: !7293, file: !3, line: 2691, type: !5)
!7305 = !DILocalVariable(name: "retval", scope: !7293, file: !3, line: 2692, type: !2182)
!7306 = !DILocation(line: 0, scope: !7293)
!7307 = !DILocation(line: 2697, column: 37, scope: !7293)
!7308 = !DILocation(line: 2697, column: 12, scope: !7293)
!7309 = !DILocation(line: 2699, column: 15, scope: !7293)
!7310 = !DILocation(line: 2700, column: 10, scope: !7293)
!7311 = !DILocation(line: 2701, column: 10, scope: !7293)
!7312 = !DILocation(line: 2709, column: 28, scope: !7293)
!7313 = !DILocation(line: 2709, column: 17, scope: !7293)
!7314 = !DILocation(line: 2710, column: 8, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 2710, column: 7)
!7316 = !DILocation(line: 2710, column: 7, scope: !7293)
!7317 = !DILocation(line: 2711, column: 28, scope: !7315)
!7318 = !DILocation(line: 2711, column: 11, scope: !7315)
!7319 = !DILocation(line: 2711, column: 5, scope: !7315)
!7320 = !DILocation(line: 2712, column: 26, scope: !7293)
!7321 = !DILocation(line: 2712, column: 15, scope: !7293)
!7322 = !DILocation(line: 2713, column: 25, scope: !7293)
!7323 = !DILocation(line: 2713, column: 14, scope: !7293)
!7324 = !DILocation(line: 2715, column: 8, scope: !7293)
!7325 = !DILocation(line: 2716, column: 15, scope: !7293)
!7326 = !DILocation(line: 2717, column: 3, scope: !7293)
!7327 = !DILocation(line: 2717, column: 34, scope: !7293)
!7328 = !DILocation(line: 2719, column: 12, scope: !7293)
!7329 = !DILocation(line: 2721, column: 3, scope: !7293)
!7330 = distinct !DISubprogram(name: "clear_storage", scope: !3, file: !3, line: 2678, type: !7331, scopeLine: 2679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7333)
!7331 = !DISubroutineType(types: !7332)
!7332 = !{!2182, !2182, !2182, !2041}
!7333 = !{!7334, !7335, !7336}
!7334 = !DILocalVariable(name: "object", arg: 1, scope: !7330, file: !3, line: 2678, type: !2182)
!7335 = !DILocalVariable(name: "size", arg: 2, scope: !7330, file: !3, line: 2678, type: !2182)
!7336 = !DILocalVariable(name: "method", arg: 3, scope: !7330, file: !3, line: 2678, type: !2041)
!7337 = !DILocation(line: 0, scope: !7330)
!7338 = !DILocation(line: 2680, column: 10, scope: !7330)
!7339 = !DILocation(line: 2680, column: 3, scope: !7330)
!7340 = !DILocation(line: 0, scope: !3705)
!7341 = !DILocation(line: 2762, column: 8, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 2762, column: 7)
!7343 = !DILocation(line: 2762, column: 7, scope: !3705)
!7344 = !DILocation(line: 2763, column: 5, scope: !7342)
!7345 = !DILocation(line: 2765, column: 20, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 2765, column: 7)
!7347 = !DILocation(line: 2765, column: 16, scope: !7346)
!7348 = !DILocation(line: 2767, column: 22, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 2766, column: 5)
!7350 = !DILocation(line: 2768, column: 22, scope: !7349)
!7351 = !DILocation(line: 2768, column: 7, scope: !7349)
!7352 = !DILocation(line: 2769, column: 26, scope: !7349)
!7353 = !DILocation(line: 2769, column: 7, scope: !7349)
!7354 = !DILocation(line: 2770, column: 5, scope: !7349)
!7355 = !DILocation(line: 2772, column: 10, scope: !3705)
!7356 = !DILocation(line: 2772, column: 3, scope: !3705)
!7357 = distinct !DISubprogram(name: "init_block_clear_fn", scope: !3, file: !3, line: 2731, type: !5736, scopeLine: 2732, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7358)
!7358 = !{!7359, !7360, !7363}
!7359 = !DILocalVariable(name: "asmspec", arg: 1, scope: !7357, file: !3, line: 2731, type: !2180)
!7360 = !DILocalVariable(name: "fn", scope: !7361, file: !3, line: 2735, type: !2298)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2734, column: 5)
!7362 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 2733, column: 7)
!7363 = !DILocalVariable(name: "args", scope: !7361, file: !3, line: 2735, type: !2298)
!7364 = !DILocation(line: 0, scope: !7357)
!7365 = !DILocation(line: 2733, column: 8, scope: !7362)
!7366 = !DILocation(line: 2733, column: 7, scope: !7357)
!7367 = !DILocation(line: 2737, column: 12, scope: !7361)
!7368 = !DILocation(line: 0, scope: !7361)
!7369 = !DILocation(line: 2738, column: 40, scope: !7361)
!7370 = !DILocation(line: 2739, column: 12, scope: !7361)
!7371 = !DILocation(line: 2739, column: 31, scope: !7361)
!7372 = !DILocation(line: 2738, column: 14, scope: !7361)
!7373 = !DILocation(line: 2742, column: 12, scope: !7361)
!7374 = !DILocation(line: 2743, column: 7, scope: !7361)
!7375 = !DILocation(line: 2743, column: 26, scope: !7361)
!7376 = !DILocation(line: 2744, column: 7, scope: !7361)
!7377 = !DILocation(line: 2744, column: 24, scope: !7361)
!7378 = !DILocation(line: 2745, column: 28, scope: !7361)
!7379 = !DILocation(line: 2746, column: 25, scope: !7361)
!7380 = !DILocation(line: 2747, column: 7, scope: !7361)
!7381 = !DILocation(line: 2747, column: 28, scope: !7361)
!7382 = !DILocation(line: 2748, column: 38, scope: !7361)
!7383 = !DILocation(line: 2750, column: 22, scope: !7361)
!7384 = !DILocation(line: 2751, column: 5, scope: !7361)
!7385 = !DILocation(line: 2753, column: 7, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 2753, column: 7)
!7387 = !DILocation(line: 2753, column: 7, scope: !7357)
!7388 = !DILocation(line: 2754, column: 5, scope: !7386)
!7389 = !DILocation(line: 2755, column: 1, scope: !7357)
!7390 = distinct !DISubprogram(name: "emit_move_complex_push", scope: !3, file: !3, line: 3114, type: !7391, scopeLine: 3115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7393)
!7391 = !DISubroutineType(types: !7392)
!7392 = !{!2182, !5, !2182, !2182}
!7393 = !{!7394, !7395, !7396, !7397, !7398, !7399}
!7394 = !DILocalVariable(name: "mode", arg: 1, scope: !7390, file: !3, line: 3114, type: !5)
!7395 = !DILocalVariable(name: "x", arg: 2, scope: !7390, file: !3, line: 3114, type: !2182)
!7396 = !DILocalVariable(name: "y", arg: 3, scope: !7390, file: !3, line: 3114, type: !2182)
!7397 = !DILocalVariable(name: "submode", scope: !7390, file: !3, line: 3116, type: !5)
!7398 = !DILocalVariable(name: "imag_first", scope: !7390, file: !3, line: 3117, type: !2174)
!7399 = !DILocalVariable(name: "submodesize", scope: !7390, file: !3, line: 3120, type: !7)
!7400 = !DILocation(line: 0, scope: !7390)
!7401 = !DILocation(line: 3116, column: 31, scope: !7390)
!7402 = !DILocation(line: 3120, column: 30, scope: !7390)
!7403 = !DILocation(line: 3124, column: 7, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 3124, column: 7)
!7405 = !DILocation(line: 3124, column: 35, scope: !7404)
!7406 = !DILocation(line: 3124, column: 7, scope: !7390)
!7407 = !DILocation(line: 3126, column: 11, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 3125, column: 5)
!7409 = !DILocation(line: 3127, column: 14, scope: !7408)
!7410 = !DILocation(line: 3127, column: 7, scope: !7408)
!7411 = !DILocation(line: 3133, column: 11, scope: !7390)
!7412 = !DILocation(line: 3133, column: 3, scope: !7390)
!7413 = !DILocation(line: 3142, column: 7, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 3134, column: 5)
!7415 = !DILocation(line: 3144, column: 7, scope: !7414)
!7416 = !DILocation(line: 3147, column: 41, scope: !7390)
!7417 = !DILocation(line: 3145, column: 5, scope: !7414)
!7418 = !DILocation(line: 3147, column: 19, scope: !7390)
!7419 = !DILocation(line: 3148, column: 5, scope: !7390)
!7420 = !DILocation(line: 3147, column: 3, scope: !7390)
!7421 = !DILocation(line: 3149, column: 48, scope: !7390)
!7422 = !DILocation(line: 3149, column: 26, scope: !7390)
!7423 = !DILocation(line: 3150, column: 27, scope: !7390)
!7424 = !DILocation(line: 3150, column: 5, scope: !7390)
!7425 = !DILocation(line: 3149, column: 10, scope: !7390)
!7426 = !DILocation(line: 3149, column: 3, scope: !7390)
!7427 = !DILocation(line: 3151, column: 1, scope: !7390)
!7428 = distinct !DISubprogram(name: "emit_move_resolve_push", scope: !3, file: !3, line: 3056, type: !7429, scopeLine: 3057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7431)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{!2182, !5, !2182}
!7431 = !{!7432, !7433, !7434, !7435, !7436, !7437, !7441}
!7432 = !DILocalVariable(name: "mode", arg: 1, scope: !7428, file: !3, line: 3056, type: !5)
!7433 = !DILocalVariable(name: "x", arg: 2, scope: !7428, file: !3, line: 3056, type: !2182)
!7434 = !DILocalVariable(name: "code", scope: !7428, file: !3, line: 3058, type: !1898)
!7435 = !DILocalVariable(name: "adjust", scope: !7428, file: !3, line: 3059, type: !2269)
!7436 = !DILocalVariable(name: "temp", scope: !7428, file: !3, line: 3060, type: !2182)
!7437 = !DILocalVariable(name: "expr", scope: !7438, file: !3, line: 3070, type: !2182)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 3069, column: 5)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 3068, column: 12)
!7440 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 3066, column: 7)
!7441 = !DILocalVariable(name: "val", scope: !7438, file: !3, line: 3071, type: !2269)
!7442 = !DILocation(line: 0, scope: !7428)
!7443 = !DILocation(line: 3058, column: 24, scope: !7428)
!7444 = !DILocation(line: 3062, column: 12, scope: !7428)
!7445 = !DILocation(line: 3064, column: 12, scope: !7428)
!7446 = !DILocation(line: 3066, column: 23, scope: !7440)
!7447 = !DILocation(line: 3067, column: 14, scope: !7440)
!7448 = !DILocation(line: 3067, column: 5, scope: !7440)
!7449 = !DILocation(line: 3070, column: 18, scope: !7438)
!7450 = !DILocation(line: 0, scope: !7438)
!7451 = !DILocation(line: 3073, column: 7, scope: !7438)
!7452 = !DILocation(line: 3074, column: 7, scope: !7438)
!7453 = !DILocation(line: 3075, column: 13, scope: !7438)
!7454 = !DILocation(line: 3076, column: 11, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 3076, column: 11)
!7456 = !DILocation(line: 3076, column: 27, scope: !7455)
!7457 = !DILocation(line: 3077, column: 8, scope: !7455)
!7458 = !DILocation(line: 3076, column: 11, scope: !7438)
!7459 = !DILocation(line: 3078, column: 7, scope: !7438)
!7460 = !DILocation(line: 0, scope: !7440)
!7461 = !DILocation(line: 3084, column: 44, scope: !7428)
!7462 = !DILocation(line: 3085, column: 10, scope: !7428)
!7463 = !DILocation(line: 3085, column: 28, scope: !7428)
!7464 = !DILocation(line: 3084, column: 10, scope: !7428)
!7465 = !DILocation(line: 3087, column: 15, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 3087, column: 7)
!7467 = !DILocation(line: 3087, column: 12, scope: !7466)
!7468 = !DILocation(line: 3087, column: 7, scope: !7428)
!7469 = !DILocation(line: 3088, column: 5, scope: !7466)
!7470 = !DILocation(line: 3090, column: 3, scope: !7428)
!7471 = !DILocation(line: 3095, column: 14, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 3091, column: 5)
!7473 = !DILocation(line: 3096, column: 7, scope: !7472)
!7474 = !DILocation(line: 3100, column: 29, scope: !7472)
!7475 = !DILocation(line: 3100, column: 48, scope: !7472)
!7476 = !DILocation(line: 3100, column: 14, scope: !7472)
!7477 = !DILocation(line: 3101, column: 7, scope: !7472)
!7478 = !DILocation(line: 3103, column: 7, scope: !7472)
!7479 = !DILocation(line: 3104, column: 5, scope: !7472)
!7480 = !DILocation(line: 3106, column: 10, scope: !7428)
!7481 = !DILocation(line: 3106, column: 3, scope: !7428)
!7482 = distinct !DISubprogram(name: "read_complex_part", scope: !3, file: !3, line: 2917, type: !7483, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7485)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!2182, !2182, !2174}
!7485 = !{!7486, !7487, !7488, !7489, !7490, !7491, !7494, !7497}
!7486 = !DILocalVariable(name: "cplx", arg: 1, scope: !7482, file: !3, line: 2917, type: !2182)
!7487 = !DILocalVariable(name: "imag_p", arg: 2, scope: !7482, file: !3, line: 2917, type: !2174)
!7488 = !DILocalVariable(name: "cmode", scope: !7482, file: !3, line: 2919, type: !5)
!7489 = !DILocalVariable(name: "imode", scope: !7482, file: !3, line: 2919, type: !5)
!7490 = !DILocalVariable(name: "ibitsize", scope: !7482, file: !3, line: 2920, type: !7)
!7491 = !DILocalVariable(name: "decl", scope: !7492, file: !3, line: 2932, type: !2298)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 2931, column: 5)
!7493 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2930, column: 7)
!7494 = !DILocalVariable(name: "part", scope: !7495, file: !3, line: 2935, type: !2298)
!7495 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 2934, column: 2)
!7496 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2933, column: 11)
!7497 = !DILocalVariable(name: "ret", scope: !7498, file: !3, line: 2963, type: !2182)
!7498 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 2962, column: 5)
!7499 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2954, column: 7)
!7500 = !DILocation(line: 0, scope: !7482)
!7501 = !DILocation(line: 2922, column: 7, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2922, column: 7)
!7503 = !DILocation(line: 2922, column: 23, scope: !7502)
!7504 = !DILocation(line: 2922, column: 7, scope: !7482)
!7505 = !DILocation(line: 2923, column: 12, scope: !7502)
!7506 = !DILocation(line: 2923, column: 5, scope: !7502)
!7507 = !DILocation(line: 2925, column: 11, scope: !7482)
!7508 = !DILocation(line: 2926, column: 11, scope: !7482)
!7509 = !DILocation(line: 2927, column: 14, scope: !7482)
!7510 = !DILocation(line: 2930, column: 7, scope: !7493)
!7511 = !DILocation(line: 2930, column: 20, scope: !7493)
!7512 = !DILocation(line: 2930, column: 23, scope: !7493)
!7513 = !DILocation(line: 2930, column: 49, scope: !7493)
!7514 = !DILocation(line: 2930, column: 7, scope: !7482)
!7515 = !DILocation(line: 2932, column: 19, scope: !7492)
!7516 = !DILocation(line: 0, scope: !7492)
!7517 = !DILocation(line: 2933, column: 11, scope: !7496)
!7518 = !DILocation(line: 2933, column: 16, scope: !7496)
!7519 = !DILocation(line: 2933, column: 19, scope: !7496)
!7520 = !DILocation(line: 2933, column: 36, scope: !7496)
!7521 = !DILocation(line: 2933, column: 11, scope: !7492)
!7522 = !DILocation(line: 2935, column: 16, scope: !7495)
!7523 = !DILocation(line: 2935, column: 25, scope: !7495)
!7524 = !DILocation(line: 2935, column: 48, scope: !7495)
!7525 = !DILocation(line: 0, scope: !7495)
!7526 = !DILocation(line: 2936, column: 8, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 2936, column: 8)
!7528 = !DILocation(line: 2936, column: 8, scope: !7495)
!7529 = !DILocation(line: 2937, column: 13, scope: !7527)
!7530 = !DILocation(line: 2937, column: 6, scope: !7527)
!7531 = !DILocation(line: 2939, column: 5, scope: !7493)
!7532 = !DILocation(line: 2946, column: 7, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2946, column: 7)
!7534 = !DILocation(line: 2946, column: 7, scope: !7482)
!7535 = !DILocation(line: 2947, column: 12, scope: !7533)
!7536 = !DILocation(line: 2947, column: 5, scope: !7533)
!7537 = !DILocation(line: 2954, column: 16, scope: !7499)
!7538 = !DILocation(line: 2959, column: 7, scope: !7499)
!7539 = !DILocation(line: 2959, column: 11, scope: !7499)
!7540 = !DILocation(line: 2960, column: 4, scope: !7499)
!7541 = !DILocation(line: 2960, column: 7, scope: !7499)
!7542 = !DILocation(line: 2960, column: 20, scope: !7499)
!7543 = !DILocation(line: 2961, column: 4, scope: !7499)
!7544 = !DILocation(line: 2961, column: 24, scope: !7499)
!7545 = !DILocation(line: 2961, column: 7, scope: !7499)
!7546 = !DILocation(line: 2961, column: 45, scope: !7499)
!7547 = !DILocation(line: 2961, column: 49, scope: !7499)
!7548 = !DILocation(line: 2954, column: 7, scope: !7482)
!7549 = !DILocation(line: 2964, column: 10, scope: !7498)
!7550 = !DILocation(line: 2964, column: 19, scope: !7498)
!7551 = !DILocation(line: 2963, column: 17, scope: !7498)
!7552 = !DILocation(line: 0, scope: !7498)
!7553 = !DILocation(line: 2965, column: 11, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 2965, column: 11)
!7555 = !DILocation(line: 2965, column: 11, scope: !7498)
!7556 = !DILocation(line: 2969, column: 2, scope: !7554)
!7557 = !DILocation(line: 2972, column: 45, scope: !7482)
!7558 = !DILocation(line: 2972, column: 10, scope: !7482)
!7559 = !DILocation(line: 2972, column: 3, scope: !7482)
!7560 = !DILocation(line: 2974, column: 1, scope: !7482)
!7561 = distinct !DISubprogram(name: "emit_move_complex_parts", scope: !3, file: !3, line: 3157, type: !4732, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7562)
!7562 = !{!7563, !7564}
!7563 = !DILocalVariable(name: "x", arg: 1, scope: !7561, file: !3, line: 3157, type: !2182)
!7564 = !DILocalVariable(name: "y", arg: 2, scope: !7561, file: !3, line: 3157, type: !2182)
!7565 = !DILocation(line: 0, scope: !7561)
!7566 = !DILocation(line: 3162, column: 8, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 3162, column: 7)
!7568 = !DILocation(line: 3162, column: 29, scope: !7567)
!7569 = !DILocation(line: 3162, column: 25, scope: !7567)
!7570 = !DILocation(line: 3163, column: 10, scope: !7567)
!7571 = !DILocation(line: 3163, column: 20, scope: !7567)
!7572 = !DILocation(line: 3163, column: 24, scope: !7567)
!7573 = !DILocation(line: 3162, column: 7, scope: !7561)
!7574 = !DILocation(line: 3164, column: 5, scope: !7567)
!7575 = !DILocation(line: 3166, column: 26, scope: !7561)
!7576 = !DILocation(line: 3166, column: 3, scope: !7561)
!7577 = !DILocation(line: 3167, column: 26, scope: !7561)
!7578 = !DILocation(line: 3167, column: 3, scope: !7561)
!7579 = !DILocation(line: 3169, column: 10, scope: !7561)
!7580 = !DILocation(line: 3169, column: 3, scope: !7561)
!7581 = distinct !DISubprogram(name: "emit_move_insn_1", scope: !3, file: !3, line: 3373, type: !4732, scopeLine: 3374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7582)
!7582 = !{!7583, !7584, !7585, !7586, !7587, !7590}
!7583 = !DILocalVariable(name: "x", arg: 1, scope: !7581, file: !3, line: 3373, type: !2182)
!7584 = !DILocalVariable(name: "y", arg: 2, scope: !7581, file: !3, line: 3373, type: !2182)
!7585 = !DILocalVariable(name: "mode", scope: !7581, file: !3, line: 3375, type: !5)
!7586 = !DILocalVariable(name: "code", scope: !7581, file: !3, line: 3376, type: !384)
!7587 = !DILocalVariable(name: "result", scope: !7588, file: !3, line: 3391, type: !2182)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 3390, column: 5)
!7589 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 3388, column: 7)
!7590 = !DILocalVariable(name: "ret", scope: !7591, file: !3, line: 3409, type: !2182)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 3408, column: 5)
!7592 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 3407, column: 7)
!7593 = !DILocation(line: 0, scope: !7581)
!7594 = !DILocation(line: 3375, column: 28, scope: !7581)
!7595 = !DILocation(line: 3378, column: 3, scope: !7581)
!7596 = !DILocation(line: 3380, column: 10, scope: !7581)
!7597 = !DILocation(line: 3380, column: 43, scope: !7581)
!7598 = !DILocation(line: 3381, column: 12, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 3381, column: 7)
!7600 = !DILocation(line: 3381, column: 7, scope: !7581)
!7601 = !DILocation(line: 3382, column: 23, scope: !7599)
!7602 = !DILocation(line: 3382, column: 12, scope: !7599)
!7603 = !DILocation(line: 3382, column: 5, scope: !7599)
!7604 = !DILocation(line: 3385, column: 7, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 3385, column: 7)
!7606 = !DILocation(line: 3385, column: 7, scope: !7581)
!7607 = !DILocation(line: 3386, column: 12, scope: !7605)
!7608 = !DILocation(line: 3386, column: 5, scope: !7605)
!7609 = !DILocation(line: 3388, column: 29, scope: !7589)
!7610 = !DILocation(line: 3389, column: 7, scope: !7589)
!7611 = !DILocation(line: 3389, column: 10, scope: !7589)
!7612 = !DILocation(line: 3388, column: 7, scope: !7581)
!7613 = !DILocation(line: 3391, column: 20, scope: !7588)
!7614 = !DILocation(line: 0, scope: !7588)
!7615 = !DILocation(line: 3394, column: 11, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 3394, column: 11)
!7617 = !DILocation(line: 3394, column: 11, scope: !7588)
!7618 = !DILocation(line: 3397, column: 9, scope: !7616)
!7619 = !DILocation(line: 3397, column: 2, scope: !7616)
!7620 = !DILocation(line: 3400, column: 29, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 3400, column: 7)
!7622 = !DILocation(line: 3400, column: 7, scope: !7581)
!7623 = !DILocation(line: 3401, column: 12, scope: !7621)
!7624 = !DILocation(line: 3401, column: 5, scope: !7621)
!7625 = !DILocation(line: 3407, column: 8, scope: !7592)
!7626 = !DILocation(line: 3407, column: 23, scope: !7592)
!7627 = !DILocation(line: 3407, column: 26, scope: !7592)
!7628 = !DILocation(line: 3407, column: 50, scope: !7592)
!7629 = !DILocation(line: 3407, column: 7, scope: !7581)
!7630 = !DILocation(line: 3409, column: 17, scope: !7591)
!7631 = !DILocation(line: 0, scope: !7591)
!7632 = !DILocation(line: 3410, column: 11, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 3410, column: 11)
!7634 = !DILocation(line: 3414, column: 10, scope: !7581)
!7635 = !DILocation(line: 3414, column: 3, scope: !7581)
!7636 = !DILocation(line: 3415, column: 1, scope: !7581)
!7637 = distinct !DISubprogram(name: "emit_move_complex", scope: !3, file: !3, line: 3176, type: !7391, scopeLine: 3177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7638)
!7638 = !{!7639, !7640, !7641, !7642, !7643}
!7639 = !DILocalVariable(name: "mode", arg: 1, scope: !7637, file: !3, line: 3176, type: !5)
!7640 = !DILocalVariable(name: "x", arg: 2, scope: !7637, file: !3, line: 3176, type: !2182)
!7641 = !DILocalVariable(name: "y", arg: 3, scope: !7637, file: !3, line: 3176, type: !2182)
!7642 = !DILocalVariable(name: "try_int", scope: !7637, file: !3, line: 3178, type: !2174)
!7643 = !DILocalVariable(name: "ret", scope: !7644, file: !3, line: 3210, type: !2182)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3209, column: 5)
!7645 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 3208, column: 7)
!7646 = !DILocation(line: 0, scope: !7637)
!7647 = !DILocation(line: 3182, column: 7, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 3182, column: 7)
!7649 = !DILocation(line: 3182, column: 7, scope: !7637)
!7650 = !DILocation(line: 3183, column: 12, scope: !7648)
!7651 = !DILocation(line: 3183, column: 5, scope: !7648)
!7652 = !DILocation(line: 3188, column: 7, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 3188, column: 7)
!7654 = !DILocation(line: 3188, column: 29, scope: !7653)
!7655 = !DILocation(line: 3189, column: 7, scope: !7653)
!7656 = !DILocation(line: 3189, column: 10, scope: !7653)
!7657 = !DILocation(line: 3189, column: 60, scope: !7653)
!7658 = !DILocation(line: 3189, column: 70, scope: !7653)
!7659 = !DILocation(line: 3188, column: 7, scope: !7637)
!7660 = !DILocation(line: 3192, column: 12, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 3192, column: 12)
!7662 = !DILocation(line: 3192, column: 25, scope: !7661)
!7663 = !DILocation(line: 3192, column: 35, scope: !7661)
!7664 = !DILocation(line: 3192, column: 38, scope: !7661)
!7665 = !DILocation(line: 3192, column: 51, scope: !7661)
!7666 = !DILocation(line: 3192, column: 12, scope: !7653)
!7667 = !DILocation(line: 3195, column: 12, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 3195, column: 12)
!7669 = !DILocation(line: 3195, column: 39, scope: !7668)
!7670 = !DILocation(line: 3195, column: 42, scope: !7668)
!7671 = !DILocation(line: 3195, column: 12, scope: !7661)
!7672 = !DILocation(line: 3201, column: 13, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 3201, column: 12)
!7674 = !DILocation(line: 0, scope: !7673)
!7675 = !DILocation(line: 3201, column: 12, scope: !7668)
!7676 = !DILocation(line: 3201, column: 26, scope: !7673)
!7677 = !DILocation(line: 3201, column: 43, scope: !7673)
!7678 = !DILocation(line: 3208, column: 7, scope: !7637)
!7679 = !DILocation(line: 3214, column: 11, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3214, column: 11)
!7681 = !DILocation(line: 3214, column: 21, scope: !7680)
!7682 = !DILocation(line: 3214, column: 24, scope: !7680)
!7683 = !DILocation(line: 3214, column: 11, scope: !7644)
!7684 = !DILocation(line: 3216, column: 27, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 3215, column: 2)
!7686 = !DILocation(line: 3216, column: 4, scope: !7685)
!7687 = !DILocation(line: 3218, column: 11, scope: !7685)
!7688 = !DILocation(line: 3218, column: 4, scope: !7685)
!7689 = !DILocation(line: 3221, column: 13, scope: !7644)
!7690 = !DILocation(line: 0, scope: !7644)
!7691 = !DILocation(line: 3222, column: 11, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3222, column: 11)
!7693 = !DILocation(line: 0, scope: !7645)
!7694 = !DILocation(line: 3226, column: 10, scope: !7637)
!7695 = !DILocation(line: 3226, column: 3, scope: !7637)
!7696 = !DILocation(line: 3227, column: 1, scope: !7637)
!7697 = distinct !DISubprogram(name: "emit_move_via_integer", scope: !3, file: !3, line: 3028, type: !7698, scopeLine: 3029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7700)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!2182, !5, !2182, !2182, !2174}
!7700 = !{!7701, !7702, !7703, !7704, !7705, !7706}
!7701 = !DILocalVariable(name: "mode", arg: 1, scope: !7697, file: !3, line: 3028, type: !5)
!7702 = !DILocalVariable(name: "x", arg: 2, scope: !7697, file: !3, line: 3028, type: !2182)
!7703 = !DILocalVariable(name: "y", arg: 3, scope: !7697, file: !3, line: 3028, type: !2182)
!7704 = !DILocalVariable(name: "force", arg: 4, scope: !7697, file: !3, line: 3028, type: !2174)
!7705 = !DILocalVariable(name: "imode", scope: !7697, file: !3, line: 3030, type: !5)
!7706 = !DILocalVariable(name: "code", scope: !7697, file: !3, line: 3031, type: !384)
!7707 = !DILocation(line: 0, scope: !7697)
!7708 = !DILocation(line: 3034, column: 11, scope: !7697)
!7709 = !DILocation(line: 3035, column: 13, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 3035, column: 7)
!7711 = !DILocation(line: 3035, column: 7, scope: !7697)
!7712 = !DILocation(line: 3039, column: 10, scope: !7697)
!7713 = !DILocation(line: 3039, column: 44, scope: !7697)
!7714 = !DILocation(line: 3040, column: 12, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 3040, column: 7)
!7716 = !DILocation(line: 3040, column: 7, scope: !7697)
!7717 = !DILocation(line: 3043, column: 7, scope: !7697)
!7718 = !DILocation(line: 3044, column: 9, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 3044, column: 7)
!7720 = !DILocation(line: 3044, column: 7, scope: !7697)
!7721 = !DILocation(line: 3046, column: 7, scope: !7697)
!7722 = !DILocation(line: 3047, column: 9, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 3047, column: 7)
!7724 = !DILocation(line: 3047, column: 7, scope: !7697)
!7725 = !DILocation(line: 3049, column: 21, scope: !7697)
!7726 = !DILocation(line: 3049, column: 10, scope: !7697)
!7727 = !DILocation(line: 3049, column: 3, scope: !7697)
!7728 = !DILocation(line: 3050, column: 1, scope: !7697)
!7729 = distinct !DISubprogram(name: "emit_move_multi_word", scope: !3, file: !3, line: 3293, type: !7391, scopeLine: 3294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7730)
!7730 = !{!7731, !7732, !7733, !7734, !7735, !7736, !7737, !7738, !7739, !7743}
!7731 = !DILocalVariable(name: "mode", arg: 1, scope: !7729, file: !3, line: 3293, type: !5)
!7732 = !DILocalVariable(name: "x", arg: 2, scope: !7729, file: !3, line: 3293, type: !2182)
!7733 = !DILocalVariable(name: "y", arg: 3, scope: !7729, file: !3, line: 3293, type: !2182)
!7734 = !DILocalVariable(name: "last_insn", scope: !7729, file: !3, line: 3295, type: !2182)
!7735 = !DILocalVariable(name: "seq", scope: !7729, file: !3, line: 3296, type: !2182)
!7736 = !DILocalVariable(name: "inner", scope: !7729, file: !3, line: 3296, type: !2182)
!7737 = !DILocalVariable(name: "need_clobber", scope: !7729, file: !3, line: 3297, type: !2174)
!7738 = !DILocalVariable(name: "i", scope: !7729, file: !3, line: 3298, type: !2175)
!7739 = !DILocalVariable(name: "xpart", scope: !7740, file: !3, line: 3323, type: !2182)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 3322, column: 5)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 3319, column: 3)
!7742 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 3319, column: 3)
!7743 = !DILocalVariable(name: "ypart", scope: !7740, file: !3, line: 3324, type: !2182)
!7744 = !DILocation(line: 0, scope: !7729)
!7745 = !DILocation(line: 3300, column: 3, scope: !7729)
!7746 = !DILocation(line: 3304, column: 7, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 3304, column: 7)
!7748 = !DILocation(line: 3304, column: 7, scope: !7729)
!7749 = !DILocation(line: 3305, column: 9, scope: !7747)
!7750 = !DILocation(line: 3305, column: 5, scope: !7747)
!7751 = !DILocation(line: 3309, column: 7, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 3309, column: 7)
!7753 = !DILocation(line: 3309, column: 26, scope: !7752)
!7754 = !DILocation(line: 3309, column: 29, scope: !7752)
!7755 = !DILocation(line: 3310, column: 7, scope: !7752)
!7756 = !DILocation(line: 3310, column: 38, scope: !7752)
!7757 = !DILocation(line: 3310, column: 19, scope: !7752)
!7758 = !DILocation(line: 3310, column: 55, scope: !7752)
!7759 = !DILocation(line: 3310, column: 52, scope: !7752)
!7760 = !DILocation(line: 3309, column: 7, scope: !7729)
!7761 = !DILocation(line: 3311, column: 9, scope: !7752)
!7762 = !DILocation(line: 3311, column: 5, scope: !7752)
!7763 = !DILocation(line: 3312, column: 7, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 3312, column: 7)
!7765 = !DILocation(line: 3312, column: 26, scope: !7764)
!7766 = !DILocation(line: 3312, column: 29, scope: !7764)
!7767 = !DILocation(line: 3313, column: 7, scope: !7764)
!7768 = !DILocation(line: 3313, column: 38, scope: !7764)
!7769 = !DILocation(line: 3313, column: 19, scope: !7764)
!7770 = !DILocation(line: 3313, column: 55, scope: !7764)
!7771 = !DILocation(line: 3313, column: 52, scope: !7764)
!7772 = !DILocation(line: 3312, column: 7, scope: !7729)
!7773 = !DILocation(line: 3314, column: 9, scope: !7764)
!7774 = !DILocation(line: 3314, column: 5, scope: !7764)
!7775 = !DILocation(line: 3316, column: 3, scope: !7729)
!7776 = !DILocation(line: 3319, column: 8, scope: !7742)
!7777 = !DILocation(line: 0, scope: !7742)
!7778 = !DILocation(line: 3318, column: 16, scope: !7729)
!7779 = !DILocation(line: 3295, column: 7, scope: !7729)
!7780 = !DILocation(line: 3314, column: 7, scope: !7764)
!7781 = !DILocation(line: 3320, column: 13, scope: !7741)
!7782 = !DILocation(line: 3320, column: 34, scope: !7741)
!7783 = !DILocation(line: 3320, column: 58, scope: !7741)
!7784 = !DILocation(line: 3320, column: 10, scope: !7741)
!7785 = !DILocation(line: 3319, column: 3, scope: !7742)
!7786 = !DILocation(line: 3323, column: 19, scope: !7740)
!7787 = !DILocation(line: 0, scope: !7740)
!7788 = !DILocation(line: 3328, column: 11, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 3328, column: 11)
!7790 = !DILocation(line: 3328, column: 11, scope: !7740)
!7791 = !DILocation(line: 3331, column: 15, scope: !7740)
!7792 = !DILocation(line: 3336, column: 22, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 3336, column: 11)
!7794 = !DILocation(line: 3336, column: 25, scope: !7793)
!7795 = !DILocation(line: 3336, column: 11, scope: !7740)
!7796 = !DILocation(line: 3338, column: 30, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 3337, column: 2)
!7798 = !DILocation(line: 3338, column: 8, scope: !7797)
!7799 = !DILocation(line: 3339, column: 12, scope: !7797)
!7800 = !DILocation(line: 3340, column: 2, scope: !7797)
!7801 = !DILocation(line: 3341, column: 16, scope: !7793)
!7802 = !DILocation(line: 3342, column: 10, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 3341, column: 16)
!7804 = !DILocation(line: 3342, column: 2, scope: !7803)
!7805 = !DILocation(line: 0, scope: !7793)
!7806 = !DILocation(line: 3344, column: 7, scope: !7740)
!7807 = !DILocation(line: 3346, column: 24, scope: !7740)
!7808 = !DILocation(line: 3346, column: 41, scope: !7740)
!7809 = !DILocation(line: 3346, column: 20, scope: !7740)
!7810 = !DILocation(line: 3348, column: 19, scope: !7740)
!7811 = !DILocation(line: 3349, column: 5, scope: !7741)
!7812 = !DILocation(line: 3321, column: 9, scope: !7741)
!7813 = !DILocation(line: 3319, column: 3, scope: !7741)
!7814 = distinct !{!7814, !7785, !7815}
!7815 = !DILocation(line: 3349, column: 5, scope: !7742)
!7816 = !DILocation(line: 3351, column: 9, scope: !7729)
!7817 = !DILocation(line: 3352, column: 3, scope: !7729)
!7818 = !DILocation(line: 3358, column: 9, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 3358, column: 7)
!7820 = !DILocation(line: 3359, column: 13, scope: !7819)
!7821 = !DILocation(line: 3359, column: 35, scope: !7819)
!7822 = !DILocation(line: 3359, column: 7, scope: !7819)
!7823 = !DILocation(line: 3360, column: 23, scope: !7819)
!7824 = !DILocation(line: 3361, column: 5, scope: !7819)
!7825 = !DILocation(line: 3363, column: 3, scope: !7729)
!7826 = !DILocation(line: 3365, column: 3, scope: !7729)
!7827 = distinct !DISubprogram(name: "emit_move_ccmode", scope: !3, file: !3, line: 3233, type: !7391, scopeLine: 3234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7828)
!7828 = !{!7829, !7830, !7831, !7832, !7833}
!7829 = !DILocalVariable(name: "mode", arg: 1, scope: !7827, file: !3, line: 3233, type: !5)
!7830 = !DILocalVariable(name: "x", arg: 2, scope: !7827, file: !3, line: 3233, type: !2182)
!7831 = !DILocalVariable(name: "y", arg: 3, scope: !7827, file: !3, line: 3233, type: !2182)
!7832 = !DILocalVariable(name: "ret", scope: !7827, file: !3, line: 3235, type: !2182)
!7833 = !DILocalVariable(name: "code", scope: !7834, file: !3, line: 3240, type: !384)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 3239, column: 5)
!7835 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 3238, column: 7)
!7836 = !DILocation(line: 0, scope: !7827)
!7837 = !DILocation(line: 3238, column: 12, scope: !7835)
!7838 = !DILocation(line: 3238, column: 7, scope: !7827)
!7839 = !DILocation(line: 3240, column: 64, scope: !7834)
!7840 = !DILocation(line: 0, scope: !7834)
!7841 = !DILocation(line: 3241, column: 16, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 3241, column: 11)
!7843 = !DILocation(line: 3241, column: 11, scope: !7834)
!7844 = !DILocation(line: 3243, column: 8, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7842, file: !3, line: 3242, column: 2)
!7846 = !DILocation(line: 3244, column: 8, scope: !7845)
!7847 = !DILocation(line: 3245, column: 22, scope: !7845)
!7848 = !DILocation(line: 3245, column: 11, scope: !7845)
!7849 = !DILocation(line: 3245, column: 4, scope: !7845)
!7850 = !DILocation(line: 3250, column: 9, scope: !7827)
!7851 = !DILocation(line: 3251, column: 3, scope: !7827)
!7852 = !DILocation(line: 3253, column: 1, scope: !7827)
!7853 = distinct !DISubprogram(name: "compress_float_constant", scope: !3, file: !3, line: 3488, type: !4732, scopeLine: 3489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7854)
!7854 = !{!7855, !7856, !7857, !7858, !7859, !7860, !7861, !7862, !7863, !7864, !7868, !7869}
!7855 = !DILocalVariable(name: "x", arg: 1, scope: !7853, file: !3, line: 3488, type: !2182)
!7856 = !DILocalVariable(name: "y", arg: 2, scope: !7853, file: !3, line: 3488, type: !2182)
!7857 = !DILocalVariable(name: "dstmode", scope: !7853, file: !3, line: 3490, type: !5)
!7858 = !DILocalVariable(name: "orig_srcmode", scope: !7853, file: !3, line: 3491, type: !5)
!7859 = !DILocalVariable(name: "srcmode", scope: !7853, file: !3, line: 3492, type: !5)
!7860 = !DILocalVariable(name: "r", scope: !7853, file: !3, line: 3493, type: !2358)
!7861 = !DILocalVariable(name: "oldcost", scope: !7853, file: !3, line: 3494, type: !2175)
!7862 = !DILocalVariable(name: "newcost", scope: !7853, file: !3, line: 3494, type: !2175)
!7863 = !DILocalVariable(name: "speed", scope: !7853, file: !3, line: 3495, type: !2174)
!7864 = !DILocalVariable(name: "ic", scope: !7865, file: !3, line: 3508, type: !384)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 3507, column: 5)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 3504, column: 3)
!7867 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 3504, column: 3)
!7868 = !DILocalVariable(name: "trunc_y", scope: !7865, file: !3, line: 3509, type: !2182)
!7869 = !DILocalVariable(name: "last_insn", scope: !7865, file: !3, line: 3509, type: !2182)
!7870 = !DILocation(line: 0, scope: !7853)
!7871 = !DILocation(line: 3490, column: 31, scope: !7853)
!7872 = !DILocation(line: 3491, column: 36, scope: !7853)
!7873 = !DILocation(line: 3493, column: 3, scope: !7853)
!7874 = !DILocation(line: 3495, column: 16, scope: !7853)
!7875 = !DILocation(line: 3497, column: 3, scope: !7853)
!7876 = !DILocation(line: 3499, column: 7, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 3499, column: 7)
!7878 = !DILocation(line: 3499, column: 7, scope: !7853)
!7879 = !DILocation(line: 3500, column: 15, scope: !7877)
!7880 = !DILocation(line: 3500, column: 5, scope: !7877)
!7881 = !DILocation(line: 3502, column: 25, scope: !7877)
!7882 = !DILocation(line: 3502, column: 15, scope: !7877)
!7883 = !DILocation(line: 0, scope: !7877)
!7884 = !DILocation(line: 3504, column: 18, scope: !7867)
!7885 = !DILocation(line: 0, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 3533, column: 16)
!7887 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 3522, column: 11)
!7888 = !DILocation(line: 3504, column: 8, scope: !7867)
!7889 = !DILocation(line: 0, scope: !7867)
!7890 = !DILocation(line: 3505, column: 16, scope: !7866)
!7891 = !DILocation(line: 3504, column: 3, scope: !7867)
!7892 = !DILocation(line: 3512, column: 12, scope: !7865)
!7893 = !DILocation(line: 0, scope: !7865)
!7894 = !DILocation(line: 3513, column: 14, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 3513, column: 11)
!7896 = !DILocation(line: 3513, column: 11, scope: !7865)
!7897 = !DILocation(line: 3517, column: 13, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 3517, column: 11)
!7899 = !DILocation(line: 3517, column: 11, scope: !7865)
!7900 = !DILocation(line: 3520, column: 17, scope: !7865)
!7901 = !DILocation(line: 3522, column: 11, scope: !7887)
!7902 = !DILocation(line: 3522, column: 11, scope: !7865)
!7903 = !DILocation(line: 3526, column: 12, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 3526, column: 8)
!7905 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 3523, column: 2)
!7906 = !DILocation(line: 3526, column: 26, scope: !7904)
!7907 = !DILocation(line: 3526, column: 37, scope: !7904)
!7908 = !DILocation(line: 3526, column: 10, scope: !7904)
!7909 = !DILocation(line: 3526, column: 8, scope: !7905)
!7910 = !DILocation(line: 3529, column: 24, scope: !7905)
!7911 = !DILocation(line: 3529, column: 14, scope: !7905)
!7912 = !DILocation(line: 3530, column: 16, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 3530, column: 8)
!7914 = !DILocation(line: 3530, column: 8, scope: !7905)
!7915 = !DILocation(line: 3533, column: 16, scope: !7886)
!7916 = !DILocation(line: 3533, column: 16, scope: !7887)
!7917 = !DILocation(line: 3535, column: 14, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 3534, column: 2)
!7919 = !DILocation(line: 3537, column: 24, scope: !7918)
!7920 = !DILocation(line: 3537, column: 14, scope: !7918)
!7921 = !DILocation(line: 3538, column: 16, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 3538, column: 8)
!7923 = !DILocation(line: 3538, column: 8, scope: !7918)
!7924 = !DILocation(line: 3540, column: 14, scope: !7918)
!7925 = !DILocation(line: 3548, column: 17, scope: !7865)
!7926 = !DILocation(line: 3549, column: 7, scope: !7865)
!7927 = !DILocation(line: 3550, column: 19, scope: !7865)
!7928 = !DILocation(line: 3552, column: 11, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 3552, column: 11)
!7930 = !DILocation(line: 3552, column: 11, scope: !7865)
!7931 = !DILocation(line: 3553, column: 2, scope: !7929)
!7932 = !DILocation(line: 3506, column: 18, scope: !7866)
!7933 = !DILocation(line: 3504, column: 3, scope: !7866)
!7934 = distinct !{!7934, !7891, !7935}
!7935 = !DILocation(line: 3556, column: 5, scope: !7867)
!7936 = !DILocation(line: 3559, column: 1, scope: !7853)
!7937 = distinct !DISubprogram(name: "push_block", scope: !3, file: !3, line: 3572, type: !7938, scopeLine: 3573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7940)
!7938 = !DISubroutineType(types: !7939)
!7939 = !{!2182, !2182, !2175, !2175}
!7940 = !{!7941, !7942, !7943, !7944}
!7941 = !DILocalVariable(name: "size", arg: 1, scope: !7937, file: !3, line: 3572, type: !2182)
!7942 = !DILocalVariable(name: "extra", arg: 2, scope: !7937, file: !3, line: 3572, type: !2175)
!7943 = !DILocalVariable(name: "below", arg: 3, scope: !7937, file: !3, line: 3572, type: !2175)
!7944 = !DILocalVariable(name: "temp", scope: !7937, file: !3, line: 3574, type: !2182)
!7945 = !DILocation(line: 0, scope: !7937)
!7946 = !DILocation(line: 3576, column: 32, scope: !7937)
!7947 = !DILocation(line: 3576, column: 10, scope: !7937)
!7948 = !DILocation(line: 3577, column: 7, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 3577, column: 7)
!7950 = !DILocation(line: 3577, column: 7, scope: !7937)
!7951 = !DILocation(line: 3578, column: 45, scope: !7949)
!7952 = !DILocation(line: 3578, column: 24, scope: !7949)
!7953 = !DILocation(line: 3578, column: 5, scope: !7949)
!7954 = !DILocation(line: 3579, column: 12, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 3579, column: 12)
!7956 = !DILocation(line: 3579, column: 34, scope: !7955)
!7957 = !DILocation(line: 3579, column: 25, scope: !7955)
!7958 = !DILocation(line: 3580, column: 5, scope: !7955)
!7959 = !DILocation(line: 3583, column: 14, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 3582, column: 5)
!7961 = !DILocation(line: 3584, column: 11, scope: !7960)
!7962 = !DILocation(line: 3585, column: 47, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 3584, column: 11)
!7964 = !DILocation(line: 3585, column: 9, scope: !7963)
!7965 = !DILocation(line: 3585, column: 2, scope: !7963)
!7966 = !DILocation(line: 0, scope: !7960)
!7967 = !DILocation(line: 3587, column: 7, scope: !7960)
!7968 = !DILocation(line: 3596, column: 14, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 3595, column: 5)
!7970 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 3593, column: 7)
!7971 = !DILocation(line: 3597, column: 17, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 3597, column: 11)
!7973 = !DILocation(line: 3597, column: 25, scope: !7972)
!7974 = !DILocation(line: 3597, column: 22, scope: !7972)
!7975 = !DILocation(line: 3598, column: 30, scope: !7972)
!7976 = !DILocation(line: 3598, column: 9, scope: !7972)
!7977 = !DILocation(line: 3598, column: 2, scope: !7972)
!7978 = !DILocation(line: 0, scope: !7969)
!7979 = !DILocation(line: 3613, column: 10, scope: !7937)
!7980 = !DILocation(line: 3613, column: 3, scope: !7937)
!7981 = distinct !DISubprogram(name: "emit_push_insn", scope: !3, file: !3, line: 3740, type: !7982, scopeLine: 3744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7984)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{null, !2182, !5, !2298, !2182, !7, !2175, !2182, !2175, !2182, !2182, !2175, !2182}
!7984 = !{!7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000, !8003, !8004, !8005, !8006, !8009, !8012, !8013, !8014, !8015, !8016, !8017, !8019}
!7985 = !DILocalVariable(name: "x", arg: 1, scope: !7981, file: !3, line: 3740, type: !2182)
!7986 = !DILocalVariable(name: "mode", arg: 2, scope: !7981, file: !3, line: 3740, type: !5)
!7987 = !DILocalVariable(name: "type", arg: 3, scope: !7981, file: !3, line: 3740, type: !2298)
!7988 = !DILocalVariable(name: "size", arg: 4, scope: !7981, file: !3, line: 3740, type: !2182)
!7989 = !DILocalVariable(name: "align", arg: 5, scope: !7981, file: !3, line: 3741, type: !7)
!7990 = !DILocalVariable(name: "partial", arg: 6, scope: !7981, file: !3, line: 3741, type: !2175)
!7991 = !DILocalVariable(name: "reg", arg: 7, scope: !7981, file: !3, line: 3741, type: !2182)
!7992 = !DILocalVariable(name: "extra", arg: 8, scope: !7981, file: !3, line: 3741, type: !2175)
!7993 = !DILocalVariable(name: "args_addr", arg: 9, scope: !7981, file: !3, line: 3742, type: !2182)
!7994 = !DILocalVariable(name: "args_so_far", arg: 10, scope: !7981, file: !3, line: 3742, type: !2182)
!7995 = !DILocalVariable(name: "reg_parm_stack_space", arg: 11, scope: !7981, file: !3, line: 3742, type: !2175)
!7996 = !DILocalVariable(name: "alignment_pad", arg: 12, scope: !7981, file: !3, line: 3743, type: !2182)
!7997 = !DILocalVariable(name: "xinner", scope: !7981, file: !3, line: 3745, type: !2182)
!7998 = !DILocalVariable(name: "stack_direction", scope: !7981, file: !3, line: 3746, type: !2082)
!7999 = !DILocalVariable(name: "where_pad", scope: !7981, file: !3, line: 3756, type: !2082)
!8000 = !DILocalVariable(name: "temp", scope: !8001, file: !3, line: 3771, type: !2182)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 3768, column: 5)
!8002 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 3766, column: 7)
!8003 = !DILocalVariable(name: "used", scope: !8001, file: !3, line: 3772, type: !2175)
!8004 = !DILocalVariable(name: "offset", scope: !8001, file: !3, line: 3773, type: !2175)
!8005 = !DILocalVariable(name: "skip", scope: !8001, file: !3, line: 3774, type: !2175)
!8006 = !DILocalVariable(name: "target", scope: !8007, file: !3, line: 3838, type: !2182)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 3837, column: 2)
!8008 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 3811, column: 11)
!8009 = !DILocalVariable(name: "size", scope: !8010, file: !3, line: 3902, type: !2175)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 3899, column: 5)
!8011 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 3898, column: 12)
!8012 = !DILocalVariable(name: "i", scope: !8010, file: !3, line: 3903, type: !2175)
!8013 = !DILocalVariable(name: "not_stack", scope: !8010, file: !3, line: 3904, type: !2175)
!8014 = !DILocalVariable(name: "offset", scope: !8010, file: !3, line: 3907, type: !2175)
!8015 = !DILocalVariable(name: "args_offset", scope: !8010, file: !3, line: 3908, type: !2175)
!8016 = !DILocalVariable(name: "skip", scope: !8010, file: !3, line: 3909, type: !2175)
!8017 = !DILocalVariable(name: "addr", scope: !8018, file: !3, line: 3962, type: !2182)
!8018 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 3961, column: 5)
!8019 = !DILocalVariable(name: "dest", scope: !8018, file: !3, line: 3963, type: !2182)
!8020 = !DILocation(line: 0, scope: !7981)
!8021 = !DILocation(line: 3766, column: 12, scope: !8002)
!8022 = !DILocation(line: 3766, column: 7, scope: !7981)
!8023 = !DILocation(line: 3776, column: 24, scope: !8001)
!8024 = !DILocation(line: 0, scope: !8001)
!8025 = !DILocation(line: 3777, column: 22, scope: !8001)
!8026 = !DILocation(line: 3793, column: 7, scope: !8001)
!8027 = !DILocation(line: 3798, column: 19, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 3798, column: 11)
!8029 = !DILocation(line: 3798, column: 11, scope: !8001)
!8030 = !DILocation(line: 3799, column: 11, scope: !8028)
!8031 = !DILocation(line: 3799, column: 2, scope: !8028)
!8032 = !DILocation(line: 3805, column: 36, scope: !8001)
!8033 = !DILocation(line: 3805, column: 14, scope: !8001)
!8034 = !DILocation(line: 3811, column: 21, scope: !8008)
!8035 = !DILocation(line: 3812, column: 4, scope: !8008)
!8036 = !DILocation(line: 3812, column: 7, scope: !8008)
!8037 = !DILocation(line: 3813, column: 4, scope: !8008)
!8038 = !DILocation(line: 3813, column: 7, scope: !8008)
!8039 = !DILocation(line: 3814, column: 12, scope: !8008)
!8040 = !DILocation(line: 3814, column: 4, scope: !8008)
!8041 = !DILocation(line: 3815, column: 7, scope: !8008)
!8042 = !DILocation(line: 3815, column: 26, scope: !8008)
!8043 = !DILocation(line: 3816, column: 4, scope: !8008)
!8044 = !DILocation(line: 3816, column: 8, scope: !8008)
!8045 = !DILocation(line: 3824, column: 4, scope: !8008)
!8046 = !DILocation(line: 3824, column: 7, scope: !8008)
!8047 = !DILocation(line: 3824, column: 37, scope: !8008)
!8048 = !DILocation(line: 3811, column: 11, scope: !8001)
!8049 = !DILocation(line: 3829, column: 8, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 3829, column: 8)
!8051 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 3825, column: 2)
!8052 = !DILocation(line: 3829, column: 14, scope: !8050)
!8053 = !DILocation(line: 3831, column: 25, scope: !8050)
!8054 = !DILocation(line: 3831, column: 6, scope: !8050)
!8055 = !DILocation(line: 3833, column: 34, scope: !8051)
!8056 = !DILocation(line: 3833, column: 50, scope: !8051)
!8057 = !DILocation(line: 3833, column: 48, scope: !8051)
!8058 = !DILocation(line: 3833, column: 4, scope: !8051)
!8059 = !DILocation(line: 3834, column: 2, scope: !8051)
!8060 = !DILocation(line: 3844, column: 8, scope: !8007)
!8061 = !DILocation(line: 3846, column: 12, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 3846, column: 12)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 3845, column: 6)
!8064 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 3844, column: 8)
!8065 = !DILocation(line: 3846, column: 12, scope: !8063)
!8066 = !DILocation(line: 3847, column: 10, scope: !8062)
!8067 = !DILocation(line: 3847, column: 3, scope: !8062)
!8068 = !DILocation(line: 3849, column: 24, scope: !8062)
!8069 = !DILocation(line: 3850, column: 10, scope: !8062)
!8070 = !DILocation(line: 3849, column: 10, scope: !8062)
!8071 = !DILocation(line: 3857, column: 8, scope: !8007)
!8072 = !DILocation(line: 3859, column: 15, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 3858, column: 6)
!8074 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 3857, column: 8)
!8075 = !DILocation(line: 3861, column: 6, scope: !8073)
!8076 = !DILocation(line: 3862, column: 13, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 3862, column: 13)
!8078 = !DILocation(line: 3862, column: 13, scope: !8074)
!8079 = !DILocation(line: 3863, column: 13, scope: !8077)
!8080 = !DILocation(line: 3863, column: 6, scope: !8077)
!8081 = !DILocation(line: 3867, column: 13, scope: !8077)
!8082 = !DILocation(line: 0, scope: !8074)
!8083 = !DILocation(line: 3873, column: 9, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 3873, column: 8)
!8085 = !DILocation(line: 3873, column: 8, scope: !8007)
!8086 = !DILocation(line: 3879, column: 29, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 3879, column: 12)
!8088 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 3874, column: 6)
!8089 = !DILocation(line: 3879, column: 12, scope: !8087)
!8090 = !DILocation(line: 3880, column: 5, scope: !8087)
!8091 = !DILocation(line: 3880, column: 25, scope: !8087)
!8092 = !DILocation(line: 3880, column: 8, scope: !8087)
!8093 = !DILocation(line: 3879, column: 12, scope: !8088)
!8094 = !DILocation(line: 3881, column: 10, scope: !8087)
!8095 = !DILocation(line: 3881, column: 3, scope: !8087)
!8096 = !DILocation(line: 0, scope: !8007)
!8097 = !DILocation(line: 3884, column: 13, scope: !8007)
!8098 = !DILocation(line: 3893, column: 4, scope: !8007)
!8099 = !DILocation(line: 3895, column: 4, scope: !8007)
!8100 = !DILocation(line: 3898, column: 20, scope: !8011)
!8101 = !DILocation(line: 3898, column: 12, scope: !8002)
!8102 = !DILocation(line: 3902, column: 18, scope: !8010)
!8103 = !DILocation(line: 0, scope: !8010)
!8104 = !DILocation(line: 3907, column: 28, scope: !8010)
!8105 = !DILocation(line: 3908, column: 25, scope: !8010)
!8106 = !DILocation(line: 3914, column: 11, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3914, column: 11)
!8108 = !DILocation(line: 3914, column: 30, scope: !8107)
!8109 = !DILocation(line: 3914, column: 17, scope: !8107)
!8110 = !DILocation(line: 3916, column: 21, scope: !8107)
!8111 = !DILocation(line: 3916, column: 2, scope: !8107)
!8112 = !DILocation(line: 3921, column: 11, scope: !8010)
!8113 = !DILocation(line: 3926, column: 28, scope: !8010)
!8114 = !DILocation(line: 3926, column: 38, scope: !8010)
!8115 = !DILocation(line: 3933, column: 36, scope: !8010)
!8116 = !DILocation(line: 3933, column: 14, scope: !8010)
!8117 = !DILocation(line: 3935, column: 11, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3935, column: 11)
!8119 = !DILocation(line: 3935, column: 26, scope: !8118)
!8120 = !DILocation(line: 3935, column: 31, scope: !8118)
!8121 = !DILocation(line: 3935, column: 11, scope: !8010)
!8122 = !DILocation(line: 3936, column: 20, scope: !8118)
!8123 = !DILocation(line: 3936, column: 6, scope: !8118)
!8124 = !DILocation(line: 3936, column: 2, scope: !8118)
!8125 = !DILocation(line: 3940, column: 12, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3940, column: 11)
!8127 = !DILocation(line: 3940, column: 22, scope: !8126)
!8128 = !DILocation(line: 3940, column: 25, scope: !8126)
!8129 = !DILocation(line: 3940, column: 35, scope: !8126)
!8130 = !DILocation(line: 3941, column: 5, scope: !8126)
!8131 = !DILocation(line: 3941, column: 8, scope: !8126)
!8132 = !DILocation(line: 3941, column: 38, scope: !8126)
!8133 = !DILocation(line: 3940, column: 11, scope: !8010)
!8134 = !DILocation(line: 3942, column: 6, scope: !8126)
!8135 = !DILocation(line: 3942, column: 2, scope: !8126)
!8136 = !DILocation(line: 3950, column: 12, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 3950, column: 7)
!8138 = !DILocation(line: 0, scope: !8137)
!8139 = !DILocation(line: 3950, column: 28, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 3950, column: 7)
!8141 = !DILocation(line: 3950, column: 7, scope: !8137)
!8142 = !DILocation(line: 3953, column: 20, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 3952, column: 6)
!8144 = !DILocation(line: 3954, column: 6, scope: !8143)
!8145 = !DILocation(line: 3956, column: 6, scope: !8143)
!8146 = !DILocation(line: 3953, column: 4, scope: !8143)
!8147 = !DILocation(line: 3950, column: 7, scope: !8140)
!8148 = distinct !{!8148, !8141, !8149}
!8149 = !DILocation(line: 3958, column: 41, scope: !8137)
!8150 = !DILocation(line: 3968, column: 11, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 3968, column: 11)
!8152 = !DILocation(line: 3968, column: 30, scope: !8151)
!8153 = !DILocation(line: 3968, column: 17, scope: !8151)
!8154 = !DILocation(line: 3970, column: 21, scope: !8151)
!8155 = !DILocation(line: 3970, column: 2, scope: !8151)
!8156 = !DILocation(line: 3973, column: 26, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 3973, column: 11)
!8158 = !DILocation(line: 3973, column: 29, scope: !8157)
!8159 = !DILocation(line: 3973, column: 11, scope: !8018)
!8160 = !DILocation(line: 3974, column: 2, scope: !8157)
!8161 = !DILocation(line: 3978, column: 8, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 3978, column: 8)
!8163 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 3977, column: 2)
!8164 = !DILocation(line: 3978, column: 8, scope: !8163)
!8165 = !DILocation(line: 3980, column: 10, scope: !8162)
!8166 = !DILocation(line: 0, scope: !8018)
!8167 = !DILocation(line: 3979, column: 6, scope: !8162)
!8168 = !DILocation(line: 3984, column: 13, scope: !8162)
!8169 = !DILocation(line: 0, scope: !8162)
!8170 = !DILocation(line: 3986, column: 11, scope: !8163)
!8171 = !DILocation(line: 3995, column: 4, scope: !8163)
!8172 = !DILocation(line: 3997, column: 4, scope: !8163)
!8173 = !DILocation(line: 4004, column: 15, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 4004, column: 7)
!8175 = !DILocation(line: 4004, column: 26, scope: !8174)
!8176 = !DILocation(line: 4004, column: 19, scope: !8174)
!8177 = !DILocation(line: 4008, column: 11, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 4008, column: 11)
!8179 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 4005, column: 5)
!8180 = !DILocation(line: 4008, column: 26, scope: !8178)
!8181 = !DILocation(line: 4008, column: 11, scope: !8179)
!8182 = !DILocation(line: 4009, column: 2, scope: !8178)
!8183 = !DILocation(line: 4012, column: 4, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 4011, column: 2)
!8185 = !DILocation(line: 4013, column: 23, scope: !8184)
!8186 = !DILocation(line: 4013, column: 47, scope: !8184)
!8187 = !DILocation(line: 4013, column: 4, scope: !8184)
!8188 = !DILocation(line: 4020, column: 7, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 4020, column: 7)
!8190 = !DILocation(line: 4020, column: 34, scope: !8189)
!8191 = !DILocation(line: 4020, column: 21, scope: !8189)
!8192 = !DILocation(line: 4021, column: 5, scope: !8189)
!8193 = !DILocation(line: 4022, column: 1, scope: !7981)
!8194 = distinct !DISubprogram(name: "emit_single_push_insn", scope: !3, file: !3, line: 3621, type: !8195, scopeLine: 3622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8197)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{null, !5, !2182, !2298}
!8197 = !{!8198, !8199, !8200, !8201, !8202, !8203, !8204, !8205}
!8198 = !DILocalVariable(name: "mode", arg: 1, scope: !8194, file: !3, line: 3621, type: !5)
!8199 = !DILocalVariable(name: "x", arg: 2, scope: !8194, file: !3, line: 3621, type: !2182)
!8200 = !DILocalVariable(name: "type", arg: 3, scope: !8194, file: !3, line: 3621, type: !2298)
!8201 = !DILocalVariable(name: "dest_addr", scope: !8194, file: !3, line: 3623, type: !2182)
!8202 = !DILocalVariable(name: "rounded_size", scope: !8194, file: !3, line: 3624, type: !7)
!8203 = !DILocalVariable(name: "dest", scope: !8194, file: !3, line: 3625, type: !2182)
!8204 = !DILocalVariable(name: "icode", scope: !8194, file: !3, line: 3626, type: !384)
!8205 = !DILocalVariable(name: "pred", scope: !8194, file: !3, line: 3627, type: !5507)
!8206 = !DILocation(line: 0, scope: !8194)
!8207 = !DILocation(line: 3624, column: 27, scope: !8194)
!8208 = !DILocation(line: 3629, column: 23, scope: !8194)
!8209 = !DILocation(line: 3632, column: 11, scope: !8194)
!8210 = !DILocation(line: 3632, column: 45, scope: !8194)
!8211 = !DILocation(line: 3633, column: 13, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 3633, column: 7)
!8213 = !DILocation(line: 3633, column: 7, scope: !8194)
!8214 = !DILocation(line: 3635, column: 20, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 3635, column: 11)
!8216 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3634, column: 5)
!8217 = !DILocation(line: 3635, column: 43, scope: !8215)
!8218 = !DILocation(line: 3635, column: 54, scope: !8215)
!8219 = !DILocation(line: 3635, column: 18, scope: !8215)
!8220 = !DILocation(line: 3636, column: 5, scope: !8215)
!8221 = !DILocation(line: 3636, column: 10, scope: !8215)
!8222 = !DILocation(line: 3635, column: 11, scope: !8216)
!8223 = !DILocation(line: 3637, column: 6, scope: !8215)
!8224 = !DILocation(line: 3637, column: 2, scope: !8215)
!8225 = !DILocation(line: 3638, column: 18, scope: !8216)
!8226 = !DILocation(line: 3638, column: 7, scope: !8216)
!8227 = !DILocation(line: 3639, column: 7, scope: !8216)
!8228 = !DILocation(line: 3641, column: 28, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 3641, column: 7)
!8230 = !DILocation(line: 0, scope: !8229)
!8231 = !DILocation(line: 3641, column: 7, scope: !8194)
!8232 = !DILocation(line: 3642, column: 17, scope: !8229)
!8233 = !DILocation(line: 3642, column: 5, scope: !8229)
!8234 = !DILocation(line: 3681, column: 19, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 3678, column: 5)
!8236 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 3647, column: 12)
!8237 = !DILocation(line: 3688, column: 19, scope: !8235)
!8238 = !DILocation(line: 3691, column: 10, scope: !8194)
!8239 = !DILocation(line: 3693, column: 12, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 3693, column: 7)
!8241 = !DILocation(line: 3693, column: 7, scope: !8194)
!8242 = !DILocation(line: 3695, column: 7, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 3694, column: 5)
!8244 = !DILocation(line: 3697, column: 11, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 3697, column: 11)
!8246 = !DILocation(line: 3697, column: 11, scope: !8243)
!8247 = !DILocation(line: 3702, column: 2, scope: !8245)
!8248 = !DILocation(line: 3704, column: 3, scope: !8194)
!8249 = !DILocation(line: 3705, column: 1, scope: !8194)
!8250 = distinct !DISubprogram(name: "expand_assignment", scope: !3, file: !3, line: 4196, type: !8251, scopeLine: 4197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8253)
!8251 = !DISubroutineType(types: !8252)
!8252 = !{null, !2298, !2298, !2174}
!8253 = !{!8254, !8255, !8256, !8257, !8258, !8259, !8262, !8263, !8264, !8265, !8266, !8267, !8268, !8271, !8272, !8276, !8277, !8278, !8279, !8280, !8281, !8282, !8283, !8286, !8289, !8292}
!8254 = !DILocalVariable(name: "to", arg: 1, scope: !8250, file: !3, line: 4196, type: !2298)
!8255 = !DILocalVariable(name: "from", arg: 2, scope: !8250, file: !3, line: 4196, type: !2298)
!8256 = !DILocalVariable(name: "nontemporal", arg: 3, scope: !8250, file: !3, line: 4196, type: !2174)
!8257 = !DILocalVariable(name: "to_rtx", scope: !8250, file: !3, line: 4198, type: !2182)
!8258 = !DILocalVariable(name: "result", scope: !8250, file: !3, line: 4199, type: !2182)
!8259 = !DILocalVariable(name: "mode1", scope: !8260, file: !3, line: 4220, type: !5)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 4219, column: 5)
!8261 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 4217, column: 7)
!8262 = !DILocalVariable(name: "bitsize", scope: !8260, file: !3, line: 4221, type: !2269)
!8263 = !DILocalVariable(name: "bitpos", scope: !8260, file: !3, line: 4221, type: !2269)
!8264 = !DILocalVariable(name: "offset", scope: !8260, file: !3, line: 4222, type: !2298)
!8265 = !DILocalVariable(name: "unsignedp", scope: !8260, file: !3, line: 4223, type: !2175)
!8266 = !DILocalVariable(name: "volatilep", scope: !8260, file: !3, line: 4224, type: !2175)
!8267 = !DILocalVariable(name: "tem", scope: !8260, file: !3, line: 4225, type: !2298)
!8268 = !DILocalVariable(name: "address_mode", scope: !8269, file: !3, line: 4238, type: !5)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4237, column: 2)
!8270 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 4236, column: 11)
!8271 = !DILocalVariable(name: "offset_rtx", scope: !8269, file: !3, line: 4239, type: !2182)
!8272 = !DILocalVariable(name: "as", scope: !8273, file: !3, line: 4326, type: !8275)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 4325, column: 6)
!8274 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 4324, column: 13)
!8275 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !2183, line: 73, baseType: !2174)
!8276 = !DILocalVariable(name: "mode", scope: !8273, file: !3, line: 4327, type: !5)
!8277 = !DILocalVariable(name: "op_mode1", scope: !8273, file: !3, line: 4327, type: !5)
!8278 = !DILocalVariable(name: "icode", scope: !8273, file: !3, line: 4328, type: !384)
!8279 = !DILocalVariable(name: "reg", scope: !8273, file: !3, line: 4329, type: !2182)
!8280 = !DILocalVariable(name: "addr", scope: !8273, file: !3, line: 4329, type: !2182)
!8281 = !DILocalVariable(name: "mem", scope: !8273, file: !3, line: 4329, type: !2182)
!8282 = !DILocalVariable(name: "insn", scope: !8273, file: !3, line: 4329, type: !2182)
!8283 = !DILocalVariable(name: "value", scope: !8284, file: !3, line: 4376, type: !2182)
!8284 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 4375, column: 5)
!8285 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 4369, column: 7)
!8286 = !DILocalVariable(name: "temp", scope: !8287, file: !3, line: 4415, type: !2182)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 4414, column: 5)
!8288 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 4412, column: 7)
!8289 = !DILocalVariable(name: "from_rtx", scope: !8290, file: !3, line: 4443, type: !2182)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 4442, column: 5)
!8291 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 4435, column: 7)
!8292 = !DILocalVariable(name: "size", scope: !8290, file: !3, line: 4443, type: !2182)
!8293 = !DILocation(line: 0, scope: !8250)
!8294 = !DILocation(line: 4202, column: 7, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 4202, column: 7)
!8296 = !DILocation(line: 4202, column: 22, scope: !8295)
!8297 = !DILocation(line: 4202, column: 7, scope: !8250)
!8298 = !DILocation(line: 4204, column: 16, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 4203, column: 5)
!8300 = !DILocation(line: 4205, column: 7, scope: !8299)
!8301 = !DILocation(line: 4209, column: 7, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 4209, column: 7)
!8303 = !DILocation(line: 4209, column: 7, scope: !8250)
!8304 = !DILocation(line: 4217, column: 7, scope: !8261)
!8305 = !DILocation(line: 4218, column: 7, scope: !8261)
!8306 = !DILocation(line: 4218, column: 10, scope: !8261)
!8307 = !DILocation(line: 4218, column: 37, scope: !8261)
!8308 = !DILocation(line: 4217, column: 7, scope: !8250)
!8309 = !DILocation(line: 4220, column: 7, scope: !8260)
!8310 = !DILocation(line: 4221, column: 7, scope: !8260)
!8311 = !DILocation(line: 4222, column: 7, scope: !8260)
!8312 = !DILocation(line: 4223, column: 7, scope: !8260)
!8313 = !DILocation(line: 4224, column: 7, scope: !8260)
!8314 = !DILocation(line: 0, scope: !8260)
!8315 = !DILocation(line: 4224, column: 11, scope: !8260)
!8316 = !DILocation(line: 4227, column: 7, scope: !8260)
!8317 = !DILocation(line: 4228, column: 13, scope: !8260)
!8318 = !DILocation(line: 4234, column: 16, scope: !8260)
!8319 = !DILocation(line: 4236, column: 11, scope: !8270)
!8320 = !DILocation(line: 4236, column: 18, scope: !8270)
!8321 = !DILocation(line: 4236, column: 11, scope: !8260)
!8322 = !DILocation(line: 4241, column: 9, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 4241, column: 8)
!8324 = !DILocation(line: 4241, column: 8, scope: !8269)
!8325 = !DILocation(line: 4245, column: 8, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4242, column: 6)
!8327 = !DILocation(line: 4246, column: 8, scope: !8326)
!8328 = !DILocation(line: 4247, column: 39, scope: !8326)
!8329 = !DILocation(line: 4247, column: 17, scope: !8326)
!8330 = !DILocation(line: 4250, column: 30, scope: !8269)
!8331 = !DILocation(line: 4248, column: 6, scope: !8326)
!8332 = !DILocation(line: 4250, column: 17, scope: !8269)
!8333 = !DILocation(line: 0, scope: !8269)
!8334 = !DILocation(line: 4252, column: 27, scope: !8269)
!8335 = !DILocation(line: 4252, column: 41, scope: !8269)
!8336 = !DILocation(line: 4252, column: 8, scope: !8269)
!8337 = !DILocation(line: 4253, column: 8, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 4253, column: 8)
!8339 = !DILocation(line: 4253, column: 30, scope: !8338)
!8340 = !DILocation(line: 4253, column: 8, scope: !8269)
!8341 = !DILocation(line: 4254, column: 19, scope: !8338)
!8342 = !DILocation(line: 4254, column: 6, scope: !8338)
!8343 = !DILocation(line: 4258, column: 8, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 4258, column: 8)
!8345 = !DILocation(line: 4259, column: 8, scope: !8344)
!8346 = !DILocation(line: 4259, column: 11, scope: !8344)
!8347 = !DILocation(line: 4259, column: 29, scope: !8344)
!8348 = !DILocation(line: 4260, column: 8, scope: !8344)
!8349 = !DILocation(line: 4260, column: 11, scope: !8344)
!8350 = !DILocation(line: 4260, column: 39, scope: !8344)
!8351 = !DILocation(line: 4261, column: 11, scope: !8344)
!8352 = !DILocation(line: 4261, column: 19, scope: !8344)
!8353 = !DILocation(line: 4261, column: 8, scope: !8344)
!8354 = !DILocation(line: 4262, column: 12, scope: !8344)
!8355 = !DILocation(line: 4262, column: 19, scope: !8344)
!8356 = !DILocation(line: 4262, column: 30, scope: !8344)
!8357 = !DILocation(line: 4263, column: 8, scope: !8344)
!8358 = !DILocation(line: 4263, column: 22, scope: !8344)
!8359 = !DILocation(line: 4263, column: 20, scope: !8344)
!8360 = !DILocation(line: 4263, column: 50, scope: !8344)
!8361 = !DILocation(line: 4264, column: 8, scope: !8344)
!8362 = !DILocation(line: 4264, column: 11, scope: !8344)
!8363 = !DILocation(line: 4264, column: 33, scope: !8344)
!8364 = !DILocation(line: 4264, column: 30, scope: !8344)
!8365 = !DILocation(line: 4258, column: 8, scope: !8269)
!8366 = !DILocation(line: 4266, column: 17, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 4265, column: 6)
!8368 = !DILocation(line: 4267, column: 15, scope: !8367)
!8369 = !DILocation(line: 4268, column: 6, scope: !8367)
!8370 = !DILocation(line: 4272, column: 15, scope: !8269)
!8371 = !DILocation(line: 4271, column: 8, scope: !8269)
!8372 = !DILocation(line: 4270, column: 13, scope: !8269)
!8373 = !DILocation(line: 4273, column: 2, scope: !8269)
!8374 = !DILocation(line: 4276, column: 11, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 4276, column: 11)
!8376 = !DILocation(line: 4276, column: 29, scope: !8375)
!8377 = !DILocation(line: 4276, column: 11, scope: !8260)
!8378 = !DILocation(line: 4278, column: 8, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 4278, column: 8)
!8380 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 4277, column: 2)
!8381 = !DILocation(line: 4278, column: 8, scope: !8380)
!8382 = !DILocation(line: 4280, column: 8, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 4279, column: 6)
!8384 = !DILocation(line: 4281, column: 17, scope: !8383)
!8385 = !DILocation(line: 4282, column: 6, scope: !8383)
!8386 = !DILocation(line: 4285, column: 8, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 4284, column: 6)
!8388 = !DILocation(line: 4286, column: 35, scope: !8387)
!8389 = !DILocation(line: 4286, column: 17, scope: !8387)
!8390 = !DILocation(line: 4292, column: 8, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 4292, column: 8)
!8392 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 4291, column: 2)
!8393 = !DILocation(line: 4292, column: 8, scope: !8392)
!8394 = !DILocation(line: 4296, column: 17, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 4293, column: 6)
!8396 = !DILocation(line: 4298, column: 56, scope: !8395)
!8397 = !DILocation(line: 4298, column: 8, scope: !8395)
!8398 = !DILocation(line: 4302, column: 12, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 4302, column: 12)
!8400 = !DILocation(line: 4302, column: 12, scope: !8395)
!8401 = !DILocation(line: 4303, column: 3, scope: !8399)
!8402 = !DILocation(line: 4303, column: 27, scope: !8399)
!8403 = !DILocation(line: 4304, column: 12, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 4304, column: 12)
!8405 = !DILocation(line: 4304, column: 12, scope: !8395)
!8406 = !DILocation(line: 4305, column: 3, scope: !8404)
!8407 = !DILocation(line: 4305, column: 33, scope: !8404)
!8408 = !DILocation(line: 4308, column: 41, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 4308, column: 8)
!8410 = !DILocation(line: 4308, column: 50, scope: !8409)
!8411 = !DILocation(line: 4308, column: 58, scope: !8409)
!8412 = !DILocation(line: 4308, column: 8, scope: !8409)
!8413 = !DILocation(line: 4308, column: 8, scope: !8392)
!8414 = !DILocation(line: 4312, column: 36, scope: !8409)
!8415 = !DILocation(line: 4312, column: 45, scope: !8409)
!8416 = !DILocation(line: 4312, column: 53, scope: !8409)
!8417 = !DILocation(line: 4313, column: 7, scope: !8409)
!8418 = !DILocation(line: 4313, column: 24, scope: !8409)
!8419 = !DILocation(line: 4312, column: 15, scope: !8409)
!8420 = !DILocation(line: 0, scope: !8375)
!8421 = !DILocation(line: 4317, column: 11, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 4317, column: 11)
!8423 = !DILocation(line: 4317, column: 11, scope: !8260)
!8424 = !DILocation(line: 4318, column: 2, scope: !8422)
!8425 = !DILocation(line: 4319, column: 7, scope: !8260)
!8426 = !DILocation(line: 4320, column: 7, scope: !8260)
!8427 = !DILocation(line: 4322, column: 5, scope: !8261)
!8428 = !DILocation(line: 4324, column: 13, scope: !8274)
!8429 = !DILocation(line: 4324, column: 28, scope: !8274)
!8430 = !DILocation(line: 4324, column: 13, scope: !8261)
!8431 = !DILocation(line: 0, scope: !8273)
!8432 = !DILocation(line: 4331, column: 12, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 4331, column: 12)
!8434 = !DILocation(line: 4331, column: 12, scope: !8273)
!8435 = !DILocation(line: 4332, column: 8, scope: !8433)
!8436 = !DILocation(line: 4332, column: 3, scope: !8433)
!8437 = !DILocation(line: 4334, column: 14, scope: !8273)
!8438 = !DILocation(line: 4335, column: 14, scope: !8273)
!8439 = !DILocation(line: 4337, column: 15, scope: !8273)
!8440 = !DILocation(line: 4338, column: 28, scope: !8273)
!8441 = !DILocation(line: 4338, column: 15, scope: !8273)
!8442 = !DILocation(line: 4340, column: 15, scope: !8273)
!8443 = !DILocation(line: 4341, column: 14, scope: !8273)
!8444 = !DILocation(line: 4343, column: 8, scope: !8273)
!8445 = !DILocation(line: 4344, column: 8, scope: !8273)
!8446 = !DILocation(line: 4346, column: 16, scope: !8273)
!8447 = !DILocation(line: 4346, column: 50, scope: !8273)
!8448 = !DILocation(line: 4347, column: 8, scope: !8273)
!8449 = !DILocation(line: 4349, column: 19, scope: !8273)
!8450 = !DILocation(line: 4349, column: 36, scope: !8273)
!8451 = !DILocation(line: 4349, column: 47, scope: !8273)
!8452 = !DILocation(line: 4350, column: 44, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 4350, column: 12)
!8454 = !DILocation(line: 4350, column: 14, scope: !8453)
!8455 = !DILocation(line: 4351, column: 24, scope: !8453)
!8456 = !DILocation(line: 4351, column: 12, scope: !8453)
!8457 = !DILocation(line: 4352, column: 16, scope: !8453)
!8458 = !DILocation(line: 4352, column: 10, scope: !8453)
!8459 = !DILocation(line: 4354, column: 14, scope: !8273)
!8460 = !DILocation(line: 4355, column: 8, scope: !8273)
!8461 = !DILocation(line: 4369, column: 7, scope: !8285)
!8462 = !DILocation(line: 4369, column: 24, scope: !8285)
!8463 = !DILocation(line: 4369, column: 37, scope: !8285)
!8464 = !DILocation(line: 4369, column: 42, scope: !8285)
!8465 = !DILocation(line: 4370, column: 7, scope: !8285)
!8466 = !DILocation(line: 4370, column: 10, scope: !8285)
!8467 = !DILocation(line: 4371, column: 7, scope: !8285)
!8468 = !DILocation(line: 4371, column: 10, scope: !8285)
!8469 = !DILocation(line: 4371, column: 51, scope: !8285)
!8470 = !DILocation(line: 4372, column: 7, scope: !8285)
!8471 = !DILocation(line: 4372, column: 15, scope: !8285)
!8472 = !DILocation(line: 4372, column: 30, scope: !8285)
!8473 = !DILocation(line: 4372, column: 42, scope: !8285)
!8474 = !DILocation(line: 4372, column: 60, scope: !8285)
!8475 = !DILocation(line: 4373, column: 7, scope: !8285)
!8476 = !DILocation(line: 4373, column: 10, scope: !8285)
!8477 = !DILocation(line: 0, scope: !8285)
!8478 = !DILocation(line: 4374, column: 6, scope: !8285)
!8479 = !DILocation(line: 4374, column: 9, scope: !8285)
!8480 = !DILocation(line: 4374, column: 24, scope: !8285)
!8481 = !DILocation(line: 4369, column: 7, scope: !8250)
!8482 = !DILocation(line: 4378, column: 7, scope: !8284)
!8483 = !DILocation(line: 4379, column: 15, scope: !8284)
!8484 = !DILocation(line: 0, scope: !8284)
!8485 = !DILocation(line: 4381, column: 11, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 4380, column: 11)
!8487 = !DILocation(line: 4385, column: 11, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 4385, column: 11)
!8489 = !DILocation(line: 4385, column: 29, scope: !8488)
!8490 = !DILocation(line: 4385, column: 11, scope: !8284)
!8491 = !DILocation(line: 4386, column: 34, scope: !8488)
!8492 = !DILocation(line: 4387, column: 5, scope: !8488)
!8493 = !DILocation(line: 4386, column: 2, scope: !8488)
!8494 = !DILocation(line: 4388, column: 16, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 4388, column: 16)
!8496 = !DILocation(line: 4388, column: 34, scope: !8495)
!8497 = !DILocation(line: 4388, column: 16, scope: !8488)
!8498 = !DILocation(line: 4389, column: 34, scope: !8495)
!8499 = !DILocation(line: 4389, column: 2, scope: !8495)
!8500 = !DILocation(line: 4392, column: 8, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 4392, column: 8)
!8502 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 4391, column: 2)
!8503 = !DILocation(line: 4392, column: 8, scope: !8502)
!8504 = !DILocation(line: 4394, column: 10, scope: !8501)
!8505 = !DILocation(line: 4395, column: 10, scope: !8501)
!8506 = !DILocation(line: 4393, column: 14, scope: !8501)
!8507 = !DILocation(line: 4393, column: 6, scope: !8501)
!8508 = !DILocation(line: 4397, column: 4, scope: !8502)
!8509 = !DILocation(line: 4399, column: 7, scope: !8284)
!8510 = !DILocation(line: 4400, column: 7, scope: !8284)
!8511 = !DILocation(line: 4401, column: 7, scope: !8284)
!8512 = !DILocation(line: 4409, column: 14, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 4408, column: 7)
!8514 = !DILocation(line: 4412, column: 7, scope: !8288)
!8515 = !DILocation(line: 4412, column: 22, scope: !8288)
!8516 = !DILocation(line: 4413, column: 7, scope: !8288)
!8517 = !DILocation(line: 4413, column: 11, scope: !8288)
!8518 = !DILocation(line: 4413, column: 26, scope: !8288)
!8519 = !DILocation(line: 4413, column: 47, scope: !8288)
!8520 = !DILocation(line: 4412, column: 7, scope: !8250)
!8521 = !DILocation(line: 4417, column: 7, scope: !8287)
!8522 = !DILocation(line: 4418, column: 43, scope: !8287)
!8523 = !DILocation(line: 4418, column: 14, scope: !8287)
!8524 = !DILocation(line: 0, scope: !8287)
!8525 = !DILocation(line: 4420, column: 11, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 4420, column: 11)
!8527 = !DILocation(line: 4420, column: 29, scope: !8526)
!8528 = !DILocation(line: 4420, column: 11, scope: !8287)
!8529 = !DILocation(line: 4421, column: 33, scope: !8526)
!8530 = !DILocation(line: 4422, column: 5, scope: !8526)
!8531 = !DILocation(line: 4421, column: 2, scope: !8526)
!8532 = !DILocation(line: 4424, column: 2, scope: !8526)
!8533 = !DILocation(line: 4426, column: 7, scope: !8287)
!8534 = !DILocation(line: 4427, column: 7, scope: !8287)
!8535 = !DILocation(line: 4428, column: 7, scope: !8287)
!8536 = !DILocation(line: 4436, column: 7, scope: !8291)
!8537 = !DILocation(line: 4436, column: 10, scope: !8291)
!8538 = !DILocation(line: 4436, column: 27, scope: !8291)
!8539 = !DILocation(line: 4437, column: 7, scope: !8291)
!8540 = !DILocation(line: 4437, column: 10, scope: !8291)
!8541 = !DILocation(line: 4439, column: 7, scope: !8291)
!8542 = !DILocation(line: 4439, column: 10, scope: !8291)
!8543 = !DILocation(line: 4440, column: 7, scope: !8291)
!8544 = !DILocation(line: 4440, column: 10, scope: !8291)
!8545 = !DILocation(line: 4440, column: 16, scope: !8291)
!8546 = !DILocation(line: 4441, column: 7, scope: !8291)
!8547 = !DILocation(line: 4441, column: 17, scope: !8291)
!8548 = !DILocation(line: 4441, column: 11, scope: !8291)
!8549 = !DILocation(line: 4435, column: 7, scope: !8250)
!8550 = !DILocation(line: 4445, column: 7, scope: !8290)
!8551 = !DILocation(line: 4446, column: 14, scope: !8290)
!8552 = !DILocation(line: 0, scope: !8290)
!8553 = !DILocation(line: 4447, column: 18, scope: !8290)
!8554 = !DILocation(line: 4449, column: 26, scope: !8290)
!8555 = !DILocation(line: 4450, column: 18, scope: !8290)
!8556 = !DILocation(line: 4451, column: 5, scope: !8290)
!8557 = !DILocation(line: 4452, column: 22, scope: !8290)
!8558 = !DILocation(line: 4453, column: 14, scope: !8290)
!8559 = !DILocation(line: 4452, column: 5, scope: !8290)
!8560 = !DILocation(line: 4454, column: 5, scope: !8290)
!8561 = !DILocation(line: 4449, column: 7, scope: !8290)
!8562 = !DILocation(line: 4456, column: 7, scope: !8290)
!8563 = !DILocation(line: 4457, column: 7, scope: !8290)
!8564 = !DILocation(line: 4458, column: 7, scope: !8290)
!8565 = !DILocation(line: 4464, column: 3, scope: !8250)
!8566 = !DILocation(line: 4465, column: 12, scope: !8250)
!8567 = !DILocation(line: 4466, column: 3, scope: !8250)
!8568 = !DILocation(line: 4467, column: 3, scope: !8250)
!8569 = !DILocation(line: 4468, column: 3, scope: !8250)
!8570 = !DILocation(line: 4469, column: 3, scope: !8250)
!8571 = !DILocation(line: 4470, column: 1, scope: !8250)
!8572 = distinct !DISubprogram(name: "handled_component_p", scope: !142, file: !142, line: 4551, type: !8573, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8576)
!8573 = !DISubroutineType(types: !8574)
!8574 = !{!2174, !8575}
!8575 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !2183, line: 59, baseType: !3607)
!8576 = !{!8577}
!8577 = !DILocalVariable(name: "t", arg: 1, scope: !8572, file: !142, line: 4551, type: !8575)
!8578 = !DILocation(line: 0, scope: !8572)
!8579 = !DILocation(line: 4553, column: 11, scope: !8572)
!8580 = !DILocation(line: 4553, column: 3, scope: !8572)
!8581 = !DILocation(line: 4565, column: 7, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8572, file: !142, line: 4554, column: 5)
!8583 = !DILocation(line: 0, scope: !8582)
!8584 = !DILocation(line: 4567, column: 1, scope: !8572)
!8585 = distinct !DISubprogram(name: "get_inner_reference", scope: !3, file: !3, line: 5963, type: !8586, scopeLine: 5967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8591)
!8586 = !DISubroutineType(types: !8587)
!8587 = !{!2298, !2298, !8588, !8588, !2797, !8589, !8590, !8590, !2174}
!8588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!8589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!8590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!8591 = !{!8592, !8593, !8594, !8595, !8596, !8597, !8598, !8599, !8600, !8601, !8602, !8603, !8604, !8605, !8608, !8612, !8613, !8615, !8616, !8617, !8620}
!8592 = !DILocalVariable(name: "exp", arg: 1, scope: !8585, file: !3, line: 5963, type: !2298)
!8593 = !DILocalVariable(name: "pbitsize", arg: 2, scope: !8585, file: !3, line: 5963, type: !8588)
!8594 = !DILocalVariable(name: "pbitpos", arg: 3, scope: !8585, file: !3, line: 5964, type: !8588)
!8595 = !DILocalVariable(name: "poffset", arg: 4, scope: !8585, file: !3, line: 5964, type: !2797)
!8596 = !DILocalVariable(name: "pmode", arg: 5, scope: !8585, file: !3, line: 5965, type: !8589)
!8597 = !DILocalVariable(name: "punsignedp", arg: 6, scope: !8585, file: !3, line: 5965, type: !8590)
!8598 = !DILocalVariable(name: "pvolatilep", arg: 7, scope: !8585, file: !3, line: 5966, type: !8590)
!8599 = !DILocalVariable(name: "keep_aligning", arg: 8, scope: !8585, file: !3, line: 5966, type: !2174)
!8600 = !DILocalVariable(name: "size_tree", scope: !8585, file: !3, line: 5968, type: !2298)
!8601 = !DILocalVariable(name: "mode", scope: !8585, file: !3, line: 5969, type: !5)
!8602 = !DILocalVariable(name: "blkmode_bitfield", scope: !8585, file: !3, line: 5970, type: !2174)
!8603 = !DILocalVariable(name: "offset", scope: !8585, file: !3, line: 5971, type: !2298)
!8604 = !DILocalVariable(name: "bit_offset", scope: !8585, file: !3, line: 5972, type: !2298)
!8605 = !DILocalVariable(name: "field", scope: !8606, file: !3, line: 5979, type: !2298)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 5978, column: 5)
!8607 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 5977, column: 7)
!8608 = !DILocalVariable(name: "field", scope: !8609, file: !3, line: 6033, type: !2298)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 6032, column: 4)
!8610 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 6025, column: 2)
!8611 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 6023, column: 5)
!8612 = !DILocalVariable(name: "this_offset", scope: !8609, file: !3, line: 6034, type: !2298)
!8613 = !DILocalVariable(name: "index", scope: !8614, file: !3, line: 6053, type: !2298)
!8614 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 6052, column: 4)
!8615 = !DILocalVariable(name: "low_bound", scope: !8614, file: !3, line: 6054, type: !2298)
!8616 = !DILocalVariable(name: "unit_size", scope: !8614, file: !3, line: 6055, type: !2298)
!8617 = !DILocalVariable(name: "tem", scope: !8618, file: !3, line: 6108, type: !2346)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 6107, column: 5)
!8619 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 6106, column: 7)
!8620 = !DILabel(scope: !8585, name: "done", file: !3, line: 6101)
!8621 = !DILocation(line: 0, scope: !8585)
!8622 = !DILocation(line: 5971, column: 17, scope: !8585)
!8623 = !DILocation(line: 5972, column: 21, scope: !8585)
!8624 = !DILocation(line: 5976, column: 13, scope: !8585)
!8625 = !DILocation(line: 5977, column: 7, scope: !8607)
!8626 = !DILocation(line: 5977, column: 23, scope: !8607)
!8627 = !DILocation(line: 5977, column: 7, scope: !8585)
!8628 = !DILocation(line: 5979, column: 20, scope: !8606)
!8629 = !DILocation(line: 0, scope: !8606)
!8630 = !DILocation(line: 5980, column: 19, scope: !8606)
!8631 = !DILocation(line: 5981, column: 12, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 5981, column: 11)
!8633 = !DILocation(line: 0, scope: !8632)
!8634 = !DILocation(line: 5981, column: 11, scope: !8606)
!8635 = !DILocation(line: 5986, column: 21, scope: !8606)
!8636 = !DILocation(line: 5986, column: 19, scope: !8606)
!8637 = !DILocation(line: 5987, column: 5, scope: !8606)
!8638 = !DILocation(line: 5988, column: 28, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 5988, column: 12)
!8640 = !DILocation(line: 5988, column: 12, scope: !8607)
!8641 = !DILocation(line: 5990, column: 19, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 5989, column: 5)
!8643 = !DILocation(line: 5991, column: 24, scope: !8642)
!8644 = !DILocation(line: 5992, column: 8, scope: !8642)
!8645 = !DILocation(line: 5992, column: 11, scope: !8642)
!8646 = !DILocation(line: 5991, column: 19, scope: !8642)
!8647 = !DILocation(line: 5996, column: 11, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 5996, column: 11)
!8649 = !DILocation(line: 5996, column: 57, scope: !8648)
!8650 = !DILocation(line: 5997, column: 4, scope: !8648)
!8651 = !DILocation(line: 5997, column: 7, scope: !8648)
!8652 = !DILocation(line: 5997, column: 26, scope: !8648)
!8653 = !DILocation(line: 5997, column: 23, scope: !8648)
!8654 = !DILocation(line: 5998, column: 4, scope: !8648)
!8655 = !DILocation(line: 5998, column: 38, scope: !8648)
!8656 = !DILocation(line: 5998, column: 7, scope: !8648)
!8657 = !DILocation(line: 5996, column: 11, scope: !8642)
!8658 = !DILocation(line: 5999, column: 16, scope: !8648)
!8659 = !DILocation(line: 6003, column: 14, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 6002, column: 5)
!8661 = !DILocation(line: 6004, column: 21, scope: !8660)
!8662 = !DILocation(line: 6004, column: 19, scope: !8660)
!8663 = !DILocation(line: 6006, column: 16, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 6006, column: 11)
!8665 = !DILocation(line: 6006, column: 11, scope: !8660)
!8666 = !DILocation(line: 6007, column: 14, scope: !8664)
!8667 = !DILocation(line: 6007, column: 2, scope: !8664)
!8668 = !DILocation(line: 6009, column: 14, scope: !8664)
!8669 = !DILocation(line: 6009, column: 12, scope: !8664)
!8670 = !DILocation(line: 0, scope: !8607)
!8671 = !DILocation(line: 6012, column: 17, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 6012, column: 7)
!8673 = !DILocation(line: 6012, column: 7, scope: !8585)
!8674 = !DILocation(line: 6014, column: 13, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 6014, column: 11)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 6013, column: 5)
!8677 = !DILocation(line: 6014, column: 11, scope: !8676)
!8678 = !DILocation(line: 6015, column: 28, scope: !8675)
!8679 = !DILocation(line: 6015, column: 2, scope: !8675)
!8680 = !DILocation(line: 6017, column: 14, scope: !8675)
!8681 = !DILocation(line: 6017, column: 12, scope: !8675)
!8682 = !DILocation(line: 5969, column: 21, scope: !8585)
!8683 = !DILocation(line: 6022, column: 3, scope: !8585)
!8684 = !DILocation(line: 5971, column: 8, scope: !8585)
!8685 = !DILocation(line: 5972, column: 8, scope: !8585)
!8686 = !DILocation(line: 6024, column: 15, scope: !8611)
!8687 = !DILocation(line: 6024, column: 7, scope: !8611)
!8688 = !DILocation(line: 6027, column: 17, scope: !8610)
!8689 = !DILocation(line: 6029, column: 4, scope: !8610)
!8690 = !DILocation(line: 6033, column: 19, scope: !8609)
!8691 = !DILocation(line: 6034, column: 25, scope: !8609)
!8692 = !DILocation(line: 0, scope: !8609)
!8693 = !DILocation(line: 6039, column: 22, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 6039, column: 10)
!8695 = !DILocation(line: 6039, column: 10, scope: !8609)
!8696 = !DILocation(line: 6042, column: 15, scope: !8609)
!8697 = !DILocation(line: 6043, column: 19, scope: !8609)
!8698 = !DILocation(line: 6047, column: 4, scope: !8610)
!8699 = !DILocation(line: 6053, column: 19, scope: !8614)
!8700 = !DILocation(line: 0, scope: !8614)
!8701 = !DILocation(line: 6054, column: 23, scope: !8614)
!8702 = !DILocation(line: 6055, column: 23, scope: !8614)
!8703 = !DILocation(line: 6061, column: 12, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 6061, column: 10)
!8705 = !DILocation(line: 6061, column: 10, scope: !8614)
!8706 = !DILocation(line: 6062, column: 16, scope: !8704)
!8707 = !DILocation(line: 6062, column: 8, scope: !8704)
!8708 = !DILocation(line: 6065, column: 15, scope: !8614)
!8709 = !DILocation(line: 6070, column: 4, scope: !8610)
!8710 = !DILocation(line: 6076, column: 17, scope: !8610)
!8711 = !DILocation(line: 6078, column: 4, scope: !8610)
!8712 = !DILocation(line: 6089, column: 4, scope: !8610)
!8713 = !DILocation(line: 6096, column: 11, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 6096, column: 11)
!8715 = !DILocation(line: 6096, column: 11, scope: !8611)
!8716 = !DILocation(line: 6097, column: 14, scope: !8714)
!8717 = !DILocation(line: 6097, column: 2, scope: !8714)
!8718 = !DILocation(line: 6099, column: 13, scope: !8611)
!8719 = distinct !{!8719, !8683, !8720}
!8720 = !DILocation(line: 6100, column: 5, scope: !8585)
!8721 = !DILocation(line: 6101, column: 2, scope: !8585)
!8722 = !DILocation(line: 6106, column: 7, scope: !8619)
!8723 = !DILocation(line: 6106, column: 7, scope: !8585)
!8724 = !DILocation(line: 6108, column: 7, scope: !8618)
!8725 = !DILocation(line: 6108, column: 40, scope: !8618)
!8726 = !DILocation(line: 6109, column: 12, scope: !8618)
!8727 = !DILocation(line: 6108, column: 24, scope: !8618)
!8728 = !DILocation(line: 6110, column: 13, scope: !8618)
!8729 = !DILocation(line: 6110, column: 34, scope: !8618)
!8730 = !DILocation(line: 6111, column: 11, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 6111, column: 11)
!8732 = !DILocation(line: 6111, column: 11, scope: !8618)
!8733 = !DILocation(line: 6113, column: 15, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 6112, column: 2)
!8735 = !DILocation(line: 6113, column: 13, scope: !8734)
!8736 = !DILocation(line: 6114, column: 13, scope: !8734)
!8737 = !DILocation(line: 6115, column: 2, scope: !8734)
!8738 = !DILocation(line: 6116, column: 5, scope: !8619)
!8739 = !DILocation(line: 6116, column: 5, scope: !8618)
!8740 = !DILocation(line: 6119, column: 7, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 6119, column: 7)
!8742 = !DILocation(line: 6119, column: 7, scope: !8585)
!8743 = !DILocation(line: 6121, column: 18, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 6120, column: 5)
!8745 = !DILocation(line: 6121, column: 16, scope: !8744)
!8746 = !DILocation(line: 6122, column: 16, scope: !8744)
!8747 = !DILocation(line: 6123, column: 5, scope: !8744)
!8748 = !DILocation(line: 6126, column: 12, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 6126, column: 7)
!8750 = !DILocation(line: 6127, column: 10, scope: !8749)
!8751 = !DILocation(line: 6127, column: 7, scope: !8749)
!8752 = !DILocation(line: 6128, column: 11, scope: !8749)
!8753 = !DILocation(line: 6128, column: 37, scope: !8749)
!8754 = !DILocation(line: 6129, column: 7, scope: !8749)
!8755 = !DILocation(line: 6129, column: 11, scope: !8749)
!8756 = !DILocation(line: 6129, column: 38, scope: !8749)
!8757 = !DILocation(line: 6126, column: 7, scope: !8585)
!8758 = !DILocation(line: 6130, column: 5, scope: !8749)
!8759 = !DILocation(line: 0, scope: !8749)
!8760 = !DILocation(line: 6134, column: 3, scope: !8585)
!8761 = distinct !DISubprogram(name: "expand_expr", scope: !2042, file: !2042, line: 555, type: !8762, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8764)
!8762 = !DISubroutineType(types: !8763)
!8763 = !{!2182, !2298, !2182, !5, !2087}
!8764 = !{!8765, !8766, !8767, !8768}
!8765 = !DILocalVariable(name: "exp", arg: 1, scope: !8761, file: !2042, line: 555, type: !2298)
!8766 = !DILocalVariable(name: "target", arg: 2, scope: !8761, file: !2042, line: 555, type: !2182)
!8767 = !DILocalVariable(name: "mode", arg: 3, scope: !8761, file: !2042, line: 555, type: !5)
!8768 = !DILocalVariable(name: "modifier", arg: 4, scope: !8761, file: !2042, line: 556, type: !2087)
!8769 = !DILocation(line: 0, scope: !8761)
!8770 = !DILocation(line: 558, column: 10, scope: !8761)
!8771 = !DILocation(line: 558, column: 3, scope: !8761)
!8772 = distinct !DISubprogram(name: "highest_pow2_factor_for_target", scope: !3, file: !3, line: 6756, type: !8773, scopeLine: 6757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!2252, !8575, !8575}
!8775 = !{!8776, !8777, !8778, !8779}
!8776 = !DILocalVariable(name: "target", arg: 1, scope: !8772, file: !3, line: 6756, type: !8575)
!8777 = !DILocalVariable(name: "exp", arg: 2, scope: !8772, file: !3, line: 6756, type: !8575)
!8778 = !DILocalVariable(name: "talign", scope: !8772, file: !3, line: 6758, type: !2252)
!8779 = !DILocalVariable(name: "factor", scope: !8772, file: !3, line: 6759, type: !2252)
!8780 = !DILocation(line: 0, scope: !8772)
!8781 = !DILocation(line: 6758, column: 35, scope: !8772)
!8782 = !DILocation(line: 6758, column: 57, scope: !8772)
!8783 = !DILocation(line: 6759, column: 35, scope: !8772)
!8784 = !DILocation(line: 6761, column: 10, scope: !8772)
!8785 = !DILocation(line: 6761, column: 3, scope: !8772)
!8786 = distinct !DISubprogram(name: "store_expr", scope: !3, file: !3, line: 4521, type: !8787, scopeLine: 4522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8789)
!8787 = !DISubroutineType(types: !8788)
!8788 = !{!2182, !2298, !2182, !2175, !2174}
!8789 = !{!8790, !8791, !8792, !8793, !8794, !8795, !8796, !8797, !8801, !8802, !8805, !8810, !8813, !8814, !8815, !8817, !8822, !8825, !8828, !8829, !8830, !8831, !8832}
!8790 = !DILocalVariable(name: "exp", arg: 1, scope: !8786, file: !3, line: 4521, type: !2298)
!8791 = !DILocalVariable(name: "target", arg: 2, scope: !8786, file: !3, line: 4521, type: !2182)
!8792 = !DILocalVariable(name: "call_param_p", arg: 3, scope: !8786, file: !3, line: 4521, type: !2175)
!8793 = !DILocalVariable(name: "nontemporal", arg: 4, scope: !8786, file: !3, line: 4521, type: !2174)
!8794 = !DILocalVariable(name: "temp", scope: !8786, file: !3, line: 4523, type: !2182)
!8795 = !DILocalVariable(name: "alt_rtl", scope: !8786, file: !3, line: 4524, type: !2182)
!8796 = !DILocalVariable(name: "loc", scope: !8786, file: !3, line: 4525, type: !2418)
!8797 = !DILocalVariable(name: "lab1", scope: !8798, file: !3, line: 4552, type: !2182)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 4546, column: 5)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 4545, column: 12)
!8800 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 4536, column: 7)
!8801 = !DILocalVariable(name: "lab2", scope: !8798, file: !3, line: 4552, type: !2182)
!8802 = !DILocalVariable(name: "inner_target", scope: !8803, file: !3, line: 4575, type: !2182)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 4574, column: 5)
!8804 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 4569, column: 12)
!8805 = !DILocalVariable(name: "ntype", scope: !8806, file: !3, line: 4593, type: !2298)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 4590, column: 6)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 4588, column: 8)
!8808 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 4587, column: 2)
!8809 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 4583, column: 11)
!8810 = !DILocalVariable(name: "exp_len", scope: !8811, file: !3, line: 4637, type: !2269)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 4635, column: 5)
!8812 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 4631, column: 12)
!8813 = !DILocalVariable(name: "str_copy_len", scope: !8811, file: !3, line: 4637, type: !2269)
!8814 = !DILocalVariable(name: "dest_mem", scope: !8811, file: !3, line: 4638, type: !2182)
!8815 = !DILocalVariable(name: "tmp_target", scope: !8816, file: !3, line: 4675, type: !2182)
!8816 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 4674, column: 5)
!8817 = !DILocalVariable(name: "unsignedp", scope: !8818, file: !3, line: 4732, type: !2175)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 4731, column: 2)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 4729, column: 11)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 4728, column: 5)
!8821 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 4715, column: 7)
!8822 = !DILocalVariable(name: "size", scope: !8823, file: !3, line: 4749, type: !2182)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 4744, column: 2)
!8824 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 4743, column: 16)
!8825 = !DILocalVariable(name: "pointer_mode", scope: !8826, file: !3, line: 4758, type: !5)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 4757, column: 6)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 4751, column: 8)
!8828 = !DILocalVariable(name: "address_mode", scope: !8826, file: !3, line: 4760, type: !5)
!8829 = !DILocalVariable(name: "copy_size", scope: !8826, file: !3, line: 4764, type: !2298)
!8830 = !DILocalVariable(name: "copy_size_rtx", scope: !8826, file: !3, line: 4768, type: !2182)
!8831 = !DILocalVariable(name: "label", scope: !8826, file: !3, line: 4772, type: !2182)
!8832 = !DILabel(scope: !8816, name: "normal_expr", file: !3, line: 4677)
!8833 = !DILocation(line: 0, scope: !8786)
!8834 = !DILocation(line: 4524, column: 3, scope: !8786)
!8835 = !DILocation(line: 4524, column: 7, scope: !8786)
!8836 = !DILocation(line: 4525, column: 20, scope: !8786)
!8837 = !DILocation(line: 4527, column: 7, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 4527, column: 7)
!8839 = !DILocation(line: 4527, column: 7, scope: !8786)
!8840 = !DILocation(line: 4532, column: 7, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 4528, column: 5)
!8842 = !DILocation(line: 4533, column: 25, scope: !8841)
!8843 = !DILocation(line: 4533, column: 7, scope: !8841)
!8844 = !DILocation(line: 4534, column: 7, scope: !8841)
!8845 = !DILocation(line: 4536, column: 23, scope: !8800)
!8846 = !DILocation(line: 4536, column: 7, scope: !8786)
!8847 = !DILocation(line: 4540, column: 20, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 4537, column: 5)
!8849 = !DILocation(line: 4540, column: 43, scope: !8848)
!8850 = !DILocation(line: 4541, column: 6, scope: !8848)
!8851 = !DILocation(line: 4540, column: 7, scope: !8848)
!8852 = !DILocation(line: 4542, column: 26, scope: !8848)
!8853 = !DILocation(line: 4542, column: 14, scope: !8848)
!8854 = !DILocation(line: 4542, column: 7, scope: !8848)
!8855 = !DILocation(line: 4545, column: 28, scope: !8799)
!8856 = !DILocation(line: 4545, column: 41, scope: !8799)
!8857 = !DILocation(line: 0, scope: !8804)
!8858 = !DILocation(line: 4569, column: 12, scope: !8804)
!8859 = !DILocation(line: 4545, column: 44, scope: !8799)
!8860 = !DILocation(line: 4545, column: 62, scope: !8799)
!8861 = !DILocation(line: 4545, column: 12, scope: !8800)
!8862 = !DILocation(line: 4552, column: 18, scope: !8798)
!8863 = !DILocation(line: 0, scope: !8798)
!8864 = !DILocation(line: 4552, column: 43, scope: !8798)
!8865 = !DILocation(line: 4554, column: 7, scope: !8798)
!8866 = !DILocation(line: 4555, column: 7, scope: !8798)
!8867 = !DILocation(line: 4556, column: 18, scope: !8798)
!8868 = !DILocation(line: 4556, column: 7, scope: !8798)
!8869 = !DILocation(line: 4557, column: 19, scope: !8798)
!8870 = !DILocation(line: 4557, column: 7, scope: !8798)
!8871 = !DILocation(line: 4559, column: 23, scope: !8798)
!8872 = !DILocation(line: 4559, column: 7, scope: !8798)
!8873 = !DILocation(line: 4560, column: 7, scope: !8798)
!8874 = !DILocation(line: 4561, column: 7, scope: !8798)
!8875 = !DILocation(line: 4562, column: 19, scope: !8798)
!8876 = !DILocation(line: 4562, column: 7, scope: !8798)
!8877 = !DILocation(line: 4564, column: 7, scope: !8798)
!8878 = !DILocation(line: 4565, column: 7, scope: !8798)
!8879 = !DILocation(line: 4569, column: 30, scope: !8804)
!8880 = !DILocation(line: 4569, column: 40, scope: !8804)
!8881 = !DILocation(line: 4569, column: 43, scope: !8804)
!8882 = !DILocation(line: 4569, column: 12, scope: !8799)
!8883 = !DILocation(line: 0, scope: !8803)
!8884 = !DILocation(line: 4583, column: 11, scope: !8809)
!8885 = !DILocation(line: 4584, column: 4, scope: !8809)
!8886 = !DILocation(line: 4584, column: 7, scope: !8809)
!8887 = !DILocation(line: 4584, column: 35, scope: !8809)
!8888 = !DILocation(line: 4585, column: 4, scope: !8809)
!8889 = !DILocation(line: 4585, column: 7, scope: !8809)
!8890 = !DILocation(line: 4586, column: 10, scope: !8809)
!8891 = !DILocation(line: 4586, column: 7, scope: !8809)
!8892 = !DILocation(line: 4583, column: 11, scope: !8803)
!8893 = !DILocation(line: 4588, column: 8, scope: !8807)
!8894 = !DILocation(line: 4589, column: 11, scope: !8807)
!8895 = !DILocation(line: 4589, column: 8, scope: !8807)
!8896 = !DILocation(line: 4588, column: 8, scope: !8808)
!8897 = !DILocation(line: 4595, column: 7, scope: !8806)
!8898 = !DILocation(line: 4594, column: 6, scope: !8806)
!8899 = !DILocation(line: 0, scope: !8806)
!8900 = !DILocation(line: 4596, column: 18, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 4596, column: 12)
!8902 = !DILocation(line: 4596, column: 12, scope: !8806)
!8903 = !DILocation(line: 4597, column: 28, scope: !8901)
!8904 = !DILocation(line: 4598, column: 6, scope: !8901)
!8905 = !DILocation(line: 4599, column: 6, scope: !8901)
!8906 = !DILocation(line: 4597, column: 11, scope: !8901)
!8907 = !DILocation(line: 4597, column: 3, scope: !8901)
!8908 = !DILocation(line: 4601, column: 14, scope: !8806)
!8909 = !DILocation(line: 4606, column: 8, scope: !8808)
!8910 = !DILocation(line: 4602, column: 6, scope: !8806)
!8911 = !DILocation(line: 4604, column: 50, scope: !8808)
!8912 = !DILocation(line: 4605, column: 8, scope: !8808)
!8913 = !DILocation(line: 4604, column: 33, scope: !8808)
!8914 = !DILocation(line: 4604, column: 10, scope: !8808)
!8915 = !DILocation(line: 4609, column: 19, scope: !8808)
!8916 = !DILocation(line: 4610, column: 2, scope: !8808)
!8917 = !DILocation(line: 4613, column: 6, scope: !8803)
!8918 = !DILocation(line: 4612, column: 14, scope: !8803)
!8919 = !DILocation(line: 4617, column: 11, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 4617, column: 11)
!8921 = !DILocation(line: 4617, column: 29, scope: !8920)
!8922 = !DILocation(line: 4617, column: 32, scope: !8920)
!8923 = !DILocation(line: 4617, column: 48, scope: !8920)
!8924 = !DILocation(line: 4617, column: 11, scope: !8803)
!8925 = !DILocation(line: 4619, column: 26, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 4618, column: 2)
!8927 = !DILocation(line: 4619, column: 45, scope: !8926)
!8928 = !DILocation(line: 4620, column: 11, scope: !8926)
!8929 = !DILocation(line: 4619, column: 11, scope: !8926)
!8930 = !DILocation(line: 4621, column: 26, scope: !8926)
!8931 = !DILocation(line: 4622, column: 12, scope: !8926)
!8932 = !DILocation(line: 4623, column: 12, scope: !8926)
!8933 = !DILocation(line: 4621, column: 11, scope: !8926)
!8934 = !DILocation(line: 4624, column: 2, scope: !8926)
!8935 = !DILocation(line: 4626, column: 21, scope: !8803)
!8936 = !DILocation(line: 4627, column: 7, scope: !8803)
!8937 = !DILocation(line: 4626, column: 7, scope: !8803)
!8938 = !DILocation(line: 4631, column: 28, scope: !8812)
!8939 = !DILocation(line: 4632, column: 9, scope: !8812)
!8940 = !DILocation(line: 4632, column: 5, scope: !8812)
!8941 = !DILocation(line: 4632, column: 25, scope: !8812)
!8942 = !DILocation(line: 4633, column: 8, scope: !8812)
!8943 = !DILocation(line: 4633, column: 33, scope: !8812)
!8944 = !DILocation(line: 4634, column: 5, scope: !8812)
!8945 = !DILocation(line: 4634, column: 8, scope: !8812)
!8946 = !DILocation(line: 4634, column: 36, scope: !8812)
!8947 = !DILocation(line: 4631, column: 12, scope: !8804)
!8948 = !DILocation(line: 4640, column: 17, scope: !8811)
!8949 = !DILocation(line: 0, scope: !8811)
!8950 = !DILocation(line: 4641, column: 19, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 4641, column: 11)
!8952 = !DILocation(line: 4641, column: 11, scope: !8811)
!8953 = !DILocation(line: 4644, column: 30, scope: !8811)
!8954 = !DILocation(line: 4644, column: 22, scope: !8811)
!8955 = !DILocation(line: 4645, column: 26, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 4645, column: 11)
!8957 = !DILocation(line: 4645, column: 51, scope: !8956)
!8958 = !DILocation(line: 4645, column: 24, scope: !8956)
!8959 = !DILocation(line: 4645, column: 11, scope: !8811)
!8960 = !DILocation(line: 4648, column: 22, scope: !8811)
!8961 = !DILocation(line: 4651, column: 17, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 4650, column: 2)
!8963 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 4649, column: 11)
!8964 = !DILocation(line: 4652, column: 17, scope: !8962)
!8965 = !DILocation(line: 4654, column: 22, scope: !8811)
!8966 = !DILocation(line: 4657, column: 5, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 4655, column: 11)
!8968 = !DILocation(line: 4655, column: 12, scope: !8967)
!8969 = !DILocation(line: 4655, column: 11, scope: !8811)
!8970 = !DILocation(line: 4665, column: 7, scope: !8811)
!8971 = !DILocation(line: 4666, column: 7, scope: !8811)
!8972 = !DILocation(line: 4662, column: 18, scope: !8811)
!8973 = !DILocation(line: 4667, column: 11, scope: !8811)
!8974 = !DILocation(line: 4668, column: 17, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 4667, column: 11)
!8976 = !DILocation(line: 4669, column: 10, scope: !8975)
!8977 = !DILocation(line: 4668, column: 2, scope: !8975)
!8978 = !DILocation(line: 4677, column: 3, scope: !8816)
!8979 = !DILocation(line: 4680, column: 20, scope: !8816)
!8980 = !DILocation(line: 0, scope: !8816)
!8981 = !DILocation(line: 4681, column: 49, scope: !8816)
!8982 = !DILocation(line: 4682, column: 12, scope: !8816)
!8983 = !DILocation(line: 4681, column: 14, scope: !8816)
!8984 = !DILocation(line: 4691, column: 7, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 4691, column: 7)
!8986 = !DILocation(line: 4691, column: 25, scope: !8985)
!8987 = !DILocation(line: 4691, column: 28, scope: !8985)
!8988 = !DILocation(line: 4691, column: 44, scope: !8985)
!8989 = !DILocation(line: 4692, column: 7, scope: !8985)
!8990 = !DILocation(line: 4692, column: 10, scope: !8985)
!8991 = !DILocation(line: 4692, column: 26, scope: !8985)
!8992 = !DILocation(line: 4693, column: 7, scope: !8985)
!8993 = !DILocation(line: 4693, column: 10, scope: !8985)
!8994 = !DILocation(line: 4693, column: 31, scope: !8985)
!8995 = !DILocation(line: 4693, column: 28, scope: !8985)
!8996 = !DILocation(line: 4691, column: 7, scope: !8786)
!8997 = !DILocation(line: 4694, column: 27, scope: !8985)
!8998 = !DILocation(line: 4694, column: 46, scope: !8985)
!8999 = !DILocation(line: 4695, column: 12, scope: !8985)
!9000 = !DILocation(line: 4694, column: 12, scope: !8985)
!9001 = !DILocation(line: 4694, column: 5, scope: !8985)
!9002 = !DILocation(line: 4715, column: 10, scope: !8821)
!9003 = !DILocation(line: 4716, column: 8, scope: !8821)
!9004 = !DILocation(line: 4716, column: 17, scope: !8821)
!9005 = !DILocation(line: 4716, column: 27, scope: !8821)
!9006 = !DILocation(line: 4716, column: 31, scope: !8821)
!9007 = !DILocation(line: 4717, column: 10, scope: !8821)
!9008 = !DILocation(line: 4717, column: 13, scope: !8821)
!9009 = !DILocation(line: 4718, column: 7, scope: !8821)
!9010 = !DILocation(line: 4718, column: 10, scope: !8821)
!9011 = !DILocation(line: 4718, column: 26, scope: !8821)
!9012 = !DILocation(line: 4722, column: 7, scope: !8821)
!9013 = !DILocation(line: 4722, column: 12, scope: !8821)
!9014 = !DILocation(line: 4722, column: 20, scope: !8821)
!9015 = !DILocation(line: 4722, column: 23, scope: !8821)
!9016 = !DILocation(line: 4727, column: 7, scope: !8821)
!9017 = !DILocation(line: 4727, column: 10, scope: !8821)
!9018 = !DILocation(line: 4727, column: 29, scope: !8821)
!9019 = !DILocation(line: 4727, column: 26, scope: !8821)
!9020 = !DILocation(line: 4715, column: 7, scope: !8786)
!9021 = !DILocation(line: 4729, column: 11, scope: !8819)
!9022 = !DILocation(line: 4729, column: 30, scope: !8819)
!9023 = !DILocation(line: 4729, column: 27, scope: !8819)
!9024 = !DILocation(line: 4730, column: 4, scope: !8819)
!9025 = !DILocation(line: 4743, column: 16, scope: !8824)
!9026 = !DILocation(line: 4730, column: 7, scope: !8819)
!9027 = !DILocation(line: 4730, column: 23, scope: !8819)
!9028 = !DILocation(line: 4729, column: 11, scope: !8820)
!9029 = !DILocation(line: 4732, column: 20, scope: !8818)
!9030 = !DILocation(line: 0, scope: !8818)
!9031 = !DILocation(line: 4733, column: 8, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 4733, column: 8)
!9033 = !DILocation(line: 4733, column: 26, scope: !9032)
!9034 = !DILocation(line: 4734, column: 6, scope: !9032)
!9035 = !DILocation(line: 4734, column: 25, scope: !9032)
!9036 = !DILocation(line: 4733, column: 8, scope: !8818)
!9037 = !DILocation(line: 4735, column: 37, scope: !9032)
!9038 = !DILocation(line: 4736, column: 10, scope: !9032)
!9039 = !DILocation(line: 4735, column: 6, scope: !9032)
!9040 = !DILocation(line: 4740, column: 6, scope: !9032)
!9041 = !DILocation(line: 4743, column: 32, scope: !8824)
!9042 = !DILocation(line: 4743, column: 43, scope: !8824)
!9043 = !DILocation(line: 4743, column: 46, scope: !8824)
!9044 = !DILocation(line: 4743, column: 62, scope: !8824)
!9045 = !DILocation(line: 4743, column: 16, scope: !8819)
!9046 = !DILocation(line: 4749, column: 15, scope: !8823)
!9047 = !DILocation(line: 0, scope: !8823)
!9048 = !DILocation(line: 4751, column: 8, scope: !8827)
!9049 = !DILocation(line: 4752, column: 8, scope: !8827)
!9050 = !DILocation(line: 4752, column: 11, scope: !8827)
!9051 = !DILocation(line: 4752, column: 27, scope: !8827)
!9052 = !DILocation(line: 4752, column: 25, scope: !8827)
!9053 = !DILocation(line: 4751, column: 8, scope: !8823)
!9054 = !DILocation(line: 4754, column: 10, scope: !8827)
!9055 = !DILocation(line: 4753, column: 6, scope: !8827)
!9056 = !DILocation(line: 4759, column: 24, scope: !8826)
!9057 = !DILocation(line: 4759, column: 38, scope: !8826)
!9058 = !DILocation(line: 4759, column: 5, scope: !8826)
!9059 = !DILocation(line: 0, scope: !8826)
!9060 = !DILocation(line: 4761, column: 24, scope: !8826)
!9061 = !DILocation(line: 4761, column: 38, scope: !8826)
!9062 = !DILocation(line: 4761, column: 5, scope: !8826)
!9063 = !DILocation(line: 4766, column: 18, scope: !8826)
!9064 = !DILocation(line: 4766, column: 7, scope: !8826)
!9065 = !DILocation(line: 4767, column: 7, scope: !8826)
!9066 = !DILocation(line: 4765, column: 5, scope: !8826)
!9067 = !DILocation(line: 4769, column: 5, scope: !8826)
!9068 = !DILocation(line: 4776, column: 13, scope: !8826)
!9069 = !DILocation(line: 4775, column: 24, scope: !8826)
!9070 = !DILocation(line: 4778, column: 12, scope: !8826)
!9071 = !DILocation(line: 4777, column: 8, scope: !8826)
!9072 = !DILocation(line: 4783, column: 12, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 4783, column: 12)
!9074 = !DILocation(line: 4783, column: 12, scope: !8826)
!9075 = !DILocation(line: 4785, column: 34, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 4784, column: 3)
!9077 = !DILocation(line: 4785, column: 33, scope: !9076)
!9078 = !DILocation(line: 4785, column: 12, scope: !9076)
!9079 = !DILocation(line: 4786, column: 14, scope: !9076)
!9080 = !DILocation(line: 4788, column: 3, scope: !9076)
!9081 = !DILocation(line: 4791, column: 26, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 4790, column: 3)
!9083 = !DILocation(line: 4791, column: 12, scope: !9082)
!9084 = !DILocation(line: 4795, column: 9, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 4795, column: 9)
!9086 = !DILocation(line: 4795, column: 34, scope: !9085)
!9087 = !DILocation(line: 4795, column: 9, scope: !9082)
!9088 = !DILocation(line: 4798, column: 12, scope: !9085)
!9089 = !DILocation(line: 4796, column: 23, scope: !9085)
!9090 = !DILocation(line: 4796, column: 7, scope: !9085)
!9091 = !DILocation(line: 4801, column: 9, scope: !9082)
!9092 = !DILocation(line: 4800, column: 14, scope: !9082)
!9093 = !DILocation(line: 4802, column: 13, scope: !9082)
!9094 = !DILocation(line: 4803, column: 36, scope: !9082)
!9095 = !DILocation(line: 4804, column: 9, scope: !9082)
!9096 = !DILocation(line: 4803, column: 5, scope: !9082)
!9097 = !DILocation(line: 0, scope: !9073)
!9098 = !DILocation(line: 4807, column: 20, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 4807, column: 12)
!9100 = !DILocation(line: 4807, column: 17, scope: !9099)
!9101 = !DILocation(line: 4807, column: 12, scope: !8826)
!9102 = !DILocation(line: 4808, column: 3, scope: !9099)
!9103 = !DILocation(line: 4810, column: 12, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 4810, column: 12)
!9105 = !DILocation(line: 4810, column: 12, scope: !8826)
!9106 = !DILocation(line: 4811, column: 3, scope: !9104)
!9107 = !DILocation(line: 4816, column: 16, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 4816, column: 16)
!9109 = !DILocation(line: 4816, column: 34, scope: !9108)
!9110 = !DILocation(line: 4816, column: 16, scope: !8824)
!9111 = !DILocation(line: 4817, column: 33, scope: !9108)
!9112 = !DILocation(line: 4818, column: 5, scope: !9108)
!9113 = !DILocation(line: 4817, column: 2, scope: !9108)
!9114 = !DILocation(line: 4819, column: 16, scope: !9108)
!9115 = !DILocation(line: 4820, column: 33, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 4819, column: 16)
!9117 = !DILocation(line: 4821, column: 6, scope: !9116)
!9118 = !DILocation(line: 4820, column: 2, scope: !9116)
!9119 = !DILocation(line: 4824, column: 9, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 4823, column: 16)
!9121 = !DILocation(line: 4824, column: 12, scope: !9120)
!9122 = !DILocation(line: 4823, column: 16, scope: !9116)
!9123 = !DILocation(line: 4830, column: 11, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 4829, column: 2)
!9125 = !DILocation(line: 4831, column: 13, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 4831, column: 8)
!9127 = !DILocation(line: 4831, column: 8, scope: !9124)
!9128 = !DILocation(line: 4832, column: 6, scope: !9126)
!9129 = !DILocation(line: 4837, column: 1, scope: !8786)
!9130 = distinct !DISubprogram(name: "optimize_bitfield_assignment_op", scope: !3, file: !3, line: 4044, type: !9131, scopeLine: 4048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!2174, !2252, !2252, !5, !2182, !2298, !2298}
!9133 = !{!9134, !9135, !9136, !9137, !9138, !9139, !9140, !9141, !9142, !9143, !9144, !9145, !9146, !9160, !9163}
!9134 = !DILocalVariable(name: "bitsize", arg: 1, scope: !9130, file: !3, line: 4044, type: !2252)
!9135 = !DILocalVariable(name: "bitpos", arg: 2, scope: !9130, file: !3, line: 4045, type: !2252)
!9136 = !DILocalVariable(name: "mode1", arg: 3, scope: !9130, file: !3, line: 4046, type: !5)
!9137 = !DILocalVariable(name: "str_rtx", arg: 4, scope: !9130, file: !3, line: 4046, type: !2182)
!9138 = !DILocalVariable(name: "to", arg: 5, scope: !9130, file: !3, line: 4047, type: !2298)
!9139 = !DILocalVariable(name: "src", arg: 6, scope: !9130, file: !3, line: 4047, type: !2298)
!9140 = !DILocalVariable(name: "str_mode", scope: !9130, file: !3, line: 4049, type: !5)
!9141 = !DILocalVariable(name: "str_bitsize", scope: !9130, file: !3, line: 4050, type: !7)
!9142 = !DILocalVariable(name: "op0", scope: !9130, file: !3, line: 4051, type: !2298)
!9143 = !DILocalVariable(name: "op1", scope: !9130, file: !3, line: 4051, type: !2298)
!9144 = !DILocalVariable(name: "value", scope: !9130, file: !3, line: 4052, type: !2182)
!9145 = !DILocalVariable(name: "result", scope: !9130, file: !3, line: 4052, type: !2182)
!9146 = !DILocalVariable(name: "binop", scope: !9130, file: !3, line: 4053, type: !9147)
!9147 = !DIDerivedType(tag: DW_TAG_typedef, name: "optab", file: !4333, line: 55, baseType: !9148)
!9148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9149, size: 64)
!9149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_d", file: !4333, line: 46, size: 3072, elements: !9150)
!9150 = !{!9151, !9152, !9153, !9154, !9158}
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !9149, file: !4333, line: 48, baseType: !1898, size: 32)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_basename", scope: !9149, file: !4333, line: 49, baseType: !2180, size: 64, offset: 64)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_suffix", scope: !9149, file: !4333, line: 50, baseType: !2178, size: 8, offset: 128)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_gen", scope: !9149, file: !4333, line: 51, baseType: !9155, size: 64, offset: 192)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9156, size: 64)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{null, !9148, !2180, !2178, !5}
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !9149, file: !4333, line: 53, baseType: !9159, size: 2784, offset: 256)
!9159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4345, size: 2784, elements: !3633)
!9160 = !DILocalVariable(name: "offset1", scope: !9161, file: !3, line: 4076, type: !2252)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 4075, column: 5)
!9162 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4074, column: 7)
!9163 = !DILocalVariable(name: "mask", scope: !9164, file: !3, line: 4170, type: !2182)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 4169, column: 2)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4168, column: 11)
!9166 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4107, column: 5)
!9167 = !DILocation(line: 0, scope: !9130)
!9168 = !DILocation(line: 4049, column: 32, scope: !9130)
!9169 = !DILocation(line: 4050, column: 30, scope: !9130)
!9170 = !DILocation(line: 4055, column: 13, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4055, column: 7)
!9172 = !DILocation(line: 4056, column: 18, scope: !9171)
!9173 = !DILocation(line: 4056, column: 7, scope: !9171)
!9174 = !DILocation(line: 4057, column: 22, scope: !9171)
!9175 = !DILocation(line: 4058, column: 10, scope: !9171)
!9176 = !DILocation(line: 4059, column: 7, scope: !9171)
!9177 = !DILocation(line: 4059, column: 10, scope: !9171)
!9178 = !DILocation(line: 4055, column: 7, scope: !9130)
!9179 = !DILocation(line: 4062, column: 3, scope: !9130)
!9180 = !DILocation(line: 4063, column: 8, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4063, column: 7)
!9182 = !DILocation(line: 4064, column: 7, scope: !9181)
!9183 = !DILocation(line: 4064, column: 10, scope: !9181)
!9184 = !DILocation(line: 4064, column: 38, scope: !9181)
!9185 = !DILocation(line: 4063, column: 7, scope: !9130)
!9186 = !DILocation(line: 4067, column: 9, scope: !9130)
!9187 = !DILocation(line: 4068, column: 9, scope: !9130)
!9188 = !DILocation(line: 4069, column: 3, scope: !9130)
!9189 = !DILocation(line: 4071, column: 8, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4071, column: 7)
!9191 = !DILocation(line: 4071, column: 7, scope: !9130)
!9192 = !DILocation(line: 4074, column: 7, scope: !9162)
!9193 = !DILocation(line: 4074, column: 7, scope: !9130)
!9194 = !DILocation(line: 4078, column: 28, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 4078, column: 11)
!9196 = !DILocation(line: 4080, column: 33, scope: !9161)
!9197 = !DILocation(line: 4080, column: 42, scope: !9161)
!9198 = !DILocation(line: 4081, column: 5, scope: !9161)
!9199 = !DILocation(line: 4080, column: 18, scope: !9161)
!9200 = !DILocation(line: 4082, column: 20, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 4082, column: 11)
!9202 = !DILocation(line: 4082, column: 11, scope: !9161)
!9203 = !DILocation(line: 4084, column: 21, scope: !9161)
!9204 = !DILocation(line: 0, scope: !9161)
!9205 = !DILocation(line: 4087, column: 17, scope: !9161)
!9206 = !DILocation(line: 4087, column: 14, scope: !9161)
!9207 = !DILocation(line: 4088, column: 26, scope: !9161)
!9208 = !DILocation(line: 4088, column: 36, scope: !9161)
!9209 = !DILocation(line: 4089, column: 17, scope: !9161)
!9210 = !DILocation(line: 4090, column: 5, scope: !9162)
!9211 = !DILocation(line: 4091, column: 13, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 4091, column: 12)
!9213 = !DILocation(line: 4091, column: 29, scope: !9212)
!9214 = !DILocation(line: 4091, column: 51, scope: !9212)
!9215 = !DILocation(line: 4091, column: 12, scope: !9162)
!9216 = !DILocation(line: 4050, column: 16, scope: !9130)
!9217 = !DILocation(line: 4096, column: 18, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4096, column: 7)
!9219 = !DILocation(line: 4096, column: 15, scope: !9218)
!9220 = !DILocation(line: 4096, column: 7, scope: !9130)
!9221 = !DILocation(line: 4100, column: 14, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4100, column: 7)
!9223 = !DILocation(line: 4100, column: 24, scope: !9222)
!9224 = !DILocation(line: 4100, column: 7, scope: !9130)
!9225 = !DILocation(line: 4106, column: 11, scope: !9130)
!9226 = !DILocation(line: 4106, column: 3, scope: !9130)
!9227 = !DILocation(line: 4116, column: 28, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4116, column: 11)
!9229 = !DILocation(line: 4117, column: 4, scope: !9228)
!9230 = !DILocation(line: 4117, column: 16, scope: !9228)
!9231 = !DILocation(line: 4117, column: 21, scope: !9228)
!9232 = !DILocation(line: 4117, column: 24, scope: !9228)
!9233 = !DILocation(line: 4117, column: 40, scope: !9228)
!9234 = !DILocation(line: 4116, column: 11, scope: !9166)
!9235 = !DILocation(line: 4120, column: 15, scope: !9166)
!9236 = !DILocation(line: 4122, column: 9, scope: !9166)
!9237 = !DILocation(line: 4123, column: 9, scope: !9166)
!9238 = !DILocation(line: 4121, column: 15, scope: !9166)
!9239 = !DILocation(line: 4127, column: 11, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4127, column: 11)
!9241 = !DILocation(line: 4127, column: 11, scope: !9166)
!9242 = !DILocation(line: 4129, column: 14, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 4128, column: 2)
!9244 = !DILocation(line: 4130, column: 4, scope: !9243)
!9245 = !DILocation(line: 4131, column: 4, scope: !9243)
!9246 = !DILocation(line: 4132, column: 2, scope: !9243)
!9247 = !DILocation(line: 4134, column: 15, scope: !9166)
!9248 = !DILocation(line: 4134, column: 31, scope: !9166)
!9249 = !DILocation(line: 4135, column: 19, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4135, column: 11)
!9251 = !DILocation(line: 4135, column: 24, scope: !9250)
!9252 = !DILocation(line: 4135, column: 34, scope: !9250)
!9253 = !DILocation(line: 4135, column: 44, scope: !9250)
!9254 = !DILocation(line: 4135, column: 11, scope: !9166)
!9255 = !DILocation(line: 4137, column: 41, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 4136, column: 2)
!9257 = !DILocation(line: 4137, column: 12, scope: !9256)
!9258 = !DILocation(line: 4139, column: 2, scope: !9256)
!9259 = !DILocation(line: 0, scope: !9166)
!9260 = !DILocation(line: 4141, column: 8, scope: !9166)
!9261 = !DILocation(line: 4140, column: 15, scope: !9166)
!9262 = !DILocation(line: 4143, column: 16, scope: !9166)
!9263 = !DILocation(line: 4145, column: 18, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4145, column: 11)
!9265 = !DILocation(line: 4145, column: 11, scope: !9166)
!9266 = !DILocation(line: 4146, column: 2, scope: !9264)
!9267 = !DILocation(line: 4151, column: 11, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4151, column: 11)
!9269 = !DILocation(line: 4151, column: 27, scope: !9268)
!9270 = !DILocation(line: 4151, column: 11, scope: !9166)
!9271 = !DILocation(line: 4153, column: 43, scope: !9166)
!9272 = !DILocation(line: 4153, column: 15, scope: !9166)
!9273 = !DILocation(line: 4154, column: 30, scope: !9166)
!9274 = !DILocation(line: 4155, column: 9, scope: !9166)
!9275 = !DILocation(line: 4156, column: 9, scope: !9166)
!9276 = !DILocation(line: 4154, column: 15, scope: !9166)
!9277 = !DILocation(line: 4160, column: 11, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4160, column: 11)
!9279 = !DILocation(line: 4160, column: 11, scope: !9166)
!9280 = !DILocation(line: 4162, column: 14, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 4161, column: 2)
!9282 = !DILocation(line: 4163, column: 4, scope: !9281)
!9283 = !DILocation(line: 4164, column: 4, scope: !9281)
!9284 = !DILocation(line: 0, scope: !9165)
!9285 = !DILocation(line: 4168, column: 31, scope: !9165)
!9286 = !DILocation(line: 4165, column: 2, scope: !9281)
!9287 = !DILocation(line: 4167, column: 15, scope: !9166)
!9288 = !DILocation(line: 4167, column: 31, scope: !9166)
!9289 = !DILocation(line: 4168, column: 28, scope: !9165)
!9290 = !DILocation(line: 4168, column: 11, scope: !9166)
!9291 = !DILocation(line: 4170, column: 15, scope: !9164)
!9292 = !DILocation(line: 0, scope: !9164)
!9293 = !DILocation(line: 4172, column: 24, scope: !9164)
!9294 = !DILocation(line: 4172, column: 12, scope: !9164)
!9295 = !DILocation(line: 4175, column: 42, scope: !9166)
!9296 = !DILocation(line: 4174, column: 2, scope: !9164)
!9297 = !DILocation(line: 4176, column: 8, scope: !9166)
!9298 = !DILocation(line: 4175, column: 15, scope: !9166)
!9299 = !DILocation(line: 4178, column: 30, scope: !9166)
!9300 = !DILocation(line: 4178, column: 16, scope: !9166)
!9301 = !DILocation(line: 4180, column: 18, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 4180, column: 11)
!9303 = !DILocation(line: 4180, column: 11, scope: !9166)
!9304 = !DILocation(line: 4181, column: 2, scope: !9302)
!9305 = !DILocation(line: 4189, column: 1, scope: !9130)
!9306 = distinct !DISubprogram(name: "store_field", scope: !3, file: !3, line: 5766, type: !9307, scopeLine: 5769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9309)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{!2182, !2182, !2269, !2269, !5, !2298, !2298, !3193, !2174}
!9309 = !{!9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9321, !9322, !9325, !9326, !9329, !9332}
!9310 = !DILocalVariable(name: "target", arg: 1, scope: !9306, file: !3, line: 5766, type: !2182)
!9311 = !DILocalVariable(name: "bitsize", arg: 2, scope: !9306, file: !3, line: 5766, type: !2269)
!9312 = !DILocalVariable(name: "bitpos", arg: 3, scope: !9306, file: !3, line: 5766, type: !2269)
!9313 = !DILocalVariable(name: "mode", arg: 4, scope: !9306, file: !3, line: 5767, type: !5)
!9314 = !DILocalVariable(name: "exp", arg: 5, scope: !9306, file: !3, line: 5767, type: !2298)
!9315 = !DILocalVariable(name: "type", arg: 6, scope: !9306, file: !3, line: 5767, type: !2298)
!9316 = !DILocalVariable(name: "alias_set", arg: 7, scope: !9306, file: !3, line: 5768, type: !3193)
!9317 = !DILocalVariable(name: "nontemporal", arg: 8, scope: !9306, file: !3, line: 5768, type: !2174)
!9318 = !DILocalVariable(name: "object", scope: !9319, file: !3, line: 5793, type: !2182)
!9319 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 5792, column: 5)
!9320 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 5790, column: 7)
!9321 = !DILocalVariable(name: "blk_object", scope: !9319, file: !3, line: 5794, type: !2182)
!9322 = !DILocalVariable(name: "temp", scope: !9323, file: !3, line: 5840, type: !2182)
!9323 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 5839, column: 5)
!9324 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 5820, column: 7)
!9325 = !DILocalVariable(name: "nop_def", scope: !9323, file: !3, line: 5841, type: !2762)
!9326 = !DILocalVariable(name: "type", scope: !9327, file: !3, line: 5851, type: !2298)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 5850, column: 2)
!9328 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 5849, column: 11)
!9329 = !DILocalVariable(name: "op", scope: !9330, file: !3, line: 5856, type: !2298)
!9330 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 5855, column: 6)
!9331 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 5852, column: 8)
!9332 = !DILocalVariable(name: "to_rtx", scope: !9333, file: !3, line: 5914, type: !2182)
!9333 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 5912, column: 5)
!9334 = !DILocation(line: 0, scope: !9306)
!9335 = !DILocation(line: 5770, column: 7, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 5770, column: 7)
!9337 = !DILocation(line: 5770, column: 23, scope: !9336)
!9338 = !DILocation(line: 5770, column: 7, scope: !9306)
!9339 = !DILocation(line: 5771, column: 12, scope: !9336)
!9340 = !DILocation(line: 5771, column: 5, scope: !9336)
!9341 = !DILocation(line: 5775, column: 15, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 5775, column: 7)
!9343 = !DILocation(line: 5775, column: 7, scope: !9306)
!9344 = !DILocation(line: 5776, column: 30, scope: !9342)
!9345 = !DILocation(line: 5776, column: 12, scope: !9342)
!9346 = !DILocation(line: 5776, column: 5, scope: !9342)
!9347 = !DILocation(line: 5790, column: 12, scope: !9320)
!9348 = !DILocation(line: 5791, column: 7, scope: !9320)
!9349 = !DILocation(line: 0, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 5808, column: 7)
!9351 = !DILocation(line: 5808, column: 7, scope: !9350)
!9352 = !DILocation(line: 5791, column: 11, scope: !9320)
!9353 = !DILocation(line: 5791, column: 26, scope: !9320)
!9354 = !DILocation(line: 5791, column: 47, scope: !9320)
!9355 = !DILocation(line: 5790, column: 7, scope: !9306)
!9356 = !DILocation(line: 5793, column: 20, scope: !9319)
!9357 = !DILocation(line: 0, scope: !9319)
!9358 = !DILocation(line: 5794, column: 24, scope: !9319)
!9359 = !DILocation(line: 5796, column: 38, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 5796, column: 11)
!9361 = !DILocation(line: 5796, column: 19, scope: !9360)
!9362 = !DILocation(line: 5796, column: 11, scope: !9319)
!9363 = !DILocation(line: 5797, column: 2, scope: !9360)
!9364 = !DILocation(line: 5799, column: 7, scope: !9319)
!9365 = !DILocation(line: 5802, column: 7, scope: !9319)
!9366 = !DILocation(line: 5925, column: 1, scope: !9306)
!9367 = !DILocation(line: 5808, column: 25, scope: !9350)
!9368 = !DILocation(line: 5808, column: 7, scope: !9306)
!9369 = !DILocation(line: 5812, column: 7, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 5809, column: 5)
!9371 = !DILocation(line: 5813, column: 14, scope: !9370)
!9372 = !DILocation(line: 5813, column: 7, scope: !9370)
!9373 = !DILocation(line: 5821, column: 7, scope: !9324)
!9374 = !DILocation(line: 5821, column: 32, scope: !9324)
!9375 = !DILocation(line: 5822, column: 4, scope: !9324)
!9376 = !DILocation(line: 5822, column: 7, scope: !9324)
!9377 = !DILocation(line: 5822, column: 29, scope: !9324)
!9378 = !DILocation(line: 5823, column: 4, scope: !9324)
!9379 = !DILocation(line: 5823, column: 29, scope: !9324)
!9380 = !DILocation(line: 5824, column: 7, scope: !9324)
!9381 = !DILocation(line: 5824, column: 10, scope: !9324)
!9382 = !DILocation(line: 5825, column: 7, scope: !9324)
!9383 = !DILocation(line: 5825, column: 28, scope: !9324)
!9384 = !DILocation(line: 5828, column: 7, scope: !9324)
!9385 = !DILocation(line: 5829, column: 4, scope: !9324)
!9386 = !DILocation(line: 5829, column: 11, scope: !9324)
!9387 = !DILocation(line: 5829, column: 32, scope: !9324)
!9388 = !DILocation(line: 5829, column: 30, scope: !9324)
!9389 = !DILocation(line: 5830, column: 3, scope: !9324)
!9390 = !DILocation(line: 5830, column: 15, scope: !9324)
!9391 = !DILocation(line: 5831, column: 9, scope: !9324)
!9392 = !DILocation(line: 5832, column: 35, scope: !9324)
!9393 = !DILocation(line: 5836, column: 7, scope: !9324)
!9394 = !DILocation(line: 5836, column: 19, scope: !9324)
!9395 = !DILocation(line: 5837, column: 4, scope: !9324)
!9396 = !DILocation(line: 5837, column: 7, scope: !9324)
!9397 = !DILocation(line: 5837, column: 47, scope: !9324)
!9398 = !DILocation(line: 5838, column: 4, scope: !9324)
!9399 = !DILocation(line: 5838, column: 7, scope: !9324)
!9400 = !DILocation(line: 5838, column: 63, scope: !9324)
!9401 = !DILocation(line: 5820, column: 7, scope: !9306)
!9402 = !DILocation(line: 5848, column: 17, scope: !9323)
!9403 = !DILocation(line: 0, scope: !9323)
!9404 = !DILocation(line: 5849, column: 11, scope: !9328)
!9405 = !DILocation(line: 5849, column: 11, scope: !9323)
!9406 = !DILocation(line: 5851, column: 16, scope: !9327)
!9407 = !DILocation(line: 0, scope: !9327)
!9408 = !DILocation(line: 5852, column: 8, scope: !9331)
!9409 = !DILocation(line: 5853, column: 8, scope: !9331)
!9410 = !DILocation(line: 5853, column: 11, scope: !9331)
!9411 = !DILocation(line: 5853, column: 35, scope: !9331)
!9412 = !DILocation(line: 5853, column: 33, scope: !9331)
!9413 = !DILocation(line: 5854, column: 8, scope: !9331)
!9414 = !DILocation(line: 5854, column: 22, scope: !9331)
!9415 = !DILocation(line: 5854, column: 19, scope: !9331)
!9416 = !DILocation(line: 5852, column: 8, scope: !9327)
!9417 = !DILocation(line: 5856, column: 18, scope: !9330)
!9418 = !DILocation(line: 0, scope: !9330)
!9419 = !DILocation(line: 5857, column: 15, scope: !9330)
!9420 = !DILocation(line: 5858, column: 12, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 5858, column: 12)
!9422 = !DILocation(line: 5858, column: 35, scope: !9421)
!9423 = !DILocation(line: 5858, column: 38, scope: !9421)
!9424 = !DILocation(line: 5858, column: 60, scope: !9421)
!9425 = !DILocation(line: 5858, column: 12, scope: !9330)
!9426 = !DILocation(line: 5863, column: 14, scope: !9323)
!9427 = !DILocation(line: 5879, column: 28, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 5879, column: 11)
!9429 = !DILocation(line: 5880, column: 15, scope: !9428)
!9430 = !DILocation(line: 5880, column: 12, scope: !9428)
!9431 = !DILocation(line: 5879, column: 11, scope: !9323)
!9432 = !DILocation(line: 5881, column: 30, scope: !9428)
!9433 = !DILocation(line: 5881, column: 9, scope: !9428)
!9434 = !DILocation(line: 5881, column: 2, scope: !9428)
!9435 = !DILocation(line: 5887, column: 11, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 5887, column: 11)
!9437 = !DILocation(line: 5887, column: 27, scope: !9436)
!9438 = !DILocation(line: 5888, column: 4, scope: !9436)
!9439 = !DILocation(line: 5888, column: 8, scope: !9436)
!9440 = !DILocation(line: 5888, column: 26, scope: !9436)
!9441 = !DILocation(line: 5889, column: 8, scope: !9436)
!9442 = !DILocation(line: 5894, column: 4, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 5893, column: 2)
!9444 = !DILocation(line: 5889, column: 12, scope: !9436)
!9445 = !DILocation(line: 5890, column: 5, scope: !9436)
!9446 = !DILocation(line: 5890, column: 8, scope: !9436)
!9447 = !DILocation(line: 5890, column: 43, scope: !9436)
!9448 = !DILocation(line: 5891, column: 5, scope: !9436)
!9449 = !DILocation(line: 5897, column: 13, scope: !9443)
!9450 = !DILocation(line: 5899, column: 7, scope: !9443)
!9451 = !DILocation(line: 5898, column: 4, scope: !9443)
!9452 = !DILocation(line: 5903, column: 11, scope: !9443)
!9453 = !DILocation(line: 5903, column: 4, scope: !9443)
!9454 = !DILocation(line: 5907, column: 7, scope: !9323)
!9455 = !DILocation(line: 5909, column: 14, scope: !9323)
!9456 = !DILocation(line: 5909, column: 7, scope: !9323)
!9457 = !DILocation(line: 5914, column: 20, scope: !9333)
!9458 = !DILocation(line: 0, scope: !9333)
!9459 = !DILocation(line: 5916, column: 18, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 5916, column: 11)
!9461 = !DILocation(line: 5916, column: 11, scope: !9333)
!9462 = !DILocation(line: 5917, column: 11, scope: !9460)
!9463 = !DILocation(line: 5917, column: 2, scope: !9460)
!9464 = !DILocation(line: 5919, column: 7, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 5919, column: 7)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 5919, column: 7)
!9467 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 5919, column: 7)
!9468 = !DILocation(line: 5920, column: 12, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 5920, column: 11)
!9470 = !DILocation(line: 5920, column: 42, scope: !9469)
!9471 = !DILocation(line: 5920, column: 45, scope: !9469)
!9472 = !DILocation(line: 5920, column: 11, scope: !9333)
!9473 = !DILocation(line: 5921, column: 2, scope: !9469)
!9474 = !DILocation(line: 5923, column: 14, scope: !9333)
!9475 = distinct !DISubprogram(name: "emit_storent_insn", scope: !3, file: !3, line: 4476, type: !9476, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!2174, !2182, !2182}
!9478 = !{!9479, !9480, !9481, !9482, !9483, !9484}
!9479 = !DILocalVariable(name: "to", arg: 1, scope: !9475, file: !3, line: 4476, type: !2182)
!9480 = !DILocalVariable(name: "from", arg: 2, scope: !9475, file: !3, line: 4476, type: !2182)
!9481 = !DILocalVariable(name: "mode", scope: !9475, file: !3, line: 4478, type: !5)
!9482 = !DILocalVariable(name: "imode", scope: !9475, file: !3, line: 4478, type: !5)
!9483 = !DILocalVariable(name: "code", scope: !9475, file: !3, line: 4479, type: !384)
!9484 = !DILocalVariable(name: "pattern", scope: !9475, file: !3, line: 4480, type: !2182)
!9485 = !DILocation(line: 0, scope: !9475)
!9486 = !DILocation(line: 4478, column: 28, scope: !9475)
!9487 = !DILocation(line: 4479, column: 25, scope: !9475)
!9488 = !DILocation(line: 4479, column: 62, scope: !9475)
!9489 = !DILocation(line: 4482, column: 12, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4482, column: 7)
!9491 = !DILocation(line: 4482, column: 7, scope: !9475)
!9492 = !DILocation(line: 4485, column: 11, scope: !9475)
!9493 = !DILocation(line: 4485, column: 27, scope: !9475)
!9494 = !DILocation(line: 4485, column: 38, scope: !9475)
!9495 = !DILocation(line: 4486, column: 35, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4486, column: 7)
!9497 = !DILocation(line: 4486, column: 8, scope: !9496)
!9498 = !DILocation(line: 4486, column: 7, scope: !9475)
!9499 = !DILocation(line: 4489, column: 38, scope: !9475)
!9500 = !DILocation(line: 4490, column: 35, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4490, column: 7)
!9502 = !DILocation(line: 4490, column: 8, scope: !9501)
!9503 = !DILocation(line: 4490, column: 7, scope: !9475)
!9504 = !DILocation(line: 4492, column: 14, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 4491, column: 5)
!9506 = !DILocation(line: 4493, column: 39, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 4493, column: 11)
!9508 = !DILocation(line: 4493, column: 12, scope: !9507)
!9509 = !DILocation(line: 4493, column: 11, scope: !9505)
!9510 = !DILocation(line: 4497, column: 13, scope: !9475)
!9511 = !DILocation(line: 4498, column: 15, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 4498, column: 7)
!9513 = !DILocation(line: 4498, column: 7, scope: !9475)
!9514 = !DILocation(line: 4501, column: 3, scope: !9475)
!9515 = !DILocation(line: 4502, column: 3, scope: !9475)
!9516 = !DILocation(line: 4503, column: 1, scope: !9475)
!9517 = distinct !DISubprogram(name: "expand_expr_real", scope: !3, file: !3, line: 7158, type: !9518, scopeLine: 7160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9520)
!9518 = !DISubroutineType(types: !9519)
!9519 = !{!2182, !2298, !2182, !5, !2087, !3606}
!9520 = !{!9521, !9522, !9523, !9524, !9525, !9526, !9527, !9530, !9531}
!9521 = !DILocalVariable(name: "exp", arg: 1, scope: !9517, file: !3, line: 7158, type: !2298)
!9522 = !DILocalVariable(name: "target", arg: 2, scope: !9517, file: !3, line: 7158, type: !2182)
!9523 = !DILocalVariable(name: "tmode", arg: 3, scope: !9517, file: !3, line: 7158, type: !5)
!9524 = !DILocalVariable(name: "modifier", arg: 4, scope: !9517, file: !3, line: 7159, type: !2087)
!9525 = !DILocalVariable(name: "alt_rtl", arg: 5, scope: !9517, file: !3, line: 7159, type: !3606)
!9526 = !DILocalVariable(name: "ret", scope: !9517, file: !3, line: 7161, type: !2182)
!9527 = !DILocalVariable(name: "saved_location", scope: !9528, file: !3, line: 7181, type: !2418)
!9528 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 7180, column: 5)
!9529 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 7179, column: 7)
!9530 = !DILocalVariable(name: "saved_curr_loc", scope: !9528, file: !3, line: 7182, type: !2418)
!9531 = !DILocalVariable(name: "saved_block", scope: !9528, file: !3, line: 7183, type: !2298)
!9532 = !DILocation(line: 0, scope: !9517)
!9533 = !DILocation(line: 7164, column: 7, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 7164, column: 7)
!9535 = !DILocation(line: 7164, column: 23, scope: !9534)
!9536 = !DILocation(line: 7165, column: 7, scope: !9534)
!9537 = !DILocation(line: 7165, column: 11, scope: !9534)
!9538 = !DILocation(line: 7165, column: 39, scope: !9534)
!9539 = !DILocation(line: 7164, column: 7, scope: !9517)
!9540 = !DILocation(line: 7167, column: 13, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 7166, column: 5)
!9542 = !DILocation(line: 7168, column: 14, scope: !9541)
!9543 = !DILocation(line: 7179, column: 7, scope: !9529)
!9544 = !DILocation(line: 7179, column: 12, scope: !9529)
!9545 = !DILocation(line: 7179, column: 15, scope: !9529)
!9546 = !DILocation(line: 7179, column: 7, scope: !9517)
!9547 = !DILocation(line: 7181, column: 35, scope: !9528)
!9548 = !DILocation(line: 0, scope: !9528)
!9549 = !DILocation(line: 7182, column: 35, scope: !9528)
!9550 = !DILocation(line: 7183, column: 26, scope: !9528)
!9551 = !DILocation(line: 7184, column: 24, scope: !9528)
!9552 = !DILocation(line: 7184, column: 22, scope: !9528)
!9553 = !DILocation(line: 7185, column: 7, scope: !9528)
!9554 = !DILocation(line: 7188, column: 28, scope: !9528)
!9555 = !DILocation(line: 7188, column: 7, scope: !9528)
!9556 = !DILocation(line: 7190, column: 13, scope: !9528)
!9557 = !DILocation(line: 7192, column: 22, scope: !9528)
!9558 = !DILocation(line: 7193, column: 7, scope: !9528)
!9559 = !DILocation(line: 7194, column: 7, scope: !9528)
!9560 = !DILocation(line: 7195, column: 5, scope: !9528)
!9561 = !DILocation(line: 7198, column: 13, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 7197, column: 5)
!9563 = !DILocation(line: 7202, column: 1, scope: !9517)
!9564 = distinct !DISubprogram(name: "highest_pow2_factor", scope: !3, file: !3, line: 6678, type: !9565, scopeLine: 6679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9567)
!9565 = !DISubroutineType(types: !9566)
!9566 = !{!2252, !8575}
!9567 = !{!9568, !9569, !9570}
!9568 = !DILocalVariable(name: "exp", arg: 1, scope: !9564, file: !3, line: 6678, type: !8575)
!9569 = !DILocalVariable(name: "c0", scope: !9564, file: !3, line: 6680, type: !2252)
!9570 = !DILocalVariable(name: "c1", scope: !9564, file: !3, line: 6680, type: !2252)
!9571 = !DILocation(line: 6729, column: 14, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 6683, column: 5)
!9573 = !DILocation(line: 0, scope: !9564)
!9574 = !DILocation(line: 6682, column: 11, scope: !9564)
!9575 = !DILocation(line: 6682, column: 3, scope: !9564)
!9576 = !DILocation(line: 6691, column: 11, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 6691, column: 11)
!9578 = !DILocation(line: 6691, column: 11, scope: !9572)
!9579 = !DILocation(line: 6692, column: 9, scope: !9577)
!9580 = !DILocation(line: 6692, column: 2, scope: !9577)
!9581 = !DILocation(line: 6697, column: 9, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 6694, column: 2)
!9583 = !DILocation(line: 6698, column: 10, scope: !9582)
!9584 = !DILocation(line: 6698, column: 7, scope: !9582)
!9585 = !DILocation(line: 6699, column: 11, scope: !9582)
!9586 = !DILocation(line: 6699, column: 21, scope: !9582)
!9587 = !DILocation(line: 6704, column: 33, scope: !9572)
!9588 = !DILocation(line: 6704, column: 12, scope: !9572)
!9589 = !DILocation(line: 6705, column: 33, scope: !9572)
!9590 = !DILocation(line: 6705, column: 12, scope: !9572)
!9591 = !DILocation(line: 6706, column: 14, scope: !9572)
!9592 = !DILocation(line: 6748, column: 1, scope: !9564)
!9593 = !DILocation(line: 6709, column: 33, scope: !9572)
!9594 = !DILocation(line: 6709, column: 12, scope: !9572)
!9595 = !DILocation(line: 6710, column: 33, scope: !9572)
!9596 = !DILocation(line: 6710, column: 12, scope: !9572)
!9597 = !DILocation(line: 6711, column: 17, scope: !9572)
!9598 = !DILocation(line: 6715, column: 26, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 6715, column: 11)
!9600 = !DILocation(line: 6715, column: 11, scope: !9599)
!9601 = !DILocation(line: 6716, column: 4, scope: !9599)
!9602 = !DILocation(line: 6716, column: 22, scope: !9599)
!9603 = !DILocation(line: 6716, column: 7, scope: !9599)
!9604 = !DILocation(line: 6715, column: 11, scope: !9572)
!9605 = !DILocation(line: 6718, column: 30, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 6717, column: 2)
!9607 = !DILocation(line: 6718, column: 9, scope: !9606)
!9608 = !DILocation(line: 6719, column: 23, scope: !9606)
!9609 = !DILocation(line: 6719, column: 9, scope: !9606)
!9610 = !DILocation(line: 6720, column: 11, scope: !9606)
!9611 = !DILocation(line: 6729, column: 35, scope: !9572)
!9612 = !DILocation(line: 0, scope: !9572)
!9613 = !DILocation(line: 6733, column: 35, scope: !9572)
!9614 = !DILocation(line: 6733, column: 14, scope: !9572)
!9615 = !DILocation(line: 6736, column: 35, scope: !9572)
!9616 = !DILocation(line: 6736, column: 14, scope: !9572)
!9617 = !DILocation(line: 6739, column: 33, scope: !9572)
!9618 = !DILocation(line: 6739, column: 12, scope: !9572)
!9619 = !DILocation(line: 6740, column: 33, scope: !9572)
!9620 = !DILocation(line: 6740, column: 12, scope: !9572)
!9621 = !DILocation(line: 6741, column: 14, scope: !9572)
!9622 = distinct !DISubprogram(name: "force_operand", scope: !3, file: !3, line: 6321, type: !4732, scopeLine: 6322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9623)
!9623 = !{!9624, !9625, !9626, !9627, !9628, !9629, !9630}
!9624 = !DILocalVariable(name: "value", arg: 1, scope: !9622, file: !3, line: 6321, type: !2182)
!9625 = !DILocalVariable(name: "target", arg: 2, scope: !9622, file: !3, line: 6321, type: !2182)
!9626 = !DILocalVariable(name: "op1", scope: !9622, file: !3, line: 6323, type: !2182)
!9627 = !DILocalVariable(name: "op2", scope: !9622, file: !3, line: 6323, type: !2182)
!9628 = !DILocalVariable(name: "subtarget", scope: !9622, file: !3, line: 6325, type: !2182)
!9629 = !DILocalVariable(name: "code", scope: !9622, file: !3, line: 6326, type: !1898)
!9630 = !DILocalVariable(name: "temp", scope: !9631, file: !3, line: 6379, type: !2182)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 6378, column: 2)
!9632 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 6373, column: 11)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 6357, column: 5)
!9634 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 6356, column: 7)
!9635 = !DILocation(line: 0, scope: !9622)
!9636 = !DILocation(line: 6325, column: 19, scope: !9622)
!9637 = !DILocation(line: 6326, column: 24, scope: !9622)
!9638 = !DILocation(line: 6329, column: 12, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 6329, column: 7)
!9640 = !DILocation(line: 6330, column: 7, scope: !9639)
!9641 = !DILocation(line: 6330, column: 11, scope: !9639)
!9642 = !DILocation(line: 6331, column: 7, scope: !9639)
!9643 = !DILocation(line: 6331, column: 11, scope: !9639)
!9644 = !DILocation(line: 6329, column: 7, scope: !9622)
!9645 = !DILocation(line: 6334, column: 25, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 6332, column: 5)
!9647 = !DILocation(line: 6335, column: 22, scope: !9646)
!9648 = !DILocation(line: 6336, column: 23, scope: !9646)
!9649 = !DILocation(line: 6336, column: 8, scope: !9646)
!9650 = !DILocation(line: 6335, column: 11, scope: !9646)
!9651 = !DILocation(line: 6338, column: 11, scope: !9646)
!9652 = !DILocation(line: 6339, column: 11, scope: !9646)
!9653 = !DILocation(line: 6334, column: 4, scope: !9646)
!9654 = !DILocation(line: 6340, column: 14, scope: !9646)
!9655 = !DILocation(line: 6341, column: 5, scope: !9646)
!9656 = !DILocation(line: 6344, column: 21, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 6344, column: 7)
!9658 = !DILocation(line: 6345, column: 10, scope: !9657)
!9659 = !DILocation(line: 6345, column: 29, scope: !9657)
!9660 = !DILocation(line: 6345, column: 26, scope: !9657)
!9661 = !DILocation(line: 6346, column: 7, scope: !9657)
!9662 = !DILocation(line: 6346, column: 11, scope: !9657)
!9663 = !DILocation(line: 6346, column: 38, scope: !9657)
!9664 = !DILocation(line: 6347, column: 4, scope: !9657)
!9665 = !DILocation(line: 6347, column: 34, scope: !9657)
!9666 = !DILocation(line: 6348, column: 4, scope: !9657)
!9667 = !DILocation(line: 6348, column: 34, scope: !9657)
!9668 = !DILocation(line: 6344, column: 7, scope: !9622)
!9669 = !DILocation(line: 6350, column: 12, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 6350, column: 11)
!9671 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 6349, column: 5)
!9672 = !DILocation(line: 6350, column: 11, scope: !9671)
!9673 = !DILocation(line: 6351, column: 27, scope: !9670)
!9674 = !DILocation(line: 6351, column: 14, scope: !9670)
!9675 = !DILocation(line: 6351, column: 2, scope: !9670)
!9676 = !DILocation(line: 6352, column: 7, scope: !9671)
!9677 = !DILocation(line: 6353, column: 7, scope: !9671)
!9678 = !DILocation(line: 6356, column: 7, scope: !9634)
!9679 = !DILocation(line: 6356, column: 7, scope: !9622)
!9680 = !DILocation(line: 6358, column: 13, scope: !9633)
!9681 = !DILocation(line: 6359, column: 12, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 6359, column: 11)
!9683 = !DILocation(line: 6359, column: 29, scope: !9682)
!9684 = !DILocation(line: 6359, column: 34, scope: !9682)
!9685 = !DILocation(line: 6359, column: 53, scope: !9682)
!9686 = !DILocation(line: 6359, column: 46, scope: !9682)
!9687 = !DILocation(line: 6361, column: 16, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 6361, column: 11)
!9689 = !DILocation(line: 6361, column: 25, scope: !9688)
!9690 = !DILocation(line: 6361, column: 28, scope: !9688)
!9691 = !DILocation(line: 6361, column: 11, scope: !9633)
!9692 = !DILocation(line: 6364, column: 22, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 6362, column: 2)
!9694 = !DILocation(line: 6364, column: 10, scope: !9693)
!9695 = !DILocation(line: 6365, column: 2, scope: !9693)
!9696 = !DILocation(line: 0, scope: !9633)
!9697 = !DILocation(line: 6373, column: 16, scope: !9632)
!9698 = !DILocation(line: 6373, column: 24, scope: !9632)
!9699 = !DILocation(line: 6373, column: 27, scope: !9632)
!9700 = !DILocation(line: 6374, column: 4, scope: !9632)
!9701 = !DILocation(line: 6374, column: 7, scope: !9632)
!9702 = !DILocation(line: 6374, column: 34, scope: !9632)
!9703 = !DILocation(line: 6375, column: 4, scope: !9632)
!9704 = !DILocation(line: 6375, column: 7, scope: !9632)
!9705 = !DILocation(line: 6376, column: 4, scope: !9632)
!9706 = !DILocation(line: 6376, column: 7, scope: !9632)
!9707 = !DILocation(line: 6376, column: 41, scope: !9632)
!9708 = !DILocation(line: 6377, column: 4, scope: !9632)
!9709 = !DILocation(line: 6377, column: 7, scope: !9632)
!9710 = !DILocation(line: 6377, column: 41, scope: !9632)
!9711 = !DILocation(line: 6373, column: 11, scope: !9633)
!9712 = !DILocation(line: 6379, column: 36, scope: !9631)
!9713 = !DILocation(line: 6380, column: 8, scope: !9631)
!9714 = !DILocation(line: 6379, column: 15, scope: !9631)
!9715 = !DILocation(line: 0, scope: !9631)
!9716 = !DILocation(line: 6382, column: 32, scope: !9631)
!9717 = !DILocation(line: 6383, column: 26, scope: !9631)
!9718 = !DILocation(line: 6383, column: 11, scope: !9631)
!9719 = !DILocation(line: 6382, column: 11, scope: !9631)
!9720 = !DILocation(line: 6466, column: 1, scope: !9622)
!9721 = !DILocation(line: 6388, column: 28, scope: !9633)
!9722 = !DILocation(line: 6388, column: 13, scope: !9633)
!9723 = !DILocation(line: 6389, column: 13, scope: !9633)
!9724 = !DILocation(line: 6390, column: 7, scope: !9633)
!9725 = !DILocation(line: 6393, column: 24, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 6391, column: 2)
!9727 = !DILocation(line: 6393, column: 11, scope: !9726)
!9728 = !DILocation(line: 6393, column: 4, scope: !9726)
!9729 = !DILocation(line: 6395, column: 9, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 6395, column: 8)
!9731 = !DILocation(line: 6395, column: 8, scope: !9726)
!9732 = !DILocation(line: 6396, column: 13, scope: !9730)
!9733 = !DILocation(line: 6396, column: 6, scope: !9730)
!9734 = !DILocation(line: 6400, column: 7, scope: !9730)
!9735 = !DILocation(line: 6399, column: 13, scope: !9730)
!9736 = !DILocation(line: 6399, column: 6, scope: !9730)
!9737 = !DILocation(line: 6404, column: 45, scope: !9726)
!9738 = !DILocation(line: 6404, column: 11, scope: !9726)
!9739 = !DILocation(line: 6404, column: 4, scope: !9726)
!9740 = !DILocation(line: 6407, column: 45, scope: !9726)
!9741 = !DILocation(line: 6407, column: 11, scope: !9726)
!9742 = !DILocation(line: 6407, column: 4, scope: !9726)
!9743 = !DILocation(line: 6410, column: 45, scope: !9726)
!9744 = !DILocation(line: 6410, column: 11, scope: !9726)
!9745 = !DILocation(line: 6410, column: 4, scope: !9726)
!9746 = !DILocation(line: 6413, column: 32, scope: !9726)
!9747 = !DILocation(line: 6413, column: 11, scope: !9726)
!9748 = !DILocation(line: 6413, column: 4, scope: !9726)
!9749 = !DILocation(line: 6416, column: 32, scope: !9726)
!9750 = !DILocation(line: 6416, column: 11, scope: !9726)
!9751 = !DILocation(line: 6416, column: 4, scope: !9726)
!9752 = !DILocation(line: 6420, column: 7, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 6420, column: 7)
!9754 = !DILocation(line: 6420, column: 7, scope: !9622)
!9755 = !DILocation(line: 6422, column: 12, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 6422, column: 11)
!9757 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 6421, column: 5)
!9758 = !DILocation(line: 6422, column: 11, scope: !9757)
!9759 = !DILocation(line: 6423, column: 24, scope: !9756)
!9760 = !DILocation(line: 6423, column: 11, scope: !9756)
!9761 = !DILocation(line: 6423, column: 2, scope: !9756)
!9762 = !DILocation(line: 6424, column: 28, scope: !9757)
!9763 = !DILocation(line: 6424, column: 13, scope: !9757)
!9764 = !DILocation(line: 6425, column: 7, scope: !9757)
!9765 = !DILocation(line: 6432, column: 36, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 6426, column: 2)
!9767 = !DILocation(line: 6432, column: 4, scope: !9766)
!9768 = !DILocation(line: 6433, column: 4, scope: !9766)
!9769 = !DILocation(line: 6437, column: 34, scope: !9766)
!9770 = !DILocation(line: 6437, column: 4, scope: !9766)
!9771 = !DILocation(line: 6438, column: 4, scope: !9766)
!9772 = !DILocation(line: 6442, column: 36, scope: !9766)
!9773 = !DILocation(line: 6442, column: 4, scope: !9766)
!9774 = !DILocation(line: 6443, column: 4, scope: !9766)
!9775 = !DILocation(line: 6446, column: 31, scope: !9766)
!9776 = !DILocation(line: 6446, column: 11, scope: !9766)
!9777 = !DILocation(line: 6446, column: 4, scope: !9766)
!9778 = !DILocation(line: 6453, column: 24, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 6453, column: 7)
!9780 = !DILocation(line: 6453, column: 34, scope: !9779)
!9781 = !DILocation(line: 6453, column: 37, scope: !9779)
!9782 = !DILocation(line: 6454, column: 7, scope: !9779)
!9783 = !DILocation(line: 6454, column: 11, scope: !9779)
!9784 = !DILocation(line: 6455, column: 6, scope: !9779)
!9785 = !DILocation(line: 6455, column: 4, scope: !9779)
!9786 = !DILocation(line: 6453, column: 7, scope: !9622)
!9787 = !DILocation(line: 6459, column: 21, scope: !9779)
!9788 = !DILocation(line: 6459, column: 6, scope: !9779)
!9789 = !DILocation(line: 6458, column: 9, scope: !9779)
!9790 = !DILocation(line: 6461, column: 9, scope: !9779)
!9791 = !DILocation(line: 6462, column: 9, scope: !9779)
!9792 = !DILocation(line: 6457, column: 9, scope: !9779)
!9793 = distinct !DISubprogram(name: "categorize_ctor_elements", scope: !3, file: !3, line: 4989, type: !9794, scopeLine: 4992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9796)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!2174, !8575, !8588, !8588, !2173}
!9796 = !{!9797, !9798, !9799, !9800}
!9797 = !DILocalVariable(name: "ctor", arg: 1, scope: !9793, file: !3, line: 4989, type: !8575)
!9798 = !DILocalVariable(name: "p_nz_elts", arg: 2, scope: !9793, file: !3, line: 4989, type: !8588)
!9799 = !DILocalVariable(name: "p_elt_count", arg: 3, scope: !9793, file: !3, line: 4990, type: !8588)
!9800 = !DILocalVariable(name: "p_must_clear", arg: 4, scope: !9793, file: !3, line: 4991, type: !2173)
!9801 = !DILocation(line: 0, scope: !9793)
!9802 = !DILocation(line: 4993, column: 14, scope: !9793)
!9803 = !DILocation(line: 4994, column: 16, scope: !9793)
!9804 = !DILocation(line: 4995, column: 17, scope: !9793)
!9805 = !DILocation(line: 4998, column: 5, scope: !9793)
!9806 = !DILocation(line: 4997, column: 3, scope: !9793)
!9807 = distinct !DISubprogram(name: "categorize_ctor_elements_1", scope: !3, file: !3, line: 4842, type: !9794, scopeLine: 4845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9808)
!9808 = !{!9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9824, !9827, !9828, !9831, !9832, !9833, !9835, !9838}
!9809 = !DILocalVariable(name: "ctor", arg: 1, scope: !9807, file: !3, line: 4842, type: !8575)
!9810 = !DILocalVariable(name: "p_nz_elts", arg: 2, scope: !9807, file: !3, line: 4842, type: !8588)
!9811 = !DILocalVariable(name: "p_elt_count", arg: 3, scope: !9807, file: !3, line: 4843, type: !8588)
!9812 = !DILocalVariable(name: "p_must_clear", arg: 4, scope: !9807, file: !3, line: 4844, type: !2173)
!9813 = !DILocalVariable(name: "idx", scope: !9807, file: !3, line: 4846, type: !2252)
!9814 = !DILocalVariable(name: "nz_elts", scope: !9807, file: !3, line: 4847, type: !2269)
!9815 = !DILocalVariable(name: "elt_count", scope: !9807, file: !3, line: 4847, type: !2269)
!9816 = !DILocalVariable(name: "value", scope: !9807, file: !3, line: 4848, type: !2298)
!9817 = !DILocalVariable(name: "purpose", scope: !9807, file: !3, line: 4848, type: !2298)
!9818 = !DILocalVariable(name: "const_from_elts_p", scope: !9807, file: !3, line: 4853, type: !2174)
!9819 = !DILocalVariable(name: "const_p", scope: !9807, file: !3, line: 4854, type: !2174)
!9820 = !DILocalVariable(name: "mult", scope: !9821, file: !3, line: 4861, type: !2269)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 4860, column: 5)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 4859, column: 3)
!9823 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 4859, column: 3)
!9824 = !DILocalVariable(name: "lo_index", scope: !9825, file: !3, line: 4866, type: !2298)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 4865, column: 2)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4864, column: 11)
!9827 = !DILocalVariable(name: "hi_index", scope: !9825, file: !3, line: 4867, type: !2298)
!9828 = !DILocalVariable(name: "nz", scope: !9829, file: !3, line: 4878, type: !2269)
!9829 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 4877, column: 4)
!9830 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4875, column: 2)
!9831 = !DILocalVariable(name: "ic", scope: !9829, file: !3, line: 4878, type: !2269)
!9832 = !DILocalVariable(name: "const_elt_p", scope: !9829, file: !3, line: 4880, type: !2174)
!9833 = !DILocalVariable(name: "v", scope: !9834, file: !3, line: 4914, type: !2298)
!9834 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 4913, column: 4)
!9835 = !DILocalVariable(name: "init_sub_type", scope: !9836, file: !3, line: 4939, type: !2298)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 4938, column: 5)
!9837 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 4935, column: 7)
!9838 = !DILocalVariable(name: "clear_this", scope: !9836, file: !3, line: 4940, type: !2174)
!9839 = !DILocation(line: 0, scope: !9807)
!9840 = !DILocation(line: 4853, column: 28, scope: !9807)
!9841 = !DILocation(line: 4854, column: 18, scope: !9807)
!9842 = !DILocation(line: 4854, column: 45, scope: !9807)
!9843 = !DILocation(line: 0, scope: !9822)
!9844 = !DILocation(line: 0, scope: !9829)
!9845 = !DILocation(line: 0, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4886, column: 10)
!9847 = !DILocation(line: 4859, column: 3, scope: !9823)
!9848 = !DILocation(line: 0, scope: !9823)
!9849 = !DILocation(line: 4859, column: 3, scope: !9822)
!9850 = !DILocation(line: 0, scope: !9821)
!9851 = !DILocation(line: 4864, column: 11, scope: !9826)
!9852 = !DILocation(line: 4864, column: 31, scope: !9826)
!9853 = !DILocation(line: 4864, column: 11, scope: !9821)
!9854 = !DILocation(line: 4866, column: 20, scope: !9825)
!9855 = !DILocation(line: 0, scope: !9825)
!9856 = !DILocation(line: 4867, column: 20, scope: !9825)
!9857 = !DILocation(line: 4869, column: 8, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 4869, column: 8)
!9859 = !DILocation(line: 4869, column: 36, scope: !9858)
!9860 = !DILocation(line: 4869, column: 39, scope: !9858)
!9861 = !DILocation(line: 4869, column: 8, scope: !9825)
!9862 = !DILocation(line: 4870, column: 14, scope: !9858)
!9863 = !DILocation(line: 4871, column: 9, scope: !9858)
!9864 = !DILocation(line: 4871, column: 7, scope: !9858)
!9865 = !DILocation(line: 4871, column: 36, scope: !9858)
!9866 = !DILocation(line: 4870, column: 6, scope: !9858)
!9867 = !DILocation(line: 4874, column: 15, scope: !9821)
!9868 = !DILocation(line: 4874, column: 7, scope: !9821)
!9869 = !DILocation(line: 4878, column: 6, scope: !9829)
!9870 = !DILocation(line: 4878, column: 20, scope: !9829)
!9871 = !DILocation(line: 4878, column: 28, scope: !9829)
!9872 = !DILocation(line: 4881, column: 10, scope: !9829)
!9873 = !DILocation(line: 4883, column: 24, scope: !9829)
!9874 = !DILocation(line: 4883, column: 22, scope: !9829)
!9875 = !DILocation(line: 4883, column: 14, scope: !9829)
!9876 = !DILocation(line: 4884, column: 27, scope: !9829)
!9877 = !DILocation(line: 4884, column: 25, scope: !9829)
!9878 = !DILocation(line: 4884, column: 17, scope: !9829)
!9879 = !DILocation(line: 4886, column: 31, scope: !9846)
!9880 = !DILocation(line: 4886, column: 28, scope: !9846)
!9881 = !DILocation(line: 4888, column: 4, scope: !9830)
!9882 = !DILocation(line: 4889, column: 4, scope: !9830)
!9883 = !DILocation(line: 4894, column: 9, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 4894, column: 8)
!9885 = !DILocation(line: 4894, column: 8, scope: !9830)
!9886 = !DILocation(line: 4896, column: 14, scope: !9830)
!9887 = !DILocation(line: 4897, column: 4, scope: !9830)
!9888 = !DILocation(line: 4900, column: 22, scope: !9830)
!9889 = !DILocation(line: 4900, column: 20, scope: !9830)
!9890 = !DILocation(line: 4900, column: 12, scope: !9830)
!9891 = !DILocation(line: 4901, column: 14, scope: !9830)
!9892 = !DILocation(line: 4902, column: 4, scope: !9830)
!9893 = !DILocation(line: 4905, column: 28, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 4905, column: 8)
!9895 = !DILocation(line: 4905, column: 9, scope: !9894)
!9896 = !DILocation(line: 4905, column: 8, scope: !9830)
!9897 = !DILocation(line: 4907, column: 28, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 4907, column: 8)
!9899 = !DILocation(line: 4907, column: 9, scope: !9898)
!9900 = !DILocation(line: 4907, column: 8, scope: !9830)
!9901 = !DILocation(line: 4909, column: 14, scope: !9830)
!9902 = !DILocation(line: 4910, column: 4, scope: !9830)
!9903 = !DILocation(line: 4915, column: 15, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 4915, column: 6)
!9905 = !DILocation(line: 4915, column: 11, scope: !9904)
!9906 = !DILocation(line: 4856, column: 11, scope: !9807)
!9907 = !DILocation(line: 0, scope: !9904)
!9908 = !DILocation(line: 0, scope: !9834)
!9909 = !DILocation(line: 4915, column: 6, scope: !9904)
!9910 = !DILocation(line: 4917, column: 27, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 4917, column: 7)
!9912 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 4916, column: 8)
!9913 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 4915, column: 6)
!9914 = !DILocation(line: 4917, column: 8, scope: !9911)
!9915 = !DILocation(line: 4917, column: 7, scope: !9912)
!9916 = !DILocation(line: 4919, column: 13, scope: !9912)
!9917 = !DILocation(line: 4915, column: 52, scope: !9913)
!9918 = !DILocation(line: 4915, column: 6, scope: !9913)
!9919 = distinct !{!9919, !9909, !9920}
!9920 = !DILocation(line: 4920, column: 8, scope: !9904)
!9921 = !DILocation(line: 4925, column: 12, scope: !9830)
!9922 = !DILocation(line: 4926, column: 14, scope: !9830)
!9923 = !DILocation(line: 4928, column: 29, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 4928, column: 8)
!9925 = !DILocation(line: 4928, column: 26, scope: !9924)
!9926 = !DILocation(line: 4929, column: 53, scope: !9924)
!9927 = !DILocation(line: 4929, column: 16, scope: !9924)
!9928 = !DILocation(line: 4930, column: 9, scope: !9924)
!9929 = !DILocation(line: 4929, column: 6, scope: !9924)
!9930 = distinct !{!9930, !9847, !9931}
!9931 = !DILocation(line: 4933, column: 5, scope: !9823)
!9932 = !DILocation(line: 4935, column: 8, scope: !9837)
!9933 = !DILocation(line: 4936, column: 7, scope: !9837)
!9934 = !DILocation(line: 4936, column: 11, scope: !9837)
!9935 = !DILocation(line: 4936, column: 40, scope: !9837)
!9936 = !DILocation(line: 4937, column: 4, scope: !9837)
!9937 = !DILocation(line: 4937, column: 36, scope: !9837)
!9938 = !DILocation(line: 4935, column: 7, scope: !9807)
!9939 = !DILocation(line: 0, scope: !9836)
!9940 = !DILocation(line: 4942, column: 12, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9836, file: !3, line: 4942, column: 11)
!9942 = !DILocation(line: 4942, column: 11, scope: !9836)
!9943 = !DILocation(line: 4946, column: 11, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 4943, column: 2)
!9945 = !DILocation(line: 4949, column: 27, scope: !9944)
!9946 = !DILocation(line: 4957, column: 26, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 4957, column: 8)
!9948 = !DILocation(line: 4958, column: 5, scope: !9947)
!9949 = !DILocation(line: 4957, column: 8, scope: !9947)
!9950 = !DILocation(line: 4958, column: 32, scope: !9947)
!9951 = !DILocation(line: 4957, column: 8, scope: !9944)
!9952 = !DILocation(line: 4963, column: 25, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 4963, column: 12)
!9954 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4959, column: 6)
!9955 = !DILocation(line: 4963, column: 22, scope: !9953)
!9956 = !DILocation(line: 4963, column: 12, scope: !9954)
!9957 = !DILocation(line: 4965, column: 6, scope: !9954)
!9958 = !DILocation(line: 4968, column: 21, scope: !9836)
!9959 = !DILocation(line: 4969, column: 5, scope: !9836)
!9960 = !DILocation(line: 4971, column: 14, scope: !9807)
!9961 = !DILocation(line: 4972, column: 16, scope: !9807)
!9962 = !DILocation(line: 4974, column: 3, scope: !9807)
!9963 = distinct !DISubprogram(name: "count_type_elements", scope: !3, file: !3, line: 5006, type: !9964, scopeLine: 5007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9966)
!9964 = !DISubroutineType(types: !9965)
!9965 = !{!2269, !8575, !2174}
!9966 = !{!9967, !9968, !9969, !9971, !9974, !9977, !9978, !9980, !9981, !9982}
!9967 = !DILocalVariable(name: "type", arg: 1, scope: !9963, file: !3, line: 5006, type: !8575)
!9968 = !DILocalVariable(name: "allow_flexarr", arg: 2, scope: !9963, file: !3, line: 5006, type: !2174)
!9969 = !DILocalVariable(name: "max", scope: !9963, file: !3, line: 5008, type: !9970)
!9970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2269)
!9971 = !DILocalVariable(name: "telts", scope: !9972, file: !3, line: 5013, type: !2298)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 5012, column: 7)
!9973 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 5010, column: 5)
!9974 = !DILocalVariable(name: "n", scope: !9975, file: !3, line: 5016, type: !2269)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 5015, column: 4)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 5014, column: 6)
!9977 = !DILocalVariable(name: "m", scope: !9975, file: !3, line: 5017, type: !2269)
!9978 = !DILocalVariable(name: "n", scope: !9979, file: !3, line: 5028, type: !2269)
!9979 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 5027, column: 7)
!9980 = !DILocalVariable(name: "t", scope: !9979, file: !3, line: 5028, type: !2269)
!9981 = !DILocalVariable(name: "f", scope: !9979, file: !3, line: 5029, type: !2298)
!9982 = !DILocalVariable(name: "tf", scope: !9983, file: !3, line: 5038, type: !2298)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 5036, column: 3)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 5035, column: 12)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !3, line: 5033, column: 6)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 5032, column: 8)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 5031, column: 2)
!9988 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 5031, column: 2)
!9989 = !DILocation(line: 0, scope: !9963)
!9990 = !DILocation(line: 5009, column: 11, scope: !9963)
!9991 = !DILocation(line: 5009, column: 3, scope: !9963)
!9992 = !DILocation(line: 5013, column: 15, scope: !9972)
!9993 = !DILocation(line: 0, scope: !9972)
!9994 = !DILocation(line: 5014, column: 6, scope: !9976)
!9995 = !DILocation(line: 5014, column: 12, scope: !9976)
!9996 = !DILocation(line: 5014, column: 15, scope: !9976)
!9997 = !DILocation(line: 5014, column: 6, scope: !9972)
!9998 = !DILocation(line: 5016, column: 24, scope: !9975)
!9999 = !DILocation(line: 5016, column: 48, scope: !9975)
!10000 = !DILocation(line: 0, scope: !9975)
!10001 = !DILocation(line: 5017, column: 45, scope: !9975)
!10002 = !DILocation(line: 5017, column: 24, scope: !9975)
!10003 = !DILocation(line: 5018, column: 12, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 5018, column: 10)
!10005 = !DILocation(line: 5018, column: 10, scope: !9975)
!10006 = !DILocation(line: 5020, column: 19, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 5020, column: 15)
!10008 = !DILocation(line: 5020, column: 23, scope: !10007)
!10009 = !DILocation(line: 5021, column: 17, scope: !10007)
!10010 = !DILocation(line: 5020, column: 15, scope: !10004)
!10011 = !DILocation(line: 5023, column: 2, scope: !9972)
!10012 = !DILocation(line: 0, scope: !9979)
!10013 = !DILocation(line: 5031, column: 11, scope: !9988)
!10014 = !DILocation(line: 5031, column: 7, scope: !9988)
!10015 = !DILocation(line: 0, scope: !9988)
!10016 = !DILocation(line: 5031, column: 2, scope: !9988)
!10017 = !DILocation(line: 5032, column: 8, scope: !9986)
!10018 = !DILocation(line: 5032, column: 22, scope: !9986)
!10019 = !DILocation(line: 5032, column: 8, scope: !9987)
!10020 = !DILocation(line: 5034, column: 33, scope: !9985)
!10021 = !DILocation(line: 5034, column: 12, scope: !9985)
!10022 = !DILocation(line: 5035, column: 14, scope: !9984)
!10023 = !DILocation(line: 5035, column: 12, scope: !9985)
!10024 = !DILocation(line: 5038, column: 15, scope: !9983)
!10025 = !DILocation(line: 0, scope: !9983)
!10026 = !DILocation(line: 5039, column: 9, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 5039, column: 9)
!10028 = !DILocation(line: 5040, column: 9, scope: !10027)
!10029 = !DILocation(line: 5040, column: 12, scope: !10027)
!10030 = !DILocation(line: 5040, column: 27, scope: !10027)
!10031 = !DILocation(line: 5041, column: 9, scope: !10027)
!10032 = !DILocation(line: 5041, column: 12, scope: !10027)
!10033 = !DILocation(line: 5041, column: 27, scope: !10027)
!10034 = !DILocation(line: 5042, column: 9, scope: !10027)
!10035 = !DILocation(line: 5042, column: 12, scope: !10027)
!10036 = !DILocation(line: 5043, column: 9, scope: !10027)
!10037 = !DILocation(line: 5043, column: 12, scope: !10027)
!10038 = !DILocation(line: 5044, column: 9, scope: !10027)
!10039 = !DILocation(line: 5044, column: 12, scope: !10027)
!10040 = !DILocation(line: 5045, column: 9, scope: !10027)
!10041 = !DILocation(line: 5045, column: 13, scope: !10027)
!10042 = !DILocation(line: 5046, column: 9, scope: !10027)
!10043 = !DILocation(line: 5046, column: 12, scope: !10027)
!10044 = !DILocation(line: 5046, column: 37, scope: !10027)
!10045 = !DILocation(line: 5039, column: 9, scope: !9983)
!10046 = !DILocation(line: 5049, column: 5, scope: !9983)
!10047 = !DILocation(line: 5051, column: 10, scope: !9985)
!10048 = !DILocation(line: 5052, column: 6, scope: !9985)
!10049 = !DILocation(line: 5031, column: 39, scope: !9987)
!10050 = !DILocation(line: 5031, column: 2, scope: !9987)
!10051 = distinct !{!10051, !10016, !10052}
!10052 = !DILocation(line: 5052, column: 6, scope: !9988)
!10053 = !DILocation(line: 5054, column: 2, scope: !9979)
!10054 = !DILocation(line: 5062, column: 7, scope: !9973)
!10055 = !DILocation(line: 5065, column: 14, scope: !9973)
!10056 = !DILocation(line: 5065, column: 7, scope: !9973)
!10057 = !DILocation(line: 5075, column: 7, scope: !9973)
!10058 = !DILocation(line: 5078, column: 7, scope: !9973)
!10059 = !DILocation(line: 5085, column: 7, scope: !9973)
!10060 = !DILocation(line: 5088, column: 5, scope: !9963)
!10061 = !DILocation(line: 5090, column: 1, scope: !9963)
!10062 = distinct !DISubprogram(name: "component_ref_field_offset", scope: !3, file: !3, line: 6248, type: !10063, scopeLine: 6249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10065)
!10063 = !DISubroutineType(types: !10064)
!10064 = !{!2298, !2298}
!10065 = !{!10066, !10067, !10068, !10069}
!10066 = !DILocalVariable(name: "exp", arg: 1, scope: !10062, file: !3, line: 6248, type: !2298)
!10067 = !DILocalVariable(name: "aligned_offset", scope: !10062, file: !3, line: 6250, type: !2298)
!10068 = !DILocalVariable(name: "field", scope: !10062, file: !3, line: 6251, type: !2298)
!10069 = !DILocalVariable(name: "loc", scope: !10062, file: !3, line: 6252, type: !2418)
!10070 = !DILocation(line: 0, scope: !10062)
!10071 = !DILocation(line: 6250, column: 25, scope: !10062)
!10072 = !DILocation(line: 6251, column: 16, scope: !10062)
!10073 = !DILocation(line: 6252, column: 20, scope: !10062)
!10074 = !DILocation(line: 6257, column: 7, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 6257, column: 7)
!10076 = !DILocation(line: 6257, column: 7, scope: !10062)
!10077 = !DILocation(line: 6261, column: 11, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 6261, column: 11)
!10079 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 6258, column: 5)
!10080 = !DILocation(line: 6261, column: 41, scope: !10078)
!10081 = !DILocation(line: 6261, column: 38, scope: !10078)
!10082 = !DILocation(line: 6261, column: 11, scope: !10079)
!10083 = !DILocation(line: 6262, column: 19, scope: !10078)
!10084 = !DILocation(line: 6262, column: 2, scope: !10078)
!10085 = !DILocation(line: 6264, column: 9, scope: !10079)
!10086 = !DILocation(line: 6263, column: 14, scope: !10079)
!10087 = !DILocation(line: 6263, column: 7, scope: !10079)
!10088 = !DILocation(line: 6271, column: 12, scope: !10075)
!10089 = !DILocation(line: 0, scope: !10075)
!10090 = !DILocation(line: 6272, column: 1, scope: !10062)
!10091 = distinct !DISubprogram(name: "array_ref_low_bound", scope: !3, file: !3, line: 6210, type: !10063, scopeLine: 6211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10092)
!10092 = !{!10093, !10094}
!10093 = !DILocalVariable(name: "exp", arg: 1, scope: !10091, file: !3, line: 6210, type: !2298)
!10094 = !DILocalVariable(name: "domain_type", scope: !10091, file: !3, line: 6212, type: !2298)
!10095 = !DILocation(line: 0, scope: !10091)
!10096 = !DILocation(line: 6212, column: 22, scope: !10091)
!10097 = !DILocation(line: 6215, column: 7, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 6215, column: 7)
!10099 = !DILocation(line: 6215, column: 7, scope: !10091)
!10100 = !DILocation(line: 6216, column: 5, scope: !10098)
!10101 = !DILocation(line: 6220, column: 7, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 6220, column: 7)
!10103 = !DILocation(line: 6220, column: 19, scope: !10102)
!10104 = !DILocation(line: 6220, column: 22, scope: !10102)
!10105 = !DILocation(line: 6220, column: 7, scope: !10091)
!10106 = !DILocation(line: 6221, column: 12, scope: !10102)
!10107 = !DILocation(line: 6224, column: 25, scope: !10091)
!10108 = !DILocation(line: 6224, column: 10, scope: !10091)
!10109 = !DILocation(line: 6224, column: 3, scope: !10091)
!10110 = !DILocation(line: 6225, column: 1, scope: !10091)
!10111 = distinct !DISubprogram(name: "array_ref_element_size", scope: !3, file: !3, line: 6182, type: !10063, scopeLine: 6183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10112)
!10112 = !{!10113, !10114, !10115, !10116}
!10113 = !DILocalVariable(name: "exp", arg: 1, scope: !10111, file: !3, line: 6182, type: !2298)
!10114 = !DILocalVariable(name: "aligned_size", scope: !10111, file: !3, line: 6184, type: !2298)
!10115 = !DILocalVariable(name: "elmt_type", scope: !10111, file: !3, line: 6185, type: !2298)
!10116 = !DILocalVariable(name: "loc", scope: !10111, file: !3, line: 6186, type: !2418)
!10117 = !DILocation(line: 0, scope: !10111)
!10118 = !DILocation(line: 6184, column: 23, scope: !10111)
!10119 = !DILocation(line: 6185, column: 20, scope: !10111)
!10120 = !DILocation(line: 6186, column: 20, scope: !10111)
!10121 = !DILocation(line: 6190, column: 7, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 6190, column: 7)
!10123 = !DILocation(line: 6190, column: 7, scope: !10111)
!10124 = !DILocation(line: 6194, column: 11, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 6194, column: 11)
!10126 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 6191, column: 5)
!10127 = !DILocation(line: 6194, column: 39, scope: !10125)
!10128 = !DILocation(line: 6194, column: 36, scope: !10125)
!10129 = !DILocation(line: 6194, column: 11, scope: !10126)
!10130 = !DILocation(line: 6195, column: 17, scope: !10125)
!10131 = !DILocation(line: 6195, column: 2, scope: !10125)
!10132 = !DILocation(line: 6197, column: 9, scope: !10126)
!10133 = !DILocation(line: 6196, column: 14, scope: !10126)
!10134 = !DILocation(line: 6196, column: 7, scope: !10126)
!10135 = !DILocation(line: 6203, column: 12, scope: !10122)
!10136 = !DILocation(line: 0, scope: !10122)
!10137 = !DILocation(line: 6204, column: 1, scope: !10111)
!10138 = distinct !DISubprogram(name: "uhwi_to_double_int", scope: !2347, file: !2347, line: 94, type: !10139, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10141)
!10139 = !DISubroutineType(types: !10140)
!10140 = !{!2346, !2252}
!10141 = !{!10142, !10143}
!10142 = !DILocalVariable(name: "cst", arg: 1, scope: !10138, file: !2347, line: 94, type: !2252)
!10143 = !DILocalVariable(name: "r", scope: !10138, file: !2347, line: 96, type: !2346)
!10144 = !DILocation(line: 0, scope: !10138)
!10145 = !DILocation(line: 101, column: 3, scope: !10138)
!10146 = distinct !DISubprogram(name: "contains_packed_reference", scope: !3, file: !3, line: 6142, type: !8573, scopeLine: 6143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10147)
!10147 = !{!10148, !10149, !10150, !10154}
!10148 = !DILocalVariable(name: "exp", arg: 1, scope: !10146, file: !3, line: 6142, type: !8575)
!10149 = !DILocalVariable(name: "packed_p", scope: !10146, file: !3, line: 6144, type: !2174)
!10150 = !DILocalVariable(name: "field", scope: !10151, file: !3, line: 6152, type: !2298)
!10151 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 6151, column: 4)
!10152 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 6149, column: 2)
!10153 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 6147, column: 5)
!10154 = !DILabel(scope: !10146, name: "done", file: !3, line: 6174)
!10155 = !DILocation(line: 0, scope: !10146)
!10156 = !DILocation(line: 6146, column: 3, scope: !10146)
!10157 = !DILocation(line: 6144, column: 8, scope: !10146)
!10158 = !DILocation(line: 6148, column: 15, scope: !10153)
!10159 = !DILocation(line: 6148, column: 7, scope: !10153)
!10160 = !DILocation(line: 6152, column: 19, scope: !10151)
!10161 = !DILocation(line: 0, scope: !10151)
!10162 = !DILocation(line: 6153, column: 17, scope: !10151)
!10163 = !DILocation(line: 6154, column: 10, scope: !10151)
!10164 = !DILocation(line: 6154, column: 13, scope: !10151)
!10165 = !DILocation(line: 6155, column: 10, scope: !10151)
!10166 = !DILocation(line: 6155, column: 13, scope: !10151)
!10167 = !DILocation(line: 6172, column: 13, scope: !10153)
!10168 = distinct !{!10168, !10156, !10169}
!10169 = !DILocation(line: 6173, column: 5, scope: !10146)
!10170 = !DILocation(line: 6176, column: 1, scope: !10146)
!10171 = distinct !DISubprogram(name: "array_ref_up_bound", scope: !3, file: !3, line: 6231, type: !10063, scopeLine: 6232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10172)
!10172 = !{!10173, !10174}
!10173 = !DILocalVariable(name: "exp", arg: 1, scope: !10171, file: !3, line: 6231, type: !2298)
!10174 = !DILocalVariable(name: "domain_type", scope: !10171, file: !3, line: 6233, type: !2298)
!10175 = !DILocation(line: 0, scope: !10171)
!10176 = !DILocation(line: 6233, column: 22, scope: !10171)
!10177 = !DILocation(line: 6237, column: 7, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 6237, column: 7)
!10179 = !DILocation(line: 6237, column: 19, scope: !10178)
!10180 = !DILocation(line: 6237, column: 22, scope: !10178)
!10181 = !DILocation(line: 6237, column: 7, scope: !10171)
!10182 = !DILocation(line: 6238, column: 12, scope: !10178)
!10183 = !DILocation(line: 6242, column: 1, scope: !10171)
!10184 = distinct !DISubprogram(name: "get_subtarget", scope: !3, file: !3, line: 4028, type: !5839, scopeLine: 4029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10185)
!10185 = !{!10186}
!10186 = !DILocalVariable(name: "x", arg: 1, scope: !10184, file: !3, line: 4028, type: !2182)
!10187 = !DILocation(line: 0, scope: !10184)
!10188 = !DILocation(line: 4030, column: 11, scope: !10184)
!10189 = !DILocation(line: 4031, column: 16, scope: !10184)
!10190 = !DILocation(line: 4031, column: 11, scope: !10184)
!10191 = !DILocation(line: 4033, column: 9, scope: !10184)
!10192 = !DILocation(line: 4035, column: 5, scope: !10184)
!10193 = !DILocation(line: 4035, column: 8, scope: !10184)
!10194 = !DILocation(line: 4035, column: 18, scope: !10184)
!10195 = !DILocation(line: 4030, column: 3, scope: !10184)
!10196 = distinct !DISubprogram(name: "safe_from_p", scope: !3, file: !3, line: 6477, type: !10197, scopeLine: 6478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10199)
!10197 = !DISubroutineType(types: !10198)
!10198 = !{!2175, !4302, !2298, !2175}
!10199 = !{!10200, !10201, !10202, !10203, !10204, !10205, !10206, !10212}
!10200 = !DILocalVariable(name: "x", arg: 1, scope: !10196, file: !3, line: 6477, type: !4302)
!10201 = !DILocalVariable(name: "exp", arg: 2, scope: !10196, file: !3, line: 6477, type: !2298)
!10202 = !DILocalVariable(name: "top_p", arg: 3, scope: !10196, file: !3, line: 6477, type: !2175)
!10203 = !DILocalVariable(name: "exp_rtl", scope: !10196, file: !3, line: 6479, type: !2182)
!10204 = !DILocalVariable(name: "i", scope: !10196, file: !3, line: 6480, type: !2175)
!10205 = !DILocalVariable(name: "nops", scope: !10196, file: !3, line: 6480, type: !2175)
!10206 = !DILocalVariable(name: "ce", scope: !10207, file: !3, line: 6538, type: !10211)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 6537, column: 2)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 6536, column: 16)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 6523, column: 11)
!10210 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 6514, column: 5)
!10211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!10212 = !DILocalVariable(name: "idx", scope: !10207, file: !3, line: 6539, type: !2252)
!10213 = !DILocation(line: 0, scope: !10196)
!10214 = !DILocation(line: 6482, column: 9, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 6482, column: 7)
!10216 = !DILocation(line: 6489, column: 7, scope: !10215)
!10217 = !DILocation(line: 6489, column: 11, scope: !10215)
!10218 = !DILocation(line: 6489, column: 17, scope: !10215)
!10219 = !DILocation(line: 6489, column: 20, scope: !10215)
!10220 = !DILocation(line: 6489, column: 36, scope: !10215)
!10221 = !DILocation(line: 6489, column: 41, scope: !10215)
!10222 = !DILocation(line: 6489, column: 44, scope: !10215)
!10223 = !DILocation(line: 6490, column: 4, scope: !10215)
!10224 = !DILocation(line: 6490, column: 7, scope: !10215)
!10225 = !DILocation(line: 6490, column: 47, scope: !10215)
!10226 = !DILocation(line: 6491, column: 4, scope: !10215)
!10227 = !DILocation(line: 6491, column: 8, scope: !10215)
!10228 = !DILocation(line: 6491, column: 36, scope: !10215)
!10229 = !DILocation(line: 6492, column: 8, scope: !10215)
!10230 = !DILocation(line: 6492, column: 11, scope: !10215)
!10231 = !DILocation(line: 6492, column: 49, scope: !10215)
!10232 = !DILocation(line: 6493, column: 8, scope: !10215)
!10233 = !DILocation(line: 6493, column: 11, scope: !10215)
!10234 = !DILocation(line: 6494, column: 8, scope: !10215)
!10235 = !DILocation(line: 6495, column: 4, scope: !10215)
!10236 = !DILocation(line: 6495, column: 7, scope: !10215)
!10237 = !DILocation(line: 6495, column: 20, scope: !10215)
!10238 = !DILocation(line: 6497, column: 7, scope: !10215)
!10239 = !DILocation(line: 6497, column: 11, scope: !10215)
!10240 = !DILocation(line: 6498, column: 4, scope: !10215)
!10241 = !DILocation(line: 6498, column: 8, scope: !10215)
!10242 = !DILocation(line: 6498, column: 23, scope: !10215)
!10243 = !DILocation(line: 6498, column: 20, scope: !10215)
!10244 = !DILocation(line: 6499, column: 8, scope: !10215)
!10245 = !DILocation(line: 6499, column: 12, scope: !10215)
!10246 = !DILocation(line: 6499, column: 35, scope: !10215)
!10247 = !DILocation(line: 6500, column: 5, scope: !10215)
!10248 = !DILocation(line: 6500, column: 8, scope: !10215)
!10249 = !DILocation(line: 6500, column: 30, scope: !10215)
!10250 = !DILocation(line: 6482, column: 7, scope: !10196)
!10251 = !DILocation(line: 6505, column: 20, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 6505, column: 7)
!10253 = !DILocation(line: 6505, column: 7, scope: !10196)
!10254 = !DILocation(line: 6507, column: 11, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 6506, column: 5)
!10256 = !DILocation(line: 6508, column: 11, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 6508, column: 11)
!10258 = !DILocation(line: 6508, column: 21, scope: !10257)
!10259 = !DILocation(line: 6508, column: 24, scope: !10257)
!10260 = !DILocation(line: 6508, column: 34, scope: !10257)
!10261 = !DILocation(line: 6508, column: 11, scope: !10255)
!10262 = !DILocation(line: 6513, column: 11, scope: !10196)
!10263 = !DILocation(line: 6513, column: 3, scope: !10196)
!10264 = !DILocation(line: 6516, column: 17, scope: !10210)
!10265 = !DILocation(line: 6523, column: 27, scope: !10209)
!10266 = !DILocation(line: 6523, column: 11, scope: !10210)
!10267 = !DILocation(line: 6525, column: 4, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 6524, column: 2)
!10269 = !DILocation(line: 6527, column: 12, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 6527, column: 12)
!10271 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 6526, column: 6)
!10272 = !DILocation(line: 6527, column: 29, scope: !10270)
!10273 = !DILocation(line: 6527, column: 33, scope: !10270)
!10274 = !DILocation(line: 6527, column: 12, scope: !10271)
!10275 = !DILocation(line: 6529, column: 14, scope: !10271)
!10276 = !DILocation(line: 6530, column: 13, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 6530, column: 12)
!10278 = !DILocation(line: 6530, column: 12, scope: !10271)
!10279 = !DILocation(line: 6532, column: 12, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 6532, column: 12)
!10281 = !DILocation(line: 6532, column: 28, scope: !10280)
!10282 = !DILocation(line: 6532, column: 12, scope: !10271)
!10283 = distinct !{!10283, !10267, !10284}
!10284 = !DILocation(line: 6534, column: 6, scope: !10268)
!10285 = !DILocation(line: 6533, column: 10, scope: !10280)
!10286 = !DILocation(line: 6533, column: 3, scope: !10280)
!10287 = !DILocation(line: 6536, column: 32, scope: !10208)
!10288 = !DILocation(line: 6536, column: 16, scope: !10209)
!10289 = !DILocation(line: 6538, column: 4, scope: !10207)
!10290 = !DILocation(line: 0, scope: !10207)
!10291 = !DILocation(line: 0, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 6541, column: 4)
!10293 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 6541, column: 4)
!10294 = !DILocation(line: 6541, column: 9, scope: !10293)
!10295 = !DILocation(line: 0, scope: !10293)
!10296 = !DILocation(line: 6542, column: 9, scope: !10292)
!10297 = !DILocation(line: 6541, column: 4, scope: !10293)
!10298 = !DILocation(line: 6544, column: 11, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 6544, column: 10)
!10300 = !DILocation(line: 6544, column: 15, scope: !10299)
!10301 = !DILocation(line: 6544, column: 21, scope: !10299)
!10302 = !DILocation(line: 6544, column: 34, scope: !10299)
!10303 = !DILocation(line: 6544, column: 38, scope: !10299)
!10304 = !DILocation(line: 6545, column: 3, scope: !10299)
!10305 = !DILocation(line: 6545, column: 23, scope: !10299)
!10306 = !DILocation(line: 6545, column: 27, scope: !10299)
!10307 = !DILocation(line: 6545, column: 7, scope: !10299)
!10308 = !DILocation(line: 6544, column: 10, scope: !10292)
!10309 = !DILocation(line: 6543, column: 12, scope: !10292)
!10310 = !DILocation(line: 6541, column: 4, scope: !10292)
!10311 = distinct !{!10311, !10297, !10312}
!10312 = !DILocation(line: 6546, column: 15, scope: !10293)
!10313 = !DILocation(line: 6548, column: 2, scope: !10208)
!10314 = !DILocation(line: 6549, column: 32, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 6549, column: 16)
!10316 = !DILocation(line: 0, scope: !10315)
!10317 = !DILocation(line: 6557, column: 31, scope: !10210)
!10318 = !DILocation(line: 6558, column: 8, scope: !10210)
!10319 = !DILocation(line: 6558, column: 11, scope: !10210)
!10320 = !DILocation(line: 6558, column: 44, scope: !10210)
!10321 = !DILocation(line: 6559, column: 8, scope: !10210)
!10322 = !DILocation(line: 6559, column: 12, scope: !10210)
!10323 = !DILocation(line: 6560, column: 8, scope: !10210)
!10324 = !DILocation(line: 6560, column: 11, scope: !10210)
!10325 = !DILocation(line: 6557, column: 7, scope: !10210)
!10326 = !DILocation(line: 6564, column: 28, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 6564, column: 11)
!10328 = !DILocation(line: 6564, column: 12, scope: !10327)
!10329 = !DILocation(line: 6564, column: 11, scope: !10210)
!10330 = !DILocation(line: 6569, column: 30, scope: !10210)
!10331 = !DILocation(line: 6569, column: 14, scope: !10210)
!10332 = !DILocation(line: 6569, column: 7, scope: !10210)
!10333 = !DILocation(line: 6579, column: 15, scope: !10210)
!10334 = !DILocation(line: 6579, column: 7, scope: !10210)
!10335 = !DILocation(line: 6584, column: 17, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 6584, column: 8)
!10337 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 6580, column: 2)
!10338 = !DILocation(line: 6584, column: 8, scope: !10336)
!10339 = !DILocation(line: 6585, column: 8, scope: !10336)
!10340 = !DILocation(line: 6585, column: 11, scope: !10336)
!10341 = !DILocation(line: 6586, column: 8, scope: !10336)
!10342 = !DILocation(line: 6586, column: 27, scope: !10336)
!10343 = !DILocation(line: 6586, column: 11, scope: !10336)
!10344 = !DILocation(line: 6584, column: 8, scope: !10337)
!10345 = !DILocation(line: 6592, column: 10, scope: !10337)
!10346 = !DILocation(line: 6593, column: 8, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 6593, column: 8)
!10348 = !DILocation(line: 6593, column: 8, scope: !10337)
!10349 = !DILocation(line: 6595, column: 13, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 6595, column: 12)
!10351 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 6594, column: 6)
!10352 = !DILocation(line: 6596, column: 5, scope: !10350)
!10353 = !DILocation(line: 6596, column: 9, scope: !10350)
!10354 = !DILocation(line: 6595, column: 12, scope: !10351)
!10355 = !DILocation(line: 6599, column: 13, scope: !10350)
!10356 = !DILocation(line: 0, scope: !10350)
!10357 = !DILocation(line: 6600, column: 6, scope: !10351)
!10358 = !DILocation(line: 6606, column: 8, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 6606, column: 8)
!10360 = !DILocation(line: 6607, column: 8, scope: !10359)
!10361 = !DILocation(line: 6607, column: 34, scope: !10359)
!10362 = !DILocation(line: 6608, column: 6, scope: !10359)
!10363 = !DILocation(line: 6607, column: 11, scope: !10359)
!10364 = !DILocation(line: 6606, column: 8, scope: !10337)
!10365 = !DILocation(line: 6615, column: 9, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 6615, column: 8)
!10367 = !DILocation(line: 6615, column: 19, scope: !10366)
!10368 = !DILocation(line: 6615, column: 22, scope: !10366)
!10369 = !DILocation(line: 6615, column: 32, scope: !10366)
!10370 = !DILocation(line: 6616, column: 8, scope: !10366)
!10371 = !DILocation(line: 6616, column: 11, scope: !10366)
!10372 = !DILocation(line: 6615, column: 8, scope: !10337)
!10373 = !DILocation(line: 6623, column: 4, scope: !10337)
!10374 = !DILocation(line: 6626, column: 27, scope: !10337)
!10375 = !DILocation(line: 6626, column: 11, scope: !10337)
!10376 = !DILocation(line: 6626, column: 4, scope: !10337)
!10377 = !DILocation(line: 6633, column: 11, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 6633, column: 11)
!10379 = !DILocation(line: 6633, column: 11, scope: !10210)
!10380 = !DILocation(line: 6636, column: 14, scope: !10210)
!10381 = !DILocation(line: 0, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 6638, column: 6)
!10383 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 6637, column: 7)
!10384 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 6637, column: 7)
!10385 = !DILocation(line: 6637, column: 12, scope: !10384)
!10386 = !DILocation(line: 0, scope: !10384)
!10387 = !DILocation(line: 6637, column: 21, scope: !10383)
!10388 = !DILocation(line: 6637, column: 7, scope: !10384)
!10389 = !DILocation(line: 6638, column: 6, scope: !10382)
!10390 = !DILocation(line: 6638, column: 28, scope: !10382)
!10391 = !DILocation(line: 6639, column: 6, scope: !10382)
!10392 = !DILocation(line: 6639, column: 11, scope: !10382)
!10393 = !DILocation(line: 6638, column: 6, scope: !10383)
!10394 = !DILocation(line: 6637, column: 30, scope: !10383)
!10395 = !DILocation(line: 6637, column: 7, scope: !10383)
!10396 = distinct !{!10396, !10388, !10397}
!10397 = !DILocation(line: 6640, column: 11, scope: !10384)
!10398 = !DILocation(line: 6646, column: 7, scope: !10210)
!10399 = !DILocation(line: 6647, column: 5, scope: !10210)
!10400 = !DILocation(line: 6651, column: 7, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 6651, column: 7)
!10402 = !DILocation(line: 6651, column: 7, scope: !10196)
!10403 = !DILocation(line: 6653, column: 11, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 6653, column: 11)
!10405 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 6652, column: 5)
!10406 = !DILocation(line: 6653, column: 30, scope: !10404)
!10407 = !DILocation(line: 6653, column: 11, scope: !10405)
!10408 = !DILocation(line: 6655, column: 14, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 6654, column: 2)
!10410 = !DILocation(line: 6656, column: 8, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 6656, column: 8)
!10412 = !DILocation(line: 6657, column: 8, scope: !10411)
!10413 = !DILocation(line: 6657, column: 11, scope: !10411)
!10414 = !DILocation(line: 6657, column: 27, scope: !10411)
!10415 = !DILocation(line: 6656, column: 8, scope: !10409)
!10416 = !DILocation(line: 6663, column: 17, scope: !10405)
!10417 = !DILocation(line: 6664, column: 3, scope: !10405)
!10418 = !DILocation(line: 6664, column: 7, scope: !10405)
!10419 = !DILocation(line: 6664, column: 17, scope: !10405)
!10420 = !DILocation(line: 6664, column: 20, scope: !10405)
!10421 = !DILocation(line: 6665, column: 7, scope: !10405)
!10422 = !DILocation(line: 6665, column: 10, scope: !10405)
!10423 = !DILocation(line: 6663, column: 7, scope: !10405)
!10424 = !DILocation(line: 6671, column: 1, scope: !10196)
!10425 = distinct !DISubprogram(name: "VEC_constructor_elt_base_iterate", scope: !142, file: !142, line: 1537, type: !10426, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10430)
!10426 = !DISubroutineType(types: !10427)
!10427 = !{!2175, !10428, !7, !10429}
!10428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64)
!10429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10211, size: 64)
!10430 = !{!10431, !10432, !10433}
!10431 = !DILocalVariable(name: "vec_", arg: 1, scope: !10425, file: !142, line: 1537, type: !10428)
!10432 = !DILocalVariable(name: "ix_", arg: 2, scope: !10425, file: !142, line: 1537, type: !7)
!10433 = !DILocalVariable(name: "ptr", arg: 3, scope: !10425, file: !142, line: 1537, type: !10429)
!10434 = !DILocation(line: 0, scope: !10425)
!10435 = !DILocation(line: 1537, column: 1, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10425, file: !142, line: 1537, column: 1)
!10437 = !DILocation(line: 1537, column: 1, scope: !10425)
!10438 = !DILocation(line: 1537, column: 1, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10436, file: !142, line: 1537, column: 1)
!10440 = !DILocation(line: 1537, column: 1, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10436, file: !142, line: 1537, column: 1)
!10442 = !DILocation(line: 0, scope: !10436)
!10443 = distinct !DISubprogram(name: "tree_operand_length", scope: !142, file: !142, line: 5347, type: !10444, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10446)
!10444 = !DISubroutineType(types: !10445)
!10445 = !{!2175, !8575}
!10446 = !{!10447}
!10447 = !DILocalVariable(name: "node", arg: 1, scope: !10443, file: !142, line: 5347, type: !8575)
!10448 = !DILocation(line: 0, scope: !10443)
!10449 = !DILocation(line: 5349, column: 7, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10443, file: !142, line: 5349, column: 7)
!10451 = !DILocation(line: 5349, column: 7, scope: !10443)
!10452 = !DILocation(line: 5350, column: 12, scope: !10450)
!10453 = !DILocation(line: 5350, column: 5, scope: !10450)
!10454 = !DILocation(line: 5352, column: 12, scope: !10450)
!10455 = !DILocation(line: 5352, column: 5, scope: !10450)
!10456 = !DILocation(line: 0, scope: !10450)
!10457 = !DILocation(line: 5353, column: 1, scope: !10443)
!10458 = distinct !DISubprogram(name: "expand_expr_real_1", scope: !3, file: !3, line: 8287, type: !9518, scopeLine: 8289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10459)
!10459 = !{!10460, !10461, !10462, !10463, !10464, !10465, !10466, !10467, !10468, !10469, !10470, !10471, !10472, !10473, !10474, !10475, !10476, !10477, !10478, !10479, !10480, !10489, !10490, !10491, !10492, !10495, !10497, !10500, !10503, !10505, !10508, !10511, !10512, !10513, !10515, !10516, !10519, !10520, !10522, !10523, !10524, !10527, !10530, !10533, !10534, !10535, !10537, !10545, !10547, !10548, !10551, !10554, !10555, !10556, !10561, !10564, !10565, !10566, !10573, !10576, !10577, !10580, !10581, !10584, !10585, !10586, !10593, !10594, !10597, !10599, !10600, !10601, !10602, !10603, !10604, !10605, !10606, !10607, !10608, !10613, !10616, !10617, !10620, !10623, !10624, !10626, !10627, !10630, !10631, !10632, !10633, !10634, !10635, !10636, !10637, !10643, !10651, !10653, !10654, !10657, !10658, !10660, !10661, !10662, !10663, !10665, !10666, !10667, !10668, !10670, !10671}
!10460 = !DILocalVariable(name: "exp", arg: 1, scope: !10458, file: !3, line: 8287, type: !2298)
!10461 = !DILocalVariable(name: "target", arg: 2, scope: !10458, file: !3, line: 8287, type: !2182)
!10462 = !DILocalVariable(name: "tmode", arg: 3, scope: !10458, file: !3, line: 8287, type: !5)
!10463 = !DILocalVariable(name: "modifier", arg: 4, scope: !10458, file: !3, line: 8288, type: !2087)
!10464 = !DILocalVariable(name: "alt_rtl", arg: 5, scope: !10458, file: !3, line: 8288, type: !3606)
!10465 = !DILocalVariable(name: "op0", scope: !10458, file: !3, line: 8290, type: !2182)
!10466 = !DILocalVariable(name: "op1", scope: !10458, file: !3, line: 8290, type: !2182)
!10467 = !DILocalVariable(name: "temp", scope: !10458, file: !3, line: 8290, type: !2182)
!10468 = !DILocalVariable(name: "decl_rtl", scope: !10458, file: !3, line: 8290, type: !2182)
!10469 = !DILocalVariable(name: "type", scope: !10458, file: !3, line: 8291, type: !2298)
!10470 = !DILocalVariable(name: "unsignedp", scope: !10458, file: !3, line: 8292, type: !2175)
!10471 = !DILocalVariable(name: "mode", scope: !10458, file: !3, line: 8293, type: !5)
!10472 = !DILocalVariable(name: "code", scope: !10458, file: !3, line: 8294, type: !141)
!10473 = !DILocalVariable(name: "this_optab", scope: !10458, file: !3, line: 8295, type: !9147)
!10474 = !DILocalVariable(name: "subtarget", scope: !10458, file: !3, line: 8296, type: !2182)
!10475 = !DILocalVariable(name: "original_target", scope: !10458, file: !3, line: 8296, type: !2182)
!10476 = !DILocalVariable(name: "ignore", scope: !10458, file: !3, line: 8297, type: !2175)
!10477 = !DILocalVariable(name: "context", scope: !10458, file: !3, line: 8298, type: !2298)
!10478 = !DILocalVariable(name: "reduce_bit_field", scope: !10458, file: !3, line: 8299, type: !2174)
!10479 = !DILocalVariable(name: "loc", scope: !10458, file: !3, line: 8300, type: !2418)
!10480 = !DILocalVariable(name: "ops", scope: !10458, file: !3, line: 8301, type: !10481)
!10481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "separate_ops", file: !2042, line: 273, size: 384, elements: !10482)
!10482 = !{!10483, !10484, !10485, !10486, !10487, !10488}
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !10481, file: !2042, line: 275, baseType: !141, size: 32)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10481, file: !2042, line: 276, baseType: !2298, size: 64, offset: 64)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "op0", scope: !10481, file: !2042, line: 277, baseType: !2298, size: 64, offset: 128)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "op1", scope: !10481, file: !2042, line: 277, baseType: !2298, size: 64, offset: 192)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "op2", scope: !10481, file: !2042, line: 277, baseType: !2298, size: 64, offset: 256)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !10481, file: !2042, line: 278, baseType: !2418, size: 32, offset: 320)
!10489 = !DILocalVariable(name: "treeop0", scope: !10458, file: !3, line: 8302, type: !2298)
!10490 = !DILocalVariable(name: "treeop1", scope: !10458, file: !3, line: 8302, type: !2298)
!10491 = !DILocalVariable(name: "treeop2", scope: !10458, file: !3, line: 8302, type: !2298)
!10492 = !DILocalVariable(name: "function", scope: !10493, file: !3, line: 8396, type: !2298)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8395, column: 7)
!10494 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 8393, column: 5)
!10495 = !DILocalVariable(name: "g", scope: !10496, file: !3, line: 8417, type: !2762)
!10496 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8416, column: 7)
!10497 = !DILocalVariable(name: "pmode", scope: !10498, file: !3, line: 8516, type: !5)
!10498 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 8515, column: 2)
!10499 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8513, column: 11)
!10500 = !DILocalVariable(name: "_rtx", scope: !10501, file: !3, line: 8525, type: !10502)
!10501 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 8525, column: 4)
!10502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2182)
!10503 = !DILocalVariable(name: "tmp", scope: !10504, file: !3, line: 8539, type: !2298)
!10504 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8538, column: 7)
!10505 = !DILocalVariable(name: "type_for_mode", scope: !10506, file: !3, line: 8549, type: !2298)
!10506 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 8548, column: 4)
!10507 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 8547, column: 6)
!10508 = !DILocalVariable(name: "mode", scope: !10509, file: !3, line: 8585, type: !5)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 8584, column: 2)
!10510 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8583, column: 11)
!10511 = !DILocalVariable(name: "rtarg", scope: !10509, file: !3, line: 8586, type: !2182)
!10512 = !DILocalVariable(name: "itarg", scope: !10509, file: !3, line: 8586, type: !2182)
!10513 = !DILocalVariable(name: "val", scope: !10514, file: !3, line: 8622, type: !2298)
!10514 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8621, column: 7)
!10515 = !DILocalVariable(name: "ret", scope: !10514, file: !3, line: 8623, type: !2182)
!10516 = !DILocalVariable(name: "idx", scope: !10517, file: !3, line: 8655, type: !2252)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 8654, column: 2)
!10518 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8653, column: 11)
!10519 = !DILocalVariable(name: "value", scope: !10517, file: !3, line: 8656, type: !2298)
!10520 = !DILocalVariable(name: "exp1", scope: !10521, file: !3, line: 8670, type: !2298)
!10521 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8669, column: 7)
!10522 = !DILocalVariable(name: "as", scope: !10521, file: !3, line: 8671, type: !8275)
!10523 = !DILocalVariable(name: "address_mode", scope: !10521, file: !3, line: 8672, type: !5)
!10524 = !DILocalVariable(name: "t", scope: !10525, file: !3, line: 8676, type: !2298)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 8675, column: 4)
!10526 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 8674, column: 6)
!10527 = !DILocalVariable(name: "align", scope: !10528, file: !3, line: 8694, type: !2175)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 8693, column: 4)
!10529 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 8692, column: 6)
!10530 = !DILocalVariable(name: "icode", scope: !10531, file: !3, line: 8708, type: !2175)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 8707, column: 4)
!10532 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 8706, column: 6)
!10533 = !DILocalVariable(name: "reg", scope: !10531, file: !3, line: 8709, type: !2182)
!10534 = !DILocalVariable(name: "insn", scope: !10531, file: !3, line: 8709, type: !2182)
!10535 = !DILocalVariable(name: "as", scope: !10536, file: !3, line: 8734, type: !8275)
!10536 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8733, column: 7)
!10537 = !DILocalVariable(name: "addr", scope: !10536, file: !3, line: 8735, type: !10538)
!10538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_address", file: !2504, line: 862, size: 320, elements: !10539)
!10539 = !{!10540, !10541, !10542, !10543, !10544}
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "symbol", scope: !10538, file: !2504, line: 864, baseType: !2298, size: 64)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10538, file: !2504, line: 864, baseType: !2298, size: 64, offset: 64)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10538, file: !2504, line: 864, baseType: !2298, size: 64, offset: 128)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !10538, file: !2504, line: 864, baseType: !2298, size: 64, offset: 192)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10538, file: !2504, line: 864, baseType: !2298, size: 64, offset: 256)
!10545 = !DILocalVariable(name: "array", scope: !10546, file: !3, line: 8749, type: !2298)
!10546 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8748, column: 7)
!10547 = !DILocalVariable(name: "index", scope: !10546, file: !3, line: 8750, type: !2298)
!10548 = !DILocalVariable(name: "t", scope: !10549, file: !3, line: 8761, type: !2298)
!10549 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 8760, column: 4)
!10550 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 8757, column: 6)
!10551 = !DILocalVariable(name: "ix", scope: !10552, file: !3, line: 8779, type: !2252)
!10552 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 8778, column: 4)
!10553 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 8772, column: 6)
!10554 = !DILocalVariable(name: "field", scope: !10552, file: !3, line: 8780, type: !2298)
!10555 = !DILocalVariable(name: "value", scope: !10552, file: !3, line: 8780, type: !2298)
!10556 = !DILocalVariable(name: "init", scope: !10557, file: !3, line: 8803, type: !2298)
!10557 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 8802, column: 8)
!10558 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 8801, column: 10)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !3, line: 8800, column: 4)
!10560 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 8792, column: 11)
!10561 = !DILocalVariable(name: "ix", scope: !10562, file: !3, line: 8807, type: !2252)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 8806, column: 5)
!10563 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 8805, column: 7)
!10564 = !DILocalVariable(name: "field", scope: !10562, file: !3, line: 8808, type: !2298)
!10565 = !DILocalVariable(name: "value", scope: !10562, file: !3, line: 8808, type: !2298)
!10566 = !DILocalVariable(name: "ret", scope: !10567, file: !3, line: 8825, type: !2182)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 8818, column: 8)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 8817, column: 10)
!10569 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 8813, column: 4)
!10570 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 8812, column: 13)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 8810, column: 7)
!10572 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 8810, column: 7)
!10573 = !DILocalVariable(name: "index1", scope: !10574, file: !3, line: 8837, type: !2298)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 8836, column: 5)
!10575 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 8835, column: 11)
!10576 = !DILocalVariable(name: "low_bound", scope: !10574, file: !3, line: 8838, type: !2298)
!10577 = !DILocalVariable(name: "type", scope: !10578, file: !3, line: 8858, type: !2298)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 8857, column: 9)
!10579 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 8855, column: 11)
!10580 = !DILocalVariable(name: "mode", scope: !10578, file: !3, line: 8859, type: !5)
!10581 = !DILocalVariable(name: "idx", scope: !10582, file: !3, line: 8878, type: !2252)
!10582 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 8877, column: 2)
!10583 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8876, column: 11)
!10584 = !DILocalVariable(name: "field", scope: !10582, file: !3, line: 8879, type: !2298)
!10585 = !DILocalVariable(name: "value", scope: !10582, file: !3, line: 8879, type: !2298)
!10586 = !DILocalVariable(name: "bitsize", scope: !10587, file: !3, line: 8902, type: !2269)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 8901, column: 5)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8900, column: 7)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 8895, column: 8)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 8883, column: 10)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 8881, column: 4)
!10592 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 8881, column: 4)
!10593 = !DILocalVariable(name: "imode", scope: !10587, file: !3, line: 8903, type: !5)
!10594 = !DILocalVariable(name: "count", scope: !10595, file: !3, line: 8912, type: !2298)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 8911, column: 9)
!10596 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 8905, column: 11)
!10597 = !DILocalVariable(name: "mode1", scope: !10598, file: !3, line: 8932, type: !5)
!10598 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8931, column: 7)
!10599 = !DILocalVariable(name: "mode2", scope: !10598, file: !3, line: 8932, type: !5)
!10600 = !DILocalVariable(name: "bitsize", scope: !10598, file: !3, line: 8933, type: !2269)
!10601 = !DILocalVariable(name: "bitpos", scope: !10598, file: !3, line: 8933, type: !2269)
!10602 = !DILocalVariable(name: "offset", scope: !10598, file: !3, line: 8934, type: !2298)
!10603 = !DILocalVariable(name: "volatilep", scope: !10598, file: !3, line: 8935, type: !2175)
!10604 = !DILocalVariable(name: "must_force_mem", scope: !10598, file: !3, line: 8935, type: !2175)
!10605 = !DILocalVariable(name: "tem", scope: !10598, file: !3, line: 8936, type: !2298)
!10606 = !DILocalVariable(name: "orig_op0", scope: !10598, file: !3, line: 8938, type: !2182)
!10607 = !DILocalVariable(name: "memloc", scope: !10598, file: !3, line: 8938, type: !2182)
!10608 = !DILocalVariable(name: "nt", scope: !10609, file: !3, line: 9020, type: !2298)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 9019, column: 4)
!10610 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 9018, column: 11)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !3, line: 9013, column: 11)
!10612 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9004, column: 6)
!10613 = !DILocalVariable(name: "address_mode", scope: !10614, file: !3, line: 9030, type: !5)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 9029, column: 4)
!10615 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9028, column: 6)
!10616 = !DILocalVariable(name: "offset_rtx", scope: !10614, file: !3, line: 9031, type: !2182)
!10617 = !DILocalVariable(name: "ext_mode", scope: !10618, file: !3, line: 9108, type: !5)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 9107, column: 4)
!10619 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9079, column: 6)
!10620 = !DILocalVariable(name: "size", scope: !10621, file: !3, line: 9172, type: !2269)
!10621 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 9171, column: 8)
!10622 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 9170, column: 10)
!10623 = !DILocalVariable(name: "new_rtx", scope: !10621, file: !3, line: 9173, type: !2182)
!10624 = !DILocalVariable(name: "fndecl", scope: !10625, file: !3, line: 9234, type: !2298)
!10625 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9233, column: 7)
!10626 = !DILocalVariable(name: "attr", scope: !10625, file: !3, line: 9234, type: !2298)
!10627 = !DILocalVariable(name: "mode1", scope: !10628, file: !3, line: 9269, type: !5)
!10628 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 9268, column: 7)
!10629 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9264, column: 11)
!10630 = !DILocalVariable(name: "bitsize", scope: !10628, file: !3, line: 9270, type: !2269)
!10631 = !DILocalVariable(name: "bitpos", scope: !10628, file: !3, line: 9270, type: !2269)
!10632 = !DILocalVariable(name: "offset", scope: !10628, file: !3, line: 9271, type: !2298)
!10633 = !DILocalVariable(name: "unsignedp", scope: !10628, file: !3, line: 9272, type: !2175)
!10634 = !DILocalVariable(name: "volatilep", scope: !10628, file: !3, line: 9273, type: !2175)
!10635 = !DILocalVariable(name: "tem", scope: !10628, file: !3, line: 9274, type: !2298)
!10636 = !DILocalVariable(name: "orig_op0", scope: !10628, file: !3, line: 9278, type: !2182)
!10637 = !DILocalVariable(name: "inner_type", scope: !10638, file: !3, line: 9354, type: !2298)
!10638 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 9349, column: 2)
!10639 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 9348, column: 16)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 9343, column: 16)
!10641 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 9333, column: 16)
!10642 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9329, column: 11)
!10643 = !DILocalVariable(name: "iter", scope: !10644, file: !3, line: 9441, type: !10645)
!10644 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9440, column: 7)
!10645 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree_stmt_iterator", file: !10646, line: 35, baseType: !10647)
!10646 = !DIFile(filename: "./tree-iterator.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!10647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10646, line: 32, size: 128, elements: !10648)
!10648 = !{!10649, !10650}
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !10647, file: !10646, line: 33, baseType: !3284, size: 64)
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !10647, file: !10646, line: 34, baseType: !2298, size: 64, offset: 64)
!10651 = !DILocalVariable(name: "lhs", scope: !10652, file: !3, line: 9510, type: !2298)
!10652 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9509, column: 7)
!10653 = !DILocalVariable(name: "rhs", scope: !10652, file: !3, line: 9511, type: !2298)
!10654 = !DILocalVariable(name: "label", scope: !10655, file: !3, line: 9530, type: !2182)
!10655 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 9529, column: 4)
!10656 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 9522, column: 6)
!10657 = !DILocalVariable(name: "value", scope: !10655, file: !3, line: 9531, type: !2175)
!10658 = !DILocalVariable(name: "oprnd0", scope: !10659, file: !3, line: 9603, type: !2298)
!10659 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9602, column: 7)
!10660 = !DILocalVariable(name: "oprnd1", scope: !10659, file: !3, line: 9604, type: !2298)
!10661 = !DILocalVariable(name: "oprnd2", scope: !10659, file: !3, line: 9605, type: !2298)
!10662 = !DILocalVariable(name: "op2", scope: !10659, file: !3, line: 9606, type: !2182)
!10663 = !DILocalVariable(name: "oprnd0", scope: !10664, file: !3, line: 9619, type: !2298)
!10664 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9618, column: 7)
!10665 = !DILocalVariable(name: "oprnd1", scope: !10664, file: !3, line: 9620, type: !2298)
!10666 = !DILocalVariable(name: "oprnd2", scope: !10664, file: !3, line: 9621, type: !2298)
!10667 = !DILocalVariable(name: "op2", scope: !10664, file: !3, line: 9622, type: !2182)
!10668 = !DILocalVariable(name: "decl", scope: !10669, file: !3, line: 9635, type: !2298)
!10669 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9632, column: 7)
!10670 = !DILabel(scope: !10494, name: "expand_decl_rtl", file: !3, line: 8450)
!10671 = !DILabel(scope: !10494, name: "normal_inner_ref", file: !3, line: 8930)
!10672 = !DILocation(line: 0, scope: !10458)
!10673 = !DILocation(line: 8290, column: 3, scope: !10458)
!10674 = !DILocation(line: 8292, column: 3, scope: !10458)
!10675 = !DILocation(line: 8294, column: 25, scope: !10458)
!10676 = !DILocation(line: 8300, column: 20, scope: !10458)
!10677 = !DILocation(line: 8301, column: 3, scope: !10458)
!10678 = !DILocation(line: 8304, column: 10, scope: !10458)
!10679 = !DILocation(line: 8305, column: 10, scope: !10458)
!10680 = !DILocation(line: 8306, column: 15, scope: !10458)
!10681 = !DILocation(line: 8309, column: 8, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 8309, column: 7)
!10683 = !DILocation(line: 0, scope: !10682)
!10684 = !DILocation(line: 8306, column: 13, scope: !10458)
!10685 = !DILocation(line: 8309, column: 7, scope: !10458)
!10686 = !DILocation(line: 8310, column: 13, scope: !10682)
!10687 = !DILocation(line: 8310, column: 5, scope: !10682)
!10688 = !DILocation(line: 8313, column: 20, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 8311, column: 7)
!10690 = !DILocation(line: 8313, column: 10, scope: !10689)
!10691 = !DILocation(line: 8314, column: 20, scope: !10689)
!10692 = !DILocation(line: 8314, column: 10, scope: !10689)
!10693 = !DILocation(line: 8315, column: 20, scope: !10689)
!10694 = !DILocation(line: 8315, column: 10, scope: !10689)
!10695 = !DILocation(line: 8318, column: 7, scope: !10458)
!10696 = !DILocation(line: 8318, column: 12, scope: !10458)
!10697 = !DILocation(line: 8319, column: 7, scope: !10458)
!10698 = !DILocation(line: 8319, column: 12, scope: !10458)
!10699 = !DILocation(line: 8320, column: 7, scope: !10458)
!10700 = !DILocation(line: 8320, column: 11, scope: !10458)
!10701 = !DILocation(line: 8321, column: 7, scope: !10458)
!10702 = !DILocation(line: 8321, column: 11, scope: !10458)
!10703 = !DILocation(line: 8322, column: 7, scope: !10458)
!10704 = !DILocation(line: 8322, column: 11, scope: !10458)
!10705 = !DILocation(line: 8323, column: 7, scope: !10458)
!10706 = !DILocation(line: 8323, column: 16, scope: !10458)
!10707 = !DILocation(line: 8325, column: 23, scope: !10458)
!10708 = !DILocation(line: 8325, column: 20, scope: !10458)
!10709 = !DILocation(line: 8326, column: 6, scope: !10458)
!10710 = !DILocation(line: 8326, column: 11, scope: !10458)
!10711 = !DILocation(line: 8328, column: 6, scope: !10458)
!10712 = !DILocation(line: 8328, column: 23, scope: !10458)
!10713 = !DILocation(line: 8334, column: 9, scope: !10458)
!10714 = !DILocation(line: 8334, column: 12, scope: !10458)
!10715 = !DILocation(line: 8334, column: 29, scope: !10458)
!10716 = !DILocation(line: 8335, column: 9, scope: !10458)
!10717 = !DILocation(line: 8335, column: 12, scope: !10458)
!10718 = !DILocation(line: 8335, column: 40, scope: !10458)
!10719 = !DILocation(line: 8335, column: 38, scope: !10458)
!10720 = !DILocation(line: 8343, column: 7, scope: !10458)
!10721 = !DILocation(line: 8345, column: 13, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 8345, column: 11)
!10723 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 8344, column: 5)
!10724 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 8343, column: 7)
!10725 = !DILocation(line: 8345, column: 11, scope: !10723)
!10726 = !DILocation(line: 8346, column: 2, scope: !10722)
!10727 = !DILocation(line: 8350, column: 11, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 8350, column: 11)
!10729 = !DILocation(line: 8351, column: 4, scope: !10728)
!10730 = !DILocation(line: 8351, column: 23, scope: !10728)
!10731 = !DILocation(line: 8352, column: 4, scope: !10728)
!10732 = !DILocation(line: 8353, column: 16, scope: !10728)
!10733 = !DILocation(line: 8355, column: 11, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 8354, column: 2)
!10735 = !DILocation(line: 8356, column: 8, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 8356, column: 8)
!10737 = !DILocation(line: 8356, column: 8, scope: !10734)
!10738 = !DILocation(line: 8357, column: 13, scope: !10736)
!10739 = !DILocation(line: 8357, column: 6, scope: !10736)
!10740 = !DILocation(line: 8358, column: 11, scope: !10734)
!10741 = !DILocation(line: 8358, column: 4, scope: !10734)
!10742 = !DILocation(line: 8361, column: 11, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 8361, column: 11)
!10744 = !DILocation(line: 8361, column: 34, scope: !10743)
!10745 = !DILocation(line: 8362, column: 12, scope: !10743)
!10746 = !DILocation(line: 8362, column: 4, scope: !10743)
!10747 = !DILocation(line: 8362, column: 37, scope: !10743)
!10748 = !DILocation(line: 8363, column: 9, scope: !10743)
!10749 = !DILocation(line: 8363, column: 2, scope: !10743)
!10750 = !DILocation(line: 8366, column: 39, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8366, column: 16)
!10752 = !DILocation(line: 8367, column: 9, scope: !10751)
!10753 = !DILocation(line: 8367, column: 35, scope: !10751)
!10754 = !DILocation(line: 8368, column: 9, scope: !10751)
!10755 = !DILocation(line: 8370, column: 4, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 8369, column: 2)
!10757 = !DILocation(line: 8371, column: 26, scope: !10756)
!10758 = !DILocation(line: 8371, column: 4, scope: !10756)
!10759 = !DILocation(line: 8372, column: 11, scope: !10756)
!10760 = !DILocation(line: 8372, column: 4, scope: !10756)
!10761 = !DILocation(line: 8374, column: 21, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 8374, column: 16)
!10763 = !DILocation(line: 8374, column: 16, scope: !10751)
!10764 = !DILocation(line: 8376, column: 4, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 8375, column: 2)
!10766 = !DILocation(line: 8377, column: 26, scope: !10765)
!10767 = !DILocation(line: 8377, column: 4, scope: !10765)
!10768 = !DILocation(line: 8378, column: 26, scope: !10765)
!10769 = !DILocation(line: 8378, column: 4, scope: !10765)
!10770 = !DILocation(line: 8379, column: 11, scope: !10765)
!10771 = !DILocation(line: 8379, column: 4, scope: !10765)
!10772 = !DILocation(line: 8385, column: 36, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 8385, column: 7)
!10774 = !DILocation(line: 8385, column: 24, scope: !10773)
!10775 = !DILocation(line: 8389, column: 15, scope: !10458)
!10776 = !DILocation(line: 8392, column: 3, scope: !10458)
!10777 = !DILocation(line: 8396, column: 18, scope: !10493)
!10778 = !DILocation(line: 0, scope: !10493)
!10779 = !DILocation(line: 8398, column: 9, scope: !10493)
!10780 = !DILocation(line: 8399, column: 9, scope: !10493)
!10781 = !DILocation(line: 8401, column: 18, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 8401, column: 6)
!10783 = !DILocation(line: 8401, column: 15, scope: !10782)
!10784 = !DILocation(line: 8402, column: 18, scope: !10782)
!10785 = !DILocation(line: 8402, column: 6, scope: !10782)
!10786 = !DILocation(line: 8403, column: 4, scope: !10782)
!10787 = !DILocation(line: 8403, column: 32, scope: !10782)
!10788 = !DILocation(line: 8405, column: 9, scope: !10493)
!10789 = !DILocation(line: 8414, column: 12, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8414, column: 11)
!10791 = !DILocation(line: 8414, column: 11, scope: !10494)
!10792 = !DILocation(line: 8415, column: 29, scope: !10790)
!10793 = !DILocation(line: 8415, column: 9, scope: !10790)
!10794 = !DILocation(line: 8415, column: 2, scope: !10790)
!10795 = !DILocation(line: 8417, column: 13, scope: !10496)
!10796 = !DILocation(line: 0, scope: !10496)
!10797 = !DILocation(line: 8418, column: 6, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 8418, column: 6)
!10799 = !DILocation(line: 8418, column: 6, scope: !10496)
!10800 = !DILocation(line: 8419, column: 29, scope: !10798)
!10801 = !DILocation(line: 8419, column: 11, scope: !10798)
!10802 = !DILocation(line: 8419, column: 4, scope: !10798)
!10803 = !DILocation(line: 8422, column: 18, scope: !10494)
!10804 = !DILocation(line: 8423, column: 13, scope: !10494)
!10805 = !DILocation(line: 8424, column: 7, scope: !10494)
!10806 = !DILocation(line: 8430, column: 11, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8430, column: 11)
!10808 = !DILocation(line: 8430, column: 27, scope: !10807)
!10809 = !DILocation(line: 8431, column: 4, scope: !10807)
!10810 = !DILocation(line: 8431, column: 7, scope: !10807)
!10811 = !DILocation(line: 8432, column: 4, scope: !10807)
!10812 = !DILocation(line: 8432, column: 8, scope: !10807)
!10813 = !DILocation(line: 8432, column: 26, scope: !10807)
!10814 = !DILocation(line: 8432, column: 29, scope: !10807)
!10815 = !DILocation(line: 8430, column: 11, scope: !10494)
!10816 = !DILocation(line: 8433, column: 2, scope: !10807)
!10817 = !DILocation(line: 8437, column: 21, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8437, column: 11)
!10819 = !DILocation(line: 8437, column: 13, scope: !10818)
!10820 = !DILocation(line: 8438, column: 4, scope: !10818)
!10821 = !DILocation(line: 8438, column: 7, scope: !10818)
!10822 = !DILocation(line: 8438, column: 23, scope: !10818)
!10823 = !DILocation(line: 8439, column: 4, scope: !10818)
!10824 = !DILocation(line: 8439, column: 7, scope: !10818)
!10825 = !DILocation(line: 8437, column: 11, scope: !10494)
!10826 = !DILocation(line: 8441, column: 44, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 8440, column: 2)
!10828 = !DILocation(line: 8441, column: 10, scope: !10827)
!10829 = !DILocation(line: 8442, column: 11, scope: !10827)
!10830 = !DILocation(line: 8442, column: 4, scope: !10827)
!10831 = !DILocation(line: 8449, column: 18, scope: !10494)
!10832 = !DILocation(line: 0, scope: !10494)
!10833 = !DILocation(line: 8450, column: 5, scope: !10494)
!10834 = !DILocation(line: 8451, column: 7, scope: !10494)
!10835 = !DILocation(line: 8452, column: 18, scope: !10494)
!10836 = !DILocation(line: 8457, column: 13, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8457, column: 11)
!10838 = !DILocation(line: 8457, column: 11, scope: !10494)
!10839 = !DILocation(line: 8459, column: 4, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 8458, column: 2)
!10841 = !DILocation(line: 8460, column: 20, scope: !10840)
!10842 = !DILocation(line: 8461, column: 2, scope: !10840)
!10843 = !DILocation(line: 8468, column: 17, scope: !10494)
!10844 = !DILocation(line: 8469, column: 7, scope: !10494)
!10845 = !DILocation(line: 8479, column: 11, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8479, column: 11)
!10847 = !DILocation(line: 8479, column: 28, scope: !10846)
!10848 = !DILocation(line: 8479, column: 31, scope: !10846)
!10849 = !DILocation(line: 8479, column: 11, scope: !10494)
!10850 = !DILocation(line: 8480, column: 9, scope: !10846)
!10851 = !DILocation(line: 8480, column: 2, scope: !10846)
!10852 = !DILocation(line: 8485, column: 45, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10846, file: !3, line: 8485, column: 16)
!10854 = !DILocation(line: 8485, column: 33, scope: !10853)
!10855 = !DILocation(line: 8487, column: 8, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 8487, column: 8)
!10857 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 8486, column: 2)
!10858 = !DILocation(line: 8487, column: 8, scope: !10857)
!10859 = !DILocation(line: 8488, column: 15, scope: !10856)
!10860 = !DILocation(line: 8488, column: 6, scope: !10856)
!10861 = !DILocation(line: 8489, column: 15, scope: !10857)
!10862 = !DILocation(line: 8491, column: 8, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 8490, column: 8)
!10864 = !DILocation(line: 8492, column: 41, scope: !10863)
!10865 = !DILocation(line: 8493, column: 13, scope: !10863)
!10866 = !DILocation(line: 8494, column: 13, scope: !10863)
!10867 = !DILocation(line: 8492, column: 12, scope: !10863)
!10868 = !DILocation(line: 8490, column: 8, scope: !10857)
!10869 = !DILocation(line: 8496, column: 18, scope: !10863)
!10870 = !DILocation(line: 8496, column: 8, scope: !10863)
!10871 = !DILocation(line: 8495, column: 13, scope: !10863)
!10872 = !DILocation(line: 8495, column: 6, scope: !10863)
!10873 = !DILocation(line: 8501, column: 16, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8501, column: 11)
!10875 = !DILocation(line: 8501, column: 11, scope: !10494)
!10876 = !DILocation(line: 8503, column: 8, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 8503, column: 8)
!10878 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 8502, column: 2)
!10879 = !DILocation(line: 8503, column: 21, scope: !10877)
!10880 = !DILocation(line: 8503, column: 24, scope: !10877)
!10881 = !DILocation(line: 8503, column: 8, scope: !10878)
!10882 = !DILocation(line: 8504, column: 40, scope: !10877)
!10883 = !DILocation(line: 8504, column: 6, scope: !10877)
!10884 = !DILocation(line: 8513, column: 11, scope: !10499)
!10885 = !DILocation(line: 8514, column: 4, scope: !10499)
!10886 = !DILocation(line: 8514, column: 7, scope: !10499)
!10887 = !DILocation(line: 8514, column: 30, scope: !10499)
!10888 = !DILocation(line: 8514, column: 27, scope: !10499)
!10889 = !DILocation(line: 8513, column: 11, scope: !10494)
!10890 = !DILocation(line: 8520, column: 12, scope: !10498)
!10891 = !DILocation(line: 0, scope: !10498)
!10892 = !DILocation(line: 8521, column: 4, scope: !10498)
!10893 = !DILocation(line: 8523, column: 11, scope: !10498)
!10894 = !DILocation(line: 8524, column: 4, scope: !10498)
!10895 = !DILocation(line: 8524, column: 33, scope: !10498)
!10896 = !DILocation(line: 0, scope: !10501)
!10897 = !DILocation(line: 8525, column: 4, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 8525, column: 4)
!10899 = !DILocation(line: 8525, column: 4, scope: !10501)
!10900 = !DILocation(line: 0, scope: !10898)
!10901 = !DILocation(line: 8525, column: 4, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 8525, column: 4)
!10903 = !DILocation(line: 8532, column: 34, scope: !10494)
!10904 = !DILocation(line: 8533, column: 6, scope: !10494)
!10905 = !DILocation(line: 8532, column: 14, scope: !10494)
!10906 = !DILocation(line: 8535, column: 7, scope: !10494)
!10907 = !DILocation(line: 0, scope: !10504)
!10908 = !DILocation(line: 8540, column: 6, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 8540, column: 6)
!10910 = !DILocation(line: 8540, column: 28, scope: !10909)
!10911 = !DILocation(line: 8541, column: 6, scope: !10909)
!10912 = !DILocation(line: 8541, column: 31, scope: !10909)
!10913 = !DILocation(line: 8542, column: 6, scope: !10909)
!10914 = !DILocation(line: 8542, column: 31, scope: !10909)
!10915 = !DILocation(line: 8543, column: 6, scope: !10909)
!10916 = !DILocation(line: 8543, column: 31, scope: !10909)
!10917 = !DILocation(line: 8544, column: 6, scope: !10909)
!10918 = !DILocation(line: 8544, column: 31, scope: !10909)
!10919 = !DILocation(line: 8545, column: 6, scope: !10909)
!10920 = !DILocation(line: 8545, column: 31, scope: !10909)
!10921 = !DILocation(line: 8540, column: 6, scope: !10504)
!10922 = !DILocation(line: 8546, column: 11, scope: !10909)
!10923 = !DILocation(line: 8546, column: 4, scope: !10909)
!10924 = !DILocation(line: 8547, column: 28, scope: !10507)
!10925 = !DILocation(line: 8547, column: 6, scope: !10504)
!10926 = !DILocation(line: 8549, column: 44, scope: !10506)
!10927 = !DILocation(line: 8549, column: 27, scope: !10506)
!10928 = !DILocation(line: 0, scope: !10506)
!10929 = !DILocation(line: 8550, column: 10, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 8550, column: 10)
!10931 = !DILocation(line: 8550, column: 10, scope: !10506)
!10932 = !DILocation(line: 8551, column: 14, scope: !10930)
!10933 = !DILocation(line: 8551, column: 8, scope: !10930)
!10934 = !DILocation(line: 8553, column: 7, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 8553, column: 6)
!10936 = !DILocation(line: 8553, column: 6, scope: !10504)
!10937 = !DILocation(line: 8555, column: 11, scope: !10935)
!10938 = !DILocation(line: 8554, column: 10, scope: !10935)
!10939 = !DILocation(line: 8554, column: 4, scope: !10935)
!10940 = !DILocation(line: 8556, column: 27, scope: !10504)
!10941 = !DILocation(line: 8556, column: 9, scope: !10504)
!10942 = !DILocation(line: 8556, column: 2, scope: !10504)
!10943 = !DILocation(line: 8561, column: 27, scope: !10494)
!10944 = !DILocation(line: 8561, column: 14, scope: !10494)
!10945 = !DILocation(line: 8561, column: 7, scope: !10494)
!10946 = !DILocation(line: 8574, column: 14, scope: !10494)
!10947 = !DILocation(line: 8574, column: 7, scope: !10494)
!10948 = !DILocation(line: 8578, column: 14, scope: !10494)
!10949 = !DILocation(line: 8578, column: 7, scope: !10494)
!10950 = !DILocation(line: 8583, column: 11, scope: !10510)
!10951 = !DILocation(line: 8583, column: 27, scope: !10510)
!10952 = !DILocation(line: 8583, column: 30, scope: !10510)
!10953 = !DILocation(line: 8583, column: 57, scope: !10510)
!10954 = !DILocation(line: 8583, column: 11, scope: !10494)
!10955 = !DILocation(line: 8585, column: 29, scope: !10509)
!10956 = !DILocation(line: 0, scope: !10509)
!10957 = !DILocation(line: 8588, column: 12, scope: !10509)
!10958 = !DILocation(line: 8589, column: 12, scope: !10509)
!10959 = !DILocation(line: 8592, column: 23, scope: !10509)
!10960 = !DILocation(line: 8592, column: 10, scope: !10509)
!10961 = !DILocation(line: 8592, column: 8, scope: !10509)
!10962 = !DILocation(line: 8593, column: 23, scope: !10509)
!10963 = !DILocation(line: 8593, column: 10, scope: !10509)
!10964 = !DILocation(line: 8593, column: 8, scope: !10509)
!10965 = !DILocation(line: 8595, column: 12, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 8595, column: 8)
!10967 = !DILocation(line: 8595, column: 8, scope: !10509)
!10968 = !DILocation(line: 8596, column: 6, scope: !10966)
!10969 = !DILocation(line: 8597, column: 12, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 8597, column: 8)
!10971 = !DILocation(line: 8597, column: 8, scope: !10509)
!10972 = !DILocation(line: 8598, column: 6, scope: !10970)
!10973 = !DILocation(line: 8606, column: 14, scope: !10494)
!10974 = !DILocation(line: 8612, column: 4, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 8611, column: 11)
!10976 = !DILocation(line: 8614, column: 44, scope: !10975)
!10977 = !DILocation(line: 8615, column: 10, scope: !10975)
!10978 = !DILocation(line: 8614, column: 9, scope: !10975)
!10979 = !DILocation(line: 8611, column: 11, scope: !10494)
!10980 = !DILocation(line: 8617, column: 21, scope: !10975)
!10981 = !DILocation(line: 8617, column: 11, scope: !10975)
!10982 = !DILocation(line: 8616, column: 9, scope: !10975)
!10983 = !DILocation(line: 8616, column: 2, scope: !10975)
!10984 = !DILocation(line: 0, scope: !10514)
!10985 = !DILocation(line: 8623, column: 12, scope: !10514)
!10986 = !DILocation(line: 8625, column: 7, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10514, file: !3, line: 8625, column: 6)
!10988 = !DILocation(line: 8625, column: 6, scope: !10514)
!10989 = !DILocation(line: 8631, column: 6, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 8626, column: 4)
!10991 = !DILocation(line: 8633, column: 12, scope: !10990)
!10992 = !DILocation(line: 8635, column: 6, scope: !10990)
!10993 = !DILocation(line: 8635, column: 28, scope: !10990)
!10994 = !DILocation(line: 8636, column: 27, scope: !10990)
!10995 = !DILocation(line: 8638, column: 6, scope: !10990)
!10996 = !DILocation(line: 8638, column: 28, scope: !10990)
!10997 = !DILocation(line: 8639, column: 33, scope: !10990)
!10998 = !DILocation(line: 8641, column: 11, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10990, file: !3, line: 8641, column: 10)
!11000 = !DILocation(line: 8641, column: 10, scope: !10990)
!11001 = !DILocation(line: 8642, column: 14, scope: !10999)
!11002 = !DILocation(line: 8642, column: 8, scope: !10999)
!11003 = !DILocation(line: 8643, column: 6, scope: !10990)
!11004 = !DILocation(line: 8644, column: 4, scope: !10990)
!11005 = !DILocation(line: 8653, column: 11, scope: !10494)
!11006 = !DILocation(line: 0, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 8658, column: 4)
!11008 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 8658, column: 4)
!11009 = !DILocation(line: 8658, column: 4, scope: !11008)
!11010 = !DILocation(line: 0, scope: !11008)
!11011 = !DILocation(line: 0, scope: !10517)
!11012 = !DILocation(line: 8658, column: 4, scope: !11007)
!11013 = !DILocation(line: 8659, column: 6, scope: !11007)
!11014 = distinct !{!11014, !11009, !11015}
!11015 = !DILocation(line: 8659, column: 61, scope: !11008)
!11016 = !DILocation(line: 8664, column: 14, scope: !10494)
!11017 = !DILocation(line: 8664, column: 7, scope: !10494)
!11018 = !DILocation(line: 0, scope: !10521)
!11019 = !DILocation(line: 8674, column: 15, scope: !10526)
!11020 = !DILocation(line: 8674, column: 6, scope: !10521)
!11021 = !DILocation(line: 8678, column: 10, scope: !10525)
!11022 = !DILocation(line: 0, scope: !10525)
!11023 = !DILocation(line: 8679, column: 10, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 8679, column: 10)
!11025 = !DILocation(line: 8679, column: 10, scope: !10525)
!11026 = !DILocation(line: 8680, column: 15, scope: !11024)
!11027 = !DILocation(line: 8680, column: 8, scope: !11024)
!11028 = !DILocation(line: 8683, column: 6, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 8683, column: 6)
!11030 = !DILocation(line: 8683, column: 6, scope: !10521)
!11031 = !DILocation(line: 8685, column: 11, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 8684, column: 4)
!11033 = !DILocation(line: 8686, column: 40, scope: !11032)
!11034 = !DILocation(line: 8686, column: 21, scope: !11032)
!11035 = !DILocation(line: 8687, column: 4, scope: !11032)
!11036 = !DILocation(line: 8689, column: 8, scope: !10521)
!11037 = !DILocation(line: 8690, column: 8, scope: !10521)
!11038 = !DILocation(line: 8690, column: 6, scope: !10521)
!11039 = !DILocation(line: 8692, column: 11, scope: !10529)
!11040 = !DILocation(line: 8692, column: 6, scope: !10521)
!11041 = !DILocation(line: 8694, column: 18, scope: !10528)
!11042 = !DILocation(line: 0, scope: !10528)
!11043 = !DILocation(line: 8695, column: 12, scope: !10528)
!11044 = !DILocation(line: 8696, column: 12, scope: !10528)
!11045 = !DILocation(line: 8696, column: 10, scope: !10528)
!11046 = !DILocation(line: 8697, column: 4, scope: !10528)
!11047 = !DILocation(line: 8699, column: 28, scope: !10521)
!11048 = !DILocation(line: 8699, column: 9, scope: !10521)
!11049 = !DILocation(line: 8701, column: 2, scope: !10521)
!11050 = !DILocation(line: 8702, column: 2, scope: !10521)
!11051 = !DILocation(line: 8706, column: 11, scope: !10532)
!11052 = !DILocation(line: 8706, column: 6, scope: !10521)
!11053 = !DILocation(line: 8711, column: 6, scope: !10531)
!11054 = !DILocation(line: 8715, column: 14, scope: !10531)
!11055 = !DILocation(line: 8715, column: 55, scope: !10531)
!11056 = !DILocation(line: 0, scope: !10531)
!11057 = !DILocation(line: 8716, column: 6, scope: !10531)
!11058 = !DILocation(line: 8720, column: 12, scope: !10531)
!11059 = !DILocation(line: 8723, column: 13, scope: !10531)
!11060 = !DILocation(line: 8724, column: 6, scope: !10531)
!11061 = !DILocation(line: 8734, column: 20, scope: !10536)
!11062 = !DILocation(line: 0, scope: !10536)
!11063 = !DILocation(line: 8735, column: 2, scope: !10536)
!11064 = !DILocation(line: 8737, column: 2, scope: !10536)
!11065 = !DILocation(line: 8738, column: 8, scope: !10536)
!11066 = !DILocation(line: 8738, column: 6, scope: !10536)
!11067 = !DILocation(line: 8739, column: 8, scope: !10536)
!11068 = !DILocation(line: 8739, column: 6, scope: !10536)
!11069 = !DILocation(line: 8740, column: 9, scope: !10536)
!11070 = !DILocation(line: 8741, column: 28, scope: !10536)
!11071 = !DILocation(line: 8741, column: 2, scope: !10536)
!11072 = !DILocation(line: 8742, column: 2, scope: !10536)
!11073 = !DILocation(line: 8743, column: 7, scope: !10494)
!11074 = !DILocation(line: 8744, column: 7, scope: !10494)
!11075 = !DILocation(line: 0, scope: !10546)
!11076 = !DILocation(line: 8758, column: 6, scope: !10550)
!11077 = !DILocation(line: 8761, column: 15, scope: !10549)
!11078 = !DILocation(line: 0, scope: !10549)
!11079 = !DILocation(line: 8763, column: 10, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !10549, file: !3, line: 8763, column: 10)
!11081 = !DILocation(line: 8763, column: 10, scope: !10549)
!11082 = !DILocation(line: 8764, column: 15, scope: !11080)
!11083 = !DILocation(line: 8764, column: 8, scope: !11080)
!11084 = !DILocation(line: 8773, column: 6, scope: !10553)
!11085 = !DILocation(line: 8775, column: 9, scope: !10553)
!11086 = !DILocation(line: 8775, column: 27, scope: !10553)
!11087 = !DILocation(line: 8776, column: 6, scope: !10553)
!11088 = !DILocation(line: 8776, column: 11, scope: !10553)
!11089 = !DILocation(line: 8777, column: 6, scope: !10553)
!11090 = !DILocation(line: 8777, column: 9, scope: !10553)
!11091 = !DILocation(line: 8777, column: 27, scope: !10553)
!11092 = !DILocation(line: 8772, column: 6, scope: !10546)
!11093 = !DILocation(line: 0, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 8782, column: 6)
!11095 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 8782, column: 6)
!11096 = !DILocation(line: 8782, column: 6, scope: !11095)
!11097 = !DILocation(line: 0, scope: !11095)
!11098 = !DILocation(line: 0, scope: !10552)
!11099 = !DILocation(line: 8782, column: 6, scope: !11094)
!11100 = !DILocation(line: 8784, column: 12, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11094, file: !3, line: 8784, column: 12)
!11102 = !DILocation(line: 8784, column: 12, scope: !11094)
!11103 = !DILocation(line: 8786, column: 10, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 8786, column: 9)
!11105 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 8785, column: 3)
!11106 = !DILocation(line: 8786, column: 9, scope: !11105)
!11107 = !DILocation(line: 8787, column: 27, scope: !11104)
!11108 = !DILocation(line: 8787, column: 14, scope: !11104)
!11109 = !DILocation(line: 8787, column: 7, scope: !11104)
!11110 = distinct !{!11110, !11096, !11111}
!11111 = !DILocation(line: 8789, column: 3, scope: !11095)
!11112 = !DILocation(line: 8792, column: 11, scope: !10560)
!11113 = !DILocation(line: 8792, column: 20, scope: !10560)
!11114 = !DILocation(line: 8793, column: 4, scope: !10560)
!11115 = !DILocation(line: 8796, column: 7, scope: !10560)
!11116 = !DILocation(line: 8796, column: 29, scope: !10560)
!11117 = !DILocation(line: 8796, column: 34, scope: !10560)
!11118 = !DILocation(line: 8797, column: 4, scope: !10560)
!11119 = !DILocation(line: 8797, column: 25, scope: !10560)
!11120 = !DILocation(line: 8797, column: 37, scope: !10560)
!11121 = !DILocation(line: 8797, column: 40, scope: !10560)
!11122 = !DILocation(line: 8798, column: 4, scope: !10560)
!11123 = !DILocation(line: 8798, column: 7, scope: !10560)
!11124 = !DILocation(line: 8798, column: 40, scope: !10560)
!11125 = !DILocation(line: 8799, column: 4, scope: !10560)
!11126 = !DILocation(line: 8799, column: 15, scope: !10560)
!11127 = !DILocation(line: 8799, column: 7, scope: !10560)
!11128 = !DILocation(line: 8792, column: 11, scope: !10553)
!11129 = !DILocation(line: 8801, column: 10, scope: !10558)
!11130 = !DILocation(line: 8801, column: 28, scope: !10558)
!11131 = !DILocation(line: 8801, column: 10, scope: !10559)
!11132 = !DILocation(line: 8803, column: 15, scope: !10557)
!11133 = !DILocation(line: 0, scope: !10557)
!11134 = !DILocation(line: 8805, column: 7, scope: !10563)
!11135 = !DILocation(line: 8805, column: 24, scope: !10563)
!11136 = !DILocation(line: 8805, column: 7, scope: !10557)
!11137 = !DILocation(line: 0, scope: !10571)
!11138 = !DILocation(line: 8810, column: 7, scope: !10572)
!11139 = !DILocation(line: 0, scope: !10572)
!11140 = !DILocation(line: 0, scope: !10562)
!11141 = !DILocation(line: 8810, column: 7, scope: !10571)
!11142 = !DILocation(line: 8812, column: 13, scope: !10570)
!11143 = !DILocation(line: 8812, column: 13, scope: !10571)
!11144 = !DILocation(line: 8814, column: 10, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 8814, column: 10)
!11146 = !DILocation(line: 8814, column: 10, scope: !10569)
!11147 = !DILocation(line: 8817, column: 28, scope: !10568)
!11148 = !DILocation(line: 8817, column: 10, scope: !10569)
!11149 = !DILocation(line: 8825, column: 20, scope: !10567)
!11150 = !DILocation(line: 0, scope: !10567)
!11151 = !DILocation(line: 8827, column: 18, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 8827, column: 14)
!11153 = !DILocation(line: 8831, column: 26, scope: !10569)
!11154 = !DILocation(line: 8831, column: 13, scope: !10569)
!11155 = !DILocation(line: 8831, column: 6, scope: !10569)
!11156 = distinct !{!11156, !11138, !11157}
!11157 = !DILocation(line: 8833, column: 4, scope: !10572)
!11158 = !DILocation(line: 8835, column: 28, scope: !10575)
!11159 = !DILocation(line: 8835, column: 11, scope: !10563)
!11160 = !DILocation(line: 0, scope: !10574)
!11161 = !DILocation(line: 8838, column: 24, scope: !10574)
!11162 = !DILocation(line: 8839, column: 39, scope: !10574)
!11163 = !DILocation(line: 8839, column: 16, scope: !10574)
!11164 = !DILocation(line: 8850, column: 13, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 8850, column: 11)
!11166 = !DILocation(line: 8850, column: 11, scope: !10574)
!11167 = !DILocation(line: 8852, column: 33, scope: !11165)
!11168 = !DILocation(line: 8852, column: 10, scope: !11165)
!11169 = !DILocation(line: 8851, column: 18, scope: !11165)
!11170 = !DILocation(line: 8851, column: 9, scope: !11165)
!11171 = !DILocation(line: 8856, column: 12, scope: !10579)
!11172 = !DILocation(line: 8855, column: 15, scope: !10579)
!11173 = !DILocation(line: 8855, column: 13, scope: !10579)
!11174 = !DILocation(line: 8855, column: 11, scope: !10574)
!11175 = !DILocation(line: 8858, column: 16, scope: !10578)
!11176 = !DILocation(line: 0, scope: !10578)
!11177 = !DILocation(line: 8859, column: 29, scope: !10578)
!11178 = !DILocation(line: 8861, column: 8, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 8861, column: 8)
!11180 = !DILocation(line: 8861, column: 30, scope: !11179)
!11181 = !DILocation(line: 8862, column: 8, scope: !11179)
!11182 = !DILocation(line: 8862, column: 11, scope: !11179)
!11183 = !DILocation(line: 8862, column: 32, scope: !11179)
!11184 = !DILocation(line: 8861, column: 8, scope: !10578)
!11185 = !DILocation(line: 8863, column: 27, scope: !11179)
!11186 = !DILocation(line: 8864, column: 14, scope: !11179)
!11187 = !DILocation(line: 8863, column: 13, scope: !11179)
!11188 = !DILocation(line: 8863, column: 6, scope: !11179)
!11189 = !DILocation(line: 8867, column: 5, scope: !10575)
!11190 = !DILocation(line: 8868, column: 8, scope: !10558)
!11191 = !DILocation(line: 8870, column: 7, scope: !10494)
!11192 = !DILocation(line: 8876, column: 11, scope: !10583)
!11193 = !DILocation(line: 8876, column: 31, scope: !10583)
!11194 = !DILocation(line: 8876, column: 11, scope: !10494)
!11195 = !DILocation(line: 0, scope: !10591)
!11196 = !DILocation(line: 8881, column: 4, scope: !10592)
!11197 = !DILocation(line: 0, scope: !10592)
!11198 = !DILocation(line: 0, scope: !10582)
!11199 = !DILocation(line: 8881, column: 4, scope: !10591)
!11200 = !DILocation(line: 8883, column: 16, scope: !10590)
!11201 = !DILocation(line: 8891, column: 3, scope: !10590)
!11202 = !DILocation(line: 8891, column: 9, scope: !10590)
!11203 = !DILocation(line: 8892, column: 7, scope: !10590)
!11204 = !DILocation(line: 8892, column: 12, scope: !10590)
!11205 = !DILocation(line: 8892, column: 47, scope: !10590)
!11206 = !DILocation(line: 8893, column: 4, scope: !10590)
!11207 = !DILocation(line: 8893, column: 8, scope: !10590)
!11208 = !DILocation(line: 8894, column: 8, scope: !10590)
!11209 = !DILocation(line: 8883, column: 10, scope: !10591)
!11210 = !DILocation(line: 8896, column: 7, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8896, column: 7)
!11212 = !DILocation(line: 8897, column: 7, scope: !11211)
!11213 = !DILocation(line: 8899, column: 9, scope: !10589)
!11214 = !DILocation(line: 8899, column: 7, scope: !10589)
!11215 = !DILocation(line: 8900, column: 7, scope: !10588)
!11216 = !DILocation(line: 8900, column: 7, scope: !10589)
!11217 = !DILocation(line: 8902, column: 31, scope: !10587)
!11218 = !DILocation(line: 0, scope: !10587)
!11219 = !DILocation(line: 8903, column: 33, scope: !10587)
!11220 = !DILocation(line: 8905, column: 11, scope: !10596)
!11221 = !DILocation(line: 8905, column: 11, scope: !10587)
!11222 = !DILocation(line: 8907, column: 10, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 8906, column: 9)
!11224 = !DILocation(line: 8907, column: 8, scope: !11223)
!11225 = !DILocation(line: 8908, column: 10, scope: !11223)
!11226 = !DILocation(line: 8908, column: 8, scope: !11223)
!11227 = !DILocation(line: 8909, column: 9, scope: !11223)
!11228 = !DILocation(line: 8914, column: 9, scope: !10595)
!11229 = !DILocation(line: 8914, column: 34, scope: !10595)
!11230 = !DILocation(line: 8913, column: 8, scope: !10595)
!11231 = !DILocation(line: 0, scope: !10595)
!11232 = !DILocation(line: 8916, column: 10, scope: !10595)
!11233 = !DILocation(line: 8918, column: 10, scope: !10595)
!11234 = !DILocation(line: 8918, column: 8, scope: !10595)
!11235 = !DILocation(line: 8923, column: 10, scope: !10589)
!11236 = !DILocation(line: 8923, column: 3, scope: !10589)
!11237 = distinct !{!11237, !11196, !11238}
!11238 = !DILocation(line: 8924, column: 8, scope: !10592)
!11239 = !DILocation(line: 8930, column: 5, scope: !10494)
!11240 = !DILocation(line: 8932, column: 2, scope: !10598)
!11241 = !DILocation(line: 8933, column: 2, scope: !10598)
!11242 = !DILocation(line: 8934, column: 2, scope: !10598)
!11243 = !DILocation(line: 8935, column: 2, scope: !10598)
!11244 = !DILocation(line: 0, scope: !10598)
!11245 = !DILocation(line: 8935, column: 6, scope: !10598)
!11246 = !DILocation(line: 8936, column: 13, scope: !10598)
!11247 = !DILocation(line: 8943, column: 2, scope: !10598)
!11248 = !DILocation(line: 8950, column: 6, scope: !10598)
!11249 = !DILocation(line: 8950, column: 34, scope: !10598)
!11250 = !DILocation(line: 8951, column: 6, scope: !10598)
!11251 = !DILocation(line: 8951, column: 10, scope: !10598)
!11252 = !DILocation(line: 8952, column: 10, scope: !10598)
!11253 = !DILocation(line: 8953, column: 18, scope: !10598)
!11254 = !DILocation(line: 8953, column: 6, scope: !10598)
!11255 = !DILocation(line: 8957, column: 6, scope: !10598)
!11256 = !DILocation(line: 8956, column: 5, scope: !10598)
!11257 = !DILocation(line: 8949, column: 6, scope: !10598)
!11258 = !DILocation(line: 8949, column: 4, scope: !10598)
!11259 = !DILocation(line: 8962, column: 6, scope: !10598)
!11260 = !DILocation(line: 8962, column: 25, scope: !10598)
!11261 = !DILocation(line: 8962, column: 55, scope: !10598)
!11262 = !DILocation(line: 8971, column: 20, scope: !10598)
!11263 = !DILocation(line: 8972, column: 9, scope: !10598)
!11264 = !DILocation(line: 8972, column: 15, scope: !10598)
!11265 = !DILocation(line: 8972, column: 6, scope: !10598)
!11266 = !DILocation(line: 8973, column: 9, scope: !10598)
!11267 = !DILocation(line: 8973, column: 18, scope: !10598)
!11268 = !DILocation(line: 8973, column: 16, scope: !10598)
!11269 = !DILocation(line: 8973, column: 28, scope: !10598)
!11270 = !DILocation(line: 8973, column: 26, scope: !10598)
!11271 = !DILocation(line: 8973, column: 6, scope: !10598)
!11272 = !DILocation(line: 8976, column: 6, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 8976, column: 6)
!11274 = !DILocation(line: 8976, column: 21, scope: !11273)
!11275 = !DILocation(line: 8976, column: 31, scope: !11273)
!11276 = !DILocation(line: 8978, column: 10, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 8978, column: 10)
!11278 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 8977, column: 4)
!11279 = !DILocation(line: 8978, column: 17, scope: !11277)
!11280 = !DILocation(line: 8979, column: 3, scope: !11277)
!11281 = !DILocation(line: 8979, column: 6, scope: !11277)
!11282 = !DILocation(line: 8979, column: 17, scope: !11277)
!11283 = !DILocation(line: 8979, column: 14, scope: !11277)
!11284 = !DILocation(line: 8978, column: 10, scope: !11278)
!11285 = !DILocation(line: 8980, column: 8, scope: !11277)
!11286 = !DILocation(line: 8982, column: 3, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 8981, column: 10)
!11288 = !DILocation(line: 0, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 8988, column: 15)
!11290 = !DILocation(line: 8988, column: 25, scope: !11289)
!11291 = !DILocation(line: 8982, column: 6, scope: !11287)
!11292 = !DILocation(line: 8982, column: 17, scope: !11287)
!11293 = !DILocation(line: 8982, column: 14, scope: !11287)
!11294 = !DILocation(line: 8983, column: 6, scope: !11287)
!11295 = !DILocation(line: 8983, column: 3, scope: !11287)
!11296 = !DILocation(line: 8985, column: 7, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 8984, column: 8)
!11298 = !DILocation(line: 8986, column: 11, scope: !11297)
!11299 = !DILocation(line: 8987, column: 8, scope: !11297)
!11300 = !DILocation(line: 8988, column: 22, scope: !11289)
!11301 = !DILocation(line: 8989, column: 8, scope: !11289)
!11302 = !DILocation(line: 8989, column: 11, scope: !11289)
!11303 = !DILocation(line: 8989, column: 22, scope: !11289)
!11304 = !DILocation(line: 8989, column: 19, scope: !11289)
!11305 = !DILocation(line: 8990, column: 11, scope: !11289)
!11306 = !DILocation(line: 8990, column: 8, scope: !11289)
!11307 = !DILocation(line: 8991, column: 11, scope: !11289)
!11308 = !DILocation(line: 8993, column: 7, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 8992, column: 8)
!11310 = !DILocation(line: 8994, column: 10, scope: !11309)
!11311 = !DILocation(line: 8995, column: 11, scope: !11309)
!11312 = !DILocation(line: 8996, column: 8, scope: !11309)
!11313 = !DILocation(line: 9004, column: 6, scope: !10612)
!11314 = !DILocation(line: 8971, column: 17, scope: !10598)
!11315 = !DILocation(line: 9005, column: 15, scope: !10612)
!11316 = !DILocation(line: 9005, column: 6, scope: !10612)
!11317 = !DILocation(line: 9006, column: 9, scope: !10612)
!11318 = !DILocation(line: 9007, column: 10, scope: !10612)
!11319 = !DILocation(line: 9007, column: 6, scope: !10612)
!11320 = !DILocation(line: 9013, column: 11, scope: !10611)
!11321 = !DILocation(line: 9008, column: 28, scope: !10612)
!11322 = !DILocation(line: 9008, column: 10, scope: !10612)
!11323 = !DILocation(line: 9008, column: 8, scope: !10612)
!11324 = !DILocation(line: 9008, column: 4, scope: !10612)
!11325 = !DILocation(line: 9013, column: 28, scope: !10611)
!11326 = !DILocation(line: 9013, column: 41, scope: !10611)
!11327 = !DILocation(line: 9013, column: 39, scope: !10611)
!11328 = !DILocation(line: 9013, column: 11, scope: !10612)
!11329 = !DILocation(line: 9018, column: 11, scope: !10610)
!11330 = !DILocation(line: 9014, column: 10, scope: !10611)
!11331 = !DILocation(line: 9014, column: 8, scope: !10611)
!11332 = !DILocation(line: 9014, column: 4, scope: !10611)
!11333 = !DILocation(line: 9018, column: 28, scope: !10610)
!11334 = !DILocation(line: 9018, column: 33, scope: !10610)
!11335 = !DILocation(line: 9018, column: 48, scope: !10610)
!11336 = !DILocation(line: 9018, column: 45, scope: !10610)
!11337 = !DILocation(line: 9020, column: 38, scope: !10609)
!11338 = !DILocation(line: 9021, column: 11, scope: !10609)
!11339 = !DILocation(line: 9022, column: 11, scope: !10609)
!11340 = !DILocation(line: 9020, column: 16, scope: !10609)
!11341 = !DILocation(line: 0, scope: !10609)
!11342 = !DILocation(line: 9023, column: 15, scope: !10609)
!11343 = !DILocation(line: 9024, column: 30, scope: !10609)
!11344 = !DILocation(line: 9024, column: 6, scope: !10609)
!11345 = !DILocation(line: 9025, column: 10, scope: !10609)
!11346 = !DILocation(line: 9026, column: 4, scope: !10609)
!11347 = !DILocation(line: 9028, column: 6, scope: !10615)
!11348 = !DILocation(line: 9028, column: 6, scope: !10598)
!11349 = !DILocation(line: 9031, column: 23, scope: !10614)
!11350 = !DILocation(line: 0, scope: !10614)
!11351 = !DILocation(line: 9034, column: 6, scope: !10614)
!11352 = !DILocation(line: 9037, column: 43, scope: !10614)
!11353 = !DILocation(line: 9037, column: 29, scope: !10614)
!11354 = !DILocation(line: 9037, column: 10, scope: !10614)
!11355 = !DILocation(line: 9038, column: 10, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 9038, column: 10)
!11357 = !DILocation(line: 9038, column: 32, scope: !11356)
!11358 = !DILocation(line: 9038, column: 10, scope: !10614)
!11359 = !DILocation(line: 9039, column: 21, scope: !11356)
!11360 = !DILocation(line: 9039, column: 8, scope: !11356)
!11361 = !DILocation(line: 9041, column: 10, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 9041, column: 10)
!11363 = !DILocation(line: 9041, column: 25, scope: !11362)
!11364 = !DILocation(line: 9044, column: 3, scope: !11362)
!11365 = !DILocation(line: 9044, column: 6, scope: !11362)
!11366 = !DILocation(line: 9044, column: 31, scope: !11362)
!11367 = !DILocation(line: 9045, column: 6, scope: !11362)
!11368 = !DILocation(line: 9045, column: 14, scope: !11362)
!11369 = !DILocation(line: 9045, column: 3, scope: !11362)
!11370 = !DILocation(line: 9046, column: 7, scope: !11362)
!11371 = !DILocation(line: 9046, column: 14, scope: !11362)
!11372 = !DILocation(line: 9046, column: 25, scope: !11362)
!11373 = !DILocation(line: 9047, column: 3, scope: !11362)
!11374 = !DILocation(line: 9047, column: 17, scope: !11362)
!11375 = !DILocation(line: 9047, column: 15, scope: !11362)
!11376 = !DILocation(line: 9047, column: 45, scope: !11362)
!11377 = !DILocation(line: 9048, column: 3, scope: !11362)
!11378 = !DILocation(line: 9048, column: 6, scope: !11362)
!11379 = !DILocation(line: 9048, column: 25, scope: !11362)
!11380 = !DILocation(line: 9048, column: 22, scope: !11362)
!11381 = !DILocation(line: 9041, column: 10, scope: !10614)
!11382 = !DILocation(line: 9050, column: 9, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 9049, column: 8)
!11384 = !DILocation(line: 9050, column: 7, scope: !11383)
!11385 = !DILocation(line: 9051, column: 10, scope: !11383)
!11386 = !DILocation(line: 9052, column: 8, scope: !11383)
!11387 = !DILocation(line: 9054, column: 28, scope: !10614)
!11388 = !DILocation(line: 9055, column: 28, scope: !10614)
!11389 = !DILocation(line: 9055, column: 7, scope: !10614)
!11390 = !DILocation(line: 9054, column: 12, scope: !10614)
!11391 = !DILocation(line: 9054, column: 10, scope: !10614)
!11392 = !DILocation(line: 9056, column: 4, scope: !10614)
!11393 = !DILocation(line: 9060, column: 36, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9060, column: 6)
!11395 = !DILocation(line: 9060, column: 6, scope: !11394)
!11396 = !DILocation(line: 9060, column: 21, scope: !11394)
!11397 = !DILocation(line: 9060, column: 28, scope: !11394)
!11398 = !DILocation(line: 9060, column: 18, scope: !11394)
!11399 = !DILocation(line: 9060, column: 43, scope: !11394)
!11400 = !DILocation(line: 9061, column: 9, scope: !11394)
!11401 = !DILocation(line: 9060, column: 6, scope: !10598)
!11402 = !DILocation(line: 9062, column: 19, scope: !11394)
!11403 = !DILocation(line: 9062, column: 24, scope: !11394)
!11404 = !DILocation(line: 9062, column: 4, scope: !11394)
!11405 = !DILocation(line: 9065, column: 6, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9065, column: 6)
!11407 = !DILocation(line: 9065, column: 21, scope: !11406)
!11408 = !DILocation(line: 9065, column: 18, scope: !11406)
!11409 = !DILocation(line: 9065, column: 36, scope: !11406)
!11410 = !DILocation(line: 9065, column: 6, scope: !10598)
!11411 = !DILocation(line: 9067, column: 14, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 9067, column: 10)
!11413 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 9066, column: 4)
!11414 = !DILocation(line: 9067, column: 10, scope: !11413)
!11415 = !DILocation(line: 9068, column: 14, scope: !11412)
!11416 = !DILocation(line: 9068, column: 12, scope: !11412)
!11417 = !DILocation(line: 9068, column: 8, scope: !11412)
!11418 = !DILocation(line: 9070, column: 27, scope: !11413)
!11419 = !DILocation(line: 9070, column: 6, scope: !11413)
!11420 = !DILocation(line: 9071, column: 4, scope: !11413)
!11421 = !DILocation(line: 9079, column: 6, scope: !10619)
!11422 = !DILocation(line: 9079, column: 12, scope: !10619)
!11423 = !DILocation(line: 9080, column: 6, scope: !10619)
!11424 = !DILocation(line: 9080, column: 9, scope: !10619)
!11425 = !DILocation(line: 9080, column: 21, scope: !10619)
!11426 = !DILocation(line: 9080, column: 39, scope: !10619)
!11427 = !DILocation(line: 9081, column: 6, scope: !10619)
!11428 = !DILocation(line: 9081, column: 16, scope: !10619)
!11429 = !DILocation(line: 9081, column: 27, scope: !10619)
!11430 = !DILocation(line: 9081, column: 32, scope: !10619)
!11431 = !DILocation(line: 9082, column: 3, scope: !10619)
!11432 = !DILocation(line: 9082, column: 6, scope: !10619)
!11433 = !DILocation(line: 9082, column: 28, scope: !10619)
!11434 = !DILocation(line: 9083, column: 3, scope: !10619)
!11435 = !DILocation(line: 9083, column: 28, scope: !10619)
!11436 = !DILocation(line: 9084, column: 3, scope: !10619)
!11437 = !DILocation(line: 9089, column: 3, scope: !10619)
!11438 = !DILocation(line: 9089, column: 9, scope: !10619)
!11439 = !DILocation(line: 9089, column: 40, scope: !10619)
!11440 = !DILocation(line: 9089, column: 38, scope: !10619)
!11441 = !DILocation(line: 9090, column: 9, scope: !10619)
!11442 = !DILocation(line: 9090, column: 13, scope: !10619)
!11443 = !DILocation(line: 9090, column: 22, scope: !10619)
!11444 = !DILocation(line: 9090, column: 20, scope: !10619)
!11445 = !DILocation(line: 9090, column: 48, scope: !10619)
!11446 = !DILocation(line: 9091, column: 9, scope: !10619)
!11447 = !DILocation(line: 9091, column: 13, scope: !10619)
!11448 = !DILocation(line: 9092, column: 6, scope: !10619)
!11449 = !DILocation(line: 9092, column: 10, scope: !10619)
!11450 = !DILocation(line: 9092, column: 28, scope: !10619)
!11451 = !DILocation(line: 9092, column: 26, scope: !10619)
!11452 = !DILocation(line: 9093, column: 10, scope: !10619)
!11453 = !DILocation(line: 9093, column: 23, scope: !10619)
!11454 = !DILocation(line: 9094, column: 8, scope: !10619)
!11455 = !DILocation(line: 9098, column: 11, scope: !10619)
!11456 = !DILocation(line: 9098, column: 34, scope: !10619)
!11457 = !DILocation(line: 9102, column: 6, scope: !10619)
!11458 = !DILocation(line: 9102, column: 10, scope: !10619)
!11459 = !DILocation(line: 9102, column: 18, scope: !10619)
!11460 = !DILocation(line: 9103, column: 3, scope: !10619)
!11461 = !DILocation(line: 9103, column: 6, scope: !10619)
!11462 = !DILocation(line: 9104, column: 3, scope: !10619)
!11463 = !DILocation(line: 9104, column: 6, scope: !10619)
!11464 = !DILocation(line: 9104, column: 46, scope: !10619)
!11465 = !DILocation(line: 9105, column: 3, scope: !10619)
!11466 = !DILocation(line: 9105, column: 11, scope: !10619)
!11467 = !DILocation(line: 9105, column: 8, scope: !10619)
!11468 = !DILocation(line: 9079, column: 6, scope: !10598)
!11469 = !DILocation(line: 0, scope: !10618)
!11470 = !DILocation(line: 9110, column: 19, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 9110, column: 10)
!11472 = !DILocation(line: 9111, column: 3, scope: !11471)
!11473 = !DILocation(line: 9111, column: 16, scope: !11471)
!11474 = !DILocation(line: 9111, column: 21, scope: !11471)
!11475 = !DILocation(line: 9111, column: 24, scope: !11471)
!11476 = !DILocation(line: 9112, column: 9, scope: !11471)
!11477 = !DILocation(line: 9112, column: 12, scope: !11471)
!11478 = !DILocation(line: 9113, column: 9, scope: !11471)
!11479 = !DILocation(line: 9113, column: 12, scope: !11471)
!11480 = !DILocation(line: 9113, column: 35, scope: !11471)
!11481 = !DILocation(line: 9110, column: 10, scope: !10618)
!11482 = !DILocation(line: 9114, column: 34, scope: !11471)
!11483 = !DILocation(line: 9114, column: 19, scope: !11471)
!11484 = !DILocation(line: 9114, column: 8, scope: !11471)
!11485 = !DILocation(line: 9116, column: 19, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 9116, column: 10)
!11487 = !DILocation(line: 9116, column: 10, scope: !10618)
!11488 = !DILocation(line: 9118, column: 14, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11490, file: !3, line: 9118, column: 7)
!11490 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 9117, column: 8)
!11491 = !DILocation(line: 9118, column: 7, scope: !11490)
!11492 = !DILocation(line: 9119, column: 14, scope: !11489)
!11493 = !DILocation(line: 9119, column: 5, scope: !11489)
!11494 = !DILocation(line: 9121, column: 7, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11490, file: !3, line: 9121, column: 7)
!11496 = !DILocation(line: 9121, column: 15, scope: !11495)
!11497 = !DILocation(line: 9121, column: 7, scope: !11490)
!11498 = !DILocation(line: 9126, column: 3, scope: !11490)
!11499 = !DILocation(line: 9131, column: 6, scope: !11490)
!11500 = !DILocation(line: 9133, column: 6, scope: !11490)
!11501 = !DILocation(line: 9135, column: 7, scope: !11490)
!11502 = !DILocation(line: 9130, column: 3, scope: !11490)
!11503 = !DILocation(line: 9138, column: 3, scope: !11490)
!11504 = !DILocation(line: 9141, column: 26, scope: !10618)
!11505 = !DILocation(line: 9141, column: 12, scope: !10618)
!11506 = !DILocation(line: 9141, column: 10, scope: !10618)
!11507 = !DILocation(line: 9143, column: 10, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 9143, column: 10)
!11509 = !DILocation(line: 9143, column: 22, scope: !11508)
!11510 = !DILocation(line: 9143, column: 25, scope: !11508)
!11511 = !DILocation(line: 9143, column: 10, scope: !10618)
!11512 = !DILocation(line: 9144, column: 41, scope: !11508)
!11513 = !DILocation(line: 9144, column: 8, scope: !11508)
!11514 = !DILocation(line: 9146, column: 31, scope: !10618)
!11515 = !DILocation(line: 9146, column: 36, scope: !10618)
!11516 = !DILocation(line: 9146, column: 45, scope: !10618)
!11517 = !DILocation(line: 9146, column: 53, scope: !10618)
!11518 = !DILocation(line: 9147, column: 11, scope: !10618)
!11519 = !DILocation(line: 9146, column: 12, scope: !10618)
!11520 = !DILocation(line: 9146, column: 10, scope: !10618)
!11521 = !DILocation(line: 9170, column: 10, scope: !10618)
!11522 = !DILocation(line: 9172, column: 24, scope: !10621)
!11523 = !DILocation(line: 0, scope: !10621)
!11524 = !DILocation(line: 9177, column: 7, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 9177, column: 7)
!11526 = !DILocation(line: 9177, column: 7, scope: !10621)
!11527 = !DILocation(line: 9179, column: 17, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 9178, column: 5)
!11529 = !DILocation(line: 9180, column: 35, scope: !11528)
!11530 = !DILocation(line: 9180, column: 7, scope: !11528)
!11531 = !DILocation(line: 9181, column: 5, scope: !11528)
!11532 = !DILocation(line: 9183, column: 15, scope: !11525)
!11533 = !DILocation(line: 0, scope: !11525)
!11534 = !DILocation(line: 9185, column: 28, scope: !10621)
!11535 = !DILocation(line: 9185, column: 3, scope: !10621)
!11536 = !DILocation(line: 9186, column: 9, scope: !10621)
!11537 = !DILocation(line: 9186, column: 7, scope: !10621)
!11538 = !DILocation(line: 9187, column: 3, scope: !10621)
!11539 = !DILocation(line: 9188, column: 23, scope: !10621)
!11540 = !DILocation(line: 9188, column: 3, scope: !10621)
!11541 = !DILocation(line: 9191, column: 13, scope: !10618)
!11542 = !DILocation(line: 9189, column: 8, scope: !10621)
!11543 = !DILocation(line: 9191, column: 6, scope: !10618)
!11544 = !DILocation(line: 9196, column: 11, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9196, column: 6)
!11546 = !DILocation(line: 9196, column: 6, scope: !10598)
!11547 = !DILocation(line: 0, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9200, column: 6)
!11549 = !DILocation(line: 9197, column: 10, scope: !11545)
!11550 = !DILocation(line: 9197, column: 4, scope: !11545)
!11551 = !DILocation(line: 9201, column: 6, scope: !11548)
!11552 = !DILocation(line: 9202, column: 10, scope: !11548)
!11553 = !DILocation(line: 9202, column: 4, scope: !11548)
!11554 = !DILocation(line: 9204, column: 10, scope: !11548)
!11555 = !DILocation(line: 9206, column: 10, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9206, column: 6)
!11557 = !DILocation(line: 9206, column: 6, scope: !10598)
!11558 = !DILocation(line: 9207, column: 10, scope: !11556)
!11559 = !DILocation(line: 9207, column: 8, scope: !11556)
!11560 = !DILocation(line: 9207, column: 4, scope: !11556)
!11561 = !DILocation(line: 9209, column: 22, scope: !10598)
!11562 = !DILocation(line: 9209, column: 2, scope: !10598)
!11563 = !DILocation(line: 9210, column: 6, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9210, column: 6)
!11565 = !DILocation(line: 9210, column: 6, scope: !10598)
!11566 = !DILocation(line: 9211, column: 37, scope: !11564)
!11567 = !DILocation(line: 9211, column: 4, scope: !11564)
!11568 = !DILocation(line: 9213, column: 2, scope: !10598)
!11569 = !DILocation(line: 9213, column: 26, scope: !10598)
!11570 = !DILocation(line: 9213, column: 23, scope: !10598)
!11571 = !DILocation(line: 9214, column: 14, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 9214, column: 6)
!11573 = !DILocation(line: 9214, column: 11, scope: !11572)
!11574 = !DILocation(line: 9214, column: 29, scope: !11572)
!11575 = !DILocation(line: 9214, column: 20, scope: !11572)
!11576 = !DILocation(line: 9214, column: 49, scope: !11572)
!11577 = !DILocation(line: 9217, column: 11, scope: !11572)
!11578 = !DILocation(line: 9217, column: 4, scope: !11572)
!11579 = !DILocation(line: 9218, column: 18, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 9218, column: 11)
!11581 = !DILocation(line: 9218, column: 11, scope: !11572)
!11582 = !DILocation(line: 9219, column: 32, scope: !11580)
!11583 = !DILocation(line: 9219, column: 26, scope: !11580)
!11584 = !DILocation(line: 9219, column: 13, scope: !11580)
!11585 = !DILocation(line: 9219, column: 4, scope: !11580)
!11586 = !DILocation(line: 9221, column: 24, scope: !10598)
!11587 = !DILocation(line: 9221, column: 29, scope: !10598)
!11588 = !DILocation(line: 9221, column: 2, scope: !10598)
!11589 = !DILocation(line: 9222, column: 2, scope: !10598)
!11590 = !DILocation(line: 9223, column: 7, scope: !10494)
!11591 = !DILocation(line: 9226, column: 27, scope: !10494)
!11592 = !DILocation(line: 9226, column: 14, scope: !10494)
!11593 = !DILocation(line: 9226, column: 7, scope: !10494)
!11594 = !DILocation(line: 9231, column: 11, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9231, column: 11)
!11596 = !DILocation(line: 9231, column: 11, scope: !10494)
!11597 = !DILocation(line: 9232, column: 2, scope: !11595)
!11598 = !DILocation(line: 9234, column: 16, scope: !10625)
!11599 = !DILocation(line: 0, scope: !10625)
!11600 = !DILocation(line: 9237, column: 6, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 9236, column: 6)
!11602 = !DILocation(line: 9238, column: 7, scope: !11601)
!11603 = !DILocation(line: 9237, column: 17, scope: !11601)
!11604 = !DILocation(line: 9238, column: 34, scope: !11601)
!11605 = !DILocation(line: 9236, column: 6, scope: !10625)
!11606 = !DILocation(line: 9240, column: 42, scope: !11601)
!11607 = !DILocation(line: 9240, column: 31, scope: !11601)
!11608 = !DILocation(line: 9240, column: 9, scope: !11601)
!11609 = !DILocation(line: 9241, column: 4, scope: !11601)
!11610 = !DILocation(line: 9239, column: 4, scope: !11601)
!11611 = !DILocation(line: 9244, column: 7, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 9242, column: 6)
!11613 = !DILocation(line: 9243, column: 17, scope: !11612)
!11614 = !DILocation(line: 9244, column: 34, scope: !11612)
!11615 = !DILocation(line: 9242, column: 6, scope: !10625)
!11616 = !DILocation(line: 9245, column: 16, scope: !11612)
!11617 = !DILocation(line: 9247, column: 47, scope: !11612)
!11618 = !DILocation(line: 9247, column: 36, scope: !11612)
!11619 = !DILocation(line: 9247, column: 14, scope: !11612)
!11620 = !DILocation(line: 9248, column: 9, scope: !11612)
!11621 = !DILocation(line: 9245, column: 4, scope: !11612)
!11622 = !DILocation(line: 9251, column: 16, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 9251, column: 6)
!11624 = !DILocation(line: 9251, column: 6, scope: !10625)
!11625 = !DILocation(line: 9253, column: 6, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 9252, column: 4)
!11627 = !DILocation(line: 9254, column: 13, scope: !11626)
!11628 = !DILocation(line: 9254, column: 6, scope: !11626)
!11629 = !DILocation(line: 9257, column: 14, scope: !10494)
!11630 = !DILocation(line: 9257, column: 7, scope: !10494)
!11631 = !DILocation(line: 9260, column: 11, scope: !10494)
!11632 = !DILocation(line: 9264, column: 16, scope: !10629)
!11633 = !DILocation(line: 9265, column: 4, scope: !10629)
!11634 = !DILocation(line: 9265, column: 7, scope: !10629)
!11635 = !DILocation(line: 9265, column: 47, scope: !10629)
!11636 = !DILocation(line: 9266, column: 4, scope: !10629)
!11637 = !DILocation(line: 9266, column: 7, scope: !10629)
!11638 = !DILocation(line: 9266, column: 39, scope: !10629)
!11639 = !DILocation(line: 9267, column: 4, scope: !10629)
!11640 = !DILocation(line: 9267, column: 7, scope: !10629)
!11641 = !DILocation(line: 9264, column: 11, scope: !10494)
!11642 = !DILocation(line: 9269, column: 2, scope: !10628)
!11643 = !DILocation(line: 9270, column: 2, scope: !10628)
!11644 = !DILocation(line: 9271, column: 2, scope: !10628)
!11645 = !DILocation(line: 9272, column: 2, scope: !10628)
!11646 = !DILocation(line: 9273, column: 2, scope: !10628)
!11647 = !DILocation(line: 0, scope: !10628)
!11648 = !DILocation(line: 9273, column: 6, scope: !10628)
!11649 = !DILocation(line: 9275, column: 6, scope: !10628)
!11650 = !DILocation(line: 9281, column: 7, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 9281, column: 6)
!11652 = !DILocation(line: 9282, column: 6, scope: !11651)
!11653 = !DILocation(line: 9282, column: 10, scope: !11651)
!11654 = !DILocation(line: 9282, column: 34, scope: !11651)
!11655 = !DILocation(line: 9283, column: 9, scope: !11651)
!11656 = !DILocation(line: 9283, column: 17, scope: !11651)
!11657 = !DILocation(line: 9283, column: 6, scope: !11651)
!11658 = !DILocation(line: 9284, column: 27, scope: !11651)
!11659 = !DILocation(line: 9284, column: 9, scope: !11651)
!11660 = !DILocation(line: 9284, column: 65, scope: !11651)
!11661 = !DILocation(line: 9281, column: 6, scope: !10628)
!11662 = !DILocation(line: 9289, column: 10, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11651, file: !3, line: 9285, column: 4)
!11664 = !DILocation(line: 9289, column: 38, scope: !11663)
!11665 = !DILocation(line: 9290, column: 10, scope: !11663)
!11666 = !DILocation(line: 9290, column: 14, scope: !11663)
!11667 = !DILocation(line: 9291, column: 7, scope: !11663)
!11668 = !DILocation(line: 9292, column: 22, scope: !11663)
!11669 = !DILocation(line: 9292, column: 10, scope: !11663)
!11670 = !DILocation(line: 9296, column: 10, scope: !11663)
!11671 = !DILocation(line: 9295, column: 9, scope: !11663)
!11672 = !DILocation(line: 9288, column: 10, scope: !11663)
!11673 = !DILocation(line: 9300, column: 10, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 9300, column: 10)
!11675 = !DILocation(line: 9300, column: 10, scope: !11663)
!11676 = !DILocation(line: 9302, column: 7, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 9301, column: 8)
!11678 = !DILocation(line: 9306, column: 7, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 9305, column: 7)
!11680 = !DILocation(line: 0, scope: !11679)
!11681 = !DILocation(line: 9308, column: 11, scope: !11679)
!11682 = !DILocation(line: 9308, column: 5, scope: !11679)
!11683 = !DILocation(line: 9310, column: 11, scope: !11679)
!11684 = !DILocation(line: 9312, column: 11, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 9312, column: 7)
!11686 = !DILocation(line: 9312, column: 7, scope: !11677)
!11687 = !DILocation(line: 9313, column: 11, scope: !11685)
!11688 = !DILocation(line: 9313, column: 9, scope: !11685)
!11689 = !DILocation(line: 9313, column: 5, scope: !11685)
!11690 = !DILocation(line: 9315, column: 23, scope: !11677)
!11691 = !DILocation(line: 9315, column: 3, scope: !11677)
!11692 = !DILocation(line: 9316, column: 7, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 9316, column: 7)
!11694 = !DILocation(line: 9316, column: 7, scope: !11677)
!11695 = !DILocation(line: 9317, column: 38, scope: !11693)
!11696 = !DILocation(line: 9317, column: 5, scope: !11693)
!11697 = !DILocation(line: 0, scope: !11677)
!11698 = !DILocation(line: 9319, column: 3, scope: !11677)
!11699 = !DILocation(line: 9319, column: 27, scope: !11677)
!11700 = !DILocation(line: 9319, column: 24, scope: !11677)
!11701 = !DILocation(line: 9320, column: 8, scope: !11677)
!11702 = !DILocation(line: 9322, column: 7, scope: !10629)
!11703 = !DILocation(line: 9324, column: 12, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9324, column: 11)
!11705 = !DILocation(line: 9322, column: 7, scope: !10628)
!11706 = !DILocation(line: 9324, column: 11, scope: !10494)
!11707 = !DILocation(line: 9325, column: 8, scope: !11704)
!11708 = !DILocation(line: 9325, column: 6, scope: !11704)
!11709 = !DILocation(line: 9325, column: 2, scope: !11704)
!11710 = !DILocation(line: 9329, column: 19, scope: !10642)
!11711 = !DILocation(line: 9329, column: 16, scope: !10642)
!11712 = !DILocation(line: 9329, column: 11, scope: !10494)
!11713 = !DILocation(line: 9333, column: 32, scope: !10641)
!11714 = !DILocation(line: 9333, column: 35, scope: !10641)
!11715 = !DILocation(line: 9333, column: 50, scope: !10641)
!11716 = !DILocation(line: 9334, column: 9, scope: !10641)
!11717 = !DILocation(line: 9334, column: 12, scope: !10641)
!11718 = !DILocation(line: 9334, column: 36, scope: !10641)
!11719 = !DILocation(line: 9334, column: 33, scope: !10641)
!11720 = !DILocation(line: 9335, column: 9, scope: !10641)
!11721 = !DILocation(line: 9335, column: 13, scope: !10641)
!11722 = !DILocation(line: 9333, column: 16, scope: !10642)
!11723 = !DILocation(line: 9337, column: 8, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 9337, column: 8)
!11725 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 9336, column: 2)
!11726 = !DILocation(line: 9337, column: 23, scope: !11724)
!11727 = !DILocation(line: 9337, column: 8, scope: !11725)
!11728 = !DILocation(line: 9338, column: 23, scope: !11724)
!11729 = !DILocation(line: 9338, column: 12, scope: !11724)
!11730 = !DILocation(line: 9338, column: 10, scope: !11724)
!11731 = !DILocation(line: 9338, column: 6, scope: !11724)
!11732 = !DILocation(line: 9339, column: 29, scope: !11725)
!11733 = !DILocation(line: 9339, column: 10, scope: !11725)
!11734 = !DILocation(line: 9339, column: 8, scope: !11725)
!11735 = !DILocation(line: 9340, column: 2, scope: !11725)
!11736 = !DILocation(line: 9343, column: 16, scope: !10640)
!11737 = !DILocation(line: 9343, column: 51, scope: !10640)
!11738 = !DILocation(line: 9343, column: 54, scope: !10640)
!11739 = !DILocation(line: 9343, column: 16, scope: !10641)
!11740 = !DILocation(line: 9344, column: 29, scope: !10640)
!11741 = !DILocation(line: 9345, column: 9, scope: !10640)
!11742 = !DILocation(line: 9344, column: 8, scope: !10640)
!11743 = !DILocation(line: 9344, column: 6, scope: !10640)
!11744 = !DILocation(line: 9344, column: 2, scope: !10640)
!11745 = !DILocation(line: 9348, column: 17, scope: !10639)
!11746 = !DILocation(line: 9348, column: 16, scope: !10640)
!11747 = !DILocation(line: 9354, column: 22, scope: !10638)
!11748 = !DILocation(line: 0, scope: !10638)
!11749 = !DILocation(line: 9356, column: 4, scope: !10638)
!11750 = !DILocation(line: 9358, column: 15, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 9358, column: 8)
!11752 = !DILocation(line: 9358, column: 20, scope: !11751)
!11753 = !DILocation(line: 9358, column: 23, scope: !11751)
!11754 = !DILocation(line: 9358, column: 44, scope: !11751)
!11755 = !DILocation(line: 9358, column: 41, scope: !11751)
!11756 = !DILocation(line: 9358, column: 8, scope: !10638)
!11757 = !DILocation(line: 9361, column: 4, scope: !11751)
!11758 = !DILocation(line: 9362, column: 4, scope: !11751)
!11759 = !DILocation(line: 9360, column: 10, scope: !11751)
!11760 = !DILocation(line: 9359, column: 6, scope: !11751)
!11761 = !DILocation(line: 9364, column: 28, scope: !10638)
!11762 = !DILocation(line: 9364, column: 4, scope: !10638)
!11763 = !DILocation(line: 9365, column: 8, scope: !10638)
!11764 = !DILocation(line: 9366, column: 2, scope: !10638)
!11765 = !DILocation(line: 9372, column: 11, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9372, column: 11)
!11767 = !DILocation(line: 9372, column: 11, scope: !10494)
!11768 = !DILocation(line: 9374, column: 10, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 9373, column: 2)
!11770 = !DILocation(line: 9374, column: 8, scope: !11769)
!11771 = !DILocation(line: 9376, column: 8, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 9376, column: 8)
!11773 = !DILocation(line: 9376, column: 8, scope: !11769)
!11774 = !DILocation(line: 9377, column: 26, scope: !11772)
!11775 = !DILocation(line: 9377, column: 6, scope: !11772)
!11776 = !DILocation(line: 9404, column: 10, scope: !11769)
!11777 = !DILocation(line: 9404, column: 8, scope: !11769)
!11778 = !DILocation(line: 9405, column: 2, scope: !11769)
!11779 = !DILocation(line: 9407, column: 14, scope: !10494)
!11780 = !DILocation(line: 9407, column: 7, scope: !10494)
!11781 = !DILocation(line: 9417, column: 4, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9416, column: 11)
!11783 = !DILocation(line: 9417, column: 15, scope: !11782)
!11784 = !DILocation(line: 9418, column: 8, scope: !11782)
!11785 = !DILocation(line: 9419, column: 13, scope: !11782)
!11786 = !DILocation(line: 9420, column: 8, scope: !11782)
!11787 = !DILocation(line: 9420, column: 13, scope: !11782)
!11788 = !DILocation(line: 9423, column: 8, scope: !11782)
!11789 = !DILocation(line: 9423, column: 13, scope: !11782)
!11790 = !DILocation(line: 9423, column: 22, scope: !11782)
!11791 = !DILocation(line: 9423, column: 25, scope: !11782)
!11792 = !DILocation(line: 9424, column: 5, scope: !11782)
!11793 = !DILocation(line: 9424, column: 8, scope: !11782)
!11794 = !DILocation(line: 9424, column: 23, scope: !11782)
!11795 = !DILocation(line: 9416, column: 11, scope: !10494)
!11796 = !DILocation(line: 9425, column: 30, scope: !11782)
!11797 = !DILocation(line: 9425, column: 24, scope: !11782)
!11798 = !DILocation(line: 9425, column: 11, scope: !11782)
!11799 = !DILocation(line: 9425, column: 2, scope: !11782)
!11800 = !DILocation(line: 9427, column: 11, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9427, column: 11)
!11802 = !DILocation(line: 9427, column: 11, scope: !10494)
!11803 = !DILocation(line: 9428, column: 26, scope: !11801)
!11804 = !DILocation(line: 9428, column: 2, scope: !11801)
!11805 = !DILocation(line: 9430, column: 13, scope: !10494)
!11806 = !DILocation(line: 9430, column: 11, scope: !10494)
!11807 = !DILocation(line: 9431, column: 7, scope: !10494)
!11808 = !DILocation(line: 9433, column: 11, scope: !10494)
!11809 = !DILocation(line: 9434, column: 26, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9433, column: 11)
!11811 = !DILocation(line: 9434, column: 2, scope: !11810)
!11812 = !DILocation(line: 9436, column: 7, scope: !10494)
!11813 = !DILocation(line: 9437, column: 14, scope: !10494)
!11814 = !DILocation(line: 9441, column: 2, scope: !10644)
!11815 = !DILocation(line: 9443, column: 2, scope: !10644)
!11816 = !DILocation(line: 9445, column: 14, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 9445, column: 2)
!11818 = !DILocation(line: 0, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 9445, column: 2)
!11820 = !DILocation(line: 9445, column: 7, scope: !11817)
!11821 = !DILocation(line: 9445, column: 32, scope: !11819)
!11822 = !DILocation(line: 9445, column: 31, scope: !11819)
!11823 = !DILocation(line: 9445, column: 2, scope: !11817)
!11824 = !DILocation(line: 9446, column: 17, scope: !11819)
!11825 = !DILocation(line: 9446, column: 34, scope: !11819)
!11826 = !DILocation(line: 9446, column: 4, scope: !11819)
!11827 = !DILocation(line: 0, scope: !10644)
!11828 = !DILocation(line: 9445, column: 50, scope: !11819)
!11829 = !DILocation(line: 9445, column: 2, scope: !11819)
!11830 = distinct !{!11830, !11823, !11831}
!11831 = !DILocation(line: 9446, column: 64, scope: !11817)
!11832 = !DILocation(line: 9447, column: 7, scope: !10494)
!11833 = !DILocation(line: 9448, column: 14, scope: !10494)
!11834 = !DILocation(line: 9448, column: 7, scope: !10494)
!11835 = !DILocation(line: 9454, column: 7, scope: !10494)
!11836 = !DILocation(line: 9461, column: 9, scope: !10494)
!11837 = !DILocation(line: 9471, column: 21, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 9471, column: 12)
!11839 = !DILocation(line: 9472, column: 8, scope: !11838)
!11840 = !DILocation(line: 9472, column: 5, scope: !11838)
!11841 = !DILocation(line: 9473, column: 8, scope: !11838)
!11842 = !DILocation(line: 9474, column: 5, scope: !11838)
!11843 = !DILocation(line: 9474, column: 8, scope: !11838)
!11844 = !DILocation(line: 9474, column: 35, scope: !11838)
!11845 = !DILocation(line: 9476, column: 5, scope: !11838)
!11846 = !DILocation(line: 9476, column: 11, scope: !11838)
!11847 = !DILocation(line: 9477, column: 9, scope: !11838)
!11848 = !DILocation(line: 9479, column: 9, scope: !11838)
!11849 = !DILocation(line: 9477, column: 12, scope: !11838)
!11850 = !DILocation(line: 9479, column: 5, scope: !11838)
!11851 = !DILocation(line: 9471, column: 12, scope: !10494)
!11852 = !DILocation(line: 9482, column: 10, scope: !11838)
!11853 = !DILocation(line: 0, scope: !11838)
!11854 = !DILocation(line: 9484, column: 8, scope: !10494)
!11855 = !DILocation(line: 9485, column: 8, scope: !10494)
!11856 = !DILocation(line: 9486, column: 14, scope: !10494)
!11857 = !DILocation(line: 9486, column: 12, scope: !10494)
!11858 = !DILocation(line: 9487, column: 14, scope: !10494)
!11859 = !DILocation(line: 9487, column: 12, scope: !10494)
!11860 = !DILocation(line: 9488, column: 8, scope: !10494)
!11861 = !DILocation(line: 9490, column: 15, scope: !10494)
!11862 = !DILocation(line: 9489, column: 8, scope: !10494)
!11863 = !DILocation(line: 9493, column: 24, scope: !10494)
!11864 = !DILocation(line: 9493, column: 8, scope: !10494)
!11865 = !DILocation(line: 9494, column: 8, scope: !10494)
!11866 = !DILocation(line: 9495, column: 8, scope: !10494)
!11867 = !DILocation(line: 9496, column: 8, scope: !10494)
!11868 = !DILocation(line: 9500, column: 8, scope: !10494)
!11869 = !DILocation(line: 9501, column: 8, scope: !10494)
!11870 = !DILocation(line: 9502, column: 8, scope: !10494)
!11871 = !DILocation(line: 9505, column: 16, scope: !10494)
!11872 = !DILocation(line: 9506, column: 7, scope: !10494)
!11873 = !DILocation(line: 0, scope: !10652)
!11874 = !DILocation(line: 9512, column: 2, scope: !10652)
!11875 = !DILocation(line: 9522, column: 6, scope: !10656)
!11876 = !DILocation(line: 9522, column: 22, scope: !10656)
!11877 = !DILocation(line: 9523, column: 6, scope: !10656)
!11878 = !DILocation(line: 9523, column: 10, scope: !10656)
!11879 = !DILocation(line: 9523, column: 26, scope: !10656)
!11880 = !DILocation(line: 9524, column: 3, scope: !10656)
!11881 = !DILocation(line: 9524, column: 22, scope: !10656)
!11882 = !DILocation(line: 9525, column: 6, scope: !10656)
!11883 = !DILocation(line: 9525, column: 9, scope: !10656)
!11884 = !DILocation(line: 9525, column: 31, scope: !10656)
!11885 = !DILocation(line: 9526, column: 6, scope: !10656)
!11886 = !DILocation(line: 9526, column: 9, scope: !10656)
!11887 = !DILocation(line: 9526, column: 43, scope: !10656)
!11888 = !DILocation(line: 9527, column: 6, scope: !10656)
!11889 = !DILocation(line: 9527, column: 23, scope: !10656)
!11890 = !DILocation(line: 9527, column: 9, scope: !10656)
!11891 = !DILocation(line: 9528, column: 6, scope: !10656)
!11892 = !DILocation(line: 9528, column: 23, scope: !10656)
!11893 = !DILocation(line: 9528, column: 9, scope: !10656)
!11894 = !DILocation(line: 9522, column: 6, scope: !10652)
!11895 = !DILocation(line: 9530, column: 18, scope: !10655)
!11896 = !DILocation(line: 0, scope: !10655)
!11897 = !DILocation(line: 9531, column: 18, scope: !10655)
!11898 = !DILocation(line: 9531, column: 34, scope: !10655)
!11899 = !DILocation(line: 9532, column: 15, scope: !10655)
!11900 = !DILocation(line: 9533, column: 8, scope: !10655)
!11901 = !DILocation(line: 9534, column: 8, scope: !10655)
!11902 = !DILocation(line: 9532, column: 6, scope: !10655)
!11903 = !DILocation(line: 9535, column: 45, scope: !10655)
!11904 = !DILocation(line: 9535, column: 62, scope: !10655)
!11905 = !DILocation(line: 9535, column: 30, scope: !10655)
!11906 = !DILocation(line: 9536, column: 11, scope: !10655)
!11907 = !DILocation(line: 9535, column: 6, scope: !10655)
!11908 = !DILocation(line: 9537, column: 6, scope: !10655)
!11909 = !DILocation(line: 9538, column: 6, scope: !10655)
!11910 = !DILocation(line: 9539, column: 13, scope: !10655)
!11911 = !DILocation(line: 9542, column: 31, scope: !10652)
!11912 = !DILocation(line: 9542, column: 2, scope: !10652)
!11913 = !DILocation(line: 9543, column: 9, scope: !10652)
!11914 = !DILocation(line: 9543, column: 2, scope: !10652)
!11915 = !DILocation(line: 9547, column: 14, scope: !10494)
!11916 = !DILocation(line: 9547, column: 7, scope: !10494)
!11917 = !DILocation(line: 9550, column: 13, scope: !10494)
!11918 = !DILocation(line: 9550, column: 11, scope: !10494)
!11919 = !DILocation(line: 9551, column: 14, scope: !10494)
!11920 = !DILocation(line: 9551, column: 7, scope: !10494)
!11921 = !DILocation(line: 9554, column: 13, scope: !10494)
!11922 = !DILocation(line: 9554, column: 11, scope: !10494)
!11923 = !DILocation(line: 9555, column: 14, scope: !10494)
!11924 = !DILocation(line: 9555, column: 7, scope: !10494)
!11925 = !DILocation(line: 9563, column: 7, scope: !10494)
!11926 = !DILocation(line: 9570, column: 7, scope: !10494)
!11927 = !DILocation(line: 9588, column: 7, scope: !10494)
!11928 = !DILocation(line: 9593, column: 7, scope: !10494)
!11929 = !DILocation(line: 9598, column: 14, scope: !10494)
!11930 = !DILocation(line: 9598, column: 7, scope: !10494)
!11931 = !DILocation(line: 0, scope: !10659)
!11932 = !DILocation(line: 9608, column: 22, scope: !10659)
!11933 = !DILocation(line: 9609, column: 9, scope: !10659)
!11934 = !DILocation(line: 9610, column: 15, scope: !10659)
!11935 = !DILocation(line: 9611, column: 53, scope: !10659)
!11936 = !DILocation(line: 9611, column: 58, scope: !10659)
!11937 = !DILocation(line: 9612, column: 15, scope: !10659)
!11938 = !DILocation(line: 9611, column: 16, scope: !10659)
!11939 = !DILocation(line: 9613, column: 9, scope: !10659)
!11940 = !DILocation(line: 0, scope: !10664)
!11941 = !DILocation(line: 9624, column: 2, scope: !10664)
!11942 = !DILocation(line: 9625, column: 8, scope: !10664)
!11943 = !DILocation(line: 9626, column: 44, scope: !10664)
!11944 = !DILocation(line: 9626, column: 49, scope: !10664)
!11945 = !DILocation(line: 9627, column: 18, scope: !10664)
!11946 = !DILocation(line: 9626, column: 11, scope: !10664)
!11947 = !DILocation(line: 9635, column: 14, scope: !10669)
!11948 = !DILocation(line: 0, scope: !10669)
!11949 = !DILocation(line: 9638, column: 7, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 9638, column: 6)
!11951 = !DILocation(line: 9638, column: 6, scope: !10669)
!11952 = !DILocation(line: 9640, column: 10, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 9640, column: 10)
!11954 = distinct !DILexicalBlock(scope: !11950, file: !3, line: 9639, column: 4)
!11955 = !DILocation(line: 9640, column: 10, scope: !11954)
!11956 = !DILocation(line: 9643, column: 8, scope: !11953)
!11957 = !DILocation(line: 9645, column: 8, scope: !11953)
!11958 = !DILocation(line: 9648, column: 9, scope: !10669)
!11959 = !DILocation(line: 9653, column: 14, scope: !10494)
!11960 = !DILocation(line: 9653, column: 7, scope: !10494)
!11961 = !DILocation(line: 9655, column: 1, scope: !10458)
!11962 = distinct !DISubprogram(name: "expand_expr_real_2", scope: !3, file: !3, line: 7205, type: !11963, scopeLine: 7207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11967)
!11963 = !DISubroutineType(types: !11964)
!11964 = !{!2182, !11965, !2182, !5, !2087}
!11965 = !DIDerivedType(tag: DW_TAG_typedef, name: "sepops", file: !2042, line: 279, baseType: !11966)
!11966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10481, size: 64)
!11967 = !{!11968, !11969, !11970, !11971, !11972, !11973, !11974, !11975, !11976, !11977, !11978, !11979, !11980, !11981, !11982, !11983, !11984, !11985, !11986, !11987, !11988, !11989, !11990, !11991, !11992, !11993, !11994, !11998, !12001, !12005, !12006, !12008, !12009, !12010, !12013, !12014, !12015, !12016, !12017, !12020, !12021, !12022, !12023, !12026, !12031, !12034, !12037, !12038, !12039, !12040, !12041, !12044, !12045, !12046, !12047, !12050, !12053, !12056, !12059, !12060, !12061, !12062, !12068, !12069, !12071, !12072, !12075, !12078, !12080, !12081, !12083, !12084, !12085, !12086}
!11968 = !DILocalVariable(name: "ops", arg: 1, scope: !11962, file: !3, line: 7205, type: !11965)
!11969 = !DILocalVariable(name: "target", arg: 2, scope: !11962, file: !3, line: 7205, type: !2182)
!11970 = !DILocalVariable(name: "tmode", arg: 3, scope: !11962, file: !3, line: 7205, type: !5)
!11971 = !DILocalVariable(name: "modifier", arg: 4, scope: !11962, file: !3, line: 7206, type: !2087)
!11972 = !DILocalVariable(name: "op0", scope: !11962, file: !3, line: 7208, type: !2182)
!11973 = !DILocalVariable(name: "op1", scope: !11962, file: !3, line: 7208, type: !2182)
!11974 = !DILocalVariable(name: "op2", scope: !11962, file: !3, line: 7208, type: !2182)
!11975 = !DILocalVariable(name: "temp", scope: !11962, file: !3, line: 7208, type: !2182)
!11976 = !DILocalVariable(name: "type", scope: !11962, file: !3, line: 7209, type: !2298)
!11977 = !DILocalVariable(name: "unsignedp", scope: !11962, file: !3, line: 7210, type: !2175)
!11978 = !DILocalVariable(name: "mode", scope: !11962, file: !3, line: 7211, type: !5)
!11979 = !DILocalVariable(name: "code", scope: !11962, file: !3, line: 7212, type: !141)
!11980 = !DILocalVariable(name: "this_optab", scope: !11962, file: !3, line: 7213, type: !9147)
!11981 = !DILocalVariable(name: "subtarget", scope: !11962, file: !3, line: 7214, type: !2182)
!11982 = !DILocalVariable(name: "original_target", scope: !11962, file: !3, line: 7214, type: !2182)
!11983 = !DILocalVariable(name: "ignore", scope: !11962, file: !3, line: 7215, type: !2175)
!11984 = !DILocalVariable(name: "subexp0", scope: !11962, file: !3, line: 7216, type: !2298)
!11985 = !DILocalVariable(name: "subexp1", scope: !11962, file: !3, line: 7216, type: !2298)
!11986 = !DILocalVariable(name: "reduce_bit_field", scope: !11962, file: !3, line: 7217, type: !2174)
!11987 = !DILocalVariable(name: "subexp0_def", scope: !11962, file: !3, line: 7218, type: !2762)
!11988 = !DILocalVariable(name: "subexp1_def", scope: !11962, file: !3, line: 7218, type: !2762)
!11989 = !DILocalVariable(name: "top0", scope: !11962, file: !3, line: 7219, type: !2298)
!11990 = !DILocalVariable(name: "top1", scope: !11962, file: !3, line: 7219, type: !2298)
!11991 = !DILocalVariable(name: "loc", scope: !11962, file: !3, line: 7220, type: !2418)
!11992 = !DILocalVariable(name: "treeop0", scope: !11962, file: !3, line: 7221, type: !2298)
!11993 = !DILocalVariable(name: "treeop1", scope: !11962, file: !3, line: 7221, type: !2298)
!11994 = !DILocalVariable(name: "valtype", scope: !11995, file: !3, line: 7272, type: !2298)
!11995 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 7271, column: 2)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7270, column: 11)
!11997 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 7263, column: 5)
!11998 = !DILocalVariable(name: "result", scope: !11999, file: !3, line: 7278, type: !2182)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !3, line: 7277, column: 6)
!12000 = distinct !DILexicalBlock(scope: !11995, file: !3, line: 7276, column: 8)
!12001 = !DILocalVariable(name: "inner_type", scope: !12002, file: !3, line: 7342, type: !2298)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !3, line: 7341, column: 2)
!12003 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 7340, column: 16)
!12004 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7336, column: 11)
!12005 = !DILocalVariable(name: "inner_mode", scope: !12002, file: !3, line: 7343, type: !5)
!12006 = !DILocalVariable(name: "treeop0_type", scope: !12007, file: !3, line: 7372, type: !2298)
!12007 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7371, column: 7)
!12008 = !DILocalVariable(name: "as_to", scope: !12007, file: !3, line: 7373, type: !8275)
!12009 = !DILocalVariable(name: "as_from", scope: !12007, file: !3, line: 7374, type: !8275)
!12010 = !DILocalVariable(name: "subsubexp0", scope: !12011, file: !3, line: 7421, type: !2298)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 7420, column: 2)
!12012 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7416, column: 11)
!12013 = !DILocalVariable(name: "subsubexp1", scope: !12011, file: !3, line: 7421, type: !2298)
!12014 = !DILocalVariable(name: "subsubexp0_def", scope: !12011, file: !3, line: 7422, type: !2762)
!12015 = !DILocalVariable(name: "subsubexp1_def", scope: !12011, file: !3, line: 7422, type: !2762)
!12016 = !DILocalVariable(name: "this_code", scope: !12011, file: !3, line: 7423, type: !141)
!12017 = !DILocalVariable(name: "op0type", scope: !12018, file: !3, line: 7441, type: !2298)
!12018 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 7440, column: 6)
!12019 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 7431, column: 8)
!12020 = !DILocalVariable(name: "innermode", scope: !12018, file: !3, line: 7442, type: !5)
!12021 = !DILocalVariable(name: "zextend_p", scope: !12018, file: !3, line: 7443, type: !2174)
!12022 = !DILocalVariable(name: "sat_p", scope: !12018, file: !3, line: 7444, type: !2174)
!12023 = !DILocalVariable(name: "t", scope: !12024, file: !3, line: 7484, type: !2298)
!12024 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 7483, column: 2)
!12025 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7477, column: 11)
!12026 = !DILocalVariable(name: "constant_part", scope: !12027, file: !3, line: 7507, type: !2182)
!12027 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 7506, column: 6)
!12028 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 7503, column: 8)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 7500, column: 2)
!12030 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7498, column: 11)
!12031 = !DILocalVariable(name: "constant_part", scope: !12032, file: !3, line: 7529, type: !2182)
!12032 = distinct !DILexicalBlock(scope: !12033, file: !3, line: 7528, column: 6)
!12033 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 7525, column: 13)
!12034 = !DILocalVariable(name: "subsubexp0", scope: !12035, file: !3, line: 7586, type: !2298)
!12035 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 7585, column: 2)
!12036 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7581, column: 11)
!12037 = !DILocalVariable(name: "subsubexp1", scope: !12035, file: !3, line: 7586, type: !2298)
!12038 = !DILocalVariable(name: "subsubexp0_def", scope: !12035, file: !3, line: 7587, type: !2762)
!12039 = !DILocalVariable(name: "subsubexp1_def", scope: !12035, file: !3, line: 7587, type: !2762)
!12040 = !DILocalVariable(name: "this_code", scope: !12035, file: !3, line: 7588, type: !141)
!12041 = !DILocalVariable(name: "op0type", scope: !12042, file: !3, line: 7606, type: !2298)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 7605, column: 6)
!12043 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 7596, column: 8)
!12044 = !DILocalVariable(name: "innermode", scope: !12042, file: !3, line: 7607, type: !5)
!12045 = !DILocalVariable(name: "zextend_p", scope: !12042, file: !3, line: 7608, type: !2174)
!12046 = !DILocalVariable(name: "sat_p", scope: !12042, file: !3, line: 7609, type: !2174)
!12047 = !DILocalVariable(name: "t1", scope: !12048, file: !3, line: 7683, type: !2298)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 7682, column: 2)
!12049 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7681, column: 11)
!12050 = !DILocalVariable(name: "exp1", scope: !12051, file: !3, line: 7694, type: !2298)
!12051 = distinct !DILexicalBlock(scope: !12052, file: !3, line: 7693, column: 2)
!12052 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7691, column: 11)
!12053 = !DILocalVariable(name: "innermode", scope: !12054, file: !3, line: 7737, type: !5)
!12054 = distinct !DILexicalBlock(scope: !12055, file: !3, line: 7736, column: 2)
!12055 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7725, column: 11)
!12056 = !DILocalVariable(name: "op0type", scope: !12057, file: !3, line: 7777, type: !2298)
!12057 = distinct !DILexicalBlock(scope: !12058, file: !3, line: 7776, column: 2)
!12058 = distinct !DILexicalBlock(scope: !12055, file: !3, line: 7758, column: 16)
!12059 = !DILocalVariable(name: "innermode", scope: !12057, file: !3, line: 7778, type: !5)
!12060 = !DILocalVariable(name: "zextend_p", scope: !12057, file: !3, line: 7779, type: !2174)
!12061 = !DILocalVariable(name: "other_optab", scope: !12057, file: !3, line: 7780, type: !9147)
!12062 = !DILocalVariable(name: "htem", scope: !12063, file: !3, line: 7798, type: !2182)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !3, line: 7797, column: 3)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !3, line: 7795, column: 17)
!12065 = distinct !DILexicalBlock(scope: !12066, file: !3, line: 7785, column: 12)
!12066 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 7784, column: 6)
!12067 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 7783, column: 8)
!12068 = !DILocalVariable(name: "hipart", scope: !12063, file: !3, line: 7798, type: !2182)
!12069 = !DILocalVariable(name: "comparison_code", scope: !12070, file: !3, line: 7958, type: !1898)
!12070 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7957, column: 7)
!12071 = !DILocalVariable(name: "cmpop1", scope: !12070, file: !3, line: 7959, type: !2182)
!12072 = !DILocalVariable(name: "insn", scope: !12073, file: !3, line: 7989, type: !2182)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !3, line: 7988, column: 4)
!12074 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 7987, column: 6)
!12075 = !DILocalVariable(name: "seq", scope: !12076, file: !3, line: 8009, type: !2182)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 8008, column: 8)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !3, line: 8007, column: 10)
!12078 = !DILocalVariable(name: "oprnd0", scope: !12079, file: !3, line: 8169, type: !2298)
!12079 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8168, column: 7)
!12080 = !DILocalVariable(name: "oprnd1", scope: !12079, file: !3, line: 8170, type: !2298)
!12081 = !DILocalVariable(name: "oprnd0", scope: !12082, file: !3, line: 8250, type: !2298)
!12082 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8249, column: 7)
!12083 = !DILocalVariable(name: "oprnd1", scope: !12082, file: !3, line: 8251, type: !2298)
!12084 = !DILabel(scope: !11962, name: "binop", file: !3, line: 8271)
!12085 = !DILabel(scope: !11962, name: "binop2", file: !3, line: 8274)
!12086 = !DILabel(scope: !11962, name: "binop3", file: !3, line: 8276)
!12087 = !DILocation(line: 0, scope: !11962)
!12088 = !DILocation(line: 7208, column: 3, scope: !11962)
!12089 = !DILocation(line: 7212, column: 30, scope: !11962)
!12090 = !DILocation(line: 7220, column: 25, scope: !11962)
!12091 = !DILocation(line: 7228, column: 15, scope: !11962)
!12092 = !DILocation(line: 7229, column: 10, scope: !11962)
!12093 = !DILocation(line: 7230, column: 15, scope: !11962)
!12094 = !DILocation(line: 7232, column: 18, scope: !11962)
!12095 = !DILocation(line: 7233, column: 18, scope: !11962)
!12096 = !DILocation(line: 7238, column: 3, scope: !11962)
!12097 = !DILocation(line: 7241, column: 23, scope: !11962)
!12098 = !DILocation(line: 7241, column: 20, scope: !11962)
!12099 = !DILocation(line: 7242, column: 6, scope: !11962)
!12100 = !DILocation(line: 7242, column: 11, scope: !11962)
!12101 = !DILocation(line: 7244, column: 6, scope: !11962)
!12102 = !DILocation(line: 7244, column: 23, scope: !11962)
!12103 = !DILocation(line: 7247, column: 3, scope: !11962)
!12104 = !DILocation(line: 7252, column: 23, scope: !11962)
!12105 = !DILocation(line: 7252, column: 40, scope: !11962)
!12106 = !DILocation(line: 7253, column: 9, scope: !11962)
!12107 = !DILocation(line: 7253, column: 12, scope: !11962)
!12108 = !DILocation(line: 7253, column: 40, scope: !11962)
!12109 = !DILocation(line: 7253, column: 38, scope: !11962)
!12110 = !DILocation(line: 7255, column: 36, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 7255, column: 7)
!12112 = !DILocation(line: 7255, column: 24, scope: !12111)
!12113 = !DILocation(line: 7259, column: 15, scope: !11962)
!12114 = !DILocation(line: 7262, column: 3, scope: !11962)
!12115 = !DILocation(line: 7267, column: 22, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7267, column: 11)
!12117 = !DILocation(line: 7267, column: 19, scope: !12116)
!12118 = !DILocation(line: 7267, column: 11, scope: !11997)
!12119 = !DILocation(line: 7268, column: 9, scope: !12116)
!12120 = !DILocation(line: 7268, column: 2, scope: !12116)
!12121 = !DILocation(line: 7270, column: 11, scope: !11996)
!12122 = !DILocation(line: 7270, column: 28, scope: !11996)
!12123 = !DILocation(line: 0, scope: !11997)
!12124 = !DILocation(line: 7270, column: 11, scope: !11997)
!12125 = !DILocation(line: 0, scope: !11995)
!12126 = !DILocation(line: 7276, column: 13, scope: !12000)
!12127 = !DILocation(line: 7276, column: 24, scope: !12000)
!12128 = !DILocation(line: 7276, column: 27, scope: !12000)
!12129 = !DILocation(line: 7276, column: 47, scope: !12000)
!12130 = !DILocation(line: 7276, column: 8, scope: !11995)
!12131 = !DILocation(line: 7278, column: 21, scope: !11999)
!12132 = !DILocation(line: 0, scope: !11999)
!12133 = !DILocation(line: 7281, column: 17, scope: !11999)
!12134 = !DILocation(line: 7282, column: 8, scope: !11999)
!12135 = !DILocation(line: 7286, column: 15, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !11995, file: !3, line: 7286, column: 8)
!12137 = !DILocation(line: 7286, column: 8, scope: !11995)
!12138 = !DILocation(line: 7288, column: 12, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12140, file: !3, line: 7288, column: 12)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 7287, column: 6)
!12141 = !DILocation(line: 7288, column: 29, scope: !12139)
!12142 = !DILocation(line: 7288, column: 12, scope: !12140)
!12143 = !DILocation(line: 7289, column: 25, scope: !12139)
!12144 = !DILocation(line: 7289, column: 12, scope: !12139)
!12145 = !DILocation(line: 7289, column: 3, scope: !12139)
!12146 = !DILocation(line: 7291, column: 12, scope: !12139)
!12147 = !DILocation(line: 7294, column: 8, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !11995, file: !3, line: 7294, column: 8)
!12149 = !DILocation(line: 7294, column: 8, scope: !11995)
!12150 = !DILocation(line: 7297, column: 4, scope: !12148)
!12151 = !DILocation(line: 7298, column: 13, scope: !12148)
!12152 = !DILocation(line: 7296, column: 6, scope: !12148)
!12153 = !DILocation(line: 7303, column: 8, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 7302, column: 6)
!12155 = !DILocation(line: 7307, column: 7, scope: !12154)
!12156 = !DILocation(line: 7311, column: 10, scope: !12154)
!12157 = !DILocation(line: 7306, column: 8, scope: !12154)
!12158 = !DILocation(line: 7319, column: 19, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7319, column: 11)
!12160 = !DILocation(line: 7319, column: 16, scope: !12159)
!12161 = !DILocation(line: 7319, column: 11, scope: !11997)
!12162 = !DILocation(line: 7321, column: 10, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 7320, column: 2)
!12164 = !DILocation(line: 7321, column: 8, scope: !12163)
!12165 = !DILocation(line: 7327, column: 8, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12163, file: !3, line: 7327, column: 8)
!12167 = !DILocation(line: 7327, column: 44, scope: !12166)
!12168 = !DILocation(line: 7328, column: 8, scope: !12166)
!12169 = !DILocation(line: 7328, column: 11, scope: !12166)
!12170 = !DILocation(line: 7328, column: 26, scope: !12166)
!12171 = !DILocation(line: 7327, column: 8, scope: !12163)
!12172 = !DILocation(line: 7329, column: 34, scope: !12166)
!12173 = !DILocation(line: 7331, column: 11, scope: !12163)
!12174 = !DILocation(line: 7329, column: 6, scope: !12166)
!12175 = !DILocation(line: 7335, column: 14, scope: !11997)
!12176 = !DILocation(line: 7335, column: 5, scope: !11997)
!12177 = !DILocation(line: 7334, column: 13, scope: !11997)
!12178 = !DILocation(line: 7334, column: 11, scope: !11997)
!12179 = !DILocation(line: 7336, column: 11, scope: !12004)
!12180 = !DILocation(line: 7336, column: 26, scope: !12004)
!12181 = !DILocation(line: 7336, column: 11, scope: !11997)
!12182 = !DILocation(line: 7340, column: 16, scope: !12003)
!12183 = !DILocation(line: 7340, column: 16, scope: !12004)
!12184 = !DILocation(line: 7342, column: 22, scope: !12002)
!12185 = !DILocation(line: 0, scope: !12002)
!12186 = !DILocation(line: 7343, column: 35, scope: !12002)
!12187 = !DILocation(line: 7345, column: 17, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 7345, column: 8)
!12189 = !DILocation(line: 7345, column: 8, scope: !12002)
!12190 = !DILocation(line: 7347, column: 12, scope: !12188)
!12191 = !DILocation(line: 7346, column: 12, scope: !12188)
!12192 = !DILocation(line: 7346, column: 10, scope: !12188)
!12193 = !DILocation(line: 7346, column: 6, scope: !12188)
!12194 = !DILocation(line: 7351, column: 6, scope: !12188)
!12195 = !DILocation(line: 7350, column: 12, scope: !12188)
!12196 = !DILocation(line: 7350, column: 9, scope: !12188)
!12197 = !DILocation(line: 7354, column: 25, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12003, file: !3, line: 7354, column: 16)
!12199 = !DILocation(line: 7354, column: 16, scope: !12003)
!12200 = !DILocation(line: 7355, column: 8, scope: !12198)
!12201 = !DILocation(line: 7355, column: 6, scope: !12198)
!12202 = !DILocation(line: 7355, column: 2, scope: !12198)
!12203 = !DILocation(line: 7357, column: 23, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12198, file: !3, line: 7357, column: 16)
!12205 = !DILocation(line: 0, scope: !12204)
!12206 = !DILocation(line: 7357, column: 16, scope: !12198)
!12207 = !DILocation(line: 7358, column: 8, scope: !12204)
!12208 = !DILocation(line: 7358, column: 6, scope: !12204)
!12209 = !DILocation(line: 7358, column: 2, scope: !12204)
!12210 = !DILocation(line: 7363, column: 4, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12204, file: !3, line: 7362, column: 2)
!12212 = !DILocation(line: 7365, column: 8, scope: !12211)
!12213 = !DILocation(line: 7368, column: 14, scope: !11997)
!12214 = !DILocation(line: 7372, column: 22, scope: !12007)
!12215 = !DILocation(line: 0, scope: !12007)
!12216 = !DILocation(line: 7376, column: 2, scope: !12007)
!12217 = !DILocation(line: 7377, column: 2, scope: !12007)
!12218 = !DILocation(line: 7379, column: 10, scope: !12007)
!12219 = !DILocation(line: 7380, column: 12, scope: !12007)
!12220 = !DILocation(line: 7384, column: 2, scope: !12007)
!12221 = !DILocation(line: 7388, column: 25, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12007, file: !3, line: 7388, column: 6)
!12223 = !DILocation(line: 7388, column: 6, scope: !12222)
!12224 = !DILocation(line: 7389, column: 6, scope: !12222)
!12225 = !DILocation(line: 7389, column: 28, scope: !12222)
!12226 = !DILocation(line: 7389, column: 9, scope: !12222)
!12227 = !DILocation(line: 7388, column: 6, scope: !12007)
!12228 = !DILocation(line: 7391, column: 12, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12222, file: !3, line: 7390, column: 4)
!12230 = !DILocation(line: 7392, column: 31, scope: !12229)
!12231 = !DILocation(line: 7392, column: 12, scope: !12229)
!12232 = !DILocation(line: 7392, column: 10, scope: !12229)
!12233 = !DILocation(line: 7393, column: 6, scope: !12229)
!12234 = !DILocation(line: 7394, column: 6, scope: !12229)
!12235 = !DILocation(line: 7400, column: 9, scope: !12007)
!12236 = !DILocation(line: 7400, column: 2, scope: !12007)
!12237 = !DILocation(line: 7409, column: 11, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7409, column: 11)
!12239 = !DILocation(line: 7409, column: 39, scope: !12238)
!12240 = !DILocation(line: 7409, column: 37, scope: !12238)
!12241 = !DILocation(line: 7409, column: 11, scope: !11997)
!12242 = !DILocation(line: 7411, column: 32, scope: !12238)
!12243 = !DILocation(line: 7411, column: 9, scope: !12238)
!12244 = !DILocation(line: 7410, column: 12, scope: !12238)
!12245 = !DILocation(line: 7410, column: 2, scope: !12238)
!12246 = !DILocation(line: 7416, column: 12, scope: !12012)
!12247 = !DILocation(line: 7416, column: 29, scope: !12012)
!12248 = !DILocation(line: 7417, column: 5, scope: !12012)
!12249 = !DILocation(line: 7417, column: 25, scope: !12012)
!12250 = !DILocation(line: 7418, column: 4, scope: !12012)
!12251 = !DILocation(line: 7418, column: 22, scope: !12012)
!12252 = !DILocation(line: 7418, column: 20, scope: !12012)
!12253 = !DILocation(line: 7416, column: 11, scope: !11997)
!12254 = !DILocation(line: 7425, column: 16, scope: !12011)
!12255 = !DILocation(line: 7425, column: 33, scope: !12011)
!12256 = !DILocation(line: 0, scope: !12011)
!12257 = !DILocation(line: 7427, column: 17, scope: !12011)
!12258 = !DILocation(line: 7428, column: 21, scope: !12011)
!12259 = !DILocation(line: 7429, column: 17, scope: !12011)
!12260 = !DILocation(line: 7430, column: 21, scope: !12011)
!12261 = !DILocation(line: 7431, column: 8, scope: !12019)
!12262 = !DILocation(line: 7431, column: 26, scope: !12019)
!12263 = !DILocation(line: 7431, column: 23, scope: !12019)
!12264 = !DILocation(line: 7432, column: 19, scope: !12019)
!12265 = !DILocation(line: 7432, column: 17, scope: !12019)
!12266 = !DILocation(line: 7433, column: 8, scope: !12019)
!12267 = !DILocation(line: 7433, column: 19, scope: !12019)
!12268 = !DILocation(line: 7433, column: 17, scope: !12019)
!12269 = !DILocation(line: 7434, column: 8, scope: !12019)
!12270 = !DILocation(line: 7434, column: 12, scope: !12019)
!12271 = !DILocation(line: 7435, column: 7, scope: !12019)
!12272 = !DILocation(line: 7435, column: 5, scope: !12019)
!12273 = !DILocation(line: 7436, column: 8, scope: !12019)
!12274 = !DILocation(line: 7437, column: 8, scope: !12019)
!12275 = !DILocation(line: 7437, column: 5, scope: !12019)
!12276 = !DILocation(line: 7438, column: 8, scope: !12019)
!12277 = !DILocation(line: 7438, column: 12, scope: !12019)
!12278 = !DILocation(line: 7439, column: 8, scope: !12019)
!12279 = !DILocation(line: 7439, column: 5, scope: !12019)
!12280 = !DILocation(line: 7431, column: 8, scope: !12011)
!12281 = !DILocation(line: 0, scope: !12018)
!12282 = !DILocation(line: 7442, column: 38, scope: !12018)
!12283 = !DILocation(line: 7443, column: 25, scope: !12018)
!12284 = !DILocation(line: 7444, column: 21, scope: !12018)
!12285 = !DILocation(line: 7445, column: 18, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 7445, column: 12)
!12287 = !DILocation(line: 0, scope: !12286)
!12288 = !DILocation(line: 7445, column: 12, scope: !12018)
!12289 = !DILocation(line: 7450, column: 20, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 7450, column: 12)
!12291 = !DILocation(line: 7450, column: 17, scope: !12290)
!12292 = !DILocation(line: 7451, column: 5, scope: !12290)
!12293 = !DILocation(line: 7451, column: 9, scope: !12290)
!12294 = !DILocation(line: 7451, column: 43, scope: !12290)
!12295 = !DILocation(line: 7452, column: 9, scope: !12290)
!12296 = !DILocation(line: 7450, column: 12, scope: !12018)
!12297 = !DILocation(line: 7454, column: 5, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 7453, column: 3)
!12299 = !DILocation(line: 7456, column: 11, scope: !12298)
!12300 = !DILocation(line: 7458, column: 49, scope: !12298)
!12301 = !DILocation(line: 7458, column: 54, scope: !12298)
!12302 = !DILocation(line: 7458, column: 12, scope: !12298)
!12303 = !DILocation(line: 7460, column: 5, scope: !12298)
!12304 = !DILocation(line: 7461, column: 12, scope: !12298)
!12305 = !DILocation(line: 7464, column: 2, scope: !12012)
!12306 = !DILocation(line: 7461, column: 5, scope: !12298)
!12307 = !DILocation(line: 7477, column: 11, scope: !12025)
!12308 = !DILocation(line: 7477, column: 31, scope: !12025)
!12309 = !DILocation(line: 7478, column: 4, scope: !12025)
!12310 = !DILocation(line: 7478, column: 7, scope: !12025)
!12311 = !DILocation(line: 7478, column: 45, scope: !12025)
!12312 = !DILocation(line: 7479, column: 4, scope: !12025)
!12313 = !DILocation(line: 7479, column: 7, scope: !12025)
!12314 = !DILocation(line: 7479, column: 27, scope: !12025)
!12315 = !DILocation(line: 7480, column: 4, scope: !12025)
!12316 = !DILocation(line: 7480, column: 8, scope: !12025)
!12317 = !DILocation(line: 7480, column: 30, scope: !12025)
!12318 = !DILocation(line: 7480, column: 27, scope: !12025)
!12319 = !DILocation(line: 7481, column: 8, scope: !12025)
!12320 = !DILocation(line: 7481, column: 11, scope: !12025)
!12321 = !DILocation(line: 7481, column: 33, scope: !12025)
!12322 = !DILocation(line: 7481, column: 30, scope: !12025)
!12323 = !DILocation(line: 7482, column: 8, scope: !12025)
!12324 = !DILocation(line: 7482, column: 11, scope: !12025)
!12325 = !DILocation(line: 7482, column: 33, scope: !12025)
!12326 = !DILocation(line: 7482, column: 30, scope: !12025)
!12327 = !DILocation(line: 7477, column: 11, scope: !11997)
!12328 = !DILocation(line: 0, scope: !12024)
!12329 = !DILocation(line: 7486, column: 14, scope: !12024)
!12330 = !DILocation(line: 7487, column: 30, scope: !12024)
!12331 = !DILocation(line: 7488, column: 2, scope: !12024)
!12332 = !DILocation(line: 7498, column: 34, scope: !12030)
!12333 = !DILocation(line: 7499, column: 16, scope: !12030)
!12334 = !DILocation(line: 7499, column: 13, scope: !12030)
!12335 = !DILocation(line: 7499, column: 25, scope: !12030)
!12336 = !DILocation(line: 7499, column: 29, scope: !12030)
!12337 = !DILocation(line: 7499, column: 44, scope: !12030)
!12338 = !DILocation(line: 7499, column: 39, scope: !12030)
!12339 = !DILocation(line: 7501, column: 8, scope: !12029)
!12340 = !DILocation(line: 7503, column: 8, scope: !12028)
!12341 = !DILocation(line: 7503, column: 28, scope: !12028)
!12342 = !DILocation(line: 7504, column: 8, scope: !12028)
!12343 = !DILocation(line: 7504, column: 11, scope: !12028)
!12344 = !DILocation(line: 7504, column: 35, scope: !12028)
!12345 = !DILocation(line: 7505, column: 8, scope: !12028)
!12346 = !DILocation(line: 7505, column: 11, scope: !12028)
!12347 = !DILocation(line: 7503, column: 8, scope: !12029)
!12348 = !DILocation(line: 7509, column: 14, scope: !12027)
!12349 = !DILocation(line: 7509, column: 12, scope: !12027)
!12350 = !DILocation(line: 7516, column: 25, scope: !12027)
!12351 = !DILocation(line: 7518, column: 11, scope: !12027)
!12352 = !DILocation(line: 7516, column: 5, scope: !12027)
!12353 = !DILocation(line: 0, scope: !12027)
!12354 = !DILocation(line: 7519, column: 29, scope: !12027)
!12355 = !DILocation(line: 7519, column: 34, scope: !12027)
!12356 = !DILocation(line: 7519, column: 14, scope: !12027)
!12357 = !DILocation(line: 7519, column: 12, scope: !12027)
!12358 = !DILocation(line: 7520, column: 35, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 7520, column: 12)
!12360 = !DILocation(line: 7521, column: 9, scope: !12359)
!12361 = !DILocation(line: 7521, column: 7, scope: !12359)
!12362 = !DILocation(line: 7521, column: 3, scope: !12359)
!12363 = !DILocation(line: 7522, column: 15, scope: !12027)
!12364 = !DILocation(line: 7525, column: 13, scope: !12033)
!12365 = !DILocation(line: 7525, column: 33, scope: !12033)
!12366 = !DILocation(line: 7526, column: 6, scope: !12033)
!12367 = !DILocation(line: 7526, column: 9, scope: !12033)
!12368 = !DILocation(line: 7526, column: 33, scope: !12033)
!12369 = !DILocation(line: 7527, column: 6, scope: !12033)
!12370 = !DILocation(line: 7527, column: 9, scope: !12033)
!12371 = !DILocation(line: 7525, column: 13, scope: !12028)
!12372 = !DILocation(line: 7532, column: 16, scope: !12032)
!12373 = !DILocation(line: 7532, column: 7, scope: !12032)
!12374 = !DILocation(line: 7531, column: 14, scope: !12032)
!12375 = !DILocation(line: 7531, column: 12, scope: !12032)
!12376 = !DILocation(line: 7534, column: 14, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 7534, column: 12)
!12378 = !DILocation(line: 7534, column: 12, scope: !12032)
!12379 = !DILocation(line: 7536, column: 11, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 7535, column: 3)
!12381 = !DILocation(line: 7536, column: 9, scope: !12380)
!12382 = !DILocation(line: 7540, column: 9, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12380, file: !3, line: 7539, column: 9)
!12384 = !DILocation(line: 7541, column: 47, scope: !12383)
!12385 = !DILocation(line: 7541, column: 14, scope: !12383)
!12386 = !DILocation(line: 7541, column: 7, scope: !12383)
!12387 = !DILocation(line: 7549, column: 25, scope: !12032)
!12388 = !DILocation(line: 7551, column: 11, scope: !12032)
!12389 = !DILocation(line: 7549, column: 5, scope: !12032)
!12390 = !DILocation(line: 0, scope: !12032)
!12391 = !DILocation(line: 7552, column: 29, scope: !12032)
!12392 = !DILocation(line: 7552, column: 34, scope: !12032)
!12393 = !DILocation(line: 7552, column: 14, scope: !12032)
!12394 = !DILocation(line: 7552, column: 12, scope: !12032)
!12395 = !DILocation(line: 7553, column: 35, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 7553, column: 12)
!12397 = !DILocation(line: 7554, column: 9, scope: !12396)
!12398 = !DILocation(line: 7554, column: 7, scope: !12396)
!12399 = !DILocation(line: 7554, column: 3, scope: !12396)
!12400 = !DILocation(line: 7555, column: 15, scope: !12032)
!12401 = !DILocation(line: 7563, column: 35, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7563, column: 11)
!12403 = !DILocation(line: 7564, column: 15, scope: !12402)
!12404 = !DILocation(line: 7564, column: 12, scope: !12402)
!12405 = !DILocation(line: 7563, column: 11, scope: !11997)
!12406 = !DILocation(line: 7566, column: 4, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 7565, column: 2)
!12408 = !DILocation(line: 7568, column: 8, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 7568, column: 8)
!12410 = !DILocation(line: 7568, column: 15, scope: !12409)
!12411 = !DILocation(line: 7568, column: 12, scope: !12409)
!12412 = !DILocation(line: 0, scope: !12407)
!12413 = !DILocation(line: 7568, column: 8, scope: !12407)
!12414 = !DILocation(line: 7570, column: 12, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 7570, column: 8)
!12416 = !DILocation(line: 7570, column: 8, scope: !12407)
!12417 = !DILocation(line: 7571, column: 6, scope: !12415)
!12418 = !DILocation(line: 7575, column: 7, scope: !11997)
!12419 = !DILocation(line: 7577, column: 14, scope: !11997)
!12420 = !DILocation(line: 7581, column: 12, scope: !12036)
!12421 = !DILocation(line: 7581, column: 29, scope: !12036)
!12422 = !DILocation(line: 7582, column: 5, scope: !12036)
!12423 = !DILocation(line: 7582, column: 25, scope: !12036)
!12424 = !DILocation(line: 7583, column: 4, scope: !12036)
!12425 = !DILocation(line: 7583, column: 22, scope: !12036)
!12426 = !DILocation(line: 7583, column: 20, scope: !12036)
!12427 = !DILocation(line: 7581, column: 11, scope: !11997)
!12428 = !DILocation(line: 7590, column: 16, scope: !12035)
!12429 = !DILocation(line: 7590, column: 33, scope: !12035)
!12430 = !DILocation(line: 0, scope: !12035)
!12431 = !DILocation(line: 7592, column: 17, scope: !12035)
!12432 = !DILocation(line: 7593, column: 21, scope: !12035)
!12433 = !DILocation(line: 7594, column: 17, scope: !12035)
!12434 = !DILocation(line: 7595, column: 21, scope: !12035)
!12435 = !DILocation(line: 7596, column: 8, scope: !12043)
!12436 = !DILocation(line: 7596, column: 26, scope: !12043)
!12437 = !DILocation(line: 7596, column: 23, scope: !12043)
!12438 = !DILocation(line: 7597, column: 19, scope: !12043)
!12439 = !DILocation(line: 7597, column: 17, scope: !12043)
!12440 = !DILocation(line: 7598, column: 8, scope: !12043)
!12441 = !DILocation(line: 7598, column: 19, scope: !12043)
!12442 = !DILocation(line: 7598, column: 17, scope: !12043)
!12443 = !DILocation(line: 7599, column: 8, scope: !12043)
!12444 = !DILocation(line: 7599, column: 12, scope: !12043)
!12445 = !DILocation(line: 7600, column: 7, scope: !12043)
!12446 = !DILocation(line: 7600, column: 5, scope: !12043)
!12447 = !DILocation(line: 7601, column: 8, scope: !12043)
!12448 = !DILocation(line: 7602, column: 8, scope: !12043)
!12449 = !DILocation(line: 7602, column: 5, scope: !12043)
!12450 = !DILocation(line: 7603, column: 8, scope: !12043)
!12451 = !DILocation(line: 7603, column: 12, scope: !12043)
!12452 = !DILocation(line: 7604, column: 8, scope: !12043)
!12453 = !DILocation(line: 7604, column: 5, scope: !12043)
!12454 = !DILocation(line: 7596, column: 8, scope: !12035)
!12455 = !DILocation(line: 0, scope: !12042)
!12456 = !DILocation(line: 7607, column: 38, scope: !12042)
!12457 = !DILocation(line: 7608, column: 25, scope: !12042)
!12458 = !DILocation(line: 7609, column: 21, scope: !12042)
!12459 = !DILocation(line: 7610, column: 18, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 7610, column: 12)
!12461 = !DILocation(line: 0, scope: !12460)
!12462 = !DILocation(line: 7610, column: 12, scope: !12042)
!12463 = !DILocation(line: 7615, column: 20, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 7615, column: 12)
!12465 = !DILocation(line: 7615, column: 17, scope: !12464)
!12466 = !DILocation(line: 7616, column: 5, scope: !12464)
!12467 = !DILocation(line: 7616, column: 9, scope: !12464)
!12468 = !DILocation(line: 7616, column: 43, scope: !12464)
!12469 = !DILocation(line: 7617, column: 9, scope: !12464)
!12470 = !DILocation(line: 7615, column: 12, scope: !12042)
!12471 = !DILocation(line: 7619, column: 5, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 7618, column: 3)
!12473 = !DILocation(line: 7621, column: 11, scope: !12472)
!12474 = !DILocation(line: 7623, column: 49, scope: !12472)
!12475 = !DILocation(line: 7623, column: 54, scope: !12472)
!12476 = !DILocation(line: 7623, column: 12, scope: !12472)
!12477 = !DILocation(line: 7625, column: 5, scope: !12472)
!12478 = !DILocation(line: 7626, column: 12, scope: !12472)
!12479 = !DILocation(line: 7629, column: 2, scope: !12036)
!12480 = !DILocation(line: 7626, column: 5, scope: !12472)
!12481 = !DILocation(line: 7636, column: 35, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7636, column: 11)
!12483 = !DILocation(line: 7637, column: 7, scope: !12482)
!12484 = !DILocation(line: 7638, column: 4, scope: !12482)
!12485 = !DILocation(line: 7638, column: 7, scope: !12482)
!12486 = !DILocation(line: 7636, column: 11, scope: !11997)
!12487 = !DILocation(line: 7640, column: 4, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 7639, column: 2)
!12489 = !DILocation(line: 7645, column: 8, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 7645, column: 8)
!12491 = !DILocation(line: 0, scope: !12490)
!12492 = !DILocation(line: 7645, column: 8, scope: !12488)
!12493 = !DILocation(line: 7646, column: 13, scope: !12490)
!12494 = !DILocation(line: 7648, column: 13, scope: !12490)
!12495 = !DILocation(line: 7655, column: 35, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7655, column: 11)
!12497 = !DILocation(line: 7656, column: 15, scope: !12496)
!12498 = !DILocation(line: 7656, column: 12, scope: !12496)
!12499 = !DILocation(line: 7655, column: 11, scope: !11997)
!12500 = !DILocation(line: 7659, column: 7, scope: !11997)
!12501 = !DILocation(line: 7663, column: 11, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7663, column: 11)
!12503 = !DILocation(line: 7663, column: 11, scope: !11997)
!12504 = !DILocation(line: 7665, column: 10, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 7664, column: 2)
!12506 = !DILocation(line: 7665, column: 8, scope: !12505)
!12507 = !DILocation(line: 7666, column: 11, scope: !12505)
!12508 = !DILocation(line: 7675, column: 11, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7675, column: 11)
!12510 = !DILocation(line: 7675, column: 11, scope: !11997)
!12511 = !DILocation(line: 7681, column: 11, scope: !12049)
!12512 = !DILocation(line: 7681, column: 31, scope: !12049)
!12513 = !DILocation(line: 7681, column: 11, scope: !11997)
!12514 = !DILocation(line: 7691, column: 20, scope: !12052)
!12515 = !DILocation(line: 7691, column: 45, scope: !12052)
!12516 = !DILocation(line: 7691, column: 42, scope: !12052)
!12517 = !DILocation(line: 7691, column: 34, scope: !12052)
!12518 = !DILocation(line: 7692, column: 7, scope: !12052)
!12519 = !DILocation(line: 7691, column: 11, scope: !11997)
!12520 = !DILocation(line: 0, scope: !12051)
!12521 = !DILocation(line: 7696, column: 10, scope: !12051)
!12522 = !DILocation(line: 7696, column: 8, scope: !12051)
!12523 = !DILocation(line: 7699, column: 9, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 7699, column: 8)
!12525 = !DILocation(line: 7699, column: 8, scope: !12051)
!12526 = !DILocation(line: 7700, column: 12, scope: !12524)
!12527 = !DILocation(line: 7700, column: 10, scope: !12524)
!12528 = !DILocation(line: 7700, column: 6, scope: !12524)
!12529 = !DILocation(line: 7701, column: 9, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 7701, column: 8)
!12531 = !DILocation(line: 7701, column: 8, scope: !12051)
!12532 = !DILocation(line: 7702, column: 12, scope: !12530)
!12533 = !DILocation(line: 7702, column: 10, scope: !12530)
!12534 = !DILocation(line: 7702, column: 6, scope: !12530)
!12535 = !DILocation(line: 7704, column: 11, scope: !12051)
!12536 = !DILocation(line: 7709, column: 11, scope: !11997)
!12537 = !DILocation(line: 7719, column: 21, scope: !11997)
!12538 = !DILocation(line: 7720, column: 21, scope: !11997)
!12539 = !DILocation(line: 7725, column: 11, scope: !12055)
!12540 = !DILocation(line: 7726, column: 4, scope: !12055)
!12541 = !DILocation(line: 7726, column: 15, scope: !12055)
!12542 = !DILocation(line: 7726, column: 13, scope: !12055)
!12543 = !DILocation(line: 7727, column: 7, scope: !12055)
!12544 = !DILocation(line: 7727, column: 4, scope: !12055)
!12545 = !DILocation(line: 7728, column: 15, scope: !12055)
!12546 = !DILocation(line: 7728, column: 13, scope: !12055)
!12547 = !DILocation(line: 7729, column: 4, scope: !12055)
!12548 = !DILocation(line: 7729, column: 7, scope: !12055)
!12549 = !DILocation(line: 7729, column: 24, scope: !12055)
!12550 = !DILocation(line: 7730, column: 4, scope: !12055)
!12551 = !DILocation(line: 7730, column: 8, scope: !12055)
!12552 = !DILocation(line: 7731, column: 10, scope: !12055)
!12553 = !DILocation(line: 7731, column: 8, scope: !12055)
!12554 = !DILocation(line: 7732, column: 4, scope: !12055)
!12555 = !DILocation(line: 7733, column: 11, scope: !12055)
!12556 = !DILocation(line: 7733, column: 8, scope: !12055)
!12557 = !DILocation(line: 7734, column: 4, scope: !12055)
!12558 = !DILocation(line: 7734, column: 8, scope: !12055)
!12559 = !DILocation(line: 7735, column: 11, scope: !12055)
!12560 = !DILocation(line: 7735, column: 8, scope: !12055)
!12561 = !DILocation(line: 7725, column: 11, scope: !11997)
!12562 = !DILocation(line: 7738, column: 8, scope: !12054)
!12563 = !DILocation(line: 0, scope: !12054)
!12564 = !DILocation(line: 7740, column: 16, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 7740, column: 8)
!12566 = !DILocation(line: 7740, column: 13, scope: !12565)
!12567 = !DILocation(line: 7740, column: 8, scope: !12054)
!12568 = !DILocation(line: 7742, column: 12, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !3, line: 7742, column: 12)
!12570 = distinct !DILexicalBlock(scope: !12565, file: !3, line: 7741, column: 6)
!12571 = !DILocation(line: 7742, column: 46, scope: !12569)
!12572 = !DILocation(line: 7742, column: 56, scope: !12569)
!12573 = !DILocation(line: 7742, column: 12, scope: !12570)
!12574 = !DILocation(line: 7744, column: 9, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 7744, column: 9)
!12576 = distinct !DILexicalBlock(scope: !12569, file: !3, line: 7743, column: 3)
!12577 = !DILocation(line: 7744, column: 9, scope: !12576)
!12578 = !DILocation(line: 7745, column: 7, scope: !12575)
!12579 = !DILocation(line: 7748, column: 7, scope: !12575)
!12580 = !DILocation(line: 7758, column: 16, scope: !12058)
!12581 = !DILocation(line: 7759, column: 4, scope: !12058)
!12582 = !DILocation(line: 7759, column: 7, scope: !12058)
!12583 = !DILocation(line: 7759, column: 24, scope: !12058)
!12584 = !DILocation(line: 7760, column: 4, scope: !12058)
!12585 = !DILocation(line: 7760, column: 8, scope: !12058)
!12586 = !DILocation(line: 7761, column: 10, scope: !12058)
!12587 = !DILocation(line: 7761, column: 8, scope: !12058)
!12588 = !DILocation(line: 7762, column: 4, scope: !12058)
!12589 = !DILocation(line: 7762, column: 9, scope: !12058)
!12590 = !DILocation(line: 7762, column: 29, scope: !12058)
!12591 = !DILocation(line: 7763, column: 9, scope: !12058)
!12592 = !DILocation(line: 7763, column: 12, scope: !12058)
!12593 = !DILocation(line: 7765, column: 9, scope: !12058)
!12594 = !DILocation(line: 7765, column: 14, scope: !12058)
!12595 = !DILocation(line: 7766, column: 7, scope: !12058)
!12596 = !DILocation(line: 7767, column: 6, scope: !12058)
!12597 = !DILocation(line: 7767, column: 21, scope: !12058)
!12598 = !DILocation(line: 7767, column: 9, scope: !12058)
!12599 = !DILocation(line: 7767, column: 49, scope: !12058)
!12600 = !DILocation(line: 7768, column: 8, scope: !12058)
!12601 = !DILocation(line: 7769, column: 9, scope: !12058)
!12602 = !DILocation(line: 7770, column: 9, scope: !12058)
!12603 = !DILocation(line: 7770, column: 13, scope: !12058)
!12604 = !DILocation(line: 7771, column: 9, scope: !12058)
!12605 = !DILocation(line: 7771, column: 6, scope: !12058)
!12606 = !DILocation(line: 7774, column: 9, scope: !12058)
!12607 = !DILocation(line: 7774, column: 13, scope: !12058)
!12608 = !DILocation(line: 7775, column: 9, scope: !12058)
!12609 = !DILocation(line: 7775, column: 6, scope: !12058)
!12610 = !DILocation(line: 7758, column: 16, scope: !12055)
!12611 = !DILocation(line: 7777, column: 19, scope: !12057)
!12612 = !DILocation(line: 0, scope: !12057)
!12613 = !DILocation(line: 7778, column: 34, scope: !12057)
!12614 = !DILocation(line: 7779, column: 21, scope: !12057)
!12615 = !DILocation(line: 7780, column: 24, scope: !12057)
!12616 = !DILocation(line: 7781, column: 17, scope: !12057)
!12617 = !DILocation(line: 7783, column: 16, scope: !12067)
!12618 = !DILocation(line: 7783, column: 13, scope: !12067)
!12619 = !DILocation(line: 7783, column: 8, scope: !12057)
!12620 = !DILocation(line: 7785, column: 12, scope: !12065)
!12621 = !DILocation(line: 7785, column: 46, scope: !12065)
!12622 = !DILocation(line: 7785, column: 56, scope: !12065)
!12623 = !DILocation(line: 7785, column: 12, scope: !12066)
!12624 = !DILocation(line: 7787, column: 9, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 7787, column: 9)
!12626 = distinct !DILexicalBlock(scope: !12065, file: !3, line: 7786, column: 3)
!12627 = !DILocation(line: 7787, column: 29, scope: !12625)
!12628 = !DILocation(line: 7787, column: 9, scope: !12626)
!12629 = !DILocation(line: 7788, column: 7, scope: !12625)
!12630 = !DILocation(line: 7791, column: 7, scope: !12625)
!12631 = !DILocation(line: 7795, column: 52, scope: !12064)
!12632 = !DILocation(line: 7795, column: 62, scope: !12064)
!12633 = !DILocation(line: 7796, column: 26, scope: !12064)
!12634 = !DILocation(line: 7796, column: 23, scope: !12064)
!12635 = !DILocation(line: 7796, column: 10, scope: !12064)
!12636 = !DILocation(line: 7799, column: 11, scope: !12063)
!12637 = !DILocation(line: 7799, column: 9, scope: !12063)
!12638 = !DILocation(line: 7800, column: 9, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 7800, column: 9)
!12640 = !DILocation(line: 7800, column: 29, scope: !12639)
!12641 = !DILocation(line: 7800, column: 9, scope: !12063)
!12642 = !DILocation(line: 7802, column: 7, scope: !12639)
!12643 = !DILocation(line: 7801, column: 13, scope: !12639)
!12644 = !DILocation(line: 7801, column: 7, scope: !12639)
!12645 = !DILocation(line: 7804, column: 13, scope: !12639)
!12646 = !DILocation(line: 0, scope: !12639)
!12647 = !DILocation(line: 7805, column: 12, scope: !12063)
!12648 = !DILocation(line: 7807, column: 14, scope: !12063)
!12649 = !DILocation(line: 0, scope: !12063)
!12650 = !DILocation(line: 7810, column: 13, scope: !12063)
!12651 = !DILocation(line: 7808, column: 12, scope: !12063)
!12652 = !DILocation(line: 7811, column: 14, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 7811, column: 9)
!12654 = !DILocation(line: 7811, column: 9, scope: !12063)
!12655 = !DILocation(line: 7812, column: 7, scope: !12653)
!12656 = !DILocation(line: 7813, column: 12, scope: !12063)
!12657 = !DILocation(line: 7817, column: 7, scope: !11997)
!12658 = !DILocation(line: 7818, column: 14, scope: !11997)
!12659 = !DILocation(line: 7828, column: 11, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7828, column: 11)
!12661 = !DILocation(line: 7828, column: 11, scope: !11997)
!12662 = !DILocation(line: 7831, column: 11, scope: !11997)
!12663 = !DILocation(line: 7836, column: 7, scope: !11997)
!12664 = !DILocation(line: 7838, column: 44, scope: !11997)
!12665 = !DILocation(line: 7838, column: 49, scope: !11997)
!12666 = !DILocation(line: 7838, column: 14, scope: !11997)
!12667 = !DILocation(line: 7838, column: 7, scope: !11997)
!12668 = !DILocation(line: 7847, column: 11, scope: !11997)
!12669 = !DILocation(line: 7849, column: 7, scope: !11997)
!12670 = !DILocation(line: 7851, column: 44, scope: !11997)
!12671 = !DILocation(line: 7851, column: 49, scope: !11997)
!12672 = !DILocation(line: 7851, column: 14, scope: !11997)
!12673 = !DILocation(line: 7851, column: 7, scope: !11997)
!12674 = !DILocation(line: 7854, column: 13, scope: !11997)
!12675 = !DILocation(line: 7854, column: 11, scope: !11997)
!12676 = !DILocation(line: 7855, column: 18, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7855, column: 11)
!12678 = !DILocation(line: 7855, column: 23, scope: !12677)
!12679 = !DILocation(line: 7856, column: 11, scope: !12677)
!12680 = !DILocation(line: 7856, column: 2, scope: !12677)
!12681 = !DILocation(line: 7858, column: 12, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7858, column: 11)
!12683 = !DILocation(line: 7858, column: 44, scope: !12682)
!12684 = !DILocation(line: 7859, column: 5, scope: !12682)
!12685 = !DILocation(line: 7859, column: 8, scope: !12682)
!12686 = !DILocation(line: 7860, column: 11, scope: !12682)
!12687 = !DILocation(line: 7861, column: 40, scope: !12682)
!12688 = !DILocation(line: 7860, column: 15, scope: !12682)
!12689 = !DILocation(line: 7860, column: 32, scope: !12682)
!12690 = !DILocation(line: 7860, column: 48, scope: !12682)
!12691 = !DILocation(line: 7860, column: 51, scope: !12682)
!12692 = !DILocation(line: 7858, column: 11, scope: !11997)
!12693 = !DILocation(line: 7861, column: 2, scope: !12682)
!12694 = !DILocation(line: 7863, column: 40, scope: !12682)
!12695 = !DILocation(line: 7863, column: 2, scope: !12682)
!12696 = !DILocation(line: 7867, column: 13, scope: !11997)
!12697 = !DILocation(line: 7867, column: 11, scope: !11997)
!12698 = !DILocation(line: 7868, column: 18, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7868, column: 11)
!12700 = !DILocation(line: 7868, column: 23, scope: !12699)
!12701 = !DILocation(line: 7869, column: 11, scope: !12699)
!12702 = !DILocation(line: 7869, column: 2, scope: !12699)
!12703 = !DILocation(line: 7870, column: 7, scope: !11997)
!12704 = !DILocation(line: 7871, column: 7, scope: !11997)
!12705 = !DILocation(line: 7874, column: 13, scope: !11997)
!12706 = !DILocation(line: 7874, column: 11, scope: !11997)
!12707 = !DILocation(line: 7875, column: 18, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7875, column: 11)
!12709 = !DILocation(line: 7875, column: 23, scope: !12708)
!12710 = !DILocation(line: 7876, column: 11, scope: !12708)
!12711 = !DILocation(line: 7876, column: 2, scope: !12708)
!12712 = !DILocation(line: 7879, column: 11, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7879, column: 11)
!12714 = !DILocation(line: 7879, column: 26, scope: !12713)
!12715 = !DILocation(line: 7879, column: 11, scope: !11997)
!12716 = !DILocation(line: 7880, column: 26, scope: !12713)
!12717 = !DILocation(line: 7880, column: 8, scope: !12713)
!12718 = !DILocation(line: 7880, column: 6, scope: !12713)
!12719 = !DILocation(line: 7880, column: 2, scope: !12713)
!12720 = !DILocation(line: 7882, column: 29, scope: !11997)
!12721 = !DILocation(line: 7883, column: 7, scope: !11997)
!12722 = !DILocation(line: 7882, column: 7, scope: !11997)
!12723 = !DILocation(line: 7884, column: 7, scope: !11997)
!12724 = !DILocation(line: 7887, column: 13, scope: !11997)
!12725 = !DILocation(line: 7887, column: 11, scope: !11997)
!12726 = !DILocation(line: 7889, column: 11, scope: !11997)
!12727 = !DILocation(line: 7892, column: 12, scope: !11997)
!12728 = !DILocation(line: 7891, column: 14, scope: !11997)
!12729 = !DILocation(line: 7895, column: 7, scope: !11997)
!12730 = !DILocation(line: 7896, column: 14, scope: !11997)
!12731 = !DILocation(line: 7899, column: 13, scope: !11997)
!12732 = !DILocation(line: 7899, column: 11, scope: !11997)
!12733 = !DILocation(line: 7901, column: 11, scope: !11997)
!12734 = !DILocation(line: 7905, column: 7, scope: !11997)
!12735 = !DILocation(line: 7910, column: 11, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7910, column: 11)
!12737 = !DILocation(line: 7910, column: 11, scope: !11997)
!12738 = !DILocation(line: 7914, column: 5, scope: !11997)
!12739 = !DILocation(line: 7913, column: 14, scope: !11997)
!12740 = !DILocation(line: 7913, column: 7, scope: !11997)
!12741 = !DILocation(line: 7919, column: 18, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7919, column: 11)
!12743 = !DILocation(line: 7920, column: 4, scope: !12742)
!12744 = !DILocation(line: 7921, column: 8, scope: !12742)
!12745 = !DILocation(line: 7921, column: 23, scope: !12742)
!12746 = !DILocation(line: 7921, column: 26, scope: !12742)
!12747 = !DILocation(line: 7922, column: 4, scope: !12742)
!12748 = !DILocation(line: 7922, column: 7, scope: !12742)
!12749 = !DILocation(line: 7922, column: 25, scope: !12742)
!12750 = !DILocation(line: 7923, column: 4, scope: !12742)
!12751 = !DILocation(line: 7923, column: 8, scope: !12742)
!12752 = !DILocation(line: 7924, column: 8, scope: !12742)
!12753 = !DILocation(line: 7924, column: 11, scope: !12742)
!12754 = !DILocation(line: 7924, column: 26, scope: !12742)
!12755 = !DILocation(line: 7919, column: 11, scope: !11997)
!12756 = !DILocation(line: 7925, column: 11, scope: !12742)
!12757 = !DILocation(line: 7925, column: 2, scope: !12742)
!12758 = !DILocation(line: 7926, column: 7, scope: !11997)
!12759 = !DILocation(line: 7932, column: 20, scope: !11997)
!12760 = !DILocation(line: 7933, column: 46, scope: !11997)
!12761 = !DILocation(line: 7933, column: 51, scope: !11997)
!12762 = !DILocation(line: 7933, column: 14, scope: !11997)
!12763 = !DILocation(line: 7935, column: 16, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7935, column: 11)
!12765 = !DILocation(line: 7935, column: 11, scope: !11997)
!12766 = !DILocation(line: 7941, column: 13, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7941, column: 11)
!12768 = !DILocation(line: 7941, column: 11, scope: !11997)
!12769 = !DILocation(line: 7942, column: 11, scope: !12767)
!12770 = !DILocation(line: 7942, column: 2, scope: !12767)
!12771 = !DILocation(line: 7945, column: 21, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7945, column: 11)
!12773 = !DILocation(line: 7945, column: 18, scope: !12772)
!12774 = !DILocation(line: 7945, column: 38, scope: !12772)
!12775 = !DILocation(line: 7945, column: 35, scope: !12772)
!12776 = !DILocation(line: 7945, column: 25, scope: !12772)
!12777 = !DILocation(line: 7948, column: 8, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 7946, column: 2)
!12779 = !DILocation(line: 7949, column: 8, scope: !12778)
!12780 = !DILocation(line: 7950, column: 2, scope: !12778)
!12781 = !DILocation(line: 7954, column: 13, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 7954, column: 11)
!12783 = !DILocation(line: 7954, column: 11, scope: !11997)
!12784 = !DILocation(line: 7955, column: 8, scope: !12782)
!12785 = !DILocation(line: 7955, column: 6, scope: !12782)
!12786 = !DILocation(line: 7955, column: 2, scope: !12782)
!12787 = !DILocation(line: 7959, column: 15, scope: !12070)
!12788 = !DILocation(line: 0, scope: !12070)
!12789 = !DILocation(line: 7961, column: 11, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 7961, column: 6)
!12791 = !DILocation(line: 0, scope: !12790)
!12792 = !DILocation(line: 7961, column: 6, scope: !12070)
!12793 = !DILocation(line: 7967, column: 13, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 7967, column: 6)
!12795 = !DILocation(line: 7967, column: 10, scope: !12794)
!12796 = !DILocation(line: 7967, column: 6, scope: !12070)
!12797 = !DILocation(line: 7973, column: 15, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12794, file: !3, line: 7968, column: 4)
!12799 = !DILocation(line: 7974, column: 10, scope: !12798)
!12800 = !DILocation(line: 7975, column: 26, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12798, file: !3, line: 7974, column: 10)
!12802 = !DILocation(line: 7975, column: 8, scope: !12801)
!12803 = !DILocation(line: 7977, column: 13, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 7977, column: 6)
!12805 = !DILocation(line: 7977, column: 10, scope: !12804)
!12806 = !DILocation(line: 7977, column: 25, scope: !12804)
!12807 = !DILocation(line: 7981, column: 15, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12804, file: !3, line: 7978, column: 4)
!12809 = !DILocation(line: 7982, column: 15, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12808, file: !3, line: 7982, column: 10)
!12811 = !DILocation(line: 7982, column: 10, scope: !12808)
!12812 = !DILocation(line: 7984, column: 4, scope: !12808)
!12813 = !DILocation(line: 7987, column: 6, scope: !12074)
!12814 = !DILocation(line: 7987, column: 6, scope: !12070)
!12815 = !DILocation(line: 7995, column: 6, scope: !12073)
!12816 = !DILocation(line: 7997, column: 6, scope: !12073)
!12817 = !DILocation(line: 8001, column: 8, scope: !12073)
!12818 = !DILocation(line: 8002, column: 13, scope: !12073)
!12819 = !DILocation(line: 8000, column: 13, scope: !12073)
!12820 = !DILocation(line: 0, scope: !12073)
!12821 = !DILocation(line: 8007, column: 10, scope: !12077)
!12822 = !DILocation(line: 8007, column: 10, scope: !12073)
!12823 = !DILocation(line: 8009, column: 13, scope: !12076)
!12824 = !DILocation(line: 0, scope: !12076)
!12825 = !DILocation(line: 8010, column: 3, scope: !12076)
!12826 = !DILocation(line: 8011, column: 3, scope: !12076)
!12827 = !DILocation(line: 8017, column: 6, scope: !12073)
!12828 = !DILocation(line: 8018, column: 4, scope: !12074)
!12829 = !DILocation(line: 8020, column: 16, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 8020, column: 6)
!12831 = !DILocation(line: 8020, column: 13, scope: !12830)
!12832 = !DILocation(line: 8020, column: 6, scope: !12070)
!12833 = !DILocation(line: 8021, column: 4, scope: !12830)
!12834 = !DILocation(line: 8023, column: 9, scope: !12070)
!12835 = !DILocation(line: 8024, column: 2, scope: !12070)
!12836 = !DILocation(line: 8027, column: 7, scope: !11997)
!12837 = !DILocation(line: 8028, column: 31, scope: !11997)
!12838 = !DILocation(line: 8028, column: 7, scope: !11997)
!12839 = !DILocation(line: 8029, column: 7, scope: !11997)
!12840 = !DILocation(line: 8030, column: 7, scope: !11997)
!12841 = !DILocation(line: 8033, column: 13, scope: !11997)
!12842 = !DILocation(line: 8033, column: 11, scope: !11997)
!12843 = !DILocation(line: 8035, column: 11, scope: !11997)
!12844 = !DILocation(line: 8037, column: 14, scope: !11997)
!12845 = !DILocation(line: 8038, column: 7, scope: !11997)
!12846 = !DILocation(line: 8055, column: 7, scope: !11997)
!12847 = !DILocation(line: 8060, column: 7, scope: !11997)
!12848 = !DILocation(line: 8065, column: 7, scope: !11997)
!12849 = !DILocation(line: 8071, column: 7, scope: !11997)
!12850 = !DILocation(line: 8081, column: 11, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8081, column: 11)
!12852 = !DILocation(line: 8081, column: 11, scope: !11997)
!12853 = !DILocation(line: 8084, column: 13, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8084, column: 11)
!12855 = !DILocation(line: 8084, column: 11, scope: !11997)
!12856 = !DILocation(line: 8086, column: 11, scope: !11997)
!12857 = !DILocation(line: 8088, column: 13, scope: !11997)
!12858 = !DILocation(line: 8088, column: 11, scope: !11997)
!12859 = !DILocation(line: 8090, column: 14, scope: !11997)
!12860 = !DILocation(line: 8092, column: 16, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8092, column: 11)
!12862 = !DILocation(line: 8092, column: 11, scope: !11997)
!12863 = !DILocation(line: 8093, column: 9, scope: !12861)
!12864 = !DILocation(line: 8113, column: 8, scope: !11997)
!12865 = !DILocation(line: 8114, column: 14, scope: !11997)
!12866 = !DILocation(line: 8114, column: 8, scope: !11997)
!12867 = !DILocation(line: 8112, column: 14, scope: !11997)
!12868 = !DILocation(line: 8115, column: 11, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8115, column: 11)
!12870 = !DILocation(line: 8115, column: 11, scope: !11997)
!12871 = !DILocation(line: 8121, column: 19, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8121, column: 11)
!12873 = !DILocation(line: 8122, column: 5, scope: !12872)
!12874 = !DILocation(line: 8123, column: 10, scope: !12872)
!12875 = !DILocation(line: 8124, column: 5, scope: !12872)
!12876 = !DILocation(line: 8124, column: 10, scope: !12872)
!12877 = !DILocation(line: 8127, column: 5, scope: !12872)
!12878 = !DILocation(line: 8127, column: 10, scope: !12872)
!12879 = !DILocation(line: 8127, column: 19, scope: !12872)
!12880 = !DILocation(line: 8127, column: 22, scope: !12872)
!12881 = !DILocation(line: 8128, column: 9, scope: !12872)
!12882 = !DILocation(line: 8128, column: 12, scope: !12872)
!12883 = !DILocation(line: 8128, column: 27, scope: !12872)
!12884 = !DILocation(line: 8121, column: 11, scope: !11997)
!12885 = !DILocation(line: 8129, column: 11, scope: !12872)
!12886 = !DILocation(line: 8129, column: 2, scope: !12872)
!12887 = !DILocation(line: 8131, column: 31, scope: !11997)
!12888 = !DILocation(line: 8131, column: 7, scope: !11997)
!12889 = !DILocation(line: 8133, column: 13, scope: !11997)
!12890 = !DILocation(line: 8133, column: 11, scope: !11997)
!12891 = !DILocation(line: 8134, column: 7, scope: !11997)
!12892 = !DILocation(line: 8136, column: 31, scope: !11997)
!12893 = !DILocation(line: 8136, column: 7, scope: !11997)
!12894 = !DILocation(line: 8138, column: 7, scope: !11997)
!12895 = !DILocation(line: 8139, column: 7, scope: !11997)
!12896 = !DILocation(line: 8142, column: 11, scope: !11997)
!12897 = !DILocation(line: 8144, column: 13, scope: !11997)
!12898 = !DILocation(line: 8144, column: 11, scope: !11997)
!12899 = !DILocation(line: 8148, column: 50, scope: !11997)
!12900 = !DILocation(line: 8148, column: 14, scope: !11997)
!12901 = !DILocation(line: 8150, column: 7, scope: !11997)
!12902 = !DILocation(line: 8155, column: 13, scope: !11997)
!12903 = !DILocation(line: 8155, column: 11, scope: !11997)
!12904 = !DILocation(line: 8156, column: 13, scope: !11997)
!12905 = !DILocation(line: 8156, column: 11, scope: !11997)
!12906 = !DILocation(line: 8158, column: 12, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8158, column: 11)
!12908 = !DILocation(line: 8158, column: 11, scope: !11997)
!12909 = !DILocation(line: 8159, column: 24, scope: !12907)
!12910 = !DILocation(line: 8159, column: 11, scope: !12907)
!12911 = !DILocation(line: 8159, column: 2, scope: !12907)
!12912 = !DILocation(line: 8162, column: 7, scope: !11997)
!12913 = !DILocation(line: 8163, column: 7, scope: !11997)
!12914 = !DILocation(line: 8165, column: 7, scope: !11997)
!12915 = !DILocation(line: 0, scope: !12079)
!12916 = !DILocation(line: 8172, column: 9, scope: !12079)
!12917 = !DILocation(line: 8173, column: 50, scope: !12079)
!12918 = !DILocation(line: 8173, column: 65, scope: !12079)
!12919 = !DILocation(line: 8173, column: 18, scope: !12079)
!12920 = !DILocation(line: 8182, column: 15, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8181, column: 7)
!12922 = !DILocation(line: 8182, column: 13, scope: !12921)
!12923 = !DILocation(line: 8183, column: 22, scope: !12921)
!12924 = !DILocation(line: 8184, column: 16, scope: !12921)
!12925 = !DILocation(line: 8185, column: 9, scope: !12921)
!12926 = !DILocation(line: 8192, column: 9, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8191, column: 7)
!12928 = !DILocation(line: 8194, column: 22, scope: !12927)
!12929 = !DILocation(line: 8195, column: 48, scope: !12927)
!12930 = !DILocation(line: 8195, column: 53, scope: !12927)
!12931 = !DILocation(line: 8195, column: 16, scope: !12927)
!12932 = !DILocation(line: 8197, column: 9, scope: !12927)
!12933 = !DILocation(line: 8204, column: 9, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8203, column: 7)
!12935 = !DILocation(line: 8206, column: 22, scope: !12934)
!12936 = !DILocation(line: 8207, column: 48, scope: !12934)
!12937 = !DILocation(line: 8207, column: 53, scope: !12934)
!12938 = !DILocation(line: 8207, column: 16, scope: !12934)
!12939 = !DILocation(line: 8209, column: 9, scope: !12934)
!12940 = !DILocation(line: 8216, column: 11, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8215, column: 7)
!12942 = !DILocation(line: 8217, column: 2, scope: !12941)
!12943 = !DILocation(line: 8223, column: 8, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8222, column: 7)
!12945 = !DILocation(line: 8223, column: 6, scope: !12944)
!12946 = !DILocation(line: 8224, column: 15, scope: !12944)
!12947 = !DILocation(line: 8225, column: 9, scope: !12944)
!12948 = !DILocation(line: 8227, column: 2, scope: !12944)
!12949 = !DILocation(line: 8234, column: 8, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !11997, file: !3, line: 8233, column: 7)
!12951 = !DILocation(line: 8234, column: 6, scope: !12950)
!12952 = !DILocation(line: 8237, column: 8, scope: !12950)
!12953 = !DILocation(line: 8236, column: 15, scope: !12950)
!12954 = !DILocation(line: 8241, column: 13, scope: !12950)
!12955 = !DILocation(line: 8239, column: 9, scope: !12950)
!12956 = !DILocation(line: 8243, column: 2, scope: !12950)
!12957 = !DILocation(line: 0, scope: !12082)
!12958 = !DILocation(line: 8253, column: 2, scope: !12082)
!12959 = !DILocation(line: 8254, column: 43, scope: !12082)
!12960 = !DILocation(line: 8254, column: 48, scope: !12082)
!12961 = !DILocation(line: 8254, column: 11, scope: !12082)
!12962 = !DILocation(line: 8256, column: 2, scope: !12082)
!12963 = !DILocation(line: 8263, column: 14, scope: !11997)
!12964 = !DILocation(line: 8267, column: 7, scope: !11997)
!12965 = !DILocation(line: 8268, column: 5, scope: !11997)
!12966 = !DILocation(line: 7212, column: 18, scope: !11962)
!12967 = !DILocation(line: 8271, column: 2, scope: !11962)
!12968 = !DILocation(line: 8272, column: 3, scope: !11962)
!12969 = !DILocation(line: 7229, column: 8, scope: !11962)
!12970 = !DILocation(line: 8274, column: 2, scope: !11962)
!12971 = !DILocation(line: 8275, column: 16, scope: !11962)
!12972 = !DILocation(line: 8275, column: 3, scope: !11962)
!12973 = !DILocation(line: 8276, column: 2, scope: !11962)
!12974 = !DILocation(line: 8277, column: 7, scope: !11962)
!12975 = !DILocation(line: 8279, column: 42, scope: !11962)
!12976 = !DILocation(line: 8279, column: 47, scope: !11962)
!12977 = !DILocation(line: 8279, column: 10, scope: !11962)
!12978 = !DILocation(line: 8281, column: 3, scope: !11962)
!12979 = !DILocation(line: 8282, column: 10, scope: !11962)
!12980 = !DILocation(line: 8283, column: 1, scope: !11962)
!12981 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !2102, file: !2102, line: 1686, type: !12982, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12984)
!12982 = !DISubroutineType(types: !12983)
!12983 = !{!2101, !141}
!12984 = !{!12985}
!12985 = !DILocalVariable(name: "code", arg: 1, scope: !12981, file: !2102, line: 1686, type: !141)
!12986 = !DILocation(line: 0, scope: !12981)
!12987 = !DILocation(line: 1688, column: 34, scope: !12981)
!12988 = !DILocation(line: 1688, column: 10, scope: !12981)
!12989 = !DILocation(line: 1688, column: 3, scope: !12981)
!12990 = distinct !DISubprogram(name: "reduce_to_bit_field_precision", scope: !3, file: !3, line: 9660, type: !6537, scopeLine: 9661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12991)
!12991 = !{!12992, !12993, !12994, !12995, !12996, !12999, !13000, !13003}
!12992 = !DILocalVariable(name: "exp", arg: 1, scope: !12990, file: !3, line: 9660, type: !2182)
!12993 = !DILocalVariable(name: "target", arg: 2, scope: !12990, file: !3, line: 9660, type: !2182)
!12994 = !DILocalVariable(name: "type", arg: 3, scope: !12990, file: !3, line: 9660, type: !2298)
!12995 = !DILocalVariable(name: "prec", scope: !12990, file: !3, line: 9662, type: !2269)
!12996 = !DILocalVariable(name: "value", scope: !12997, file: !3, line: 9668, type: !2269)
!12997 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 9667, column: 5)
!12998 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 9666, column: 7)
!12999 = !DILocalVariable(name: "t", scope: !12997, file: !3, line: 9669, type: !2298)
!13000 = !DILocalVariable(name: "mask", scope: !13001, file: !3, line: 9674, type: !2182)
!13001 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 9673, column: 5)
!13002 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 9672, column: 12)
!13003 = !DILocalVariable(name: "count", scope: !13004, file: !3, line: 9687, type: !2298)
!13004 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 9686, column: 5)
!13005 = !DILocation(line: 0, scope: !12990)
!13006 = !DILocation(line: 9662, column: 24, scope: !12990)
!13007 = !DILocation(line: 9663, column: 7, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 9663, column: 7)
!13009 = !DILocation(line: 9663, column: 14, scope: !13008)
!13010 = !DILocation(line: 0, scope: !12998)
!13011 = !DILocation(line: 9666, column: 7, scope: !12998)
!13012 = !DILocation(line: 9663, column: 17, scope: !13008)
!13013 = !DILocation(line: 9663, column: 38, scope: !13008)
!13014 = !DILocation(line: 9663, column: 35, scope: !13008)
!13015 = !DILocation(line: 9663, column: 7, scope: !12990)
!13016 = !DILocation(line: 9666, column: 7, scope: !12990)
!13017 = !DILocation(line: 9668, column: 29, scope: !12997)
!13018 = !DILocation(line: 0, scope: !12997)
!13019 = !DILocation(line: 9669, column: 16, scope: !12997)
!13020 = !DILocation(line: 9670, column: 14, scope: !12997)
!13021 = !DILocation(line: 9672, column: 12, scope: !13002)
!13022 = !DILocation(line: 9672, column: 12, scope: !12998)
!13023 = !DILocation(line: 9675, column: 16, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13001, file: !3, line: 9675, column: 11)
!13025 = !DILocation(line: 9675, column: 11, scope: !13001)
!13026 = !DILocation(line: 9676, column: 66, scope: !13024)
!13027 = !DILocation(line: 9677, column: 8, scope: !13024)
!13028 = !DILocation(line: 9676, column: 9, scope: !13024)
!13029 = !DILocation(line: 0, scope: !13001)
!13030 = !DILocation(line: 9676, column: 2, scope: !13024)
!13031 = !DILocation(line: 9681, column: 18, scope: !13024)
!13032 = !DILocation(line: 9681, column: 45, scope: !13024)
!13033 = !DILocation(line: 9682, column: 8, scope: !13024)
!13034 = !DILocation(line: 9679, column: 9, scope: !13024)
!13035 = !DILocation(line: 0, scope: !13024)
!13036 = !DILocation(line: 9683, column: 26, scope: !13001)
!13037 = !DILocation(line: 9683, column: 14, scope: !13001)
!13038 = !DILocation(line: 9688, column: 7, scope: !13004)
!13039 = !DILocation(line: 9688, column: 41, scope: !13004)
!13040 = !DILocation(line: 9687, column: 20, scope: !13004)
!13041 = !DILocation(line: 0, scope: !13004)
!13042 = !DILocation(line: 9689, column: 40, scope: !13004)
!13043 = !DILocation(line: 9689, column: 13, scope: !13004)
!13044 = !DILocation(line: 9690, column: 41, scope: !13004)
!13045 = !DILocation(line: 9690, column: 14, scope: !13004)
!13046 = !DILocation(line: 9692, column: 1, scope: !12990)
!13047 = distinct !DISubprogram(name: "get_def_for_expr", scope: !3, file: !3, line: 2276, type: !13048, scopeLine: 2277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13050)
!13048 = !DISubroutineType(types: !13049)
!13049 = !{!2762, !2298, !141}
!13050 = !{!13051, !13052, !13053}
!13051 = !DILocalVariable(name: "name", arg: 1, scope: !13047, file: !3, line: 2276, type: !2298)
!13052 = !DILocalVariable(name: "code", arg: 2, scope: !13047, file: !3, line: 2276, type: !141)
!13053 = !DILocalVariable(name: "def_stmt", scope: !13047, file: !3, line: 2278, type: !2762)
!13054 = !DILocation(line: 0, scope: !13047)
!13055 = !DILocation(line: 2280, column: 7, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 2280, column: 7)
!13057 = !DILocation(line: 2280, column: 24, scope: !13056)
!13058 = !DILocation(line: 2280, column: 7, scope: !13047)
!13059 = !DILocation(line: 2283, column: 14, scope: !13047)
!13060 = !DILocation(line: 2284, column: 8, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 2284, column: 7)
!13062 = !DILocation(line: 2285, column: 7, scope: !13061)
!13063 = !DILocation(line: 2285, column: 10, scope: !13061)
!13064 = !DILocation(line: 2285, column: 44, scope: !13061)
!13065 = !DILocation(line: 2284, column: 7, scope: !13047)
!13066 = !DILocation(line: 2289, column: 1, scope: !13047)
!13067 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !2102, file: !2102, line: 1727, type: !13068, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13071)
!13068 = !DISubroutineType(types: !13069)
!13069 = !{!2298, !13070}
!13070 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !2183, line: 60, baseType: !3611)
!13071 = !{!13072}
!13072 = !DILocalVariable(name: "gs", arg: 1, scope: !13067, file: !2102, line: 1727, type: !13070)
!13073 = !DILocation(line: 0, scope: !13067)
!13074 = !DILocation(line: 1730, column: 10, scope: !13067)
!13075 = !DILocation(line: 1730, column: 3, scope: !13067)
!13076 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !2102, file: !2102, line: 1759, type: !13068, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13077)
!13077 = !{!13078}
!13078 = !DILocalVariable(name: "gs", arg: 1, scope: !13076, file: !2102, line: 1759, type: !13070)
!13079 = !DILocation(line: 0, scope: !13076)
!13080 = !DILocation(line: 1763, column: 7, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13076, file: !2102, line: 1763, column: 7)
!13082 = !DILocation(line: 1763, column: 27, scope: !13081)
!13083 = !DILocation(line: 1763, column: 7, scope: !13076)
!13084 = !DILocation(line: 1764, column: 12, scope: !13081)
!13085 = !DILocation(line: 1764, column: 5, scope: !13081)
!13086 = !DILocation(line: 0, scope: !13081)
!13087 = !DILocation(line: 1767, column: 1, scope: !13076)
!13088 = distinct !DISubprogram(name: "expand_operands", scope: !3, file: !3, line: 6784, type: !13089, scopeLine: 6786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13091)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{null, !2298, !2298, !2182, !3606, !3606, !2087}
!13091 = !{!13092, !13093, !13094, !13095, !13096, !13097}
!13092 = !DILocalVariable(name: "exp0", arg: 1, scope: !13088, file: !3, line: 6784, type: !2298)
!13093 = !DILocalVariable(name: "exp1", arg: 2, scope: !13088, file: !3, line: 6784, type: !2298)
!13094 = !DILocalVariable(name: "target", arg: 3, scope: !13088, file: !3, line: 6784, type: !2182)
!13095 = !DILocalVariable(name: "op0", arg: 4, scope: !13088, file: !3, line: 6784, type: !3606)
!13096 = !DILocalVariable(name: "op1", arg: 5, scope: !13088, file: !3, line: 6784, type: !3606)
!13097 = !DILocalVariable(name: "modifier", arg: 6, scope: !13088, file: !3, line: 6785, type: !2087)
!13098 = !DILocation(line: 0, scope: !13088)
!13099 = !DILocation(line: 6787, column: 9, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 6787, column: 7)
!13101 = !DILocation(line: 6787, column: 7, scope: !13088)
!13102 = !DILocation(line: 6789, column: 7, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 6789, column: 7)
!13104 = !DILocation(line: 6789, column: 7, scope: !13088)
!13105 = !DILocation(line: 6791, column: 14, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13103, file: !3, line: 6790, column: 5)
!13107 = !DILocation(line: 6791, column: 12, scope: !13106)
!13108 = !DILocation(line: 6792, column: 14, scope: !13106)
!13109 = !DILocation(line: 6793, column: 5, scope: !13106)
!13110 = !DILocation(line: 6798, column: 11, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 6798, column: 11)
!13112 = distinct !DILexicalBlock(scope: !13103, file: !3, line: 6795, column: 5)
!13113 = !DILocation(line: 6798, column: 33, scope: !13111)
!13114 = !DILocation(line: 6798, column: 36, scope: !13111)
!13115 = !DILocation(line: 6798, column: 11, scope: !13112)
!13116 = !DILocation(line: 6799, column: 9, scope: !13111)
!13117 = !DILocation(line: 6799, column: 2, scope: !13111)
!13118 = !DILocation(line: 6800, column: 14, scope: !13112)
!13119 = !DILocation(line: 6800, column: 12, scope: !13112)
!13120 = !DILocation(line: 6801, column: 14, scope: !13112)
!13121 = !DILocation(line: 0, scope: !13103)
!13122 = !DILocation(line: 6803, column: 1, scope: !13088)
!13123 = distinct !DISubprogram(name: "do_store_flag", scope: !3, file: !3, line: 9872, type: !13124, scopeLine: 9873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13126)
!13124 = !DISubroutineType(types: !13125)
!13125 = !{!2182, !11965, !2182, !5}
!13126 = !{!13127, !13128, !13129, !13130, !13131, !13132, !13133, !13134, !13135, !13136, !13137, !13138, !13139, !13140, !13141}
!13127 = !DILocalVariable(name: "ops", arg: 1, scope: !13123, file: !3, line: 9872, type: !11965)
!13128 = !DILocalVariable(name: "target", arg: 2, scope: !13123, file: !3, line: 9872, type: !2182)
!13129 = !DILocalVariable(name: "mode", arg: 3, scope: !13123, file: !3, line: 9872, type: !5)
!13130 = !DILocalVariable(name: "code", scope: !13123, file: !3, line: 9874, type: !1898)
!13131 = !DILocalVariable(name: "arg0", scope: !13123, file: !3, line: 9875, type: !2298)
!13132 = !DILocalVariable(name: "arg1", scope: !13123, file: !3, line: 9875, type: !2298)
!13133 = !DILocalVariable(name: "type", scope: !13123, file: !3, line: 9875, type: !2298)
!13134 = !DILocalVariable(name: "tem", scope: !13123, file: !3, line: 9876, type: !2298)
!13135 = !DILocalVariable(name: "operand_mode", scope: !13123, file: !3, line: 9877, type: !5)
!13136 = !DILocalVariable(name: "unsignedp", scope: !13123, file: !3, line: 9878, type: !2175)
!13137 = !DILocalVariable(name: "op0", scope: !13123, file: !3, line: 9879, type: !2182)
!13138 = !DILocalVariable(name: "op1", scope: !13123, file: !3, line: 9879, type: !2182)
!13139 = !DILocalVariable(name: "subtarget", scope: !13123, file: !3, line: 9880, type: !2182)
!13140 = !DILocalVariable(name: "loc", scope: !13123, file: !3, line: 9881, type: !2418)
!13141 = !DILocalVariable(name: "type", scope: !13142, file: !3, line: 10005, type: !2298)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 10004, column: 5)
!13143 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 10001, column: 7)
!13144 = !DILocation(line: 0, scope: !13123)
!13145 = !DILocation(line: 9879, column: 3, scope: !13123)
!13146 = !DILocation(line: 9881, column: 25, scope: !13123)
!13147 = !DILocation(line: 9883, column: 15, scope: !13123)
!13148 = !DILocation(line: 9884, column: 15, scope: !13123)
!13149 = !DILocation(line: 9887, column: 15, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 9887, column: 7)
!13151 = !DILocation(line: 9887, column: 12, scope: !13150)
!13152 = !DILocation(line: 9887, column: 39, scope: !13150)
!13153 = !DILocation(line: 9887, column: 31, scope: !13150)
!13154 = !DILocation(line: 9888, column: 12, scope: !13150)
!13155 = !DILocation(line: 9888, column: 5, scope: !13150)
!13156 = !DILocation(line: 9890, column: 10, scope: !13123)
!13157 = !DILocation(line: 9891, column: 18, scope: !13123)
!13158 = !DILocation(line: 9892, column: 15, scope: !13123)
!13159 = !DILocation(line: 9896, column: 20, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 9896, column: 7)
!13161 = !DILocation(line: 9896, column: 7, scope: !13123)
!13162 = !DILocation(line: 9912, column: 3, scope: !13123)
!13163 = !DILocation(line: 9913, column: 3, scope: !13123)
!13164 = !DILocation(line: 9922, column: 16, scope: !13123)
!13165 = !DILocation(line: 9922, column: 3, scope: !13123)
!13166 = !DILocation(line: 9929, column: 7, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 9923, column: 5)
!13168 = !DILocation(line: 9931, column: 11, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 9931, column: 11)
!13170 = !DILocation(line: 9931, column: 11, scope: !13167)
!13171 = !DILocation(line: 9932, column: 9, scope: !13169)
!13172 = !DILocation(line: 9932, column: 35, scope: !13169)
!13173 = !DILocation(line: 9932, column: 2, scope: !13169)
!13174 = !DILocation(line: 9934, column: 9, scope: !13169)
!13175 = !DILocation(line: 9937, column: 13, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 9937, column: 11)
!13177 = !DILocation(line: 9937, column: 23, scope: !13176)
!13178 = !DILocation(line: 9937, column: 26, scope: !13176)
!13179 = !DILocation(line: 9937, column: 11, scope: !13167)
!13180 = !DILocation(line: 9938, column: 9, scope: !13176)
!13181 = !DILocation(line: 9938, column: 2, scope: !13176)
!13182 = !DILocation(line: 9940, column: 9, scope: !13176)
!13183 = !DILocation(line: 9943, column: 13, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 9943, column: 11)
!13185 = !DILocation(line: 9943, column: 23, scope: !13184)
!13186 = !DILocation(line: 9943, column: 26, scope: !13184)
!13187 = !DILocation(line: 9943, column: 11, scope: !13167)
!13188 = !DILocation(line: 9944, column: 9, scope: !13184)
!13189 = !DILocation(line: 9944, column: 2, scope: !13184)
!13190 = !DILocation(line: 9946, column: 9, scope: !13184)
!13191 = !DILocation(line: 9949, column: 11, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 9949, column: 11)
!13193 = !DILocation(line: 9949, column: 11, scope: !13167)
!13194 = !DILocation(line: 9950, column: 9, scope: !13192)
!13195 = !DILocation(line: 9950, column: 35, scope: !13192)
!13196 = !DILocation(line: 9950, column: 2, scope: !13192)
!13197 = !DILocation(line: 9952, column: 9, scope: !13192)
!13198 = !DILocation(line: 9957, column: 7, scope: !13167)
!13199 = !DILocation(line: 9960, column: 7, scope: !13167)
!13200 = !DILocation(line: 9963, column: 7, scope: !13167)
!13201 = !DILocation(line: 9966, column: 7, scope: !13167)
!13202 = !DILocation(line: 9969, column: 7, scope: !13167)
!13203 = !DILocation(line: 9972, column: 7, scope: !13167)
!13204 = !DILocation(line: 9975, column: 7, scope: !13167)
!13205 = !DILocation(line: 9978, column: 7, scope: !13167)
!13206 = !DILocation(line: 9981, column: 7, scope: !13167)
!13207 = !DILocation(line: 9982, column: 5, scope: !13167)
!13208 = !DILocation(line: 9985, column: 7, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 9985, column: 7)
!13210 = !DILocation(line: 9985, column: 24, scope: !13209)
!13211 = !DILocation(line: 9985, column: 36, scope: !13209)
!13212 = !DILocation(line: 9985, column: 56, scope: !13209)
!13213 = !DILocation(line: 9986, column: 7, scope: !13209)
!13214 = !DILocation(line: 9986, column: 27, scope: !13209)
!13215 = !DILocation(line: 9985, column: 7, scope: !13123)
!13216 = !DILocation(line: 9989, column: 14, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 9987, column: 5)
!13218 = !DILocation(line: 9990, column: 5, scope: !13217)
!13219 = !DILocation(line: 10001, column: 19, scope: !13143)
!13220 = !DILocation(line: 10002, column: 10, scope: !13143)
!13221 = !DILocation(line: 10002, column: 27, scope: !13143)
!13222 = !DILocation(line: 10002, column: 43, scope: !13143)
!13223 = !DILocation(line: 10002, column: 46, scope: !13143)
!13224 = !DILocation(line: 10003, column: 7, scope: !13143)
!13225 = !DILocation(line: 10003, column: 25, scope: !13143)
!13226 = !DILocation(line: 10003, column: 10, scope: !13143)
!13227 = !DILocation(line: 10001, column: 7, scope: !13123)
!13228 = !DILocation(line: 10005, column: 36, scope: !13142)
!13229 = !DILocation(line: 10005, column: 19, scope: !13142)
!13230 = !DILocation(line: 0, scope: !13142)
!13231 = !DILocation(line: 10007, column: 12, scope: !13142)
!13232 = !DILocation(line: 10007, column: 7, scope: !13142)
!13233 = !DILocation(line: 10006, column: 27, scope: !13142)
!13234 = !DILocation(line: 10006, column: 14, scope: !13142)
!13235 = !DILocation(line: 10012, column: 9, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 10012, column: 7)
!13237 = !DILocation(line: 10013, column: 7, scope: !13236)
!13238 = !DILocation(line: 10013, column: 10, scope: !13236)
!13239 = !DILocation(line: 10013, column: 31, scope: !13236)
!13240 = !DILocation(line: 10012, column: 7, scope: !13123)
!13241 = !DILocation(line: 10014, column: 5, scope: !13236)
!13242 = !DILocation(line: 10016, column: 3, scope: !13123)
!13243 = !DILocation(line: 10018, column: 14, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 10018, column: 7)
!13245 = !DILocation(line: 10018, column: 7, scope: !13123)
!13246 = !DILocation(line: 10019, column: 14, scope: !13244)
!13247 = !DILocation(line: 10019, column: 5, scope: !13244)
!13248 = !DILocation(line: 10022, column: 47, scope: !13123)
!13249 = !DILocation(line: 10022, column: 52, scope: !13123)
!13250 = !DILocation(line: 10022, column: 10, scope: !13123)
!13251 = !DILocation(line: 10022, column: 3, scope: !13123)
!13252 = !DILocation(line: 10024, column: 1, scope: !13123)
!13253 = distinct !DISubprogram(name: "get_gimple_for_ssa_name", scope: !13254, file: !13254, line: 66, type: !13255, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13257)
!13254 = !DIFile(filename: "./ssaexpand.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!13255 = !DISubroutineType(types: !13256)
!13256 = !{!2762, !2298}
!13257 = !{!13258, !13259}
!13258 = !DILocalVariable(name: "exp", arg: 1, scope: !13253, file: !13254, line: 66, type: !2298)
!13259 = !DILocalVariable(name: "v", scope: !13253, file: !13254, line: 68, type: !2175)
!13260 = !DILocation(line: 0, scope: !13253)
!13261 = !DILocation(line: 69, column: 10, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13253, file: !13254, line: 69, column: 7)
!13263 = !DILocation(line: 69, column: 7, scope: !13262)
!13264 = !DILocation(line: 69, column: 17, scope: !13262)
!13265 = !DILocation(line: 68, column: 11, scope: !13253)
!13266 = !DILocation(line: 69, column: 20, scope: !13262)
!13267 = !DILocation(line: 69, column: 7, scope: !13253)
!13268 = !DILocation(line: 70, column: 12, scope: !13262)
!13269 = !DILocation(line: 70, column: 5, scope: !13262)
!13270 = !DILocation(line: 72, column: 1, scope: !13253)
!13271 = distinct !DISubprogram(name: "get_rtx_for_ssa_name", scope: !13254, file: !13254, line: 54, type: !5728, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13272)
!13272 = !{!13273, !13274}
!13273 = !DILocalVariable(name: "exp", arg: 1, scope: !13271, file: !13254, line: 54, type: !2298)
!13274 = !DILocalVariable(name: "p", scope: !13271, file: !13254, line: 56, type: !2175)
!13275 = !DILocation(line: 0, scope: !13271)
!13276 = !DILocation(line: 56, column: 11, scope: !13271)
!13277 = !DILocation(line: 57, column: 15, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13271, file: !13254, line: 57, column: 7)
!13279 = !DILocation(line: 57, column: 7, scope: !13278)
!13280 = !DILocation(line: 57, column: 7, scope: !13271)
!13281 = !DILocation(line: 58, column: 9, scope: !13278)
!13282 = !DILocation(line: 58, column: 5, scope: !13278)
!13283 = !DILocation(line: 59, column: 3, scope: !13271)
!13284 = !DILocation(line: 60, column: 13, scope: !13271)
!13285 = !DILocation(line: 60, column: 10, scope: !13271)
!13286 = !DILocation(line: 60, column: 3, scope: !13271)
!13287 = distinct !DISubprogram(name: "emutls_var_address", scope: !3, file: !3, line: 6767, type: !10063, scopeLine: 6768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13288)
!13288 = !{!13289, !13290, !13291, !13292, !13293, !13294}
!13289 = !DILocalVariable(name: "var", arg: 1, scope: !13287, file: !3, line: 6767, type: !2298)
!13290 = !DILocalVariable(name: "emuvar", scope: !13287, file: !3, line: 6769, type: !2298)
!13291 = !DILocalVariable(name: "fn", scope: !13287, file: !3, line: 6770, type: !2298)
!13292 = !DILocalVariable(name: "arg", scope: !13287, file: !3, line: 6771, type: !2298)
!13293 = !DILocalVariable(name: "arglist", scope: !13287, file: !3, line: 6772, type: !2298)
!13294 = !DILocalVariable(name: "call", scope: !13287, file: !3, line: 6773, type: !2298)
!13295 = !DILocation(line: 0, scope: !13287)
!13296 = !DILocation(line: 6769, column: 17, scope: !13287)
!13297 = !DILocation(line: 6770, column: 13, scope: !13287)
!13298 = !DILocation(line: 6771, column: 14, scope: !13287)
!13299 = !DILocation(line: 6772, column: 18, scope: !13287)
!13300 = !DILocation(line: 6773, column: 15, scope: !13287)
!13301 = !DILocation(line: 6774, column: 10, scope: !13287)
!13302 = !DILocation(line: 6774, column: 3, scope: !13287)
!13303 = distinct !DISubprogram(name: "const_vector_from_tree", scope: !3, file: !3, line: 10244, type: !5728, scopeLine: 10245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13304)
!13304 = !{!13305, !13306, !13307, !13308, !13309, !13310, !13311, !13312}
!13305 = !DILocalVariable(name: "exp", arg: 1, scope: !13303, file: !3, line: 10244, type: !2298)
!13306 = !DILocalVariable(name: "v", scope: !13303, file: !3, line: 10246, type: !2210)
!13307 = !DILocalVariable(name: "units", scope: !13303, file: !3, line: 10247, type: !2175)
!13308 = !DILocalVariable(name: "i", scope: !13303, file: !3, line: 10247, type: !2175)
!13309 = !DILocalVariable(name: "link", scope: !13303, file: !3, line: 10248, type: !2298)
!13310 = !DILocalVariable(name: "elt", scope: !13303, file: !3, line: 10248, type: !2298)
!13311 = !DILocalVariable(name: "inner", scope: !13303, file: !3, line: 10249, type: !5)
!13312 = !DILocalVariable(name: "mode", scope: !13303, file: !3, line: 10249, type: !5)
!13313 = !DILocation(line: 0, scope: !13303)
!13314 = !DILocation(line: 10251, column: 10, scope: !13303)
!13315 = !DILocation(line: 10253, column: 7, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13303, file: !3, line: 10253, column: 7)
!13317 = !DILocation(line: 10253, column: 7, scope: !13303)
!13318 = !DILocation(line: 10254, column: 12, scope: !13316)
!13319 = !DILocation(line: 10254, column: 5, scope: !13316)
!13320 = !DILocation(line: 10256, column: 11, scope: !13303)
!13321 = !DILocation(line: 10257, column: 11, scope: !13303)
!13322 = !DILocation(line: 10259, column: 7, scope: !13303)
!13323 = !DILocation(line: 10261, column: 10, scope: !13303)
!13324 = !DILocation(line: 10262, column: 8, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13303, file: !3, line: 10262, column: 3)
!13326 = !DILocation(line: 0, scope: !13325)
!13327 = !DILocation(line: 10262, column: 3, scope: !13325)
!13328 = !DILocation(line: 0, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13330, file: !3, line: 10279, column: 3)
!13330 = distinct !DILexicalBlock(scope: !13303, file: !3, line: 10279, column: 3)
!13331 = !DILocation(line: 10279, column: 3, scope: !13330)
!13332 = !DILocation(line: 10264, column: 13, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !3, line: 10263, column: 5)
!13334 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 10262, column: 3)
!13335 = !DILocation(line: 10266, column: 11, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 10266, column: 11)
!13337 = !DILocation(line: 10266, column: 27, scope: !13336)
!13338 = !DILocation(line: 10266, column: 11, scope: !13333)
!13339 = !DILocation(line: 10267, column: 21, scope: !13336)
!13340 = !DILocation(line: 10267, column: 2, scope: !13336)
!13341 = !DILocation(line: 10267, column: 19, scope: !13336)
!13342 = !DILocation(line: 10269, column: 32, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13336, file: !3, line: 10269, column: 16)
!13344 = !DILocation(line: 10269, column: 16, scope: !13336)
!13345 = !DILocation(line: 10270, column: 21, scope: !13343)
!13346 = !DILocation(line: 10270, column: 2, scope: !13343)
!13347 = !DILocation(line: 10270, column: 19, scope: !13343)
!13348 = !DILocation(line: 10273, column: 41, scope: !13343)
!13349 = !DILocation(line: 10274, column: 13, scope: !13343)
!13350 = !DILocation(line: 10273, column: 21, scope: !13343)
!13351 = !DILocation(line: 10273, column: 2, scope: !13343)
!13352 = !DILocation(line: 10273, column: 19, scope: !13343)
!13353 = !DILocation(line: 10262, column: 28, scope: !13334)
!13354 = !DILocation(line: 10262, column: 47, scope: !13334)
!13355 = !DILocation(line: 10262, column: 3, scope: !13334)
!13356 = distinct !{!13356, !13327, !13357}
!13357 = !DILocation(line: 10276, column: 5, scope: !13325)
!13358 = !DILocation(line: 10279, column: 12, scope: !13329)
!13359 = !DILocation(line: 10280, column: 24, scope: !13329)
!13360 = !DILocation(line: 10280, column: 5, scope: !13329)
!13361 = !DILocation(line: 10280, column: 22, scope: !13329)
!13362 = !DILocation(line: 10279, column: 21, scope: !13329)
!13363 = !DILocation(line: 10279, column: 3, scope: !13329)
!13364 = distinct !{!13364, !13331, !13365}
!13365 = !DILocation(line: 10280, column: 24, scope: !13330)
!13366 = !DILocation(line: 10282, column: 10, scope: !13303)
!13367 = !DILocation(line: 10282, column: 3, scope: !13303)
!13368 = !DILocation(line: 10283, column: 1, scope: !13303)
!13369 = distinct !DISubprogram(name: "expand_expr_constant", scope: !3, file: !3, line: 6810, type: !13370, scopeLine: 6811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13372)
!13370 = !DISubroutineType(types: !13371)
!13371 = !{!2182, !2298, !2175, !2087}
!13372 = !{!13373, !13374, !13375, !13376}
!13373 = !DILocalVariable(name: "exp", arg: 1, scope: !13369, file: !3, line: 6810, type: !2298)
!13374 = !DILocalVariable(name: "defer", arg: 2, scope: !13369, file: !3, line: 6810, type: !2175)
!13375 = !DILocalVariable(name: "modifier", arg: 3, scope: !13369, file: !3, line: 6810, type: !2087)
!13376 = !DILocalVariable(name: "mem", scope: !13369, file: !3, line: 6812, type: !2182)
!13377 = !DILocation(line: 0, scope: !13369)
!13378 = !DILocation(line: 6814, column: 9, scope: !13369)
!13379 = !DILocation(line: 6815, column: 16, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13369, file: !3, line: 6815, column: 7)
!13381 = !DILocation(line: 6815, column: 7, scope: !13369)
!13382 = !DILocation(line: 6816, column: 11, scope: !13380)
!13383 = !DILocation(line: 6816, column: 5, scope: !13380)
!13384 = !DILocation(line: 6817, column: 3, scope: !13369)
!13385 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !142, file: !142, line: 1537, type: !13386, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13390)
!13386 = !DISubroutineType(types: !13387)
!13387 = !{!7, !13388}
!13388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13389, size: 64)
!13389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3301)
!13390 = !{!13391}
!13391 = !DILocalVariable(name: "vec_", arg: 1, scope: !13385, file: !142, line: 1537, type: !13388)
!13392 = !DILocation(line: 0, scope: !13385)
!13393 = !DILocation(line: 1537, column: 1, scope: !13385)
!13394 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !142, file: !142, line: 1537, type: !13395, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13397)
!13395 = !DISubroutineType(types: !13396)
!13396 = !{!10211, !10428, !7}
!13397 = !{!13398, !13399}
!13398 = !DILocalVariable(name: "vec_", arg: 1, scope: !13394, file: !142, line: 1537, type: !10428)
!13399 = !DILocalVariable(name: "ix_", arg: 2, scope: !13394, file: !142, line: 1537, type: !7)
!13400 = !DILocation(line: 0, scope: !13394)
!13401 = !DILocation(line: 1537, column: 1, scope: !13394)
!13402 = distinct !DISubprogram(name: "expand_constructor", scope: !3, file: !3, line: 7031, type: !13403, scopeLine: 7033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13405)
!13403 = !DISubroutineType(types: !13404)
!13404 = !{!2182, !2298, !2182, !2087, !2174}
!13405 = !{!13406, !13407, !13408, !13409, !13410, !13411, !13412}
!13406 = !DILocalVariable(name: "exp", arg: 1, scope: !13402, file: !3, line: 7031, type: !2298)
!13407 = !DILocalVariable(name: "target", arg: 2, scope: !13402, file: !3, line: 7031, type: !2182)
!13408 = !DILocalVariable(name: "modifier", arg: 3, scope: !13402, file: !3, line: 7031, type: !2087)
!13409 = !DILocalVariable(name: "avoid_temp_mem", arg: 4, scope: !13402, file: !3, line: 7032, type: !2174)
!13410 = !DILocalVariable(name: "type", scope: !13402, file: !3, line: 7034, type: !2298)
!13411 = !DILocalVariable(name: "mode", scope: !13402, file: !3, line: 7035, type: !5)
!13412 = !DILocalVariable(name: "constructor", scope: !13413, file: !3, line: 7074, type: !2182)
!13413 = distinct !DILexicalBlock(scope: !13414, file: !3, line: 7073, column: 5)
!13414 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 7062, column: 7)
!13415 = !DILocation(line: 0, scope: !13402)
!13416 = !DILocation(line: 7034, column: 15, scope: !13402)
!13417 = !DILocation(line: 7035, column: 28, scope: !13402)
!13418 = !DILocation(line: 7041, column: 7, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 7041, column: 7)
!13420 = !DILocation(line: 7042, column: 7, scope: !13419)
!13421 = !DILocation(line: 7042, column: 11, scope: !13419)
!13422 = !DILocation(line: 7043, column: 17, scope: !13419)
!13423 = !DILocation(line: 7043, column: 7, scope: !13419)
!13424 = !DILocation(line: 7043, column: 30, scope: !13419)
!13425 = !DILocation(line: 7044, column: 10, scope: !13419)
!13426 = !DILocation(line: 7041, column: 7, scope: !13402)
!13427 = !DILocation(line: 7062, column: 8, scope: !13414)
!13428 = !DILocation(line: 7046, column: 30, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13419, file: !3, line: 7045, column: 5)
!13430 = !DILocation(line: 7046, column: 7, scope: !13429)
!13431 = !DILocation(line: 7047, column: 7, scope: !13429)
!13432 = !DILocation(line: 7063, column: 8, scope: !13414)
!13433 = !DILocation(line: 7063, column: 18, scope: !13414)
!13434 = !DILocation(line: 7064, column: 6, scope: !13414)
!13435 = !DILocation(line: 7064, column: 19, scope: !13414)
!13436 = !DILocation(line: 7064, column: 24, scope: !13414)
!13437 = !DILocation(line: 7064, column: 27, scope: !13414)
!13438 = !DILocation(line: 7065, column: 5, scope: !13414)
!13439 = !DILocation(line: 7065, column: 8, scope: !13414)
!13440 = !DILocation(line: 7066, column: 5, scope: !13414)
!13441 = !DILocation(line: 7066, column: 24, scope: !13414)
!13442 = !DILocation(line: 7066, column: 9, scope: !13414)
!13443 = !DILocation(line: 7067, column: 9, scope: !13414)
!13444 = !DILocation(line: 7067, column: 15, scope: !13414)
!13445 = !DILocation(line: 7070, column: 9, scope: !13414)
!13446 = !DILocation(line: 7070, column: 14, scope: !13414)
!13447 = !DILocation(line: 7071, column: 7, scope: !13414)
!13448 = !DILocation(line: 7071, column: 43, scope: !13414)
!13449 = !DILocation(line: 7072, column: 7, scope: !13414)
!13450 = !DILocation(line: 7062, column: 7, scope: !13402)
!13451 = !DILocation(line: 7076, column: 11, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13413, file: !3, line: 7076, column: 11)
!13453 = !DILocation(line: 7076, column: 11, scope: !13413)
!13454 = !DILocation(line: 7079, column: 21, scope: !13413)
!13455 = !DILocation(line: 0, scope: !13413)
!13456 = !DILocation(line: 7082, column: 4, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13413, file: !3, line: 7081, column: 11)
!13458 = !DILocation(line: 7084, column: 16, scope: !13457)
!13459 = !DILocation(line: 7084, column: 2, scope: !13457)
!13460 = !DILocation(line: 7091, column: 14, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 7091, column: 7)
!13462 = !DILocation(line: 7091, column: 19, scope: !13461)
!13463 = !DILocation(line: 7091, column: 24, scope: !13461)
!13464 = !DILocation(line: 7092, column: 7, scope: !13461)
!13465 = !DILocation(line: 7092, column: 10, scope: !13461)
!13466 = !DILocation(line: 7092, column: 28, scope: !13461)
!13467 = !DILocation(line: 7092, column: 52, scope: !13461)
!13468 = !DILocation(line: 7092, column: 40, scope: !13461)
!13469 = !DILocation(line: 7094, column: 11, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 7094, column: 11)
!13471 = distinct !DILexicalBlock(scope: !13461, file: !3, line: 7093, column: 5)
!13472 = !DILocation(line: 7094, column: 11, scope: !13471)
!13473 = !DILocation(line: 7098, column: 46, scope: !13471)
!13474 = !DILocation(line: 7099, column: 14, scope: !13471)
!13475 = !DILocation(line: 7099, column: 11, scope: !13471)
!13476 = !DILocation(line: 7098, column: 17, scope: !13471)
!13477 = !DILocation(line: 7101, column: 13, scope: !13471)
!13478 = !DILocation(line: 7098, column: 4, scope: !13471)
!13479 = !DILocation(line: 7102, column: 5, scope: !13471)
!13480 = !DILocation(line: 7104, column: 38, scope: !13402)
!13481 = !DILocation(line: 7104, column: 3, scope: !13402)
!13482 = !DILocation(line: 7105, column: 3, scope: !13402)
!13483 = !DILocation(line: 7106, column: 1, scope: !13402)
!13484 = distinct !DISubprogram(name: "is_aligning_offset", scope: !3, file: !3, line: 9699, type: !13485, scopeLine: 9700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13487)
!13485 = !DISubroutineType(types: !13486)
!13486 = !{!2175, !8575, !8575}
!13487 = !{!13488, !13489}
!13488 = !DILocalVariable(name: "offset", arg: 1, scope: !13484, file: !3, line: 9699, type: !8575)
!13489 = !DILocalVariable(name: "exp", arg: 2, scope: !13484, file: !3, line: 9699, type: !8575)
!13490 = !DILocation(line: 0, scope: !13484)
!13491 = !DILocation(line: 9702, column: 3, scope: !13484)
!13492 = !DILocation(line: 9702, column: 10, scope: !13484)
!13493 = !DILocation(line: 9703, column: 14, scope: !13484)
!13494 = distinct !{!13494, !13491, !13493}
!13495 = !DILocation(line: 9707, column: 26, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13484, file: !3, line: 9707, column: 7)
!13497 = !DILocation(line: 9708, column: 7, scope: !13496)
!13498 = !DILocation(line: 9708, column: 26, scope: !13496)
!13499 = !DILocation(line: 9708, column: 11, scope: !13496)
!13500 = !DILocation(line: 9709, column: 7, scope: !13496)
!13501 = !DILocation(line: 9709, column: 28, scope: !13496)
!13502 = !DILocation(line: 9710, column: 7, scope: !13496)
!13503 = !DILocation(line: 9710, column: 25, scope: !13496)
!13504 = !DILocation(line: 9709, column: 10, scope: !13496)
!13505 = !DILocation(line: 9710, column: 42, scope: !13496)
!13506 = !DILocation(line: 9713, column: 7, scope: !13496)
!13507 = !DILocation(line: 9713, column: 36, scope: !13496)
!13508 = !DILocation(line: 9713, column: 22, scope: !13496)
!13509 = !DILocation(line: 9713, column: 65, scope: !13496)
!13510 = !DILocation(line: 9713, column: 10, scope: !13496)
!13511 = !DILocation(line: 9713, column: 70, scope: !13496)
!13512 = !DILocation(line: 9707, column: 7, scope: !13484)
!13513 = !DILocation(line: 9722, column: 3, scope: !13484)
!13514 = !DILocation(line: 9722, column: 10, scope: !13484)
!13515 = distinct !{!13515, !13513, !13516}
!13516 = !DILocation(line: 9723, column: 14, scope: !13484)
!13517 = !DILocation(line: 9725, column: 26, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13484, file: !3, line: 9725, column: 7)
!13519 = !DILocation(line: 9725, column: 7, scope: !13484)
!13520 = !DILocation(line: 9729, column: 3, scope: !13484)
!13521 = !DILocation(line: 9729, column: 10, scope: !13484)
!13522 = distinct !{!13522, !13520, !13523}
!13523 = !DILocation(line: 9730, column: 14, scope: !13484)
!13524 = !DILocation(line: 9733, column: 29, scope: !13484)
!13525 = !DILocation(line: 9733, column: 42, scope: !13484)
!13526 = !DILocation(line: 9733, column: 45, scope: !13484)
!13527 = !DILocation(line: 9733, column: 70, scope: !13484)
!13528 = !DILocation(line: 9733, column: 3, scope: !13484)
!13529 = !DILocation(line: 9734, column: 1, scope: !13484)
!13530 = distinct !DISubprogram(name: "tsi_start", scope: !10646, file: !10646, line: 38, type: !13531, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13533)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!10645, !2298}
!13533 = !{!13534, !13535}
!13534 = !DILocalVariable(name: "t", arg: 1, scope: !13530, file: !10646, line: 38, type: !2298)
!13535 = !DILocalVariable(name: "i", scope: !13530, file: !10646, line: 40, type: !10645)
!13536 = !DILocation(line: 0, scope: !13530)
!13537 = !DILocation(line: 42, column: 11, scope: !13530)
!13538 = !DILocation(line: 45, column: 3, scope: !13530)
!13539 = distinct !DISubprogram(name: "tsi_end_p", scope: !10646, file: !10646, line: 60, type: !13540, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13542)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!2174, !10645}
!13542 = !{!13543}
!13543 = !DILocalVariable(name: "i", arg: 1, scope: !13539, file: !10646, line: 60, type: !10645)
!13544 = !DILocation(line: 62, column: 16, scope: !13539)
!13545 = !DILocation(line: 62, column: 10, scope: !13539)
!13546 = !DILocation(line: 62, column: 3, scope: !13539)
!13547 = distinct !DISubprogram(name: "tsi_stmt", scope: !10646, file: !10646, line: 90, type: !13548, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13550)
!13548 = !DISubroutineType(types: !13549)
!13549 = !{!2298, !10645}
!13550 = !{!13551}
!13551 = !DILocalVariable(name: "i", arg: 1, scope: !13547, file: !10646, line: 90, type: !10645)
!13552 = !DILocation(line: 92, column: 17, scope: !13547)
!13553 = !DILocation(line: 92, column: 3, scope: !13547)
!13554 = distinct !DISubprogram(name: "tsi_next", scope: !10646, file: !10646, line: 72, type: !13555, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13558)
!13555 = !DISubroutineType(types: !13556)
!13556 = !{null, !13557}
!13557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10645, size: 64)
!13558 = !{!13559}
!13559 = !DILocalVariable(name: "i", arg: 1, scope: !13554, file: !10646, line: 72, type: !13557)
!13560 = !DILocation(line: 0, scope: !13554)
!13561 = !DILocation(line: 74, column: 15, scope: !13554)
!13562 = !DILocation(line: 74, column: 20, scope: !13554)
!13563 = !DILocation(line: 74, column: 10, scope: !13554)
!13564 = !DILocation(line: 75, column: 1, scope: !13554)
!13565 = distinct !DISubprogram(name: "expand_expr_addr_expr", scope: !3, file: !3, line: 6984, type: !8762, scopeLine: 6986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13566)
!13566 = !{!13567, !13568, !13569, !13570, !13571, !13572, !13573, !13574, !13575}
!13567 = !DILocalVariable(name: "exp", arg: 1, scope: !13565, file: !3, line: 6984, type: !2298)
!13568 = !DILocalVariable(name: "target", arg: 2, scope: !13565, file: !3, line: 6984, type: !2182)
!13569 = !DILocalVariable(name: "tmode", arg: 3, scope: !13565, file: !3, line: 6984, type: !5)
!13570 = !DILocalVariable(name: "modifier", arg: 4, scope: !13565, file: !3, line: 6985, type: !2087)
!13571 = !DILocalVariable(name: "as", scope: !13565, file: !3, line: 6987, type: !8275)
!13572 = !DILocalVariable(name: "address_mode", scope: !13565, file: !3, line: 6988, type: !5)
!13573 = !DILocalVariable(name: "pointer_mode", scope: !13565, file: !3, line: 6989, type: !5)
!13574 = !DILocalVariable(name: "rmode", scope: !13565, file: !3, line: 6990, type: !5)
!13575 = !DILocalVariable(name: "result", scope: !13565, file: !3, line: 6991, type: !2182)
!13576 = !DILocation(line: 0, scope: !13565)
!13577 = !DILocation(line: 6989, column: 36, scope: !13565)
!13578 = !DILocation(line: 6994, column: 13, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 6994, column: 7)
!13580 = !DILocation(line: 6994, column: 7, scope: !13565)
!13581 = !DILocation(line: 6995, column: 13, scope: !13579)
!13582 = !DILocation(line: 6997, column: 7, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 6997, column: 7)
!13584 = !DILocation(line: 6997, column: 7, scope: !13565)
!13585 = !DILocation(line: 6999, column: 12, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13583, file: !3, line: 6998, column: 5)
!13587 = !DILocation(line: 7000, column: 41, scope: !13586)
!13588 = !DILocation(line: 7000, column: 22, scope: !13586)
!13589 = !DILocation(line: 7001, column: 41, scope: !13586)
!13590 = !DILocation(line: 7001, column: 22, scope: !13586)
!13591 = !DILocation(line: 7002, column: 5, scope: !13586)
!13592 = !DILocation(line: 7007, column: 13, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 7007, column: 7)
!13594 = !DILocation(line: 7007, column: 38, scope: !13593)
!13595 = !DILocation(line: 7007, column: 29, scope: !13593)
!13596 = !DILocation(line: 7010, column: 37, scope: !13565)
!13597 = !DILocation(line: 7010, column: 12, scope: !13565)
!13598 = !DILocation(line: 7016, column: 11, scope: !13565)
!13599 = !DILocation(line: 7017, column: 13, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 7017, column: 7)
!13601 = !DILocation(line: 7017, column: 7, scope: !13565)
!13602 = !DILocation(line: 7019, column: 13, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 7019, column: 7)
!13604 = !DILocation(line: 7019, column: 7, scope: !13565)
!13605 = !DILocation(line: 7020, column: 14, scope: !13603)
!13606 = !DILocation(line: 7020, column: 5, scope: !13603)
!13607 = !DILocation(line: 7022, column: 3, scope: !13565)
!13608 = distinct !DISubprogram(name: "string_constant", scope: !3, file: !3, line: 9742, type: !13609, scopeLine: 9743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13611)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{!2298, !2298, !2797}
!13611 = !{!13612, !13613, !13614, !13615, !13616, !13617, !13621, !13622}
!13612 = !DILocalVariable(name: "arg", arg: 1, scope: !13608, file: !3, line: 9742, type: !2298)
!13613 = !DILocalVariable(name: "ptr_offset", arg: 2, scope: !13608, file: !3, line: 9742, type: !2797)
!13614 = !DILocalVariable(name: "array", scope: !13608, file: !3, line: 9744, type: !2298)
!13615 = !DILocalVariable(name: "offset", scope: !13608, file: !3, line: 9744, type: !2298)
!13616 = !DILocalVariable(name: "lower_bound", scope: !13608, file: !3, line: 9744, type: !2298)
!13617 = !DILocalVariable(name: "arg0", scope: !13618, file: !3, line: 9786, type: !2298)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 9785, column: 5)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !3, line: 9784, column: 12)
!13620 = distinct !DILexicalBlock(scope: !13608, file: !3, line: 9747, column: 7)
!13621 = !DILocalVariable(name: "arg1", scope: !13618, file: !3, line: 9787, type: !2298)
!13622 = !DILocalVariable(name: "length", scope: !13623, file: !3, line: 9819, type: !2175)
!13623 = distinct !DILexicalBlock(scope: !13624, file: !3, line: 9818, column: 5)
!13624 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 9817, column: 12)
!13625 = distinct !DILexicalBlock(scope: !13608, file: !3, line: 9812, column: 7)
!13626 = !DILocation(line: 0, scope: !13608)
!13627 = !DILocation(line: 9745, column: 3, scope: !13608)
!13628 = !DILocation(line: 9747, column: 7, scope: !13620)
!13629 = !DILocation(line: 9747, column: 23, scope: !13620)
!13630 = !DILocation(line: 9747, column: 7, scope: !13608)
!13631 = !DILocation(line: 9749, column: 11, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13633, file: !3, line: 9749, column: 11)
!13633 = distinct !DILexicalBlock(scope: !13620, file: !3, line: 9748, column: 5)
!13634 = !DILocation(line: 9749, column: 45, scope: !13632)
!13635 = !DILocation(line: 9749, column: 11, scope: !13633)
!13636 = !DILocation(line: 9751, column: 18, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 9750, column: 2)
!13638 = !DILocation(line: 9751, column: 16, scope: !13637)
!13639 = !DILocation(line: 9752, column: 11, scope: !13637)
!13640 = !DILocation(line: 9752, column: 4, scope: !13637)
!13641 = !DILocation(line: 9754, column: 50, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 9754, column: 16)
!13643 = !DILocation(line: 9754, column: 16, scope: !13632)
!13644 = !DILocation(line: 9757, column: 13, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !3, line: 9755, column: 2)
!13646 = !DILocation(line: 9758, column: 2, scope: !13645)
!13647 = !DILocation(line: 9759, column: 50, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13642, file: !3, line: 9759, column: 16)
!13649 = !DILocation(line: 9759, column: 16, scope: !13642)
!13650 = !DILocation(line: 9761, column: 12, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13648, file: !3, line: 9760, column: 2)
!13652 = !DILocation(line: 9762, column: 13, scope: !13651)
!13653 = !DILocation(line: 9763, column: 8, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13651, file: !3, line: 9763, column: 8)
!13655 = !DILocation(line: 9763, column: 26, scope: !13654)
!13656 = !DILocation(line: 9764, column: 8, scope: !13654)
!13657 = !DILocation(line: 9764, column: 29, scope: !13654)
!13658 = !DILocation(line: 9763, column: 8, scope: !13651)
!13659 = !DILocation(line: 9768, column: 18, scope: !13651)
!13660 = !DILocation(line: 9769, column: 9, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13651, file: !3, line: 9769, column: 8)
!13662 = !DILocation(line: 9769, column: 8, scope: !13651)
!13663 = !DILocation(line: 9772, column: 12, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13665, file: !3, line: 9772, column: 12)
!13665 = distinct !DILexicalBlock(scope: !13661, file: !3, line: 9770, column: 6)
!13666 = !DILocation(line: 9772, column: 36, scope: !13664)
!13667 = !DILocation(line: 9772, column: 12, scope: !13665)
!13668 = !DILocation(line: 9774, column: 12, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13665, file: !3, line: 9774, column: 12)
!13670 = !DILocation(line: 9774, column: 31, scope: !13669)
!13671 = !DILocation(line: 9774, column: 12, scope: !13665)
!13672 = !DILocation(line: 9777, column: 17, scope: !13665)
!13673 = !DILocation(line: 9779, column: 6, scope: !13665)
!13674 = !DILocation(line: 9784, column: 28, scope: !13619)
!13675 = !DILocation(line: 9784, column: 41, scope: !13619)
!13676 = !DILocation(line: 9784, column: 60, scope: !13619)
!13677 = !DILocation(line: 9784, column: 12, scope: !13620)
!13678 = !DILocation(line: 9786, column: 19, scope: !13618)
!13679 = !DILocation(line: 0, scope: !13618)
!13680 = !DILocation(line: 9787, column: 19, scope: !13618)
!13681 = !DILocation(line: 9789, column: 7, scope: !13618)
!13682 = !DILocation(line: 9790, column: 7, scope: !13618)
!13683 = !DILocation(line: 9792, column: 11, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 9792, column: 11)
!13685 = !DILocation(line: 9792, column: 28, scope: !13684)
!13686 = !DILocation(line: 9793, column: 4, scope: !13684)
!13687 = !DILocation(line: 9793, column: 8, scope: !13684)
!13688 = !DILocation(line: 9793, column: 43, scope: !13684)
!13689 = !DILocation(line: 9794, column: 8, scope: !13684)
!13690 = !DILocation(line: 9794, column: 46, scope: !13684)
!13691 = !DILocation(line: 9792, column: 11, scope: !13618)
!13692 = !DILocation(line: 9798, column: 2, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 9795, column: 2)
!13694 = !DILocation(line: 9799, column: 16, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 9799, column: 16)
!13696 = !DILocation(line: 9799, column: 33, scope: !13695)
!13697 = !DILocation(line: 9800, column: 9, scope: !13695)
!13698 = !DILocation(line: 9800, column: 13, scope: !13695)
!13699 = !DILocation(line: 9800, column: 48, scope: !13695)
!13700 = !DILocation(line: 9801, column: 6, scope: !13695)
!13701 = !DILocation(line: 9801, column: 44, scope: !13695)
!13702 = !DILocation(line: 9799, column: 16, scope: !13684)
!13703 = !DILocation(line: 0, scope: !13620)
!13704 = !DILocation(line: 9812, column: 7, scope: !13625)
!13705 = !DILocation(line: 9812, column: 25, scope: !13625)
!13706 = !DILocation(line: 9812, column: 7, scope: !13608)
!13707 = !DILocation(line: 9814, column: 21, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 9813, column: 5)
!13709 = !DILocation(line: 9814, column: 19, scope: !13708)
!13710 = !DILocation(line: 9815, column: 7, scope: !13708)
!13711 = !DILocation(line: 9817, column: 30, scope: !13624)
!13712 = !DILocation(line: 9817, column: 12, scope: !13625)
!13713 = !DILocation(line: 9822, column: 11, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13623, file: !3, line: 9822, column: 11)
!13715 = !DILocation(line: 9822, column: 32, scope: !13714)
!13716 = !DILocation(line: 9823, column: 4, scope: !13714)
!13717 = !DILocation(line: 9823, column: 7, scope: !13714)
!13718 = !DILocation(line: 9823, column: 40, scope: !13714)
!13719 = !DILocation(line: 9822, column: 11, scope: !13623)
!13720 = !DILocation(line: 9827, column: 13, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13623, file: !3, line: 9827, column: 11)
!13722 = !DILocation(line: 9828, column: 4, scope: !13721)
!13723 = !DILocation(line: 9828, column: 7, scope: !13721)
!13724 = !DILocation(line: 9829, column: 4, scope: !13721)
!13725 = !DILocation(line: 9829, column: 17, scope: !13721)
!13726 = !DILocation(line: 9829, column: 9, scope: !13721)
!13727 = !DILocation(line: 9827, column: 11, scope: !13623)
!13728 = !DILocation(line: 9833, column: 11, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13623, file: !3, line: 9833, column: 11)
!13730 = !DILocation(line: 9833, column: 34, scope: !13729)
!13731 = !DILocation(line: 9834, column: 4, scope: !13729)
!13732 = !DILocation(line: 9834, column: 7, scope: !13729)
!13733 = !DILocation(line: 9834, column: 42, scope: !13729)
!13734 = !DILocation(line: 9835, column: 4, scope: !13729)
!13735 = !DILocation(line: 9835, column: 17, scope: !13729)
!13736 = !DILocation(line: 0, scope: !13623)
!13737 = !DILocation(line: 9835, column: 60, scope: !13729)
!13738 = !DILocation(line: 9836, column: 4, scope: !13729)
!13739 = !DILocation(line: 9836, column: 49, scope: !13729)
!13740 = !DILocation(line: 9836, column: 7, scope: !13729)
!13741 = !DILocation(line: 9836, column: 57, scope: !13729)
!13742 = !DILocation(line: 9833, column: 11, scope: !13623)
!13743 = !DILocation(line: 9841, column: 16, scope: !13623)
!13744 = !DILocation(line: 9842, column: 29, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13623, file: !3, line: 9842, column: 11)
!13746 = !DILocation(line: 9842, column: 11, scope: !13745)
!13747 = !DILocation(line: 9842, column: 61, scope: !13745)
!13748 = !DILocation(line: 9843, column: 4, scope: !13745)
!13749 = !DILocation(line: 9843, column: 10, scope: !13745)
!13750 = !DILocation(line: 9844, column: 8, scope: !13745)
!13751 = !DILocation(line: 9844, column: 11, scope: !13745)
!13752 = !DILocation(line: 9844, column: 45, scope: !13745)
!13753 = !DILocation(line: 9842, column: 11, scope: !13623)
!13754 = !DILocation(line: 9847, column: 19, scope: !13623)
!13755 = !DILocation(line: 9848, column: 14, scope: !13623)
!13756 = !DILocation(line: 9848, column: 7, scope: !13623)
!13757 = !DILocation(line: 9852, column: 1, scope: !13608)
!13758 = distinct !DISubprogram(name: "try_casesi", scope: !3, file: !3, line: 10037, type: !13759, scopeLine: 10040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13761)
!13759 = !DISubroutineType(types: !13760)
!13760 = !{!2175, !2298, !2298, !2298, !2298, !2182, !2182, !2182}
!13761 = !{!13762, !13763, !13764, !13765, !13766, !13767, !13768, !13769, !13770, !13771, !13772, !13773, !13774}
!13762 = !DILocalVariable(name: "index_type", arg: 1, scope: !13758, file: !3, line: 10037, type: !2298)
!13763 = !DILocalVariable(name: "index_expr", arg: 2, scope: !13758, file: !3, line: 10037, type: !2298)
!13764 = !DILocalVariable(name: "minval", arg: 3, scope: !13758, file: !3, line: 10037, type: !2298)
!13765 = !DILocalVariable(name: "range", arg: 4, scope: !13758, file: !3, line: 10037, type: !2298)
!13766 = !DILocalVariable(name: "table_label", arg: 5, scope: !13758, file: !3, line: 10038, type: !2182)
!13767 = !DILocalVariable(name: "default_label", arg: 6, scope: !13758, file: !3, line: 10038, type: !2182)
!13768 = !DILocalVariable(name: "fallback_label", arg: 7, scope: !13758, file: !3, line: 10039, type: !2182)
!13769 = !DILocalVariable(name: "index_mode", scope: !13758, file: !3, line: 10041, type: !5)
!13770 = !DILocalVariable(name: "index_bits", scope: !13758, file: !3, line: 10042, type: !2175)
!13771 = !DILocalVariable(name: "op1", scope: !13758, file: !3, line: 10043, type: !2182)
!13772 = !DILocalVariable(name: "op2", scope: !13758, file: !3, line: 10043, type: !2182)
!13773 = !DILocalVariable(name: "index", scope: !13758, file: !3, line: 10043, type: !2182)
!13774 = !DILocalVariable(name: "op_mode", scope: !13758, file: !3, line: 10044, type: !5)
!13775 = !DILocation(line: 0, scope: !13758)
!13776 = !DILocation(line: 10047, column: 5, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13758, file: !3, line: 10046, column: 7)
!13778 = distinct !DISubprogram(name: "try_tablejump", scope: !3, file: !3, line: 10186, type: !13779, scopeLine: 10188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13781)
!13779 = !DISubroutineType(types: !13780)
!13780 = !{!2175, !2298, !2298, !2298, !2298, !2182, !2182}
!13781 = !{!13782, !13783, !13784, !13785, !13786, !13787, !13788}
!13782 = !DILocalVariable(name: "index_type", arg: 1, scope: !13778, file: !3, line: 10186, type: !2298)
!13783 = !DILocalVariable(name: "index_expr", arg: 2, scope: !13778, file: !3, line: 10186, type: !2298)
!13784 = !DILocalVariable(name: "minval", arg: 3, scope: !13778, file: !3, line: 10186, type: !2298)
!13785 = !DILocalVariable(name: "range", arg: 4, scope: !13778, file: !3, line: 10186, type: !2298)
!13786 = !DILocalVariable(name: "table_label", arg: 5, scope: !13778, file: !3, line: 10187, type: !2182)
!13787 = !DILocalVariable(name: "default_label", arg: 6, scope: !13778, file: !3, line: 10187, type: !2182)
!13788 = !DILocalVariable(name: "index", scope: !13778, file: !3, line: 10189, type: !2182)
!13789 = !DILocation(line: 0, scope: !13778)
!13790 = !DILocation(line: 10194, column: 16, scope: !13778)
!13791 = !DILocation(line: 10197, column: 11, scope: !13778)
!13792 = !DILocation(line: 10198, column: 3, scope: !13778)
!13793 = !DILocation(line: 10200, column: 24, scope: !13778)
!13794 = !DILocation(line: 10201, column: 18, scope: !13778)
!13795 = !DILocation(line: 10202, column: 11, scope: !13778)
!13796 = !DILocation(line: 10203, column: 11, scope: !13778)
!13797 = !DILocation(line: 10204, column: 11, scope: !13778)
!13798 = !DILocation(line: 10201, column: 3, scope: !13778)
!13799 = !DILocation(line: 10200, column: 3, scope: !13778)
!13800 = !DILocation(line: 10206, column: 3, scope: !13778)
!13801 = distinct !DISubprogram(name: "do_tablejump", scope: !3, file: !3, line: 10126, type: !13802, scopeLine: 10128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13804)
!13802 = !DISubroutineType(types: !13803)
!13803 = !{null, !2182, !5, !2182, !2182, !2182}
!13804 = !{!13805, !13806, !13807, !13808, !13809, !13810, !13811}
!13805 = !DILocalVariable(name: "index", arg: 1, scope: !13801, file: !3, line: 10126, type: !2182)
!13806 = !DILocalVariable(name: "mode", arg: 2, scope: !13801, file: !3, line: 10126, type: !5)
!13807 = !DILocalVariable(name: "range", arg: 3, scope: !13801, file: !3, line: 10126, type: !2182)
!13808 = !DILocalVariable(name: "table_label", arg: 4, scope: !13801, file: !3, line: 10126, type: !2182)
!13809 = !DILocalVariable(name: "default_label", arg: 5, scope: !13801, file: !3, line: 10127, type: !2182)
!13810 = !DILocalVariable(name: "temp", scope: !13801, file: !3, line: 10129, type: !2182)
!13811 = !DILocalVariable(name: "vector", scope: !13801, file: !3, line: 10129, type: !2182)
!13812 = !DILocation(line: 0, scope: !13801)
!13813 = !DILocation(line: 10131, column: 7, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13801, file: !3, line: 10131, column: 7)
!13815 = !DILocation(line: 10131, column: 24, scope: !13814)
!13816 = !DILocation(line: 10131, column: 30, scope: !13814)
!13817 = !DILocation(line: 10131, column: 35, scope: !13814)
!13818 = !DILocation(line: 10131, column: 22, scope: !13814)
!13819 = !DILocation(line: 10131, column: 7, scope: !13801)
!13820 = !DILocation(line: 10132, column: 37, scope: !13814)
!13821 = !DILocation(line: 10132, column: 35, scope: !13814)
!13822 = !DILocation(line: 10132, column: 5, scope: !13814)
!13823 = !DILocation(line: 10142, column: 7, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13801, file: !3, line: 10142, column: 7)
!13825 = !DILocation(line: 10142, column: 7, scope: !13801)
!13826 = !DILocation(line: 10143, column: 5, scope: !13824)
!13827 = !DILocation(line: 10148, column: 12, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13801, file: !3, line: 10148, column: 7)
!13829 = !DILocation(line: 10148, column: 7, scope: !13801)
!13830 = !DILocation(line: 10149, column: 13, scope: !13828)
!13831 = !DILocation(line: 10149, column: 5, scope: !13828)
!13832 = !DILocation(line: 10163, column: 11, scope: !13801)
!13833 = !DILocation(line: 10172, column: 13, scope: !13801)
!13834 = !DILocation(line: 10173, column: 10, scope: !13801)
!13835 = !DILocation(line: 10174, column: 12, scope: !13801)
!13836 = !DILocation(line: 10175, column: 3, scope: !13801)
!13837 = !DILocation(line: 10177, column: 19, scope: !13801)
!13838 = !DILocation(line: 10177, column: 3, scope: !13801)
!13839 = !DILocation(line: 10181, column: 38, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13801, file: !3, line: 10181, column: 7)
!13841 = !DILocation(line: 10181, column: 7, scope: !13801)
!13842 = !DILocation(line: 10182, column: 5, scope: !13840)
!13843 = !DILocation(line: 10183, column: 1, scope: !13801)
!13844 = distinct !DISubprogram(name: "vector_mode_valid_p", scope: !3, file: !3, line: 10214, type: !13845, scopeLine: 10215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13847)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{!2175, !5}
!13847 = !{!13848, !13849, !13850}
!13848 = !DILocalVariable(name: "mode", arg: 1, scope: !13844, file: !3, line: 10214, type: !5)
!13849 = !DILocalVariable(name: "mclass", scope: !13844, file: !3, line: 10216, type: !1876)
!13850 = !DILocalVariable(name: "innermode", scope: !13844, file: !3, line: 10217, type: !5)
!13851 = !DILocation(line: 0, scope: !13844)
!13852 = !DILocation(line: 10216, column: 28, scope: !13844)
!13853 = !DILocation(line: 10221, column: 7, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 10220, column: 7)
!13855 = !DILocation(line: 10229, column: 15, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 10229, column: 7)
!13857 = !DILocation(line: 10229, column: 7, scope: !13856)
!13858 = !DILocation(line: 10229, column: 7, scope: !13844)
!13859 = !DILocation(line: 10232, column: 15, scope: !13844)
!13860 = !DILocation(line: 10239, column: 18, scope: !13844)
!13861 = !DILocation(line: 10239, column: 10, scope: !13844)
!13862 = !DILocation(line: 10239, column: 3, scope: !13844)
!13863 = !DILocation(line: 10240, column: 1, scope: !13844)
!13864 = distinct !DISubprogram(name: "build_personality_function", scope: !3, file: !3, line: 10289, type: !13865, scopeLine: 10290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{!2298, !2180}
!13867 = !{!13868, !13869, !13870}
!13868 = !DILocalVariable(name: "name", arg: 1, scope: !13864, file: !3, line: 10289, type: !2180)
!13869 = !DILocalVariable(name: "decl", scope: !13864, file: !3, line: 10291, type: !2298)
!13870 = !DILocalVariable(name: "type", scope: !13864, file: !3, line: 10291, type: !2298)
!13871 = !DILocation(line: 0, scope: !13864)
!13872 = !DILocation(line: 10293, column: 36, scope: !13864)
!13873 = !DILocation(line: 10294, column: 8, scope: !13864)
!13874 = !DILocation(line: 10295, column: 8, scope: !13864)
!13875 = !DILocation(line: 10293, column: 10, scope: !13864)
!13876 = !DILocation(line: 10296, column: 10, scope: !13864)
!13877 = !DILocation(line: 10298, column: 3, scope: !13864)
!13878 = !DILocation(line: 10298, column: 26, scope: !13864)
!13879 = !DILocation(line: 10299, column: 24, scope: !13864)
!13880 = !DILocation(line: 10300, column: 3, scope: !13864)
!13881 = !DILocation(line: 10300, column: 22, scope: !13864)
!13882 = !DILocation(line: 10304, column: 3, scope: !13864)
!13883 = !DILocation(line: 10306, column: 3, scope: !13864)
!13884 = distinct !DISubprogram(name: "get_personality_function", scope: !3, file: !3, line: 10313, type: !5728, scopeLine: 10314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13885)
!13885 = !{!13886, !13887, !13888}
!13886 = !DILocalVariable(name: "decl", arg: 1, scope: !13884, file: !3, line: 10313, type: !2298)
!13887 = !DILocalVariable(name: "personality", scope: !13884, file: !3, line: 10315, type: !2298)
!13888 = !DILocalVariable(name: "pk", scope: !13884, file: !3, line: 10316, type: !2096)
!13889 = !DILocation(line: 0, scope: !13884)
!13890 = !DILocation(line: 10315, column: 22, scope: !13884)
!13891 = !DILocation(line: 10318, column: 39, scope: !13884)
!13892 = !DILocation(line: 10318, column: 8, scope: !13884)
!13893 = !DILocation(line: 10319, column: 10, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 10319, column: 7)
!13895 = !DILocation(line: 10319, column: 7, scope: !13884)
!13896 = !DILocation(line: 10322, column: 8, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 10322, column: 7)
!13898 = !DILocation(line: 10323, column: 13, scope: !13897)
!13899 = !DILocation(line: 10323, column: 7, scope: !13897)
!13900 = !DILocation(line: 10324, column: 30, scope: !13897)
!13901 = !DILocation(line: 10324, column: 19, scope: !13897)
!13902 = !DILocation(line: 10324, column: 5, scope: !13897)
!13903 = !DILocation(line: 10326, column: 10, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 10326, column: 7)
!13905 = !DILocation(line: 10327, column: 5, scope: !13904)
!13906 = !DILocation(line: 10326, column: 7, scope: !13884)
!13907 = !DILocation(line: 10329, column: 10, scope: !13884)
!13908 = !DILocation(line: 10329, column: 3, scope: !13884)
!13909 = !DILocation(line: 10330, column: 1, scope: !13884)
!13910 = distinct !DISubprogram(name: "store_by_pieces_2", scope: !3, file: !3, line: 2586, type: !13911, scopeLine: 2588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13913)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{null, !5282, !5, !6896}
!13913 = !{!13914, !13915, !13916, !13917, !13918, !13919}
!13914 = !DILocalVariable(name: "genfun", arg: 1, scope: !13910, file: !3, line: 2586, type: !5282)
!13915 = !DILocalVariable(name: "mode", arg: 2, scope: !13910, file: !3, line: 2586, type: !5)
!13916 = !DILocalVariable(name: "data", arg: 3, scope: !13910, file: !3, line: 2587, type: !6896)
!13917 = !DILocalVariable(name: "size", scope: !13910, file: !3, line: 2589, type: !7)
!13918 = !DILocalVariable(name: "to1", scope: !13910, file: !3, line: 2590, type: !2182)
!13919 = !DILocalVariable(name: "cst", scope: !13910, file: !3, line: 2590, type: !2182)
!13920 = !DILocation(line: 0, scope: !13910)
!13921 = !DILocation(line: 2589, column: 23, scope: !13910)
!13922 = !DILocation(line: 0, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 2594, column: 11)
!13924 = distinct !DILexicalBlock(scope: !13910, file: !3, line: 2593, column: 5)
!13925 = !DILocation(line: 0, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 2597, column: 11)
!13927 = !DILocation(line: 0, scope: !13924)
!13928 = !DILocation(line: 2592, column: 16, scope: !13910)
!13929 = !DILocation(line: 2592, column: 3, scope: !13910)
!13930 = !DILocation(line: 2592, column: 20, scope: !13910)
!13931 = !DILocation(line: 2594, column: 17, scope: !13923)
!13932 = !DILocation(line: 2594, column: 11, scope: !13923)
!13933 = !DILocation(line: 2594, column: 11, scope: !13924)
!13934 = !DILocation(line: 2595, column: 15, scope: !13923)
!13935 = !DILocation(line: 2595, column: 2, scope: !13923)
!13936 = !DILocation(line: 2597, column: 17, scope: !13926)
!13937 = !DILocation(line: 2597, column: 11, scope: !13926)
!13938 = !DILocation(line: 2597, column: 11, scope: !13924)
!13939 = !DILocation(line: 2598, column: 8, scope: !13926)
!13940 = !DILocation(line: 2598, column: 2, scope: !13926)
!13941 = !DILocation(line: 2601, column: 8, scope: !13926)
!13942 = !DILocation(line: 2607, column: 21, scope: !13924)
!13943 = !DILocation(line: 2607, column: 38, scope: !13924)
!13944 = !DILocation(line: 2607, column: 58, scope: !13924)
!13945 = !DILocation(line: 2607, column: 13, scope: !13924)
!13946 = !DILocation(line: 2608, column: 18, scope: !13924)
!13947 = !DILocation(line: 2608, column: 7, scope: !13924)
!13948 = !DILocation(line: 2613, column: 19, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 2613, column: 11)
!13950 = !DILocation(line: 2613, column: 13, scope: !13949)
!13951 = !DILocation(line: 2613, column: 11, scope: !13924)
!13952 = !DILocation(line: 2614, column: 15, scope: !13949)
!13953 = !DILocation(line: 2614, column: 2, scope: !13949)
!13954 = !DILocation(line: 2616, column: 17, scope: !13924)
!13955 = distinct !{!13955, !13929, !13956}
!13956 = !DILocation(line: 2617, column: 5, scope: !13910)
!13957 = !DILocation(line: 2618, column: 1, scope: !13910)
!13958 = distinct !DISubprogram(name: "clear_by_pieces_1", scope: !3, file: !3, line: 2474, type: !6701, scopeLine: 2477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13959)
!13959 = !{!13960, !13961, !13962}
!13960 = !DILocalVariable(name: "data", arg: 1, scope: !13958, file: !3, line: 2474, type: !2179)
!13961 = !DILocalVariable(name: "offset", arg: 2, scope: !13958, file: !3, line: 2475, type: !2269)
!13962 = !DILocalVariable(name: "mode", arg: 3, scope: !13958, file: !3, line: 2476, type: !5)
!13963 = !DILocation(line: 0, scope: !13958)
!13964 = !DILocation(line: 2478, column: 10, scope: !13958)
!13965 = !DILocation(line: 2478, column: 3, scope: !13958)
!13966 = distinct !DISubprogram(name: "emit_move_change_mode", scope: !3, file: !3, line: 2982, type: !13967, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13969)
!13967 = !DISubroutineType(types: !13968)
!13968 = !{!2182, !5, !5, !2182, !2174}
!13969 = !{!13970, !13971, !13972, !13973, !13974}
!13970 = !DILocalVariable(name: "new_mode", arg: 1, scope: !13966, file: !3, line: 2982, type: !5)
!13971 = !DILocalVariable(name: "old_mode", arg: 2, scope: !13966, file: !3, line: 2983, type: !5)
!13972 = !DILocalVariable(name: "x", arg: 3, scope: !13966, file: !3, line: 2983, type: !2182)
!13973 = !DILocalVariable(name: "force", arg: 4, scope: !13966, file: !3, line: 2983, type: !2174)
!13974 = !DILocalVariable(name: "ret", scope: !13966, file: !3, line: 2985, type: !2182)
!13975 = !DILocation(line: 0, scope: !13966)
!13976 = !DILocation(line: 2987, column: 24, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 2987, column: 7)
!13978 = !DILocation(line: 2987, column: 7, scope: !13977)
!13979 = !DILocation(line: 2987, column: 7, scope: !13966)
!13980 = !DILocation(line: 2989, column: 36, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13977, file: !3, line: 2988, column: 5)
!13982 = !DILocation(line: 2989, column: 13, scope: !13981)
!13983 = !DILocation(line: 2990, column: 7, scope: !13981)
!13984 = !DILocation(line: 2991, column: 5, scope: !13981)
!13985 = !DILocation(line: 2992, column: 12, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13977, file: !3, line: 2992, column: 12)
!13987 = !DILocation(line: 2992, column: 12, scope: !13977)
!13988 = !DILocation(line: 2996, column: 11, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 2996, column: 11)
!13990 = distinct !DILexicalBlock(scope: !13986, file: !3, line: 2993, column: 5)
!13991 = !DILocation(line: 2996, column: 11, scope: !13990)
!13992 = !DILocation(line: 3000, column: 10, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13989, file: !3, line: 2997, column: 2)
!13994 = !DILocation(line: 3001, column: 4, scope: !13993)
!13995 = !DILocation(line: 3002, column: 2, scope: !13993)
!13996 = !DILocation(line: 3004, column: 8, scope: !13989)
!13997 = !DILocation(line: 3014, column: 11, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13999, file: !3, line: 3014, column: 11)
!13999 = distinct !DILexicalBlock(scope: !13986, file: !3, line: 3007, column: 5)
!14000 = !DILocation(line: 3014, column: 11, scope: !13999)
!14001 = !DILocation(line: 3015, column: 8, scope: !13998)
!14002 = !DILocation(line: 3015, column: 2, scope: !13998)
!14003 = !DILocation(line: 3017, column: 8, scope: !13998)
!14004 = !DILocation(line: 0, scope: !13977)
!14005 = !DILocation(line: 3020, column: 3, scope: !13966)
!14006 = distinct !DISubprogram(name: "undefined_operand_subword_p", scope: !3, file: !3, line: 3259, type: !14007, scopeLine: 3260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14009)
!14007 = !DISubroutineType(types: !14008)
!14008 = !{!2174, !4302, !2175}
!14009 = !{!14010, !14011, !14012, !14013, !14014, !14015}
!14010 = !DILocalVariable(name: "op", arg: 1, scope: !14006, file: !3, line: 3259, type: !4302)
!14011 = !DILocalVariable(name: "i", arg: 2, scope: !14006, file: !3, line: 3259, type: !2175)
!14012 = !DILocalVariable(name: "innermode", scope: !14006, file: !3, line: 3261, type: !5)
!14013 = !DILocalVariable(name: "innermostmode", scope: !14006, file: !3, line: 3261, type: !5)
!14014 = !DILocalVariable(name: "offset", scope: !14006, file: !3, line: 3262, type: !2175)
!14015 = !DILocalVariable(name: "difference", scope: !14016, file: !3, line: 3275, type: !2175)
!14016 = distinct !DILexicalBlock(scope: !14017, file: !3, line: 3274, column: 5)
!14017 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 3272, column: 7)
!14018 = !DILocation(line: 0, scope: !14006)
!14019 = !DILocation(line: 3263, column: 7, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 3263, column: 7)
!14021 = !DILocation(line: 3263, column: 21, scope: !14020)
!14022 = !DILocation(line: 3263, column: 7, scope: !14006)
!14023 = !DILocation(line: 3266, column: 19, scope: !14006)
!14024 = !DILocation(line: 3267, column: 14, scope: !14006)
!14025 = !DILocation(line: 3267, column: 33, scope: !14006)
!14026 = !DILocation(line: 3267, column: 31, scope: !14006)
!14027 = !DILocation(line: 3272, column: 24, scope: !14017)
!14028 = !DILocation(line: 3273, column: 7, scope: !14017)
!14029 = !DILocation(line: 0, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 3281, column: 7)
!14031 = !DILocation(line: 3281, column: 17, scope: !14030)
!14032 = !DILocation(line: 3265, column: 15, scope: !14006)
!14033 = !DILocation(line: 3273, column: 10, scope: !14017)
!14034 = !DILocation(line: 3273, column: 42, scope: !14017)
!14035 = !DILocation(line: 3273, column: 40, scope: !14017)
!14036 = !DILocation(line: 3272, column: 7, scope: !14006)
!14037 = !DILocation(line: 0, scope: !14016)
!14038 = !DILocation(line: 3280, column: 5, scope: !14016)
!14039 = !DILocation(line: 3281, column: 14, scope: !14030)
!14040 = !DILocation(line: 3282, column: 7, scope: !14030)
!14041 = !DILocation(line: 3282, column: 21, scope: !14030)
!14042 = !DILocation(line: 3282, column: 20, scope: !14030)
!14043 = !DILocation(line: 3282, column: 17, scope: !14030)
!14044 = !DILocation(line: 3281, column: 7, scope: !14006)
!14045 = !DILocation(line: 3285, column: 1, scope: !14006)
!14046 = distinct !DISubprogram(name: "target_align", scope: !3, file: !3, line: 6277, type: !9565, scopeLine: 6278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14047)
!14047 = !{!14048, !14049, !14050}
!14048 = !DILocalVariable(name: "target", arg: 1, scope: !14046, file: !3, line: 6277, type: !8575)
!14049 = !DILocalVariable(name: "this_align", scope: !14046, file: !3, line: 6282, type: !2252)
!14050 = !DILocalVariable(name: "outer_align", scope: !14046, file: !3, line: 6282, type: !2252)
!14051 = !DILocation(line: 0, scope: !14046)
!14052 = !DILocation(line: 6284, column: 11, scope: !14046)
!14053 = !DILocation(line: 6284, column: 3, scope: !14046)
!14054 = !DILocation(line: 6290, column: 20, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14046, file: !3, line: 6285, column: 5)
!14056 = !DILocation(line: 6291, column: 35, scope: !14055)
!14057 = !DILocation(line: 6291, column: 21, scope: !14055)
!14058 = !DILocation(line: 6292, column: 14, scope: !14055)
!14059 = !DILocation(line: 6310, column: 1, scope: !14046)
!14060 = !DILocation(line: 6296, column: 20, scope: !14055)
!14061 = !DILocation(line: 6297, column: 35, scope: !14055)
!14062 = !DILocation(line: 6297, column: 21, scope: !14055)
!14063 = !DILocation(line: 6298, column: 14, scope: !14055)
!14064 = !DILocation(line: 6303, column: 20, scope: !14055)
!14065 = !DILocation(line: 6304, column: 35, scope: !14055)
!14066 = !DILocation(line: 6304, column: 21, scope: !14055)
!14067 = !DILocation(line: 6305, column: 14, scope: !14055)
!14068 = !DILocation(line: 6308, column: 14, scope: !14055)
!14069 = !DILocation(line: 6308, column: 7, scope: !14055)
!14070 = !DILocation(line: 0, scope: !14055)
!14071 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !2102, file: !2102, line: 1815, type: !14072, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14074)
!14072 = !DISubroutineType(types: !14073)
!14073 = !{!141, !13070}
!14074 = !{!14075, !14076}
!14075 = !DILocalVariable(name: "gs", arg: 1, scope: !14071, file: !2102, line: 1815, type: !13070)
!14076 = !DILocalVariable(name: "code", scope: !14071, file: !2102, line: 1817, type: !141)
!14077 = !DILocation(line: 0, scope: !14071)
!14078 = !DILocation(line: 1820, column: 10, scope: !14071)
!14079 = !DILocation(line: 1821, column: 7, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14071, file: !2102, line: 1821, column: 7)
!14081 = !DILocation(line: 1821, column: 35, scope: !14080)
!14082 = !DILocation(line: 1821, column: 7, scope: !14071)
!14083 = !DILocation(line: 1822, column: 12, scope: !14080)
!14084 = !DILocation(line: 1822, column: 5, scope: !14080)
!14085 = !DILocation(line: 1824, column: 3, scope: !14071)
!14086 = distinct !DISubprogram(name: "gimple_expr_code", scope: !2102, file: !2102, line: 1438, type: !14072, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14087)
!14087 = !{!14088, !14089}
!14088 = !DILocalVariable(name: "stmt", arg: 1, scope: !14086, file: !2102, line: 1438, type: !13070)
!14089 = !DILocalVariable(name: "code", scope: !14086, file: !2102, line: 1440, type: !2108)
!14090 = !DILocation(line: 0, scope: !14086)
!14091 = !DILocation(line: 1440, column: 27, scope: !14086)
!14092 = !DILocation(line: 1441, column: 29, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14086, file: !2102, line: 1441, column: 7)
!14094 = !DILocation(line: 1442, column: 42, scope: !14093)
!14095 = !DILocation(line: 1442, column: 5, scope: !14093)
!14096 = !DILocation(line: 1446, column: 5, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14093, file: !2102, line: 1443, column: 12)
!14098 = !DILocation(line: 1448, column: 5, scope: !14086)
!14099 = !DILocation(line: 1450, column: 1, scope: !14086)
!14100 = distinct !DISubprogram(name: "gimple_code", scope: !2102, file: !2102, line: 1052, type: !14101, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14103)
!14101 = !DISubroutineType(types: !14102)
!14102 = !{!2108, !13070}
!14103 = !{!14104}
!14104 = !DILocalVariable(name: "g", arg: 1, scope: !14100, file: !2102, line: 1052, type: !13070)
!14105 = !DILocation(line: 0, scope: !14100)
!14106 = !DILocation(line: 1054, column: 20, scope: !14100)
!14107 = !DILocation(line: 1054, column: 3, scope: !14100)
!14108 = distinct !DISubprogram(name: "gimple_op", scope: !2102, file: !2102, line: 1631, type: !14109, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14111)
!14109 = !DISubroutineType(types: !14110)
!14110 = !{!2298, !13070, !7}
!14111 = !{!14112, !14113}
!14112 = !DILocalVariable(name: "gs", arg: 1, scope: !14108, file: !2102, line: 1631, type: !13070)
!14113 = !DILocalVariable(name: "i", arg: 2, scope: !14108, file: !2102, line: 1631, type: !7)
!14114 = !DILocation(line: 0, scope: !14108)
!14115 = !DILocation(line: 1633, column: 7, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14108, file: !2102, line: 1633, column: 7)
!14117 = !DILocation(line: 1633, column: 7, scope: !14108)
!14118 = !DILocation(line: 1638, column: 14, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14116, file: !2102, line: 1634, column: 5)
!14120 = !DILocation(line: 1638, column: 7, scope: !14119)
!14121 = !DILocation(line: 0, scope: !14116)
!14122 = !DILocation(line: 1642, column: 1, scope: !14108)
!14123 = distinct !DISubprogram(name: "gimple_has_ops", scope: !2102, file: !2102, line: 1274, type: !14124, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14126)
!14124 = !DISubroutineType(types: !14125)
!14125 = !{!2174, !13070}
!14126 = !{!14127}
!14127 = !DILocalVariable(name: "g", arg: 1, scope: !14123, file: !2102, line: 1274, type: !13070)
!14128 = !DILocation(line: 0, scope: !14123)
!14129 = !DILocation(line: 1276, column: 10, scope: !14123)
!14130 = !DILocation(line: 1276, column: 26, scope: !14123)
!14131 = !DILocation(line: 1276, column: 41, scope: !14123)
!14132 = !DILocation(line: 1276, column: 44, scope: !14123)
!14133 = !DILocation(line: 1276, column: 60, scope: !14123)
!14134 = !DILocation(line: 1276, column: 3, scope: !14123)
!14135 = distinct !DISubprogram(name: "gimple_ops", scope: !2102, file: !2102, line: 1614, type: !14136, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14138)
!14136 = !DISubroutineType(types: !14137)
!14137 = !{!2797, !2762}
!14138 = !{!14139, !14140}
!14139 = !DILocalVariable(name: "gs", arg: 1, scope: !14135, file: !2102, line: 1614, type: !2762)
!14140 = !DILocalVariable(name: "off", scope: !14135, file: !2102, line: 1616, type: !2663)
!14141 = !DILocation(line: 0, scope: !14135)
!14142 = !DILocation(line: 1621, column: 28, scope: !14135)
!14143 = !DILocation(line: 1621, column: 9, scope: !14135)
!14144 = !DILocation(line: 1622, column: 3, scope: !14135)
!14145 = !DILocation(line: 1624, column: 20, scope: !14135)
!14146 = !DILocation(line: 1624, column: 32, scope: !14135)
!14147 = !DILocation(line: 1624, column: 10, scope: !14135)
!14148 = !DILocation(line: 1624, column: 3, scope: !14135)
!14149 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !2102, file: !2102, line: 1073, type: !14150, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14152)
!14150 = !DISubroutineType(types: !14151)
!14151 = !{!2146, !2762}
!14152 = !{!14153}
!14153 = !DILocalVariable(name: "gs", arg: 1, scope: !14149, file: !2102, line: 1073, type: !2762)
!14154 = !DILocation(line: 0, scope: !14149)
!14155 = !DILocation(line: 1075, column: 24, scope: !14149)
!14156 = !DILocation(line: 1075, column: 10, scope: !14149)
!14157 = !DILocation(line: 1075, column: 3, scope: !14149)
!14158 = distinct !DISubprogram(name: "gss_for_code", scope: !2102, file: !2102, line: 1061, type: !14159, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14161)
!14159 = !DISubroutineType(types: !14160)
!14160 = !{!2146, !2108}
!14161 = !{!14162}
!14162 = !DILocalVariable(name: "code", arg: 1, scope: !14158, file: !2102, line: 1061, type: !2108)
!14163 = !DILocation(line: 0, scope: !14158)
!14164 = !DILocation(line: 1066, column: 10, scope: !14158)
!14165 = !DILocation(line: 1066, column: 3, scope: !14158)
!14166 = distinct !DISubprogram(name: "gimple_num_ops", scope: !2102, file: !2102, line: 1596, type: !14167, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14169)
!14167 = !DISubroutineType(types: !14168)
!14168 = !{!7, !13070}
!14169 = !{!14170}
!14170 = !DILocalVariable(name: "gs", arg: 1, scope: !14166, file: !2102, line: 1596, type: !13070)
!14171 = !DILocation(line: 0, scope: !14166)
!14172 = !DILocation(line: 1598, column: 21, scope: !14166)
!14173 = !DILocation(line: 1598, column: 3, scope: !14166)
!14174 = distinct !DISubprogram(name: "all_zeros_p", scope: !3, file: !3, line: 5118, type: !10444, scopeLine: 5119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14175)
!14175 = !{!14176, !14177, !14180, !14181}
!14176 = !DILocalVariable(name: "exp", arg: 1, scope: !14174, file: !3, line: 5118, type: !8575)
!14177 = !DILocalVariable(name: "nz_elts", scope: !14178, file: !3, line: 5123, type: !2269)
!14178 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 5122, column: 5)
!14179 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 5120, column: 7)
!14180 = !DILocalVariable(name: "count", scope: !14178, file: !3, line: 5123, type: !2269)
!14181 = !DILocalVariable(name: "must_clear", scope: !14178, file: !3, line: 5124, type: !2174)
!14182 = !DILocation(line: 0, scope: !14174)
!14183 = !DILocation(line: 5120, column: 7, scope: !14179)
!14184 = !DILocation(line: 5120, column: 23, scope: !14179)
!14185 = !DILocation(line: 5120, column: 7, scope: !14174)
!14186 = !DILocation(line: 5123, column: 7, scope: !14178)
!14187 = !DILocation(line: 0, scope: !14178)
!14188 = !DILocation(line: 5124, column: 7, scope: !14178)
!14189 = !DILocation(line: 5126, column: 7, scope: !14178)
!14190 = !DILocation(line: 5127, column: 14, scope: !14178)
!14191 = !DILocation(line: 5127, column: 22, scope: !14178)
!14192 = !DILocation(line: 5128, column: 5, scope: !14179)
!14193 = !DILocation(line: 5130, column: 10, scope: !14174)
!14194 = !DILocation(line: 5130, column: 3, scope: !14174)
!14195 = !DILocation(line: 5131, column: 1, scope: !14174)
!14196 = distinct !DISubprogram(name: "mostly_zeros_p", scope: !3, file: !3, line: 5095, type: !10444, scopeLine: 5096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14197)
!14197 = !{!14198, !14199, !14202, !14203, !14204}
!14198 = !DILocalVariable(name: "exp", arg: 1, scope: !14196, file: !3, line: 5095, type: !8575)
!14199 = !DILocalVariable(name: "nz_elts", scope: !14200, file: !3, line: 5100, type: !2269)
!14200 = distinct !DILexicalBlock(scope: !14201, file: !3, line: 5099, column: 5)
!14201 = distinct !DILexicalBlock(scope: !14196, file: !3, line: 5097, column: 7)
!14202 = !DILocalVariable(name: "count", scope: !14200, file: !3, line: 5100, type: !2269)
!14203 = !DILocalVariable(name: "elts", scope: !14200, file: !3, line: 5100, type: !2269)
!14204 = !DILocalVariable(name: "must_clear", scope: !14200, file: !3, line: 5101, type: !2174)
!14205 = !DILocation(line: 0, scope: !14196)
!14206 = !DILocation(line: 5097, column: 7, scope: !14201)
!14207 = !DILocation(line: 5097, column: 23, scope: !14201)
!14208 = !DILocation(line: 5097, column: 7, scope: !14196)
!14209 = !DILocation(line: 5100, column: 7, scope: !14200)
!14210 = !DILocation(line: 0, scope: !14200)
!14211 = !DILocation(line: 5101, column: 7, scope: !14200)
!14212 = !DILocation(line: 5103, column: 7, scope: !14200)
!14213 = !DILocation(line: 5104, column: 11, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14200, file: !3, line: 5104, column: 11)
!14215 = !DILocation(line: 5104, column: 11, scope: !14200)
!14216 = !DILocation(line: 5107, column: 35, scope: !14200)
!14217 = !DILocation(line: 5107, column: 14, scope: !14200)
!14218 = !DILocation(line: 5109, column: 14, scope: !14200)
!14219 = !DILocation(line: 5109, column: 29, scope: !14200)
!14220 = !DILocation(line: 5109, column: 22, scope: !14200)
!14221 = !DILocation(line: 5109, column: 7, scope: !14200)
!14222 = !DILocation(line: 5110, column: 5, scope: !14201)
!14223 = !DILocation(line: 5112, column: 10, scope: !14196)
!14224 = !DILocation(line: 5112, column: 3, scope: !14196)
!14225 = !DILocation(line: 5113, column: 1, scope: !14196)
!14226 = distinct !DISubprogram(name: "store_constructor", scope: !3, file: !3, line: 5192, type: !14227, scopeLine: 5193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14229)
!14227 = !DISubroutineType(types: !14228)
!14228 = !{null, !2298, !2182, !2175, !2269}
!14229 = !{!14230, !14231, !14232, !14233, !14234, !14235, !14238, !14239, !14240, !14244, !14245, !14246, !14247, !14248, !14251, !14252, !14254, !14255, !14256, !14257, !14258, !14259, !14260, !14261, !14262, !14266, !14267, !14268, !14269, !14270, !14274, !14277, !14278, !14282, !14283, !14284, !14285, !14288, !14289, !14290, !14291, !14292, !14293, !14294, !14295, !14298, !14299, !14300, !14303, !14305, !14306, !14307, !14308, !14309, !14310, !14311, !14312, !14313, !14314, !14315, !14316, !14317, !14320, !14323, !14327, !14328, !14329, !14333, !14337, !14338}
!14230 = !DILocalVariable(name: "exp", arg: 1, scope: !14226, file: !3, line: 5192, type: !2298)
!14231 = !DILocalVariable(name: "target", arg: 2, scope: !14226, file: !3, line: 5192, type: !2182)
!14232 = !DILocalVariable(name: "cleared", arg: 3, scope: !14226, file: !3, line: 5192, type: !2175)
!14233 = !DILocalVariable(name: "size", arg: 4, scope: !14226, file: !3, line: 5192, type: !2269)
!14234 = !DILocalVariable(name: "type", scope: !14226, file: !3, line: 5194, type: !2298)
!14235 = !DILocalVariable(name: "idx", scope: !14236, file: !3, line: 5205, type: !2252)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 5204, column: 7)
!14237 = distinct !DILexicalBlock(scope: !14226, file: !3, line: 5200, column: 5)
!14238 = !DILocalVariable(name: "field", scope: !14236, file: !3, line: 5206, type: !2298)
!14239 = !DILocalVariable(name: "value", scope: !14236, file: !3, line: 5206, type: !2298)
!14240 = !DILocalVariable(name: "mode", scope: !14241, file: !3, line: 5256, type: !5)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !3, line: 5255, column: 4)
!14242 = distinct !DILexicalBlock(scope: !14243, file: !3, line: 5254, column: 2)
!14243 = distinct !DILexicalBlock(scope: !14236, file: !3, line: 5254, column: 2)
!14244 = !DILocalVariable(name: "bitsize", scope: !14241, file: !3, line: 5257, type: !2269)
!14245 = !DILocalVariable(name: "bitpos", scope: !14241, file: !3, line: 5258, type: !2269)
!14246 = !DILocalVariable(name: "offset", scope: !14241, file: !3, line: 5259, type: !2298)
!14247 = !DILocalVariable(name: "to_rtx", scope: !14241, file: !3, line: 5260, type: !2182)
!14248 = !DILocalVariable(name: "address_mode", scope: !14249, file: !3, line: 5291, type: !5)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 5290, column: 8)
!14250 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5289, column: 10)
!14251 = !DILocalVariable(name: "offset_rtx", scope: !14249, file: !3, line: 5292, type: !2182)
!14252 = !DILocalVariable(name: "value", scope: !14253, file: !3, line: 5359, type: !2298)
!14253 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 5358, column: 7)
!14254 = !DILocalVariable(name: "index", scope: !14253, file: !3, line: 5359, type: !2298)
!14255 = !DILocalVariable(name: "i", scope: !14253, file: !3, line: 5360, type: !2252)
!14256 = !DILocalVariable(name: "need_to_clear", scope: !14253, file: !3, line: 5361, type: !2175)
!14257 = !DILocalVariable(name: "domain", scope: !14253, file: !3, line: 5362, type: !2298)
!14258 = !DILocalVariable(name: "elttype", scope: !14253, file: !3, line: 5363, type: !2298)
!14259 = !DILocalVariable(name: "const_bounds_p", scope: !14253, file: !3, line: 5364, type: !2175)
!14260 = !DILocalVariable(name: "minelt", scope: !14253, file: !3, line: 5365, type: !2269)
!14261 = !DILocalVariable(name: "maxelt", scope: !14253, file: !3, line: 5366, type: !2269)
!14262 = !DILocalVariable(name: "idx", scope: !14263, file: !3, line: 5390, type: !2252)
!14263 = distinct !DILexicalBlock(scope: !14264, file: !3, line: 5389, column: 4)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !3, line: 5386, column: 11)
!14265 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 5384, column: 6)
!14266 = !DILocalVariable(name: "index", scope: !14263, file: !3, line: 5391, type: !2298)
!14267 = !DILocalVariable(name: "value", scope: !14263, file: !3, line: 5391, type: !2298)
!14268 = !DILocalVariable(name: "count", scope: !14263, file: !3, line: 5392, type: !2269)
!14269 = !DILocalVariable(name: "zero_count", scope: !14263, file: !3, line: 5392, type: !2269)
!14270 = !DILocalVariable(name: "this_node_count", scope: !14271, file: !3, line: 5400, type: !2269)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !3, line: 5399, column: 8)
!14272 = distinct !DILexicalBlock(scope: !14273, file: !3, line: 5398, column: 6)
!14273 = distinct !DILexicalBlock(scope: !14263, file: !3, line: 5398, column: 6)
!14274 = !DILocalVariable(name: "lo_index", scope: !14275, file: !3, line: 5407, type: !2298)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !3, line: 5406, column: 5)
!14276 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 5405, column: 7)
!14277 = !DILocalVariable(name: "hi_index", scope: !14275, file: !3, line: 5408, type: !2298)
!14278 = !DILocalVariable(name: "mode", scope: !14279, file: !3, line: 5455, type: !5)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 5454, column: 4)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !3, line: 5453, column: 2)
!14281 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 5453, column: 2)
!14282 = !DILocalVariable(name: "bitsize", scope: !14279, file: !3, line: 5456, type: !2269)
!14283 = !DILocalVariable(name: "bitpos", scope: !14279, file: !3, line: 5457, type: !2269)
!14284 = !DILocalVariable(name: "xtarget", scope: !14279, file: !3, line: 5458, type: !2182)
!14285 = !DILocalVariable(name: "lo_index", scope: !14286, file: !3, line: 5473, type: !2298)
!14286 = distinct !DILexicalBlock(scope: !14287, file: !3, line: 5472, column: 8)
!14287 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 5471, column: 10)
!14288 = !DILocalVariable(name: "hi_index", scope: !14286, file: !3, line: 5474, type: !2298)
!14289 = !DILocalVariable(name: "index_r", scope: !14286, file: !3, line: 5475, type: !2182)
!14290 = !DILocalVariable(name: "pos_rtx", scope: !14286, file: !3, line: 5475, type: !2182)
!14291 = !DILocalVariable(name: "lo", scope: !14286, file: !3, line: 5476, type: !2269)
!14292 = !DILocalVariable(name: "hi", scope: !14286, file: !3, line: 5476, type: !2269)
!14293 = !DILocalVariable(name: "count", scope: !14286, file: !3, line: 5476, type: !2269)
!14294 = !DILocalVariable(name: "position", scope: !14286, file: !3, line: 5477, type: !2298)
!14295 = !DILocalVariable(name: "loop_start", scope: !14296, file: !3, line: 5513, type: !2182)
!14296 = distinct !DILexicalBlock(scope: !14297, file: !3, line: 5512, column: 5)
!14297 = distinct !DILexicalBlock(scope: !14286, file: !3, line: 5480, column: 7)
!14298 = !DILocalVariable(name: "loop_end", scope: !14296, file: !3, line: 5514, type: !2182)
!14299 = !DILocalVariable(name: "exit_cond", scope: !14296, file: !3, line: 5515, type: !2298)
!14300 = !DILocalVariable(name: "position", scope: !14301, file: !3, line: 5573, type: !2298)
!14301 = distinct !DILexicalBlock(scope: !14302, file: !3, line: 5572, column: 8)
!14302 = distinct !DILexicalBlock(scope: !14287, file: !3, line: 5570, column: 15)
!14303 = !DILocalVariable(name: "idx", scope: !14304, file: !3, line: 5619, type: !2252)
!14304 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 5618, column: 7)
!14305 = !DILocalVariable(name: "ce", scope: !14304, file: !3, line: 5620, type: !10211)
!14306 = !DILocalVariable(name: "i", scope: !14304, file: !3, line: 5621, type: !2175)
!14307 = !DILocalVariable(name: "need_to_clear", scope: !14304, file: !3, line: 5622, type: !2175)
!14308 = !DILocalVariable(name: "icode", scope: !14304, file: !3, line: 5623, type: !2175)
!14309 = !DILocalVariable(name: "elttype", scope: !14304, file: !3, line: 5624, type: !2298)
!14310 = !DILocalVariable(name: "elt_size", scope: !14304, file: !3, line: 5625, type: !2175)
!14311 = !DILocalVariable(name: "eltmode", scope: !14304, file: !3, line: 5626, type: !5)
!14312 = !DILocalVariable(name: "bitsize", scope: !14304, file: !3, line: 5627, type: !2269)
!14313 = !DILocalVariable(name: "bitpos", scope: !14304, file: !3, line: 5628, type: !2269)
!14314 = !DILocalVariable(name: "vector", scope: !14304, file: !3, line: 5629, type: !2210)
!14315 = !DILocalVariable(name: "n_elts", scope: !14304, file: !3, line: 5630, type: !7)
!14316 = !DILocalVariable(name: "alias", scope: !14304, file: !3, line: 5631, type: !3193)
!14317 = !DILocalVariable(name: "mode", scope: !14318, file: !3, line: 5638, type: !5)
!14318 = distinct !DILexicalBlock(scope: !14319, file: !3, line: 5637, column: 4)
!14319 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 5636, column: 6)
!14320 = !DILocalVariable(name: "i", scope: !14321, file: !3, line: 5643, type: !7)
!14321 = distinct !DILexicalBlock(scope: !14322, file: !3, line: 5642, column: 8)
!14322 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 5641, column: 10)
!14323 = !DILocalVariable(name: "count", scope: !14324, file: !3, line: 5660, type: !2252)
!14324 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 5659, column: 4)
!14325 = distinct !DILexicalBlock(scope: !14326, file: !3, line: 5656, column: 11)
!14326 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 5654, column: 6)
!14327 = !DILocalVariable(name: "zero_count", scope: !14324, file: !3, line: 5660, type: !2252)
!14328 = !DILocalVariable(name: "value", scope: !14324, file: !3, line: 5661, type: !2298)
!14329 = !DILocalVariable(name: "n_elts_here", scope: !14330, file: !3, line: 5665, type: !2175)
!14330 = distinct !DILexicalBlock(scope: !14331, file: !3, line: 5664, column: 8)
!14331 = distinct !DILexicalBlock(scope: !14332, file: !3, line: 5663, column: 6)
!14332 = distinct !DILexicalBlock(scope: !14324, file: !3, line: 5663, column: 6)
!14333 = !DILocalVariable(name: "eltpos", scope: !14334, file: !3, line: 5704, type: !2269)
!14334 = distinct !DILexicalBlock(scope: !14335, file: !3, line: 5703, column: 4)
!14335 = distinct !DILexicalBlock(scope: !14336, file: !3, line: 5700, column: 2)
!14336 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 5700, column: 2)
!14337 = !DILocalVariable(name: "value", scope: !14334, file: !3, line: 5705, type: !2298)
!14338 = !DILocalVariable(name: "value_mode", scope: !14339, file: !3, line: 5726, type: !5)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !3, line: 5725, column: 8)
!14340 = distinct !DILexicalBlock(scope: !14334, file: !3, line: 5716, column: 10)
!14341 = !DILocation(line: 0, scope: !14226)
!14342 = !DILocation(line: 5194, column: 15, scope: !14226)
!14343 = !DILocation(line: 5199, column: 11, scope: !14226)
!14344 = !DILocation(line: 5199, column: 3, scope: !14226)
!14345 = !DILocation(line: 5209, column: 11, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14236, file: !3, line: 5209, column: 6)
!14347 = !DILocation(line: 5209, column: 19, scope: !14346)
!14348 = !DILocation(line: 5209, column: 16, scope: !14346)
!14349 = !DILocation(line: 5212, column: 29, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14346, file: !3, line: 5212, column: 11)
!14351 = !DILocation(line: 5213, column: 5, scope: !14350)
!14352 = !DILocation(line: 5213, column: 25, scope: !14350)
!14353 = !DILocation(line: 5214, column: 4, scope: !14350)
!14354 = !DILocation(line: 5214, column: 9, scope: !14350)
!14355 = !DILocation(line: 5212, column: 11, scope: !14346)
!14356 = !DILocation(line: 5217, column: 29, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14350, file: !3, line: 5216, column: 4)
!14358 = !DILocation(line: 5217, column: 6, scope: !14357)
!14359 = !DILocation(line: 5219, column: 4, scope: !14357)
!14360 = !DILocation(line: 5225, column: 11, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14350, file: !3, line: 5225, column: 11)
!14362 = !DILocation(line: 5225, column: 26, scope: !14361)
!14363 = !DILocation(line: 5225, column: 29, scope: !14361)
!14364 = !DILocation(line: 5226, column: 4, scope: !14361)
!14365 = !DILocation(line: 5226, column: 7, scope: !14361)
!14366 = !DILocation(line: 5226, column: 41, scope: !14361)
!14367 = !DILocation(line: 5225, column: 11, scope: !14350)
!14368 = !DILocation(line: 5228, column: 30, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14361, file: !3, line: 5227, column: 4)
!14370 = !DILocation(line: 5228, column: 6, scope: !14369)
!14371 = !DILocation(line: 5230, column: 4, scope: !14369)
!14372 = !DILocation(line: 5237, column: 16, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14361, file: !3, line: 5237, column: 11)
!14374 = !DILocation(line: 5238, column: 4, scope: !14373)
!14375 = !DILocation(line: 5238, column: 14, scope: !14373)
!14376 = !DILocation(line: 5239, column: 12, scope: !14373)
!14377 = !DILocation(line: 5239, column: 9, scope: !14373)
!14378 = !DILocation(line: 5240, column: 8, scope: !14373)
!14379 = !DILocation(line: 5240, column: 11, scope: !14373)
!14380 = !DILocation(line: 5241, column: 4, scope: !14373)
!14381 = !DILocation(line: 5241, column: 9, scope: !14373)
!14382 = !DILocation(line: 5242, column: 8, scope: !14373)
!14383 = !DILocation(line: 5242, column: 28, scope: !14373)
!14384 = !DILocation(line: 5242, column: 12, scope: !14373)
!14385 = !DILocation(line: 5243, column: 5, scope: !14373)
!14386 = !DILocation(line: 5237, column: 11, scope: !14361)
!14387 = !DILocation(line: 5245, column: 29, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 5244, column: 4)
!14389 = !DILocation(line: 5245, column: 6, scope: !14388)
!14390 = !DILocation(line: 5247, column: 4, scope: !14388)
!14391 = !DILocation(line: 0, scope: !14346)
!14392 = !DILocation(line: 5249, column: 6, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14236, file: !3, line: 5249, column: 6)
!14394 = !DILocation(line: 5249, column: 25, scope: !14393)
!14395 = !DILocation(line: 5249, column: 21, scope: !14393)
!14396 = !DILocation(line: 5250, column: 4, scope: !14393)
!14397 = !DILocation(line: 0, scope: !14236)
!14398 = !DILocation(line: 0, scope: !14242)
!14399 = !DILocation(line: 0, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5267, column: 10)
!14401 = !DILocation(line: 0, scope: !14249)
!14402 = !DILocation(line: 5254, column: 2, scope: !14243)
!14403 = !DILocation(line: 0, scope: !14243)
!14404 = !DILocation(line: 5254, column: 2, scope: !14242)
!14405 = !DILocation(line: 0, scope: !14241)
!14406 = !DILocation(line: 5264, column: 16, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5264, column: 10)
!14408 = !DILocation(line: 5264, column: 10, scope: !14241)
!14409 = !DILocation(line: 5267, column: 18, scope: !14400)
!14410 = !DILocation(line: 5267, column: 21, scope: !14400)
!14411 = !DILocation(line: 5267, column: 10, scope: !14241)
!14412 = !DILocation(line: 5270, column: 25, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5270, column: 10)
!14414 = !DILocation(line: 5270, column: 10, scope: !14413)
!14415 = !DILocation(line: 5270, column: 10, scope: !14241)
!14416 = !DILocation(line: 5271, column: 32, scope: !14413)
!14417 = !DILocation(line: 5271, column: 18, scope: !14413)
!14418 = !DILocation(line: 5271, column: 8, scope: !14413)
!14419 = !DILocation(line: 0, scope: !14413)
!14420 = !DILocation(line: 5275, column: 13, scope: !14241)
!14421 = !DILocation(line: 5276, column: 10, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5276, column: 10)
!14423 = !DILocation(line: 5276, column: 10, scope: !14241)
!14424 = !DILocation(line: 5279, column: 15, scope: !14241)
!14425 = !DILocation(line: 5280, column: 10, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5280, column: 10)
!14427 = !DILocation(line: 5281, column: 3, scope: !14426)
!14428 = !DILocation(line: 5281, column: 21, scope: !14426)
!14429 = !DILocation(line: 5281, column: 6, scope: !14426)
!14430 = !DILocation(line: 5280, column: 10, scope: !14241)
!14431 = !DILocation(line: 5283, column: 12, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14426, file: !3, line: 5282, column: 8)
!14433 = !DILocation(line: 5285, column: 8, scope: !14432)
!14434 = !DILocation(line: 5287, column: 31, scope: !14426)
!14435 = !DILocation(line: 5287, column: 17, scope: !14426)
!14436 = !DILocation(line: 0, scope: !14426)
!14437 = !DILocation(line: 5289, column: 10, scope: !14250)
!14438 = !DILocation(line: 5289, column: 10, scope: !14241)
!14439 = !DILocation(line: 5295, column: 7, scope: !14249)
!14440 = !DILocation(line: 5299, column: 16, scope: !14249)
!14441 = !DILocation(line: 5300, column: 3, scope: !14249)
!14442 = !DILocation(line: 5303, column: 26, scope: !14249)
!14443 = !DILocation(line: 5303, column: 40, scope: !14249)
!14444 = !DILocation(line: 5303, column: 7, scope: !14249)
!14445 = !DILocation(line: 5304, column: 7, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 5304, column: 7)
!14447 = !DILocation(line: 5304, column: 29, scope: !14446)
!14448 = !DILocation(line: 5304, column: 7, scope: !14249)
!14449 = !DILocation(line: 5305, column: 18, scope: !14446)
!14450 = !DILocation(line: 5305, column: 5, scope: !14446)
!14451 = !DILocation(line: 5308, column: 7, scope: !14249)
!14452 = !DILocation(line: 5307, column: 12, scope: !14249)
!14453 = !DILocation(line: 5309, column: 8, scope: !14249)
!14454 = !DILocation(line: 5344, column: 10, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5344, column: 10)
!14456 = !DILocation(line: 5344, column: 25, scope: !14455)
!14457 = !DILocation(line: 5344, column: 29, scope: !14455)
!14458 = !DILocation(line: 5345, column: 3, scope: !14455)
!14459 = !DILocation(line: 5345, column: 6, scope: !14455)
!14460 = !DILocation(line: 5344, column: 10, scope: !14241)
!14461 = !DILocation(line: 5347, column: 12, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14455, file: !3, line: 5346, column: 8)
!14463 = !DILocation(line: 5348, column: 3, scope: !14462)
!14464 = !DILocation(line: 5348, column: 33, scope: !14462)
!14465 = !DILocation(line: 5349, column: 8, scope: !14462)
!14466 = !DILocation(line: 5353, column: 25, scope: !14241)
!14467 = !DILocation(line: 5353, column: 10, scope: !14241)
!14468 = !DILocation(line: 5351, column: 6, scope: !14241)
!14469 = !DILocation(line: 5354, column: 4, scope: !14242)
!14470 = distinct !{!14470, !14402, !14471}
!14471 = !DILocation(line: 5354, column: 4, scope: !14243)
!14472 = !DILocation(line: 5363, column: 17, scope: !14253)
!14473 = !DILocation(line: 0, scope: !14253)
!14474 = !DILocation(line: 5368, column: 11, scope: !14253)
!14475 = !DILocation(line: 5369, column: 20, scope: !14253)
!14476 = !DILocation(line: 5370, column: 6, scope: !14253)
!14477 = !DILocation(line: 5370, column: 9, scope: !14253)
!14478 = !DILocation(line: 5371, column: 6, scope: !14253)
!14479 = !DILocation(line: 5371, column: 9, scope: !14253)
!14480 = !DILocation(line: 5372, column: 6, scope: !14253)
!14481 = !DILocation(line: 5372, column: 24, scope: !14253)
!14482 = !DILocation(line: 5372, column: 9, scope: !14253)
!14483 = !DILocation(line: 5375, column: 6, scope: !14253)
!14484 = !DILocation(line: 5377, column: 29, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14486, file: !3, line: 5376, column: 4)
!14486 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 5375, column: 6)
!14487 = !DILocation(line: 5377, column: 15, scope: !14485)
!14488 = !DILocation(line: 5378, column: 29, scope: !14485)
!14489 = !DILocation(line: 5378, column: 15, scope: !14485)
!14490 = !DILocation(line: 5379, column: 4, scope: !14485)
!14491 = !DILocation(line: 5384, column: 6, scope: !14265)
!14492 = !DILocation(line: 5384, column: 6, scope: !14253)
!14493 = !DILocation(line: 5386, column: 11, scope: !14264)
!14494 = !DILocation(line: 5386, column: 26, scope: !14264)
!14495 = !DILocation(line: 5386, column: 29, scope: !14264)
!14496 = !DILocation(line: 5386, column: 11, scope: !14265)
!14497 = !DILocation(line: 0, scope: !14263)
!14498 = !DILocation(line: 5393, column: 22, scope: !14263)
!14499 = !DILocation(line: 0, scope: !14272)
!14500 = !DILocation(line: 5398, column: 6, scope: !14273)
!14501 = !DILocation(line: 5392, column: 31, scope: !14263)
!14502 = !DILocation(line: 5392, column: 20, scope: !14263)
!14503 = !DILocation(line: 0, scope: !14273)
!14504 = !DILocation(line: 5393, column: 20, scope: !14263)
!14505 = !DILocation(line: 0, scope: !14271)
!14506 = !DILocation(line: 5398, column: 6, scope: !14272)
!14507 = !DILocation(line: 5402, column: 7, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 5402, column: 7)
!14509 = !DILocation(line: 5402, column: 7, scope: !14271)
!14510 = !DILocation(line: 5405, column: 13, scope: !14276)
!14511 = !DILocation(line: 5405, column: 26, scope: !14276)
!14512 = !DILocation(line: 5405, column: 29, scope: !14276)
!14513 = !DILocation(line: 5405, column: 47, scope: !14276)
!14514 = !DILocation(line: 5405, column: 7, scope: !14271)
!14515 = !DILocation(line: 5407, column: 23, scope: !14275)
!14516 = !DILocation(line: 0, scope: !14275)
!14517 = !DILocation(line: 5408, column: 23, scope: !14275)
!14518 = !DILocation(line: 5410, column: 13, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14275, file: !3, line: 5410, column: 11)
!14520 = !DILocation(line: 5411, column: 4, scope: !14519)
!14521 = !DILocation(line: 5411, column: 9, scope: !14519)
!14522 = !DILocation(line: 5410, column: 11, scope: !14275)
!14523 = !DILocation(line: 5417, column: 26, scope: !14275)
!14524 = !DILocation(line: 5418, column: 14, scope: !14275)
!14525 = !DILocation(line: 5418, column: 12, scope: !14275)
!14526 = !DILocation(line: 5418, column: 41, scope: !14275)
!14527 = !DILocation(line: 5419, column: 5, scope: !14276)
!14528 = !DILocation(line: 0, scope: !14276)
!14529 = !DILocation(line: 5423, column: 9, scope: !14271)
!14530 = !DILocation(line: 5424, column: 7, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 5424, column: 7)
!14532 = !DILocation(line: 5424, column: 7, scope: !14271)
!14533 = !DILocation(line: 5426, column: 8, scope: !14272)
!14534 = distinct !{!14534, !14500, !14535}
!14535 = !DILocation(line: 5426, column: 8, scope: !14273)
!14536 = !DILocation(line: 5431, column: 12, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14263, file: !3, line: 5431, column: 10)
!14538 = !DILocation(line: 5432, column: 3, scope: !14537)
!14539 = !DILocation(line: 5432, column: 22, scope: !14537)
!14540 = !DILocation(line: 5432, column: 13, scope: !14537)
!14541 = !DILocation(line: 5433, column: 7, scope: !14537)
!14542 = !DILocation(line: 5433, column: 12, scope: !14537)
!14543 = !DILocation(line: 5433, column: 30, scope: !14537)
!14544 = !DILocation(line: 5433, column: 25, scope: !14537)
!14545 = !DILocation(line: 5431, column: 10, scope: !14263)
!14546 = !DILocation(line: 5434, column: 8, scope: !14537)
!14547 = !DILocation(line: 0, scope: !14265)
!14548 = !DILocation(line: 5437, column: 6, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 5437, column: 6)
!14550 = !DILocation(line: 5437, column: 28, scope: !14549)
!14551 = !DILocation(line: 5437, column: 20, scope: !14549)
!14552 = !DILocation(line: 5439, column: 10, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 5439, column: 10)
!14554 = distinct !DILexicalBlock(scope: !14549, file: !3, line: 5438, column: 4)
!14555 = !DILocation(line: 5439, column: 10, scope: !14554)
!14556 = !DILocation(line: 5440, column: 33, scope: !14553)
!14557 = !DILocation(line: 5440, column: 8, scope: !14553)
!14558 = !DILocation(line: 5442, column: 31, scope: !14553)
!14559 = !DILocation(line: 5442, column: 8, scope: !14553)
!14560 = !DILocation(line: 5446, column: 7, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 5446, column: 6)
!14562 = !DILocation(line: 5446, column: 15, scope: !14561)
!14563 = !DILocation(line: 5446, column: 18, scope: !14561)
!14564 = !DILocation(line: 5446, column: 6, scope: !14253)
!14565 = !DILocation(line: 5448, column: 4, scope: !14561)
!14566 = !DILocation(line: 0, scope: !14280)
!14567 = !DILocation(line: 0, scope: !14279)
!14568 = !DILocation(line: 0, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 5464, column: 10)
!14570 = !DILocation(line: 0, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 5497, column: 8)
!14572 = distinct !DILexicalBlock(scope: !14573, file: !3, line: 5494, column: 9)
!14573 = distinct !DILexicalBlock(scope: !14574, file: !3, line: 5493, column: 7)
!14574 = distinct !DILexicalBlock(scope: !14575, file: !3, line: 5493, column: 7)
!14575 = distinct !DILexicalBlock(scope: !14297, file: !3, line: 5491, column: 5)
!14576 = !DILocation(line: 0, scope: !14296)
!14577 = !DILocation(line: 0, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 5578, column: 7)
!14579 = !DILocation(line: 5453, column: 2, scope: !14281)
!14580 = !DILocation(line: 0, scope: !14281)
!14581 = !DILocation(line: 5453, column: 2, scope: !14280)
!14582 = !DILocation(line: 5460, column: 18, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 5460, column: 10)
!14584 = !DILocation(line: 5460, column: 21, scope: !14583)
!14585 = !DILocation(line: 5460, column: 10, scope: !14279)
!14586 = !DILocation(line: 5463, column: 13, scope: !14279)
!14587 = !DILocation(line: 5464, column: 15, scope: !14569)
!14588 = !DILocation(line: 5464, column: 10, scope: !14279)
!14589 = !DILocation(line: 5465, column: 34, scope: !14569)
!14590 = !DILocation(line: 5465, column: 19, scope: !14569)
!14591 = !DILocation(line: 5466, column: 21, scope: !14569)
!14592 = !DILocation(line: 5466, column: 7, scope: !14569)
!14593 = !DILocation(line: 5469, column: 18, scope: !14569)
!14594 = !DILocation(line: 5471, column: 29, scope: !14287)
!14595 = !DILocation(line: 5471, column: 32, scope: !14287)
!14596 = !DILocation(line: 5471, column: 50, scope: !14287)
!14597 = !DILocation(line: 5471, column: 10, scope: !14279)
!14598 = !DILocation(line: 5473, column: 19, scope: !14286)
!14599 = !DILocation(line: 0, scope: !14286)
!14600 = !DILocation(line: 5474, column: 19, scope: !14286)
!14601 = !DILocation(line: 5481, column: 7, scope: !14297)
!14602 = !DILocation(line: 5481, column: 10, scope: !14297)
!14603 = !DILocation(line: 5482, column: 7, scope: !14297)
!14604 = !DILocation(line: 5482, column: 10, scope: !14297)
!14605 = !DILocation(line: 5483, column: 7, scope: !14297)
!14606 = !DILocation(line: 5483, column: 16, scope: !14297)
!14607 = !DILocation(line: 5484, column: 9, scope: !14297)
!14608 = !DILocation(line: 5485, column: 15, scope: !14297)
!14609 = !DILocation(line: 5485, column: 20, scope: !14297)
!14610 = !DILocation(line: 5486, column: 6, scope: !14297)
!14611 = !DILocation(line: 5487, column: 14, scope: !14297)
!14612 = !DILocation(line: 5487, column: 5, scope: !14297)
!14613 = !DILocation(line: 5488, column: 24, scope: !14297)
!14614 = !DILocation(line: 5488, column: 9, scope: !14297)
!14615 = !DILocation(line: 5489, column: 9, scope: !14297)
!14616 = !DILocation(line: 5489, column: 27, scope: !14297)
!14617 = !DILocation(line: 5489, column: 13, scope: !14297)
!14618 = !DILocation(line: 5489, column: 51, scope: !14297)
!14619 = !DILocation(line: 5490, column: 6, scope: !14297)
!14620 = !DILocation(line: 5480, column: 7, scope: !14286)
!14621 = !DILocation(line: 5492, column: 10, scope: !14575)
!14622 = !DILocation(line: 5492, column: 25, scope: !14575)
!14623 = !DILocation(line: 5493, column: 7, scope: !14575)
!14624 = !DILocation(line: 0, scope: !14575)
!14625 = !DILocation(line: 5493, column: 17, scope: !14573)
!14626 = !DILocation(line: 5493, column: 7, scope: !14574)
!14627 = !DILocation(line: 5495, column: 32, scope: !14572)
!14628 = !DILocation(line: 5495, column: 18, scope: !14572)
!14629 = !DILocation(line: 5495, column: 16, scope: !14572)
!14630 = !DILocation(line: 5497, column: 8, scope: !14571)
!14631 = !DILocation(line: 5498, column: 8, scope: !14571)
!14632 = !DILocation(line: 5498, column: 12, scope: !14571)
!14633 = !DILocation(line: 5499, column: 8, scope: !14571)
!14634 = !DILocation(line: 5499, column: 11, scope: !14571)
!14635 = !DILocation(line: 5499, column: 28, scope: !14571)
!14636 = !DILocation(line: 5500, column: 8, scope: !14571)
!14637 = !DILocation(line: 5500, column: 11, scope: !14571)
!14638 = !DILocation(line: 5497, column: 8, scope: !14572)
!14639 = !DILocation(line: 5502, column: 17, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 5501, column: 6)
!14641 = !DILocation(line: 5503, column: 8, scope: !14640)
!14642 = !DILocation(line: 5503, column: 38, scope: !14640)
!14643 = !DILocation(line: 5504, column: 6, scope: !14640)
!14644 = !DILocation(line: 5508, column: 7, scope: !14572)
!14645 = !DILocation(line: 5506, column: 4, scope: !14572)
!14646 = !DILocation(line: 5493, column: 26, scope: !14573)
!14647 = !DILocation(line: 5493, column: 7, scope: !14573)
!14648 = distinct !{!14648, !14626, !14649}
!14649 = !DILocation(line: 5509, column: 9, scope: !14574)
!14650 = !DILocation(line: 5513, column: 24, scope: !14296)
!14651 = !DILocation(line: 5514, column: 22, scope: !14296)
!14652 = !DILocation(line: 5517, column: 7, scope: !14296)
!14653 = !DILocation(line: 5519, column: 15, scope: !14296)
!14654 = !DILocation(line: 5521, column: 30, scope: !14296)
!14655 = !DILocation(line: 5521, column: 17, scope: !14296)
!14656 = !DILocation(line: 5522, column: 7, scope: !14296)
!14657 = !DILocation(line: 5523, column: 7, scope: !14296)
!14658 = !DILocation(line: 5526, column: 7, scope: !14296)
!14659 = !DILocation(line: 5527, column: 7, scope: !14296)
!14660 = !DILocation(line: 5531, column: 9, scope: !14296)
!14661 = !DILocation(line: 5538, column: 4, scope: !14296)
!14662 = !DILocation(line: 5542, column: 17, scope: !14296)
!14663 = !DILocation(line: 5544, column: 12, scope: !14296)
!14664 = !DILocation(line: 5543, column: 17, scope: !14296)
!14665 = !DILocation(line: 5545, column: 17, scope: !14296)
!14666 = !DILocation(line: 5546, column: 11, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14296, file: !3, line: 5546, column: 11)
!14668 = !DILocation(line: 5546, column: 29, scope: !14667)
!14669 = !DILocation(line: 5546, column: 11, scope: !14296)
!14670 = !DILocation(line: 5548, column: 15, scope: !14667)
!14671 = !DILocation(line: 5547, column: 9, scope: !14667)
!14672 = !DILocation(line: 5550, column: 9, scope: !14667)
!14673 = !DILocation(line: 5553, column: 19, scope: !14296)
!14674 = !DILocation(line: 5555, column: 7, scope: !14296)
!14675 = !DILocation(line: 5560, column: 12, scope: !14296)
!14676 = !DILocation(line: 5559, column: 7, scope: !14296)
!14677 = !DILocation(line: 5564, column: 7, scope: !14296)
!14678 = !DILocation(line: 5567, column: 7, scope: !14296)
!14679 = !DILocation(line: 5570, column: 32, scope: !14302)
!14680 = !DILocation(line: 5571, column: 8, scope: !14302)
!14681 = !DILocation(line: 5571, column: 28, scope: !14302)
!14682 = !DILocation(line: 5571, column: 13, scope: !14302)
!14683 = !DILocation(line: 5570, column: 15, scope: !14287)
!14684 = !DILocation(line: 5575, column: 7, scope: !14301)
!14685 = !DILocation(line: 5576, column: 13, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 5575, column: 7)
!14687 = !DILocation(line: 5576, column: 5, scope: !14686)
!14688 = !DILocation(line: 5578, column: 7, scope: !14301)
!14689 = !DILocation(line: 5579, column: 13, scope: !14578)
!14690 = !DILocation(line: 5579, column: 5, scope: !14578)
!14691 = !DILocation(line: 0, scope: !14301)
!14692 = !DILocation(line: 5586, column: 5, scope: !14301)
!14693 = !DILocation(line: 5590, column: 8, scope: !14301)
!14694 = !DILocation(line: 5591, column: 8, scope: !14301)
!14695 = !DILocation(line: 5589, column: 13, scope: !14301)
!14696 = !DILocation(line: 5592, column: 13, scope: !14301)
!14697 = !DILocation(line: 5593, column: 3, scope: !14301)
!14698 = !DILocation(line: 5594, column: 8, scope: !14301)
!14699 = !DILocation(line: 5597, column: 7, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14302, file: !3, line: 5596, column: 8)
!14701 = !DILocation(line: 5598, column: 16, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14700, file: !3, line: 5597, column: 7)
!14703 = !DILocation(line: 5598, column: 40, scope: !14702)
!14704 = !DILocation(line: 5599, column: 24, scope: !14702)
!14705 = !DILocation(line: 5599, column: 10, scope: !14702)
!14706 = !DILocation(line: 5599, column: 8, scope: !14702)
!14707 = !DILocation(line: 5598, column: 5, scope: !14702)
!14708 = !DILocation(line: 5601, column: 33, scope: !14702)
!14709 = !DILocation(line: 5601, column: 19, scope: !14702)
!14710 = !DILocation(line: 5601, column: 17, scope: !14702)
!14711 = !DILocation(line: 0, scope: !14702)
!14712 = !DILocation(line: 5603, column: 7, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14700, file: !3, line: 5603, column: 7)
!14714 = !DILocation(line: 5603, column: 22, scope: !14713)
!14715 = !DILocation(line: 5603, column: 26, scope: !14713)
!14716 = !DILocation(line: 5604, column: 7, scope: !14713)
!14717 = !DILocation(line: 5604, column: 10, scope: !14713)
!14718 = !DILocation(line: 5604, column: 27, scope: !14713)
!14719 = !DILocation(line: 5605, column: 7, scope: !14713)
!14720 = !DILocation(line: 5605, column: 10, scope: !14713)
!14721 = !DILocation(line: 5603, column: 7, scope: !14700)
!14722 = !DILocation(line: 5607, column: 16, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 5606, column: 5)
!14724 = !DILocation(line: 5608, column: 7, scope: !14723)
!14725 = !DILocation(line: 5608, column: 37, scope: !14723)
!14726 = !DILocation(line: 5609, column: 5, scope: !14723)
!14727 = !DILocation(line: 5611, column: 22, scope: !14700)
!14728 = !DILocation(line: 5610, column: 3, scope: !14700)
!14729 = distinct !{!14729, !14579, !14730}
!14730 = !DILocation(line: 5613, column: 4, scope: !14281)
!14731 = !DILocation(line: 5620, column: 2, scope: !14304)
!14732 = !DILocation(line: 0, scope: !14304)
!14733 = !DILocation(line: 5624, column: 17, scope: !14304)
!14734 = !DILocation(line: 5625, column: 31, scope: !14304)
!14735 = !DILocation(line: 5625, column: 17, scope: !14304)
!14736 = !DILocation(line: 5626, column: 30, scope: !14304)
!14737 = !DILocation(line: 5633, column: 2, scope: !14304)
!14738 = !DILocation(line: 5635, column: 11, scope: !14304)
!14739 = !DILocation(line: 5636, column: 6, scope: !14319)
!14740 = !DILocation(line: 5636, column: 21, scope: !14319)
!14741 = !DILocation(line: 5636, column: 24, scope: !14319)
!14742 = !DILocation(line: 5636, column: 6, scope: !14304)
!14743 = !DILocation(line: 0, scope: !14318)
!14744 = !DILocation(line: 5640, column: 58, scope: !14318)
!14745 = !DILocation(line: 5641, column: 16, scope: !14322)
!14746 = !DILocation(line: 5641, column: 10, scope: !14318)
!14747 = !DILocation(line: 5645, column: 12, scope: !14321)
!14748 = !DILocation(line: 0, scope: !14321)
!14749 = !DILocation(line: 0, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 5646, column: 3)
!14751 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 5646, column: 3)
!14752 = !DILocation(line: 5646, column: 17, scope: !14750)
!14753 = !DILocation(line: 5646, column: 8, scope: !14751)
!14754 = !DILocation(line: 0, scope: !14751)
!14755 = !DILocation(line: 5646, column: 3, scope: !14751)
!14756 = !DILocation(line: 5647, column: 29, scope: !14750)
!14757 = !DILocation(line: 5647, column: 5, scope: !14750)
!14758 = !DILocation(line: 5647, column: 27, scope: !14750)
!14759 = !DILocation(line: 5646, column: 28, scope: !14750)
!14760 = !DILocation(line: 5646, column: 3, scope: !14750)
!14761 = distinct !{!14761, !14755, !14762}
!14762 = !DILocation(line: 5647, column: 29, scope: !14751)
!14763 = !DILocation(line: 5654, column: 6, scope: !14326)
!14764 = !DILocation(line: 5654, column: 6, scope: !14304)
!14765 = !DILocation(line: 5656, column: 11, scope: !14325)
!14766 = !DILocation(line: 5656, column: 26, scope: !14325)
!14767 = !DILocation(line: 5656, column: 29, scope: !14325)
!14768 = !DILocation(line: 5656, column: 11, scope: !14326)
!14769 = !DILocation(line: 0, scope: !14324)
!14770 = !DILocation(line: 0, scope: !14331)
!14771 = !DILocation(line: 5663, column: 6, scope: !14332)
!14772 = !DILocation(line: 0, scope: !14332)
!14773 = !DILocation(line: 5663, column: 6, scope: !14331)
!14774 = !DILocation(line: 5667, column: 9, scope: !14330)
!14775 = !DILocation(line: 5668, column: 9, scope: !14330)
!14776 = !DILocation(line: 5666, column: 6, scope: !14330)
!14777 = !DILocation(line: 5665, column: 21, scope: !14330)
!14778 = !DILocation(line: 5670, column: 12, scope: !14330)
!14779 = !DILocation(line: 5670, column: 9, scope: !14330)
!14780 = !DILocation(line: 5671, column: 7, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 5671, column: 7)
!14782 = !DILocation(line: 5671, column: 7, scope: !14330)
!14783 = distinct !{!14783, !14771, !14784}
!14784 = !DILocation(line: 5673, column: 8, scope: !14332)
!14785 = !DILocation(line: 5677, column: 31, scope: !14324)
!14786 = !DILocation(line: 5677, column: 29, scope: !14324)
!14787 = !DILocation(line: 5677, column: 38, scope: !14324)
!14788 = !DILocation(line: 5677, column: 43, scope: !14324)
!14789 = !DILocation(line: 5677, column: 61, scope: !14324)
!14790 = !DILocation(line: 5677, column: 56, scope: !14324)
!14791 = !DILocation(line: 0, scope: !14326)
!14792 = !DILocation(line: 5680, column: 6, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 5680, column: 6)
!14794 = !DILocation(line: 5680, column: 28, scope: !14793)
!14795 = !DILocation(line: 5680, column: 20, scope: !14793)
!14796 = !DILocation(line: 5680, column: 36, scope: !14793)
!14797 = !DILocation(line: 5682, column: 10, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14799, file: !3, line: 5682, column: 10)
!14799 = distinct !DILexicalBlock(scope: !14793, file: !3, line: 5681, column: 4)
!14800 = !DILocation(line: 5682, column: 10, scope: !14799)
!14801 = !DILocation(line: 5683, column: 32, scope: !14798)
!14802 = !DILocation(line: 5683, column: 8, scope: !14798)
!14803 = !DILocation(line: 5685, column: 31, scope: !14798)
!14804 = !DILocation(line: 5685, column: 8, scope: !14798)
!14805 = !DILocation(line: 5690, column: 7, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 5690, column: 6)
!14807 = !DILocation(line: 5690, column: 15, scope: !14806)
!14808 = !DILocation(line: 5690, column: 29, scope: !14806)
!14809 = !DILocation(line: 5690, column: 6, scope: !14304)
!14810 = !DILocation(line: 5691, column: 28, scope: !14806)
!14811 = !DILocation(line: 5691, column: 4, scope: !14806)
!14812 = !DILocation(line: 5693, column: 13, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 5693, column: 13)
!14814 = !DILocation(line: 5693, column: 13, scope: !14304)
!14815 = !DILocation(line: 5694, column: 12, scope: !14813)
!14816 = !DILocation(line: 5696, column: 12, scope: !14813)
!14817 = !DILocation(line: 0, scope: !14813)
!14818 = !DILocation(line: 0, scope: !14335)
!14819 = !DILocation(line: 0, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14334, file: !3, line: 5708, column: 10)
!14821 = !DILocation(line: 0, scope: !14340)
!14822 = !DILocation(line: 0, scope: !14339)
!14823 = !DILocation(line: 5700, column: 7, scope: !14336)
!14824 = !DILocation(line: 0, scope: !14336)
!14825 = !DILocation(line: 5701, column: 7, scope: !14335)
!14826 = !DILocation(line: 5700, column: 2, scope: !14336)
!14827 = !DILocation(line: 5705, column: 19, scope: !14334)
!14828 = !DILocation(line: 5705, column: 23, scope: !14334)
!14829 = !DILocation(line: 0, scope: !14334)
!14830 = !DILocation(line: 5707, column: 30, scope: !14334)
!14831 = !DILocation(line: 5707, column: 16, scope: !14334)
!14832 = !DILocation(line: 5711, column: 10, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14334, file: !3, line: 5711, column: 10)
!14834 = !DILocation(line: 5711, column: 14, scope: !14833)
!14835 = !DILocation(line: 5711, column: 10, scope: !14334)
!14836 = !DILocation(line: 5712, column: 17, scope: !14833)
!14837 = !DILocation(line: 5712, column: 8, scope: !14833)
!14838 = !DILocation(line: 5714, column: 17, scope: !14833)
!14839 = !DILocation(line: 0, scope: !14833)
!14840 = !DILocation(line: 5716, column: 10, scope: !14334)
!14841 = !DILocation(line: 5720, column: 3, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14340, file: !3, line: 5717, column: 8)
!14843 = !DILocation(line: 5722, column: 7, scope: !14842)
!14844 = !DILocation(line: 5721, column: 3, scope: !14842)
!14845 = !DILocation(line: 5722, column: 5, scope: !14842)
!14846 = !DILocation(line: 5723, column: 8, scope: !14842)
!14847 = !DILocation(line: 5727, column: 35, scope: !14339)
!14848 = !DILocation(line: 5727, column: 5, scope: !14339)
!14849 = !DILocation(line: 5728, column: 7, scope: !14339)
!14850 = !DILocation(line: 5730, column: 19, scope: !14339)
!14851 = !DILocation(line: 5731, column: 3, scope: !14339)
!14852 = !DILocation(line: 5702, column: 10, scope: !14335)
!14853 = !DILocation(line: 5702, column: 27, scope: !14335)
!14854 = !DILocation(line: 5702, column: 16, scope: !14335)
!14855 = !DILocation(line: 5700, column: 2, scope: !14335)
!14856 = distinct !{!14856, !14826, !14857}
!14857 = !DILocation(line: 5735, column: 4, scope: !14336)
!14858 = !DILocation(line: 5737, column: 6, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 5737, column: 6)
!14860 = !DILocation(line: 5708, column: 21, scope: !14820)
!14861 = !DILocation(line: 5708, column: 10, scope: !14334)
!14862 = !DILocation(line: 5737, column: 6, scope: !14304)
!14863 = !DILocation(line: 5738, column: 15, scope: !14859)
!14864 = !DILocation(line: 5740, column: 9, scope: !14859)
!14865 = !DILocation(line: 5738, column: 4, scope: !14859)
!14866 = !DILocation(line: 5742, column: 7, scope: !14237)
!14867 = !DILocation(line: 5745, column: 7, scope: !14237)
!14868 = !DILocation(line: 5746, column: 5, scope: !14237)
!14869 = !DILocation(line: 5747, column: 1, scope: !14226)
!14870 = distinct !DISubprogram(name: "store_constructor_field", scope: !3, file: !3, line: 5145, type: !14871, scopeLine: 5149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14873)
!14871 = !DISubroutineType(types: !14872)
!14872 = !{null, !2182, !2252, !2269, !5, !2298, !2298, !2175, !3193}
!14873 = !{!14874, !14875, !14876, !14877, !14878, !14879, !14880, !14881}
!14874 = !DILocalVariable(name: "target", arg: 1, scope: !14870, file: !3, line: 5145, type: !2182)
!14875 = !DILocalVariable(name: "bitsize", arg: 2, scope: !14870, file: !3, line: 5145, type: !2252)
!14876 = !DILocalVariable(name: "bitpos", arg: 3, scope: !14870, file: !3, line: 5146, type: !2269)
!14877 = !DILocalVariable(name: "mode", arg: 4, scope: !14870, file: !3, line: 5146, type: !5)
!14878 = !DILocalVariable(name: "exp", arg: 5, scope: !14870, file: !3, line: 5147, type: !2298)
!14879 = !DILocalVariable(name: "type", arg: 6, scope: !14870, file: !3, line: 5147, type: !2298)
!14880 = !DILocalVariable(name: "cleared", arg: 7, scope: !14870, file: !3, line: 5147, type: !2175)
!14881 = !DILocalVariable(name: "alias_set", arg: 8, scope: !14870, file: !3, line: 5148, type: !3193)
!14882 = !DILocation(line: 0, scope: !14870)
!14883 = !DILocation(line: 5150, column: 7, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14870, file: !3, line: 5150, column: 7)
!14885 = !DILocation(line: 5150, column: 23, scope: !14884)
!14886 = !DILocation(line: 5153, column: 33, scope: !14884)
!14887 = !DILocation(line: 5153, column: 7, scope: !14884)
!14888 = !DILocation(line: 5154, column: 19, scope: !14884)
!14889 = !DILocation(line: 5154, column: 34, scope: !14884)
!14890 = !DILocation(line: 5154, column: 50, scope: !14884)
!14891 = !DILocation(line: 5158, column: 18, scope: !14884)
!14892 = !DILocation(line: 5158, column: 23, scope: !14884)
!14893 = !DILocation(line: 0, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14895, file: !3, line: 5160, column: 11)
!14895 = distinct !DILexicalBlock(scope: !14884, file: !3, line: 5159, column: 5)
!14896 = !DILocation(line: 5160, column: 11, scope: !14894)
!14897 = !DILocation(line: 5158, column: 26, scope: !14884)
!14898 = !DILocation(line: 5150, column: 7, scope: !14870)
!14899 = !DILocation(line: 5160, column: 11, scope: !14895)
!14900 = !DILocation(line: 5162, column: 6, scope: !14894)
!14901 = !DILocation(line: 0, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14895, file: !3, line: 5170, column: 11)
!14903 = !DILocation(line: 5170, column: 11, scope: !14902)
!14904 = !DILocation(line: 5161, column: 2, scope: !14894)
!14905 = !DILocation(line: 5170, column: 26, scope: !14902)
!14906 = !DILocation(line: 5170, column: 31, scope: !14902)
!14907 = !DILocation(line: 5171, column: 4, scope: !14902)
!14908 = !DILocation(line: 5171, column: 7, scope: !14902)
!14909 = !DILocation(line: 5170, column: 11, scope: !14895)
!14910 = !DILocation(line: 5173, column: 13, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14902, file: !3, line: 5172, column: 2)
!14912 = !DILocation(line: 5174, column: 4, scope: !14911)
!14913 = !DILocation(line: 5175, column: 2, scope: !14911)
!14914 = !DILocation(line: 0, scope: !14895)
!14915 = !DILocation(line: 5177, column: 56, scope: !14895)
!14916 = !DILocation(line: 5177, column: 7, scope: !14895)
!14917 = !DILocation(line: 5178, column: 5, scope: !14895)
!14918 = !DILocation(line: 5180, column: 5, scope: !14884)
!14919 = !DILocation(line: 5181, column: 1, scope: !14870)
!14920 = distinct !DISubprogram(name: "expand_expr_addr_expr_1", scope: !3, file: !3, line: 6824, type: !14921, scopeLine: 6826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14923)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{!2182, !2298, !2182, !5, !2087, !8275}
!14923 = !{!14924, !14925, !14926, !14927, !14928, !14929, !14930, !14931, !14932, !14933, !14934, !14935, !14936, !14937, !14938}
!14924 = !DILocalVariable(name: "exp", arg: 1, scope: !14920, file: !3, line: 6824, type: !2298)
!14925 = !DILocalVariable(name: "target", arg: 2, scope: !14920, file: !3, line: 6824, type: !2182)
!14926 = !DILocalVariable(name: "tmode", arg: 3, scope: !14920, file: !3, line: 6824, type: !5)
!14927 = !DILocalVariable(name: "modifier", arg: 4, scope: !14920, file: !3, line: 6825, type: !2087)
!14928 = !DILocalVariable(name: "as", arg: 5, scope: !14920, file: !3, line: 6825, type: !8275)
!14929 = !DILocalVariable(name: "result", scope: !14920, file: !3, line: 6827, type: !2182)
!14930 = !DILocalVariable(name: "subtarget", scope: !14920, file: !3, line: 6827, type: !2182)
!14931 = !DILocalVariable(name: "inner", scope: !14920, file: !3, line: 6828, type: !2298)
!14932 = !DILocalVariable(name: "offset", scope: !14920, file: !3, line: 6828, type: !2298)
!14933 = !DILocalVariable(name: "bitsize", scope: !14920, file: !3, line: 6829, type: !2269)
!14934 = !DILocalVariable(name: "bitpos", scope: !14920, file: !3, line: 6829, type: !2269)
!14935 = !DILocalVariable(name: "volatilep", scope: !14920, file: !3, line: 6830, type: !2175)
!14936 = !DILocalVariable(name: "unsignedp", scope: !14920, file: !3, line: 6830, type: !2175)
!14937 = !DILocalVariable(name: "mode1", scope: !14920, file: !3, line: 6831, type: !5)
!14938 = !DILocalVariable(name: "tmp", scope: !14939, file: !3, line: 6945, type: !2182)
!14939 = distinct !DILexicalBlock(scope: !14940, file: !3, line: 6944, column: 5)
!14940 = distinct !DILexicalBlock(scope: !14920, file: !3, line: 6943, column: 7)
!14941 = !DILocation(line: 0, scope: !14920)
!14942 = !DILocation(line: 6828, column: 3, scope: !14920)
!14943 = !DILocation(line: 6829, column: 3, scope: !14920)
!14944 = !DILocation(line: 6830, column: 3, scope: !14920)
!14945 = !DILocation(line: 6831, column: 3, scope: !14920)
!14946 = !DILocation(line: 6839, column: 7, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14920, file: !3, line: 6839, column: 7)
!14948 = !DILocation(line: 6839, column: 7, scope: !14920)
!14949 = !DILocation(line: 6840, column: 12, scope: !14947)
!14950 = !DILocation(line: 6840, column: 5, scope: !14947)
!14951 = !DILocation(line: 6843, column: 11, scope: !14920)
!14952 = !DILocation(line: 6843, column: 3, scope: !14920)
!14953 = !DILocation(line: 6847, column: 27, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14920, file: !3, line: 6844, column: 5)
!14955 = !DILocation(line: 6847, column: 14, scope: !14954)
!14956 = !DILocation(line: 6847, column: 7, scope: !14954)
!14957 = !DILocation(line: 6851, column: 14, scope: !14954)
!14958 = !DILocation(line: 6851, column: 7, scope: !14954)
!14959 = !DILocation(line: 6856, column: 14, scope: !14954)
!14960 = !DILocation(line: 6857, column: 14, scope: !14954)
!14961 = !DILocation(line: 6858, column: 15, scope: !14954)
!14962 = !DILocation(line: 6859, column: 7, scope: !14954)
!14963 = !DILocation(line: 6865, column: 14, scope: !14954)
!14964 = !DILocation(line: 6866, column: 16, scope: !14954)
!14965 = !DILocation(line: 6866, column: 14, scope: !14954)
!14966 = !DILocation(line: 6867, column: 15, scope: !14954)
!14967 = !DILocation(line: 6868, column: 7, scope: !14954)
!14968 = !DILocation(line: 6873, column: 21, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14954, file: !3, line: 6873, column: 11)
!14970 = !DILocation(line: 6873, column: 13, scope: !14969)
!14971 = !DILocation(line: 6874, column: 4, scope: !14969)
!14972 = !DILocation(line: 6874, column: 23, scope: !14969)
!14973 = !DILocation(line: 6875, column: 4, scope: !14969)
!14974 = !DILocation(line: 6875, column: 7, scope: !14969)
!14975 = !DILocation(line: 6873, column: 11, scope: !14954)
!14976 = !DILocation(line: 6877, column: 10, scope: !14977)
!14977 = distinct !DILexicalBlock(scope: !14969, file: !3, line: 6876, column: 2)
!14978 = !DILocation(line: 6878, column: 11, scope: !14977)
!14979 = !DILocation(line: 6878, column: 4, scope: !14977)
!14980 = !DILocation(line: 6889, column: 7, scope: !14954)
!14981 = !DILocation(line: 6890, column: 11, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14954, file: !3, line: 6890, column: 11)
!14983 = !DILocation(line: 6891, column: 4, scope: !14982)
!14984 = !DILocation(line: 6891, column: 23, scope: !14982)
!14985 = !DILocation(line: 6892, column: 4, scope: !14982)
!14986 = !DILocation(line: 6892, column: 23, scope: !14982)
!14987 = !DILocation(line: 6890, column: 11, scope: !14954)
!14988 = !DILocation(line: 6895, column: 14, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14982, file: !3, line: 6893, column: 2)
!14990 = !DILocation(line: 6895, column: 5, scope: !14989)
!14991 = !DILocation(line: 6894, column: 13, scope: !14989)
!14992 = !DILocation(line: 6901, column: 4, scope: !14989)
!14993 = !DILocation(line: 6902, column: 13, scope: !14989)
!14994 = !DILocation(line: 6905, column: 8, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 6905, column: 8)
!14996 = !DILocation(line: 6905, column: 21, scope: !14995)
!14997 = !DILocation(line: 6905, column: 41, scope: !14995)
!14998 = !DILocation(line: 6905, column: 8, scope: !14989)
!14999 = !DILocation(line: 6907, column: 8, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14995, file: !3, line: 6906, column: 6)
!15001 = !DILocation(line: 6908, column: 24, scope: !15000)
!15002 = !DILocation(line: 6909, column: 6, scope: !15000)
!15003 = !DILocation(line: 6912, column: 8, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 6911, column: 8)
!15005 = !DILocation(line: 6913, column: 15, scope: !15004)
!15006 = !DILocation(line: 6913, column: 6, scope: !15004)
!15007 = !DILocation(line: 6922, column: 15, scope: !14954)
!15008 = !DILocation(line: 6924, column: 7, scope: !14954)
!15009 = !DILocation(line: 0, scope: !14954)
!15010 = !DILocation(line: 6928, column: 3, scope: !14920)
!15011 = !DILocation(line: 6930, column: 15, scope: !14920)
!15012 = !DILocation(line: 6930, column: 25, scope: !14920)
!15013 = !DILocation(line: 6930, column: 22, scope: !14920)
!15014 = !DILocation(line: 6933, column: 7, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !14920, file: !3, line: 6933, column: 7)
!15016 = !DILocation(line: 6934, column: 7, scope: !15015)
!15017 = !DILocation(line: 6934, column: 10, scope: !15015)
!15018 = !DILocation(line: 6934, column: 43, scope: !15015)
!15019 = !DILocation(line: 6934, column: 41, scope: !15015)
!15020 = !DILocation(line: 6933, column: 7, scope: !14920)
!15021 = !DILocation(line: 6936, column: 15, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 6935, column: 5)
!15023 = !DILocation(line: 6937, column: 27, scope: !15022)
!15024 = !DILocation(line: 6937, column: 25, scope: !15022)
!15025 = !DILocation(line: 6938, column: 40, scope: !15022)
!15026 = !DILocation(line: 6938, column: 7, scope: !15022)
!15027 = !DILocation(line: 6938, column: 38, scope: !15022)
!15028 = !DILocation(line: 6939, column: 7, scope: !15022)
!15029 = !DILocation(line: 6939, column: 43, scope: !15022)
!15030 = !DILocation(line: 6940, column: 5, scope: !15022)
!15031 = !DILocation(line: 6941, column: 12, scope: !14920)
!15032 = !DILocation(line: 6943, column: 7, scope: !14940)
!15033 = !DILocation(line: 6943, column: 7, scope: !14920)
!15034 = !DILocation(line: 6947, column: 20, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 6947, column: 11)
!15036 = !DILocation(line: 6947, column: 11, scope: !14939)
!15037 = !DILocation(line: 6948, column: 11, scope: !15035)
!15038 = !DILocation(line: 6949, column: 26, scope: !14939)
!15039 = !DILocation(line: 6948, column: 2, scope: !15035)
!15040 = !DILocation(line: 6950, column: 14, scope: !14939)
!15041 = !DILocation(line: 6950, column: 5, scope: !14939)
!15042 = !DILocation(line: 6949, column: 13, scope: !14939)
!15043 = !DILocation(line: 0, scope: !14939)
!15044 = !DILocation(line: 6953, column: 16, scope: !14939)
!15045 = !DILocation(line: 6954, column: 13, scope: !14939)
!15046 = !DILocation(line: 6956, column: 34, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 6956, column: 11)
!15048 = !DILocation(line: 6957, column: 11, scope: !15047)
!15049 = !DILocation(line: 6957, column: 2, scope: !15047)
!15050 = !DILocation(line: 6960, column: 16, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15047, file: !3, line: 6959, column: 2)
!15052 = !DILocation(line: 6961, column: 13, scope: !15051)
!15053 = !DILocation(line: 6966, column: 7, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !14920, file: !3, line: 6966, column: 7)
!15055 = !DILocation(line: 6966, column: 7, scope: !14920)
!15056 = !DILocation(line: 6970, column: 7, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 6967, column: 5)
!15058 = !DILocation(line: 6972, column: 39, scope: !15057)
!15059 = !DILocation(line: 6972, column: 46, scope: !15057)
!15060 = !DILocation(line: 6972, column: 16, scope: !15057)
!15061 = !DILocation(line: 6973, column: 20, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !15057, file: !3, line: 6973, column: 11)
!15063 = !DILocation(line: 6973, column: 11, scope: !15057)
!15064 = !DILocation(line: 6974, column: 11, scope: !15062)
!15065 = !DILocation(line: 6974, column: 2, scope: !15062)
!15066 = !DILocation(line: 6978, column: 1, scope: !14920)
