; ModuleID = 'dbxout.bc'
source_filename = "dbxout.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void ()*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i8 (%union.tree_node*)*, void (i32, i8*, i32, i8)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)*, void (i32)*, void (%struct.rtx_def*)*, void ()*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void (i32)*, void (%union.tree_node*, %union.tree_node*)*, i32 }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.typeinfo = type { i32, i32, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.dbx_file = type { %struct.dbx_file*, i32, i32, i32, i8*, %struct.dbx_file* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.tree_binfo = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.VEC_tree_gc*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.VEC_tree_none }
%struct.VEC_tree_none = type { %struct.VEC_tree_base }
%struct.tree_field_decl = type { %struct.tree_decl_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dbx_debug_hooks = dso_local local_unnamed_addr constant %struct.gcc_debug_hooks { void (i8*)* @dbxout_init, void (i8*)* @dbxout_finish, void ()* @debug_nothing_void, void (i32, i8*)* @debug_nothing_int_charstar, void (i32, i8*)* @debug_nothing_int_charstar, void (i32, i8*)* @dbxout_start_source_file, void (i32)* @dbxout_end_source_file, void (i32, i32)* @dbxout_begin_block, void (i32, i32)* @dbxout_end_block, i8 (%union.tree_node*)* @debug_true_const_tree, void (i32, i8*, i32, i8)* @dbxout_source_line, void (i32, i8*)* @dbxout_begin_prologue, void (i32, i8*)* @debug_nothing_int_charstar, void (i32, i8*)* @debug_nothing_int_charstar, void (%union.tree_node*)* @dbxout_begin_function, void (i32)* @debug_nothing_int, void (%union.tree_node*)* @dbxout_function_decl, void (%union.tree_node*)* @dbxout_global_decl, void (%union.tree_node*, i32)* @dbxout_type_decl, void (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8)* @debug_nothing_tree_tree_tree_bool, void (%union.tree_node*)* @debug_nothing_tree, void (%union.tree_node*)* @debug_nothing_tree, void (%struct.rtx_def*)* @debug_nothing_rtx, void (i32)* @dbxout_handle_pch, void (%struct.rtx_def*)* @debug_nothing_rtx, void ()* @debug_nothing_void, void (%union.tree_node*)* @debug_nothing_tree, void (%union.tree_node*, i32)* @debug_nothing_tree_int, void (%struct.rtx_def*, %struct.rtx_def*)* @debug_nothing_rtx_rtx, void (i32)* @debug_nothing_uid, void (%union.tree_node*, %union.tree_node*)* @debug_nothing_tree_tree, i32 0 }, align 8, !dbg !0
@asm_out_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [3 x i8] c"0\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.2 = private unnamed_addr constant [9 x i8] c"\09.stabd\09\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c",0,\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"\09.stabn\09\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c",0,0,\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"\09.stabs\09\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"\22\22,\00", align 1
@debug_nesting = external dso_local local_unnamed_addr global i32, align 4
@flag_debug_only_used_symbols = external dso_local local_unnamed_addr global i32, align 4
@typevec = internal global %struct.typeinfo* null, align 8, !dbg !1667
@preinit_symbols = internal global %union.tree_node* null, align 8, !dbg !1673
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@stabstr_ob = internal global %struct.obstack zeroinitializer, align 8, !dbg !1685
@.str.8 = private unnamed_addr constant [3 x i8] c":F\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c":f\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@use_gnu_debug_info_extensions = external dso_local local_unnamed_addr global i8, align 1
@.str.10 = private unnamed_addr constant [3 x i8] c":T\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c" :T\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"dbxout.c\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"=i\00", align 1
@symbol_queue_index = external dso_local local_unnamed_addr global i32, align 4
@svr4_dbx_register_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@.str.15 = private unnamed_addr constant [8 x i8] c"(anon):\00", align 1
@lastfile = internal global i8* null, align 8, !dbg !1681
@gt_ggc_r_gt_dbxout_h = dso_local local_unnamed_addr constant [4 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i8** @lastfile to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_S, void (i8*)* @gt_pch_n_S }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @preinit_symbols to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%struct.typeinfo** @typevec to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_ma_typevec, void (i8*)* @gt_pch_na_typevec }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1648
@lastfile_is_base = internal global i32 0, align 4, !dbg !1683
@source_label_number = internal global i32 1, align 4, !dbg !1748
@dbxout_source_line_counter = internal global i32 0, align 4, !dbg !1679
@scope_labelno = internal global i32 0, align 4, !dbg !1677
@next_file_number = internal global i32 0, align 4, !dbg !1675
@next_type_number = internal global i32 0, align 4, !dbg !1671
@typevec_len = internal global i32 0, align 4, !dbg !1669
@gt_pch_rs_gt_dbxout_h = dso_local local_unnamed_addr constant [8 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @lastfile_is_base to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @source_label_number to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @dbxout_source_line_counter to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @scope_labelno to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @next_file_number to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @next_type_number to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @typevec_len to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1662
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.16 = private unnamed_addr constant [6 x i8] c"Ltext\00", align 1
@dbxout_init.cwd = internal unnamed_addr global i8* null, align 8, !dbg !1687
@.str.17 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@text_section = external dso_local local_unnamed_addr global %union.section*, align 8
@.str.18 = private unnamed_addr constant [15 x i8] c"gcc2_compiled.\00", align 1
@base_input_file = internal unnamed_addr global i8* null, align 8, !dbg !1704
@current_file = internal unnamed_addr global %struct.dbx_file* null, align 8, !dbg !1706
@.str.19 = private unnamed_addr constant [6 x i8] c"GNU C\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"GNU C++\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"GNU F77\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"GNU Fortran\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"GNU Pascal\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"GNU Objective-C\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"GNU Objective-C++\00", align 1
@pending_bincls = internal unnamed_addr global i1 false, align 4, !dbg !1827
@.str.26 = private unnamed_addr constant [5 x i8] c"LFBB\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"LM\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"LBB\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"LBE\00", align 1
@debug_info_level = external dso_local local_unnamed_addr global i32, align 4
@.str.30 = private unnamed_addr constant [7 x i8] c"Lscope\00", align 1
@flag_reorder_blocks_and_partition = external dso_local local_unnamed_addr global i32, align 4
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@.str.31 = private unnamed_addr constant [7 x i8] c"Letext\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@dbxout_type.anonymous_type_number = internal unnamed_addr global i32 0, align 4, !dbg !1712
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@.str.32 = private unnamed_addr constant [8 x i8] c";0;127;\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"@s\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c";0;\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c";-16;\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"eFalse:0,True:1,;\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"R3;\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"real:\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c";imag:\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c";;\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c";@S;S\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"@V;\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"@S;\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c";0;-1;\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c"xs\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"xu\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"$$\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"~%\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"xe\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"-1;\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c",0,0;\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"\22,\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"$real\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"$imag\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"(anon)\00", align 1
@.str.58 = private unnamed_addr constant [60 x i8] c"common symbol debug info is not structured as symbol+offset\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1832 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1845, metadata !DIExpression()), !dbg !1847
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1846, metadata !DIExpression()), !dbg !1847
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1848
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1849
  ret i32 %call, !dbg !1850
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1851 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1855
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1856
  ret i32 %call, !dbg !1857
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1858 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1913, metadata !DIExpression()), !dbg !1914
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1915
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1915
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1915
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1915
  %cmp = icmp uge i8* %0, %1, !dbg !1915
  %conv1 = zext i1 %cmp to i64, !dbg !1915
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1915
  %tobool = icmp eq i64 %expval, 0, !dbg !1915
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1915

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1915
  br label %cond.end, !dbg !1915

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1915
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1915
  %2 = load i8, i8* %0, align 1, !dbg !1915
  %conv3 = zext i8 %2 to i32, !dbg !1915
  br label %cond.end, !dbg !1915

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1915
  ret i32 %cond, !dbg !1916
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1917 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !1919, metadata !DIExpression()), !dbg !1920
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !1921
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1921
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !1921
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !1921
  %cmp = icmp uge i8* %0, %1, !dbg !1921
  %conv1 = zext i1 %cmp to i64, !dbg !1921
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1921
  %tobool = icmp eq i64 %expval, 0, !dbg !1921
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1921

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !1921
  br label %cond.end, !dbg !1921

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1921
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1921
  %2 = load i8, i8* %0, align 1, !dbg !1921
  %conv3 = zext i8 %2 to i32, !dbg !1921
  br label %cond.end, !dbg !1921

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1921
  ret i32 %cond, !dbg !1922
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !1923 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1924
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !1924
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !1924
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !1924
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !1924
  %cmp = icmp uge i8* %1, %2, !dbg !1924
  %conv1 = zext i1 %cmp to i64, !dbg !1924
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1924
  %tobool = icmp eq i64 %expval, 0, !dbg !1924
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1924

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !1924
  br label %cond.end, !dbg !1924

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1924
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !1924
  %3 = load i8, i8* %1, align 1, !dbg !1924
  %conv3 = zext i8 %3 to i32, !dbg !1924
  br label %cond.end, !dbg !1924

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !1924
  ret i32 %cond, !dbg !1925
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !1926 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1930, metadata !DIExpression()), !dbg !1931
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1932
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !1933
  ret i32 %call, !dbg !1934
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1935 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1939, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1940, metadata !DIExpression()), !dbg !1941
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1942
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1942
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1942
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1942
  %cmp = icmp uge i8* %0, %1, !dbg !1942
  %conv1 = zext i1 %cmp to i64, !dbg !1942
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1942
  %tobool = icmp eq i64 %expval, 0, !dbg !1942
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1942

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1942
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1942
  br label %cond.end, !dbg !1942

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1942
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1942
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1942
  store i8 %conv2, i8* %0, align 1, !dbg !1942
  %conv6 = and i32 %__c, 255, !dbg !1942
  br label %cond.end, !dbg !1942

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1942
  ret i32 %cond, !dbg !1943
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1944 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1946, metadata !DIExpression()), !dbg !1948
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1947, metadata !DIExpression()), !dbg !1948
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !1949
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1949
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !1949
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !1949
  %cmp = icmp uge i8* %0, %1, !dbg !1949
  %conv1 = zext i1 %cmp to i64, !dbg !1949
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1949
  %tobool = icmp eq i64 %expval, 0, !dbg !1949
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1949

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1949
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !1949
  br label %cond.end, !dbg !1949

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !1949
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1949
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1949
  store i8 %conv2, i8* %0, align 1, !dbg !1949
  %conv6 = and i32 %__c, 255, !dbg !1949
  br label %cond.end, !dbg !1949

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1949
  ret i32 %cond, !dbg !1950
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !1951 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1953, metadata !DIExpression()), !dbg !1954
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1955
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !1955
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !1955
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !1955
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !1955
  %cmp = icmp uge i8* %1, %2, !dbg !1955
  %conv1 = zext i1 %cmp to i64, !dbg !1955
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !1955
  %tobool = icmp eq i64 %expval, 0, !dbg !1955
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !1955

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !1955
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !1955
  br label %cond.end, !dbg !1955

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !1955
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1955
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !1955
  store i8 %conv4, i8* %1, align 1, !dbg !1955
  %conv6 = and i32 %__c, 255, !dbg !1955
  br label %cond.end, !dbg !1955

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !1955
  ret i32 %cond, !dbg !1956
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1957 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !1963, metadata !DIExpression()), !dbg !1966
  call void @llvm.dbg.value(metadata i64* %__n, metadata !1964, metadata !DIExpression()), !dbg !1966
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1965, metadata !DIExpression()), !dbg !1966
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !1967
  ret i64 %call, !dbg !1968
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1969 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1971, metadata !DIExpression()), !dbg !1972
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1973
  %0 = load i32, i32* %_flags, align 8, !dbg !1973
  %and = lshr i32 %0, 4, !dbg !1973
  %and.lobit = and i32 %and, 1, !dbg !1973
  ret i32 %and.lobit, !dbg !1974
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !1975 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !1977, metadata !DIExpression()), !dbg !1978
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !1979
  %0 = load i32, i32* %_flags, align 8, !dbg !1979
  %and = lshr i32 %0, 5, !dbg !1979
  %and.lobit = and i32 %and, 1, !dbg !1979
  ret i32 %and.lobit, !dbg !1980
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !1981 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1984, metadata !DIExpression()), !dbg !1985
  %__c.off = add i32 %__c, 128, !dbg !1986
  %0 = icmp ult i32 %__c.off, 384, !dbg !1986
  br i1 %0, label %cond.true, label %cond.end, !dbg !1986

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !1987
  %1 = load i32*, i32** %call, align 8, !dbg !1988
  %idxprom = sext i32 %__c to i64, !dbg !1989
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1989
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1989
  br label %cond.end, !dbg !1990

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !1990
  ret i32 %cond, !dbg !1991
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !1992 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !1994, metadata !DIExpression()), !dbg !1995
  %__c.off = add i32 %__c, 128, !dbg !1996
  %0 = icmp ult i32 %__c.off, 384, !dbg !1996
  br i1 %0, label %cond.true, label %cond.end, !dbg !1996

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !1997
  %1 = load i32*, i32** %call, align 8, !dbg !1998
  %idxprom = sext i32 %__c to i64, !dbg !1999
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !1999
  %2 = load i32, i32* %arrayidx, align 4, !dbg !1999
  br label %cond.end, !dbg !2000

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2000
  ret i32 %cond, !dbg !2001
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2002 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2007, metadata !DIExpression()), !dbg !2008
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2009
  %conv = trunc i64 %call to i32, !dbg !2010
  ret i32 %conv, !dbg !2011
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2012 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2016, metadata !DIExpression()), !dbg !2017
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2018
  ret i64 %call, !dbg !2019
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2020 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2025, metadata !DIExpression()), !dbg !2026
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2027
  ret i64 %call, !dbg !2028
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2029 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2035, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2036, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2037, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2038, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2039, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i64 0, metadata !2040, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2041, metadata !DIExpression()), !dbg !2045
  br label %while.cond, !dbg !2046

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2047
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2045
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2041, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2040, metadata !DIExpression()), !dbg !2045
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2048
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2046

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2049
  %div = lshr i64 %add, 1, !dbg !2051
  call void @llvm.dbg.value(metadata i64 %div, metadata !2042, metadata !DIExpression()), !dbg !2045
  %mul = mul i64 %div, %__size, !dbg !2052
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2053
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2043, metadata !DIExpression()), !dbg !2045
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2054
  call void @llvm.dbg.value(metadata i32 %call, metadata !2044, metadata !DIExpression()), !dbg !2045
  %cmp1 = icmp slt i32 %call, 0, !dbg !2055
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2057

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2058
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2060

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2061
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2040, metadata !DIExpression()), !dbg !2045
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2045
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2045
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2041, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2040, metadata !DIExpression()), !dbg !2045
  br label %while.cond, !dbg !2046, !llvm.loop !2062

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2045
  ret i8* %retval.0, !dbg !2064
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2065 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2071, metadata !DIExpression()), !dbg !2072
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2073
  ret double %call, !dbg !2074
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2075 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2084, metadata !DIExpression()), !dbg !2087
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2085, metadata !DIExpression()), !dbg !2087
  call void @llvm.dbg.value(metadata i32 %base, metadata !2086, metadata !DIExpression()), !dbg !2087
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2088
  ret i64 %call, !dbg !2089
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2090 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2096, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2097, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i32 %base, metadata !2098, metadata !DIExpression()), !dbg !2099
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2100
  ret i64 %call, !dbg !2101
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2102 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2113, metadata !DIExpression()), !dbg !2116
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2114, metadata !DIExpression()), !dbg !2116
  call void @llvm.dbg.value(metadata i32 %base, metadata !2115, metadata !DIExpression()), !dbg !2116
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2117
  ret i64 %call, !dbg !2118
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2119 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2123, metadata !DIExpression()), !dbg !2126
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2124, metadata !DIExpression()), !dbg !2126
  call void @llvm.dbg.value(metadata i32 %base, metadata !2125, metadata !DIExpression()), !dbg !2126
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2127
  ret i64 %call, !dbg !2128
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2129 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2169, metadata !DIExpression()), !dbg !2171
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2170, metadata !DIExpression()), !dbg !2171
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2172
  ret i32 %call, !dbg !2173
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2174 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2176, metadata !DIExpression()), !dbg !2178
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2177, metadata !DIExpression()), !dbg !2178
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2179
  ret i32 %call, !dbg !2180
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2181 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2185, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2186, metadata !DIExpression()), !dbg !2187
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2188
  ret i32 %call, !dbg !2189
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2190 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2194, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2195, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2196, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2197, metadata !DIExpression()), !dbg !2198
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2199
  ret i32 %call, !dbg !2200
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2201 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2205, metadata !DIExpression()), !dbg !2208
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2206, metadata !DIExpression()), !dbg !2208
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2207, metadata !DIExpression()), !dbg !2208
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2207, metadata !DIExpression(DW_OP_deref)), !dbg !2208
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2209
  ret i32 %call, !dbg !2210
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2211 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2215, metadata !DIExpression()), !dbg !2219
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2216, metadata !DIExpression()), !dbg !2219
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2217, metadata !DIExpression()), !dbg !2219
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2218, metadata !DIExpression()), !dbg !2219
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2218, metadata !DIExpression(DW_OP_deref)), !dbg !2219
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2220
  ret i32 %call, !dbg !2221
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2222 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2246, metadata !DIExpression()), !dbg !2248
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2247, metadata !DIExpression()), !dbg !2248
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2249
  ret i32 %call, !dbg !2250
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2251 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2253, metadata !DIExpression()), !dbg !2255
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2254, metadata !DIExpression()), !dbg !2255
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2256
  ret i32 %call, !dbg !2257
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2258 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2262, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2263, metadata !DIExpression()), !dbg !2264
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2265
  ret i32 %call, !dbg !2266
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2267 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2271, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2272, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2274, metadata !DIExpression()), !dbg !2275
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2276
  ret i32 %call, !dbg !2277
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @dbxout_init(i8* %input_file_name) #5 !dbg !1689 {
entry:
  %ltext_label_name = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %input_file_name, metadata !1693, metadata !DIExpression()), !dbg !2278
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %ltext_label_name, i64 0, i64 0, !dbg !2279
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !2279
  call void @llvm.dbg.declare(metadata [100 x i8]* %ltext_label_name, metadata !1694, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i8 0, metadata !1698, metadata !DIExpression()), !dbg !2278
  %1 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 33, i32 2), align 8, !dbg !2281
  %call = tail call %union.tree_node* %1() #6, !dbg !2282
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !1699, metadata !DIExpression()), !dbg !2278
  store i32 100, i32* @typevec_len, align 4, !dbg !2283
  %call1 = tail call i8* @ggc_alloc_cleared_stat(i64 1200) #6, !dbg !2284
  store i8* %call1, i8** bitcast (%struct.typeinfo** @typevec to i8**), align 8, !dbg !2285
  %call2 = tail call i32 @_obstack_begin(%struct.obstack* nonnull @stabstr_ob, i32 0, i32 1, i8* (i64)* nonnull @xmalloc, void (i8*)* nonnull @free) #6, !dbg !2286
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i32 0) #6, !dbg !2287
  %2 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !2289
  %tobool = icmp eq i8 %2, 0, !dbg !2289
  br i1 %tobool, label %if.end23, label %if.then, !dbg !2291

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** @dbxout_init.cwd, align 8, !dbg !2292
  %tobool5 = icmp eq i8* %3, null, !dbg !2292
  br i1 %tobool5, label %if.then6, label %if.end20, !dbg !2295

if.then6:                                         ; preds = %if.then
  %call7 = call i8* @get_src_pwd() #6, !dbg !2296
  store i8* %call7, i8** @dbxout_init.cwd, align 8, !dbg !2298
  %4 = load i8, i8* %call7, align 1, !dbg !2299
  %cmp = icmp eq i8 %4, 0, !dbg !2301
  br i1 %cmp, label %if.then10, label %if.else, !dbg !2302

if.then10:                                        ; preds = %if.then6
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8** @dbxout_init.cwd, align 8, !dbg !2303
  br label %if.end18, !dbg !2304

if.else:                                          ; preds = %if.then6
  %call11 = call i64 @strlen(i8* %call7) #6, !dbg !2305
  %sub = add i64 %call11, -1, !dbg !2305
  %arrayidx12 = getelementptr inbounds i8, i8* %call7, i64 %sub, !dbg !2305
  %5 = load i8, i8* %arrayidx12, align 1, !dbg !2305
  %cmp14 = icmp eq i8 %5, 47, !dbg !2305
  br i1 %cmp14, label %if.else.if.end18_crit_edge, label %if.then16, !dbg !2307

if.else.if.end18_crit_edge:                       ; preds = %if.else
  %.pre = load i8*, i8** @dbxout_init.cwd, align 8, !dbg !2308
  br label %if.end18, !dbg !2307

if.then16:                                        ; preds = %if.else
  %6 = load i8*, i8** @dbxout_init.cwd, align 8, !dbg !2309
  %call17 = call i8* (i8*, ...) @concat(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8* null) #6, !dbg !2310
  store i8* %call17, i8** @dbxout_init.cwd, align 8, !dbg !2311
  br label %if.end18, !dbg !2312

if.end18:                                         ; preds = %if.else.if.end18_crit_edge, %if.then16, %if.then10
  %7 = phi i8* [ %.pre, %if.else.if.end18_crit_edge ], [ %call17, %if.then16 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %if.then10 ], !dbg !2308
  %call19 = call i8* @remap_debug_filename(i8* %7) #6, !dbg !2313
  store i8* %call19, i8** @dbxout_init.cwd, align 8, !dbg !2314
  br label %if.end20, !dbg !2315

if.end20:                                         ; preds = %if.then, %if.end18
  %8 = phi i8* [ %3, %if.then ], [ %call19, %if.end18 ], !dbg !2316
  %call21 = call fastcc i32 @get_lang_number() #8, !dbg !2317
  call void @dbxout_begin_simple_stabs_desc(i8* %8, i32 100, i32 %call21) #8, !dbg !2318
  call void @dbxout_stab_value_label(i8* nonnull %0) #8, !dbg !2319
  call void @llvm.dbg.value(metadata i8 1, metadata !1698, metadata !DIExpression()), !dbg !2278
  br label %if.end23, !dbg !2320

if.end23:                                         ; preds = %entry, %if.end20
  %call24 = call i8* @remap_debug_filename(i8* %input_file_name) #6, !dbg !2321
  call void @llvm.dbg.value(metadata i8* %call24, metadata !1700, metadata !DIExpression()), !dbg !2278
  %call25 = call fastcc i32 @get_lang_number() #8, !dbg !2322
  call void @dbxout_begin_simple_stabs_desc(i8* %call24, i32 100, i32 %call25) #8, !dbg !2323
  call void @dbxout_stab_value_label(i8* nonnull %0) #8, !dbg !2324
  call void @llvm.dbg.value(metadata i8 1, metadata !1698, metadata !DIExpression()), !dbg !2278
  %9 = load %union.section*, %union.section** @text_section, align 8, !dbg !2325
  call void @switch_to_section(%union.section* %9) #6, !dbg !2328
  %10 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !2329
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2330
  call void %10(%struct._IO_FILE* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 0) #6, !dbg !2331
  call void @dbxout_begin_simple_stabs(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i32 60) #8, !dbg !2332
  call void @dbxout_stab_value_zero() #8, !dbg !2333
  store i8* %input_file_name, i8** @lastfile, align 8, !dbg !2334
  store i8* %input_file_name, i8** @base_input_file, align 8, !dbg !2335
  store i32 1, i32* @next_type_number, align 4, !dbg !2336
  %call30 = call i8* @xmalloc(i64 40) #6, !dbg !2337
  store i8* %call30, i8** bitcast (%struct.dbx_file** @current_file to i8**), align 8, !dbg !2338
  %next = bitcast i8* %call30 to %struct.dbx_file**, !dbg !2339
  store %struct.dbx_file* null, %struct.dbx_file** %next, align 8, !dbg !2340
  %12 = load %struct.dbx_file*, %struct.dbx_file** @current_file, align 8, !dbg !2341
  %file_number = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %12, i64 0, i32 1, !dbg !2342
  store i32 0, i32* %file_number, align 8, !dbg !2343
  %next_type_number = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %12, i64 0, i32 2, !dbg !2344
  store i32 1, i32* %next_type_number, align 4, !dbg !2345
  store i32 1, i32* @next_file_number, align 4, !dbg !2346
  %prev = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %12, i64 0, i32 5, !dbg !2347
  store %struct.dbx_file* null, %struct.dbx_file** %prev, align 8, !dbg !2348
  %bincl_status = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %12, i64 0, i32 3, !dbg !2349
  store i32 0, i32* %bincl_status, align 8, !dbg !2350
  %pending_bincl_name = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %12, i64 0, i32 4, !dbg !2351
  store i8* null, i8** %pending_bincl_name, align 8, !dbg !2352
  call fastcc void @dbxout_typedefs(%union.tree_node* %call) #8, !dbg !2353
  %13 = load %union.tree_node*, %union.tree_node** @preinit_symbols, align 8, !dbg !2354
  %tobool31 = icmp eq %union.tree_node* %13, null, !dbg !2354
  br i1 %tobool31, label %if.end36, label %if.then32, !dbg !2355

if.then32:                                        ; preds = %if.end23
  %call33 = call %union.tree_node* @nreverse(%union.tree_node* nonnull %13) #6, !dbg !2356
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !1701, metadata !DIExpression()), !dbg !2358
  br label %for.cond, !dbg !2359

for.cond:                                         ; preds = %for.body, %if.then32
  %t.0 = phi %union.tree_node* [ %call33, %if.then32 ], [ %16, %for.body ], !dbg !2360
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !1701, metadata !DIExpression()), !dbg !2358
  %tobool34 = icmp eq %union.tree_node* %t.0, null, !dbg !2361
  br i1 %tobool34, label %for.end, label %for.body, !dbg !2361

for.body:                                         ; preds = %for.cond
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2362
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !2362
  %call35 = call i32 @dbxout_symbol(%union.tree_node* %15, i32 0) #8, !dbg !2364
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2365
  %16 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2365
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !1701, metadata !DIExpression()), !dbg !2358
  br label %for.cond, !dbg !2366, !llvm.loop !2367

for.end:                                          ; preds = %for.cond
  store %union.tree_node* null, %union.tree_node** @preinit_symbols, align 8, !dbg !2369
  br label %if.end36, !dbg !2370

if.end36:                                         ; preds = %if.end23, %for.end
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !2371
  ret void, !dbg !2371
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_finish(i8* %filename) #5 !dbg !2372 {
entry:
  call void @llvm.dbg.value(metadata i8* %filename, metadata !2374, metadata !DIExpression()), !dbg !2375
  %0 = load %union.section*, %union.section** @text_section, align 8, !dbg !2376
  tail call void @switch_to_section(%union.section* %0) #6, !dbg !2378
  tail call void @dbxout_begin_empty_stabs(i32 100) #8, !dbg !2379
  tail call void @dbxout_stab_value_internal_label(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i32* null) #8, !dbg !2380
  tail call void @debug_free_queue() #6, !dbg !2381
  ret void, !dbg !2382
}

declare dso_local void @debug_nothing_void() #2

declare dso_local void @debug_nothing_int_charstar(i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @dbxout_start_source_file(i32 %line, i8* %filename) #5 !dbg !2383 {
entry:
  call void @llvm.dbg.value(metadata i32 %line, metadata !2385, metadata !DIExpression()), !dbg !2388
  call void @llvm.dbg.value(metadata i8* %filename, metadata !2386, metadata !DIExpression()), !dbg !2388
  %call = tail call i8* @xmalloc(i64 40) #6, !dbg !2389
  call void @llvm.dbg.value(metadata i8* %call, metadata !2387, metadata !DIExpression()), !dbg !2388
  %0 = load i64, i64* bitcast (%struct.dbx_file** @current_file to i64*), align 8, !dbg !2390
  %1 = bitcast i8* %call to i64*, !dbg !2391
  store i64 %0, i64* %1, align 8, !dbg !2391
  %next_type_number = getelementptr inbounds i8, i8* %call, i64 12, !dbg !2392
  %2 = bitcast i8* %next_type_number to i32*, !dbg !2392
  store i32 1, i32* %2, align 4, !dbg !2393
  %file_number = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2394
  %3 = bitcast i8* %file_number to i32*, !dbg !2394
  store i32 0, i32* %3, align 8, !dbg !2395
  %prev = getelementptr inbounds i8, i8* %call, i64 32, !dbg !2396
  %4 = bitcast i8* %prev to %struct.dbx_file**, !dbg !2396
  store %struct.dbx_file* null, %struct.dbx_file** %4, align 8, !dbg !2397
  %5 = load %struct.dbx_file*, %struct.dbx_file** @current_file, align 8, !dbg !2398
  %prev1 = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %5, i64 0, i32 5, !dbg !2399
  %6 = bitcast %struct.dbx_file** %prev1 to i8**, !dbg !2400
  store i8* %call, i8** %6, align 8, !dbg !2400
  %bincl_status = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2401
  %7 = bitcast i8* %bincl_status to i32*, !dbg !2401
  store i32 1, i32* %7, align 8, !dbg !2402
  %call2 = tail call i8* @remap_debug_filename(i8* %filename) #6, !dbg !2403
  %pending_bincl_name = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2404
  %8 = bitcast i8* %pending_bincl_name to i8**, !dbg !2404
  store i8* %call2, i8** %8, align 8, !dbg !2405
  store i1 true, i1* @pending_bincls, align 4, !dbg !2406
  store i8* %call, i8** bitcast (%struct.dbx_file** @current_file to i8**), align 8, !dbg !2407
  ret void, !dbg !2408
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_end_source_file(i32 %line) #5 !dbg !2409 {
entry:
  call void @llvm.dbg.value(metadata i32 %line, metadata !2411, metadata !DIExpression()), !dbg !2412
  %0 = load %struct.dbx_file*, %struct.dbx_file** @current_file, align 8, !dbg !2413
  %bincl_status = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %0, i64 0, i32 3, !dbg !2415
  %1 = load i32, i32* %bincl_status, align 8, !dbg !2415
  %cmp = icmp eq i32 %1, 2, !dbg !2416
  br i1 %cmp, label %if.then, label %if.end, !dbg !2417

if.then:                                          ; preds = %entry
  tail call void @dbxout_begin_stabn(i32 162) #8, !dbg !2418
  tail call void @dbxout_stab_value_zero() #8, !dbg !2420
  %.pre = load %struct.dbx_file*, %struct.dbx_file** @current_file, align 8, !dbg !2421
  br label %if.end, !dbg !2422

if.end:                                           ; preds = %if.then, %entry
  %2 = phi %struct.dbx_file* [ %.pre, %if.then ], [ %0, %entry ], !dbg !2421
  %bincl_status1 = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %2, i64 0, i32 3, !dbg !2423
  store i32 0, i32* %bincl_status1, align 8, !dbg !2424
  %3 = bitcast %struct.dbx_file* %2 to i64*, !dbg !2425
  %4 = load i64, i64* %3, align 8, !dbg !2425
  store i64 %4, i64* bitcast (%struct.dbx_file** @current_file to i64*), align 8, !dbg !2426
  ret void, !dbg !2427
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_begin_block(i32 %line, i32 %n) #5 !dbg !2428 {
entry:
  call void @llvm.dbg.value(metadata i32 %line, metadata !2430, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.value(metadata i32 %n, metadata !2431, metadata !DIExpression()), !dbg !2432
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !2433
  %0 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !2434
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2435
  %conv = zext i32 %n to i64, !dbg !2436
  tail call void %0(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i64 %conv) #6, !dbg !2437
  ret void, !dbg !2438
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_end_block(i32 %line, i32 %n) #5 !dbg !2439 {
entry:
  call void @llvm.dbg.value(metadata i32 %line, metadata !2441, metadata !DIExpression()), !dbg !2443
  call void @llvm.dbg.value(metadata i32 %n, metadata !2442, metadata !DIExpression()), !dbg !2443
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !2444
  %0 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !2445
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2446
  %conv = zext i32 %n to i64, !dbg !2447
  tail call void %0(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i64 %conv) #6, !dbg !2448
  ret void, !dbg !2449
}

declare dso_local zeroext i8 @debug_true_const_tree(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal void @dbxout_source_line(i32 %lineno, i8* %filename, i32 %discriminator, i8 zeroext %is_stmt) #5 !dbg !2450 {
entry:
  %begin_label = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %lineno, metadata !2452, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata i8* %filename, metadata !2453, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata i32 %discriminator, metadata !2454, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata i8 %is_stmt, metadata !2455, metadata !DIExpression()), !dbg !2459
  tail call fastcc void @dbxout_source_file(i8* %filename) #8, !dbg !2460
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %begin_label, i64 0, i64 0, !dbg !2461
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #7, !dbg !2461
  call void @llvm.dbg.declare(metadata [20 x i8]* %begin_label, metadata !2456, metadata !DIExpression()), !dbg !2462
  tail call void @dbxout_begin_stabn_sline(i32 %lineno) #8, !dbg !2463
  %1 = load i32, i32* @scope_labelno, align 4, !dbg !2464
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 %1) #6, !dbg !2464
  call void @dbxout_stab_value_internal_label_diff(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i32* nonnull @dbxout_source_line_counter, i8* nonnull %0) #8, !dbg !2466
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #7, !dbg !2467
  ret void, !dbg !2468
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_begin_prologue(i32 %lineno, i8* %filename) #5 !dbg !2469 {
entry:
  call void @llvm.dbg.value(metadata i32 %lineno, metadata !2471, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.value(metadata i8* %filename, metadata !2472, metadata !DIExpression()), !dbg !2473
  %0 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !2474
  %tobool = icmp eq i8 %0, 0, !dbg !2474
  %1 = load i32, i32* @flag_debug_only_used_symbols, align 4, !dbg !2476
  %tobool1 = icmp ne i32 %1, 0, !dbg !2476
  %or.cond = or i1 %tobool, %tobool1, !dbg !2477
  br i1 %or.cond, label %if.end, label %if.then, !dbg !2477

if.then:                                          ; preds = %entry
  tail call void @dbxout_stabd(i32 46, i32 0) #8, !dbg !2478
  br label %if.end, !dbg !2478

if.end:                                           ; preds = %entry, %if.then
  %2 = load i32, i32* @scope_labelno, align 4, !dbg !2479
  %inc = add nsw i32 %2, 1, !dbg !2479
  store i32 %inc, i32* @scope_labelno, align 4, !dbg !2479
  tail call void @dbxout_source_line(i32 %lineno, i8* %filename, i32 0, i8 zeroext 1) #8, !dbg !2480
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !2481
  %3 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !2482
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2483
  %5 = load i32, i32* @scope_labelno, align 4, !dbg !2484
  %conv2 = sext i32 %5 to i64, !dbg !2484
  tail call void %3(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i64 %conv2) #6, !dbg !2485
  ret void, !dbg !2486
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_begin_function(%union.tree_node* %decl) #5 !dbg !2487 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2489, metadata !DIExpression()), !dbg !2494
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2495
  %bf.load = load i64, i64* %0, align 8, !dbg !2495
  %bf.cast = and i64 %bf.load, 16777216, !dbg !2495
  %bf.set = or i64 %bf.load, 16777216, !dbg !2496
  store i64 %bf.set, i64* %0, align 8, !dbg !2496
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 3, !dbg !2497
  %1 = bitcast %union.tree_node** %result to %struct.tree_decl_minimal**, !dbg !2497
  %2 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %1, align 8, !dbg !2497
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %2, i64 0, i32 3, !dbg !2497
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !2497
  %cmp = icmp eq %union.tree_node* %3, null, !dbg !2498
  %4 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %2, i64 0, i32 0, i32 0, i32 0, !dbg !2499
  br i1 %cmp, label %if.else, label %if.then, !dbg !2499

if.then:                                          ; preds = %entry
  %5 = bitcast %union.tree_node** %result to i64**, !dbg !2500
  %bf.load7 = load i64, i64* %4, align 8, !dbg !2500
  %bf.cast10 = and i64 %bf.load7, 16777216, !dbg !2500
  %bf.set16 = or i64 %bf.load7, 16777216, !dbg !2501
  store i64 %bf.set16, i64* %4, align 8, !dbg !2501
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 0) #8, !dbg !2502
  %6 = load i64*, i64** %5, align 8, !dbg !2503
  %bf.load20 = load i64, i64* %6, align 8, !dbg !2504
  %bf.clear21 = and i64 %bf.load20, -16777217, !dbg !2504
  %bf.set22 = or i64 %bf.clear21, %bf.cast10, !dbg !2504
  store i64 %bf.set22, i64* %6, align 8, !dbg !2504
  br label %if.end, !dbg !2505

if.else:                                          ; preds = %entry
  %call23 = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 0) #8, !dbg !2506
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %bf.load25 = load i64, i64* %0, align 8, !dbg !2507
  %bf.clear28 = and i64 %bf.load25, -16777217, !dbg !2507
  %bf.set29 = or i64 %bf.clear28, %bf.cast, !dbg !2507
  store i64 %bf.set29, i64* %0, align 8, !dbg !2507
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !2508
  %7 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !2508
  tail call void @dbxout_parms(%union.tree_node* %7) #8, !dbg !2509
  %8 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %1, align 8, !dbg !2510
  %name35 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %8, i64 0, i32 3, !dbg !2510
  %9 = load %union.tree_node*, %union.tree_node** %name35, align 8, !dbg !2510
  %cmp36 = icmp eq %union.tree_node* %9, null, !dbg !2512
  br i1 %cmp36, label %if.end41, label %if.then37, !dbg !2513

if.then37:                                        ; preds = %if.end
  %10 = bitcast %struct.tree_decl_minimal* %8 to %union.tree_node*, !dbg !2513
  %call40 = tail call i32 @dbxout_symbol(%union.tree_node* %10, i32 1) #8, !dbg !2514
  br label %if.end41, !dbg !2514

if.end41:                                         ; preds = %if.end, %if.then37
  ret void, !dbg !2515
}

declare dso_local void @debug_nothing_int(i32) #2

; Function Attrs: nounwind uwtable
define internal void @dbxout_function_decl(%union.tree_node* %decl) #5 !dbg !2516 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2518, metadata !DIExpression()), !dbg !2519
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !2520
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !2521
  %0 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !2521
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !2522
  %1 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !2522
  tail call fastcc void @dbxout_block(%union.tree_node* %0, i32 0, %union.tree_node* %1) #8, !dbg !2523
  tail call fastcc void @dbxout_function_end(%union.tree_node* %decl) #8, !dbg !2524
  ret void, !dbg !2525
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_global_decl(%union.tree_node* %decl) #5 !dbg !2526 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2528, metadata !DIExpression()), !dbg !2532
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2533
  %bf.load = load i64, i64* %0, align 8, !dbg !2533
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2534
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !2534
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2535

land.lhs.true:                                    ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2536
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !2536
  %bf.load1 = load i64, i64* %1, align 8, !dbg !2536
  %bf.cast32 = and i64 %bf.load1, 33554432, !dbg !2536
  %tobool = icmp eq i64 %bf.cast32, 0, !dbg !2536
  br i1 %tobool, label %if.then, label %if.end, !dbg !2537

if.then:                                          ; preds = %land.lhs.true
  %bf.cast8 = and i64 %bf.load, 16777216, !dbg !2538
  %bf.set = or i64 %bf.load, 16777216, !dbg !2539
  store i64 %bf.set, i64* %0, align 8, !dbg !2539
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 0) #8, !dbg !2540
  %bf.load13 = load i64, i64* %0, align 8, !dbg !2541
  %bf.clear14 = and i64 %bf.load13, -16777217, !dbg !2541
  %bf.set15 = or i64 %bf.clear14, %bf.cast8, !dbg !2541
  store i64 %bf.set15, i64* %0, align 8, !dbg !2541
  br label %if.end, !dbg !2542

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  ret void, !dbg !2543
}

; Function Attrs: nounwind uwtable
define internal void @dbxout_type_decl(%union.tree_node* %decl, i32 %local) #5 !dbg !2544 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2546, metadata !DIExpression()), !dbg !2548
  call void @llvm.dbg.value(metadata i32 %local, metadata !2547, metadata !DIExpression()), !dbg !2548
  %call = tail call i32 @dbxout_symbol(%union.tree_node* %decl, i32 %local) #8, !dbg !2549
  ret void, !dbg !2550
}

declare dso_local void @debug_nothing_tree_tree_tree_bool(%union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext) #2

declare dso_local void @debug_nothing_tree(%union.tree_node*) #2

declare dso_local void @debug_nothing_rtx(%struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal void @dbxout_handle_pch(i32 %at_end) #5 !dbg !2551 {
entry:
  call void @llvm.dbg.value(metadata i32 %at_end, metadata !2553, metadata !DIExpression()), !dbg !2554
  %tobool = icmp eq i32 %at_end, 0, !dbg !2555
  br i1 %tobool, label %if.then, label %if.else, !dbg !2557

if.then:                                          ; preds = %entry
  %0 = load i8*, i8** @lastfile, align 8, !dbg !2558
  tail call void @dbxout_start_source_file(i32 0, i8* %0) #8, !dbg !2560
  store i8* null, i8** @lastfile, align 8, !dbg !2561
  br label %if.end, !dbg !2562

if.else:                                          ; preds = %entry
  tail call void @dbxout_end_source_file(i32 0) #8, !dbg !2563
  %1 = load i8*, i8** @lastfile, align 8, !dbg !2565
  %cmp = icmp eq i8* %1, null, !dbg !2566
  %conv = zext i1 %cmp to i32, !dbg !2566
  store i32 %conv, i32* @lastfile_is_base, align 4, !dbg !2567
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2568
}

declare dso_local void @debug_nothing_tree_int(%union.tree_node*, i32) #2

declare dso_local void @debug_nothing_rtx_rtx(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local void @debug_nothing_uid(i32) #2

declare dso_local void @debug_nothing_tree_tree(%union.tree_node*, %union.tree_node*) #2

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_int(i32 %num) local_unnamed_addr #5 !dbg !2569 {
entry:
  %buf = alloca [64 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %num, metadata !2571, metadata !DIExpression()), !dbg !2580
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !2581
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !2581
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !2572, metadata !DIExpression()), !dbg !2582
  %add.ptr = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 64, !dbg !2583
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2576, metadata !DIExpression()), !dbg !2580
  %cmp = icmp eq i32 %num, 0, !dbg !2584
  br i1 %cmp, label %if.then, label %if.end, !dbg !2586

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2587
  %call = tail call i32 @putc(i32 48, %struct._IO_FILE* %1) #6, !dbg !2589
  br label %cleanup, !dbg !2590

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i32 %num, 0, !dbg !2591
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !2593

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2594
  %call3 = tail call i32 @putc(i32 45, %struct._IO_FILE* %2) #6, !dbg !2596
  %sub = sub nsw i32 0, %num, !dbg !2597
  call void @llvm.dbg.value(metadata i32 %sub, metadata !2577, metadata !DIExpression()), !dbg !2580
  br label %if.end4, !dbg !2598

if.end4:                                          ; preds = %if.end, %if.then2
  %unum.0 = phi i32 [ %sub, %if.then2 ], [ %num, %if.end ], !dbg !2599
  call void @llvm.dbg.value(metadata i32 %unum.0, metadata !2577, metadata !DIExpression()), !dbg !2580
  br label %do.body, !dbg !2600

do.body:                                          ; preds = %do.body, %if.end4
  %unum.1 = phi i32 [ %unum.0, %if.end4 ], [ %div, %do.body ], !dbg !2580
  %p.0.idx = phi i64 [ 0, %if.end4 ], [ %p.0.add, %do.body ]
  call void @llvm.dbg.value(metadata i32 %unum.1, metadata !2577, metadata !DIExpression()), !dbg !2580
  %rem = urem i32 %unum.1, 10, !dbg !2601
  call void @llvm.dbg.value(metadata i32 %rem, metadata !2578, metadata !DIExpression()), !dbg !2602
  %div = udiv i32 %unum.1, 10, !dbg !2601
  call void @llvm.dbg.value(metadata i32 %div, metadata !2577, metadata !DIExpression()), !dbg !2580
  %3 = trunc i32 %rem to i8, !dbg !2601
  %conv = or i8 %3, 48, !dbg !2601
  %p.0.add = add nsw i64 %p.0.idx, -1, !dbg !2601
  %incdec.ptr.ptr = getelementptr inbounds i8, i8* %add.ptr, i64 %p.0.add, !dbg !2580
  call void @llvm.dbg.value(metadata i8* %incdec.ptr.ptr, metadata !2576, metadata !DIExpression()), !dbg !2580
  store i8 %conv, i8* %incdec.ptr.ptr, align 1, !dbg !2601
  %4 = icmp ugt i32 %unum.1, 9, !dbg !2600
  br i1 %4, label %do.body, label %while.cond.preheader, !dbg !2601, !llvm.loop !2603

while.cond.preheader:                             ; preds = %do.body
  %p.0.add.lcssa = phi i64 [ %p.0.add, %do.body ], !dbg !2601
  br label %while.cond, !dbg !2604

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %p.1.idx = phi i64 [ %p.1.add, %while.body ], [ %p.0.add.lcssa, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata i8* undef, metadata !2576, metadata !DIExpression()), !dbg !2580
  %exitcond = icmp ne i64 %p.1.idx, 0, !dbg !2605
  br i1 %exitcond, label %while.body, label %cleanup.loopexit, !dbg !2604

while.body:                                       ; preds = %while.cond
  %p.1.ptr = getelementptr inbounds i8, i8* %add.ptr, i64 %p.1.idx, !dbg !2580
  call void @llvm.dbg.value(metadata i8* %p.1.ptr, metadata !2576, metadata !DIExpression()), !dbg !2580
  %5 = load i8, i8* %p.1.ptr, align 1, !dbg !2606
  %conv11 = sext i8 %5 to i32, !dbg !2606
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2608
  %call12 = call i32 @putc(i32 %conv11, %struct._IO_FILE* %6) #6, !dbg !2609
  %p.1.add = add i64 %p.1.idx, 1, !dbg !2610
  call void @llvm.dbg.value(metadata i8* undef, metadata !2576, metadata !DIExpression()), !dbg !2580
  br label %while.cond, !dbg !2604, !llvm.loop !2611

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup, !dbg !2613

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !2613
  ret void, !dbg !2613
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_stab_value_zero() local_unnamed_addr #5 !dbg !2614 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2615
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !2616
  ret void, !dbg !2617
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_stab_value_label(i8* %label) local_unnamed_addr #5 !dbg !2618 {
entry:
  call void @llvm.dbg.value(metadata i8* %label, metadata !2620, metadata !DIExpression()), !dbg !2621
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2622
  tail call void @assemble_name(%struct._IO_FILE* %0, i8* %label) #6, !dbg !2623
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2624
  %call = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #6, !dbg !2625
  ret void, !dbg !2626
}

declare dso_local void @assemble_name(%struct._IO_FILE*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_stab_value_label_diff(i8* %label, i8* %base) local_unnamed_addr #5 !dbg !2627 {
entry:
  call void @llvm.dbg.value(metadata i8* %label, metadata !2631, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i8* %base, metadata !2632, metadata !DIExpression()), !dbg !2633
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2634
  tail call void @assemble_name(%struct._IO_FILE* %0, i8* %label) #6, !dbg !2635
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2636
  %call = tail call i32 @putc(i32 45, %struct._IO_FILE* %1) #6, !dbg !2637
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2638
  tail call void @assemble_name(%struct._IO_FILE* %2, i8* %base) #6, !dbg !2639
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2640
  %call1 = tail call i32 @putc(i32 10, %struct._IO_FILE* %3) #6, !dbg !2641
  ret void, !dbg !2642
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_stab_value_internal_label(i8* %stem, i32* %counterp) local_unnamed_addr #5 !dbg !2643 {
entry:
  %label = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %stem, metadata !2648, metadata !DIExpression()), !dbg !2652
  call void @llvm.dbg.value(metadata i32* %counterp, metadata !2649, metadata !DIExpression()), !dbg !2652
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %label, i64 0, i64 0, !dbg !2653
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !2653
  call void @llvm.dbg.declare(metadata [100 x i8]* %label, metadata !2650, metadata !DIExpression()), !dbg !2654
  %tobool = icmp eq i32* %counterp, null, !dbg !2655
  br i1 %tobool, label %do.body, label %cond.true, !dbg !2655

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %counterp, align 4, !dbg !2656
  %inc = add nsw i32 %1, 1, !dbg !2656
  store i32 %inc, i32* %counterp, align 4, !dbg !2656
  br label %do.body, !dbg !2655

do.body:                                          ; preds = %entry, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 0, %entry ], !dbg !2655
  call void @llvm.dbg.value(metadata i32 %cond, metadata !2651, metadata !DIExpression()), !dbg !2652
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %stem, i32 %cond) #6, !dbg !2657
  call void @dbxout_stab_value_label(i8* nonnull %0) #8, !dbg !2659
  %2 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !2660
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2661
  %conv = sext i32 %cond to i64, !dbg !2662
  call void %2(%struct._IO_FILE* %3, i8* %stem, i64 %conv) #6, !dbg !2663
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !2664
  ret void, !dbg !2664
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_stab_value_internal_label_diff(i8* %stem, i32* %counterp, i8* %base) local_unnamed_addr #5 !dbg !2665 {
entry:
  %label = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %stem, metadata !2669, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.value(metadata i32* %counterp, metadata !2670, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.value(metadata i8* %base, metadata !2671, metadata !DIExpression()), !dbg !2674
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %label, i64 0, i64 0, !dbg !2675
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !2675
  call void @llvm.dbg.declare(metadata [100 x i8]* %label, metadata !2672, metadata !DIExpression()), !dbg !2676
  %tobool = icmp eq i32* %counterp, null, !dbg !2677
  br i1 %tobool, label %do.body, label %cond.true, !dbg !2677

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %counterp, align 4, !dbg !2678
  %inc = add nsw i32 %1, 1, !dbg !2678
  store i32 %inc, i32* %counterp, align 4, !dbg !2678
  br label %do.body, !dbg !2677

do.body:                                          ; preds = %entry, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 0, %entry ], !dbg !2677
  call void @llvm.dbg.value(metadata i32 %cond, metadata !2673, metadata !DIExpression()), !dbg !2674
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %stem, i32 %cond) #6, !dbg !2679
  call void @dbxout_stab_value_label_diff(i8* nonnull %0, i8* %base) #8, !dbg !2681
  %2 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !2682
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2683
  %conv = sext i32 %cond to i64, !dbg !2684
  call void %2(%struct._IO_FILE* %3, i8* %stem, i64 %conv) #6, !dbg !2685
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !2686
  ret void, !dbg !2686
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_stabd(i32 %stype, i32 %sdesc) local_unnamed_addr #5 !dbg !2687 {
entry:
  call void @llvm.dbg.value(metadata i32 %stype, metadata !2691, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.value(metadata i32 %sdesc, metadata !2692, metadata !DIExpression()), !dbg !2693
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2694
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !2695
  tail call void @dbxout_int(i32 %stype) #8, !dbg !2696
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2697
  %call1 = tail call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), %struct._IO_FILE* %1) #6, !dbg !2698
  tail call void @dbxout_int(i32 %sdesc) #8, !dbg !2699
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2700
  %call2 = tail call i32 @putc(i32 10, %struct._IO_FILE* %2) #6, !dbg !2701
  ret void, !dbg !2702
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_begin_stabn(i32 %stype) local_unnamed_addr #5 !dbg !2703 {
entry:
  call void @llvm.dbg.value(metadata i32 %stype, metadata !2705, metadata !DIExpression()), !dbg !2706
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2707
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !2708
  tail call void @dbxout_int(i32 %stype) #8, !dbg !2709
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2710
  %call1 = tail call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %struct._IO_FILE* %1) #6, !dbg !2711
  ret void, !dbg !2712
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_begin_stabn_sline(i32 %lineno) local_unnamed_addr #5 !dbg !2713 {
entry:
  call void @llvm.dbg.value(metadata i32 %lineno, metadata !2715, metadata !DIExpression()), !dbg !2716
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2717
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !2718
  tail call void @dbxout_int(i32 68) #8, !dbg !2719
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2720
  %call1 = tail call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), %struct._IO_FILE* %1) #6, !dbg !2721
  tail call void @dbxout_int(i32 %lineno) #8, !dbg !2722
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2723
  %call2 = tail call i32 @putc(i32 44, %struct._IO_FILE* %2) #6, !dbg !2724
  ret void, !dbg !2725
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_begin_empty_stabs(i32 %stype) local_unnamed_addr #5 !dbg !2726 {
entry:
  call void @llvm.dbg.value(metadata i32 %stype, metadata !2728, metadata !DIExpression()), !dbg !2729
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2730
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !2731
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2732
  %call1 = tail call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), %struct._IO_FILE* %1) #6, !dbg !2733
  tail call void @dbxout_int(i32 %stype) #8, !dbg !2734
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2735
  %call2 = tail call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %struct._IO_FILE* %2) #6, !dbg !2736
  ret void, !dbg !2737
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_begin_simple_stabs(i8* %str, i32 %stype) local_unnamed_addr #5 !dbg !2738 {
entry:
  call void @llvm.dbg.value(metadata i8* %str, metadata !2742, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata i32 %stype, metadata !2743, metadata !DIExpression()), !dbg !2744
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2745
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !2746
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2747
  tail call void @output_quoted_string(%struct._IO_FILE* %1, i8* %str) #6, !dbg !2748
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2749
  %call1 = tail call i32 @putc(i32 44, %struct._IO_FILE* %2) #6, !dbg !2750
  tail call void @dbxout_int(i32 %stype) #8, !dbg !2751
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2752
  %call2 = tail call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %struct._IO_FILE* %3) #6, !dbg !2753
  ret void, !dbg !2754
}

declare dso_local void @output_quoted_string(%struct._IO_FILE*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_begin_simple_stabs_desc(i8* %str, i32 %stype, i32 %sdesc) local_unnamed_addr #5 !dbg !2755 {
entry:
  call void @llvm.dbg.value(metadata i8* %str, metadata !2759, metadata !DIExpression()), !dbg !2762
  call void @llvm.dbg.value(metadata i32 %stype, metadata !2760, metadata !DIExpression()), !dbg !2762
  call void @llvm.dbg.value(metadata i32 %sdesc, metadata !2761, metadata !DIExpression()), !dbg !2762
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2763
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !2764
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2765
  tail call void @output_quoted_string(%struct._IO_FILE* %1, i8* %str) #6, !dbg !2766
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2767
  %call1 = tail call i32 @putc(i32 44, %struct._IO_FILE* %2) #6, !dbg !2768
  tail call void @dbxout_int(i32 %stype) #8, !dbg !2769
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2770
  %call2 = tail call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), %struct._IO_FILE* %3) #6, !dbg !2771
  tail call void @dbxout_int(i32 %sdesc) #8, !dbg !2772
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !2773
  %call3 = tail call i32 @putc(i32 44, %struct._IO_FILE* %4) #6, !dbg !2774
  ret void, !dbg !2775
}

; Function Attrs: nounwind uwtable
define dso_local i32 @dbxout_symbol(%union.tree_node* %decl, i32 %local) local_unnamed_addr #5 !dbg !2776 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2780, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata i32 %local, metadata !2781, metadata !DIExpression()), !dbg !2806
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2807
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !2807
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2782, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2783, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata i32 0, metadata !2784, metadata !DIExpression()), !dbg !2806
  %1 = load i32, i32* @debug_nesting, align 4, !dbg !2808
  %inc = add nsw i32 %1, 1, !dbg !2808
  store i32 %inc, i32* @debug_nesting, align 4, !dbg !2808
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2809
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !2809
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !2811
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !2812

land.lhs.true:                                    ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2813
  %bf.load = load i64, i64* %3, align 8, !dbg !2813
  %bf.cast44 = and i64 %bf.load, 65535, !dbg !2814
  %cmp2 = icmp eq i64 %bf.cast44, 35, !dbg !2814
  br i1 %cmp2, label %lor.lhs.false, label %do.body, !dbg !2815

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2816
  %4 = bitcast i40* %ignored_flag to i64*, !dbg !2816
  %bf.load3 = load i64, i64* %4, align 8, !dbg !2816
  %bf.cast54 = and i64 %bf.load3, 1024, !dbg !2816
  %tobool = icmp eq i64 %bf.cast54, 0, !dbg !2816
  br i1 %tobool, label %if.end, label %do.body, !dbg !2817

do.body:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i32 %1, i32* @debug_nesting, align 4, !dbg !2818
  br label %cleanup, !dbg !2818

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* @flag_debug_only_used_symbols, align 4, !dbg !2820
  %tobool6 = icmp eq i32 %5, 0, !dbg !2820
  br i1 %tobool6, label %if.end28, label %land.lhs.true7, !dbg !2822

land.lhs.true7:                                   ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2823
  %bf.load9 = load i64, i64* %6, align 8, !dbg !2823
  %bf.cast1242 = and i64 %bf.load9, 16777216, !dbg !2823
  %tobool13 = icmp eq i64 %bf.cast1242, 0, !dbg !2823
  br i1 %tobool13, label %land.lhs.true14, label %if.end28, !dbg !2824

land.lhs.true14:                                  ; preds = %land.lhs.true7
  %bf.cast1843 = and i64 %bf.load9, 65535, !dbg !2825
  %cmp19 = icmp eq i64 %bf.cast1843, 32, !dbg !2825
  br i1 %cmp19, label %lor.lhs.false20, label %do.body24, !dbg !2826

lor.lhs.false20:                                  ; preds = %land.lhs.true14
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !2827
  %7 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !2827
  %tobool22 = icmp eq %union.tree_node* %7, null, !dbg !2827
  br i1 %tobool22, label %do.body24, label %if.end28, !dbg !2828

do.body24:                                        ; preds = %lor.lhs.false20, %land.lhs.true14
  store i32 %1, i32* @debug_nesting, align 4, !dbg !2829
  br label %cleanup, !dbg !2829

if.end28:                                         ; preds = %lor.lhs.false20, %land.lhs.true7, %if.end
  %8 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !2831
  %tobool29 = icmp eq %struct.typeinfo* %8, null, !dbg !2831
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !2833

if.then30:                                        ; preds = %if.end28
  %9 = load %union.tree_node*, %union.tree_node** @preinit_symbols, align 8, !dbg !2834
  %call = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %decl, %union.tree_node* %9) #6, !dbg !2834
  store %union.tree_node* %call, %union.tree_node** @preinit_symbols, align 8, !dbg !2836
  %10 = load i32, i32* @debug_nesting, align 4, !dbg !2837
  %dec32 = add nsw i32 %10, -1, !dbg !2837
  store i32 %dec32, i32* @debug_nesting, align 4, !dbg !2837
  br label %cleanup, !dbg !2837

if.end35:                                         ; preds = %if.end28
  br i1 %tobool6, label %if.end151, label %while.cond.preheader, !dbg !2839

while.cond.preheader:                             ; preds = %if.end35
  br label %while.cond, !dbg !2840

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %t.0 = phi %union.tree_node* [ %12, %while.body ], [ %0, %while.cond.preheader ], !dbg !2841
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !2786, metadata !DIExpression()), !dbg !2841
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2842
  %bf.load39 = load i64, i64* %11, align 8, !dbg !2842
  %bf.cast4135 = and i64 %bf.load39, 65535, !dbg !2842
  %cmp42 = icmp eq i64 %bf.cast4135, 10, !dbg !2842
  %cmp47 = icmp eq i64 %bf.cast4135, 12, !dbg !2842
  %or.cond70 = or i1 %cmp42, %cmp47, !dbg !2842
  br i1 %or.cond70, label %while.body, label %while.end, !dbg !2842

while.body:                                       ; preds = %while.cond
  %type49 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2843
  %12 = load %union.tree_node*, %union.tree_node** %type49, align 8, !dbg !2843
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !2786, metadata !DIExpression()), !dbg !2841
  br label %while.cond, !dbg !2840, !llvm.loop !2844

while.end:                                        ; preds = %while.cond
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %while.cond ], !dbg !2841
  %bf.cast4135.lcssa = phi i64 [ %bf.cast4135, %while.cond ], !dbg !2842
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !2786, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !2786, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !2786, metadata !DIExpression()), !dbg !2841
  %cmp54 = icmp eq i64 %bf.cast4135.lcssa, 16, !dbg !2845
  br i1 %cmp54, label %if.then73, label %lor.lhs.false55, !dbg !2847

lor.lhs.false55:                                  ; preds = %while.end
  %cmp60 = icmp eq i64 %bf.cast4135.lcssa, 17, !dbg !2848
  br i1 %cmp60, label %if.then73, label %lor.lhs.false61, !dbg !2849

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %cmp66 = icmp eq i64 %bf.cast4135.lcssa, 18, !dbg !2850
  br i1 %cmp66, label %if.then73, label %lor.lhs.false67, !dbg !2851

lor.lhs.false67:                                  ; preds = %lor.lhs.false61
  %cmp72 = icmp eq i64 %bf.cast4135.lcssa, 6, !dbg !2852
  br i1 %cmp72, label %if.then73, label %if.else, !dbg !2853

if.then73:                                        ; preds = %lor.lhs.false67, %lor.lhs.false61, %lor.lhs.false55, %while.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2854
  %13 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2854
  %tobool75 = icmp eq %union.tree_node* %13, null, !dbg !2854
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2857
  br i1 %tobool75, label %if.end151, label %land.lhs.true76, !dbg !2857

land.lhs.true76:                                  ; preds = %if.then73
  %cmp79 = icmp eq %union.tree_node* %13, %decl, !dbg !2858
  br i1 %cmp79, label %if.end151, label %land.lhs.true80, !dbg !2859

land.lhs.true80:                                  ; preds = %land.lhs.true76
  %bf.load84 = load i64, i64* %14, align 8, !dbg !2860
  %bf.cast86 = and i64 %bf.load84, 65535, !dbg !2860
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast86, !dbg !2860
  %15 = load i32, i32* %arrayidx, align 4, !dbg !2860
  %cmp87 = icmp eq i32 %15, 3, !dbg !2860
  br i1 %cmp87, label %land.lhs.true88, label %if.end151, !dbg !2861

land.lhs.true88:                                  ; preds = %land.lhs.true80
  %ignored_flag92 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2862
  %16 = bitcast i40* %ignored_flag92 to i64*, !dbg !2862
  %bf.load93 = load i64, i64* %16, align 8, !dbg !2862
  %bf.cast9641 = and i64 %bf.load93, 1024, !dbg !2862
  %tobool97 = icmp eq i64 %bf.cast9641, 0, !dbg !2862
  br i1 %tobool97, label %if.then98, label %if.end151, !dbg !2863

if.then98:                                        ; preds = %land.lhs.true88
  tail call void @debug_queue_symbol(%union.tree_node* nonnull %13) #6, !dbg !2864
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !2866
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !2866
  %tobool103 = icmp eq %union.tree_node* %18, null, !dbg !2866
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2868
  br i1 %tobool103, label %if.end151, label %land.lhs.true104, !dbg !2868

land.lhs.true104:                                 ; preds = %if.then98
  %20 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !2869
  %cmp109 = icmp eq %union.tree_node* %18, %20, !dbg !2870
  br i1 %cmp109, label %if.end151, label %land.lhs.true110, !dbg !2871

land.lhs.true110:                                 ; preds = %land.lhs.true104
  %cmp113 = icmp eq %union.tree_node* %18, %decl, !dbg !2872
  br i1 %cmp113, label %if.end151, label %land.lhs.true114, !dbg !2873

land.lhs.true114:                                 ; preds = %land.lhs.true110
  %bf.load118 = load i64, i64* %19, align 8, !dbg !2874
  %bf.cast120 = and i64 %bf.load118, 65535, !dbg !2874
  %arrayidx122 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast120, !dbg !2874
  %21 = load i32, i32* %arrayidx122, align 4, !dbg !2874
  %cmp123 = icmp eq i32 %21, 3, !dbg !2874
  br i1 %cmp123, label %if.then124, label %if.end151, !dbg !2875

if.then124:                                       ; preds = %land.lhs.true114
  tail call void @debug_queue_symbol(%union.tree_node* nonnull %18) #6, !dbg !2876
  br label %if.end151, !dbg !2876

if.else:                                          ; preds = %lor.lhs.false67
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !2877
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !2877
  %tobool131 = icmp eq %union.tree_node* %23, null, !dbg !2877
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2879
  br i1 %tobool131, label %if.end151, label %land.lhs.true132, !dbg !2879

land.lhs.true132:                                 ; preds = %if.else
  %cmp135 = icmp eq %union.tree_node* %23, %decl, !dbg !2880
  br i1 %cmp135, label %if.end151, label %land.lhs.true136, !dbg !2881

land.lhs.true136:                                 ; preds = %land.lhs.true132
  %bf.load140 = load i64, i64* %24, align 8, !dbg !2882
  %bf.cast142 = and i64 %bf.load140, 65535, !dbg !2882
  %arrayidx144 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast142, !dbg !2882
  %25 = load i32, i32* %arrayidx144, align 4, !dbg !2882
  %cmp145 = icmp eq i32 %25, 3, !dbg !2882
  br i1 %cmp145, label %if.then146, label %if.end151, !dbg !2883

if.then146:                                       ; preds = %land.lhs.true136
  tail call void @debug_queue_symbol(%union.tree_node* nonnull %23) #6, !dbg !2884
  br label %if.end151, !dbg !2884

if.end151:                                        ; preds = %land.lhs.true110, %land.lhs.true104, %if.then98, %land.lhs.true88, %land.lhs.true76, %if.then73, %land.lhs.true132, %if.else, %if.end35, %land.lhs.true114, %if.then124, %land.lhs.true80, %if.then146, %land.lhs.true136
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !2885
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2886
  %bf.load153 = load i64, i64* %26, align 8, !dbg !2886
  %27 = trunc i64 %bf.load153 to i16, !dbg !2886
  switch i16 %27, label %sw.epilog [
    i16 32, label %sw.bb671
    i16 29, label %sw.bb
    i16 35, label %sw.bb335
    i16 34, label %sw.bb651
    i16 36, label %sw.bb671
  ], !dbg !2887

sw.bb:                                            ; preds = %if.end151
  %bf.cast159 = and i64 %bf.load153, 65535, !dbg !2888
  %arrayidx162 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast159, i64 11, !dbg !2888
  %28 = load i8, i8* %arrayidx162, align 1, !dbg !2888
  %tobool163 = icmp eq i8 %28, 0, !dbg !2888
  br i1 %tobool163, label %cond.end176, label %land.lhs.true164, !dbg !2888

land.lhs.true164:                                 ; preds = %sw.bb
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2888
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2888
  %cmp165 = icmp eq %struct.rtx_def* %29, null, !dbg !2888
  br i1 %cmp165, label %cond.end176, label %cond.true, !dbg !2888

cond.true:                                        ; preds = %land.lhs.true164
  br i1 false, label %cond.false, label %cond.true170, !dbg !2888

cond.true170:                                     ; preds = %cond.true
  br label %cond.end176, !dbg !2888

cond.false:                                       ; preds = %cond.true
  br label %cond.end176, !dbg !2888

cond.end176:                                      ; preds = %land.lhs.true164, %sw.bb, %cond.true170, %cond.false
  %cond177 = phi %struct.rtx_def* [ %29, %cond.true170 ], [ undef, %cond.false ], [ null, %land.lhs.true164 ], [ null, %sw.bb ], !dbg !2888
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond177, metadata !2785, metadata !DIExpression()), !dbg !2806
  %tobool178 = icmp eq %struct.rtx_def* %cond177, null, !dbg !2889
  br i1 %tobool178, label %do.body180, label %if.end184, !dbg !2891

do.body180:                                       ; preds = %cond.end176
  %30 = load i32, i32* @debug_nesting, align 4, !dbg !2892
  %dec181 = add nsw i32 %30, -1, !dbg !2892
  store i32 %dec181, i32* @debug_nesting, align 4, !dbg !2892
  br label %cleanup, !dbg !2892

if.end184:                                        ; preds = %cond.end176
  %bf.load186 = load i64, i64* %4, align 8, !dbg !2894
  %bf.cast18932 = and i64 %bf.load186, 33554432, !dbg !2894
  %tobool190 = icmp eq i64 %bf.cast18932, 0, !dbg !2894
  br i1 %tobool190, label %if.end192, label %sw.epilog, !dbg !2896

if.end192:                                        ; preds = %if.end184
  %call193 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #6, !dbg !2897
  call void @llvm.dbg.value(metadata %union.tree_node* %call193, metadata !2783, metadata !DIExpression()), !dbg !2806
  %31 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2898
  %cmp194 = icmp eq %union.tree_node* %call193, %31, !dbg !2900
  br i1 %cmp194, label %sw.epilog, label %if.end197, !dbg !2901

if.end197:                                        ; preds = %if.end192
  %tobool198 = icmp eq %union.tree_node* %call193, null, !dbg !2902
  br i1 %tobool198, label %if.end209, label %land.lhs.true199, !dbg !2904

land.lhs.true199:                                 ; preds = %if.end197
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !2905
  %32 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8, !dbg !2905
  %cmp201 = icmp eq %union.tree_node* %32, null, !dbg !2905
  br i1 %cmp201, label %if.end209, label %land.lhs.true203, !dbg !2905

land.lhs.true203:                                 ; preds = %land.lhs.true199
  %cmp206 = icmp eq %union.tree_node* %32, %decl, !dbg !2905
  br i1 %cmp206, label %if.end209, label %sw.epilog, !dbg !2906

if.end209:                                        ; preds = %land.lhs.true203, %land.lhs.true199, %if.end197
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond177, i64 0, i32 0, !dbg !2907
  %bf.load210 = load i32, i32* %33, align 8, !dbg !2907
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !2907
  %cmp212 = icmp eq i32 %bf.clear211, 43, !dbg !2907
  br i1 %cmp212, label %lor.lhs.false214, label %sw.epilog, !dbg !2909

lor.lhs.false214:                                 ; preds = %if.end209
  %arrayidx215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond177, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2910
  %34 = bitcast %union.rtunion_def* %arrayidx215 to i32**, !dbg !2910
  %35 = load i32*, i32** %34, align 8, !dbg !2910
  %bf.load216 = load i32, i32* %35, align 8, !dbg !2910
  %bf.clear217 = and i32 %bf.load216, 65535, !dbg !2910
  %cmp218 = icmp eq i32 %bf.clear217, 45, !dbg !2911
  br i1 %cmp218, label %if.end221, label %sw.epilog, !dbg !2912

if.end221:                                        ; preds = %lor.lhs.false214
  %36 = load i32, i32* @flag_debug_only_used_symbols, align 4, !dbg !2913
  %tobool222 = icmp eq i32 %36, 0, !dbg !2913
  br i1 %tobool222, label %if.end224, label %if.then223, !dbg !2915

if.then223:                                       ; preds = %if.end221
  tail call fastcc void @output_used_types() #8, !dbg !2916
  br label %if.end224, !dbg !2916

if.end224:                                        ; preds = %if.end221, %if.then223
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !2917
  %call225 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !2918
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2918
  %37 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !2918
  %38 = load i32, i32* %37, align 8, !dbg !2918
  %conv226 = zext i32 %38 to i64, !dbg !2918
  store i64 %conv226, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2918
  %39 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2918
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %conv226, !dbg !2918
  %40 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2918
  %cmp227 = icmp ugt i8* %add.ptr, %40, !dbg !2918
  br i1 %cmp227, label %cond.true229, label %cond.end232, !dbg !2918

cond.true229:                                     ; preds = %if.end224
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %38) #6, !dbg !2918
  %.pre60 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2918
  br label %cond.end232, !dbg !2918

cond.end232:                                      ; preds = %if.end224, %cond.true229
  %41 = phi i8* [ %39, %if.end224 ], [ %.pre60, %cond.true229 ], !dbg !2918
  %call234 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !2918
  %id236 = getelementptr inbounds %union.tree_node, %union.tree_node* %call234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2918
  %str = bitcast i32* %id236 to i8**, !dbg !2918
  %42 = load i8*, i8** %str, align 8, !dbg !2918
  %43 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2918
  %call237 = tail call i8* @memcpy(i8* %41, i8* %42, i64 %43) #6, !dbg !2918
  %44 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2918
  %45 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2918
  %add.ptr238 = getelementptr inbounds i8, i8* %45, i64 %44, !dbg !2918
  store i8* %add.ptr238, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2918
  %bf.load240 = load i64, i64* %26, align 8, !dbg !2919
  %bf.cast24333 = and i64 %bf.load240, 134217728, !dbg !2919
  %tobool244 = icmp eq i64 %bf.cast24333, 0, !dbg !2919
  %cond245 = select i1 %tobool244, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), !dbg !2919
  %call246 = tail call i64 @strlen(i8* %cond245) #6, !dbg !2919
  store i64 %call246, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2919
  %46 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2919
  %add.ptr247 = getelementptr inbounds i8, i8* %46, i64 %call246, !dbg !2919
  %47 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2919
  %cmp248 = icmp ugt i8* %add.ptr247, %47, !dbg !2919
  br i1 %cmp248, label %cond.true250, label %cond.end253, !dbg !2919

cond.true250:                                     ; preds = %cond.end232
  %conv251 = trunc i64 %call246 to i32, !dbg !2919
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv251) #6, !dbg !2919
  %.pre61 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2919
  %.pre62 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2919
  br label %cond.end253, !dbg !2919

cond.end253:                                      ; preds = %cond.end232, %cond.true250
  %48 = phi i64 [ %call246, %cond.end232 ], [ %.pre62, %cond.true250 ], !dbg !2919
  %49 = phi i8* [ %46, %cond.end232 ], [ %.pre61, %cond.true250 ], !dbg !2919
  %bf.load256 = load i64, i64* %26, align 8, !dbg !2919
  %bf.cast25934 = and i64 %bf.load256, 134217728, !dbg !2919
  %tobool260 = icmp eq i64 %bf.cast25934, 0, !dbg !2919
  %cond261 = select i1 %tobool260, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), !dbg !2919
  %call262 = tail call i8* @memcpy(i8* %49, i8* %cond261, i64 %48) #6, !dbg !2919
  %50 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2919
  %51 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2919
  %add.ptr263 = getelementptr inbounds i8, i8* %51, i64 %50, !dbg !2919
  store i8* %add.ptr263, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2919
  call void @llvm.dbg.value(metadata i32 1, metadata !2784, metadata !DIExpression()), !dbg !2806
  %type265 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2920
  %52 = load %union.tree_node*, %union.tree_node** %type265, align 8, !dbg !2920
  %tobool266 = icmp eq %union.tree_node* %52, null, !dbg !2920
  br i1 %tobool266, label %if.else270, label %if.then267, !dbg !2922

if.then267:                                       ; preds = %cond.end253
  tail call fastcc void @dbxout_type(%union.tree_node* nonnull %52, i32 0) #8, !dbg !2923
  br label %if.end271, !dbg !2923

if.else270:                                       ; preds = %cond.end253
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !2924
  tail call fastcc void @dbxout_type(%union.tree_node* %53, i32 0) #8, !dbg !2925
  br label %if.end271

if.end271:                                        ; preds = %if.else270, %if.then267
  br i1 %tobool198, label %if.end330, label %if.then274, !dbg !2926

if.then274:                                       ; preds = %if.end271
  %54 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2927
  %add.ptr275 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !2927
  %55 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2927
  %cmp276 = icmp ugt i8* %add.ptr275, %55, !dbg !2927
  br i1 %cmp276, label %cond.true278, label %cond.end280, !dbg !2927

cond.true278:                                     ; preds = %if.then274
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !2927
  %.pre63 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2927
  br label %cond.end280, !dbg !2927

cond.end280:                                      ; preds = %if.then274, %cond.true278
  %56 = phi i8* [ %54, %if.then274 ], [ %.pre63, %cond.true278 ], !dbg !2927
  %incdec.ptr = getelementptr inbounds i8, i8* %56, i64 1, !dbg !2927
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2927
  store i8 44, i8* %56, align 1, !dbg !2927
  %call282 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !2930
  %id284 = getelementptr inbounds %union.tree_node, %union.tree_node* %call282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2930
  %57 = getelementptr inbounds i32, i32* %id284, i64 2, !dbg !2930
  %58 = load i32, i32* %57, align 8, !dbg !2930
  %conv286 = zext i32 %58 to i64, !dbg !2930
  store i64 %conv286, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2930
  %59 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2930
  %add.ptr287 = getelementptr inbounds i8, i8* %59, i64 %conv286, !dbg !2930
  %60 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2930
  %cmp288 = icmp ugt i8* %add.ptr287, %60, !dbg !2930
  br i1 %cmp288, label %cond.true290, label %cond.end293, !dbg !2930

cond.true290:                                     ; preds = %cond.end280
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %58) #6, !dbg !2930
  %.pre64 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2930
  br label %cond.end293, !dbg !2930

cond.end293:                                      ; preds = %cond.end280, %cond.true290
  %61 = phi i8* [ %59, %cond.end280 ], [ %.pre64, %cond.true290 ], !dbg !2930
  %call295 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !2930
  %id297 = getelementptr inbounds %union.tree_node, %union.tree_node* %call295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2930
  %str298 = bitcast i32* %id297 to i8**, !dbg !2930
  %62 = load i8*, i8** %str298, align 8, !dbg !2930
  %63 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2930
  %call299 = tail call i8* @memcpy(i8* %61, i8* %62, i64 %63) #6, !dbg !2930
  %64 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2930
  %65 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2930
  %add.ptr300 = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !2930
  store i8* %add.ptr300, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2930
  %add.ptr301 = getelementptr inbounds i8, i8* %add.ptr300, i64 1, !dbg !2931
  %66 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2931
  %cmp302 = icmp ugt i8* %add.ptr301, %66, !dbg !2931
  br i1 %cmp302, label %cond.true304, label %cond.end306, !dbg !2931

cond.true304:                                     ; preds = %cond.end293
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !2931
  %.pre65 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2931
  br label %cond.end306, !dbg !2931

cond.end306:                                      ; preds = %cond.end293, %cond.true304
  %67 = phi i8* [ %add.ptr300, %cond.end293 ], [ %.pre65, %cond.true304 ], !dbg !2931
  %incdec.ptr308 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !2931
  store i8* %incdec.ptr308, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2931
  store i8 44, i8* %67, align 1, !dbg !2931
  %name310 = getelementptr inbounds %union.tree_node, %union.tree_node* %call193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2932
  %68 = bitcast %union.tree_node** %name310 to %struct.tree_identifier**, !dbg !2932
  %69 = load %struct.tree_identifier*, %struct.tree_identifier** %68, align 8, !dbg !2932
  %len313 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %69, i64 0, i32 1, i32 1, !dbg !2932
  %70 = load i32, i32* %len313, align 8, !dbg !2932
  %conv314 = zext i32 %70 to i64, !dbg !2932
  store i64 %conv314, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2932
  %71 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2932
  %add.ptr315 = getelementptr inbounds i8, i8* %71, i64 %conv314, !dbg !2932
  %72 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2932
  %cmp316 = icmp ugt i8* %add.ptr315, %72, !dbg !2932
  br i1 %cmp316, label %cond.true318, label %cond.end321, !dbg !2932

cond.true318:                                     ; preds = %cond.end306
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %70) #6, !dbg !2932
  %.pre66 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2932
  %.pre67 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2932
  br label %cond.end321, !dbg !2932

cond.end321:                                      ; preds = %cond.end306, %cond.true318
  %73 = phi i64 [ %conv314, %cond.end306 ], [ %.pre67, %cond.true318 ], !dbg !2932
  %74 = phi i8* [ %71, %cond.end306 ], [ %.pre66, %cond.true318 ], !dbg !2932
  %75 = load %struct.tree_identifier*, %struct.tree_identifier** %68, align 8, !dbg !2932
  %str327 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %75, i64 0, i32 1, i32 0, !dbg !2932
  %76 = load i8*, i8** %str327, align 8, !dbg !2932
  %call328 = tail call i8* @memcpy(i8* %74, i8* %76, i64 %73) #6, !dbg !2932
  %77 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2932
  %78 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2932
  %add.ptr329 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !2932
  store i8* %add.ptr329, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2932
  br label %if.end330, !dbg !2933

if.end330:                                        ; preds = %if.end271, %cond.end321
  %rt_rtx334 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**, !dbg !2934
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx334, align 8, !dbg !2934
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* %decl, i32 36, %struct.rtx_def* %79, i8* null, i32 0) #8, !dbg !2935
  br label %sw.epilog, !dbg !2936

sw.bb335:                                         ; preds = %if.end151
  %bf.cast34016 = and i64 %bf.load153, 4194304, !dbg !2937
  %tobool341 = icmp eq i64 %bf.cast34016, 0, !dbg !2937
  br i1 %tobool341, label %lor.lhs.false342, label %do.body351, !dbg !2939

lor.lhs.false342:                                 ; preds = %sw.bb335
  %bf.load345 = load i64, i64* %4, align 8, !dbg !2940
  %bf.cast34817 = and i64 %bf.load345, 33554432, !dbg !2940
  %tobool349 = icmp eq i64 %bf.cast34817, 0, !dbg !2940
  br i1 %tobool349, label %if.end355, label %do.body351, !dbg !2941

do.body351:                                       ; preds = %lor.lhs.false342, %sw.bb335
  %80 = load i32, i32* @debug_nesting, align 4, !dbg !2942
  %dec352 = add nsw i32 %80, -1, !dbg !2942
  store i32 %dec352, i32* @debug_nesting, align 4, !dbg !2942
  br label %cleanup, !dbg !2942

if.end355:                                        ; preds = %lor.lhs.false342
  call void @llvm.dbg.value(metadata i32 1, metadata !2784, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata i32 1, metadata !2789, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata i32 0, metadata !2792, metadata !DIExpression()), !dbg !2944
  %81 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !2945
  %tobool358 = icmp eq %union.tree_node* %81, null, !dbg !2945
  br i1 %tobool358, label %if.end546, label %if.then359, !dbg !2946

if.then359:                                       ; preds = %if.end355
  call void @llvm.dbg.value(metadata i32 0, metadata !2789, metadata !DIExpression()), !dbg !2944
  %82 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2947
  %bf.load361 = load i64, i64* %82, align 8, !dbg !2947
  %bf.cast36322 = and i64 %bf.load361, 65535, !dbg !2948
  %cmp364 = icmp eq i64 %bf.cast36322, 16, !dbg !2948
  br i1 %cmp364, label %land.lhs.true380, label %lor.lhs.false366, !dbg !2949

lor.lhs.false366:                                 ; preds = %if.then359
  %cmp371 = icmp eq i64 %bf.cast36322, 17, !dbg !2950
  br i1 %cmp371, label %land.lhs.true380, label %lor.lhs.false373, !dbg !2951

lor.lhs.false373:                                 ; preds = %lor.lhs.false366
  %cmp378 = icmp eq i64 %bf.cast36322, 18, !dbg !2952
  br i1 %cmp378, label %land.lhs.true380, label %if.end454, !dbg !2953

land.lhs.true380:                                 ; preds = %lor.lhs.false373, %lor.lhs.false366, %if.then359
  %83 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !2954
  %84 = load %union.tree_node*, %union.tree_node** %83, align 8, !dbg !2954
  %cmp383 = icmp ne %union.tree_node* %84, %decl, !dbg !2955
  %85 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !2956
  %tobool386 = icmp ne i8 %85, 0, !dbg !2956
  %or.cond = or i1 %cmp383, %tobool386, !dbg !2957
  br i1 %or.cond, label %if.end454, label %land.lhs.true387, !dbg !2957

land.lhs.true387:                                 ; preds = %land.lhs.true380
  %86 = getelementptr inbounds %union.tree_node, %union.tree_node* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2957
  %bf.load391 = load i64, i64* %86, align 8, !dbg !2958
  %bf.cast39429 = and i64 %bf.load391, 4194304, !dbg !2958
  %tobool395 = icmp eq i64 %bf.cast39429, 0, !dbg !2958
  br i1 %tobool395, label %land.lhs.true396, label %if.end454, !dbg !2959

land.lhs.true396:                                 ; preds = %land.lhs.true387
  %bf.cast40130 = and i64 %bf.load345, 4096, !dbg !2960
  %tobool402 = icmp eq i64 %bf.cast40130, 0, !dbg !2960
  br i1 %tobool402, label %if.end454, label %land.lhs.true403, !dbg !2961

land.lhs.true403:                                 ; preds = %land.lhs.true396
  %87 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2962
  %88 = load %union.tree_node*, %union.tree_node** %87, align 8, !dbg !2962
  %cmp405 = icmp eq %union.tree_node* %88, null, !dbg !2962
  br i1 %cmp405, label %if.end454, label %land.lhs.true407, !dbg !2963

land.lhs.true407:                                 ; preds = %land.lhs.true403
  %call410 = tail call i32 @host_integerp(%union.tree_node* nonnull %88, i32 1) #6, !dbg !2964
  %tobool411 = icmp eq i32 %call410, 0, !dbg !2964
  br i1 %tobool411, label %if.end454, label %if.then412, !dbg !2965

if.then412:                                       ; preds = %land.lhs.true407
  %89 = load %union.tree_node*, %union.tree_node** %83, align 8, !dbg !2966
  call void @llvm.dbg.value(metadata %union.tree_node* %89, metadata !2793, metadata !DIExpression()), !dbg !2967
  %90 = getelementptr inbounds %union.tree_node, %union.tree_node* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2968
  %bf.load417 = load i64, i64* %90, align 8, !dbg !2968
  %bf.cast41931 = and i64 %bf.load417, 65535, !dbg !2970
  %cmp420 = icmp eq i64 %bf.cast41931, 35, !dbg !2970
  br i1 %cmp420, label %if.then422, label %if.end425, !dbg !2971

if.then422:                                       ; preds = %if.then412
  %name424 = getelementptr inbounds %union.tree_node, %union.tree_node* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2972
  %91 = load %union.tree_node*, %union.tree_node** %name424, align 8, !dbg !2972
  call void @llvm.dbg.value(metadata %union.tree_node* %91, metadata !2793, metadata !DIExpression()), !dbg !2967
  br label %if.end425, !dbg !2973

if.end425:                                        ; preds = %if.then422, %if.then412
  %name413.0 = phi %union.tree_node* [ %91, %if.then422 ], [ %89, %if.then412 ], !dbg !2967
  call void @llvm.dbg.value(metadata %union.tree_node* %name413.0, metadata !2793, metadata !DIExpression()), !dbg !2967
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !2974
  %id427 = getelementptr inbounds %union.tree_node, %union.tree_node* %name413.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2975
  %92 = getelementptr inbounds i32, i32* %id427, i64 2, !dbg !2975
  %93 = load i32, i32* %92, align 8, !dbg !2975
  %conv429 = zext i32 %93 to i64, !dbg !2975
  store i64 %conv429, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2975
  %94 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2975
  %add.ptr430 = getelementptr inbounds i8, i8* %94, i64 %conv429, !dbg !2975
  %95 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2975
  %cmp431 = icmp ugt i8* %add.ptr430, %95, !dbg !2975
  br i1 %cmp431, label %cond.true433, label %cond.end436, !dbg !2975

cond.true433:                                     ; preds = %if.end425
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %93) #6, !dbg !2975
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2975
  %.pre46 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2975
  br label %cond.end436, !dbg !2975

cond.end436:                                      ; preds = %if.end425, %cond.true433
  %96 = phi i64 [ %conv429, %if.end425 ], [ %.pre46, %cond.true433 ], !dbg !2975
  %97 = phi i8* [ %94, %if.end425 ], [ %.pre, %cond.true433 ], !dbg !2975
  %str440 = bitcast i32* %id427 to i8**, !dbg !2975
  %98 = load i8*, i8** %str440, align 8, !dbg !2975
  %call441 = tail call i8* @memcpy(i8* %97, i8* %98, i64 %96) #6, !dbg !2975
  %99 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2975
  %100 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2975
  %add.ptr442 = getelementptr inbounds i8, i8* %100, i64 %99, !dbg !2975
  store i8* %add.ptr442, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2975
  %call443 = tail call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2976
  store i64 %call443, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2976
  %101 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2976
  %add.ptr444 = getelementptr inbounds i8, i8* %101, i64 %call443, !dbg !2976
  %102 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2976
  %cmp445 = icmp ugt i8* %add.ptr444, %102, !dbg !2976
  br i1 %cmp445, label %cond.true447, label %cond.end450, !dbg !2976

cond.true447:                                     ; preds = %cond.end436
  %conv448 = trunc i64 %call443 to i32, !dbg !2976
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv448) #6, !dbg !2976
  %.pre47 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2976
  %.pre48 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2976
  br label %cond.end450, !dbg !2976

cond.end450:                                      ; preds = %cond.end436, %cond.true447
  %103 = phi i64 [ %call443, %cond.end436 ], [ %.pre48, %cond.true447 ], !dbg !2976
  %104 = phi i8* [ %101, %cond.end436 ], [ %.pre47, %cond.true447 ], !dbg !2976
  %call452 = tail call i8* @memcpy(i8* %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 %103) #6, !dbg !2976
  %105 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2976
  %106 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2976
  %add.ptr453 = getelementptr inbounds i8, i8* %106, i64 %105, !dbg !2976
  store i8* %add.ptr453, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2976
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1) #8, !dbg !2977
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* null, i32 128, %struct.rtx_def* null, i8* null, i32 0) #8, !dbg !2978
  br label %if.end454, !dbg !2979

if.end454:                                        ; preds = %land.lhs.true407, %land.lhs.true403, %land.lhs.true396, %land.lhs.true387, %land.lhs.true380, %cond.end450, %lor.lhs.false373
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !2980
  %107 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !2981
  %tobool455 = icmp eq i8 %107, 0, !dbg !2981
  br i1 %tobool455, label %if.end457, label %if.then456, !dbg !2983

if.then456:                                       ; preds = %if.end454
  tail call fastcc void @dbxout_class_name_qualifiers(%union.tree_node* %decl) #8, !dbg !2984
  br label %if.end457, !dbg !2984

if.end457:                                        ; preds = %if.end454, %if.then456
  %108 = bitcast %union.tree_node** %name to %struct.tree_identifier**, !dbg !2985
  %109 = load %struct.tree_identifier*, %struct.tree_identifier** %108, align 8, !dbg !2985
  %len462 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %109, i64 0, i32 1, i32 1, !dbg !2985
  %110 = load i32, i32* %len462, align 8, !dbg !2985
  %conv463 = zext i32 %110 to i64, !dbg !2985
  store i64 %conv463, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2985
  %111 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2985
  %add.ptr464 = getelementptr inbounds i8, i8* %111, i64 %conv463, !dbg !2985
  %112 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2985
  %cmp465 = icmp ugt i8* %add.ptr464, %112, !dbg !2985
  br i1 %cmp465, label %cond.true467, label %cond.end470, !dbg !2985

cond.true467:                                     ; preds = %if.end457
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %110) #6, !dbg !2985
  %.pre49 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2985
  %.pre50 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2985
  br label %cond.end470, !dbg !2985

cond.end470:                                      ; preds = %if.end457, %cond.true467
  %113 = phi i64 [ %conv463, %if.end457 ], [ %.pre50, %cond.true467 ], !dbg !2985
  %114 = phi i8* [ %111, %if.end457 ], [ %.pre49, %cond.true467 ], !dbg !2985
  %115 = load %struct.tree_identifier*, %struct.tree_identifier** %108, align 8, !dbg !2985
  %str476 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %115, i64 0, i32 1, i32 0, !dbg !2985
  %116 = load i8*, i8** %str476, align 8, !dbg !2985
  %call477 = tail call i8* @memcpy(i8* %114, i8* %116, i64 %113) #6, !dbg !2985
  %117 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !2985
  %118 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2985
  %add.ptr478 = getelementptr inbounds i8, i8* %118, i64 %117, !dbg !2985
  store i8* %add.ptr478, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2985
  %add.ptr479 = getelementptr inbounds i8, i8* %add.ptr478, i64 1, !dbg !2986
  %119 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !2986
  %cmp480 = icmp ugt i8* %add.ptr479, %119, !dbg !2986
  br i1 %cmp480, label %cond.true482, label %cond.end484, !dbg !2986

cond.true482:                                     ; preds = %cond.end470
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !2986
  %.pre51 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2986
  br label %cond.end484, !dbg !2986

cond.end484:                                      ; preds = %cond.end470, %cond.true482
  %120 = phi i8* [ %add.ptr478, %cond.end470 ], [ %.pre51, %cond.true482 ], !dbg !2986
  %incdec.ptr486 = getelementptr inbounds i8, i8* %120, i64 1, !dbg !2986
  store i8* %incdec.ptr486, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !2986
  store i8 58, i8* %120, align 1, !dbg !2986
  %bf.load488 = load i64, i64* %82, align 8, !dbg !2987
  %bf.cast49025 = and i64 %bf.load488, 65535, !dbg !2989
  %cmp491 = icmp eq i64 %bf.cast49025, 16, !dbg !2989
  br i1 %cmp491, label %land.lhs.true507, label %lor.lhs.false493, !dbg !2990

lor.lhs.false493:                                 ; preds = %cond.end484
  %cmp498 = icmp eq i64 %bf.cast49025, 17, !dbg !2991
  br i1 %cmp498, label %land.lhs.true507, label %lor.lhs.false500, !dbg !2992

lor.lhs.false500:                                 ; preds = %lor.lhs.false493
  %cmp505 = icmp eq i64 %bf.cast49025, 18, !dbg !2993
  br i1 %cmp505, label %land.lhs.true507, label %if.end537, !dbg !2994

land.lhs.true507:                                 ; preds = %lor.lhs.false500, %lor.lhs.false493, %cond.end484
  %121 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !2995
  %122 = load %union.tree_node*, %union.tree_node** %121, align 8, !dbg !2995
  %cmp510 = icmp eq %union.tree_node* %122, %decl, !dbg !2996
  br i1 %cmp510, label %land.lhs.true512, label %if.end537, !dbg !2997

land.lhs.true512:                                 ; preds = %land.lhs.true507
  %bf.load515 = load i64, i64* %4, align 8, !dbg !2998
  %bf.cast51828 = and i64 %bf.load515, 4096, !dbg !2998
  %tobool519 = icmp ne i64 %bf.cast51828, 0, !dbg !2998
  %123 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !2999
  %tobool521 = icmp ne i8 %123, 0, !dbg !2999
  %or.cond3 = and i1 %tobool519, %tobool521, !dbg !3002
  br i1 %or.cond3, label %if.then522, label %if.end537, !dbg !3002

if.then522:                                       ; preds = %land.lhs.true512
  %124 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3003
  %add.ptr523 = getelementptr inbounds i8, i8* %124, i64 1, !dbg !3003
  %125 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3003
  %cmp524 = icmp ugt i8* %add.ptr523, %125, !dbg !3003
  br i1 %cmp524, label %cond.true526, label %cond.end528, !dbg !3003

cond.true526:                                     ; preds = %if.then522
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3003
  %.pre52 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3003
  br label %cond.end528, !dbg !3003

cond.end528:                                      ; preds = %if.then522, %cond.true526
  %126 = phi i8* [ %124, %if.then522 ], [ %.pre52, %cond.true526 ], !dbg !3003
  %incdec.ptr530 = getelementptr inbounds i8, i8* %126, i64 1, !dbg !3003
  store i8* %incdec.ptr530, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3003
  store i8 84, i8* %126, align 1, !dbg !3003
  %127 = bitcast %union.tree_node** %121 to i64**, !dbg !3005
  %128 = load i64*, i64** %127, align 8, !dbg !3005
  %bf.load534 = load i64, i64* %128, align 8, !dbg !3006
  %bf.set = or i64 %bf.load534, 4194304, !dbg !3006
  store i64 %bf.set, i64* %128, align 8, !dbg !3006
  br label %if.end537, !dbg !3007

if.end537:                                        ; preds = %cond.end528, %land.lhs.true512, %land.lhs.true507, %lor.lhs.false500
  %129 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3008
  %add.ptr538 = getelementptr inbounds i8, i8* %129, i64 1, !dbg !3008
  %130 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3008
  %cmp539 = icmp ugt i8* %add.ptr538, %130, !dbg !3008
  br i1 %cmp539, label %cond.true541, label %cond.end543, !dbg !3008

cond.true541:                                     ; preds = %if.end537
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3008
  %.pre53 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3008
  br label %cond.end543, !dbg !3008

cond.end543:                                      ; preds = %if.end537, %cond.true541
  %131 = phi i8* [ %129, %if.end537 ], [ %.pre53, %cond.true541 ], !dbg !3008
  %incdec.ptr545 = getelementptr inbounds i8, i8* %131, i64 1, !dbg !3008
  store i8* %incdec.ptr545, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3008
  store i8 116, i8* %131, align 1, !dbg !3008
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1) #8, !dbg !3009
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* %decl, i32 128, %struct.rtx_def* null, i8* null, i32 0) #8, !dbg !3010
  call void @llvm.dbg.value(metadata i32 1, metadata !2792, metadata !DIExpression()), !dbg !2944
  br label %if.end546, !dbg !3011

if.end546:                                        ; preds = %if.end355, %cond.end543
  %did_output.0 = phi i32 [ 1, %cond.end543 ], [ 0, %if.end355 ], !dbg !2944
  %tag_needed.0 = phi i1 [ false, %cond.end543 ], [ true, %if.end355 ]
  call void @llvm.dbg.value(metadata i32 %did_output.0, metadata !2792, metadata !DIExpression()), !dbg !2944
  br i1 %tag_needed.0, label %land.lhs.true548, label %if.end625, !dbg !3012

land.lhs.true548:                                 ; preds = %if.end546
  %132 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3013
  %133 = load %union.tree_node*, %union.tree_node** %132, align 8, !dbg !3013
  %cmp551 = icmp eq %union.tree_node* %133, null, !dbg !3014
  br i1 %cmp551, label %if.end625, label %land.lhs.true553, !dbg !3015

land.lhs.true553:                                 ; preds = %land.lhs.true548
  %134 = getelementptr inbounds %union.tree_node, %union.tree_node* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3015
  %bf.load557 = load i64, i64* %134, align 8, !dbg !3016
  %bf.cast55919 = and i64 %bf.load557, 65535, !dbg !3017
  %cmp560 = icmp eq i64 %bf.cast55919, 1, !dbg !3017
  br i1 %cmp560, label %land.lhs.true569, label %lor.lhs.false562, !dbg !3018

lor.lhs.false562:                                 ; preds = %land.lhs.true553
  %name566 = getelementptr inbounds %union.tree_node, %union.tree_node* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3019
  %135 = load %union.tree_node*, %union.tree_node** %name566, align 8, !dbg !3019
  %cmp567 = icmp eq %union.tree_node* %135, null, !dbg !3020
  br i1 %cmp567, label %if.end625, label %land.lhs.true569, !dbg !3021

land.lhs.true569:                                 ; preds = %lor.lhs.false562, %land.lhs.true553
  %136 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3022
  %137 = load %union.tree_node*, %union.tree_node** %136, align 8, !dbg !3022
  %cmp572 = icmp eq %union.tree_node* %137, null, !dbg !3022
  br i1 %cmp572, label %if.end625, label %land.lhs.true574, !dbg !3023

land.lhs.true574:                                 ; preds = %land.lhs.true569
  %bf.cast58120 = and i64 %bf.load557, 4194304, !dbg !3024
  %tobool582 = icmp eq i64 %bf.cast58120, 0, !dbg !3024
  br i1 %tobool582, label %if.then583, label %if.end625, !dbg !3025

if.then583:                                       ; preds = %land.lhs.true574
  call void @llvm.dbg.value(metadata %union.tree_node* %133, metadata !2798, metadata !DIExpression()), !dbg !3026
  %cmp591 = icmp eq i64 %bf.cast55919, 35, !dbg !3027
  br i1 %cmp591, label %if.then593, label %if.end596, !dbg !3029

if.then593:                                       ; preds = %if.then583
  %name595 = getelementptr inbounds %union.tree_node, %union.tree_node* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3030
  %138 = load %union.tree_node*, %union.tree_node** %name595, align 8, !dbg !3030
  call void @llvm.dbg.value(metadata %union.tree_node* %138, metadata !2798, metadata !DIExpression()), !dbg !3026
  br label %if.end596, !dbg !3031

if.end596:                                        ; preds = %if.then593, %if.then583
  %name584.0 = phi %union.tree_node* [ %138, %if.then593 ], [ %133, %if.then583 ], !dbg !3026
  call void @llvm.dbg.value(metadata %union.tree_node* %name584.0, metadata !2798, metadata !DIExpression()), !dbg !3026
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !3032
  %id598 = getelementptr inbounds %union.tree_node, %union.tree_node* %name584.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3033
  %139 = getelementptr inbounds i32, i32* %id598, i64 2, !dbg !3033
  %140 = load i32, i32* %139, align 8, !dbg !3033
  %conv600 = zext i32 %140 to i64, !dbg !3033
  store i64 %conv600, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3033
  %141 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3033
  %add.ptr601 = getelementptr inbounds i8, i8* %141, i64 %conv600, !dbg !3033
  %142 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3033
  %cmp602 = icmp ugt i8* %add.ptr601, %142, !dbg !3033
  br i1 %cmp602, label %cond.true604, label %cond.end607, !dbg !3033

cond.true604:                                     ; preds = %if.end596
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %140) #6, !dbg !3033
  %.pre54 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3033
  %.pre55 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3033
  br label %cond.end607, !dbg !3033

cond.end607:                                      ; preds = %if.end596, %cond.true604
  %143 = phi i64 [ %conv600, %if.end596 ], [ %.pre55, %cond.true604 ], !dbg !3033
  %144 = phi i8* [ %141, %if.end596 ], [ %.pre54, %cond.true604 ], !dbg !3033
  %str611 = bitcast i32* %id598 to i8**, !dbg !3033
  %145 = load i8*, i8** %str611, align 8, !dbg !3033
  %call612 = tail call i8* @memcpy(i8* %144, i8* %145, i64 %143) #6, !dbg !3033
  %146 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3033
  %147 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3033
  %add.ptr613 = getelementptr inbounds i8, i8* %147, i64 %146, !dbg !3033
  store i8* %add.ptr613, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3033
  %call614 = tail call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3034
  store i64 %call614, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3034
  %148 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3034
  %add.ptr615 = getelementptr inbounds i8, i8* %148, i64 %call614, !dbg !3034
  %149 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3034
  %cmp616 = icmp ugt i8* %add.ptr615, %149, !dbg !3034
  br i1 %cmp616, label %cond.true618, label %cond.end621, !dbg !3034

cond.true618:                                     ; preds = %cond.end607
  %conv619 = trunc i64 %call614 to i32, !dbg !3034
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv619) #6, !dbg !3034
  %.pre56 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3034
  %.pre57 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3034
  br label %cond.end621, !dbg !3034

cond.end621:                                      ; preds = %cond.end607, %cond.true618
  %150 = phi i64 [ %call614, %cond.end607 ], [ %.pre57, %cond.true618 ], !dbg !3034
  %151 = phi i8* [ %148, %cond.end607 ], [ %.pre56, %cond.true618 ], !dbg !3034
  %call623 = tail call i8* @memcpy(i8* %151, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 %150) #6, !dbg !3034
  %152 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3034
  %153 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3034
  %add.ptr624 = getelementptr inbounds i8, i8* %153, i64 %152, !dbg !3034
  store i8* %add.ptr624, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3034
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1) #8, !dbg !3035
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* null, i32 128, %struct.rtx_def* null, i8* null, i32 0) #8, !dbg !3036
  call void @llvm.dbg.value(metadata i32 1, metadata !2792, metadata !DIExpression()), !dbg !2944
  br label %if.end625, !dbg !3037

if.end625:                                        ; preds = %land.lhs.true574, %land.lhs.true569, %lor.lhs.false562, %land.lhs.true548, %cond.end621, %if.end546
  %did_output.1 = phi i32 [ %did_output.0, %land.lhs.true574 ], [ 1, %cond.end621 ], [ %did_output.0, %land.lhs.true569 ], [ %did_output.0, %lor.lhs.false562 ], [ %did_output.0, %land.lhs.true548 ], [ %did_output.0, %if.end546 ], !dbg !2944
  call void @llvm.dbg.value(metadata i32 %did_output.1, metadata !2792, metadata !DIExpression()), !dbg !2944
  %tobool626 = icmp eq i32 %did_output.1, 0, !dbg !3038
  br i1 %tobool626, label %land.lhs.true627, label %if.end646, !dbg !3040

land.lhs.true627:                                 ; preds = %if.end625
  %154 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3041
  %bf.load629 = load i64, i64* %154, align 8, !dbg !3041
  %bf.cast63118 = and i64 %bf.load629, 65535, !dbg !3042
  %cmp632 = icmp eq i64 %bf.cast63118, 6, !dbg !3042
  br i1 %cmp632, label %if.then634, label %if.end646, !dbg !3043

if.then634:                                       ; preds = %land.lhs.true627
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !3044
  %call635 = tail call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3046
  store i64 %call635, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3046
  %155 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3046
  %add.ptr636 = getelementptr inbounds i8, i8* %155, i64 %call635, !dbg !3046
  %156 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3046
  %cmp637 = icmp ugt i8* %add.ptr636, %156, !dbg !3046
  br i1 %cmp637, label %cond.true639, label %cond.end642, !dbg !3046

cond.true639:                                     ; preds = %if.then634
  %conv640 = trunc i64 %call635 to i32, !dbg !3046
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv640) #6, !dbg !3046
  %.pre58 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3046
  %.pre59 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3046
  br label %cond.end642, !dbg !3046

cond.end642:                                      ; preds = %if.then634, %cond.true639
  %157 = phi i64 [ %call635, %if.then634 ], [ %.pre59, %cond.true639 ], !dbg !3046
  %158 = phi i8* [ %155, %if.then634 ], [ %.pre58, %cond.true639 ], !dbg !3046
  %call644 = tail call i8* @memcpy(i8* %158, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 %157) #6, !dbg !3046
  %159 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3046
  %160 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3046
  %add.ptr645 = getelementptr inbounds i8, i8* %160, i64 %159, !dbg !3046
  store i8* %add.ptr645, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3046
  tail call fastcc void @dbxout_type(%union.tree_node* %0, i32 1) #8, !dbg !3047
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* null, i32 128, %struct.rtx_def* null, i8* null, i32 0) #8, !dbg !3048
  br label %if.end646, !dbg !3049

if.end646:                                        ; preds = %if.end625, %cond.end642, %land.lhs.true627
  %bf.load648 = load i64, i64* %26, align 8, !dbg !3050
  %bf.set650 = or i64 %bf.load648, 4194304, !dbg !3050
  store i64 %bf.set650, i64* %26, align 8, !dbg !3050
  br label %sw.epilog

sw.bb651:                                         ; preds = %if.end151
  %bf.load653 = load i64, i64* %4, align 8, !dbg !3051
  %bf.cast65614 = and i64 %bf.load653, 67108864, !dbg !3051
  %tobool657 = icmp eq i64 %bf.cast65614, 0, !dbg !3051
  br i1 %tobool657, label %if.end660, label %if.then658, !dbg !3053

if.then658:                                       ; preds = %sw.bb651
  %call659 = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %decl) #6, !dbg !3054
  call void @llvm.dbg.value(metadata %union.tree_node* %call659, metadata !2780, metadata !DIExpression()), !dbg !2806
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call659, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3055
  %bf.load662.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3056
  br label %if.end660, !dbg !3057

if.end660:                                        ; preds = %sw.bb651, %if.then658
  %bf.load662 = phi i64 [ %bf.load662.pre, %if.then658 ], [ %bf.load153, %sw.bb651 ], !dbg !3056
  %decl.addr.0 = phi %union.tree_node* [ %call659, %if.then658 ], [ %decl, %sw.bb651 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.addr.0, metadata !2780, metadata !DIExpression()), !dbg !2806
  %bf.cast66415 = and i64 %bf.load662, 65535, !dbg !3056
  %cmp665 = icmp eq i64 %bf.cast66415, 32, !dbg !3056
  br i1 %cmp665, label %sw.bb671, label %cond.true667, !dbg !3056

cond.true667:                                     ; preds = %if.end660
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i32 2801, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3056
  br label %sw.bb671, !dbg !3056

sw.bb671:                                         ; preds = %if.end151, %cond.true667, %if.end660, %if.end151
  %decl.addr.1 = phi %union.tree_node* [ %decl, %if.end151 ], [ %decl, %if.end151 ], [ %decl.addr.0, %if.end660 ], [ %decl.addr.0, %cond.true667 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.addr.1, metadata !2780, metadata !DIExpression()), !dbg !2806
  %decl_flag_1673 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3058
  %161 = bitcast i40* %decl_flag_1673 to i64*, !dbg !3058
  %bf.load674 = load i64, i64* %161, align 8, !dbg !3058
  %bf.cast6775 = and i64 %bf.load674, 33554432, !dbg !3058
  %tobool678 = icmp eq i64 %bf.cast6775, 0, !dbg !3058
  br i1 %tobool678, label %if.end680, label %sw.epilog, !dbg !3060

if.end680:                                        ; preds = %sw.bb671
  %162 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3061
  %bf.load682 = load i64, i64* %162, align 8, !dbg !3061
  %bf.cast6856 = and i64 %bf.load682, 67108864, !dbg !3061
  %tobool686 = icmp eq i64 %bf.cast6856, 0, !dbg !3061
  br i1 %tobool686, label %if.end784, label %land.lhs.true687, !dbg !3062

land.lhs.true687:                                 ; preds = %if.end680
  %bf.cast6927 = and i64 %bf.load682, 1048576, !dbg !3063
  %tobool693 = icmp eq i64 %bf.cast6927, 0, !dbg !3063
  br i1 %tobool693, label %if.end784, label %land.lhs.true694, !dbg !3064

land.lhs.true694:                                 ; preds = %land.lhs.true687
  %initial696 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3065
  %163 = load %union.tree_node*, %union.tree_node** %initial696, align 8, !dbg !3065
  %cmp697 = icmp eq %union.tree_node* %163, null, !dbg !3066
  br i1 %cmp697, label %if.end784, label %land.lhs.true699, !dbg !3067

land.lhs.true699:                                 ; preds = %land.lhs.true694
  %call702 = tail call i32 @host_integerp(%union.tree_node* nonnull %163, i32 0) #6, !dbg !3068
  %tobool703 = icmp eq i32 %call702, 0, !dbg !3068
  br i1 %tobool703, label %if.end784, label %land.lhs.true704, !dbg !3069

land.lhs.true704:                                 ; preds = %land.lhs.true699
  %bf.load706 = load i64, i64* %162, align 8, !dbg !3070
  %bf.cast7098 = and i64 %bf.load706, 4194304, !dbg !3070
  %tobool710 = icmp eq i64 %bf.cast7098, 0, !dbg !3070
  br i1 %tobool710, label %land.lhs.true711, label %if.end784, !dbg !3071

land.lhs.true711:                                 ; preds = %land.lhs.true704
  %context713 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3072
  %164 = load %union.tree_node*, %union.tree_node** %context713, align 8, !dbg !3072
  %cmp714 = icmp eq %union.tree_node* %164, null, !dbg !3073
  br i1 %cmp714, label %land.lhs.true734, label %lor.lhs.false716, !dbg !3074

lor.lhs.false716:                                 ; preds = %land.lhs.true711
  %165 = getelementptr inbounds %union.tree_node, %union.tree_node* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3074
  %bf.load720 = load i64, i64* %165, align 8, !dbg !3075
  %bf.cast7229 = and i64 %bf.load720, 65535, !dbg !3076
  %cmp723 = icmp eq i64 %bf.cast7229, 4, !dbg !3076
  br i1 %cmp723, label %land.lhs.true734, label %lor.lhs.false725, !dbg !3077

lor.lhs.false725:                                 ; preds = %lor.lhs.false716
  %cmp732 = icmp eq i64 %bf.cast7229, 38, !dbg !3078
  br i1 %cmp732, label %land.lhs.true734, label %if.end784, !dbg !3079

land.lhs.true734:                                 ; preds = %lor.lhs.false725, %lor.lhs.false716, %land.lhs.true711
  %bf.cast73911 = and i64 %bf.load706, 134217728, !dbg !3080
  %cmp740 = icmp eq i64 %bf.cast73911, 0, !dbg !3080
  br i1 %cmp740, label %if.then742, label %if.end784, !dbg !3081

if.then742:                                       ; preds = %land.lhs.true734
  %type744 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3082
  %166 = bitcast %union.tree_node** %type744 to i64**, !dbg !3082
  %167 = load i64*, i64** %166, align 8, !dbg !3082
  %bf.load746 = load i64, i64* %167, align 8, !dbg !3082
  %bf.cast74812 = and i64 %bf.load746, 65535, !dbg !3083
  %cmp749 = icmp eq i64 %bf.cast74812, 8, !dbg !3083
  br i1 %cmp749, label %if.then760, label %lor.lhs.false751, !dbg !3084

lor.lhs.false751:                                 ; preds = %if.then742
  %cmp758 = icmp eq i64 %bf.cast74812, 6, !dbg !3085
  br i1 %cmp758, label %if.then760, label %sw.epilog, !dbg !3086

if.then760:                                       ; preds = %lor.lhs.false751, %if.then742
  %168 = bitcast %union.tree_node** %initial696 to %struct.tree_int_cst**, !dbg !3087
  %169 = load %struct.tree_int_cst*, %struct.tree_int_cst** %168, align 8, !dbg !3087
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %169, i64 0, i32 1, i32 0, !dbg !3087
  %170 = load i64, i64* %low, align 8, !dbg !3087
  call void @llvm.dbg.value(metadata i64 %170, metadata !2801, metadata !DIExpression()), !dbg !3088
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !3089
  tail call fastcc void @dbxout_symbol_name(%union.tree_node* %decl.addr.1, i8* null, i32 99) #8, !dbg !3090
  %call764 = tail call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3091
  store i64 %call764, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3091
  %171 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3091
  %add.ptr765 = getelementptr inbounds i8, i8* %171, i64 %call764, !dbg !3091
  %172 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3091
  %cmp766 = icmp ugt i8* %add.ptr765, %172, !dbg !3091
  br i1 %cmp766, label %cond.true768, label %cond.end771, !dbg !3091

cond.true768:                                     ; preds = %if.then760
  %conv769 = trunc i64 %call764 to i32, !dbg !3091
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv769) #6, !dbg !3091
  %.pre68 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3091
  %.pre69 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3091
  br label %cond.end771, !dbg !3091

cond.end771:                                      ; preds = %if.then760, %cond.true768
  %173 = phi i64 [ %call764, %if.then760 ], [ %.pre69, %cond.true768 ], !dbg !3091
  %174 = phi i8* [ %171, %if.then760 ], [ %.pre68, %cond.true768 ], !dbg !3091
  %call773 = tail call i8* @memcpy(i8* %174, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i64 %173) #6, !dbg !3091
  %175 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3091
  %176 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3091
  %add.ptr774 = getelementptr inbounds i8, i8* %176, i64 %175, !dbg !3091
  store i8* %add.ptr774, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3091
  tail call fastcc void @stabstr_D(i64 %170) #8, !dbg !3092
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* null, i32 128, %struct.rtx_def* null, i8* null, i32 0) #8, !dbg !3093
  %177 = load i32, i32* @debug_nesting, align 4, !dbg !3094
  %dec775 = add nsw i32 %177, -1, !dbg !3094
  store i32 %dec775, i32* @debug_nesting, align 4, !dbg !3094
  %cmp776 = icmp eq i32 %dec775, 0, !dbg !3094
  %178 = load i32, i32* @symbol_queue_index, align 4, !dbg !3094
  %cmp779 = icmp sgt i32 %178, 0, !dbg !3094
  %or.cond1 = and i1 %cmp776, %cmp779, !dbg !3094
  br i1 %or.cond1, label %if.then781, label %cleanup, !dbg !3094

if.then781:                                       ; preds = %cond.end771
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !3096
  tail call void @debug_flush_symbol_queue() #6, !dbg !3096
  br label %cleanup, !dbg !3096

if.end784:                                        ; preds = %land.lhs.true704, %land.lhs.true699, %land.lhs.true694, %land.lhs.true687, %if.end680, %land.lhs.true734, %lor.lhs.false725
  %call785 = tail call fastcc %struct.rtx_def* @dbxout_expand_expr(%union.tree_node* %decl.addr.1) #8, !dbg !3098
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call785, metadata !2785, metadata !DIExpression()), !dbg !2806
  %tobool786 = icmp eq %struct.rtx_def* %call785, null, !dbg !3099
  br i1 %tobool786, label %do.body788, label %if.end792, !dbg !3101

do.body788:                                       ; preds = %if.end784
  %179 = load i32, i32* @debug_nesting, align 4, !dbg !3102
  %dec789 = add nsw i32 %179, -1, !dbg !3102
  store i32 %dec789, i32* @debug_nesting, align 4, !dbg !3102
  br label %cleanup, !dbg !3102

if.end792:                                        ; preds = %if.end784
  %call793 = tail call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* nonnull %call785, i32 0, %struct.rtx_def* null) #6, !dbg !3104
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call793, metadata !2785, metadata !DIExpression()), !dbg !2806
  %call794 = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl.addr.1, %union.tree_node* %0, i8* null, %struct.rtx_def* %call793) #8, !dbg !3105
  call void @llvm.dbg.value(metadata i32 %call794, metadata !2784, metadata !DIExpression()), !dbg !2806
  br label %sw.epilog, !dbg !3106

sw.epilog:                                        ; preds = %land.lhs.true203, %lor.lhs.false214, %if.end184, %sw.bb671, %if.end151, %lor.lhs.false751, %if.end209, %if.end192, %if.end792, %if.end646, %if.end330
  %result.0 = phi i32 [ %call794, %if.end792 ], [ 1, %if.end646 ], [ 1, %if.end330 ], [ 0, %if.end184 ], [ 0, %if.end192 ], [ 0, %land.lhs.true203 ], [ 0, %lor.lhs.false214 ], [ 0, %if.end209 ], [ 0, %sw.bb671 ], [ 0, %lor.lhs.false751 ], [ 0, %if.end151 ], !dbg !2806
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !2784, metadata !DIExpression()), !dbg !2806
  %180 = load i32, i32* @debug_nesting, align 4, !dbg !3107
  %dec795 = add nsw i32 %180, -1, !dbg !3107
  store i32 %dec795, i32* @debug_nesting, align 4, !dbg !3107
  %cmp796 = icmp eq i32 %dec795, 0, !dbg !3107
  %181 = load i32, i32* @symbol_queue_index, align 4, !dbg !3107
  %cmp799 = icmp sgt i32 %181, 0, !dbg !3107
  %or.cond2 = and i1 %cmp796, %cmp799, !dbg !3107
  br i1 %or.cond2, label %if.then801, label %cleanup, !dbg !3107

if.then801:                                       ; preds = %sw.epilog
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !3109
  tail call void @debug_flush_symbol_queue() #6, !dbg !3109
  br label %cleanup, !dbg !3109

cleanup:                                          ; preds = %sw.epilog, %if.then801, %cond.end771, %if.then781, %do.body788, %do.body351, %do.body180, %if.then30, %do.body24, %do.body
  %retval.0 = phi i32 [ 0, %do.body ], [ 0, %do.body788 ], [ 0, %do.body351 ], [ 0, %do.body180 ], [ 0, %if.then30 ], [ 0, %do.body24 ], [ 1, %if.then781 ], [ 1, %cond.end771 ], [ %result.0, %if.then801 ], [ %result.0, %sw.epilog ], !dbg !2806
  ret i32 %retval.0, !dbg !3111
}

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @debug_queue_symbol(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @emit_pending_bincls_if_required() unnamed_addr #0 !dbg !3112 {
entry:
  %.b = load i1, i1* @pending_bincls, align 4, !dbg !3113
  br i1 %.b, label %if.then, label %if.end, !dbg !3115

if.then:                                          ; preds = %entry
  tail call fastcc void @emit_pending_bincls() #8, !dbg !3116
  br label %if.end, !dbg !3116

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3117
}

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_used_types() unnamed_addr #5 !dbg !3118 {
entry:
  %types = alloca %struct.VEC_tree_heap*, align 8
  %type = alloca %union.tree_node*, align 8
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3125
  %tobool = icmp eq %struct.function* %0, null, !dbg !3125
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3126

land.lhs.true:                                    ; preds = %entry
  %used_types_hash = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 12, !dbg !3127
  %1 = load %struct.htab*, %struct.htab** %used_types_hash, align 8, !dbg !3127
  %tobool2 = icmp eq %struct.htab* %1, null, !dbg !3128
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3129

if.then:                                          ; preds = %land.lhs.true
  %2 = bitcast %struct.VEC_tree_heap** %types to i8*, !dbg !3130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !3130
  %3 = bitcast %union.tree_node** %type to i8*, !dbg !3131
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !3131
  %call = tail call i64 @htab_elements(%struct.htab* nonnull %1) #6, !dbg !3132
  %conv = trunc i64 %call to i32, !dbg !3132
  %call5 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %conv) #8, !dbg !3132
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call5, metadata !3120, metadata !DIExpression()), !dbg !3133
  store %struct.VEC_tree_heap* %call5, %struct.VEC_tree_heap** %types, align 8, !dbg !3134
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3135
  %used_types_hash7 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 12, !dbg !3136
  %5 = load %struct.htab*, %struct.htab** %used_types_hash7, align 8, !dbg !3136
  call void @htab_traverse(%struct.htab* %5, i32 (i8**, i8*)* nonnull @output_used_types_helper, i8* nonnull %2) #6, !dbg !3137
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %types, align 8, !dbg !3138
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %6, metadata !3120, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %6, metadata !3120, metadata !DIExpression()), !dbg !3133
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !3138
  %call9 = call fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %base) #8, !dbg !3138
  %7 = bitcast %union.tree_node** %call9 to i8*, !dbg !3138
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %types, align 8, !dbg !3139
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !3120, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !3120, metadata !DIExpression()), !dbg !3133
  %base12 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !3139
  %call16 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base12) #8, !dbg !3139
  %conv17 = zext i32 %call16 to i64, !dbg !3139
  call void @spec_qsort(i8* %7, i64 %conv17, i64 8, i32 (i8*, i8*)* nonnull @output_types_sort) #6, !dbg !3140
  call void @llvm.dbg.value(metadata i32 0, metadata !3123, metadata !DIExpression()), !dbg !3133
  br label %for.cond, !dbg !3141

for.cond:                                         ; preds = %for.body, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.body ], !dbg !3143
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3123, metadata !DIExpression()), !dbg !3133
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %types, align 8, !dbg !3144
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !3120, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !3120, metadata !DIExpression()), !dbg !3133
  %base20 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !3144
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !3124, metadata !DIExpression(DW_OP_deref)), !dbg !3133
  %call24 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base20, i32 %i.0, %union.tree_node** nonnull %type) #8, !dbg !3144
  %tobool25 = icmp eq i32 %call24, 0, !dbg !3146
  br i1 %tobool25, label %for.end, label %for.body, !dbg !3146

for.body:                                         ; preds = %for.cond
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3147
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !3124, metadata !DIExpression()), !dbg !3133
  call void @debug_queue_symbol(%union.tree_node* %10) #6, !dbg !3148
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3149
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3123, metadata !DIExpression()), !dbg !3133
  br label %for.cond, !dbg !3150, !llvm.loop !3151

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %types, metadata !3120, metadata !DIExpression(DW_OP_deref)), !dbg !3133
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %types) #8, !dbg !3153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !3154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !3154
  br label %if.end, !dbg !3155

if.end:                                           ; preds = %land.lhs.true, %entry, %for.end
  ret void, !dbg !3156
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_begin_complex_stabs() unnamed_addr #5 !dbg !3157 {
entry:
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !3158
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3159
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !3160
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3161
  %call1 = tail call i32 @putc(i32 34, %struct._IO_FILE* %1) #6, !dbg !3162
  ret void, !dbg !3163
}

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type(%union.tree_node* %type, i32 %full) unnamed_addr #5 !dbg !1714 {
entry:
  %low = alloca %union.tree_node*, align 8
  %high = alloca %union.tree_node*, align 8
  %child = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !1718, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i32 %full, metadata !1719, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8 0, metadata !1720, metadata !DIExpression()), !dbg !3164
  %0 = bitcast %union.tree_node** %low to i8*, !dbg !3165
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3165
  %1 = bitcast %union.tree_node** %high to i8*, !dbg !3165
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3165
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3166
  %bf.load = load i64, i64* %2, align 8, !dbg !3166
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !3168
  %cmp = icmp eq i64 %bf.cast4, 14, !dbg !3168
  br i1 %cmp, label %if.then, label %if.end, !dbg !3169

if.then:                                          ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3170
  %3 = bitcast i32* %values to %struct.tree_type**, !dbg !3170
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !3170
  %values3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 1, !dbg !3170
  %5 = bitcast %union.tree_node** %values3 to %struct.tree_common**, !dbg !3170
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !3170
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !3170
  %7 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !3170
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !1718, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i8 1, metadata !1720, metadata !DIExpression()), !dbg !3164
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3172
  %bf.load6.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3174
  br label %if.end, !dbg !3175

if.end:                                           ; preds = %if.then, %entry
  %bf.load6 = phi i64 [ %bf.load6.pre, %if.then ], [ %bf.load, %entry ], !dbg !3174
  %vector_type.0 = phi i32 [ 1, %if.then ], [ 0, %entry ]
  %type.addr.0 = phi %union.tree_node* [ %7, %if.then ], [ %type, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !1718, metadata !DIExpression()), !dbg !3164
  %bf.cast85 = and i64 %bf.load6, 65535, !dbg !3176
  %cmp9 = icmp eq i64 %bf.cast85, 8, !dbg !3176
  br i1 %cmp9, label %if.then10, label %if.end27, !dbg !3177

if.then10:                                        ; preds = %if.end
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3178
  %8 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !3178
  %cmp13 = icmp eq %union.tree_node* %8, null, !dbg !3181
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !3182

if.then14:                                        ; preds = %if.then10
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3183
  %9 = bitcast %struct.lang_decl** %minval to i64*, !dbg !3183
  %10 = load i64, i64* %9, align 8, !dbg !3183
  %11 = bitcast %union.tree_node** %low to i64*, !dbg !3185
  store i64 %10, i64* %11, align 8, !dbg !3185
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3186
  %12 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !3186
  %13 = load i64, i64* %12, align 8, !dbg !3186
  %14 = bitcast %union.tree_node** %high to i64*, !dbg !3187
  store i64 %13, i64* %14, align 8, !dbg !3187
  br label %if.end27, !dbg !3188

if.else:                                          ; preds = %if.then10
  call void @llvm.dbg.value(metadata %union.tree_node** %low, metadata !1723, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  call void @llvm.dbg.value(metadata %union.tree_node** %high, metadata !1724, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  %call = call zeroext i8 @subrange_type_for_debug_p(%union.tree_node* %type.addr.0, %union.tree_node** nonnull %low, %union.tree_node** nonnull %high) #6, !dbg !3189
  %tobool = icmp eq i8 %call, 0, !dbg !3189
  br i1 %tobool, label %if.else18, label %if.end27, !dbg !3191

if.else18:                                        ; preds = %if.else
  %15 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !3192
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !1718, metadata !DIExpression()), !dbg !3164
  %minval22 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3194
  %16 = bitcast %struct.lang_decl** %minval22 to i64*, !dbg !3194
  %17 = load i64, i64* %16, align 8, !dbg !3194
  %18 = bitcast %union.tree_node** %low to i64*, !dbg !3195
  store i64 %17, i64* %18, align 8, !dbg !3195
  %maxval24 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3196
  %19 = bitcast %struct.rtx_def** %maxval24 to i64*, !dbg !3196
  %20 = load i64, i64* %19, align 8, !dbg !3196
  %21 = bitcast %union.tree_node** %high to i64*, !dbg !3197
  store i64 %20, i64* %21, align 8, !dbg !3197
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then14, %if.else18, %if.end
  %type.addr.3 = phi %union.tree_node* [ %type.addr.0, %if.end ], [ %type.addr.0, %if.then14 ], [ %15, %if.else18 ], [ %type.addr.0, %if.else ], !dbg !3198
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.3, metadata !1718, metadata !DIExpression()), !dbg !3164
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3199
  %cmp28 = icmp eq %union.tree_node* %type.addr.3, %22, !dbg !3201
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !3202

if.then29:                                        ; preds = %if.end27
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !3203
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !1718, metadata !DIExpression()), !dbg !3164
  %.phi.trans.insert40 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3204
  %.pre = load %union.tree_node*, %union.tree_node** %.phi.trans.insert40, align 8, !dbg !3206
  br label %if.end49, !dbg !3207

if.else30:                                        ; preds = %if.end27
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3208
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !3208
  %tobool32 = icmp eq %union.tree_node* %25, null, !dbg !3208
  br i1 %tobool32, label %if.end49, label %land.lhs.true, !dbg !3211

land.lhs.true:                                    ; preds = %if.else30
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3211
  %bf.load36 = load i64, i64* %26, align 8, !dbg !3212
  %bf.cast3836 = and i64 %bf.load36, 65535, !dbg !3213
  %cmp39 = icmp eq i64 %bf.cast3836, 35, !dbg !3213
  br i1 %cmp39, label %land.lhs.true40, label %if.end49, !dbg !3214

land.lhs.true40:                                  ; preds = %land.lhs.true
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3215
  %27 = bitcast i40* %decl_flag_1 to i64*, !dbg !3215
  %bf.load43 = load i64, i64* %27, align 8, !dbg !3215
  %bf.cast4537 = and i64 %bf.load43, 33554432, !dbg !3215
  %tobool46 = icmp eq i64 %bf.cast4537, 0, !dbg !3215
  %spec.select = select i1 %tobool46, i32 %full, i32 0, !dbg !3216
  br label %if.end49, !dbg !3216

if.end49:                                         ; preds = %if.else30, %land.lhs.true40, %land.lhs.true, %if.then29
  %28 = phi %union.tree_node* [ %.pre, %if.then29 ], [ %25, %land.lhs.true ], [ null, %if.else30 ], [ %25, %land.lhs.true40 ], !dbg !3206
  %full.addr.1 = phi i32 [ %full, %if.then29 ], [ %full, %land.lhs.true ], [ %full, %if.else30 ], [ %spec.select, %land.lhs.true40 ]
  %type.addr.4 = phi %union.tree_node* [ %23, %if.then29 ], [ %type.addr.3, %land.lhs.true ], [ %type.addr.3, %if.else30 ], [ %type.addr.3, %land.lhs.true40 ], !dbg !3164
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.4, metadata !1718, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata i32 %full.addr.1, metadata !1719, metadata !DIExpression()), !dbg !3164
  %tobool52 = icmp eq %union.tree_node* %28, null, !dbg !3206
  br i1 %tobool52, label %if.else70, label %land.lhs.true53, !dbg !3217

land.lhs.true53:                                  ; preds = %if.end49
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3206
  %30 = bitcast %union.tree_node** %29 to i64**, !dbg !3218
  %31 = load i64*, i64** %30, align 8, !dbg !3218
  %bf.load57 = load i64, i64* %31, align 8, !dbg !3218
  %bf.cast5935 = and i64 %bf.load57, 65535, !dbg !3219
  %cmp60 = icmp eq i64 %bf.cast5935, 35, !dbg !3219
  br i1 %cmp60, label %land.lhs.true61, label %if.else70, !dbg !3220

land.lhs.true61:                                  ; preds = %land.lhs.true53
  %result = getelementptr inbounds i64, i64* %31, i64 21, !dbg !3221
  %32 = bitcast i64* %result to %union.tree_node**, !dbg !3221
  %33 = load %union.tree_node*, %union.tree_node** %32, align 8, !dbg !3221
  %tobool64 = icmp eq %union.tree_node* %33, null, !dbg !3221
  br i1 %tobool64, label %if.else70, label %if.then65, !dbg !3222

if.then65:                                        ; preds = %land.lhs.true61
  %type69 = getelementptr inbounds i64, i64* %31, i64 2, !dbg !3223
  %34 = bitcast i64* %type69 to %union.tree_node**, !dbg !3223
  br label %if.end73, !dbg !3224

if.else70:                                        ; preds = %land.lhs.true61, %if.end49, %land.lhs.true53
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.4, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3225
  br label %if.end73

if.end73:                                         ; preds = %if.else70, %if.then65
  %main_variant.0.in = phi %union.tree_node** [ %34, %if.then65 ], [ %35, %if.else70 ]
  %main_variant.0 = load %union.tree_node*, %union.tree_node** %main_variant.0.in, align 8, !dbg !3204
  call void @llvm.dbg.value(metadata %union.tree_node* %main_variant.0, metadata !1722, metadata !DIExpression()), !dbg !3164
  %36 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3226
  %tobool74 = icmp eq i8 %36, 0, !dbg !3226
  %spec.select1 = select i1 %tobool74, %union.tree_node* %main_variant.0, %union.tree_node* %type.addr.4, !dbg !3228
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select1, metadata !1718, metadata !DIExpression()), !dbg !3164
  %symtab = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !3229
  %address = bitcast %union.tree_node** %symtab to i32*, !dbg !3229
  %37 = load i32, i32* %address, align 8, !dbg !3229
  %cmp78 = icmp eq i32 %37, 0, !dbg !3231
  br i1 %cmp78, label %if.then79, label %if.end102, !dbg !3232

if.then79:                                        ; preds = %if.end73
  %38 = load i32, i32* @next_type_number, align 4, !dbg !3233
  %inc = add nsw i32 %38, 1, !dbg !3233
  store i32 %inc, i32* @next_type_number, align 4, !dbg !3233
  store i32 %38, i32* %address, align 8, !dbg !3235
  %39 = load i32, i32* @typevec_len, align 4, !dbg !3236
  %cmp83 = icmp eq i32 %inc, %39, !dbg !3238
  br i1 %cmp83, label %if.then84, label %if.end91, !dbg !3239

if.then84:                                        ; preds = %if.then79
  %40 = load i8*, i8** bitcast (%struct.typeinfo** @typevec to i8**), align 8, !dbg !3240
  %mul = shl nsw i32 %inc, 1, !dbg !3240
  %conv = sext i32 %mul to i64, !dbg !3240
  %mul85 = mul nsw i64 %conv, 12, !dbg !3240
  %call86 = call i8* @ggc_realloc_stat(i8* %40, i64 %mul85) #6, !dbg !3240
  store i8* %call86, i8** bitcast (%struct.typeinfo** @typevec to i8**), align 8, !dbg !3242
  %.cast = bitcast i8* %call86 to %struct.typeinfo*, !dbg !3243
  %41 = load i32, i32* @typevec_len, align 4, !dbg !3244
  %idx.ext = sext i32 %41 to i64, !dbg !3245
  %add.ptr = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %.cast, i64 %idx.ext, !dbg !3245
  %42 = bitcast %struct.typeinfo* %add.ptr to i8*, !dbg !3243
  %mul88 = mul nsw i64 %idx.ext, 12, !dbg !3246
  %call89 = call i8* @memset(i8* %42, i32 0, i64 %mul88) #6, !dbg !3247
  %43 = load i32, i32* @typevec_len, align 4, !dbg !3248
  %mul90 = shl nsw i32 %43, 1, !dbg !3248
  store i32 %mul90, i32* @typevec_len, align 4, !dbg !3248
  br label %if.end91, !dbg !3249

if.end91:                                         ; preds = %if.then84, %if.then79
  call fastcc void @emit_pending_bincls_if_required() #8, !dbg !3250
  %44 = load %struct.dbx_file*, %struct.dbx_file** @current_file, align 8, !dbg !3251
  %file_number = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %44, i64 0, i32 1, !dbg !3252
  %45 = load i32, i32* %file_number, align 8, !dbg !3252
  %46 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !3253
  %47 = load i32, i32* %address, align 8, !dbg !3254
  %idxprom = sext i32 %47 to i64, !dbg !3253
  %file_number95 = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %46, i64 %idxprom, i32 1, !dbg !3255
  store i32 %45, i32* %file_number95, align 4, !dbg !3256
  %48 = load %struct.dbx_file*, %struct.dbx_file** @current_file, align 8, !dbg !3257
  %next_type_number = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %48, i64 0, i32 2, !dbg !3258
  %49 = load i32, i32* %next_type_number, align 4, !dbg !3259
  %inc96 = add nsw i32 %49, 1, !dbg !3259
  store i32 %inc96, i32* %next_type_number, align 4, !dbg !3259
  %50 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !3260
  %51 = load i32, i32* %address, align 8, !dbg !3261
  %idxprom100 = sext i32 %51 to i64, !dbg !3260
  %type_number = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %50, i64 %idxprom100, i32 2, !dbg !3262
  store i32 %49, i32* %type_number, align 4, !dbg !3263
  br label %if.end102, !dbg !3264

if.end102:                                        ; preds = %if.end91, %if.end73
  %52 = load i32, i32* @flag_debug_only_used_symbols, align 4, !dbg !3265
  %tobool103 = icmp eq i32 %52, 0, !dbg !3265
  br i1 %tobool103, label %if.end175, label %if.then104, !dbg !3267

if.then104:                                       ; preds = %if.end102
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3268
  %bf.load106 = load i64, i64* %53, align 8, !dbg !3268
  %bf.cast10829 = and i64 %bf.load106, 65535, !dbg !3271
  %cmp109 = icmp eq i64 %bf.cast10829, 16, !dbg !3271
  br i1 %cmp109, label %land.lhs.true131, label %lor.lhs.false, !dbg !3272

lor.lhs.false:                                    ; preds = %if.then104
  %cmp115 = icmp eq i64 %bf.cast10829, 17, !dbg !3273
  br i1 %cmp115, label %land.lhs.true131, label %lor.lhs.false117, !dbg !3274

lor.lhs.false117:                                 ; preds = %lor.lhs.false
  %cmp122 = icmp eq i64 %bf.cast10829, 18, !dbg !3275
  br i1 %cmp122, label %land.lhs.true131, label %lor.lhs.false124, !dbg !3276

lor.lhs.false124:                                 ; preds = %lor.lhs.false117
  %cmp129 = icmp eq i64 %bf.cast10829, 6, !dbg !3277
  br i1 %cmp129, label %land.lhs.true131, label %if.else157, !dbg !3278

land.lhs.true131:                                 ; preds = %lor.lhs.false124, %lor.lhs.false117, %lor.lhs.false, %if.then104
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3279
  %54 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3279
  %tobool133 = icmp eq %union.tree_node* %54, null, !dbg !3279
  br i1 %tobool133, label %if.else157, label %land.lhs.true134, !dbg !3280

land.lhs.true134:                                 ; preds = %land.lhs.true131
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3280
  %bf.load138 = load i64, i64* %55, align 8, !dbg !3281
  %bf.cast140 = and i64 %bf.load138, 65535, !dbg !3281
  %arrayidx142 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast140, !dbg !3281
  %56 = load i32, i32* %arrayidx142, align 4, !dbg !3281
  %cmp143 = icmp eq i32 %56, 3, !dbg !3281
  br i1 %cmp143, label %land.lhs.true145, label %if.else157, !dbg !3282

land.lhs.true145:                                 ; preds = %land.lhs.true134
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3283
  %57 = bitcast i40* %ignored_flag to i64*, !dbg !3283
  %bf.load149 = load i64, i64* %57, align 8, !dbg !3283
  %bf.cast15234 = and i64 %bf.load149, 1024, !dbg !3283
  %tobool153 = icmp eq i64 %bf.cast15234, 0, !dbg !3283
  br i1 %tobool153, label %if.then154, label %if.else157, !dbg !3284

if.then154:                                       ; preds = %land.lhs.true145
  call void @debug_queue_symbol(%union.tree_node* nonnull %54) #6, !dbg !3285
  br label %if.end175, !dbg !3285

if.else157:                                       ; preds = %land.lhs.true145, %land.lhs.true131, %land.lhs.true134, %lor.lhs.false124
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3286
  %59 = load %union.tree_node*, %union.tree_node** %58, align 8, !dbg !3286
  %tobool160 = icmp eq %union.tree_node* %59, null, !dbg !3286
  br i1 %tobool160, label %if.end175, label %land.lhs.true161, !dbg !3288

land.lhs.true161:                                 ; preds = %if.else157
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3288
  %bf.load165 = load i64, i64* %60, align 8, !dbg !3289
  %bf.cast16733 = and i64 %bf.load165, 65535, !dbg !3290
  %cmp168 = icmp eq i64 %bf.cast16733, 35, !dbg !3290
  br i1 %cmp168, label %if.then170, label %if.end175, !dbg !3291

if.then170:                                       ; preds = %land.lhs.true161
  call void @debug_queue_symbol(%union.tree_node* nonnull %59) #6, !dbg !3292
  br label %if.end175, !dbg !3292

if.end175:                                        ; preds = %if.else157, %if.end102, %if.then154, %if.then170, %land.lhs.true161
  call fastcc void @dbxout_type_index(%union.tree_node* %spec.select1) #8, !dbg !3293
  %61 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !3294
  %62 = load i32, i32* %address, align 8, !dbg !3295
  %idxprom179 = sext i32 %62 to i64, !dbg !3294
  %status = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %61, i64 %idxprom179, i32 0, !dbg !3296
  %63 = load i32, i32* %status, align 4, !dbg !3296
  switch i32 %63, label %sw.epilog [
    i32 2, label %cleanup1511
    i32 1, label %sw.bb
  ], !dbg !3297

sw.bb:                                            ; preds = %if.end175
  %tobool181 = icmp eq i32 %full.addr.1, 0, !dbg !3298
  br i1 %tobool181, label %cleanup1511, label %lor.lhs.false182, !dbg !3301

lor.lhs.false182:                                 ; preds = %sw.bb
  %64 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3302
  %65 = load %union.tree_node*, %union.tree_node** %64, align 8, !dbg !3302
  %cmp184 = icmp eq %union.tree_node* %65, null, !dbg !3302
  br i1 %cmp184, label %cleanup1511, label %lor.lhs.false186, !dbg !3303

lor.lhs.false186:                                 ; preds = %lor.lhs.false182
  %call189 = call i32 @host_integerp(%union.tree_node* nonnull %65, i32 1) #6, !dbg !3304
  %tobool190 = icmp eq i32 %call189, 0, !dbg !3304
  br i1 %tobool190, label %cleanup1511, label %sw.epilog, !dbg !3305

sw.epilog:                                        ; preds = %lor.lhs.false186, %if.end175
  %66 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3306
  %add.ptr194 = getelementptr inbounds i8, i8* %66, i64 1, !dbg !3306
  %67 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3306
  %cmp195 = icmp ugt i8* %add.ptr194, %67, !dbg !3306
  br i1 %cmp195, label %cond.true, label %cond.end, !dbg !3306

cond.true:                                        ; preds = %sw.epilog
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3306
  %.pre41 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3306
  br label %cond.end, !dbg !3306

cond.end:                                         ; preds = %sw.epilog, %cond.true
  %68 = phi i8* [ %66, %sw.epilog ], [ %.pre41, %cond.true ], !dbg !3306
  %incdec.ptr = getelementptr inbounds i8, i8* %68, i64 1, !dbg !3306
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3306
  store i8 61, i8* %68, align 1, !dbg !3306
  %69 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !3307
  %70 = load i32, i32* %address, align 8, !dbg !3308
  %idxprom200 = sext i32 %70 to i64, !dbg !3307
  %status202 = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %69, i64 %idxprom200, i32 0, !dbg !3309
  store i32 2, i32* %status202, align 4, !dbg !3310
  %71 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3311
  %bf.load204 = load i64, i64* %71, align 8, !dbg !3311
  %bf.lshr205 = lshr i64 %bf.load204, 20, !dbg !3311
  %72 = trunc i64 %bf.lshr205 to i32, !dbg !3311
  %bf.cast207 = and i32 %72, 1, !dbg !3311
  %73 = getelementptr inbounds %union.tree_node, %union.tree_node* %main_variant.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3312
  %bf.load209 = load i64, i64* %73, align 8, !dbg !3312
  %bf.lshr210 = lshr i64 %bf.load209, 20, !dbg !3312
  %74 = trunc i64 %bf.lshr210 to i32, !dbg !3312
  %bf.cast212 = and i32 %74, 1, !dbg !3312
  %cmp213 = icmp ugt i32 %bf.cast207, %bf.cast212, !dbg !3313
  br i1 %cmp213, label %if.then215, label %if.else232, !dbg !3314

if.then215:                                       ; preds = %cond.end
  %75 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3315
  %add.ptr216 = getelementptr inbounds i8, i8* %75, i64 1, !dbg !3315
  %76 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3315
  %cmp217 = icmp ugt i8* %add.ptr216, %76, !dbg !3315
  br i1 %cmp217, label %cond.true219, label %cond.end221, !dbg !3315

cond.true219:                                     ; preds = %if.then215
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3315
  %.pre137 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3315
  br label %cond.end221, !dbg !3315

cond.end221:                                      ; preds = %if.then215, %cond.true219
  %77 = phi i8* [ %75, %if.then215 ], [ %.pre137, %cond.true219 ], !dbg !3315
  %incdec.ptr223 = getelementptr inbounds i8, i8* %77, i64 1, !dbg !3315
  store i8* %incdec.ptr223, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3315
  store i8 107, i8* %77, align 1, !dbg !3315
  %bf.load225 = load i64, i64* %71, align 8, !dbg !3317
  %bf.cast22828 = lshr i64 %bf.load225, 18, !dbg !3317
  %78 = trunc i64 %bf.cast22828 to i32, !dbg !3317
  %79 = and i32 %78, 2, !dbg !3317
  %call231 = call %union.tree_node* @build_qualified_type(%union.tree_node* %spec.select1, i32 %79) #6, !dbg !3317
  call fastcc void @dbxout_type(%union.tree_node* %call231, i32 0) #8, !dbg !3318
  br label %cleanup1511, !dbg !3319

if.else232:                                       ; preds = %cond.end
  %bf.lshr235 = lshr i64 %bf.load204, 19, !dbg !3320
  %80 = trunc i64 %bf.lshr235 to i32, !dbg !3320
  %bf.cast237 = and i32 %80, 1, !dbg !3320
  %bf.lshr240 = lshr i64 %bf.load209, 19, !dbg !3321
  %81 = trunc i64 %bf.lshr240 to i32, !dbg !3321
  %bf.cast242 = and i32 %81, 1, !dbg !3321
  %cmp243 = icmp ugt i32 %bf.cast237, %bf.cast242, !dbg !3322
  br i1 %cmp243, label %if.then245, label %if.else262, !dbg !3323

if.then245:                                       ; preds = %if.else232
  %82 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3324
  %add.ptr246 = getelementptr inbounds i8, i8* %82, i64 1, !dbg !3324
  %83 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3324
  %cmp247 = icmp ugt i8* %add.ptr246, %83, !dbg !3324
  br i1 %cmp247, label %cond.true249, label %cond.end251, !dbg !3324

cond.true249:                                     ; preds = %if.then245
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3324
  %.pre136 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3324
  br label %cond.end251, !dbg !3324

cond.end251:                                      ; preds = %if.then245, %cond.true249
  %84 = phi i8* [ %82, %if.then245 ], [ %.pre136, %cond.true249 ], !dbg !3324
  %incdec.ptr253 = getelementptr inbounds i8, i8* %84, i64 1, !dbg !3324
  store i8* %incdec.ptr253, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3324
  store i8 66, i8* %84, align 1, !dbg !3324
  %bf.load255 = load i64, i64* %71, align 8, !dbg !3326
  %bf.cast25827 = lshr i64 %bf.load255, 20, !dbg !3326
  %85 = trunc i64 %bf.cast25827 to i32, !dbg !3326
  %86 = and i32 %85, 1, !dbg !3326
  %call261 = call %union.tree_node* @build_qualified_type(%union.tree_node* %spec.select1, i32 %86) #6, !dbg !3326
  call fastcc void @dbxout_type(%union.tree_node* %call261, i32 0) #8, !dbg !3327
  br label %cleanup1511, !dbg !3328

if.else262:                                       ; preds = %if.else232
  %87 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3329
  %88 = load %union.tree_node*, %union.tree_node** %87, align 8, !dbg !3329
  %cmp265 = icmp eq %union.tree_node* %main_variant.0, %88, !dbg !3330
  br i1 %cmp265, label %if.end326, label %if.then267, !dbg !3331

if.then267:                                       ; preds = %if.else262
  %89 = load i32, i32* @flag_debug_only_used_symbols, align 4, !dbg !3332
  %tobool268 = icmp eq i32 %89, 0, !dbg !3332
  br i1 %tobool268, label %if.then267.if.end319_crit_edge, label %if.then269, !dbg !3333

if.then267.if.end319_crit_edge:                   ; preds = %if.then267
  br label %if.end319, !dbg !3333

if.then269:                                       ; preds = %if.then267
  %90 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3334
  %91 = bitcast %union.tree_node** %90 to %struct.tree_decl_non_common**, !dbg !3334
  %92 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %91, align 8, !dbg !3334
  %result273 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %92, i64 0, i32 3, !dbg !3334
  %93 = load %union.tree_node*, %union.tree_node** %result273, align 8, !dbg !3334
  call void @llvm.dbg.value(metadata %union.tree_node* %93, metadata !1725, metadata !DIExpression()), !dbg !3335
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3336
  %bf.load275 = load i64, i64* %94, align 8, !dbg !3336
  %bf.cast27722 = and i64 %bf.load275, 65535, !dbg !3338
  %cmp278 = icmp eq i64 %bf.cast27722, 16, !dbg !3338
  br i1 %cmp278, label %land.lhs.true301, label %lor.lhs.false280, !dbg !3339

lor.lhs.false280:                                 ; preds = %if.then269
  %cmp285 = icmp eq i64 %bf.cast27722, 17, !dbg !3340
  br i1 %cmp285, label %land.lhs.true301, label %lor.lhs.false287, !dbg !3341

lor.lhs.false287:                                 ; preds = %lor.lhs.false280
  %cmp292 = icmp eq i64 %bf.cast27722, 18, !dbg !3342
  br i1 %cmp292, label %land.lhs.true301, label %lor.lhs.false294, !dbg !3343

lor.lhs.false294:                                 ; preds = %lor.lhs.false287
  %cmp299 = icmp eq i64 %bf.cast27722, 6, !dbg !3344
  br i1 %cmp299, label %land.lhs.true301, label %if.end319, !dbg !3345

land.lhs.true301:                                 ; preds = %lor.lhs.false294, %lor.lhs.false287, %lor.lhs.false280, %if.then269
  %chain303 = getelementptr inbounds %union.tree_node, %union.tree_node* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3346
  %95 = load %union.tree_node*, %union.tree_node** %chain303, align 8, !dbg !3346
  %tobool304 = icmp eq %union.tree_node* %95, null, !dbg !3346
  br i1 %tobool304, label %if.end319, label %land.lhs.true305, !dbg !3347

land.lhs.true305:                                 ; preds = %land.lhs.true301
  %ignored_flag309 = getelementptr inbounds %union.tree_node, %union.tree_node* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3348
  %96 = bitcast i40* %ignored_flag309 to i64*, !dbg !3348
  %bf.load310 = load i64, i64* %96, align 8, !dbg !3348
  %bf.cast31326 = and i64 %bf.load310, 1024, !dbg !3348
  %tobool314 = icmp eq i64 %bf.cast31326, 0, !dbg !3348
  br i1 %tobool314, label %if.then315, label %if.end319, !dbg !3349

if.then315:                                       ; preds = %land.lhs.true305
  call void @debug_queue_symbol(%union.tree_node* nonnull %95) #6, !dbg !3350
  br label %if.end319, !dbg !3350

if.end319:                                        ; preds = %if.then267.if.end319_crit_edge, %land.lhs.true305, %land.lhs.true301, %lor.lhs.false294, %if.then315
  %97 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3351
  %98 = bitcast %union.tree_node** %97 to %struct.tree_decl_non_common**, !dbg !3351
  %99 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %98, align 8, !dbg !3351
  %result323 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %99, i64 0, i32 3, !dbg !3351
  %100 = load %union.tree_node*, %union.tree_node** %result323, align 8, !dbg !3351
  call fastcc void @dbxout_type(%union.tree_node* %100, i32 0) #8, !dbg !3352
  br label %cleanup1511, !dbg !3353

if.end326:                                        ; preds = %if.else262
  %101 = trunc i64 %bf.load204 to i16, !dbg !3354
  switch i16 %101, label %sw.default [
    i16 19, label %sw.bb331
    i16 22, label %sw.bb331
    i16 8, label %sw.bb332
    i16 9, label %sw.bb503
    i16 11, label %sw.bb503
    i16 7, label %sw.bb532
    i16 13, label %sw.bb572
    i16 15, label %sw.bb704
    i16 16, label %sw.bb825
    i16 17, label %sw.bb825
    i16 18, label %sw.bb825
    i16 6, label %sw.bb1206
    i16 10, label %sw.bb1403
    i16 21, label %sw.bb1414
    i16 5, label %sw.bb1451
    i16 12, label %sw.bb1476
    i16 20, label %sw.bb1499
  ], !dbg !3355

sw.bb331:                                         ; preds = %if.end326, %if.end326
  call fastcc void @dbxout_type_index(%union.tree_node* %spec.select1) #8, !dbg !3356
  br label %cleanup1511, !dbg !3357

sw.bb332:                                         ; preds = %if.end326
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !3358
  %cmp333 = icmp eq %union.tree_node* %spec.select1, %102, !dbg !3360
  br i1 %cmp333, label %land.lhs.true335, label %if.else362, !dbg !3361

land.lhs.true335:                                 ; preds = %sw.bb332
  %bf.cast34021 = and i64 %bf.load204, 2097152, !dbg !3362
  %tobool341 = icmp eq i64 %bf.cast34021, 0, !dbg !3362
  br i1 %tobool341, label %if.then342, label %if.else362, !dbg !3363

if.then342:                                       ; preds = %land.lhs.true335
  %103 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3364
  %add.ptr343 = getelementptr inbounds i8, i8* %103, i64 1, !dbg !3364
  %104 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3364
  %cmp344 = icmp ugt i8* %add.ptr343, %104, !dbg !3364
  br i1 %cmp344, label %cond.true346, label %cond.end348, !dbg !3364

cond.true346:                                     ; preds = %if.then342
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3364
  %.pre133 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3364
  br label %cond.end348, !dbg !3364

cond.end348:                                      ; preds = %if.then342, %cond.true346
  %105 = phi i8* [ %103, %if.then342 ], [ %.pre133, %cond.true346 ], !dbg !3364
  %incdec.ptr350 = getelementptr inbounds i8, i8* %105, i64 1, !dbg !3364
  store i8* %incdec.ptr350, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3364
  store i8 114, i8* %105, align 1, !dbg !3364
  call fastcc void @dbxout_type_index(%union.tree_node* %spec.select1) #8, !dbg !3366
  %call351 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3367
  store i64 %call351, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3367
  %106 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3367
  %add.ptr352 = getelementptr inbounds i8, i8* %106, i64 %call351, !dbg !3367
  %107 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3367
  %cmp353 = icmp ugt i8* %add.ptr352, %107, !dbg !3367
  br i1 %cmp353, label %cond.true355, label %cond.end358, !dbg !3367

cond.true355:                                     ; preds = %cond.end348
  %conv356 = trunc i64 %call351 to i32, !dbg !3367
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv356) #6, !dbg !3367
  %.pre134 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3367
  %.pre135 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3367
  br label %cond.end358, !dbg !3367

cond.end358:                                      ; preds = %cond.end348, %cond.true355
  %108 = phi i64 [ %call351, %cond.end348 ], [ %.pre135, %cond.true355 ], !dbg !3367
  %109 = phi i8* [ %106, %cond.end348 ], [ %.pre134, %cond.true355 ], !dbg !3367
  %call360 = call i8* @memcpy(i8* %109, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i64 %108) #6, !dbg !3367
  %110 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3367
  %111 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3367
  %add.ptr361 = getelementptr inbounds i8, i8* %111, i64 %110, !dbg !3367
  store i8* %add.ptr361, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3367
  br label %cleanup1511, !dbg !3368

if.else362:                                       ; preds = %land.lhs.true335, %sw.bb332
  %type364 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3369
  %112 = load %union.tree_node*, %union.tree_node** %type364, align 8, !dbg !3369
  %cmp365 = icmp eq %union.tree_node* %112, null, !dbg !3371
  br i1 %cmp365, label %if.else415, label %land.lhs.true367, !dbg !3372

land.lhs.true367:                                 ; preds = %if.else362
  %113 = getelementptr inbounds %union.tree_node, %union.tree_node* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3372
  %bf.load371 = load i64, i64* %113, align 8, !dbg !3373
  %bf.cast37320 = and i64 %bf.load371, 65535, !dbg !3374
  %cmp374 = icmp eq i64 %bf.cast37320, 8, !dbg !3374
  br i1 %cmp374, label %if.then376, label %if.else415, !dbg !3375

if.then376:                                       ; preds = %land.lhs.true367
  %114 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3376
  %tobool378 = icmp eq i8 %114, 0, !dbg !3376
  br i1 %tobool378, label %if.end414, label %land.lhs.true379, !dbg !3379

land.lhs.true379:                                 ; preds = %if.then376
  %type380 = bitcast %union.tree_node* %spec.select1 to %struct.tree_type*, !dbg !3380
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type380, i64 0, i32 6, !dbg !3380
  %bf.load381 = load i32, i32* %precision, align 4, !dbg !3380
  %115 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !3381
  %precision384 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %115, i64 0, i32 6, !dbg !3381
  %bf.load385 = load i32, i32* %precision384, align 4, !dbg !3381
  %116 = xor i32 %bf.load381, %bf.load385, !dbg !3382
  %117 = and i32 %116, 1023, !dbg !3382
  %cmp387 = icmp eq i32 %117, 0, !dbg !3382
  br i1 %cmp387, label %if.end414, label %if.then389, !dbg !3383

if.then389:                                       ; preds = %land.lhs.true379
  %call390 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !3384
  store i64 %call390, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3384
  %118 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3384
  %add.ptr391 = getelementptr inbounds i8, i8* %118, i64 %call390, !dbg !3384
  %119 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3384
  %cmp392 = icmp ugt i8* %add.ptr391, %119, !dbg !3384
  br i1 %cmp392, label %cond.true394, label %cond.end397, !dbg !3384

cond.true394:                                     ; preds = %if.then389
  %conv395 = trunc i64 %call390 to i32, !dbg !3384
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv395) #6, !dbg !3384
  %.pre123 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3384
  %.pre124 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3384
  br label %cond.end397, !dbg !3384

cond.end397:                                      ; preds = %if.then389, %cond.true394
  %120 = phi i64 [ %call390, %if.then389 ], [ %.pre124, %cond.true394 ], !dbg !3384
  %121 = phi i8* [ %118, %if.then389 ], [ %.pre123, %cond.true394 ], !dbg !3384
  %call399 = call i8* @memcpy(i8* %121, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i64 %120) #6, !dbg !3384
  %122 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3384
  %123 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3384
  %add.ptr400 = getelementptr inbounds i8, i8* %123, i64 %122, !dbg !3384
  store i8* %add.ptr400, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3384
  %bf.load403 = load i32, i32* %precision, align 4, !dbg !3386
  %bf.clear404 = and i32 %bf.load403, 1023, !dbg !3386
  %conv405 = zext i32 %bf.clear404 to i64, !dbg !3386
  call fastcc void @stabstr_D(i64 %conv405) #8, !dbg !3387
  %124 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3388
  %add.ptr406 = getelementptr inbounds i8, i8* %124, i64 1, !dbg !3388
  %125 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3388
  %cmp407 = icmp ugt i8* %add.ptr406, %125, !dbg !3388
  br i1 %cmp407, label %cond.true409, label %cond.end411, !dbg !3388

cond.true409:                                     ; preds = %cond.end397
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3388
  %.pre125 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3388
  br label %cond.end411, !dbg !3388

cond.end411:                                      ; preds = %cond.end397, %cond.true409
  %126 = phi i8* [ %124, %cond.end397 ], [ %.pre125, %cond.true409 ], !dbg !3388
  %incdec.ptr413 = getelementptr inbounds i8, i8* %126, i64 1, !dbg !3388
  store i8* %incdec.ptr413, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3388
  store i8 59, i8* %126, align 1, !dbg !3388
  br label %if.end414, !dbg !3389

if.end414:                                        ; preds = %land.lhs.true379, %if.then376, %cond.end411
  %127 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !3390
  call void @llvm.dbg.value(metadata %union.tree_node* %127, metadata !1723, metadata !DIExpression()), !dbg !3164
  %128 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !3391
  call void @llvm.dbg.value(metadata %union.tree_node* %128, metadata !1724, metadata !DIExpression()), !dbg !3164
  call fastcc void @dbxout_range_type(%union.tree_node* %spec.select1, %union.tree_node* %127, %union.tree_node* %128) #8, !dbg !3392
  br label %cleanup1511, !dbg !3393

if.else415:                                       ; preds = %if.else362, %land.lhs.true367
  %129 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3394
  %tobool417 = icmp eq i8 %129, 0, !dbg !3394
  br i1 %tobool417, label %if.end454, label %land.lhs.true418, !dbg !3397

land.lhs.true418:                                 ; preds = %if.else415
  %type419 = bitcast %union.tree_node* %spec.select1 to %struct.tree_type*, !dbg !3398
  %precision420 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type419, i64 0, i32 6, !dbg !3398
  %bf.load421 = load i32, i32* %precision420, align 4, !dbg !3398
  %130 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !3399
  %precision424 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %130, i64 0, i32 6, !dbg !3399
  %bf.load425 = load i32, i32* %precision424, align 4, !dbg !3399
  %131 = xor i32 %bf.load421, %bf.load425, !dbg !3400
  %132 = and i32 %131, 1023, !dbg !3400
  %cmp427 = icmp eq i32 %132, 0, !dbg !3400
  br i1 %cmp427, label %if.end454, label %if.then429, !dbg !3401

if.then429:                                       ; preds = %land.lhs.true418
  %call430 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !3402
  store i64 %call430, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3402
  %133 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3402
  %add.ptr431 = getelementptr inbounds i8, i8* %133, i64 %call430, !dbg !3402
  %134 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3402
  %cmp432 = icmp ugt i8* %add.ptr431, %134, !dbg !3402
  br i1 %cmp432, label %cond.true434, label %cond.end437, !dbg !3402

cond.true434:                                     ; preds = %if.then429
  %conv435 = trunc i64 %call430 to i32, !dbg !3402
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv435) #6, !dbg !3402
  %.pre126 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3402
  %.pre127 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3402
  br label %cond.end437, !dbg !3402

cond.end437:                                      ; preds = %if.then429, %cond.true434
  %135 = phi i64 [ %call430, %if.then429 ], [ %.pre127, %cond.true434 ], !dbg !3402
  %136 = phi i8* [ %133, %if.then429 ], [ %.pre126, %cond.true434 ], !dbg !3402
  %call439 = call i8* @memcpy(i8* %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i64 %135) #6, !dbg !3402
  %137 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3402
  %138 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3402
  %add.ptr440 = getelementptr inbounds i8, i8* %138, i64 %137, !dbg !3402
  store i8* %add.ptr440, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3402
  %bf.load443 = load i32, i32* %precision420, align 4, !dbg !3404
  %bf.clear444 = and i32 %bf.load443, 1023, !dbg !3404
  %conv445 = zext i32 %bf.clear444 to i64, !dbg !3404
  call fastcc void @stabstr_D(i64 %conv445) #8, !dbg !3405
  %139 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3406
  %add.ptr446 = getelementptr inbounds i8, i8* %139, i64 1, !dbg !3406
  %140 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3406
  %cmp447 = icmp ugt i8* %add.ptr446, %140, !dbg !3406
  br i1 %cmp447, label %cond.true449, label %cond.end451, !dbg !3406

cond.true449:                                     ; preds = %cond.end437
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3406
  %.pre128 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3406
  br label %cond.end451, !dbg !3406

cond.end451:                                      ; preds = %cond.end437, %cond.true449
  %141 = phi i8* [ %139, %cond.end437 ], [ %.pre128, %cond.true449 ], !dbg !3406
  %incdec.ptr453 = getelementptr inbounds i8, i8* %141, i64 1, !dbg !3406
  store i8* %incdec.ptr453, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3406
  store i8 59, i8* %141, align 1, !dbg !3406
  br label %if.end454, !dbg !3407

if.end454:                                        ; preds = %land.lhs.true418, %if.else415, %cond.end451
  %142 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !3408
  call void @llvm.dbg.value(metadata %union.tree_node* %142, metadata !1723, metadata !DIExpression()), !dbg !3164
  %143 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !3410
  call void @llvm.dbg.value(metadata %union.tree_node* %143, metadata !1724, metadata !DIExpression()), !dbg !3164
  %call455 = call fastcc zeroext i8 @print_int_cst_bounds_in_octal_p(%union.tree_node* %spec.select1, %union.tree_node* %142, %union.tree_node* %143) #8, !dbg !3411
  %tobool456 = icmp eq i8 %call455, 0, !dbg !3411
  br i1 %tobool456, label %if.else499, label %if.then457, !dbg !3412

if.then457:                                       ; preds = %if.end454
  %144 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3413
  %add.ptr458 = getelementptr inbounds i8, i8* %144, i64 1, !dbg !3413
  %145 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3413
  %cmp459 = icmp ugt i8* %add.ptr458, %145, !dbg !3413
  br i1 %cmp459, label %cond.true461, label %cond.end463, !dbg !3413

cond.true461:                                     ; preds = %if.then457
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3413
  %.pre129 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3413
  br label %cond.end463, !dbg !3413

cond.end463:                                      ; preds = %if.then457, %cond.true461
  %146 = phi i8* [ %144, %if.then457 ], [ %.pre129, %cond.true461 ], !dbg !3413
  %incdec.ptr465 = getelementptr inbounds i8, i8* %146, i64 1, !dbg !3413
  store i8* %incdec.ptr465, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3413
  store i8 114, i8* %146, align 1, !dbg !3413
  %147 = load %union.tree_node*, %union.tree_node** %type364, align 8, !dbg !3415
  %cmp468 = icmp eq %union.tree_node* %147, null, !dbg !3417
  br i1 %cmp468, label %if.else473, label %if.then470, !dbg !3418

if.then470:                                       ; preds = %cond.end463
  call fastcc void @dbxout_type_index(%union.tree_node* nonnull %147) #8, !dbg !3419
  br label %if.end474, !dbg !3419

if.else473:                                       ; preds = %cond.end463
  call fastcc void @dbxout_type_index(%union.tree_node* %spec.select1) #8, !dbg !3420
  br label %if.end474

if.end474:                                        ; preds = %if.else473, %if.then470
  %148 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3421
  %add.ptr475 = getelementptr inbounds i8, i8* %148, i64 1, !dbg !3421
  %149 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3421
  %cmp476 = icmp ugt i8* %add.ptr475, %149, !dbg !3421
  br i1 %cmp476, label %cond.true478, label %cond.end480, !dbg !3421

cond.true478:                                     ; preds = %if.end474
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3421
  %.pre130 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3421
  br label %cond.end480, !dbg !3421

cond.end480:                                      ; preds = %if.end474, %cond.true478
  %150 = phi i8* [ %148, %if.end474 ], [ %.pre130, %cond.true478 ], !dbg !3421
  %incdec.ptr482 = getelementptr inbounds i8, i8* %150, i64 1, !dbg !3421
  store i8* %incdec.ptr482, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3421
  store i8 59, i8* %150, align 1, !dbg !3421
  %151 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !3422
  call void @llvm.dbg.value(metadata %union.tree_node* %151, metadata !1723, metadata !DIExpression()), !dbg !3164
  call fastcc void @stabstr_O(%union.tree_node* %151) #8, !dbg !3423
  %152 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3424
  %add.ptr483 = getelementptr inbounds i8, i8* %152, i64 1, !dbg !3424
  %153 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3424
  %cmp484 = icmp ugt i8* %add.ptr483, %153, !dbg !3424
  br i1 %cmp484, label %cond.true486, label %cond.end488, !dbg !3424

cond.true486:                                     ; preds = %cond.end480
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3424
  %.pre131 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3424
  br label %cond.end488, !dbg !3424

cond.end488:                                      ; preds = %cond.end480, %cond.true486
  %154 = phi i8* [ %152, %cond.end480 ], [ %.pre131, %cond.true486 ], !dbg !3424
  %incdec.ptr490 = getelementptr inbounds i8, i8* %154, i64 1, !dbg !3424
  store i8* %incdec.ptr490, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3424
  store i8 59, i8* %154, align 1, !dbg !3424
  %155 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !3425
  call void @llvm.dbg.value(metadata %union.tree_node* %155, metadata !1724, metadata !DIExpression()), !dbg !3164
  call fastcc void @stabstr_O(%union.tree_node* %155) #8, !dbg !3426
  %156 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3427
  %add.ptr491 = getelementptr inbounds i8, i8* %156, i64 1, !dbg !3427
  %157 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3427
  %cmp492 = icmp ugt i8* %add.ptr491, %157, !dbg !3427
  br i1 %cmp492, label %cond.true494, label %cond.end496, !dbg !3427

cond.true494:                                     ; preds = %cond.end488
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3427
  %.pre132 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3427
  br label %cond.end496, !dbg !3427

cond.end496:                                      ; preds = %cond.end488, %cond.true494
  %158 = phi i8* [ %156, %cond.end488 ], [ %.pre132, %cond.true494 ], !dbg !3427
  %incdec.ptr498 = getelementptr inbounds i8, i8* %158, i64 1, !dbg !3427
  store i8* %incdec.ptr498, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3427
  store i8 59, i8* %158, align 1, !dbg !3427
  br label %cleanup1511, !dbg !3428

if.else499:                                       ; preds = %if.end454
  %159 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !3429
  call void @llvm.dbg.value(metadata %union.tree_node* %159, metadata !1723, metadata !DIExpression()), !dbg !3164
  %160 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !3430
  call void @llvm.dbg.value(metadata %union.tree_node* %160, metadata !1724, metadata !DIExpression()), !dbg !3164
  call fastcc void @dbxout_range_type(%union.tree_node* %spec.select1, %union.tree_node* %159, %union.tree_node* %160) #8, !dbg !3431
  br label %cleanup1511

sw.bb503:                                         ; preds = %if.end326, %if.end326
  %161 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3432
  %add.ptr504 = getelementptr inbounds i8, i8* %161, i64 1, !dbg !3432
  %162 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3432
  %cmp505 = icmp ugt i8* %add.ptr504, %162, !dbg !3432
  br i1 %cmp505, label %cond.true507, label %cond.end509, !dbg !3432

cond.true507:                                     ; preds = %sw.bb503
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3432
  %.pre119 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3432
  br label %cond.end509, !dbg !3432

cond.end509:                                      ; preds = %sw.bb503, %cond.true507
  %163 = phi i8* [ %161, %sw.bb503 ], [ %.pre119, %cond.true507 ], !dbg !3432
  %incdec.ptr511 = getelementptr inbounds i8, i8* %163, i64 1, !dbg !3432
  store i8* %incdec.ptr511, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3432
  store i8 114, i8* %163, align 1, !dbg !3432
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !3433
  call fastcc void @dbxout_type_index(%union.tree_node* %164) #8, !dbg !3434
  %165 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3435
  %add.ptr512 = getelementptr inbounds i8, i8* %165, i64 1, !dbg !3435
  %166 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3435
  %cmp513 = icmp ugt i8* %add.ptr512, %166, !dbg !3435
  br i1 %cmp513, label %cond.true515, label %cond.end517, !dbg !3435

cond.true515:                                     ; preds = %cond.end509
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3435
  %.pre120 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3435
  br label %cond.end517, !dbg !3435

cond.end517:                                      ; preds = %cond.end509, %cond.true515
  %167 = phi i8* [ %165, %cond.end509 ], [ %.pre120, %cond.true515 ], !dbg !3435
  %incdec.ptr519 = getelementptr inbounds i8, i8* %167, i64 1, !dbg !3435
  store i8* %incdec.ptr519, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3435
  store i8 59, i8* %167, align 1, !dbg !3435
  %call520 = call i64 @int_size_in_bytes(%union.tree_node* %spec.select1) #6, !dbg !3436
  call fastcc void @stabstr_D(i64 %call520) #8, !dbg !3437
  %call521 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !3438
  store i64 %call521, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3438
  %168 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3438
  %add.ptr522 = getelementptr inbounds i8, i8* %168, i64 %call521, !dbg !3438
  %169 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3438
  %cmp523 = icmp ugt i8* %add.ptr522, %169, !dbg !3438
  br i1 %cmp523, label %cond.true525, label %cond.end528, !dbg !3438

cond.true525:                                     ; preds = %cond.end517
  %conv526 = trunc i64 %call521 to i32, !dbg !3438
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv526) #6, !dbg !3438
  %.pre121 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3438
  %.pre122 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3438
  br label %cond.end528, !dbg !3438

cond.end528:                                      ; preds = %cond.end517, %cond.true525
  %170 = phi i64 [ %call521, %cond.end517 ], [ %.pre122, %cond.true525 ], !dbg !3438
  %171 = phi i8* [ %168, %cond.end517 ], [ %.pre121, %cond.true525 ], !dbg !3438
  %call530 = call i8* @memcpy(i8* %171, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), i64 %170) #6, !dbg !3438
  %172 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3438
  %173 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3438
  %add.ptr531 = getelementptr inbounds i8, i8* %173, i64 %172, !dbg !3438
  store i8* %add.ptr531, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3438
  br label %cleanup1511, !dbg !3439

sw.bb532:                                         ; preds = %if.end326
  %174 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3440
  %tobool533 = icmp eq i8 %174, 0, !dbg !3440
  br i1 %tobool533, label %if.else559, label %if.then534, !dbg !3442

if.then534:                                       ; preds = %sw.bb532
  %call535 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !3443
  store i64 %call535, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3443
  %175 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3443
  %add.ptr536 = getelementptr inbounds i8, i8* %175, i64 %call535, !dbg !3443
  %176 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3443
  %cmp537 = icmp ugt i8* %add.ptr536, %176, !dbg !3443
  br i1 %cmp537, label %cond.true539, label %cond.end542, !dbg !3443

cond.true539:                                     ; preds = %if.then534
  %conv540 = trunc i64 %call535 to i32, !dbg !3443
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv540) #6, !dbg !3443
  %.pre113 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3443
  %.pre114 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3443
  br label %cond.end542, !dbg !3443

cond.end542:                                      ; preds = %if.then534, %cond.true539
  %177 = phi i64 [ %call535, %if.then534 ], [ %.pre114, %cond.true539 ], !dbg !3443
  %178 = phi i8* [ %175, %if.then534 ], [ %.pre113, %cond.true539 ], !dbg !3443
  %call544 = call i8* @memcpy(i8* %178, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i64 %177) #6, !dbg !3443
  %179 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3443
  %180 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3443
  %add.ptr545 = getelementptr inbounds i8, i8* %180, i64 %179, !dbg !3443
  store i8* %add.ptr545, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3443
  %call546 = call i64 @int_size_in_bytes(%union.tree_node* %spec.select1) #6, !dbg !3445
  %mul547 = shl nsw i64 %call546, 3, !dbg !3446
  call fastcc void @stabstr_D(i64 %mul547) #8, !dbg !3447
  %call548 = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3448
  store i64 %call548, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3448
  %181 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3448
  %add.ptr549 = getelementptr inbounds i8, i8* %181, i64 %call548, !dbg !3448
  %182 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3448
  %cmp550 = icmp ugt i8* %add.ptr549, %182, !dbg !3448
  br i1 %cmp550, label %cond.true552, label %cond.end555, !dbg !3448

cond.true552:                                     ; preds = %cond.end542
  %conv553 = trunc i64 %call548 to i32, !dbg !3448
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv553) #6, !dbg !3448
  %.pre115 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3448
  %.pre116 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3448
  br label %cond.end555, !dbg !3448

cond.end555:                                      ; preds = %cond.end542, %cond.true552
  %183 = phi i64 [ %call548, %cond.end542 ], [ %.pre116, %cond.true552 ], !dbg !3448
  %184 = phi i8* [ %181, %cond.end542 ], [ %.pre115, %cond.true552 ], !dbg !3448
  %call557 = call i8* @memcpy(i8* %184, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i64 %183) #6, !dbg !3448
  %185 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3448
  %186 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3448
  %add.ptr558 = getelementptr inbounds i8, i8* %186, i64 %185, !dbg !3448
  store i8* %add.ptr558, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3448
  br label %cleanup1511, !dbg !3449

if.else559:                                       ; preds = %sw.bb532
  %call560 = call i64 @strlen(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !3450
  store i64 %call560, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3450
  %187 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3450
  %add.ptr561 = getelementptr inbounds i8, i8* %187, i64 %call560, !dbg !3450
  %188 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3450
  %cmp562 = icmp ugt i8* %add.ptr561, %188, !dbg !3450
  br i1 %cmp562, label %cond.true564, label %cond.end567, !dbg !3450

cond.true564:                                     ; preds = %if.else559
  %conv565 = trunc i64 %call560 to i32, !dbg !3450
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv565) #6, !dbg !3450
  %.pre117 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3450
  %.pre118 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3450
  br label %cond.end567, !dbg !3450

cond.end567:                                      ; preds = %if.else559, %cond.true564
  %189 = phi i64 [ %call560, %if.else559 ], [ %.pre118, %cond.true564 ], !dbg !3450
  %190 = phi i8* [ %187, %if.else559 ], [ %.pre117, %cond.true564 ], !dbg !3450
  %call569 = call i8* @memcpy(i8* %190, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0), i64 %189) #6, !dbg !3450
  %191 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3450
  %192 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3450
  %add.ptr570 = getelementptr inbounds i8, i8* %192, i64 %191, !dbg !3450
  store i8* %add.ptr570, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3450
  br label %cleanup1511

sw.bb572:                                         ; preds = %if.end326
  %type574 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3451
  %193 = bitcast %union.tree_node** %type574 to i64**, !dbg !3451
  %194 = load i64*, i64** %193, align 8, !dbg !3451
  %bf.load576 = load i64, i64* %194, align 8, !dbg !3451
  %bf.cast57819 = and i64 %bf.load576, 65535, !dbg !3453
  %cmp579 = icmp eq i64 %bf.cast57819, 9, !dbg !3453
  br i1 %cmp579, label %if.then581, label %if.else608, !dbg !3454

if.then581:                                       ; preds = %sw.bb572
  %call582 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !3455
  store i64 %call582, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3455
  %195 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3455
  %add.ptr583 = getelementptr inbounds i8, i8* %195, i64 %call582, !dbg !3455
  %196 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3455
  %cmp584 = icmp ugt i8* %add.ptr583, %196, !dbg !3455
  br i1 %cmp584, label %cond.true586, label %cond.end589, !dbg !3455

cond.true586:                                     ; preds = %if.then581
  %conv587 = trunc i64 %call582 to i32, !dbg !3455
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv587) #6, !dbg !3455
  %.pre109 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3455
  %.pre110 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3455
  br label %cond.end589, !dbg !3455

cond.end589:                                      ; preds = %if.then581, %cond.true586
  %197 = phi i64 [ %call582, %if.then581 ], [ %.pre110, %cond.true586 ], !dbg !3455
  %198 = phi i8* [ %195, %if.then581 ], [ %.pre109, %cond.true586 ], !dbg !3455
  %call591 = call i8* @memcpy(i8* %198, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 %197) #6, !dbg !3455
  %199 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3455
  %200 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3455
  %add.ptr592 = getelementptr inbounds i8, i8* %200, i64 %199, !dbg !3455
  store i8* %add.ptr592, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3455
  %201 = load %union.tree_node*, %union.tree_node** %type574, align 8, !dbg !3457
  %call595 = call i64 @int_size_in_bytes(%union.tree_node* %201) #6, !dbg !3458
  %mul596 = shl nsw i64 %call595, 1, !dbg !3459
  call fastcc void @stabstr_D(i64 %mul596) #8, !dbg !3460
  %call597 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !3461
  store i64 %call597, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3461
  %202 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3461
  %add.ptr598 = getelementptr inbounds i8, i8* %202, i64 %call597, !dbg !3461
  %203 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3461
  %cmp599 = icmp ugt i8* %add.ptr598, %203, !dbg !3461
  br i1 %cmp599, label %cond.true601, label %cond.end604, !dbg !3461

cond.true601:                                     ; preds = %cond.end589
  %conv602 = trunc i64 %call597 to i32, !dbg !3461
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv602) #6, !dbg !3461
  %.pre111 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3461
  %.pre112 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3461
  br label %cond.end604, !dbg !3461

cond.end604:                                      ; preds = %cond.end589, %cond.true601
  %204 = phi i64 [ %call597, %cond.end589 ], [ %.pre112, %cond.true601 ], !dbg !3461
  %205 = phi i8* [ %202, %cond.end589 ], [ %.pre111, %cond.true601 ], !dbg !3461
  %call606 = call i8* @memcpy(i8* %205, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), i64 %204) #6, !dbg !3461
  %206 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3461
  %207 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3461
  %add.ptr607 = getelementptr inbounds i8, i8* %207, i64 %206, !dbg !3461
  store i8* %add.ptr607, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3461
  br label %cleanup1511, !dbg !3462

if.else608:                                       ; preds = %sw.bb572
  %208 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3463
  %add.ptr609 = getelementptr inbounds i8, i8* %208, i64 1, !dbg !3463
  %209 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3463
  %cmp610 = icmp ugt i8* %add.ptr609, %209, !dbg !3463
  br i1 %cmp610, label %cond.true612, label %cond.end614, !dbg !3463

cond.true612:                                     ; preds = %if.else608
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3463
  %.pre98 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3463
  br label %cond.end614, !dbg !3463

cond.end614:                                      ; preds = %if.else608, %cond.true612
  %210 = phi i8* [ %208, %if.else608 ], [ %.pre98, %cond.true612 ], !dbg !3463
  %incdec.ptr616 = getelementptr inbounds i8, i8* %210, i64 1, !dbg !3463
  store i8* %incdec.ptr616, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3463
  store i8 115, i8* %210, align 1, !dbg !3463
  %call617 = call i64 @int_size_in_bytes(%union.tree_node* %spec.select1) #6, !dbg !3465
  call fastcc void @stabstr_D(i64 %call617) #8, !dbg !3466
  %call618 = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3467
  store i64 %call618, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3467
  %211 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3467
  %add.ptr619 = getelementptr inbounds i8, i8* %211, i64 %call618, !dbg !3467
  %212 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3467
  %cmp620 = icmp ugt i8* %add.ptr619, %212, !dbg !3467
  br i1 %cmp620, label %cond.true622, label %cond.end625, !dbg !3467

cond.true622:                                     ; preds = %cond.end614
  %conv623 = trunc i64 %call618 to i32, !dbg !3467
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv623) #6, !dbg !3467
  %.pre99 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3467
  %.pre100 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3467
  br label %cond.end625, !dbg !3467

cond.end625:                                      ; preds = %cond.end614, %cond.true622
  %213 = phi i64 [ %call618, %cond.end614 ], [ %.pre100, %cond.true622 ], !dbg !3467
  %214 = phi i8* [ %211, %cond.end614 ], [ %.pre99, %cond.true622 ], !dbg !3467
  %call627 = call i8* @memcpy(i8* %214, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i64 %213) #6, !dbg !3467
  %215 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3467
  %216 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3467
  %add.ptr628 = getelementptr inbounds i8, i8* %216, i64 %215, !dbg !3467
  store i8* %add.ptr628, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3467
  %217 = load %union.tree_node*, %union.tree_node** %type574, align 8, !dbg !3468
  call fastcc void @dbxout_type(%union.tree_node* %217, i32 0) #8, !dbg !3469
  %call631 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3470
  store i64 %call631, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3470
  %218 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3470
  %add.ptr632 = getelementptr inbounds i8, i8* %218, i64 %call631, !dbg !3470
  %219 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3470
  %cmp633 = icmp ugt i8* %add.ptr632, %219, !dbg !3470
  br i1 %cmp633, label %cond.true635, label %cond.end638, !dbg !3470

cond.true635:                                     ; preds = %cond.end625
  %conv636 = trunc i64 %call631 to i32, !dbg !3470
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv636) #6, !dbg !3470
  %.pre101 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3470
  %.pre102 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3470
  br label %cond.end638, !dbg !3470

cond.end638:                                      ; preds = %cond.end625, %cond.true635
  %220 = phi i64 [ %call631, %cond.end625 ], [ %.pre102, %cond.true635 ], !dbg !3470
  %221 = phi i8* [ %218, %cond.end625 ], [ %.pre101, %cond.true635 ], !dbg !3470
  %call640 = call i8* @memcpy(i8* %221, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 %220) #6, !dbg !3470
  %222 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3470
  %223 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3470
  %add.ptr641 = getelementptr inbounds i8, i8* %223, i64 %222, !dbg !3470
  store i8* %add.ptr641, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3470
  %224 = bitcast %union.tree_node** %type574 to %struct.tree_type**, !dbg !3471
  %225 = load %struct.tree_type*, %struct.tree_type** %224, align 8, !dbg !3471
  %precision645 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %225, i64 0, i32 6, !dbg !3471
  %bf.load646 = load i32, i32* %precision645, align 4, !dbg !3471
  %bf.clear647 = and i32 %bf.load646, 1023, !dbg !3471
  %conv648 = zext i32 %bf.clear647 to i64, !dbg !3471
  call fastcc void @stabstr_D(i64 %conv648) #8, !dbg !3472
  %call649 = call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !3473
  store i64 %call649, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3473
  %226 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3473
  %add.ptr650 = getelementptr inbounds i8, i8* %226, i64 %call649, !dbg !3473
  %227 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3473
  %cmp651 = icmp ugt i8* %add.ptr650, %227, !dbg !3473
  br i1 %cmp651, label %cond.true653, label %cond.end656, !dbg !3473

cond.true653:                                     ; preds = %cond.end638
  %conv654 = trunc i64 %call649 to i32, !dbg !3473
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv654) #6, !dbg !3473
  %.pre103 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3473
  %.pre104 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3473
  br label %cond.end656, !dbg !3473

cond.end656:                                      ; preds = %cond.end638, %cond.true653
  %228 = phi i64 [ %call649, %cond.end638 ], [ %.pre104, %cond.true653 ], !dbg !3473
  %229 = phi i8* [ %226, %cond.end638 ], [ %.pre103, %cond.true653 ], !dbg !3473
  %call658 = call i8* @memcpy(i8* %229, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i64 %228) #6, !dbg !3473
  %230 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3473
  %231 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3473
  %add.ptr659 = getelementptr inbounds i8, i8* %231, i64 %230, !dbg !3473
  store i8* %add.ptr659, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3473
  %232 = load %union.tree_node*, %union.tree_node** %type574, align 8, !dbg !3474
  call fastcc void @dbxout_type(%union.tree_node* %232, i32 0) #8, !dbg !3475
  %233 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3476
  %add.ptr662 = getelementptr inbounds i8, i8* %233, i64 1, !dbg !3476
  %234 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3476
  %cmp663 = icmp ugt i8* %add.ptr662, %234, !dbg !3476
  br i1 %cmp663, label %cond.true665, label %cond.end667, !dbg !3476

cond.true665:                                     ; preds = %cond.end656
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3476
  %.pre105 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3476
  br label %cond.end667, !dbg !3476

cond.end667:                                      ; preds = %cond.end656, %cond.true665
  %235 = phi i8* [ %233, %cond.end656 ], [ %.pre105, %cond.true665 ], !dbg !3476
  %incdec.ptr669 = getelementptr inbounds i8, i8* %235, i64 1, !dbg !3476
  store i8* %incdec.ptr669, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3476
  store i8 44, i8* %235, align 1, !dbg !3476
  %236 = load %struct.tree_type*, %struct.tree_type** %224, align 8, !dbg !3477
  %precision673 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %236, i64 0, i32 6, !dbg !3477
  %bf.load674 = load i32, i32* %precision673, align 4, !dbg !3477
  %bf.clear675 = and i32 %bf.load674, 1023, !dbg !3477
  %conv676 = zext i32 %bf.clear675 to i64, !dbg !3477
  call fastcc void @stabstr_D(i64 %conv676) #8, !dbg !3478
  %237 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3479
  %add.ptr677 = getelementptr inbounds i8, i8* %237, i64 1, !dbg !3479
  %238 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3479
  %cmp678 = icmp ugt i8* %add.ptr677, %238, !dbg !3479
  br i1 %cmp678, label %cond.true680, label %cond.end682, !dbg !3479

cond.true680:                                     ; preds = %cond.end667
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3479
  %.pre106 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3479
  br label %cond.end682, !dbg !3479

cond.end682:                                      ; preds = %cond.end667, %cond.true680
  %239 = phi i8* [ %237, %cond.end667 ], [ %.pre106, %cond.true680 ], !dbg !3479
  %incdec.ptr684 = getelementptr inbounds i8, i8* %239, i64 1, !dbg !3479
  store i8* %incdec.ptr684, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3479
  store i8 44, i8* %239, align 1, !dbg !3479
  %240 = load %struct.tree_type*, %struct.tree_type** %224, align 8, !dbg !3480
  %precision688 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %240, i64 0, i32 6, !dbg !3480
  %bf.load689 = load i32, i32* %precision688, align 4, !dbg !3480
  %bf.clear690 = and i32 %bf.load689, 1023, !dbg !3480
  %conv691 = zext i32 %bf.clear690 to i64, !dbg !3480
  call fastcc void @stabstr_D(i64 %conv691) #8, !dbg !3481
  %call692 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !3482
  store i64 %call692, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3482
  %241 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3482
  %add.ptr693 = getelementptr inbounds i8, i8* %241, i64 %call692, !dbg !3482
  %242 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3482
  %cmp694 = icmp ugt i8* %add.ptr693, %242, !dbg !3482
  br i1 %cmp694, label %cond.true696, label %cond.end699, !dbg !3482

cond.true696:                                     ; preds = %cond.end682
  %conv697 = trunc i64 %call692 to i32, !dbg !3482
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv697) #6, !dbg !3482
  %.pre107 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3482
  %.pre108 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3482
  br label %cond.end699, !dbg !3482

cond.end699:                                      ; preds = %cond.end682, %cond.true696
  %243 = phi i64 [ %call692, %cond.end682 ], [ %.pre108, %cond.true696 ], !dbg !3482
  %244 = phi i8* [ %241, %cond.end682 ], [ %.pre107, %cond.true696 ], !dbg !3482
  %call701 = call i8* @memcpy(i8* %244, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i64 0, i64 0), i64 %243) #6, !dbg !3482
  %245 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3482
  %246 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3482
  %add.ptr702 = getelementptr inbounds i8, i8* %246, i64 %245, !dbg !3482
  store i8* %add.ptr702, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3482
  br label %cleanup1511

sw.bb704:                                         ; preds = %if.end326
  %bf.cast71018 = and i64 %bf.load204, 2199023255552, !dbg !3483
  %tobool711 = icmp eq i64 %bf.cast71018, 0, !dbg !3483
  br i1 %tobool711, label %sw.bb704.if.end742_crit_edge, label %land.lhs.true712, !dbg !3485

sw.bb704.if.end742_crit_edge:                     ; preds = %sw.bb704
  %.pre88 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3486
  %phitmp = icmp ne i8 %.pre88, 0, !dbg !3485
  br label %if.end742, !dbg !3485

land.lhs.true712:                                 ; preds = %sw.bb704
  %247 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3488
  %tobool714 = icmp eq i8 %247, 0, !dbg !3488
  br i1 %tobool714, label %if.end742, label %if.then715, !dbg !3489

if.then715:                                       ; preds = %land.lhs.true712
  %call716 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !3490
  store i64 %call716, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3490
  %248 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3490
  %add.ptr717 = getelementptr inbounds i8, i8* %248, i64 %call716, !dbg !3490
  %249 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3490
  %cmp718 = icmp ugt i8* %add.ptr717, %249, !dbg !3490
  br i1 %cmp718, label %cond.true720, label %cond.end723, !dbg !3490

cond.true720:                                     ; preds = %if.then715
  %conv721 = trunc i64 %call716 to i32, !dbg !3490
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv721) #6, !dbg !3490
  %.pre84 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3490
  %.pre85 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3490
  br label %cond.end723, !dbg !3490

cond.end723:                                      ; preds = %if.then715, %cond.true720
  %250 = phi i64 [ %call716, %if.then715 ], [ %.pre85, %cond.true720 ], !dbg !3490
  %251 = phi i8* [ %248, %if.then715 ], [ %.pre84, %cond.true720 ], !dbg !3490
  %call725 = call i8* @memcpy(i8* %251, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i64 %250) #6, !dbg !3490
  %252 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3490
  %253 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3490
  %add.ptr726 = getelementptr inbounds i8, i8* %253, i64 %252, !dbg !3490
  store i8* %add.ptr726, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3490
  %call727 = call i64 @int_size_in_bytes(%union.tree_node* %spec.select1) #6, !dbg !3492
  %mul728 = shl nsw i64 %call727, 3, !dbg !3493
  call fastcc void @stabstr_D(i64 %mul728) #8, !dbg !3494
  %call729 = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !3495
  store i64 %call729, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3495
  %254 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3495
  %add.ptr730 = getelementptr inbounds i8, i8* %254, i64 %call729, !dbg !3495
  %255 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3495
  %cmp731 = icmp ugt i8* %add.ptr730, %255, !dbg !3495
  br i1 %cmp731, label %cond.true733, label %cond.end736, !dbg !3495

cond.true733:                                     ; preds = %cond.end723
  %conv734 = trunc i64 %call729 to i32, !dbg !3495
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv734) #6, !dbg !3495
  %.pre86 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3495
  %.pre87 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3495
  br label %cond.end736, !dbg !3495

cond.end736:                                      ; preds = %cond.end723, %cond.true733
  %256 = phi i64 [ %call729, %cond.end723 ], [ %.pre87, %cond.true733 ], !dbg !3495
  %257 = phi i8* [ %254, %cond.end723 ], [ %.pre86, %cond.true733 ], !dbg !3495
  %call738 = call i8* @memcpy(i8* %257, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i64 %256) #6, !dbg !3495
  %258 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3495
  %259 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3495
  %add.ptr739 = getelementptr inbounds i8, i8* %259, i64 %258, !dbg !3495
  store i8* %add.ptr739, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3495
  %values741 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3496
  %260 = bitcast i32* %values741 to %union.tree_node**, !dbg !3496
  %261 = load %union.tree_node*, %union.tree_node** %260, align 8, !dbg !3496
  call fastcc void @dbxout_type(%union.tree_node* %261, i32 0) #8, !dbg !3497
  br label %cleanup1511, !dbg !3498

if.end742:                                        ; preds = %sw.bb704.if.end742_crit_edge, %land.lhs.true712
  %262 = phi i1 [ %phitmp, %sw.bb704.if.end742_crit_edge ], [ false, %land.lhs.true712 ]
  %tobool747 = icmp ne i32 %vector_type.0, 0, !dbg !3499
  %or.cond = and i1 %262, %tobool747, !dbg !3500
  br i1 %or.cond, label %if.then748, label %if.end760, !dbg !3500

if.then748:                                       ; preds = %if.end742
  %call749 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !3501
  store i64 %call749, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3501
  %263 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3501
  %add.ptr750 = getelementptr inbounds i8, i8* %263, i64 %call749, !dbg !3501
  %264 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3501
  %cmp751 = icmp ugt i8* %add.ptr750, %264, !dbg !3501
  br i1 %cmp751, label %cond.true753, label %cond.end756, !dbg !3501

cond.true753:                                     ; preds = %if.then748
  %conv754 = trunc i64 %call749 to i32, !dbg !3501
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv754) #6, !dbg !3501
  %.pre89 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3501
  %.pre90 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3501
  br label %cond.end756, !dbg !3501

cond.end756:                                      ; preds = %if.then748, %cond.true753
  %265 = phi i64 [ %call749, %if.then748 ], [ %.pre90, %cond.true753 ], !dbg !3501
  %266 = phi i8* [ %263, %if.then748 ], [ %.pre89, %cond.true753 ], !dbg !3501
  %call758 = call i8* @memcpy(i8* %266, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i64 %265) #6, !dbg !3501
  %267 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3501
  %268 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3501
  %add.ptr759 = getelementptr inbounds i8, i8* %268, i64 %267, !dbg !3501
  store i8* %add.ptr759, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3501
  br label %if.end760, !dbg !3501

if.end760:                                        ; preds = %cond.end756, %if.end742
  %type761 = bitcast %union.tree_node* %spec.select1 to %struct.tree_type*, !dbg !3502
  %string_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type761, i64 0, i32 6, !dbg !3502
  %bf.load762 = load i32, i32* %string_flag, align 4, !dbg !3502
  %bf.clear764 = and i32 %bf.load762, 16777216, !dbg !3502
  %tobool765 = icmp eq i32 %bf.clear764, 0, !dbg !3502
  br i1 %tobool765, label %if.end781, label %land.lhs.true766, !dbg !3504

land.lhs.true766:                                 ; preds = %if.end760
  %269 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3505
  %tobool768 = icmp eq i8 %269, 0, !dbg !3505
  br i1 %tobool768, label %if.end781, label %if.then769, !dbg !3506

if.then769:                                       ; preds = %land.lhs.true766
  %call770 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !3507
  store i64 %call770, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3507
  %270 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3507
  %add.ptr771 = getelementptr inbounds i8, i8* %270, i64 %call770, !dbg !3507
  %271 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3507
  %cmp772 = icmp ugt i8* %add.ptr771, %271, !dbg !3507
  br i1 %cmp772, label %cond.true774, label %cond.end777, !dbg !3507

cond.true774:                                     ; preds = %if.then769
  %conv775 = trunc i64 %call770 to i32, !dbg !3507
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv775) #6, !dbg !3507
  %.pre91 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3507
  %.pre92 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3507
  br label %cond.end777, !dbg !3507

cond.end777:                                      ; preds = %if.then769, %cond.true774
  %272 = phi i64 [ %call770, %if.then769 ], [ %.pre92, %cond.true774 ], !dbg !3507
  %273 = phi i8* [ %270, %if.then769 ], [ %.pre91, %cond.true774 ], !dbg !3507
  %call779 = call i8* @memcpy(i8* %273, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i64 %272) #6, !dbg !3507
  %274 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3507
  %275 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3507
  %add.ptr780 = getelementptr inbounds i8, i8* %275, i64 %274, !dbg !3507
  store i8* %add.ptr780, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3507
  br label %if.end781, !dbg !3509

if.end781:                                        ; preds = %land.lhs.true766, %if.end760, %cond.end777
  %values783 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3510
  %276 = bitcast i32* %values783 to %union.tree_node**, !dbg !3510
  %277 = load %union.tree_node*, %union.tree_node** %276, align 8, !dbg !3510
  call void @llvm.dbg.value(metadata %union.tree_node* %277, metadata !1721, metadata !DIExpression()), !dbg !3164
  %cmp784 = icmp eq %union.tree_node* %277, null, !dbg !3511
  br i1 %cmp784, label %if.then786, label %if.else809, !dbg !3513

if.then786:                                       ; preds = %if.end781
  %call787 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !3514
  store i64 %call787, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3514
  %278 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3514
  %add.ptr788 = getelementptr inbounds i8, i8* %278, i64 %call787, !dbg !3514
  %279 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3514
  %cmp789 = icmp ugt i8* %add.ptr788, %279, !dbg !3514
  br i1 %cmp789, label %cond.true791, label %cond.end794, !dbg !3514

cond.true791:                                     ; preds = %if.then786
  %conv792 = trunc i64 %call787 to i32, !dbg !3514
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv792) #6, !dbg !3514
  %.pre94 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3514
  %.pre95 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3514
  br label %cond.end794, !dbg !3514

cond.end794:                                      ; preds = %if.then786, %cond.true791
  %280 = phi i64 [ %call787, %if.then786 ], [ %.pre95, %cond.true791 ], !dbg !3514
  %281 = phi i8* [ %278, %if.then786 ], [ %.pre94, %cond.true791 ], !dbg !3514
  %call796 = call i8* @memcpy(i8* %281, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), i64 %280) #6, !dbg !3514
  %282 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3514
  %283 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3514
  %add.ptr797 = getelementptr inbounds i8, i8* %283, i64 %282, !dbg !3514
  store i8* %add.ptr797, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3514
  %284 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !3516
  call fastcc void @dbxout_type_index(%union.tree_node* %284) #8, !dbg !3517
  %call798 = call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !3518
  store i64 %call798, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3518
  %285 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3518
  %add.ptr799 = getelementptr inbounds i8, i8* %285, i64 %call798, !dbg !3518
  %286 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3518
  %cmp800 = icmp ugt i8* %add.ptr799, %286, !dbg !3518
  br i1 %cmp800, label %cond.true802, label %cond.end805, !dbg !3518

cond.true802:                                     ; preds = %cond.end794
  %conv803 = trunc i64 %call798 to i32, !dbg !3518
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv803) #6, !dbg !3518
  %.pre96 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3518
  %.pre97 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3518
  br label %cond.end805, !dbg !3518

cond.end805:                                      ; preds = %cond.end794, %cond.true802
  %287 = phi i64 [ %call798, %cond.end794 ], [ %.pre97, %cond.true802 ], !dbg !3518
  %288 = phi i8* [ %285, %cond.end794 ], [ %.pre96, %cond.true802 ], !dbg !3518
  %call807 = call i8* @memcpy(i8* %288, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i64 %287) #6, !dbg !3518
  %289 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3518
  %290 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3518
  %add.ptr808 = getelementptr inbounds i8, i8* %290, i64 %289, !dbg !3518
  store i8* %add.ptr808, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3518
  br label %if.end822, !dbg !3519

if.else809:                                       ; preds = %if.end781
  %291 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3520
  %add.ptr810 = getelementptr inbounds i8, i8* %291, i64 1, !dbg !3520
  %292 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3520
  %cmp811 = icmp ugt i8* %add.ptr810, %292, !dbg !3520
  br i1 %cmp811, label %cond.true813, label %cond.end815, !dbg !3520

cond.true813:                                     ; preds = %if.else809
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3520
  %.pre93 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3520
  br label %cond.end815, !dbg !3520

cond.end815:                                      ; preds = %if.else809, %cond.true813
  %293 = phi i8* [ %291, %if.else809 ], [ %.pre93, %cond.true813 ], !dbg !3520
  %incdec.ptr817 = getelementptr inbounds i8, i8* %293, i64 1, !dbg !3520
  store i8* %incdec.ptr817, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3520
  store i8 97, i8* %293, align 1, !dbg !3520
  %minval819 = getelementptr inbounds %union.tree_node, %union.tree_node* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3522
  %294 = bitcast %struct.lang_decl** %minval819 to %union.tree_node**, !dbg !3522
  %295 = load %union.tree_node*, %union.tree_node** %294, align 8, !dbg !3522
  %maxval821 = getelementptr inbounds %union.tree_node, %union.tree_node* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3523
  %296 = bitcast %struct.rtx_def** %maxval821 to %union.tree_node**, !dbg !3523
  %297 = load %union.tree_node*, %union.tree_node** %296, align 8, !dbg !3523
  call fastcc void @dbxout_range_type(%union.tree_node* nonnull %277, %union.tree_node* %295, %union.tree_node* %297) #8, !dbg !3524
  br label %if.end822

if.end822:                                        ; preds = %cond.end815, %cond.end805
  %type824 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3525
  %298 = load %union.tree_node*, %union.tree_node** %type824, align 8, !dbg !3525
  call fastcc void @dbxout_type(%union.tree_node* %298, i32 0) #8, !dbg !3526
  br label %cleanup1511, !dbg !3527

sw.bb825:                                         ; preds = %if.end326, %if.end326, %if.end326
  %299 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3528
  %300 = load %union.tree_node*, %union.tree_node** %299, align 8, !dbg !3528
  call void @llvm.dbg.value(metadata %union.tree_node* %300, metadata !1732, metadata !DIExpression()), !dbg !3529
  %301 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3530
  %302 = load %union.tree_node*, %union.tree_node** %301, align 8, !dbg !3530
  %cmp830 = icmp eq %union.tree_node* %302, null, !dbg !3532
  br i1 %cmp830, label %lor.lhs.false853, label %land.lhs.true832, !dbg !3533

land.lhs.true832:                                 ; preds = %sw.bb825
  %303 = getelementptr inbounds %union.tree_node, %union.tree_node* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3533
  %bf.load836 = load i64, i64* %303, align 8, !dbg !3534
  %bf.cast83816 = and i64 %bf.load836, 65535, !dbg !3535
  %cmp839 = icmp eq i64 %bf.cast83816, 35, !dbg !3535
  br i1 %cmp839, label %land.lhs.true841, label %land.lhs.true851, !dbg !3536

land.lhs.true841:                                 ; preds = %land.lhs.true832
  %ignored_flag845 = getelementptr inbounds %union.tree_node, %union.tree_node* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3537
  %304 = bitcast i40* %ignored_flag845 to i64*, !dbg !3537
  %bf.load846 = load i64, i64* %304, align 8, !dbg !3537
  %bf.cast84917 = and i64 %bf.load846, 1024, !dbg !3537
  %tobool850 = icmp ne i64 %bf.cast84917, 0, !dbg !3537
  %tobool852 = icmp ne i32 %full.addr.1, 0, !dbg !3538
  %or.cond2 = or i1 %tobool850, %tobool852, !dbg !3539
  br i1 %or.cond2, label %lor.lhs.false853, label %if.then863, !dbg !3539

land.lhs.true851:                                 ; preds = %land.lhs.true832
  %tobool852.old = icmp eq i32 %full.addr.1, 0, !dbg !3538
  br i1 %tobool852.old, label %if.then863, label %lor.lhs.false853, !dbg !3540

lor.lhs.false853:                                 ; preds = %land.lhs.true851, %sw.bb825, %land.lhs.true841
  %305 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3541
  %306 = load %union.tree_node*, %union.tree_node** %305, align 8, !dbg !3541
  %cmp856 = icmp eq %union.tree_node* %306, null, !dbg !3541
  br i1 %cmp856, label %if.then863, label %lor.lhs.false858, !dbg !3542

lor.lhs.false858:                                 ; preds = %lor.lhs.false853
  %call861 = call i32 @host_integerp(%union.tree_node* nonnull %306, i32 1) #6, !dbg !3543
  %tobool862 = icmp eq i32 %call861, 0, !dbg !3543
  br i1 %tobool862, label %lor.lhs.false858.if.then863_crit_edge, label %if.end937, !dbg !3544

lor.lhs.false858.if.then863_crit_edge:            ; preds = %lor.lhs.false858
  %bf.load865.pre = load i64, i64* %71, align 8, !dbg !3545
  br label %if.then863, !dbg !3544

if.then863:                                       ; preds = %lor.lhs.false858.if.then863_crit_edge, %land.lhs.true851, %lor.lhs.false853, %land.lhs.true841
  %bf.load865 = phi i64 [ %bf.load865.pre, %lor.lhs.false858.if.then863_crit_edge ], [ %bf.load204, %land.lhs.true851 ], [ %bf.load204, %lor.lhs.false853 ], [ %bf.load204, %land.lhs.true841 ], !dbg !3545
  %bf.cast8679 = and i64 %bf.load865, 65535, !dbg !3545
  %cmp868 = icmp eq i64 %bf.cast8679, 16, !dbg !3545
  %cond870 = select i1 %cmp868, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0), !dbg !3545
  %call871 = call i64 @strlen(i8* %cond870) #6, !dbg !3545
  store i64 %call871, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3545
  %307 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3545
  %add.ptr872 = getelementptr inbounds i8, i8* %307, i64 %call871, !dbg !3545
  %308 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3545
  %cmp873 = icmp ugt i8* %add.ptr872, %308, !dbg !3545
  br i1 %cmp873, label %cond.true875, label %cond.end878, !dbg !3545

cond.true875:                                     ; preds = %if.then863
  %conv876 = trunc i64 %call871 to i32, !dbg !3545
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv876) #6, !dbg !3545
  %.pre75 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3545
  %.pre76 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3545
  br label %cond.end878, !dbg !3545

cond.end878:                                      ; preds = %if.then863, %cond.true875
  %309 = phi i64 [ %call871, %if.then863 ], [ %.pre76, %cond.true875 ], !dbg !3545
  %310 = phi i8* [ %307, %if.then863 ], [ %.pre75, %cond.true875 ], !dbg !3545
  %bf.load881 = load i64, i64* %71, align 8, !dbg !3545
  %bf.cast88310 = and i64 %bf.load881, 65535, !dbg !3545
  %cmp884 = icmp eq i64 %bf.cast88310, 16, !dbg !3545
  %cond886 = select i1 %cmp884, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0), !dbg !3545
  %call887 = call i8* @memcpy(i8* %310, i8* %cond886, i64 %309) #6, !dbg !3545
  %311 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3545
  %312 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3545
  %add.ptr888 = getelementptr inbounds i8, i8* %312, i64 %311, !dbg !3545
  store i8* %add.ptr888, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3545
  %313 = load %union.tree_node*, %union.tree_node** %301, align 8, !dbg !3547
  %cmp891 = icmp eq %union.tree_node* %313, null, !dbg !3549
  br i1 %cmp891, label %if.else908, label %land.lhs.true893, !dbg !3550

land.lhs.true893:                                 ; preds = %cond.end878
  %314 = getelementptr inbounds %union.tree_node, %union.tree_node* %313, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3550
  %bf.load897 = load i64, i64* %314, align 8, !dbg !3551
  %bf.cast89912 = and i64 %bf.load897, 65535, !dbg !3552
  %cmp900 = icmp eq i64 %bf.cast89912, 35, !dbg !3552
  br i1 %cmp900, label %lor.lhs.false902, label %if.then907, !dbg !3553

lor.lhs.false902:                                 ; preds = %land.lhs.true893
  %name905 = getelementptr inbounds %union.tree_node, %union.tree_node* %313, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3554
  %315 = load %union.tree_node*, %union.tree_node** %name905, align 8, !dbg !3554
  %tobool906 = icmp eq %union.tree_node* %315, null, !dbg !3554
  br i1 %tobool906, label %if.else908, label %if.then907, !dbg !3555

if.then907:                                       ; preds = %lor.lhs.false902, %land.lhs.true893
  call fastcc void @dbxout_type_name(%union.tree_node* %spec.select1) #8, !dbg !3556
  br label %if.end922, !dbg !3556

if.else908:                                       ; preds = %lor.lhs.false902, %cond.end878
  %call909 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !3557
  store i64 %call909, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3557
  %316 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3557
  %add.ptr910 = getelementptr inbounds i8, i8* %316, i64 %call909, !dbg !3557
  %317 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3557
  %cmp911 = icmp ugt i8* %add.ptr910, %317, !dbg !3557
  br i1 %cmp911, label %cond.true913, label %cond.end916, !dbg !3557

cond.true913:                                     ; preds = %if.else908
  %conv914 = trunc i64 %call909 to i32, !dbg !3557
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv914) #6, !dbg !3557
  %.pre77 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3557
  %.pre78 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3557
  br label %cond.end916, !dbg !3557

cond.end916:                                      ; preds = %if.else908, %cond.true913
  %318 = phi i64 [ %call909, %if.else908 ], [ %.pre78, %cond.true913 ], !dbg !3557
  %319 = phi i8* [ %316, %if.else908 ], [ %.pre77, %cond.true913 ], !dbg !3557
  %call918 = call i8* @memcpy(i8* %319, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i64 %318) #6, !dbg !3557
  %320 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3557
  %321 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3557
  %add.ptr919 = getelementptr inbounds i8, i8* %321, i64 %320, !dbg !3557
  store i8* %add.ptr919, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3557
  %322 = load i32, i32* @dbxout_type.anonymous_type_number, align 4, !dbg !3559
  %inc920 = add nsw i32 %322, 1, !dbg !3559
  store i32 %inc920, i32* @dbxout_type.anonymous_type_number, align 4, !dbg !3559
  %conv921 = sext i32 %322 to i64, !dbg !3560
  call fastcc void @stabstr_D(i64 %conv921) #8, !dbg !3561
  br label %if.end922

if.end922:                                        ; preds = %cond.end916, %if.then907
  %323 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3562
  %add.ptr923 = getelementptr inbounds i8, i8* %323, i64 1, !dbg !3562
  %324 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3562
  %cmp924 = icmp ugt i8* %add.ptr923, %324, !dbg !3562
  br i1 %cmp924, label %cond.true926, label %cond.end928, !dbg !3562

cond.true926:                                     ; preds = %if.end922
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3562
  %.pre79 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3562
  br label %cond.end928, !dbg !3562

cond.end928:                                      ; preds = %if.end922, %cond.true926
  %325 = phi i8* [ %323, %if.end922 ], [ %.pre79, %cond.true926 ], !dbg !3562
  %incdec.ptr930 = getelementptr inbounds i8, i8* %325, i64 1, !dbg !3562
  store i8* %incdec.ptr930, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3562
  store i8 58, i8* %325, align 1, !dbg !3562
  %326 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !3563
  %327 = load i32, i32* %address, align 8, !dbg !3564
  %idxprom934 = sext i32 %327 to i64, !dbg !3563
  %status936 = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %326, i64 %idxprom934, i32 0, !dbg !3565
  store i32 1, i32* %status936, align 4, !dbg !3566
  br label %cleanup, !dbg !3567

if.end937:                                        ; preds = %lor.lhs.false858
  %328 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3568
  %add.ptr938 = getelementptr inbounds i8, i8* %328, i64 1, !dbg !3568
  %329 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3568
  %cmp939 = icmp ugt i8* %add.ptr938, %329, !dbg !3568
  br i1 %cmp939, label %cond.true941, label %cond.end943, !dbg !3568

cond.true941:                                     ; preds = %if.end937
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3568
  %.pre63 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3568
  br label %cond.end943, !dbg !3568

cond.end943:                                      ; preds = %if.end937, %cond.true941
  %330 = phi i8* [ %328, %if.end937 ], [ %.pre63, %cond.true941 ], !dbg !3568
  %bf.load946 = load i64, i64* %71, align 8, !dbg !3568
  %bf.cast94813 = and i64 %bf.load946, 65535, !dbg !3568
  %cmp949 = icmp eq i64 %bf.cast94813, 16, !dbg !3568
  %conv952 = select i1 %cmp949, i8 115, i8 117, !dbg !3568
  %incdec.ptr953 = getelementptr inbounds i8, i8* %330, i64 1, !dbg !3568
  store i8* %incdec.ptr953, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3568
  store i8 %conv952, i8* %330, align 1, !dbg !3568
  %call954 = call i64 @int_size_in_bytes(%union.tree_node* %spec.select1) #6, !dbg !3569
  call fastcc void @stabstr_D(i64 %call954) #8, !dbg !3570
  %tobool955 = icmp eq %union.tree_node* %300, null, !dbg !3571
  br i1 %tobool955, label %cleanup, label %if.then956, !dbg !3572

if.then956:                                       ; preds = %cond.end943
  %331 = bitcast %union.tree_node** %child to i8*, !dbg !3573
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %331) #7, !dbg !3573
  %base_accesses = getelementptr inbounds %union.tree_node, %union.tree_node* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3574
  %332 = bitcast i40* %base_accesses to %struct.VEC_tree_gc**, !dbg !3574
  %333 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %332, align 8, !dbg !3574
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %333, metadata !1739, metadata !DIExpression()), !dbg !3575
  %334 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3576
  %tobool958 = icmp eq i8 %334, 0, !dbg !3576
  br i1 %tobool958, label %if.then956.if.end1001_crit_edge, label %if.then959, !dbg !3578

if.then956.if.end1001_crit_edge:                  ; preds = %if.then956
  br label %if.end1001, !dbg !3578

if.then959:                                       ; preds = %if.then956
  %base_binfos964 = getelementptr inbounds %union.tree_node, %union.tree_node* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !3579
  %base965 = bitcast %union.tree_node** %base_binfos964 to %struct.VEC_tree_base*, !dbg !3579
  %call969 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* nonnull %base965) #8, !dbg !3579
  %tobool970 = icmp eq i32 %call969, 0, !dbg !3579
  br i1 %tobool970, label %if.end1001, label %if.then971, !dbg !3582

if.then971:                                       ; preds = %if.then959
  %335 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3583
  %add.ptr972 = getelementptr inbounds i8, i8* %335, i64 1, !dbg !3583
  %336 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3583
  %cmp973 = icmp ugt i8* %add.ptr972, %336, !dbg !3583
  br i1 %cmp973, label %cond.true975, label %cond.end977, !dbg !3583

cond.true975:                                     ; preds = %if.then971
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3583
  %.pre64 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3583
  br label %cond.end977, !dbg !3583

cond.end977:                                      ; preds = %if.then971, %cond.true975
  %337 = phi i8* [ %335, %if.then971 ], [ %.pre64, %cond.true975 ], !dbg !3583
  %incdec.ptr979 = getelementptr inbounds i8, i8* %337, i64 1, !dbg !3583
  store i8* %incdec.ptr979, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3583
  store i8 33, i8* %337, align 1, !dbg !3583
  %call990 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* nonnull %base965) #8, !dbg !3585
  %conv991 = zext i32 %call990 to i64, !dbg !3585
  call fastcc void @stabstr_U(i64 %conv991) #8, !dbg !3586
  %338 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3587
  %add.ptr992 = getelementptr inbounds i8, i8* %338, i64 1, !dbg !3587
  %339 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3587
  %cmp993 = icmp ugt i8* %add.ptr992, %339, !dbg !3587
  br i1 %cmp993, label %cond.true995, label %cond.end997, !dbg !3587

cond.true995:                                     ; preds = %cond.end977
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3587
  %.pre65 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3587
  br label %cond.end997, !dbg !3587

cond.end997:                                      ; preds = %cond.end977, %cond.true995
  %340 = phi i8* [ %338, %cond.end977 ], [ %.pre65, %cond.true995 ], !dbg !3587
  %incdec.ptr999 = getelementptr inbounds i8, i8* %340, i64 1, !dbg !3587
  store i8* %incdec.ptr999, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3587
  store i8 44, i8* %340, align 1, !dbg !3587
  br label %if.end1001, !dbg !3588

if.end1001:                                       ; preds = %if.then956.if.end1001_crit_edge, %if.then959, %cond.end997
  call void @llvm.dbg.value(metadata i32 0, metadata !1735, metadata !DIExpression()), !dbg !3575
  %base_binfos1007 = getelementptr inbounds %union.tree_node, %union.tree_node* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !3589
  %base1008 = bitcast %union.tree_node** %base_binfos1007 to %struct.VEC_tree_base*, !dbg !3589
  %tobool1014 = icmp eq %struct.VEC_tree_gc* %333, null, !dbg !3590
  %base1018 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %333, i64 0, i32 0, !dbg !3590
  %341 = bitcast %union.tree_node** %child to i64**, !dbg !3591
  %342 = bitcast %union.tree_node** %child to %struct.tree_binfo**, !dbg !3594
  %343 = bitcast %union.tree_node** %child to %struct.tree_common**, !dbg !3591
  br label %for.cond, !dbg !3596

for.cond:                                         ; preds = %for.inc, %if.end1001
  %i.0 = phi i32 [ 0, %if.end1001 ], [ %inc1151, %for.inc ], !dbg !3597
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !1735, metadata !DIExpression()), !dbg !3575
  call void @llvm.dbg.value(metadata %union.tree_node** %child, metadata !1738, metadata !DIExpression(DW_OP_deref)), !dbg !3575
  %call1012 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* nonnull %base1008, i32 %i.0, %union.tree_node** nonnull %child) #8, !dbg !3598
  %tobool1013 = icmp eq i32 %call1012, 0, !dbg !3599
  br i1 %tobool1013, label %for.end, label %for.body, !dbg !3599

for.body:                                         ; preds = %for.cond
  br i1 %tobool1014, label %cond.false1023, label %cond.true1017, !dbg !3600

cond.true1017:                                    ; preds = %for.body
  %call1022 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* nonnull %base1018, i32 %i.0) #8, !dbg !3601
  br label %cond.end1024, !dbg !3600

cond.false1023:                                   ; preds = %for.body
  %344 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 22), align 16, !dbg !3602
  br label %cond.end1024, !dbg !3600

cond.end1024:                                     ; preds = %cond.false1023, %cond.true1017
  %cond1025 = phi %union.tree_node* [ %call1022, %cond.true1017 ], [ %344, %cond.false1023 ], !dbg !3600
  call void @llvm.dbg.value(metadata %union.tree_node* %cond1025, metadata !1740, metadata !DIExpression()), !dbg !3590
  %345 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3603
  %tobool1026 = icmp eq i8 %345, 0, !dbg !3603
  br i1 %tobool1026, label %if.else1103, label %if.then1027, !dbg !3604

if.then1027:                                      ; preds = %cond.end1024
  %346 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3605
  %add.ptr1028 = getelementptr inbounds i8, i8* %346, i64 1, !dbg !3605
  %347 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3605
  %cmp1029 = icmp ugt i8* %add.ptr1028, %347, !dbg !3605
  br i1 %cmp1029, label %cond.true1031, label %cond.end1033, !dbg !3605

cond.true1031:                                    ; preds = %if.then1027
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3605
  %.pre66 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3605
  br label %cond.end1033, !dbg !3605

cond.end1033:                                     ; preds = %if.then1027, %cond.true1031
  %348 = phi i8* [ %346, %if.then1027 ], [ %.pre66, %cond.true1031 ], !dbg !3605
  %349 = load i64*, i64** %341, align 8, !dbg !3605
  %bf.load1036 = load i64, i64* %349, align 8, !dbg !3605
  %bf.cast103914 = and i64 %bf.load1036, 67108864, !dbg !3605
  %tobool1040 = icmp eq i64 %bf.cast103914, 0, !dbg !3605
  %conv1042 = select i1 %tobool1040, i8 48, i8 49, !dbg !3605
  %incdec.ptr1043 = getelementptr inbounds i8, i8* %348, i64 1, !dbg !3605
  store i8* %incdec.ptr1043, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3605
  store i8 %conv1042, i8* %348, align 1, !dbg !3605
  %350 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3606
  %add.ptr1044 = getelementptr inbounds i8, i8* %350, i64 1, !dbg !3606
  %351 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3606
  %cmp1045 = icmp ugt i8* %add.ptr1044, %351, !dbg !3606
  br i1 %cmp1045, label %cond.true1047, label %cond.end1049, !dbg !3606

cond.true1047:                                    ; preds = %cond.end1033
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3606
  br label %cond.end1049, !dbg !3606

cond.end1049:                                     ; preds = %cond.end1033, %cond.true1047
  %352 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 22), align 16, !dbg !3606
  %cmp1051 = icmp eq %union.tree_node* %cond1025, %352, !dbg !3606
  br i1 %cmp1051, label %cond.end1058, label %cond.false1054, !dbg !3606

cond.false1054:                                   ; preds = %cond.end1049
  %353 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 23), align 8, !dbg !3606
  %cmp1055 = icmp eq %union.tree_node* %cond1025, %353, !dbg !3606
  %cond1057 = select i1 %cmp1055, i8 49, i8 48, !dbg !3606
  br label %cond.end1058, !dbg !3606

cond.end1058:                                     ; preds = %cond.end1049, %cond.false1054
  %cond1059 = phi i8 [ %cond1057, %cond.false1054 ], [ 50, %cond.end1049 ], !dbg !3606
  %354 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3606
  %incdec.ptr1061 = getelementptr inbounds i8, i8* %354, i64 1, !dbg !3606
  store i8* %incdec.ptr1061, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3606
  store i8 %cond1059, i8* %354, align 1, !dbg !3606
  %355 = load i64*, i64** %341, align 8, !dbg !3607
  %bf.load1063 = load i64, i64* %355, align 8, !dbg !3607
  %bf.cast106615 = and i64 %bf.load1063, 67108864, !dbg !3607
  %tobool1067 = icmp eq i64 %bf.cast106615, 0, !dbg !3607
  %356 = bitcast i64* %355 to %struct.tree_binfo*, !dbg !3608
  br i1 %tobool1067, label %if.else1080, label %land.lhs.true1068, !dbg !3608

land.lhs.true1068:                                ; preds = %cond.end1058
  %357 = load i8*, i8** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 0), align 8, !dbg !3609
  %call1069 = call i32 @strcmp(i8* %357, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !3610
  %cmp1070 = icmp eq i32 %call1069, 0, !dbg !3611
  br i1 %cmp1070, label %if.then1076, label %lor.lhs.false1072, !dbg !3612

lor.lhs.false1072:                                ; preds = %land.lhs.true1068
  %358 = load i8*, i8** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 0), align 8, !dbg !3613
  %call1073 = call i32 @strcmp(i8* %358, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !3614
  %cmp1074 = icmp eq i32 %call1073, 0, !dbg !3615
  br i1 %cmp1074, label %if.then1076, label %lor.lhs.false1072.if.else1080_crit_edge, !dbg !3616

lor.lhs.false1072.if.else1080_crit_edge:          ; preds = %lor.lhs.false1072
  %.pre67 = load %struct.tree_binfo*, %struct.tree_binfo** %342, align 8, !dbg !3617
  br label %if.else1080, !dbg !3616

if.then1076:                                      ; preds = %lor.lhs.false1072, %land.lhs.true1068
  %359 = load %struct.tree_binfo*, %struct.tree_binfo** %342, align 8, !dbg !3618
  %vptr_field = getelementptr inbounds %struct.tree_binfo, %struct.tree_binfo* %359, i64 0, i32 4, !dbg !3618
  %360 = load %union.tree_node*, %union.tree_node** %vptr_field, align 8, !dbg !3618
  %call1078 = call i64 @tree_low_cst(%union.tree_node* %360, i32 0) #6, !dbg !3619
  %mul1079 = shl nsw i64 %call1078, 3, !dbg !3620
  call fastcc void @stabstr_D(i64 %mul1079) #8, !dbg !3621
  br label %if.end1084, !dbg !3621

if.else1080:                                      ; preds = %lor.lhs.false1072.if.else1080_crit_edge, %cond.end1058
  %361 = phi %struct.tree_binfo* [ %.pre67, %lor.lhs.false1072.if.else1080_crit_edge ], [ %356, %cond.end1058 ], !dbg !3617
  %offset = getelementptr inbounds %struct.tree_binfo, %struct.tree_binfo* %361, i64 0, i32 1, !dbg !3617
  %362 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !3617
  %call1082 = call i64 @tree_low_cst(%union.tree_node* %362, i32 0) #6, !dbg !3622
  %mul1083 = shl nsw i64 %call1082, 3, !dbg !3623
  call fastcc void @stabstr_D(i64 %mul1083) #8, !dbg !3624
  br label %if.end1084

if.end1084:                                       ; preds = %if.else1080, %if.then1076
  %363 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3625
  %add.ptr1085 = getelementptr inbounds i8, i8* %363, i64 1, !dbg !3625
  %364 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3625
  %cmp1086 = icmp ugt i8* %add.ptr1085, %364, !dbg !3625
  br i1 %cmp1086, label %cond.true1088, label %cond.end1090, !dbg !3625

cond.true1088:                                    ; preds = %if.end1084
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3625
  %.pre68 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3625
  br label %cond.end1090, !dbg !3625

cond.end1090:                                     ; preds = %if.end1084, %cond.true1088
  %365 = phi i8* [ %363, %if.end1084 ], [ %.pre68, %cond.true1088 ], !dbg !3625
  %incdec.ptr1092 = getelementptr inbounds i8, i8* %365, i64 1, !dbg !3625
  store i8* %incdec.ptr1092, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3625
  store i8 44, i8* %365, align 1, !dbg !3625
  %366 = load %struct.tree_common*, %struct.tree_common** %343, align 8, !dbg !3626
  %type1094 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %366, i64 0, i32 2, !dbg !3626
  %367 = load %union.tree_node*, %union.tree_node** %type1094, align 8, !dbg !3626
  call fastcc void @dbxout_type(%union.tree_node* %367, i32 0) #8, !dbg !3627
  %368 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3628
  %add.ptr1095 = getelementptr inbounds i8, i8* %368, i64 1, !dbg !3628
  %369 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3628
  %cmp1096 = icmp ugt i8* %add.ptr1095, %369, !dbg !3628
  br i1 %cmp1096, label %cond.true1098, label %cond.end1100, !dbg !3628

cond.true1098:                                    ; preds = %cond.end1090
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3628
  %.pre69 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3628
  br label %cond.end1100, !dbg !3628

cond.end1100:                                     ; preds = %cond.end1090, %cond.true1098
  %370 = phi i8* [ %368, %cond.end1090 ], [ %.pre69, %cond.true1098 ], !dbg !3628
  %incdec.ptr1102 = getelementptr inbounds i8, i8* %370, i64 1, !dbg !3628
  store i8* %incdec.ptr1102, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3628
  store i8 59, i8* %370, align 1, !dbg !3628
  br label %for.inc, !dbg !3629

if.else1103:                                      ; preds = %cond.end1024
  %371 = load %struct.tree_common*, %struct.tree_common** %343, align 8, !dbg !3630
  %type1105 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %371, i64 0, i32 2, !dbg !3630
  %372 = load %union.tree_node*, %union.tree_node** %type1105, align 8, !dbg !3630
  call fastcc void @dbxout_type_name(%union.tree_node* %372) #8, !dbg !3632
  %373 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3633
  %add.ptr1106 = getelementptr inbounds i8, i8* %373, i64 1, !dbg !3633
  %374 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3633
  %cmp1107 = icmp ugt i8* %add.ptr1106, %374, !dbg !3633
  br i1 %cmp1107, label %cond.true1109, label %cond.end1111, !dbg !3633

cond.true1109:                                    ; preds = %if.else1103
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3633
  %.pre70 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3633
  br label %cond.end1111, !dbg !3633

cond.end1111:                                     ; preds = %if.else1103, %cond.true1109
  %375 = phi i8* [ %373, %if.else1103 ], [ %.pre70, %cond.true1109 ], !dbg !3633
  %incdec.ptr1113 = getelementptr inbounds i8, i8* %375, i64 1, !dbg !3633
  store i8* %incdec.ptr1113, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3633
  store i8 58, i8* %375, align 1, !dbg !3633
  %376 = load %struct.tree_common*, %struct.tree_common** %343, align 8, !dbg !3634
  %type1115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %376, i64 0, i32 2, !dbg !3634
  %377 = load %union.tree_node*, %union.tree_node** %type1115, align 8, !dbg !3634
  call fastcc void @dbxout_type(%union.tree_node* %377, i32 %full.addr.1) #8, !dbg !3635
  %378 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3636
  %add.ptr1116 = getelementptr inbounds i8, i8* %378, i64 1, !dbg !3636
  %379 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3636
  %cmp1117 = icmp ugt i8* %add.ptr1116, %379, !dbg !3636
  br i1 %cmp1117, label %cond.true1119, label %cond.end1121, !dbg !3636

cond.true1119:                                    ; preds = %cond.end1111
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3636
  %.pre71 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3636
  br label %cond.end1121, !dbg !3636

cond.end1121:                                     ; preds = %cond.end1111, %cond.true1119
  %380 = phi i8* [ %378, %cond.end1111 ], [ %.pre71, %cond.true1119 ], !dbg !3636
  %incdec.ptr1123 = getelementptr inbounds i8, i8* %380, i64 1, !dbg !3636
  store i8* %incdec.ptr1123, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3636
  store i8 44, i8* %380, align 1, !dbg !3636
  %381 = load %struct.tree_binfo*, %struct.tree_binfo** %342, align 8, !dbg !3637
  %offset1125 = getelementptr inbounds %struct.tree_binfo, %struct.tree_binfo* %381, i64 0, i32 1, !dbg !3637
  %382 = load %union.tree_node*, %union.tree_node** %offset1125, align 8, !dbg !3637
  %call1126 = call i64 @tree_low_cst(%union.tree_node* %382, i32 0) #6, !dbg !3638
  %mul1127 = shl nsw i64 %call1126, 3, !dbg !3639
  call fastcc void @stabstr_D(i64 %mul1127) #8, !dbg !3640
  %383 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3641
  %add.ptr1128 = getelementptr inbounds i8, i8* %383, i64 1, !dbg !3641
  %384 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3641
  %cmp1129 = icmp ugt i8* %add.ptr1128, %384, !dbg !3641
  br i1 %cmp1129, label %cond.true1131, label %cond.end1133, !dbg !3641

cond.true1131:                                    ; preds = %cond.end1121
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3641
  %.pre72 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3641
  br label %cond.end1133, !dbg !3641

cond.end1133:                                     ; preds = %cond.end1121, %cond.true1131
  %385 = phi i8* [ %383, %cond.end1121 ], [ %.pre72, %cond.true1131 ], !dbg !3641
  %incdec.ptr1135 = getelementptr inbounds i8, i8* %385, i64 1, !dbg !3641
  store i8* %incdec.ptr1135, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3641
  store i8 44, i8* %385, align 1, !dbg !3641
  %386 = load %struct.tree_common*, %struct.tree_common** %343, align 8, !dbg !3642
  %type1137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %386, i64 0, i32 2, !dbg !3642
  %387 = bitcast %union.tree_node** %type1137 to %struct.tree_type**, !dbg !3642
  %388 = load %struct.tree_type*, %struct.tree_type** %387, align 8, !dbg !3642
  %size1139 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %388, i64 0, i32 2, !dbg !3642
  %389 = load %union.tree_node*, %union.tree_node** %size1139, align 8, !dbg !3642
  %call1140 = call i64 @tree_low_cst(%union.tree_node* %389, i32 0) #6, !dbg !3643
  %mul1141 = shl nsw i64 %call1140, 3, !dbg !3644
  call fastcc void @stabstr_D(i64 %mul1141) #8, !dbg !3645
  %390 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3646
  %add.ptr1142 = getelementptr inbounds i8, i8* %390, i64 1, !dbg !3646
  %391 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3646
  %cmp1143 = icmp ugt i8* %add.ptr1142, %391, !dbg !3646
  br i1 %cmp1143, label %cond.true1145, label %cond.end1147, !dbg !3646

cond.true1145:                                    ; preds = %cond.end1133
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3646
  %.pre73 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3646
  br label %cond.end1147, !dbg !3646

cond.end1147:                                     ; preds = %cond.end1133, %cond.true1145
  %392 = phi i8* [ %390, %cond.end1133 ], [ %.pre73, %cond.true1145 ], !dbg !3646
  %incdec.ptr1149 = getelementptr inbounds i8, i8* %392, i64 1, !dbg !3646
  store i8* %incdec.ptr1149, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3646
  store i8 59, i8* %392, align 1, !dbg !3646
  br label %for.inc

for.inc:                                          ; preds = %cond.end1100, %cond.end1147
  %inc1151 = add nuw nsw i32 %i.0, 1, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %inc1151, metadata !1735, metadata !DIExpression()), !dbg !3575
  br label %for.cond, !dbg !3648, !llvm.loop !3649

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %331) #7, !dbg !3651
  br label %cleanup, !dbg !3652

cleanup:                                          ; preds = %cond.end943, %for.end, %cond.end928
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end928 ], [ true, %for.end ], [ true, %cond.end943 ]
  br i1 %cleanup.dest.slot.0, label %cleanup.cont, label %cleanup1511

cleanup.cont:                                     ; preds = %cleanup
  call fastcc void @dbxout_type_fields(%union.tree_node* %spec.select1) #8, !dbg !3653
  %393 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3654
  %tobool1154 = icmp eq i8 %393, 0, !dbg !3654
  br i1 %tobool1154, label %if.end1161, label %land.lhs.true1155, !dbg !3656

land.lhs.true1155:                                ; preds = %cleanup.cont
  %maxval1157 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3657
  %394 = bitcast %struct.rtx_def** %maxval1157 to %union.tree_node**, !dbg !3657
  %395 = load %union.tree_node*, %union.tree_node** %394, align 8, !dbg !3657
  %cmp1158 = icmp eq %union.tree_node* %395, null, !dbg !3658
  br i1 %cmp1158, label %if.end1161, label %if.then1160, !dbg !3659

if.then1160:                                      ; preds = %land.lhs.true1155
  call fastcc void @dbxout_type_methods(%union.tree_node* %spec.select1) #8, !dbg !3660
  br label %if.end1161, !dbg !3662

if.end1161:                                       ; preds = %land.lhs.true1155, %cleanup.cont, %if.then1160
  %396 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3663
  %add.ptr1162 = getelementptr inbounds i8, i8* %396, i64 1, !dbg !3663
  %397 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3663
  %cmp1163 = icmp ugt i8* %add.ptr1162, %397, !dbg !3663
  br i1 %cmp1163, label %cond.true1165, label %cond.end1167, !dbg !3663

cond.true1165:                                    ; preds = %if.end1161
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3663
  %.pre80 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3663
  br label %cond.end1167, !dbg !3663

cond.end1167:                                     ; preds = %if.end1161, %cond.true1165
  %398 = phi i8* [ %396, %if.end1161 ], [ %.pre80, %cond.true1165 ], !dbg !3663
  %incdec.ptr1169 = getelementptr inbounds i8, i8* %398, i64 1, !dbg !3663
  store i8* %incdec.ptr1169, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3663
  store i8 59, i8* %398, align 1, !dbg !3663
  %399 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3664
  %tobool1171 = icmp eq i8 %399, 0, !dbg !3664
  br i1 %tobool1171, label %cleanup1511, label %land.lhs.true1172, !dbg !3666

land.lhs.true1172:                                ; preds = %cond.end1167
  %bf.load1174 = load i64, i64* %71, align 8, !dbg !3667
  %bf.cast117611 = and i64 %bf.load1174, 65535, !dbg !3668
  %cmp1177 = icmp eq i64 %bf.cast117611, 16, !dbg !3668
  br i1 %cmp1177, label %land.lhs.true1179, label %cleanup1511, !dbg !3669

land.lhs.true1179:                                ; preds = %land.lhs.true1172
  %minval1181 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3670
  %400 = bitcast %struct.lang_decl** %minval1181 to %union.tree_node**, !dbg !3670
  %401 = load %union.tree_node*, %union.tree_node** %400, align 8, !dbg !3670
  %tobool1182 = icmp eq %union.tree_node* %401, null, !dbg !3670
  br i1 %tobool1182, label %cleanup1511, label %if.then1183, !dbg !3671

if.then1183:                                      ; preds = %land.lhs.true1179
  %call1184 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !3672
  store i64 %call1184, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3672
  %402 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3672
  %add.ptr1185 = getelementptr inbounds i8, i8* %402, i64 %call1184, !dbg !3672
  %403 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3672
  %cmp1186 = icmp ugt i8* %add.ptr1185, %403, !dbg !3672
  br i1 %cmp1186, label %cond.true1188, label %cond.end1191, !dbg !3672

cond.true1188:                                    ; preds = %if.then1183
  %conv1189 = trunc i64 %call1184 to i32, !dbg !3672
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv1189) #6, !dbg !3672
  %.pre81 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3672
  %.pre82 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3672
  br label %cond.end1191, !dbg !3672

cond.end1191:                                     ; preds = %if.then1183, %cond.true1188
  %404 = phi i64 [ %call1184, %if.then1183 ], [ %.pre82, %cond.true1188 ], !dbg !3672
  %405 = phi i8* [ %402, %if.then1183 ], [ %.pre81, %cond.true1188 ], !dbg !3672
  %call1193 = call i8* @memcpy(i8* %405, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i64 0, i64 0), i64 %404) #6, !dbg !3672
  %406 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3672
  %407 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3672
  %add.ptr1194 = getelementptr inbounds i8, i8* %407, i64 %406, !dbg !3672
  store i8* %add.ptr1194, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3672
  %408 = bitcast %struct.lang_decl** %minval1181 to %struct.tree_field_decl**, !dbg !3674
  %409 = load %struct.tree_field_decl*, %struct.tree_field_decl** %408, align 8, !dbg !3674
  %fcontext = getelementptr inbounds %struct.tree_field_decl, %struct.tree_field_decl* %409, i64 0, i32 5, !dbg !3674
  %410 = load %union.tree_node*, %union.tree_node** %fcontext, align 8, !dbg !3674
  call fastcc void @dbxout_type(%union.tree_node* %410, i32 0) #8, !dbg !3675
  %411 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3676
  %add.ptr1197 = getelementptr inbounds i8, i8* %411, i64 1, !dbg !3676
  %412 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3676
  %cmp1198 = icmp ugt i8* %add.ptr1197, %412, !dbg !3676
  br i1 %cmp1198, label %cond.true1200, label %cond.end1202, !dbg !3676

cond.true1200:                                    ; preds = %cond.end1191
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3676
  %.pre83 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3676
  br label %cond.end1202, !dbg !3676

cond.end1202:                                     ; preds = %cond.end1191, %cond.true1200
  %413 = phi i8* [ %411, %cond.end1191 ], [ %.pre83, %cond.true1200 ], !dbg !3676
  %incdec.ptr1204 = getelementptr inbounds i8, i8* %413, i64 1, !dbg !3676
  store i8* %incdec.ptr1204, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3676
  store i8 59, i8* %413, align 1, !dbg !3676
  br label %cleanup1511, !dbg !3677

sw.bb1206:                                        ; preds = %if.end326
  %414 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3678
  %415 = load %union.tree_node*, %union.tree_node** %414, align 8, !dbg !3678
  %cmp1209 = icmp eq %union.tree_node* %415, null, !dbg !3680
  br i1 %cmp1209, label %lor.lhs.false1232, label %land.lhs.true1211, !dbg !3681

land.lhs.true1211:                                ; preds = %sw.bb1206
  %416 = getelementptr inbounds %union.tree_node, %union.tree_node* %415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3681
  %bf.load1215 = load i64, i64* %416, align 8, !dbg !3682
  %bf.cast12177 = and i64 %bf.load1215, 65535, !dbg !3683
  %cmp1218 = icmp eq i64 %bf.cast12177, 35, !dbg !3683
  br i1 %cmp1218, label %land.lhs.true1220, label %land.lhs.true1230, !dbg !3684

land.lhs.true1220:                                ; preds = %land.lhs.true1211
  %ignored_flag1224 = getelementptr inbounds %union.tree_node, %union.tree_node* %415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3685
  %417 = bitcast i40* %ignored_flag1224 to i64*, !dbg !3685
  %bf.load1225 = load i64, i64* %417, align 8, !dbg !3685
  %bf.cast12288 = and i64 %bf.load1225, 1024, !dbg !3685
  %tobool1229 = icmp ne i64 %bf.cast12288, 0, !dbg !3685
  %tobool1231 = icmp ne i32 %full.addr.1, 0, !dbg !3686
  %or.cond3 = or i1 %tobool1229, %tobool1231, !dbg !3687
  br i1 %or.cond3, label %lor.lhs.false1232, label %if.then1237, !dbg !3687

land.lhs.true1230:                                ; preds = %land.lhs.true1211
  %tobool1231.old = icmp eq i32 %full.addr.1, 0, !dbg !3686
  br i1 %tobool1231.old, label %if.then1237, label %lor.lhs.false1232, !dbg !3688

lor.lhs.false1232:                                ; preds = %land.lhs.true1230, %sw.bb1206, %land.lhs.true1220
  %418 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3689
  %419 = load %union.tree_node*, %union.tree_node** %418, align 8, !dbg !3689
  %cmp1235 = icmp eq %union.tree_node* %419, null, !dbg !3689
  br i1 %cmp1235, label %if.then1237, label %if.end1263, !dbg !3690

if.then1237:                                      ; preds = %land.lhs.true1230, %lor.lhs.false1232, %land.lhs.true1220
  %call1238 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i64 0, i64 0)) #6, !dbg !3691
  store i64 %call1238, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3691
  %420 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3691
  %add.ptr1239 = getelementptr inbounds i8, i8* %420, i64 %call1238, !dbg !3691
  %421 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3691
  %cmp1240 = icmp ugt i8* %add.ptr1239, %421, !dbg !3691
  br i1 %cmp1240, label %cond.true1242, label %cond.end1245, !dbg !3691

cond.true1242:                                    ; preds = %if.then1237
  %conv1243 = trunc i64 %call1238 to i32, !dbg !3691
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv1243) #6, !dbg !3691
  %.pre60 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3691
  %.pre61 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3691
  br label %cond.end1245, !dbg !3691

cond.end1245:                                     ; preds = %if.then1237, %cond.true1242
  %422 = phi i64 [ %call1238, %if.then1237 ], [ %.pre61, %cond.true1242 ], !dbg !3691
  %423 = phi i8* [ %420, %if.then1237 ], [ %.pre60, %cond.true1242 ], !dbg !3691
  %call1247 = call i8* @memcpy(i8* %423, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i64 0, i64 0), i64 %422) #6, !dbg !3691
  %424 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3691
  %425 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3691
  %add.ptr1248 = getelementptr inbounds i8, i8* %425, i64 %424, !dbg !3691
  store i8* %add.ptr1248, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3691
  call fastcc void @dbxout_type_name(%union.tree_node* %spec.select1) #8, !dbg !3693
  %426 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !3694
  %427 = load i32, i32* %address, align 8, !dbg !3695
  %idxprom1252 = sext i32 %427 to i64, !dbg !3694
  %status1254 = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %426, i64 %idxprom1252, i32 0, !dbg !3696
  store i32 1, i32* %status1254, align 4, !dbg !3697
  %428 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3698
  %add.ptr1255 = getelementptr inbounds i8, i8* %428, i64 1, !dbg !3698
  %429 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3698
  %cmp1256 = icmp ugt i8* %add.ptr1255, %429, !dbg !3698
  br i1 %cmp1256, label %cond.true1258, label %cond.end1260, !dbg !3698

cond.true1258:                                    ; preds = %cond.end1245
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3698
  %.pre62 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3698
  br label %cond.end1260, !dbg !3698

cond.end1260:                                     ; preds = %cond.end1245, %cond.true1258
  %430 = phi i8* [ %428, %cond.end1245 ], [ %.pre62, %cond.true1258 ], !dbg !3698
  %incdec.ptr1262 = getelementptr inbounds i8, i8* %430, i64 1, !dbg !3698
  store i8* %incdec.ptr1262, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3698
  store i8 58, i8* %430, align 1, !dbg !3698
  br label %cleanup1511, !dbg !3699

if.end1263:                                       ; preds = %lor.lhs.false1232
  %431 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3700
  %tobool1265 = icmp eq i8 %431, 0, !dbg !3700
  br i1 %tobool1265, label %if.end1302, label %land.lhs.true1266, !dbg !3702

land.lhs.true1266:                                ; preds = %if.end1263
  %type1267 = bitcast %union.tree_node* %spec.select1 to %struct.tree_type*, !dbg !3703
  %precision1268 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1267, i64 0, i32 6, !dbg !3703
  %bf.load1269 = load i32, i32* %precision1268, align 4, !dbg !3703
  %432 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !3704
  %precision1272 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %432, i64 0, i32 6, !dbg !3704
  %bf.load1273 = load i32, i32* %precision1272, align 4, !dbg !3704
  %433 = xor i32 %bf.load1269, %bf.load1273, !dbg !3705
  %434 = and i32 %433, 1023, !dbg !3705
  %cmp1275 = icmp eq i32 %434, 0, !dbg !3705
  br i1 %cmp1275, label %if.end1302, label %if.then1277, !dbg !3706

if.then1277:                                      ; preds = %land.lhs.true1266
  %call1278 = call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !3707
  store i64 %call1278, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3707
  %435 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3707
  %add.ptr1279 = getelementptr inbounds i8, i8* %435, i64 %call1278, !dbg !3707
  %436 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3707
  %cmp1280 = icmp ugt i8* %add.ptr1279, %436, !dbg !3707
  br i1 %cmp1280, label %cond.true1282, label %cond.end1285, !dbg !3707

cond.true1282:                                    ; preds = %if.then1277
  %conv1283 = trunc i64 %call1278 to i32, !dbg !3707
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv1283) #6, !dbg !3707
  %.pre51 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3707
  %.pre52 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3707
  br label %cond.end1285, !dbg !3707

cond.end1285:                                     ; preds = %if.then1277, %cond.true1282
  %437 = phi i64 [ %call1278, %if.then1277 ], [ %.pre52, %cond.true1282 ], !dbg !3707
  %438 = phi i8* [ %435, %if.then1277 ], [ %.pre51, %cond.true1282 ], !dbg !3707
  %call1287 = call i8* @memcpy(i8* %438, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i64 %437) #6, !dbg !3707
  %439 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3707
  %440 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3707
  %add.ptr1288 = getelementptr inbounds i8, i8* %440, i64 %439, !dbg !3707
  store i8* %add.ptr1288, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3707
  %bf.load1291 = load i32, i32* %precision1268, align 4, !dbg !3709
  %bf.clear1292 = and i32 %bf.load1291, 1023, !dbg !3709
  %conv1293 = zext i32 %bf.clear1292 to i64, !dbg !3709
  call fastcc void @stabstr_D(i64 %conv1293) #8, !dbg !3710
  %441 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3711
  %add.ptr1294 = getelementptr inbounds i8, i8* %441, i64 1, !dbg !3711
  %442 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3711
  %cmp1295 = icmp ugt i8* %add.ptr1294, %442, !dbg !3711
  br i1 %cmp1295, label %cond.true1297, label %cond.end1299, !dbg !3711

cond.true1297:                                    ; preds = %cond.end1285
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3711
  %.pre53 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3711
  br label %cond.end1299, !dbg !3711

cond.end1299:                                     ; preds = %cond.end1285, %cond.true1297
  %443 = phi i8* [ %441, %cond.end1285 ], [ %.pre53, %cond.true1297 ], !dbg !3711
  %incdec.ptr1301 = getelementptr inbounds i8, i8* %443, i64 1, !dbg !3711
  store i8* %incdec.ptr1301, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3711
  store i8 59, i8* %443, align 1, !dbg !3711
  br label %if.end1302, !dbg !3712

if.end1302:                                       ; preds = %land.lhs.true1266, %if.end1263, %cond.end1299
  %444 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3713
  %add.ptr1303 = getelementptr inbounds i8, i8* %444, i64 1, !dbg !3713
  %445 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3713
  %cmp1304 = icmp ugt i8* %add.ptr1303, %445, !dbg !3713
  br i1 %cmp1304, label %cond.true1306, label %cond.end1308, !dbg !3713

cond.true1306:                                    ; preds = %if.end1302
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3713
  %.pre54 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3713
  br label %cond.end1308, !dbg !3713

cond.end1308:                                     ; preds = %if.end1302, %cond.true1306
  %446 = phi i8* [ %444, %if.end1302 ], [ %.pre54, %cond.true1306 ], !dbg !3713
  %incdec.ptr1310 = getelementptr inbounds i8, i8* %446, i64 1, !dbg !3713
  store i8* %incdec.ptr1310, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3713
  store i8 101, i8* %446, align 1, !dbg !3713
  %values1312 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3714
  %447 = bitcast i32* %values1312 to %union.tree_node**, !dbg !3714
  br label %for.cond1313, !dbg !3715

for.cond1313:                                     ; preds = %for.inc1391, %cond.end1308
  %tem.0.in = phi %union.tree_node** [ %447, %cond.end1308 ], [ %chain1386, %for.inc1391 ]
  %tem.0 = load %union.tree_node*, %union.tree_node** %tem.0.in, align 8, !dbg !3716
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.0, metadata !1721, metadata !DIExpression()), !dbg !3164
  %tobool1314 = icmp eq %union.tree_node* %tem.0, null, !dbg !3717
  br i1 %tobool1314, label %for.end1394, label %for.body1315, !dbg !3717

for.body1315:                                     ; preds = %for.cond1313
  %448 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3718
  %449 = load %union.tree_node*, %union.tree_node** %448, align 8, !dbg !3718
  call void @llvm.dbg.value(metadata %union.tree_node* %449, metadata !1744, metadata !DIExpression()), !dbg !3719
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3720
  %450 = bitcast i32* %purpose to %struct.tree_identifier**, !dbg !3720
  %451 = load %struct.tree_identifier*, %struct.tree_identifier** %450, align 8, !dbg !3720
  %len = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %451, i64 0, i32 1, i32 1, !dbg !3720
  %452 = load i32, i32* %len, align 8, !dbg !3720
  %conv1318 = zext i32 %452 to i64, !dbg !3720
  store i64 %conv1318, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3720
  %453 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3720
  %add.ptr1319 = getelementptr inbounds i8, i8* %453, i64 %conv1318, !dbg !3720
  %454 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3720
  %cmp1320 = icmp ugt i8* %add.ptr1319, %454, !dbg !3720
  br i1 %cmp1320, label %cond.true1322, label %cond.end1325, !dbg !3720

cond.true1322:                                    ; preds = %for.body1315
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %452) #6, !dbg !3720
  %.pre55 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3720
  %.pre56 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3720
  br label %cond.end1325, !dbg !3720

cond.end1325:                                     ; preds = %for.body1315, %cond.true1322
  %455 = phi i64 [ %conv1318, %for.body1315 ], [ %.pre56, %cond.true1322 ], !dbg !3720
  %456 = phi i8* [ %453, %for.body1315 ], [ %.pre55, %cond.true1322 ], !dbg !3720
  %457 = load %struct.tree_identifier*, %struct.tree_identifier** %450, align 8, !dbg !3720
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %457, i64 0, i32 1, i32 0, !dbg !3720
  %458 = load i8*, i8** %str, align 8, !dbg !3720
  %call1331 = call i8* @memcpy(i8* %456, i8* %458, i64 %455) #6, !dbg !3720
  %459 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3720
  %460 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3720
  %add.ptr1332 = getelementptr inbounds i8, i8* %460, i64 %459, !dbg !3720
  store i8* %add.ptr1332, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3720
  %add.ptr1333 = getelementptr inbounds i8, i8* %add.ptr1332, i64 1, !dbg !3721
  %461 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3721
  %cmp1334 = icmp ugt i8* %add.ptr1333, %461, !dbg !3721
  br i1 %cmp1334, label %cond.true1336, label %cond.end1338, !dbg !3721

cond.true1336:                                    ; preds = %cond.end1325
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3721
  %.pre57 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3721
  br label %cond.end1338, !dbg !3721

cond.end1338:                                     ; preds = %cond.end1325, %cond.true1336
  %462 = phi i8* [ %add.ptr1332, %cond.end1325 ], [ %.pre57, %cond.true1336 ], !dbg !3721
  %incdec.ptr1340 = getelementptr inbounds i8, i8* %462, i64 1, !dbg !3721
  store i8* %incdec.ptr1340, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3721
  store i8 58, i8* %462, align 1, !dbg !3721
  %463 = getelementptr inbounds %union.tree_node, %union.tree_node* %449, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3722
  %bf.load1342 = load i64, i64* %463, align 8, !dbg !3722
  %bf.cast13446 = and i64 %bf.load1342, 65535, !dbg !3724
  %cmp1345 = icmp eq i64 %bf.cast13446, 33, !dbg !3724
  br i1 %cmp1345, label %if.then1347, label %if.end1349, !dbg !3725

if.then1347:                                      ; preds = %cond.end1338
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %449, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3726
  %464 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3726
  call void @llvm.dbg.value(metadata %union.tree_node* %464, metadata !1744, metadata !DIExpression()), !dbg !3719
  br label %if.end1349, !dbg !3727

if.end1349:                                       ; preds = %if.then1347, %cond.end1338
  %value.0 = phi %union.tree_node* [ %464, %if.then1347 ], [ %449, %cond.end1338 ], !dbg !3719
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !1744, metadata !DIExpression()), !dbg !3719
  %int_cst1350 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3728
  %high1351 = getelementptr inbounds i32, i32* %int_cst1350, i64 2, !dbg !3728
  %465 = bitcast i32* %high1351 to i64*, !dbg !3728
  %466 = load i64, i64* %465, align 8, !dbg !3728
  %cmp1352 = icmp eq i64 %466, 0, !dbg !3730
  br i1 %cmp1352, label %if.then1354, label %if.else1358, !dbg !3731

if.then1354:                                      ; preds = %if.end1349
  %low1357 = bitcast i32* %int_cst1350 to i64*, !dbg !3732
  %467 = load i64, i64* %low1357, align 8, !dbg !3732
  call fastcc void @stabstr_D(i64 %467) #8, !dbg !3733
  br label %if.end1376, !dbg !3733

if.else1358:                                      ; preds = %if.end1349
  %cmp1362 = icmp eq i64 %466, -1, !dbg !3734
  br i1 %cmp1362, label %land.lhs.true1364, label %if.else1374, !dbg !3736

land.lhs.true1364:                                ; preds = %if.else1358
  %low1367 = bitcast i32* %int_cst1350 to i64*, !dbg !3737
  %468 = load i64, i64* %low1367, align 8, !dbg !3737
  %cmp1368 = icmp slt i64 %468, 0, !dbg !3738
  br i1 %cmp1368, label %if.then1370, label %if.else1374, !dbg !3739

if.then1370:                                      ; preds = %land.lhs.true1364
  call fastcc void @stabstr_D(i64 %468) #8, !dbg !3740
  br label %if.end1376, !dbg !3740

if.else1374:                                      ; preds = %land.lhs.true1364, %if.else1358
  call fastcc void @stabstr_O(%union.tree_node* %value.0) #8, !dbg !3741
  br label %if.end1376

if.end1376:                                       ; preds = %if.then1370, %if.else1374, %if.then1354
  %469 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3742
  %add.ptr1377 = getelementptr inbounds i8, i8* %469, i64 1, !dbg !3742
  %470 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3742
  %cmp1378 = icmp ugt i8* %add.ptr1377, %470, !dbg !3742
  br i1 %cmp1378, label %cond.true1380, label %cond.end1382, !dbg !3742

cond.true1380:                                    ; preds = %if.end1376
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3742
  %.pre58 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3742
  br label %cond.end1382, !dbg !3742

cond.end1382:                                     ; preds = %if.end1376, %cond.true1380
  %471 = phi i8* [ %469, %if.end1376 ], [ %.pre58, %cond.true1380 ], !dbg !3742
  %incdec.ptr1384 = getelementptr inbounds i8, i8* %471, i64 1, !dbg !3742
  store i8* %incdec.ptr1384, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3742
  store i8 44, i8* %471, align 1, !dbg !3742
  %chain1386 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3743
  %472 = load %union.tree_node*, %union.tree_node** %chain1386, align 8, !dbg !3743
  %cmp1387 = icmp eq %union.tree_node* %472, null, !dbg !3745
  br i1 %cmp1387, label %for.inc1391, label %if.then1389, !dbg !3746

if.then1389:                                      ; preds = %cond.end1382
  call fastcc void @stabstr_continue() #8, !dbg !3747
  br label %for.inc1391, !dbg !3747

for.inc1391:                                      ; preds = %cond.end1382, %if.then1389
  br label %for.cond1313, !dbg !3748, !llvm.loop !3749

for.end1394:                                      ; preds = %for.cond1313
  %473 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3751
  %add.ptr1395 = getelementptr inbounds i8, i8* %473, i64 1, !dbg !3751
  %474 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3751
  %cmp1396 = icmp ugt i8* %add.ptr1395, %474, !dbg !3751
  br i1 %cmp1396, label %cond.true1398, label %cond.end1400, !dbg !3751

cond.true1398:                                    ; preds = %for.end1394
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3751
  %.pre59 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3751
  br label %cond.end1400, !dbg !3751

cond.end1400:                                     ; preds = %for.end1394, %cond.true1398
  %475 = phi i8* [ %473, %for.end1394 ], [ %.pre59, %cond.true1398 ], !dbg !3751
  %incdec.ptr1402 = getelementptr inbounds i8, i8* %475, i64 1, !dbg !3751
  store i8* %incdec.ptr1402, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3751
  store i8 59, i8* %475, align 1, !dbg !3751
  br label %cleanup1511, !dbg !3752

sw.bb1403:                                        ; preds = %if.end326
  %476 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3753
  %add.ptr1404 = getelementptr inbounds i8, i8* %476, i64 1, !dbg !3753
  %477 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3753
  %cmp1405 = icmp ugt i8* %add.ptr1404, %477, !dbg !3753
  br i1 %cmp1405, label %cond.true1407, label %cond.end1409, !dbg !3753

cond.true1407:                                    ; preds = %sw.bb1403
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3753
  %.pre50 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3753
  br label %cond.end1409, !dbg !3753

cond.end1409:                                     ; preds = %sw.bb1403, %cond.true1407
  %478 = phi i8* [ %476, %sw.bb1403 ], [ %.pre50, %cond.true1407 ], !dbg !3753
  %incdec.ptr1411 = getelementptr inbounds i8, i8* %478, i64 1, !dbg !3753
  store i8* %incdec.ptr1411, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3753
  store i8 42, i8* %478, align 1, !dbg !3753
  %type1413 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3754
  %479 = load %union.tree_node*, %union.tree_node** %type1413, align 8, !dbg !3754
  call fastcc void @dbxout_type(%union.tree_node* %479, i32 0) #8, !dbg !3755
  br label %cleanup1511, !dbg !3756

sw.bb1414:                                        ; preds = %if.end326
  %480 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3757
  %tobool1415 = icmp eq i8 %480, 0, !dbg !3757
  br i1 %tobool1415, label %if.else1447, label %if.then1416, !dbg !3759

if.then1416:                                      ; preds = %sw.bb1414
  %481 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3760
  %add.ptr1417 = getelementptr inbounds i8, i8* %481, i64 1, !dbg !3760
  %482 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3760
  %cmp1418 = icmp ugt i8* %add.ptr1417, %482, !dbg !3760
  br i1 %cmp1418, label %cond.true1420, label %cond.end1422, !dbg !3760

cond.true1420:                                    ; preds = %if.then1416
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3760
  %.pre47 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3760
  br label %cond.end1422, !dbg !3760

cond.end1422:                                     ; preds = %if.then1416, %cond.true1420
  %483 = phi i8* [ %481, %if.then1416 ], [ %.pre47, %cond.true1420 ], !dbg !3760
  %incdec.ptr1424 = getelementptr inbounds i8, i8* %483, i64 1, !dbg !3760
  store i8* %incdec.ptr1424, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3760
  store i8 35, i8* %483, align 1, !dbg !3760
  %maxval1426 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3762
  %484 = bitcast %struct.rtx_def** %maxval1426 to %union.tree_node**, !dbg !3762
  %485 = load %union.tree_node*, %union.tree_node** %484, align 8, !dbg !3762
  call fastcc void @dbxout_type(%union.tree_node* %485, i32 0) #8, !dbg !3763
  %486 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3764
  %add.ptr1427 = getelementptr inbounds i8, i8* %486, i64 1, !dbg !3764
  %487 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3764
  %cmp1428 = icmp ugt i8* %add.ptr1427, %487, !dbg !3764
  br i1 %cmp1428, label %cond.true1430, label %cond.end1432, !dbg !3764

cond.true1430:                                    ; preds = %cond.end1422
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3764
  %.pre48 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3764
  br label %cond.end1432, !dbg !3764

cond.end1432:                                     ; preds = %cond.end1422, %cond.true1430
  %488 = phi i8* [ %486, %cond.end1422 ], [ %.pre48, %cond.true1430 ], !dbg !3764
  %incdec.ptr1434 = getelementptr inbounds i8, i8* %488, i64 1, !dbg !3764
  store i8* %incdec.ptr1434, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3764
  store i8 44, i8* %488, align 1, !dbg !3764
  %type1436 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3765
  %489 = load %union.tree_node*, %union.tree_node** %type1436, align 8, !dbg !3765
  call fastcc void @dbxout_type(%union.tree_node* %489, i32 0) #8, !dbg !3766
  %values1438 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3767
  %490 = bitcast i32* %values1438 to %union.tree_node**, !dbg !3767
  %491 = load %union.tree_node*, %union.tree_node** %490, align 8, !dbg !3767
  call fastcc void @dbxout_args(%union.tree_node* %491) #8, !dbg !3768
  %492 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3769
  %add.ptr1439 = getelementptr inbounds i8, i8* %492, i64 1, !dbg !3769
  %493 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3769
  %cmp1440 = icmp ugt i8* %add.ptr1439, %493, !dbg !3769
  br i1 %cmp1440, label %cond.true1442, label %cond.end1444, !dbg !3769

cond.true1442:                                    ; preds = %cond.end1432
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3769
  %.pre49 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3769
  br label %cond.end1444, !dbg !3769

cond.end1444:                                     ; preds = %cond.end1432, %cond.true1442
  %494 = phi i8* [ %492, %cond.end1432 ], [ %.pre49, %cond.true1442 ], !dbg !3769
  %incdec.ptr1446 = getelementptr inbounds i8, i8* %494, i64 1, !dbg !3769
  store i8* %incdec.ptr1446, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3769
  store i8 59, i8* %494, align 1, !dbg !3769
  br label %cleanup1511, !dbg !3770

if.else1447:                                      ; preds = %sw.bb1414
  %type1449 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3771
  %495 = load %union.tree_node*, %union.tree_node** %type1449, align 8, !dbg !3771
  call fastcc void @dbxout_type(%union.tree_node* %495, i32 0) #8, !dbg !3772
  br label %cleanup1511

sw.bb1451:                                        ; preds = %if.end326
  %496 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3773
  %tobool1452 = icmp eq i8 %496, 0, !dbg !3773
  br i1 %tobool1452, label %if.else1474, label %if.then1453, !dbg !3775

if.then1453:                                      ; preds = %sw.bb1451
  %497 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3776
  %add.ptr1454 = getelementptr inbounds i8, i8* %497, i64 1, !dbg !3776
  %498 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3776
  %cmp1455 = icmp ugt i8* %add.ptr1454, %498, !dbg !3776
  br i1 %cmp1455, label %cond.true1457, label %cond.end1459, !dbg !3776

cond.true1457:                                    ; preds = %if.then1453
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3776
  %.pre45 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3776
  br label %cond.end1459, !dbg !3776

cond.end1459:                                     ; preds = %if.then1453, %cond.true1457
  %499 = phi i8* [ %497, %if.then1453 ], [ %.pre45, %cond.true1457 ], !dbg !3776
  %incdec.ptr1461 = getelementptr inbounds i8, i8* %499, i64 1, !dbg !3776
  store i8* %incdec.ptr1461, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3776
  store i8 64, i8* %499, align 1, !dbg !3776
  %maxval1463 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3778
  %500 = bitcast %struct.rtx_def** %maxval1463 to %union.tree_node**, !dbg !3778
  %501 = load %union.tree_node*, %union.tree_node** %500, align 8, !dbg !3778
  call fastcc void @dbxout_type(%union.tree_node* %501, i32 0) #8, !dbg !3779
  %502 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3780
  %add.ptr1464 = getelementptr inbounds i8, i8* %502, i64 1, !dbg !3780
  %503 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3780
  %cmp1465 = icmp ugt i8* %add.ptr1464, %503, !dbg !3780
  br i1 %cmp1465, label %cond.true1467, label %cond.end1469, !dbg !3780

cond.true1467:                                    ; preds = %cond.end1459
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3780
  %.pre46 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3780
  br label %cond.end1469, !dbg !3780

cond.end1469:                                     ; preds = %cond.end1459, %cond.true1467
  %504 = phi i8* [ %502, %cond.end1459 ], [ %.pre46, %cond.true1467 ], !dbg !3780
  %incdec.ptr1471 = getelementptr inbounds i8, i8* %504, i64 1, !dbg !3780
  store i8* %incdec.ptr1471, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3780
  store i8 44, i8* %504, align 1, !dbg !3780
  %type1473 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3781
  %505 = load %union.tree_node*, %union.tree_node** %type1473, align 8, !dbg !3781
  call fastcc void @dbxout_type(%union.tree_node* %505, i32 0) #8, !dbg !3782
  br label %cleanup1511, !dbg !3783

if.else1474:                                      ; preds = %sw.bb1451
  %506 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !3784
  call fastcc void @dbxout_type(%union.tree_node* %506, i32 0) #8, !dbg !3785
  br label %cleanup1511

sw.bb1476:                                        ; preds = %if.end326
  %507 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3786
  %tobool1477 = icmp eq i8 %507, 0, !dbg !3786
  %508 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3788
  %add.ptr1479 = getelementptr inbounds i8, i8* %508, i64 1, !dbg !3788
  %509 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3788
  %cmp1480 = icmp ugt i8* %add.ptr1479, %509, !dbg !3788
  br i1 %tobool1477, label %if.else1487, label %if.then1478, !dbg !3789

if.then1478:                                      ; preds = %sw.bb1476
  br i1 %cmp1480, label %cond.true1482, label %cond.end1484, !dbg !3790

cond.true1482:                                    ; preds = %if.then1478
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3790
  %.pre43 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3790
  br label %cond.end1484, !dbg !3790

cond.end1484:                                     ; preds = %if.then1478, %cond.true1482
  %510 = phi i8* [ %508, %if.then1478 ], [ %.pre43, %cond.true1482 ], !dbg !3790
  %incdec.ptr1486 = getelementptr inbounds i8, i8* %510, i64 1, !dbg !3790
  store i8* %incdec.ptr1486, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3790
  store i8 38, i8* %510, align 1, !dbg !3790
  br label %if.end1496, !dbg !3792

if.else1487:                                      ; preds = %sw.bb1476
  br i1 %cmp1480, label %cond.true1491, label %cond.end1493, !dbg !3793

cond.true1491:                                    ; preds = %if.else1487
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3793
  %.pre44 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3793
  br label %cond.end1493, !dbg !3793

cond.end1493:                                     ; preds = %if.else1487, %cond.true1491
  %511 = phi i8* [ %508, %if.else1487 ], [ %.pre44, %cond.true1491 ], !dbg !3793
  %incdec.ptr1495 = getelementptr inbounds i8, i8* %511, i64 1, !dbg !3793
  store i8* %incdec.ptr1495, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3793
  store i8 42, i8* %511, align 1, !dbg !3793
  br label %if.end1496

if.end1496:                                       ; preds = %cond.end1493, %cond.end1484
  %type1498 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3794
  %512 = load %union.tree_node*, %union.tree_node** %type1498, align 8, !dbg !3794
  call fastcc void @dbxout_type(%union.tree_node* %512, i32 0) #8, !dbg !3795
  br label %cleanup1511, !dbg !3796

sw.bb1499:                                        ; preds = %if.end326
  %513 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3797
  %add.ptr1500 = getelementptr inbounds i8, i8* %513, i64 1, !dbg !3797
  %514 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3797
  %cmp1501 = icmp ugt i8* %add.ptr1500, %514, !dbg !3797
  br i1 %cmp1501, label %cond.true1503, label %cond.end1505, !dbg !3797

cond.true1503:                                    ; preds = %sw.bb1499
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3797
  %.pre42 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3797
  br label %cond.end1505, !dbg !3797

cond.end1505:                                     ; preds = %sw.bb1499, %cond.true1503
  %515 = phi i8* [ %513, %sw.bb1499 ], [ %.pre42, %cond.true1503 ], !dbg !3797
  %incdec.ptr1507 = getelementptr inbounds i8, i8* %515, i64 1, !dbg !3797
  store i8* %incdec.ptr1507, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3797
  store i8 102, i8* %515, align 1, !dbg !3797
  %type1509 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3798
  %516 = load %union.tree_node*, %union.tree_node** %type1509, align 8, !dbg !3798
  call fastcc void @dbxout_type(%union.tree_node* %516, i32 0) #8, !dbg !3799
  br label %cleanup1511, !dbg !3800

sw.default:                                       ; preds = %if.end326
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i32 2280, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3801
  br label %cleanup1511, !dbg !3802

cleanup1511:                                      ; preds = %land.lhs.true1179, %cond.end1167, %lor.lhs.false186, %lor.lhs.false182, %sw.bb, %sw.bb331, %cond.end528, %cond.end736, %if.end822, %cond.end1400, %cond.end1409, %if.end1496, %cond.end1505, %sw.default, %if.end414, %if.else499, %cond.end496, %cond.end358, %cond.end567, %cond.end555, %cond.end699, %cond.end604, %cleanup, %cond.end1202, %land.lhs.true1172, %if.else1447, %cond.end1444, %if.else1474, %cond.end1469, %if.end175, %cond.end1260, %if.end319, %cond.end251, %cond.end221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3803
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3803
  ret void, !dbg !3803
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_finish_complex_stabs(%union.tree_node* %sym, i32 %code, %struct.rtx_def* %addr, i8* %label, i32 %number) unnamed_addr #5 !dbg !3804 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %sym, metadata !3810, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %code, metadata !3811, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !3812, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8* null, metadata !3813, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %number, metadata !3814, metadata !DIExpression()), !dbg !3822
  %tobool = icmp eq %union.tree_node* %sym, null, !dbg !3823
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3823

cond.true:                                        ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %sym, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3824
  %0 = load i32, i32* %locus, align 8, !dbg !3824
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %0) #6, !dbg !3824
  %line1 = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 1, !dbg !3824
  %1 = load i32, i32* %line1, align 8, !dbg !3824
  br label %cond.end, !dbg !3823

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 0, %entry ], !dbg !3823
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3815, metadata !DIExpression()), !dbg !3822
  store i64 2, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3825
  %2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3825
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 2, !dbg !3825
  %3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3825
  %cmp = icmp ugt i8* %add.ptr, %3, !dbg !3825
  br i1 %cmp, label %cond.true2, label %cond.end4, !dbg !3825

cond.true2:                                       ; preds = %cond.end
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 2) #6, !dbg !3825
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3825
  %.pre3 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3825
  br label %cond.end4, !dbg !3825

cond.end4:                                        ; preds = %cond.end, %cond.true2
  %4 = phi i64 [ 2, %cond.end ], [ %.pre3, %cond.true2 ], !dbg !3825
  %5 = phi i8* [ %2, %cond.end ], [ %.pre, %cond.true2 ], !dbg !3825
  %call = call i8* @memcpy(i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i64 %4) #6, !dbg !3825
  %6 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3825
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3825
  %add.ptr6 = getelementptr inbounds i8, i8* %7, i64 %6, !dbg !3825
  store i8* %add.ptr6, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3825
  %.cast = ptrtoint i8* %add.ptr6 to i64, !dbg !3826
  %8 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 2) to i64*), align 8, !dbg !3826
  %sub.ptr.sub = sub i64 %.cast, %8, !dbg !3826
  %conv8 = and i64 %sub.ptr.sub, 4294967295, !dbg !3826
  call void @llvm.dbg.value(metadata i64 %conv8, metadata !3817, metadata !DIExpression()), !dbg !3822
  %.cast1 = inttoptr i64 %8 to i8*, !dbg !3827
  %cmp9 = icmp eq i8* %add.ptr6, %.cast1, !dbg !3827
  br i1 %cmp9, label %cond.true11, label %cond.end13, !dbg !3827

cond.true11:                                      ; preds = %cond.end4
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 10), align 8, !dbg !3827
  %bf.set = or i8 %bf.load, 2, !dbg !3827
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 10), align 8, !dbg !3827
  br label %cond.end13, !dbg !3827

cond.end13:                                       ; preds = %cond.end4, %cond.true11
  store i64 %8, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3827
  %9 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 6), align 8, !dbg !3827
  %conv19 = sext i32 %9 to i64, !dbg !3827
  %add = add nsw i64 %.cast, %conv19, !dbg !3827
  %neg = xor i32 %9, -1, !dbg !3827
  %conv20 = sext i32 %neg to i64, !dbg !3827
  %and = and i64 %add, %conv20, !dbg !3827
  %10 = inttoptr i64 %and to i8*, !dbg !3827
  store i8* %10, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3827
  %11 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 1) to i64*), align 8, !dbg !3827
  %sub.ptr.sub23 = sub i64 %and, %11, !dbg !3827
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4) to i64*), align 8, !dbg !3827
  %sub.ptr.sub26 = sub i64 %12, %11, !dbg !3827
  %cmp27 = icmp sgt i64 %sub.ptr.sub23, %sub.ptr.sub26, !dbg !3827
  br i1 %cmp27, label %cond.true29, label %cond.end31, !dbg !3827

cond.true29:                                      ; preds = %cond.end13
  store i64 %12, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3) to i64*), align 8, !dbg !3827
  br label %cond.end31, !dbg !3827

cond.end31:                                       ; preds = %cond.end13, %cond.true29
  %13 = phi i64 [ %and, %cond.end13 ], [ %12, %cond.true29 ], !dbg !3827
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 2) to i64*), align 8, !dbg !3827
  call void @llvm.dbg.value(metadata i8* %.cast1, metadata !3816, metadata !DIExpression()), !dbg !3822
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3828
  %call33 = call i64 @fwrite(i8* %.cast1, i64 1, i64 %conv8, %struct._IO_FILE* %14) #6, !dbg !3829
  %15 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !3830
  %tobool35 = icmp eq i8 %15, 0, !dbg !3830
  %cond39 = select i1 %tobool35, i32 0, i32 %cond, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %cond39, metadata !3818, metadata !DIExpression()), !dbg !3831
  call void @dbxout_int(i32 %code) #8, !dbg !3830
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3830
  %call40 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), %struct._IO_FILE* %16) #6, !dbg !3830
  call void @dbxout_int(i32 %cond39) #8, !dbg !3830
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3830
  %call41 = call i32 @putc(i32 44, %struct._IO_FILE* %17) #6, !dbg !3830
  %tobool42 = icmp eq %struct.rtx_def* %addr, null, !dbg !3832
  br i1 %tobool42, label %if.else, label %if.then, !dbg !3830

if.then:                                          ; preds = %cond.end31
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3832
  call void @output_addr_const(%struct._IO_FILE* %18, %struct.rtx_def* nonnull %addr) #6, !dbg !3832
  br label %if.end46, !dbg !3832

if.else:                                          ; preds = %cond.end31
  call void @dbxout_int(i32 %number) #8, !dbg !3834
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3830
  %call47 = call i32 @putc(i32 10, %struct._IO_FILE* %19) #6, !dbg !3830
  %20 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 1) to i64*), align 8, !dbg !3836
  %sub.ptr.sub50 = sub i64 %8, %20, !dbg !3836
  store i64 %sub.ptr.sub50, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3836
  %cmp51 = icmp sgt i64 %sub.ptr.sub50, 0, !dbg !3836
  %21 = inttoptr i64 %20 to i8*, !dbg !3836
  br i1 %cmp51, label %land.lhs.true, label %cond.false60, !dbg !3836

land.lhs.true:                                    ; preds = %if.end46
  %22 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4) to i64*), align 8, !dbg !3836
  %sub.ptr.sub55 = sub i64 %22, %20, !dbg !3836
  %cmp56 = icmp slt i64 %sub.ptr.sub50, %sub.ptr.sub55, !dbg !3836
  br i1 %cmp56, label %cond.true58, label %cond.false60, !dbg !3836

cond.true58:                                      ; preds = %land.lhs.true
  %add.ptr59 = getelementptr inbounds i8, i8* %21, i64 %sub.ptr.sub50, !dbg !3836
  store i8* %add.ptr59, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 2), align 8, !dbg !3836
  store i8* %add.ptr59, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3836
  br label %cond.end62, !dbg !3836

cond.false60:                                     ; preds = %land.lhs.true, %if.end46
  %add.ptr61 = getelementptr inbounds i8, i8* %21, i64 %sub.ptr.sub50, !dbg !3836
  call void @obstack_free(%struct.obstack* nonnull @stabstr_ob, i8* %add.ptr61) #6, !dbg !3836
  br label %cond.end62, !dbg !3836

cond.end62:                                       ; preds = %cond.false60, %cond.true58
  ret void, !dbg !3837
}

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_class_name_qualifiers(%union.tree_node* %decl) unnamed_addr #5 !dbg !3838 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3840, metadata !DIExpression()), !dbg !3845
  %call = tail call %union.tree_node* @decl_type_context(%union.tree_node* %decl) #6, !dbg !3846
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3841, metadata !DIExpression()), !dbg !3845
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !3847
  br i1 %cmp, label %if.end45, label %land.lhs.true, !dbg !3848

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3849
  %bf.load = load i64, i64* %0, align 8, !dbg !3849
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3850
  %cmp1 = icmp eq i64 %bf.cast1, 16, !dbg !3850
  br i1 %cmp1, label %land.lhs.true2, label %if.end45, !dbg !3851

land.lhs.true2:                                   ; preds = %land.lhs.true
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3852
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3852
  %cmp3 = icmp eq %union.tree_node* %2, null, !dbg !3853
  br i1 %cmp3, label %if.end45, label %land.lhs.true4, !dbg !3854

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3854
  %bf.load8 = load i64, i64* %3, align 8, !dbg !3855
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !3856
  %cmp11 = icmp eq i64 %bf.cast102, 1, !dbg !3856
  br i1 %cmp11, label %if.then, label %lor.lhs.false, !dbg !3857

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %name14 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3858
  %4 = load %union.tree_node*, %union.tree_node** %name14, align 8, !dbg !3858
  %cmp15 = icmp eq %union.tree_node* %4, null, !dbg !3859
  br i1 %cmp15, label %if.end45, label %if.then, !dbg !3860

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true4
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3842, metadata !DIExpression()), !dbg !3861
  %cmp23 = icmp eq i64 %bf.cast102, 35, !dbg !3862
  br i1 %cmp23, label %if.then24, label %if.end, !dbg !3864

if.then24:                                        ; preds = %if.then
  tail call fastcc void @dbxout_class_name_qualifiers(%union.tree_node* nonnull %2) #8, !dbg !3865
  %name26 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3867
  %5 = load %union.tree_node*, %union.tree_node** %name26, align 8, !dbg !3867
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3842, metadata !DIExpression()), !dbg !3861
  br label %if.end, !dbg !3868

if.end:                                           ; preds = %if.then24, %if.then
  %name16.0 = phi %union.tree_node* [ %5, %if.then24 ], [ %2, %if.then ], !dbg !3861
  call void @llvm.dbg.value(metadata %union.tree_node* %name16.0, metadata !3842, metadata !DIExpression()), !dbg !3861
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %name16.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3869
  %6 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !3869
  %7 = load i32, i32* %6, align 8, !dbg !3869
  %conv = zext i32 %7 to i64, !dbg !3869
  store i64 %conv, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3869
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3869
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %conv, !dbg !3869
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3869
  %cmp27 = icmp ugt i8* %add.ptr, %9, !dbg !3869
  br i1 %cmp27, label %cond.true, label %cond.end, !dbg !3869

cond.true:                                        ; preds = %if.end
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %7) #6, !dbg !3869
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3869
  %.pre4 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3869
  br label %cond.end, !dbg !3869

cond.end:                                         ; preds = %if.end, %cond.true
  %10 = phi i64 [ %conv, %if.end ], [ %.pre4, %cond.true ], !dbg !3869
  %11 = phi i8* [ %8, %if.end ], [ %.pre, %cond.true ], !dbg !3869
  %str = bitcast i32* %id to i8**, !dbg !3869
  %12 = load i8*, i8** %str, align 8, !dbg !3869
  %call32 = tail call i8* @memcpy(i8* %11, i8* %12, i64 %10) #6, !dbg !3869
  %13 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3869
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3869
  %add.ptr33 = getelementptr inbounds i8, i8* %14, i64 %13, !dbg !3869
  store i8* %add.ptr33, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3869
  %call34 = tail call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0)) #6, !dbg !3870
  store i64 %call34, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3870
  %15 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3870
  %add.ptr35 = getelementptr inbounds i8, i8* %15, i64 %call34, !dbg !3870
  %16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3870
  %cmp36 = icmp ugt i8* %add.ptr35, %16, !dbg !3870
  br i1 %cmp36, label %cond.true38, label %cond.end41, !dbg !3870

cond.true38:                                      ; preds = %cond.end
  %conv39 = trunc i64 %call34 to i32, !dbg !3870
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv39) #6, !dbg !3870
  %.pre5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3870
  %.pre6 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3870
  br label %cond.end41, !dbg !3870

cond.end41:                                       ; preds = %cond.end, %cond.true38
  %17 = phi i64 [ %call34, %cond.end ], [ %.pre6, %cond.true38 ], !dbg !3870
  %18 = phi i8* [ %15, %cond.end ], [ %.pre5, %cond.true38 ], !dbg !3870
  %call43 = tail call i8* @memcpy(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0), i64 %17) #6, !dbg !3870
  %19 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3870
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3870
  %add.ptr44 = getelementptr inbounds i8, i8* %20, i64 %19, !dbg !3870
  store i8* %add.ptr44, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3870
  br label %if.end45, !dbg !3871

if.end45:                                         ; preds = %lor.lhs.false, %land.lhs.true2, %entry, %cond.end41, %land.lhs.true
  ret void, !dbg !3872
}

declare dso_local %union.tree_node* @decl_value_expr_lookup(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_symbol_name(%union.tree_node* %decl, i8* %suffix, i32 %letter) unnamed_addr #5 !dbg !3873 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3877, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %suffix, metadata !3878, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %letter, metadata !3879, metadata !DIExpression()), !dbg !3881
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3882
  %0 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3882
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !3882
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3884

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3884
  %bf.load = load i64, i64* %1, align 8, !dbg !3885
  %bf.cast = and i64 %bf.load, 65535, !dbg !3885
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3885
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3885
  %cmp = icmp eq i32 %2, 2, !dbg !3885
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3886

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp9 = icmp eq i64 %bf.cast, 38, !dbg !3887
  br i1 %cmp9, label %if.then, label %if.else, !dbg !3888

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3880, metadata !DIExpression()), !dbg !3881
  br label %if.end, !dbg !3890

if.else:                                          ; preds = %entry, %lor.lhs.false
  %name11 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3891
  %3 = load %union.tree_node*, %union.tree_node** %name11, align 8, !dbg !3891
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3880, metadata !DIExpression()), !dbg !3881
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %name.0 = phi %union.tree_node* [ %call, %if.then ], [ %3, %if.else ], !dbg !3892
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0, metadata !3880, metadata !DIExpression()), !dbg !3881
  %tobool12 = icmp eq %union.tree_node* %name.0, null, !dbg !3893
  br i1 %tobool12, label %if.else21, label %if.then13, !dbg !3895

if.then13:                                        ; preds = %if.end
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %name.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3896
  %4 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !3896
  %5 = load i32, i32* %4, align 8, !dbg !3896
  %conv = zext i32 %5 to i64, !dbg !3896
  store i64 %conv, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3896
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3896
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %conv, !dbg !3896
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3896
  %cmp14 = icmp ugt i8* %add.ptr, %7, !dbg !3896
  br i1 %cmp14, label %cond.true, label %cond.end, !dbg !3896

cond.true:                                        ; preds = %if.then13
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %5) #6, !dbg !3896
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3896
  %.pre2 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3896
  br label %cond.end, !dbg !3896

cond.end:                                         ; preds = %if.then13, %cond.true
  %8 = phi i64 [ %conv, %if.then13 ], [ %.pre2, %cond.true ], !dbg !3896
  %9 = phi i8* [ %6, %if.then13 ], [ %.pre, %cond.true ], !dbg !3896
  %str = bitcast i32* %id to i8**, !dbg !3896
  %10 = load i8*, i8** %str, align 8, !dbg !3896
  %call19 = tail call i8* @memcpy(i8* %9, i8* %10, i64 %8) #6, !dbg !3896
  %11 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3896
  %12 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3896
  %add.ptr20 = getelementptr inbounds i8, i8* %12, i64 %11, !dbg !3896
  br label %if.end33, !dbg !3896

if.else21:                                        ; preds = %if.end
  %call22 = tail call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !3897
  store i64 %call22, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3897
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3897
  %add.ptr23 = getelementptr inbounds i8, i8* %13, i64 %call22, !dbg !3897
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3897
  %cmp24 = icmp ugt i8* %add.ptr23, %14, !dbg !3897
  br i1 %cmp24, label %cond.true26, label %cond.end29, !dbg !3897

cond.true26:                                      ; preds = %if.else21
  %conv27 = trunc i64 %call22 to i32, !dbg !3897
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv27) #6, !dbg !3897
  %.pre3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3897
  %.pre4 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3897
  br label %cond.end29, !dbg !3897

cond.end29:                                       ; preds = %if.else21, %cond.true26
  %15 = phi i64 [ %call22, %if.else21 ], [ %.pre4, %cond.true26 ], !dbg !3897
  %16 = phi i8* [ %13, %if.else21 ], [ %.pre3, %cond.true26 ], !dbg !3897
  %call31 = tail call i8* @memcpy(i8* %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0), i64 %15) #6, !dbg !3897
  %17 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3897
  %18 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3897
  %add.ptr32 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !3897
  br label %if.end33

if.end33:                                         ; preds = %cond.end29, %cond.end
  %storemerge = phi i8* [ %add.ptr32, %cond.end29 ], [ %add.ptr20, %cond.end ], !dbg !3898
  store i8* %storemerge, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3898
  %tobool34 = icmp eq i8* %suffix, null, !dbg !3899
  br i1 %tobool34, label %if.end47, label %if.then35, !dbg !3901

if.then35:                                        ; preds = %if.end33
  %call36 = tail call i64 @strlen(i8* nonnull %suffix) #6, !dbg !3902
  store i64 %call36, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3902
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3902
  %add.ptr37 = getelementptr inbounds i8, i8* %19, i64 %call36, !dbg !3902
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3902
  %cmp38 = icmp ugt i8* %add.ptr37, %20, !dbg !3902
  br i1 %cmp38, label %cond.true40, label %cond.end43, !dbg !3902

cond.true40:                                      ; preds = %if.then35
  %conv41 = trunc i64 %call36 to i32, !dbg !3902
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv41) #6, !dbg !3902
  %.pre5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3902
  %.pre6 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3902
  br label %cond.end43, !dbg !3902

cond.end43:                                       ; preds = %if.then35, %cond.true40
  %21 = phi i64 [ %call36, %if.then35 ], [ %.pre6, %cond.true40 ], !dbg !3902
  %22 = phi i8* [ %19, %if.then35 ], [ %.pre5, %cond.true40 ], !dbg !3902
  %call45 = tail call i8* @memcpy(i8* %22, i8* nonnull %suffix, i64 %21) #6, !dbg !3902
  %23 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3902
  %24 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3902
  %add.ptr46 = getelementptr inbounds i8, i8* %24, i64 %23, !dbg !3902
  store i8* %add.ptr46, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3902
  br label %if.end47, !dbg !3902

if.end47:                                         ; preds = %if.end33, %cond.end43
  %25 = phi i8* [ %storemerge, %if.end33 ], [ %add.ptr46, %cond.end43 ], !dbg !3903
  %add.ptr48 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !3903
  %26 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3903
  %cmp49 = icmp ugt i8* %add.ptr48, %26, !dbg !3903
  br i1 %cmp49, label %cond.true51, label %cond.end53, !dbg !3903

cond.true51:                                      ; preds = %if.end47
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3903
  %.pre7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3903
  br label %cond.end53, !dbg !3903

cond.end53:                                       ; preds = %if.end47, %cond.true51
  %27 = phi i8* [ %25, %if.end47 ], [ %.pre7, %cond.true51 ], !dbg !3903
  %incdec.ptr = getelementptr inbounds i8, i8* %27, i64 1, !dbg !3903
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3903
  store i8 58, i8* %27, align 1, !dbg !3903
  %tobool55 = icmp eq i32 %letter, 0, !dbg !3904
  br i1 %tobool55, label %if.end66, label %if.then56, !dbg !3906

if.then56:                                        ; preds = %cond.end53
  %28 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3907
  %add.ptr57 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !3907
  %29 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3907
  %cmp58 = icmp ugt i8* %add.ptr57, %29, !dbg !3907
  br i1 %cmp58, label %cond.true60, label %cond.end62, !dbg !3907

cond.true60:                                      ; preds = %if.then56
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3907
  %.pre8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3907
  br label %cond.end62, !dbg !3907

cond.end62:                                       ; preds = %if.then56, %cond.true60
  %30 = phi i8* [ %28, %if.then56 ], [ %.pre8, %cond.true60 ], !dbg !3907
  %conv64 = trunc i32 %letter to i8, !dbg !3907
  %incdec.ptr65 = getelementptr inbounds i8, i8* %30, i64 1, !dbg !3907
  store i8* %incdec.ptr65, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3907
  store i8 %conv64, i8* %30, align 1, !dbg !3907
  br label %if.end66, !dbg !3907

if.end66:                                         ; preds = %cond.end53, %cond.end62
  ret void, !dbg !3908
}

; Function Attrs: nounwind uwtable
define internal fastcc void @stabstr_D(i64 %num) unnamed_addr #5 !dbg !3909 {
entry:
  %buf = alloca [64 x i8], align 16
  call void @llvm.dbg.value(metadata i64 %num, metadata !3913, metadata !DIExpression()), !dbg !3919
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !3920
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !3920
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !3914, metadata !DIExpression()), !dbg !3921
  %add.ptr = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 64, !dbg !3922
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3915, metadata !DIExpression()), !dbg !3919
  %cmp = icmp eq i64 %num, 0, !dbg !3923
  br i1 %cmp, label %if.then, label %if.end, !dbg !3925

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3926
  %add.ptr1 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3926
  %2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3926
  %cmp2 = icmp ugt i8* %add.ptr1, %2, !dbg !3926
  br i1 %cmp2, label %cond.true, label %cond.end, !dbg !3926

cond.true:                                        ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3926
  %.pre3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3926
  br label %cond.end, !dbg !3926

cond.end:                                         ; preds = %if.then, %cond.true
  %3 = phi i8* [ %1, %if.then ], [ %.pre3, %cond.true ], !dbg !3926
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i64 1, !dbg !3926
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3926
  store i8 48, i8* %3, align 1, !dbg !3926
  br label %cleanup, !dbg !3928

if.end:                                           ; preds = %entry
  %cmp3 = icmp slt i64 %num, 0, !dbg !3929
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3931

if.then4:                                         ; preds = %if.end
  %4 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3932
  %add.ptr5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !3932
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3932
  %cmp6 = icmp ugt i8* %add.ptr5, %5, !dbg !3932
  br i1 %cmp6, label %cond.true7, label %cond.end9, !dbg !3932

cond.true7:                                       ; preds = %if.then4
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !3932
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3932
  br label %cond.end9, !dbg !3932

cond.end9:                                        ; preds = %if.then4, %cond.true7
  %6 = phi i8* [ %4, %if.then4 ], [ %.pre, %cond.true7 ], !dbg !3932
  %incdec.ptr11 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !3932
  store i8* %incdec.ptr11, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3932
  store i8 45, i8* %6, align 1, !dbg !3932
  %sub = sub nsw i64 0, %num, !dbg !3934
  br label %if.end13, !dbg !3935

if.else:                                          ; preds = %if.end
  br label %if.end13

if.end13:                                         ; preds = %if.else, %cond.end9
  %unum.0.in = phi i64 [ %sub, %cond.end9 ], [ %num, %if.else ]
  %unum.0 = trunc i64 %unum.0.in to i32, !dbg !3936
  call void @llvm.dbg.value(metadata i32 %unum.0, metadata !3916, metadata !DIExpression()), !dbg !3919
  br label %do.body, !dbg !3937

do.body:                                          ; preds = %do.body, %if.end13
  %unum.1 = phi i32 [ %unum.0, %if.end13 ], [ %div, %do.body ], !dbg !3919
  %p.0 = phi i8* [ %add.ptr, %if.end13 ], [ %incdec.ptr15, %do.body ], !dbg !3919
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !3915, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.value(metadata i32 %unum.1, metadata !3916, metadata !DIExpression()), !dbg !3919
  %rem = urem i32 %unum.1, 10, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %rem, metadata !3917, metadata !DIExpression()), !dbg !3939
  %div = udiv i32 %unum.1, 10, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %div, metadata !3916, metadata !DIExpression()), !dbg !3919
  %7 = trunc i32 %rem to i8, !dbg !3938
  %conv14 = or i8 %7, 48, !dbg !3938
  %incdec.ptr15 = getelementptr inbounds i8, i8* %p.0, i64 -1, !dbg !3938
  call void @llvm.dbg.value(metadata i8* %incdec.ptr15, metadata !3915, metadata !DIExpression()), !dbg !3919
  store i8 %conv14, i8* %incdec.ptr15, align 1, !dbg !3938
  %8 = icmp ugt i32 %unum.1, 9, !dbg !3937
  br i1 %8, label %do.body, label %do.end, !dbg !3938, !llvm.loop !3940

do.end:                                           ; preds = %do.body
  %incdec.ptr15.lcssa = phi i8* [ %incdec.ptr15, %do.body ], !dbg !3938
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !3941
  %sub.ptr.rhs.cast = ptrtoint i8* %incdec.ptr15.lcssa to i64, !dbg !3941
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3941
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3941
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3941
  %add.ptr20 = getelementptr inbounds i8, i8* %9, i64 %sub.ptr.sub, !dbg !3941
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !3941
  %cmp21 = icmp ugt i8* %add.ptr20, %10, !dbg !3941
  br i1 %cmp21, label %cond.true23, label %cond.end26, !dbg !3941

cond.true23:                                      ; preds = %do.end
  %conv24 = trunc i64 %sub.ptr.sub to i32, !dbg !3941
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv24) #6, !dbg !3941
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3941
  %.pre2 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3941
  br label %cond.end26, !dbg !3941

cond.end26:                                       ; preds = %do.end, %cond.true23
  %11 = phi i64 [ %sub.ptr.sub, %do.end ], [ %.pre2, %cond.true23 ], !dbg !3941
  %12 = phi i8* [ %9, %do.end ], [ %.pre1, %cond.true23 ], !dbg !3941
  %call = call i8* @memcpy(i8* %12, i8* nonnull %incdec.ptr15.lcssa, i64 %11) #6, !dbg !3941
  %13 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !3941
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3941
  %add.ptr28 = getelementptr inbounds i8, i8* %14, i64 %13, !dbg !3941
  store i8* %add.ptr28, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !3941
  br label %cleanup, !dbg !3942

cleanup:                                          ; preds = %cond.end26, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !3942
  ret void, !dbg !3942
}

declare dso_local void @debug_flush_symbol_queue() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @dbxout_expand_expr(%union.tree_node* %expr) unnamed_addr #5 !dbg !3943 {
entry:
  %mode = alloca i32, align 4
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %offset = alloca %union.tree_node*, align 8
  %volatilep = alloca i32, align 4
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3947, metadata !DIExpression()), !dbg !3958
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3959
  %bf.load = load i64, i64* %0, align 8, !dbg !3959
  %1 = trunc i64 %bf.load to i16, !dbg !3959
  switch i16 %1, label %return [
    i16 32, label %sw.bb
    i16 34, label %sw.bb3
    i16 33, label %sw.bb12
    i16 36, label %sw.bb12
    i16 23, label %sw.bb33
    i16 41, label %sw.bb35
    i16 45, label %sw.bb35
    i16 46, label %sw.bb35
    i16 42, label %sw.bb35
  ], !dbg !3960

sw.bb:                                            ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !3961
  %tobool = icmp eq i8 %2, 0, !dbg !3963
  br i1 %tobool, label %land.lhs.true, label %sw.bb3, !dbg !3964

land.lhs.true:                                    ; preds = %sw.bb
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3965
  %3 = bitcast i24* %tls_model to i32*, !dbg !3965
  %bf.load1 = load i32, i32* %3, align 8, !dbg !3965
  %bf.clear2 = and i32 %bf.load1, 49152, !dbg !3965
  %cmp = icmp eq i32 %bf.clear2, 0, !dbg !3965
  br i1 %cmp, label %sw.bb3, label %return, !dbg !3966

sw.bb3:                                           ; preds = %land.lhs.true, %sw.bb, %entry
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3967
  %4 = bitcast i40* %decl_flag_2 to i64*, !dbg !3967
  %bf.load4 = load i64, i64* %4, align 8, !dbg !3967
  %bf.cast71 = and i64 %bf.load4, 67108864, !dbg !3967
  %tobool8 = icmp eq i64 %bf.cast71, 0, !dbg !3967
  br i1 %tobool8, label %sw.bb12, label %if.then9, !dbg !3969

if.then9:                                         ; preds = %sw.bb3
  %call = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %expr) #6, !dbg !3970
  %call10 = tail call fastcc %struct.rtx_def* @dbxout_expand_expr(%union.tree_node* %call) #8, !dbg !3971
  br label %return, !dbg !3972

sw.bb12:                                          ; preds = %sw.bb3, %entry, %entry
  %bf.cast16 = and i64 %bf.load, 65535, !dbg !3973
  %arrayidx17 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast16, i64 11, !dbg !3973
  %5 = load i8, i8* %arrayidx17, align 1, !dbg !3973
  %tobool18 = icmp eq i8 %5, 0, !dbg !3973
  br i1 %tobool18, label %return, label %land.lhs.true19, !dbg !3973

land.lhs.true19:                                  ; preds = %sw.bb12
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3973
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3973
  %cmp20 = icmp eq %struct.rtx_def* %6, null, !dbg !3973
  br i1 %cmp20, label %return, label %cond.true, !dbg !3973

cond.true:                                        ; preds = %land.lhs.true19
  br i1 false, label %cond.false, label %cond.true25, !dbg !3973

cond.true25:                                      ; preds = %cond.true
  br label %return, !dbg !3973

cond.false:                                       ; preds = %cond.true
  br label %return, !dbg !3973

sw.bb33:                                          ; preds = %entry
  %call34 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %expr, %struct.rtx_def* null, i32 0, i32 4) #8, !dbg !3974
  br label %return, !dbg !3975

sw.bb35:                                          ; preds = %entry, %entry, %entry, %entry
  %7 = bitcast i32* %mode to i8*, !dbg !3976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7, !dbg !3976
  %8 = bitcast i64* %bitsize to i8*, !dbg !3977
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !3977
  %9 = bitcast i64* %bitpos to i8*, !dbg !3977
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !3977
  %10 = bitcast %union.tree_node** %offset to i8*, !dbg !3978
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7, !dbg !3978
  %11 = bitcast i32* %volatilep to i8*, !dbg !3979
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7, !dbg !3979
  call void @llvm.dbg.value(metadata i32 0, metadata !3955, metadata !DIExpression()), !dbg !3980
  store i32 0, i32* %volatilep, align 4, !dbg !3981
  %12 = bitcast i32* %unsignedp to i8*, !dbg !3979
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7, !dbg !3979
  call void @llvm.dbg.value(metadata i32 0, metadata !3956, metadata !DIExpression()), !dbg !3980
  store i32 0, i32* %unsignedp, align 4, !dbg !3982
  call void @llvm.dbg.value(metadata i32* %mode, metadata !3948, metadata !DIExpression(DW_OP_deref)), !dbg !3980
  call void @llvm.dbg.value(metadata i64* %bitsize, metadata !3951, metadata !DIExpression(DW_OP_deref)), !dbg !3980
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !3952, metadata !DIExpression(DW_OP_deref)), !dbg !3980
  call void @llvm.dbg.value(metadata %union.tree_node** %offset, metadata !3953, metadata !DIExpression(DW_OP_deref)), !dbg !3980
  call void @llvm.dbg.value(metadata i32* %volatilep, metadata !3955, metadata !DIExpression(DW_OP_deref)), !dbg !3980
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !3956, metadata !DIExpression(DW_OP_deref)), !dbg !3980
  %call36 = call %union.tree_node* @get_inner_reference(%union.tree_node* %expr, i64* nonnull %bitsize, i64* nonnull %bitpos, %union.tree_node** nonnull %offset, i32* nonnull %mode, i32* nonnull %unsignedp, i32* nonnull %volatilep, i8 zeroext 1) #6, !dbg !3983
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3954, metadata !DIExpression()), !dbg !3980
  %call37 = call fastcc %struct.rtx_def* @dbxout_expand_expr(%union.tree_node* %call36) #8, !dbg !3984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !3957, metadata !DIExpression()), !dbg !3980
  %cmp38 = icmp eq %struct.rtx_def* %call37, null, !dbg !3985
  br i1 %cmp38, label %cleanup, label %lor.lhs.false, !dbg !3987

lor.lhs.false:                                    ; preds = %sw.bb35
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call37, i64 0, i32 0, !dbg !3988
  %bf.load40 = load i32, i32* %13, align 8, !dbg !3988
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !3988
  %cmp42 = icmp eq i32 %bf.clear41, 43, !dbg !3988
  br i1 %cmp42, label %if.end45, label %cleanup, !dbg !3989

if.end45:                                         ; preds = %lor.lhs.false
  %14 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !3990
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !3953, metadata !DIExpression()), !dbg !3980
  %cmp46 = icmp eq %union.tree_node* %14, null, !dbg !3992
  br i1 %cmp46, label %if.end55, label %if.then48, !dbg !3993

if.then48:                                        ; preds = %if.end45
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !3953, metadata !DIExpression()), !dbg !3980
  %call49 = call i32 @host_integerp(%union.tree_node* nonnull %14, i32 0) #6, !dbg !3994
  %tobool50 = icmp eq i32 %call49, 0, !dbg !3994
  br i1 %tobool50, label %cleanup, label %if.end52, !dbg !3997

if.end52:                                         ; preds = %if.then48
  %15 = load i32, i32* %mode, align 4, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %15, metadata !3948, metadata !DIExpression()), !dbg !3980
  %16 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !3998
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !3953, metadata !DIExpression()), !dbg !3980
  %call53 = call i64 @tree_low_cst(%union.tree_node* %16, i32 0) #6, !dbg !3998
  %call54 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* nonnull %call37, i32 %15, i64 %call53, i32 0, i32 1) #6, !dbg !3998
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call54, metadata !3957, metadata !DIExpression()), !dbg !3980
  br label %if.end55, !dbg !3999

if.end55:                                         ; preds = %if.end45, %if.end52
  %x.0 = phi %struct.rtx_def* [ %call54, %if.end52 ], [ %call37, %if.end45 ], !dbg !3980
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !3957, metadata !DIExpression()), !dbg !3980
  %17 = load i64, i64* %bitpos, align 8, !dbg !4000
  call void @llvm.dbg.value(metadata i64 %17, metadata !3952, metadata !DIExpression()), !dbg !3980
  %cmp56 = icmp eq i64 %17, 0, !dbg !4002
  br i1 %cmp56, label %cleanup, label %if.then58, !dbg !4003

if.then58:                                        ; preds = %if.end55
  %18 = load i32, i32* %mode, align 4, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %18, metadata !3948, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i64 %17, metadata !3952, metadata !DIExpression()), !dbg !3980
  %div = sdiv i64 %17, 8, !dbg !4004
  %call59 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %x.0, i32 %18, i64 %div, i32 0, i32 1) #6, !dbg !4004
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !3957, metadata !DIExpression()), !dbg !3980
  br label %cleanup, !dbg !4005

cleanup:                                          ; preds = %if.then48, %if.end55, %if.then58, %sw.bb35, %lor.lhs.false
  %retval.0 = phi %struct.rtx_def* [ null, %lor.lhs.false ], [ null, %sw.bb35 ], [ null, %if.then48 ], [ %call59, %if.then58 ], [ %x.0, %if.end55 ], !dbg !3980
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7, !dbg !4006
  br label %return

return:                                           ; preds = %land.lhs.true, %land.lhs.true19, %sw.bb12, %entry, %cond.false, %cond.true25, %cleanup, %sw.bb33, %if.then9
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ %call34, %sw.bb33 ], [ %call10, %if.then9 ], [ null, %land.lhs.true ], [ %6, %cond.true25 ], [ undef, %cond.false ], [ null, %land.lhs.true19 ], [ null, %sw.bb12 ], [ null, %entry ], !dbg !4007
  ret %struct.rtx_def* %retval.1, !dbg !4008
}

declare dso_local %struct.rtx_def* @eliminate_regs(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl, %union.tree_node* %type, i8* %suffix, %struct.rtx_def* %home) unnamed_addr #5 !dbg !4009 {
entry:
  %home.addr = alloca %struct.rtx_def*, align 8
  %offs = alloca i32, align 4
  %marked = alloca i8, align 1
  %offs91 = alloca i32, align 4
  %offs313 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4013, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4014, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i8* %suffix, metadata !4015, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %home, metadata !4016, metadata !DIExpression()), !dbg !4048
  store %struct.rtx_def* %home, %struct.rtx_def** %home.addr, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4019, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 0, metadata !4020, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 -1, metadata !4021, metadata !DIExpression()), !dbg !4048
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %home, i64 0, i32 0, !dbg !4049
  %bf.load = load i32, i32* %.cast, align 8, !dbg !4049
  %bf.clear = and i32 %bf.load, 65535, !dbg !4049
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !4050
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %home, i64 0, i32 0, !dbg !4051
  br i1 %cmp, label %if.then, label %if.end12, !dbg !4051

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !4052

while.cond:                                       ; preds = %while.body, %if.then
  %bf.load4 = phi i32 [ %bf.load, %if.then ], [ %bf.load1.pre, %while.body ], !dbg !4053
  %value.0 = phi %struct.rtx_def* [ %home, %if.then ], [ %value.0.pre, %while.body ], !dbg !4054
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.0, metadata !4022, metadata !DIExpression()), !dbg !4054
  %bf.clear2 = and i32 %bf.load4, 65535, !dbg !4053
  %cmp3 = icmp eq i32 %bf.clear2, 39, !dbg !4055
  br i1 %cmp3, label %while.body, label %while.end, !dbg !4052

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4056
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4056
  %value.0.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4054
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %value.0.pre, i64 0, i32 0, !dbg !4054
  %bf.load1.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4053
  br label %while.cond, !dbg !4052, !llvm.loop !4057

while.end:                                        ; preds = %while.cond
  %value.0.lcssa = phi %struct.rtx_def* [ %value.0, %while.cond ], !dbg !4054
  %bf.clear2.lcssa = phi i32 [ %bf.clear2, %while.cond ], !dbg !4053
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.0.lcssa, metadata !4022, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata %struct.rtx_def* %value.0.lcssa, metadata !4022, metadata !DIExpression()), !dbg !4054
  %cmp6 = icmp eq i32 %bf.clear2.lcssa, 37, !dbg !4058
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !4060

if.then7:                                         ; preds = %while.end
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %value.0.lcssa) #8, !dbg !4061
  %cmp8 = icmp ugt i32 %call, 52, !dbg !4064
  br i1 %cmp8, label %cleanup, label %if.end10, !dbg !4065

if.end10:                                         ; preds = %if.then7, %while.end
  call void @llvm.dbg.value(metadata %struct.rtx_def** %home.addr, metadata !4016, metadata !DIExpression(DW_OP_deref)), !dbg !4048
  %call11 = call %struct.rtx_def* @alter_subreg(%struct.rtx_def** nonnull %home.addr) #6, !dbg !4066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !4016, metadata !DIExpression()), !dbg !4048
  store %struct.rtx_def* %call11, %struct.rtx_def** %home.addr, align 8, !dbg !4067
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call11, i64 0, i32 0, !dbg !4068
  br label %cleanup, !dbg !4068

cleanup:                                          ; preds = %if.then7, %if.end10
  %2 = phi i32* [ %1, %if.end10 ], [ %0, %if.then7 ]
  %3 = phi i32* [ %1, %if.end10 ], [ %0, %if.then7 ]
  %4 = phi %struct.rtx_def* [ %call11, %if.end10 ], [ %home, %if.then7 ]
  %5 = phi i32* [ %1, %if.end10 ], [ %0, %if.then7 ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end10 ], [ false, %if.then7 ]
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end12_crit_edge, label %cleanup362

cleanup.if.end12_crit_edge:                       ; preds = %cleanup
  %bf.load13.pre = load i32, i32* %5, align 8, !dbg !4069
  br label %if.end12

if.end12:                                         ; preds = %cleanup.if.end12_crit_edge, %entry
  %6 = phi i32* [ %2, %cleanup.if.end12_crit_edge ], [ %0, %entry ]
  %7 = phi i32* [ %3, %cleanup.if.end12_crit_edge ], [ %0, %entry ]
  %8 = phi %struct.rtx_def* [ %4, %cleanup.if.end12_crit_edge ], [ %home, %entry ]
  %bf.load13 = phi i32 [ %bf.load13.pre, %cleanup.if.end12_crit_edge ], [ %bf.load, %entry ], !dbg !4069
  %9 = bitcast %struct.rtx_def** %home.addr to i32**, !dbg !4069
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4069
  %cmp15 = icmp eq i32 %bf.clear14, 37, !dbg !4069
  br i1 %cmp15, label %if.then16, label %if.end21, !dbg !4071

if.then16:                                        ; preds = %if.end12
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !4016, metadata !DIExpression()), !dbg !4048
  %call17 = call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #8, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %call17, metadata !4021, metadata !DIExpression()), !dbg !4048
  %cmp18 = icmp sgt i32 %call17, 52, !dbg !4074
  br i1 %cmp18, label %cleanup362, label %if.then16.if.end21_crit_edge, !dbg !4076

if.then16.if.end21_crit_edge:                     ; preds = %if.then16
  %.pre = load i32*, i32** %9, align 8, !dbg !4077
  %10 = bitcast i32* %.pre to %struct.rtx_def*, !dbg !4076
  br label %if.end21, !dbg !4076

if.end21:                                         ; preds = %if.then16.if.end21_crit_edge, %if.end12
  %11 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %12 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %13 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %14 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %15 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %16 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %17 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %18 = phi i32* [ %6, %if.end12 ], [ %.pre, %if.then16.if.end21_crit_edge ]
  %19 = phi %struct.rtx_def* [ %8, %if.end12 ], [ %10, %if.then16.if.end21_crit_edge ]
  %20 = phi i32* [ %7, %if.end12 ], [ %.pre, %if.then16.if.end21_crit_edge ], !dbg !4077
  %regno.0 = phi i32 [ -1, %if.end12 ], [ %call17, %if.then16.if.end21_crit_edge ], !dbg !4048
  call void @llvm.dbg.value(metadata i32 %regno.0, metadata !4021, metadata !DIExpression()), !dbg !4048
  %bf.load22 = load i32, i32* %20, align 8, !dbg !4077
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !4077
  %cmp24 = icmp eq i32 %bf.clear23, 43, !dbg !4077
  br i1 %cmp24, label %land.lhs.true, label %if.else106, !dbg !4078

land.lhs.true:                                    ; preds = %if.end21
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4079
  %21 = bitcast %union.rtunion_def* %arrayidx27 to i32**, !dbg !4079
  %22 = load i32*, i32** %21, align 8, !dbg !4079
  %bf.load29 = load i32, i32* %22, align 8, !dbg !4079
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !4079
  %cmp31 = icmp eq i32 %bf.clear30, 45, !dbg !4080
  br i1 %cmp31, label %if.then32, label %if.else106, !dbg !4081

if.then32:                                        ; preds = %land.lhs.true
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4082
  %bf.load33 = load i64, i64* %23, align 8, !dbg !4082
  %bf.cast12 = and i64 %bf.load33, 134217728, !dbg !4082
  %tobool = icmp eq i64 %bf.cast12, 0, !dbg !4082
  br i1 %tobool, label %if.else, label %if.then35, !dbg !4083

if.then35:                                        ; preds = %if.then32
  %24 = bitcast i32* %offs to i8*, !dbg !4084
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #7, !dbg !4084
  call void @llvm.dbg.value(metadata i32 71, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 32, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32* %offs, metadata !4025, metadata !DIExpression(DW_OP_deref)), !dbg !4085
  %call36 = call fastcc i8* @dbxout_common_check(%union.tree_node* %decl, i32* nonnull %offs) #8, !dbg !4086
  %cmp37 = icmp ne i8* %call36, null, !dbg !4088
  %25 = load i32, i32* %offs, align 4, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %25, metadata !4025, metadata !DIExpression()), !dbg !4085
  %spec.select = select i1 %cmp37, i32 %25, i32 0, !dbg !4091
  %spec.select3 = select i1 %cmp37, i32 86, i32 71, !dbg !4091
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4019, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4020, metadata !DIExpression()), !dbg !4048
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #7, !dbg !4092
  br label %if.end361, !dbg !4093

if.else:                                          ; preds = %if.then32
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4094
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !4094
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !4019, metadata !DIExpression()), !dbg !4048
  %call44 = call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #6, !dbg !4095
  %tobool45 = icmp eq %union.tree_node* %call44, null, !dbg !4095
  %cond = select i1 %tobool45, i32 83, i32 86, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4017, metadata !DIExpression()), !dbg !4048
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 0, !dbg !4096
  %bf.load46 = load i32, i32* %27, align 8, !dbg !4096
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !4096
  %cmp48 = icmp eq i32 %bf.clear47, 45, !dbg !4097
  br i1 %cmp48, label %land.lhs.true49, label %if.end82, !dbg !4098

land.lhs.true49:                                  ; preds = %if.else
  %bf.clear52 = and i32 %bf.load46, 67108864, !dbg !4099
  %tobool53 = icmp eq i32 %bf.clear52, 0, !dbg !4099
  br i1 %tobool53, label %if.end82, label %if.then54, !dbg !4100

if.then54:                                        ; preds = %land.lhs.true49
  call void @llvm.dbg.value(metadata i8* %marked, metadata !4030, metadata !DIExpression(DW_OP_deref)), !dbg !4101
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %marked) #7, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %marked, metadata !4030, metadata !DIExpression(DW_OP_deref)), !dbg !4101
  %call55 = call %struct.rtx_def* @get_pool_constant_mark(%struct.rtx_def* %26, i8* nonnull %marked) #6, !dbg !4103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !4034, metadata !DIExpression()), !dbg !4101
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call55, i64 0, i32 0, !dbg !4104
  %bf.load56 = load i32, i32* %28, align 8, !dbg !4104
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !4104
  %cmp58 = icmp eq i32 %bf.clear57, 45, !dbg !4106
  br i1 %cmp58, label %if.then59, label %if.else68, !dbg !4107

if.then59:                                        ; preds = %if.then54
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !4019, metadata !DIExpression()), !dbg !4048
  %bf.clear62 = and i32 %bf.load56, 67108864, !dbg !4108
  %tobool63 = icmp eq i32 %bf.clear62, 0, !dbg !4108
  br i1 %tobool63, label %if.else66, label %if.then64, !dbg !4111

if.then64:                                        ; preds = %if.then59
  call void @llvm.dbg.value(metadata i8* %marked, metadata !4030, metadata !DIExpression(DW_OP_deref)), !dbg !4101
  %call65 = call %struct.rtx_def* @get_pool_constant_mark(%struct.rtx_def* %call55, i8* nonnull %marked) #6, !dbg !4112
  br label %if.end74, !dbg !4112

if.else66:                                        ; preds = %if.then59
  call void @llvm.dbg.value(metadata i8 1, metadata !4030, metadata !DIExpression()), !dbg !4101
  store i8 1, i8* %marked, align 1, !dbg !4113
  br label %if.end74

if.else68:                                        ; preds = %if.then54
  %cmp71 = icmp eq i32 %bf.clear57, 44, !dbg !4114
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !4116

if.then72:                                        ; preds = %if.else68
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !4019, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i8 1, metadata !4030, metadata !DIExpression()), !dbg !4101
  store i8 1, i8* %marked, align 1, !dbg !4117
  br label %if.end74, !dbg !4119

if.end74:                                         ; preds = %if.else68, %if.then72, %if.then64, %if.else66
  %addr.2 = phi %struct.rtx_def* [ %call55, %if.else66 ], [ %call55, %if.then64 ], [ %call55, %if.then72 ], [ %26, %if.else68 ], !dbg !4120
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.2, metadata !4019, metadata !DIExpression()), !dbg !4048
  %29 = load i8, i8* %marked, align 1, !dbg !4121
  call void @llvm.dbg.value(metadata i8 %29, metadata !4030, metadata !DIExpression()), !dbg !4101
  %tobool75 = icmp eq i8 %29, 0, !dbg !4121
  call void @llvm.dbg.value(metadata i8* %marked, metadata !4030, metadata !DIExpression(DW_OP_deref)), !dbg !4101
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %marked) #7, !dbg !4123
  br i1 %tobool75, label %cleanup362, label %if.end82

if.end82:                                         ; preds = %if.end74, %land.lhs.true49, %if.else
  %addr.3 = phi %struct.rtx_def* [ %26, %land.lhs.true49 ], [ %26, %if.else ], [ %addr.2, %if.end74 ], !dbg !4124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.3, metadata !4019, metadata !DIExpression()), !dbg !4048
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4125
  %30 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4125
  %cmp83 = icmp eq %union.tree_node* %30, null, !dbg !4126
  br i1 %cmp83, label %if.then90, label %lor.lhs.false, !dbg !4127

lor.lhs.false:                                    ; preds = %if.end82
  %31 = load i8*, i8** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 0), align 8, !dbg !4128
  %call84 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4129
  %tobool85 = icmp eq i32 %call84, 0, !dbg !4129
  br i1 %tobool85, label %land.lhs.true86, label %if.else96, !dbg !4130

land.lhs.true86:                                  ; preds = %lor.lhs.false
  %32 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4131
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4132
  %cmp89 = icmp eq %union.tree_node* %32, %33, !dbg !4133
  br i1 %cmp89, label %if.then90, label %if.else96, !dbg !4134

if.then90:                                        ; preds = %land.lhs.true86, %if.end82
  %34 = bitcast i32* %offs91 to i8*, !dbg !4135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #7, !dbg !4135
  call void @llvm.dbg.value(metadata i32 40, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32* %offs91, metadata !4035, metadata !DIExpression(DW_OP_deref)), !dbg !4136
  %call92 = call fastcc i8* @dbxout_common_check(%union.tree_node* %decl, i32* nonnull %offs91) #8, !dbg !4137
  %cmp93 = icmp ne i8* %call92, null, !dbg !4139
  %35 = load i32, i32* %offs91, align 4, !dbg !4140
  call void @llvm.dbg.value(metadata i32 %35, metadata !4035, metadata !DIExpression()), !dbg !4136
  %spec.select4 = select i1 %cmp93, i32 %35, i32 0, !dbg !4142
  %spec.select5 = select i1 %cmp93, %struct.rtx_def* null, %struct.rtx_def* %addr.3, !dbg !4142
  %spec.select6 = select i1 %cmp93, i32 32, i32 40, !dbg !4142
  %spec.select7 = select i1 %cmp93, i32 86, i32 %cond, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %spec.select7, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %spec.select6, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select5, metadata !4019, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !4020, metadata !DIExpression()), !dbg !4048
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #7, !dbg !4143
  br label %if.end361, !dbg !4144

if.else96:                                        ; preds = %lor.lhs.false, %land.lhs.true86
  %in_text_section = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4145
  %36 = bitcast i24* %in_text_section to i32*, !dbg !4145
  %bf.load97 = load i32, i32* %36, align 8, !dbg !4145
  %bf.clear99 = and i32 %bf.load97, 16, !dbg !4145
  %tobool100 = icmp eq i32 %bf.clear99, 0, !dbg !4145
  %.8 = select i1 %tobool100, i32 38, i32 36
  call void @llvm.dbg.value(metadata i32 %.8, metadata !4018, metadata !DIExpression()), !dbg !4048
  br label %if.end361

if.else106:                                       ; preds = %land.lhs.true, %if.end21
  %cmp107 = icmp sgt i32 %regno.0, -1, !dbg !4147
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !4148

if.then108:                                       ; preds = %if.else106
  call void @llvm.dbg.value(metadata i32 114, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 64, metadata !4018, metadata !DIExpression()), !dbg !4048
  %idxprom = sext i32 %regno.0 to i64, !dbg !4149
  %arrayidx109 = getelementptr inbounds [53 x i32], [53 x i32]* @svr4_dbx_register_map, i64 0, i64 %idxprom, !dbg !4149
  %37 = load i32, i32* %arrayidx109, align 4, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %37, metadata !4020, metadata !DIExpression()), !dbg !4048
  br label %if.end361, !dbg !4151

if.else110:                                       ; preds = %if.else106
  %bf.load111 = load i32, i32* %18, align 8, !dbg !4152
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !4152
  %cmp113 = icmp eq i32 %bf.clear112, 43, !dbg !4152
  br i1 %cmp113, label %land.lhs.true114, label %if.else207, !dbg !4153

land.lhs.true114:                                 ; preds = %if.else110
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4154
  %38 = bitcast %union.rtunion_def* %arrayidx117 to i32**, !dbg !4154
  %39 = load i32*, i32** %38, align 8, !dbg !4154
  %bf.load119 = load i32, i32* %39, align 8, !dbg !4154
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !4154
  %cmp121 = icmp eq i32 %bf.clear120, 43, !dbg !4154
  br i1 %cmp121, label %if.then151, label %lor.lhs.false122, !dbg !4155

lor.lhs.false122:                                 ; preds = %land.lhs.true114
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4156
  %40 = bitcast %union.rtunion_def* %arrayidx125 to i32**, !dbg !4156
  %41 = load i32*, i32** %40, align 8, !dbg !4156
  %bf.load127 = load i32, i32* %41, align 8, !dbg !4156
  %bf.clear128 = and i32 %bf.load127, 65535, !dbg !4156
  %cmp129 = icmp eq i32 %bf.clear128, 37, !dbg !4156
  br i1 %cmp129, label %land.lhs.true130, label %if.else207, !dbg !4157

land.lhs.true130:                                 ; preds = %lor.lhs.false122
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4158
  %rt_rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**, !dbg !4158
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx134, align 8, !dbg !4158
  %call135 = call fastcc i32 @rhs_regno(%struct.rtx_def* %42) #8, !dbg !4158
  %cmp136 = icmp eq i32 %call135, 6, !dbg !4159
  br i1 %cmp136, label %if.else207, label %land.lhs.true137, !dbg !4160

land.lhs.true137:                                 ; preds = %land.lhs.true130
  %43 = load %struct.rtx_def*, %struct.rtx_def** %home.addr, align 8, !dbg !4161
  call void @llvm.dbg.value(metadata %struct.rtx_def* %43, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4161
  %rt_rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**, !dbg !4161
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx141, align 8, !dbg !4161
  %call142 = call fastcc i32 @rhs_regno(%struct.rtx_def* %44) #8, !dbg !4161
  %cmp143 = icmp eq i32 %call142, 7, !dbg !4162
  br i1 %cmp143, label %if.else207, label %land.lhs.true144, !dbg !4163

land.lhs.true144:                                 ; preds = %land.lhs.true137
  %45 = load %struct.rtx_def*, %struct.rtx_def** %home.addr, align 8, !dbg !4164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %45, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4164
  %rt_rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**, !dbg !4164
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx148, align 8, !dbg !4164
  %call149 = call fastcc i32 @rhs_regno(%struct.rtx_def* %46) #8, !dbg !4164
  %cmp150 = icmp eq i32 %call149, 16, !dbg !4165
  br i1 %cmp150, label %if.else207, label %land.lhs.true144.if.then151_crit_edge, !dbg !4166

land.lhs.true144.if.then151_crit_edge:            ; preds = %land.lhs.true144
  %.pre16 = load %struct.rtx_def*, %struct.rtx_def** %home.addr, align 8, !dbg !4167
  br label %if.then151, !dbg !4166

if.then151:                                       ; preds = %land.lhs.true144.if.then151_crit_edge, %land.lhs.true114
  %47 = phi %struct.rtx_def* [ %.pre16, %land.lhs.true144.if.then151_crit_edge ], [ %12, %land.lhs.true114 ]
  %48 = phi %struct.rtx_def* [ %.pre16, %land.lhs.true144.if.then151_crit_edge ], [ %13, %land.lhs.true114 ], !dbg !4170
  %49 = phi %struct.rtx_def* [ %.pre16, %land.lhs.true144.if.then151_crit_edge ], [ %14, %land.lhs.true114 ], !dbg !4167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %49, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4167
  %50 = bitcast %union.rtunion_def* %arrayidx154 to i32**, !dbg !4167
  %51 = load i32*, i32** %50, align 8, !dbg !4167
  %bf.load156 = load i32, i32* %51, align 8, !dbg !4167
  %bf.clear157 = and i32 %bf.load156, 65535, !dbg !4167
  %cmp158 = icmp eq i32 %bf.clear157, 37, !dbg !4167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %48, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4170
  %rt_rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**, !dbg !4170
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx163, align 8, !dbg !4170
  br i1 %cmp158, label %if.then159, label %if.else175, !dbg !4171

if.then159:                                       ; preds = %if.then151
  call void @llvm.dbg.value(metadata i32 114, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 64, metadata !4018, metadata !DIExpression()), !dbg !4048
  %call164 = call fastcc i32 @rhs_regno(%struct.rtx_def* %52) #8, !dbg !4172
  %cmp165 = icmp ugt i32 %call164, 52, !dbg !4175
  br i1 %cmp165, label %cleanup362, label %if.end167, !dbg !4176

if.end167:                                        ; preds = %if.then159
  %53 = load %struct.rtx_def*, %struct.rtx_def** %home.addr, align 8, !dbg !4177
  call void @llvm.dbg.value(metadata %struct.rtx_def* %53, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4177
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !4177
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !4177
  %call172 = call fastcc i32 @rhs_regno(%struct.rtx_def* %54) #8, !dbg !4177
  %idxprom173 = zext i32 %call172 to i64, !dbg !4177
  %arrayidx174 = getelementptr inbounds [53 x i32], [53 x i32]* @svr4_dbx_register_map, i64 0, i64 %idxprom173, !dbg !4177
  %55 = load i32, i32* %arrayidx174, align 4, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %55, metadata !4020, metadata !DIExpression()), !dbg !4048
  br label %if.end202, !dbg !4178

if.else175:                                       ; preds = %if.then151
  call void @llvm.dbg.value(metadata i32 128, metadata !4018, metadata !DIExpression()), !dbg !4048
  %arrayidx182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4179
  %56 = bitcast %union.rtunion_def* %arrayidx182 to i32**, !dbg !4179
  %57 = load i32*, i32** %56, align 8, !dbg !4179
  %bf.load184 = load i32, i32* %57, align 8, !dbg !4179
  %bf.clear185 = and i32 %bf.load184, 65535, !dbg !4179
  %cmp186 = icmp eq i32 %bf.clear185, 49, !dbg !4179
  br i1 %cmp186, label %cond.true, label %cond.end, !dbg !4179

cond.true:                                        ; preds = %if.else175
  call void @llvm.dbg.value(metadata %struct.rtx_def* %47, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4179
  %rt_rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**, !dbg !4179
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx190, align 8, !dbg !4179
  %arrayidx193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4179
  %rt_rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**, !dbg !4179
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !4179
  %60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4179
  %rt_rtx198 = bitcast %union.rtunion_def* %60 to %struct.rtx_def**, !dbg !4179
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !4179
  %u199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, !dbg !4179
  %arrayidx200 = bitcast %union.u* %u199 to i64*, !dbg !4179
  %62 = load i64, i64* %arrayidx200, align 8, !dbg !4179
  %phitmp11 = trunc i64 %62 to i32, !dbg !4179
  br label %cond.end, !dbg !4179

cond.end:                                         ; preds = %if.else175, %cond.true
  %cond201 = phi i32 [ %phitmp11, %cond.true ], [ 0, %if.else175 ]
  call void @llvm.dbg.value(metadata i32 %cond201, metadata !4020, metadata !DIExpression()), !dbg !4048
  br label %if.end202

if.end202:                                        ; preds = %cond.end, %if.end167
  %number.4 = phi i32 [ %55, %if.end167 ], [ %cond201, %cond.end ], !dbg !4170
  %code.4 = phi i32 [ 64, %if.end167 ], [ 128, %cond.end ], !dbg !4170
  %letter.4 = phi i32 [ 114, %if.end167 ], [ 0, %cond.end ], !dbg !4048
  call void @llvm.dbg.value(metadata i32 %letter.4, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %code.4, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %number.4, metadata !4020, metadata !DIExpression()), !dbg !4048
  %call203 = call %union.tree_node* @make_node_stat(i32 10) #6, !dbg !4181
  call void @llvm.dbg.value(metadata %union.tree_node* %call203, metadata !4014, metadata !DIExpression()), !dbg !4048
  %type204 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4182
  %63 = bitcast %union.tree_node** %type204 to i64*, !dbg !4182
  %64 = load i64, i64* %63, align 8, !dbg !4182
  %type206 = getelementptr inbounds %union.tree_node, %union.tree_node* %call203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4183
  %65 = bitcast %union.tree_node** %type206 to i64*, !dbg !4184
  store i64 %64, i64* %65, align 8, !dbg !4184
  br label %if.end361, !dbg !4185

if.else207:                                       ; preds = %land.lhs.true144, %land.lhs.true137, %land.lhs.true130, %lor.lhs.false122, %if.else110
  %66 = load i32*, i32** %9, align 8, !dbg !4186
  %bf.load208 = load i32, i32* %66, align 8, !dbg !4186
  %bf.clear209 = and i32 %bf.load208, 65535, !dbg !4186
  %cmp210 = icmp eq i32 %bf.clear209, 43, !dbg !4186
  br i1 %cmp210, label %land.lhs.true212, label %if.else246, !dbg !4187

land.lhs.true212:                                 ; preds = %if.else207
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx215 = getelementptr inbounds i32, i32* %66, i64 2, !dbg !4188
  %67 = bitcast i32* %arrayidx215 to i32**, !dbg !4188
  %68 = load i32*, i32** %67, align 8, !dbg !4188
  %bf.load217 = load i32, i32* %68, align 8, !dbg !4188
  %bf.clear218 = and i32 %bf.load217, 65535, !dbg !4188
  %cmp219 = icmp eq i32 %bf.clear218, 37, !dbg !4188
  br i1 %cmp219, label %if.then221, label %if.else246, !dbg !4189

if.then221:                                       ; preds = %land.lhs.true212
  call void @llvm.dbg.value(metadata i32 128, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  br label %cond.end243, !dbg !4190

cond.true230:                                     ; No predecessors!
  br label %cond.end243, !dbg !4190

cond.end243:                                      ; preds = %if.then221, %cond.true230
  call void @llvm.dbg.value(metadata i32 0, metadata !4020, metadata !DIExpression()), !dbg !4048
  br label %if.end361, !dbg !4192

if.else246:                                       ; preds = %land.lhs.true212, %if.else207
  br i1 %cmp210, label %land.lhs.true251, label %if.else298, !dbg !4193

land.lhs.true251:                                 ; preds = %if.else246
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx254 = getelementptr inbounds i32, i32* %66, i64 2, !dbg !4194
  %69 = bitcast i32* %arrayidx254 to i32**, !dbg !4194
  %70 = load i32*, i32** %69, align 8, !dbg !4194
  %bf.load256 = load i32, i32* %70, align 8, !dbg !4194
  %bf.clear257 = and i32 %bf.load256, 65535, !dbg !4194
  %cmp258 = icmp eq i32 %bf.clear257, 49, !dbg !4195
  br i1 %cmp258, label %land.lhs.true260, label %if.else298, !dbg !4196

land.lhs.true260:                                 ; preds = %land.lhs.true251
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  %71 = getelementptr inbounds i32, i32* %70, i64 4, !dbg !4197
  %72 = bitcast i32* %71 to i32**, !dbg !4197
  %73 = load i32*, i32** %72, align 8, !dbg !4197
  %bf.load269 = load i32, i32* %73, align 8, !dbg !4197
  %bf.clear270 = and i32 %bf.load269, 65535, !dbg !4197
  %cmp271 = icmp eq i32 %bf.clear270, 30, !dbg !4197
  br i1 %cmp271, label %if.then273, label %if.else298, !dbg !4198

if.then273:                                       ; preds = %land.lhs.true260
  call void @llvm.dbg.value(metadata i32 128, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  br i1 true, label %cond.true282, label %if.then273.cond.end295_crit_edge, !dbg !4199

if.then273.cond.end295_crit_edge:                 ; preds = %if.then273
  br label %cond.end295, !dbg !4199

cond.true282:                                     ; preds = %if.then273
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  %u291 = getelementptr inbounds i32, i32* %73, i64 2, !dbg !4199
  %arrayidx293 = bitcast i32* %u291 to i64*, !dbg !4199
  %74 = load i64, i64* %arrayidx293, align 8, !dbg !4199
  %phitmp = trunc i64 %74 to i32, !dbg !4199
  br label %cond.end295, !dbg !4199

cond.end295:                                      ; preds = %if.then273.cond.end295_crit_edge, %cond.true282
  %cond296 = phi i32 [ %phitmp, %cond.true282 ], [ undef, %if.then273.cond.end295_crit_edge ]
  call void @llvm.dbg.value(metadata i32 %cond296, metadata !4020, metadata !DIExpression()), !dbg !4048
  br label %if.end361, !dbg !4201

if.else298:                                       ; preds = %land.lhs.true260, %land.lhs.true251, %if.else246
  br i1 %cmp210, label %land.lhs.true303, label %if.else328, !dbg !4202

land.lhs.true303:                                 ; preds = %if.else298
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx306 = getelementptr inbounds i32, i32* %66, i64 2, !dbg !4203
  %75 = bitcast i32* %arrayidx306 to i32**, !dbg !4203
  %76 = load i32*, i32** %75, align 8, !dbg !4203
  %bf.load308 = load i32, i32* %76, align 8, !dbg !4203
  %bf.clear309 = and i32 %bf.load308, 65535, !dbg !4203
  %cmp310 = icmp eq i32 %bf.clear309, 35, !dbg !4204
  br i1 %cmp310, label %if.then312, label %if.else328, !dbg !4205

if.then312:                                       ; preds = %land.lhs.true303
  %77 = bitcast i32* %offs313 to i8*, !dbg !4206
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #7, !dbg !4206
  call void @llvm.dbg.value(metadata i32 40, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 86, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32* %offs313, metadata !4038, metadata !DIExpression(DW_OP_deref)), !dbg !4207
  %call314 = call fastcc i8* @dbxout_common_check(%union.tree_node* %decl, i32* nonnull %offs313) #8, !dbg !4208
  %cmp315 = icmp eq i8* %call314, null, !dbg !4210
  br i1 %cmp315, label %if.then317, label %if.else326, !dbg !4211

if.then317:                                       ; preds = %if.then312
  %78 = load %struct.rtx_def*, %struct.rtx_def** %home.addr, align 8, !dbg !4212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %78, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4212
  %rt_rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**, !dbg !4212
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx321, align 8, !dbg !4212
  %arrayidx324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4212
  %rt_rtx325 = bitcast %union.rtunion_def* %arrayidx324 to %struct.rtx_def**, !dbg !4212
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx325, align 8, !dbg !4212
  call void @llvm.dbg.value(metadata %struct.rtx_def* %80, metadata !4019, metadata !DIExpression()), !dbg !4048
  br label %if.end327, !dbg !4213

if.else326:                                       ; preds = %if.then312
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4019, metadata !DIExpression()), !dbg !4048
  %81 = load i32, i32* %offs313, align 4, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %81, metadata !4038, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32 %81, metadata !4020, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 32, metadata !4018, metadata !DIExpression()), !dbg !4048
  br label %if.end327

if.end327:                                        ; preds = %if.else326, %if.then317
  %number.5 = phi i32 [ 0, %if.then317 ], [ %81, %if.else326 ], !dbg !4048
  %addr.7 = phi %struct.rtx_def* [ %80, %if.then317 ], [ null, %if.else326 ], !dbg !4216
  %code.5 = phi i32 [ 40, %if.then317 ], [ 32, %if.else326 ], !dbg !4207
  call void @llvm.dbg.value(metadata i32 %code.5, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.7, metadata !4019, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %number.5, metadata !4020, metadata !DIExpression()), !dbg !4048
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #7, !dbg !4217
  br label %if.end361

if.else328:                                       ; preds = %land.lhs.true303, %if.else298
  %cmp331 = icmp eq i32 %bf.clear209, 41, !dbg !4218
  br i1 %cmp331, label %if.then333, label %cleanup362, !dbg !4219

if.then333:                                       ; preds = %if.else328
  %82 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4220
  %bf.load335 = load i64, i64* %82, align 8, !dbg !4220
  %bf.cast3379 = and i64 %bf.load335, 65535, !dbg !4222
  %cmp338 = icmp eq i64 %bf.cast3379, 13, !dbg !4222
  br i1 %cmp338, label %if.end341, label %cleanup362, !dbg !4223

if.end341:                                        ; preds = %if.then333
  %type343 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4224
  %83 = load %union.tree_node*, %union.tree_node** %type343, align 8, !dbg !4224
  call void @llvm.dbg.value(metadata %union.tree_node* %83, metadata !4045, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.value(metadata i32* %66, metadata !4016, metadata !DIExpression()), !dbg !4048
  %arrayidx346 = getelementptr inbounds i32, i32* %66, i64 2, !dbg !4226
  %rt_rtx347 = bitcast i32* %arrayidx346 to %struct.rtx_def**, !dbg !4226
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx347, align 8, !dbg !4226
  %call348 = call fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl, %union.tree_node* %83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), %struct.rtx_def* %84) #8, !dbg !4228
  %85 = load %struct.rtx_def*, %struct.rtx_def** %home.addr, align 8, !dbg !4229
  call void @llvm.dbg.value(metadata %struct.rtx_def* %85, metadata !4016, metadata !DIExpression()), !dbg !4048
  %86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4229
  %rt_rtx352 = bitcast %union.rtunion_def* %86 to %struct.rtx_def**, !dbg !4229
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx352, align 8, !dbg !4229
  %call353 = call fastcc i32 @dbxout_symbol_location(%union.tree_node* %decl, %union.tree_node* %83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0), %struct.rtx_def* %87) #8, !dbg !4231
  br label %cleanup362, !dbg !4232

if.end361:                                        ; preds = %if.then108, %cond.end243, %if.end327, %cond.end295, %if.end202, %if.then35, %if.else96, %if.then90
  %number.10 = phi i32 [ %spec.select, %if.then35 ], [ %spec.select4, %if.then90 ], [ 0, %if.else96 ], [ %37, %if.then108 ], [ %number.4, %if.end202 ], [ 0, %cond.end243 ], [ %cond296, %cond.end295 ], [ %number.5, %if.end327 ], !dbg !4233
  %addr.12 = phi %struct.rtx_def* [ null, %if.then35 ], [ %spec.select5, %if.then90 ], [ %addr.3, %if.else96 ], [ null, %if.then108 ], [ null, %if.end202 ], [ null, %cond.end243 ], [ null, %cond.end295 ], [ %addr.7, %if.end327 ], !dbg !4048
  %code.10 = phi i32 [ 32, %if.then35 ], [ %spec.select6, %if.then90 ], [ %.8, %if.else96 ], [ 64, %if.then108 ], [ %code.4, %if.end202 ], [ 128, %cond.end243 ], [ 128, %cond.end295 ], [ %code.5, %if.end327 ], !dbg !4233
  %letter.9 = phi i32 [ %spec.select3, %if.then35 ], [ %spec.select7, %if.then90 ], [ %cond, %if.else96 ], [ 114, %if.then108 ], [ %letter.4, %if.end202 ], [ 0, %cond.end243 ], [ 0, %cond.end295 ], [ 86, %if.end327 ], !dbg !4233
  %type.addr.2 = phi %union.tree_node* [ %type, %if.then35 ], [ %type, %if.then90 ], [ %type, %if.else96 ], [ %type, %if.then108 ], [ %call203, %if.end202 ], [ %type, %cond.end243 ], [ %type, %cond.end295 ], [ %type, %if.end327 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.2, metadata !4014, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %letter.9, metadata !4017, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %code.10, metadata !4018, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.12, metadata !4019, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %number.10, metadata !4020, metadata !DIExpression()), !dbg !4048
  call fastcc void @emit_pending_bincls_if_required() #8, !dbg !4234
  call fastcc void @dbxout_begin_complex_stabs_noforcetext() #8, !dbg !4235
  call fastcc void @dbxout_symbol_name(%union.tree_node* %decl, i8* %suffix, i32 %letter.9) #8, !dbg !4236
  call fastcc void @dbxout_type(%union.tree_node* %type.addr.2, i32 0) #8, !dbg !4237
  call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* %decl, i32 %code.10, %struct.rtx_def* %addr.12, i8* null, i32 %number.10) #8, !dbg !4238
  br label %cleanup362, !dbg !4239

cleanup362:                                       ; preds = %if.end74, %if.then333, %if.else328, %if.end341, %if.then159, %if.then16, %cleanup, %if.end361
  %retval.4 = phi i32 [ 0, %cleanup ], [ 1, %if.end361 ], [ 0, %if.end74 ], [ 0, %if.then16 ], [ 0, %if.then159 ], [ 1, %if.end341 ], [ 0, %if.then333 ], [ 0, %if.else328 ], !dbg !4048
  ret i32 %retval.4, !dbg !4240
}

; Function Attrs: nounwind uwtable
define dso_local i32 @dbxout_syms(%union.tree_node* %syms) local_unnamed_addr #5 !dbg !4241 {
entry:
  %temp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %syms, metadata !4245, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 0, metadata !4246, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i8* null, metadata !4247, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4248, metadata !DIExpression()), !dbg !4254
  %0 = bitcast i32* %temp to i8*, !dbg !4255
  br label %while.cond, !dbg !4256

while.cond:                                       ; preds = %if.end16, %entry
  %syms_prev.0 = phi %union.tree_node* [ null, %entry ], [ %syms_prev.1, %if.end16 ], !dbg !4254
  %comm_prev.0 = phi i8* [ null, %entry ], [ %call, %if.end16 ], !dbg !4254
  %result.0 = phi i32 [ 0, %entry ], [ %add, %if.end16 ], !dbg !4254
  %syms.addr.0 = phi %union.tree_node* [ %syms, %entry ], [ %3, %if.end16 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %syms.addr.0, metadata !4245, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 %result.0, metadata !4246, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i8* %comm_prev.0, metadata !4247, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %syms_prev.0, metadata !4248, metadata !DIExpression()), !dbg !4254
  %tobool = icmp eq %union.tree_node* %syms.addr.0, null, !dbg !4256
  br i1 %tobool, label %while.end, label %while.body, !dbg !4256

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4257
  call void @llvm.dbg.value(metadata i32* %temp, metadata !4249, metadata !DIExpression(DW_OP_deref)), !dbg !4255
  %call = call fastcc i8* @dbxout_common_check(%union.tree_node* nonnull %syms.addr.0, i32* nonnull %temp) #8, !dbg !4258
  call void @llvm.dbg.value(metadata i8* %call, metadata !4253, metadata !DIExpression()), !dbg !4255
  %cmp = icmp eq i8* %call, null, !dbg !4259
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4260

land.rhs:                                         ; preds = %while.body
  %cmp1 = icmp eq i8* %comm_prev.0, null, !dbg !4261
  br i1 %cmp1, label %land.end, label %lor.rhs, !dbg !4262

lor.rhs:                                          ; preds = %land.rhs
  %call2 = call i32 @strcmp(i8* nonnull %call, i8* nonnull %comm_prev.0) #6, !dbg !4263
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4262
  br label %land.end, !dbg !4262

land.end:                                         ; preds = %while.body, %land.rhs, %lor.rhs
  %1 = phi i1 [ false, %while.body ], [ true, %land.rhs ], [ %tobool3, %lor.rhs ], !dbg !4255
  call void @llvm.dbg.value(metadata i1 %1, metadata !4251, metadata !DIExpression()), !dbg !4255
  %cmp4 = icmp eq i8* %comm_prev.0, null, !dbg !4264
  br i1 %cmp4, label %land.end11, label %land.rhs5, !dbg !4265

land.rhs5:                                        ; preds = %land.end
  br i1 %cmp, label %land.end11, label %lor.rhs7, !dbg !4266

lor.rhs7:                                         ; preds = %land.rhs5
  %call8 = call i32 @strcmp(i8* nonnull %call, i8* nonnull %comm_prev.0) #6, !dbg !4267
  %tobool9 = icmp ne i32 %call8, 0, !dbg !4266
  br label %land.end11, !dbg !4266

land.end11:                                       ; preds = %land.end, %land.rhs5, %lor.rhs7
  %2 = phi i1 [ false, %land.end ], [ true, %land.rhs5 ], [ %tobool9, %lor.rhs7 ], !dbg !4255
  call void @llvm.dbg.value(metadata i1 %2, metadata !4252, metadata !DIExpression()), !dbg !4255
  br i1 %2, label %if.then, label %if.end, !dbg !4268

if.then:                                          ; preds = %land.end11
  call fastcc void @dbxout_common_name(%union.tree_node* %syms_prev.0, i8* %comm_prev.0, i32 228) #8, !dbg !4269
  br label %if.end, !dbg !4269

if.end:                                           ; preds = %if.then, %land.end11
  br i1 %1, label %if.then15, label %if.end16, !dbg !4271

if.then15:                                        ; preds = %if.end
  call fastcc void @dbxout_common_name(%union.tree_node* nonnull %syms.addr.0, i8* %call, i32 226) #8, !dbg !4272
  call void @llvm.dbg.value(metadata %union.tree_node* %syms.addr.0, metadata !4248, metadata !DIExpression()), !dbg !4254
  br label %if.end16, !dbg !4275

if.end16:                                         ; preds = %if.then15, %if.end
  %syms_prev.1 = phi %union.tree_node* [ %syms.addr.0, %if.then15 ], [ %syms_prev.0, %if.end ], !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %syms_prev.1, metadata !4248, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i8* %call, metadata !4247, metadata !DIExpression()), !dbg !4254
  %call17 = call i32 @dbxout_symbol(%union.tree_node* nonnull %syms.addr.0, i32 1) #8, !dbg !4276
  %add = add nsw i32 %result.0, %call17, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %add, metadata !4246, metadata !DIExpression()), !dbg !4254
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %syms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4278
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4278
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4245, metadata !DIExpression()), !dbg !4254
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4279
  br label %while.cond, !dbg !4256, !llvm.loop !4280

while.end:                                        ; preds = %while.cond
  %syms_prev.0.lcssa = phi %union.tree_node* [ %syms_prev.0, %while.cond ], !dbg !4254
  %comm_prev.0.lcssa = phi i8* [ %comm_prev.0, %while.cond ], !dbg !4254
  %result.0.lcssa = phi i32 [ %result.0, %while.cond ], !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %syms_prev.0.lcssa, metadata !4248, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i8* %comm_prev.0.lcssa, metadata !4247, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %syms_prev.0.lcssa, metadata !4248, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i8* %comm_prev.0.lcssa, metadata !4247, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %syms_prev.0.lcssa, metadata !4248, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i8* %comm_prev.0.lcssa, metadata !4247, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 %result.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4254
  %cmp18 = icmp eq i8* %comm_prev.0.lcssa, null, !dbg !4281
  br i1 %cmp18, label %if.end20, label %if.then19, !dbg !4283

if.then19:                                        ; preds = %while.end
  call fastcc void @dbxout_common_name(%union.tree_node* %syms_prev.0.lcssa, i8* nonnull %comm_prev.0.lcssa, i32 228) #8, !dbg !4284
  br label %if.end20, !dbg !4284

if.end20:                                         ; preds = %while.end, %if.then19
  ret i32 %result.0.lcssa, !dbg !4285
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @dbxout_common_check(%union.tree_node* %decl, i32* %value) unnamed_addr #5 !dbg !4286 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4290, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32* %value, metadata !4291, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i8* null, metadata !4294, metadata !DIExpression()), !dbg !4298
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4299
  %bf.load = load i64, i64* %0, align 8, !dbg !4299
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4301
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4301
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !4302

lor.lhs.false:                                    ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 67108864, !dbg !4303
  %tobool = icmp eq i64 %bf.cast42, 0, !dbg !4303
  br i1 %tobool, label %cleanup, label %lor.lhs.false5, !dbg !4304

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4305
  %1 = bitcast i40* %decl_flag_2 to i64*, !dbg !4305
  %bf.load6 = load i64, i64* %1, align 8, !dbg !4305
  %bf.cast93 = and i64 %bf.load6, 67108864, !dbg !4305
  %tobool10 = icmp eq i64 %bf.cast93, 0, !dbg !4305
  br i1 %tobool10, label %cleanup, label %lor.lhs.false11, !dbg !4306

lor.lhs.false11:                                  ; preds = %lor.lhs.false5
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4307
  %2 = bitcast i24* %tls_model to i32*, !dbg !4307
  %bf.load12 = load i32, i32* %2, align 8, !dbg !4307
  %bf.clear14 = and i32 %bf.load12, 49152, !dbg !4307
  %cmp15 = icmp eq i32 %bf.clear14, 0, !dbg !4307
  br i1 %cmp15, label %lor.lhs.false16, label %cleanup, !dbg !4308

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %call = tail call fastcc zeroext i8 @is_fortran() #8, !dbg !4309
  %tobool17 = icmp eq i8 %call, 0, !dbg !4309
  br i1 %tobool17, label %cleanup, label %if.end, !dbg !4310

if.end:                                           ; preds = %lor.lhs.false16
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4311
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4311
  %tobool18 = icmp eq %struct.rtx_def* %3, null, !dbg !4311
  br i1 %tobool18, label %cond.false, label %cond.true, !dbg !4311

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4311

cond.false:                                       ; preds = %if.end
  tail call void @make_decl_rtl(%union.tree_node* %decl) #6, !dbg !4311
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4311
  br label %cond.end, !dbg !4311

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %3, %cond.true ], !dbg !4311
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !4292, metadata !DIExpression()), !dbg !4298
  %cmp23 = icmp eq %struct.rtx_def* %cond, null, !dbg !4312
  br i1 %cmp23, label %cleanup, label %lor.lhs.false24, !dbg !4314

lor.lhs.false24:                                  ; preds = %cond.end
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !4315
  %bf.load25 = load i32, i32* %4, align 8, !dbg !4315
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !4315
  %cmp27 = icmp eq i32 %bf.clear26, 43, !dbg !4316
  br i1 %cmp27, label %if.end29, label %cleanup, !dbg !4317

if.end29:                                         ; preds = %lor.lhs.false24
  %call30 = tail call %union.tree_node* @decl_value_expr_lookup(%union.tree_node* %decl) #6, !dbg !4318
  %call31 = tail call fastcc %struct.rtx_def* @dbxout_expand_expr(%union.tree_node* %call30) #8, !dbg !4319
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call31, metadata !4293, metadata !DIExpression()), !dbg !4298
  %cmp32 = icmp eq %struct.rtx_def* %call31, null, !dbg !4320
  br i1 %cmp32, label %cleanup, label %lor.lhs.false33, !dbg !4322

lor.lhs.false33:                                  ; preds = %if.end29
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 0, !dbg !4323
  %bf.load34 = load i32, i32* %5, align 8, !dbg !4323
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !4323
  %cmp36 = icmp eq i32 %bf.clear35, 43, !dbg !4324
  br i1 %cmp36, label %if.end38, label %cleanup, !dbg !4325

if.end38:                                         ; preds = %lor.lhs.false33
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4326
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4326
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !4293, metadata !DIExpression()), !dbg !4298
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !4327
  %bf.load39 = load i32, i32* %7, align 8, !dbg !4327
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !4327
  %cmp41 = icmp eq i32 %bf.clear40, 35, !dbg !4329
  br i1 %cmp41, label %if.then42, label %if.end47, !dbg !4330

if.then42:                                        ; preds = %if.end38
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4331
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !4331
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4331
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !4293, metadata !DIExpression()), !dbg !4298
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !4332
  %bf.load48.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !4333
  %.pre = and i32 %bf.load48.pre, 65535, !dbg !4333
  br label %if.end47, !dbg !4334

if.end47:                                         ; preds = %if.then42, %if.end38
  %bf.clear49.pre-phi = phi i32 [ %.pre, %if.then42 ], [ %bf.clear40, %if.end38 ], !dbg !4333
  %bf.load58 = phi i32 [ %bf.load48.pre, %if.then42 ], [ %bf.load39, %if.end38 ], !dbg !4333
  %sym_addr.0 = phi %struct.rtx_def* [ %8, %if.then42 ], [ %6, %if.end38 ], !dbg !4298
  call void @llvm.dbg.value(metadata %struct.rtx_def* %sym_addr.0, metadata !4293, metadata !DIExpression()), !dbg !4298
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sym_addr.0, i64 0, i32 0, !dbg !4333
  %cmp50 = icmp eq i32 %bf.clear49.pre-phi, 45, !dbg !4335
  br i1 %cmp50, label %land.lhs.true, label %lor.lhs.false51, !dbg !4336

lor.lhs.false51:                                  ; preds = %if.end47
  %cmp54 = icmp eq i32 %bf.clear49.pre-phi, 49, !dbg !4337
  br i1 %cmp54, label %land.lhs.true, label %cleanup, !dbg !4338

land.lhs.true:                                    ; preds = %lor.lhs.false51, %if.end47
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4339
  %10 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4339
  %cmp56 = icmp eq %union.tree_node* %10, null, !dbg !4340
  br i1 %cmp56, label %if.then57, label %cleanup, !dbg !4341

if.then57:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4295, metadata !DIExpression()), !dbg !4342
  %trunc = trunc i32 %bf.load58 to i16, !dbg !4343
  switch i16 %trunc, label %sw.default [
    i16 49, label %sw.bb
    i16 45, label %sw.bb139
  ], !dbg !4343

sw.bb:                                            ; preds = %if.then57
  %arrayidx62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sym_addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4344
  %11 = bitcast %union.rtunion_def* %arrayidx62 to i32**, !dbg !4344
  %12 = load i32*, i32** %11, align 8, !dbg !4344
  %bf.load64 = load i32, i32* %12, align 8, !dbg !4344
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !4344
  %cmp66 = icmp eq i32 %bf.clear65, 30, !dbg !4344
  %13 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 52), align 8, !dbg !4347
  br i1 %cmp66, label %if.then67, label %if.else, !dbg !4348

if.then67:                                        ; preds = %sw.bb
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sym_addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4349
  %rt_rtx71 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !4349
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !4349
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !4349
  %16 = load i8*, i8** %rt_str, align 8, !dbg !4349
  %call75 = tail call i8* %13(i8* %16) #6, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %call75, metadata !4294, metadata !DIExpression()), !dbg !4298
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !4352
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !4352
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, !dbg !4352
  %arrayidx81 = bitcast %union.u* %u80 to i64*, !dbg !4352
  %18 = load i64, i64* %arrayidx81, align 8, !dbg !4352
  %conv = trunc i64 %18 to i32, !dbg !4352
  store i32 %conv, i32* %value, align 4, !dbg !4353
  %19 = bitcast %union.rtunion_def* %14 to i32**, !dbg !4354
  %20 = load i32*, i32** %19, align 8, !dbg !4354
  %bf.load86 = load i32, i32* %20, align 8, !dbg !4354
  %bf.clear88 = and i32 %bf.load86, 67108864, !dbg !4354
  %tobool89 = icmp eq i32 %bf.clear88, 0, !dbg !4354
  br i1 %tobool89, label %cond.false91, label %sw.epilog, !dbg !4354

cond.false91:                                     ; preds = %if.then67
  %21 = getelementptr inbounds i32, i32* %20, i64 6, !dbg !4354
  %rt_tree = bitcast i32* %21 to %union.tree_node**, !dbg !4354
  %22 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !4354
  br label %sw.epilog, !dbg !4354

if.else:                                          ; preds = %sw.bb
  %rt_str108 = getelementptr inbounds i32, i32* %12, i64 2, !dbg !4355
  %23 = bitcast i32* %rt_str108 to i8**, !dbg !4355
  %24 = load i8*, i8** %23, align 8, !dbg !4355
  %call109 = tail call i8* %13(i8* %24) #6, !dbg !4357
  call void @llvm.dbg.value(metadata i8* %call109, metadata !4294, metadata !DIExpression()), !dbg !4298
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sym_addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4358
  %rt_rtx113 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !4358
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !4358
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 1, !dbg !4358
  %arrayidx116 = bitcast %union.u* %u114 to i64*, !dbg !4358
  %27 = load i64, i64* %arrayidx116, align 8, !dbg !4358
  %conv117 = trunc i64 %27 to i32, !dbg !4358
  store i32 %conv117, i32* %value, align 4, !dbg !4359
  %28 = load i32*, i32** %11, align 8, !dbg !4360
  %bf.load122 = load i32, i32* %28, align 8, !dbg !4360
  %bf.clear124 = and i32 %bf.load122, 67108864, !dbg !4360
  %tobool125 = icmp eq i32 %bf.clear124, 0, !dbg !4360
  br i1 %tobool125, label %cond.false127, label %sw.epilog, !dbg !4360

cond.false127:                                    ; preds = %if.else
  %29 = getelementptr inbounds i32, i32* %28, i64 6, !dbg !4360
  %rt_tree135 = bitcast i32* %29 to %union.tree_node**, !dbg !4360
  %30 = load %union.tree_node*, %union.tree_node** %rt_tree135, align 8, !dbg !4360
  br label %sw.epilog, !dbg !4360

sw.bb139:                                         ; preds = %if.then57
  %31 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 52), align 8, !dbg !4361
  %rt_str143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sym_addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !4362
  %32 = load i8*, i8** %rt_str143, align 8, !dbg !4362
  %call144 = tail call i8* %31(i8* %32) #6, !dbg !4363
  call void @llvm.dbg.value(metadata i8* %call144, metadata !4294, metadata !DIExpression()), !dbg !4298
  store i32 0, i32* %value, align 4, !dbg !4364
  %bf.load145 = load i32, i32* %9, align 8, !dbg !4365
  %bf.clear147 = and i32 %bf.load145, 67108864, !dbg !4365
  %tobool148 = icmp eq i32 %bf.clear147, 0, !dbg !4365
  br i1 %tobool148, label %cond.false150, label %sw.epilog, !dbg !4365

cond.false150:                                    ; preds = %sw.bb139
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %sym_addr.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4365
  %rt_tree154 = bitcast %union.rtunion_def* %33 to %union.tree_node**, !dbg !4365
  %34 = load %union.tree_node*, %union.tree_node** %rt_tree154, align 8, !dbg !4365
  br label %sw.epilog, !dbg !4365

sw.default:                                       ; preds = %if.then57
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !4366
  br label %sw.epilog, !dbg !4367

sw.epilog:                                        ; preds = %if.then67, %if.else, %sw.bb139, %cond.false150, %cond.false91, %cond.false127, %sw.default
  %name.1 = phi i8* [ null, %sw.default ], [ %call75, %if.then67 ], [ %call75, %cond.false91 ], [ %call109, %if.else ], [ %call109, %cond.false127 ], [ %call144, %sw.bb139 ], [ %call144, %cond.false150 ], !dbg !4298
  %c_decl.1 = phi %union.tree_node* [ null, %sw.default ], [ null, %if.then67 ], [ %22, %cond.false91 ], [ null, %if.else ], [ %30, %cond.false127 ], [ null, %sw.bb139 ], [ %34, %cond.false150 ], !dbg !4342
  call void @llvm.dbg.value(metadata %union.tree_node* %c_decl.1, metadata !4295, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata i8* %name.1, metadata !4294, metadata !DIExpression()), !dbg !4298
  %cmp157 = icmp eq %union.tree_node* %c_decl.1, null, !dbg !4368
  br i1 %cmp157, label %if.then166, label %lor.lhs.false159, !dbg !4370

lor.lhs.false159:                                 ; preds = %sw.epilog
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %c_decl.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4371
  %bf.load161 = load i64, i64* %35, align 8, !dbg !4371
  %bf.cast1644 = and i64 %bf.load161, 134217728, !dbg !4371
  %tobool165 = icmp eq i64 %bf.cast1644, 0, !dbg !4371
  br i1 %tobool165, label %if.then166, label %cleanup, !dbg !4372

if.then166:                                       ; preds = %lor.lhs.false159, %sw.epilog
  call void @llvm.dbg.value(metadata i8* null, metadata !4294, metadata !DIExpression()), !dbg !4298
  br label %cleanup, !dbg !4373

cleanup:                                          ; preds = %lor.lhs.false159, %lor.lhs.false33, %lor.lhs.false24, %lor.lhs.false16, %lor.lhs.false11, %lor.lhs.false5, %lor.lhs.false, %entry, %if.then166, %land.lhs.true, %lor.lhs.false51, %if.end29, %cond.end
  %retval.0 = phi i8* [ null, %lor.lhs.false16 ], [ null, %lor.lhs.false11 ], [ null, %lor.lhs.false5 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false24 ], [ null, %cond.end ], [ null, %lor.lhs.false33 ], [ null, %if.end29 ], [ null, %if.then166 ], [ %name.1, %lor.lhs.false159 ], [ null, %land.lhs.true ], [ null, %lor.lhs.false51 ], !dbg !4298
  ret i8* %retval.0, !dbg !4374
}

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_common_name(%union.tree_node* %decl, i8* %name, i32 %op) unnamed_addr #5 !dbg !4375 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4379, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata i8* %name, metadata !4380, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata i32 %op, metadata !4381, metadata !DIExpression()), !dbg !4382
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !4383
  %call = tail call i64 @strlen(i8* %name) #6, !dbg !4384
  store i64 %call, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4384
  %0 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4384
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %call, !dbg !4384
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !4384
  %cmp = icmp ugt i8* %add.ptr, %1, !dbg !4384
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4384

cond.true:                                        ; preds = %entry
  %conv = trunc i64 %call to i32, !dbg !4384
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv) #6, !dbg !4384
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4384
  %.pre1 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4384
  br label %cond.end, !dbg !4384

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi i64 [ %call, %entry ], [ %.pre1, %cond.true ], !dbg !4384
  %3 = phi i8* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !4384
  %call1 = tail call i8* @memcpy(i8* %3, i8* %name, i64 %2) #6, !dbg !4384
  %4 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4384
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4384
  %add.ptr2 = getelementptr inbounds i8, i8* %5, i64 %4, !dbg !4384
  store i8* %add.ptr2, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4384
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* %decl, i32 %op, %struct.rtx_def* null, i8* null, i32 0) #8, !dbg !4385
  ret void, !dbg !4386
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_parms(%union.tree_node* %parms) local_unnamed_addr #5 !dbg !4387 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %parms, metadata !4389, metadata !DIExpression()), !dbg !4404
  %0 = load i32, i32* @debug_nesting, align 4, !dbg !4405
  %inc = add nsw i32 %0, 1, !dbg !4405
  store i32 %inc, i32* @debug_nesting, align 4, !dbg !4405
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !4406
  br label %for.cond, !dbg !4407

for.cond:                                         ; preds = %for.inc, %entry
  %parms.addr.0 = phi %union.tree_node* [ %parms, %entry ], [ %134, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.addr.0, metadata !4389, metadata !DIExpression()), !dbg !4404
  %tobool = icmp eq %union.tree_node* %parms.addr.0, null, !dbg !4408
  br i1 %tobool, label %for.end, label %for.body, !dbg !4408

for.body:                                         ; preds = %for.cond
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4409
  %1 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4409
  %tobool1 = icmp eq %union.tree_node* %1, null, !dbg !4409
  br i1 %tobool1, label %for.inc, label %land.lhs.true, !dbg !4410

land.lhs.true:                                    ; preds = %for.body
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4411
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4411
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4412
  %cmp = icmp eq %union.tree_node* %2, %3, !dbg !4413
  br i1 %cmp, label %for.inc, label %land.lhs.true2, !dbg !4414

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4415
  %bf.load = load i64, i64* %4, align 8, !dbg !4415
  %bf.cast = and i64 %bf.load, 65535, !dbg !4415
  %arrayidx3 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !4415
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !4415
  %tobool4 = icmp eq i8 %5, 0, !dbg !4415
  br i1 %tobool4, label %for.inc, label %land.lhs.true5, !dbg !4415

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4415
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4415
  %cmp6 = icmp eq %struct.rtx_def* %6, null, !dbg !4415
  br i1 %cmp6, label %for.inc, label %land.lhs.true8, !dbg !4416

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %incoming_rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4417
  %7 = bitcast %union.tree_node** %incoming_rtl to %struct.rtx_def**, !dbg !4417
  %8 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8, !dbg !4417
  %tobool9 = icmp eq %struct.rtx_def* %8, null, !dbg !4417
  br i1 %tobool9, label %for.inc, label %if.then, !dbg !4418

if.then:                                          ; preds = %land.lhs.true8
  %call = tail call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* nonnull %8, i32 0, %struct.rtx_def* null) #6, !dbg !4419
  store %struct.rtx_def* %call, %struct.rtx_def** %7, align 8, !dbg !4420
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4421
  %tobool16 = icmp eq %struct.rtx_def* %9, null, !dbg !4421
  br i1 %tobool16, label %cond.false, label %cond.true, !dbg !4421

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !4421

cond.false:                                       ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4421
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4421
  br label %cond.end, !dbg !4421

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %9, %cond.true ], !dbg !4421
  %call21 = tail call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %cond, i32 0, %struct.rtx_def* null) #6, !dbg !4421
  tail call void @set_decl_rtl(%union.tree_node* %parms.addr.0, %struct.rtx_def* %call21) #6, !dbg !4421
  %10 = bitcast %union.tree_node** %incoming_rtl to i32**, !dbg !4422
  %11 = load i32*, i32** %10, align 8, !dbg !4422
  %bf.load24 = load i32, i32* %11, align 8, !dbg !4422
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !4422
  %cmp26 = icmp eq i32 %bf.clear25, 43, !dbg !4422
  br i1 %cmp26, label %if.then28, label %if.else53, !dbg !4423

if.then28:                                        ; preds = %cond.end
  %arrayidx31 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !4424
  %rt_rtx = bitcast i32* %arrayidx31 to %struct.rtx_def**, !dbg !4424
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4424
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !4398, metadata !DIExpression()), !dbg !4425
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 0, !dbg !4426
  %bf.load32 = load i32, i32* %13, align 8, !dbg !4426
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4426
  %cmp34 = icmp eq i32 %bf.clear33, 49, !dbg !4428
  br i1 %cmp34, label %land.lhs.true36, label %if.end, !dbg !4429

land.lhs.true36:                                  ; preds = %if.then28
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4430
  %15 = bitcast %union.rtunion_def* %14 to i32**, !dbg !4430
  %16 = load i32*, i32** %15, align 8, !dbg !4430
  %bf.load41 = load i32, i32* %16, align 8, !dbg !4430
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !4430
  %cmp43 = icmp eq i32 %bf.clear42, 30, !dbg !4430
  br i1 %cmp43, label %if.then45, label %if.end, !dbg !4431

if.then45:                                        ; preds = %land.lhs.true36
  %u50 = getelementptr inbounds i32, i32* %16, i64 2, !dbg !4432
  %arrayidx51 = bitcast i32* %u50 to i64*, !dbg !4432
  %17 = load i64, i64* %arrayidx51, align 8, !dbg !4432
  %conv52 = trunc i64 %17 to i32, !dbg !4432
  call void @llvm.dbg.value(metadata i32 %conv52, metadata !4397, metadata !DIExpression()), !dbg !4433
  br label %if.end, !dbg !4434

if.end:                                           ; preds = %if.then28, %land.lhs.true36, %if.then45
  %number.0 = phi i32 [ %conv52, %if.then45 ], [ 0, %land.lhs.true36 ], [ 0, %if.then28 ], !dbg !4435
  call void @llvm.dbg.value(metadata i32 %number.0, metadata !4397, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 160, metadata !4396, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %number.0, metadata !4397, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 112, metadata !4395, metadata !DIExpression()), !dbg !4433
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4436
  %18 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4436
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4390, metadata !DIExpression()), !dbg !4433
  br label %if.end465, !dbg !4437

if.else53:                                        ; preds = %cond.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4438
  %tobool56 = icmp eq %struct.rtx_def* %19, null, !dbg !4438
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !4438
  br i1 %tobool56, label %cond.false60, label %cond.true57, !dbg !4438

cond.true57:                                      ; preds = %if.else53
  %.pre68 = bitcast %struct.rtx_def** %rtl to i32**, !dbg !4438
  br label %cond.end63, !dbg !4438

cond.false60:                                     ; preds = %if.else53
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4438
  %.phi.trans.insert = bitcast %struct.rtx_def** %rtl to i32**, !dbg !4439
  %cond641.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !4438
  %21 = bitcast i32* %cond641.pre to %struct.rtx_def*, !dbg !4438
  br label %cond.end63, !dbg !4438

cond.end63:                                       ; preds = %cond.false60, %cond.true57
  %.pre-phi = phi i32** [ %.phi.trans.insert, %cond.false60 ], [ %.pre68, %cond.true57 ], !dbg !4438
  %cond8261 = phi %struct.rtx_def* [ %21, %cond.false60 ], [ %19, %cond.true57 ]
  %22 = phi %struct.rtx_def* [ %21, %cond.false60 ], [ %19, %cond.true57 ]
  %cond17115 = phi %struct.rtx_def* [ %21, %cond.false60 ], [ %19, %cond.true57 ]
  %23 = phi %struct.rtx_def* [ %21, %cond.false60 ], [ %19, %cond.true57 ]
  %cond15111 = phi %struct.rtx_def* [ %21, %cond.false60 ], [ %19, %cond.true57 ]
  %24 = phi %struct.rtx_def* [ %21, %cond.false60 ], [ %19, %cond.true57 ]
  %cond13528 = phi i32* [ %cond641.pre, %cond.false60 ], [ %20, %cond.true57 ]
  %25 = phi %struct.rtx_def* [ %21, %cond.false60 ], [ %19, %cond.true57 ]
  %cond641 = phi i32* [ %cond641.pre, %cond.false60 ], [ %20, %cond.true57 ], !dbg !4438
  %bf.load65 = load i32, i32* %cond641, align 8, !dbg !4438
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !4438
  %cmp67 = icmp eq i32 %bf.clear66, 37, !dbg !4438
  br i1 %cmp67, label %if.then69, label %if.else124, !dbg !4440

if.then69:                                        ; preds = %cond.end63
  call void @llvm.dbg.value(metadata i32 64, metadata !4396, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 80, metadata !4395, metadata !DIExpression()), !dbg !4433
  %26 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4441
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !4390, metadata !DIExpression()), !dbg !4433
  %tobool74 = icmp eq %struct.rtx_def* %22, null, !dbg !4442
  br i1 %tobool74, label %cond.false78, label %cond.true75, !dbg !4442

cond.true75:                                      ; preds = %if.then69
  br label %cond.end81, !dbg !4442

cond.false78:                                     ; preds = %if.then69
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4442
  %cond82.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4442
  br label %cond.end81, !dbg !4442

cond.end81:                                       ; preds = %cond.false78, %cond.true75
  %cond82 = phi %struct.rtx_def* [ %cond82.pre, %cond.false78 ], [ %cond8261, %cond.true75 ], !dbg !4442
  %call83 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cond82) #8, !dbg !4442
  %cmp84 = icmp ult i32 %call83, 53, !dbg !4444
  br i1 %cmp84, label %if.then86, label %if.else98, !dbg !4445

if.then86:                                        ; preds = %cond.end81
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4446
  %tobool89 = icmp eq %struct.rtx_def* %27, null, !dbg !4446
  br i1 %tobool89, label %cond.false93, label %cond.true90, !dbg !4446

cond.true90:                                      ; preds = %if.then86
  br label %if.end120, !dbg !4446

cond.false93:                                     ; preds = %if.then86
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4446
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4446
  br label %if.end120, !dbg !4446

if.else98:                                        ; preds = %cond.end81
  %29 = load i32*, i32** %10, align 8, !dbg !4447
  %bf.load101 = load i32, i32* %29, align 8, !dbg !4447
  %bf.clear102 = and i32 %bf.load101, 65535, !dbg !4447
  %cmp103 = icmp eq i32 %bf.clear102, 15, !dbg !4449
  %.cast = bitcast i32* %29 to %struct.rtx_def*, !dbg !4450
  br i1 %cmp103, label %if.then105, label %if.end120, !dbg !4451

if.then105:                                       ; preds = %if.else98
  %u108 = getelementptr inbounds i32, i32* %29, i64 2, !dbg !4452
  %rt_rtvec = bitcast i32* %u108 to %struct.rtvec_def**, !dbg !4452
  %30 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4452
  %arrayidx111 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %30, i64 0, i32 1, i64 0, !dbg !4452
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx111, align 8, !dbg !4452
  %arrayidx114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4452
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !4452
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !4452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !4401, metadata !DIExpression()), !dbg !4453
  br label %if.end120, !dbg !4454

if.end120:                                        ; preds = %if.then105, %if.else98, %cond.true90, %cond.false93
  %best_rtl.1 = phi %struct.rtx_def* [ %27, %cond.true90 ], [ %28, %cond.false93 ], [ %32, %if.then105 ], [ %.cast, %if.else98 ], !dbg !4455
  call void @llvm.dbg.value(metadata %struct.rtx_def* %best_rtl.1, metadata !4401, metadata !DIExpression()), !dbg !4453
  %call121 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %best_rtl.1) #8, !dbg !4456
  %idxprom122 = zext i32 %call121 to i64, !dbg !4456
  %arrayidx123 = getelementptr inbounds [53 x i32], [53 x i32]* @svr4_dbx_register_map, i64 0, i64 %idxprom122, !dbg !4456
  %33 = load i32, i32* %arrayidx123, align 4, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %33, metadata !4397, metadata !DIExpression()), !dbg !4433
  br label %if.end465, !dbg !4457

if.else124:                                       ; preds = %cond.end63
  %tobool127 = icmp eq %struct.rtx_def* %25, null, !dbg !4458
  br i1 %tobool127, label %cond.false131, label %cond.true128, !dbg !4458

cond.true128:                                     ; preds = %if.else124
  br label %cond.end134, !dbg !4458

cond.false131:                                    ; preds = %if.else124
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4458
  %cond1352.pre = load i32*, i32** %.pre-phi, align 8, !dbg !4458
  %34 = bitcast i32* %cond1352.pre to %struct.rtx_def*, !dbg !4458
  br label %cond.end134, !dbg !4458

cond.end134:                                      ; preds = %cond.false131, %cond.true128
  %cond17114 = phi %struct.rtx_def* [ %34, %cond.false131 ], [ %cond17115, %cond.true128 ]
  %35 = phi %struct.rtx_def* [ %34, %cond.false131 ], [ %23, %cond.true128 ]
  %cond15110 = phi %struct.rtx_def* [ %34, %cond.false131 ], [ %cond15111, %cond.true128 ]
  %36 = phi %struct.rtx_def* [ %34, %cond.false131 ], [ %24, %cond.true128 ]
  %cond1352 = phi i32* [ %cond1352.pre, %cond.false131 ], [ %cond13528, %cond.true128 ], !dbg !4458
  %bf.load136 = load i32, i32* %cond1352, align 8, !dbg !4458
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !4458
  %cmp138 = icmp eq i32 %bf.clear137, 43, !dbg !4458
  br i1 %cmp138, label %land.lhs.true140, label %if.else264, !dbg !4460

land.lhs.true140:                                 ; preds = %cond.end134
  %tobool143 = icmp eq %struct.rtx_def* %36, null, !dbg !4461
  br i1 %tobool143, label %cond.false147, label %cond.true144, !dbg !4461

cond.true144:                                     ; preds = %land.lhs.true140
  br label %cond.end150, !dbg !4461

cond.false147:                                    ; preds = %land.lhs.true140
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4461
  %cond151.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4461
  br label %cond.end150, !dbg !4461

cond.end150:                                      ; preds = %cond.false147, %cond.true144
  %cond17113 = phi %struct.rtx_def* [ %cond151.pre, %cond.false147 ], [ %cond17114, %cond.true144 ]
  %37 = phi %struct.rtx_def* [ %cond151.pre, %cond.false147 ], [ %35, %cond.true144 ]
  %cond151 = phi %struct.rtx_def* [ %cond151.pre, %cond.false147 ], [ %cond15110, %cond.true144 ], !dbg !4461
  %arrayidx154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond151, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4461
  %38 = bitcast %union.rtunion_def* %arrayidx154 to i32**, !dbg !4461
  %39 = load i32*, i32** %38, align 8, !dbg !4461
  %bf.load156 = load i32, i32* %39, align 8, !dbg !4461
  %bf.clear157 = and i32 %bf.load156, 65535, !dbg !4461
  %cmp158 = icmp eq i32 %bf.clear157, 37, !dbg !4461
  br i1 %cmp158, label %land.lhs.true160, label %if.else264, !dbg !4462

land.lhs.true160:                                 ; preds = %cond.end150
  %tobool163 = icmp eq %struct.rtx_def* %37, null, !dbg !4463
  br i1 %tobool163, label %cond.false167, label %cond.true164, !dbg !4463

cond.true164:                                     ; preds = %land.lhs.true160
  br label %cond.end170, !dbg !4463

cond.false167:                                    ; preds = %land.lhs.true160
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4463
  %cond171.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4463
  br label %cond.end170, !dbg !4463

cond.end170:                                      ; preds = %cond.false167, %cond.true164
  %cond171 = phi %struct.rtx_def* [ %cond171.pre, %cond.false167 ], [ %cond17113, %cond.true164 ], !dbg !4463
  %arrayidx174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond171, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4463
  %rt_rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**, !dbg !4463
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx175, align 8, !dbg !4463
  %call176 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %40) #8, !dbg !4463
  %cmp177 = icmp eq i32 %call176, 6, !dbg !4464
  br i1 %cmp177, label %if.else264, label %land.lhs.true179, !dbg !4465

land.lhs.true179:                                 ; preds = %cond.end170
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4466
  %tobool182 = icmp eq %struct.rtx_def* %41, null, !dbg !4466
  br i1 %tobool182, label %cond.false186, label %cond.true183, !dbg !4466

cond.true183:                                     ; preds = %land.lhs.true179
  br label %cond.end189, !dbg !4466

cond.false186:                                    ; preds = %land.lhs.true179
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4466
  %cond190.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4466
  br label %cond.end189, !dbg !4466

cond.end189:                                      ; preds = %cond.false186, %cond.true183
  %cond190 = phi %struct.rtx_def* [ %cond190.pre, %cond.false186 ], [ %41, %cond.true183 ], !dbg !4466
  %arrayidx193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond190, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4466
  %rt_rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**, !dbg !4466
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !4466
  %call195 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %42) #8, !dbg !4466
  %cmp196 = icmp eq i32 %call195, 7, !dbg !4467
  br i1 %cmp196, label %if.else264, label %land.lhs.true198, !dbg !4468

land.lhs.true198:                                 ; preds = %cond.end189
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4469
  %tobool201 = icmp eq %struct.rtx_def* %43, null, !dbg !4469
  br i1 %tobool201, label %cond.false205, label %cond.true202, !dbg !4469

cond.true202:                                     ; preds = %land.lhs.true198
  br label %cond.end208, !dbg !4469

cond.false205:                                    ; preds = %land.lhs.true198
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4469
  %cond209.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4469
  br label %cond.end208, !dbg !4469

cond.end208:                                      ; preds = %cond.false205, %cond.true202
  %cond209 = phi %struct.rtx_def* [ %cond209.pre, %cond.false205 ], [ %43, %cond.true202 ], !dbg !4469
  %arrayidx212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond209, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4469
  %rt_rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**, !dbg !4469
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx213, align 8, !dbg !4469
  %call214 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %44) #8, !dbg !4469
  %cmp215 = icmp eq i32 %call214, 16, !dbg !4470
  br i1 %cmp215, label %if.else264, label %if.then217, !dbg !4471

if.then217:                                       ; preds = %cond.end208
  call void @llvm.dbg.value(metadata i32 64, metadata !4396, metadata !DIExpression()), !dbg !4433
  %45 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !4472
  %tobool219 = icmp eq i8 %45, 0, !dbg !4472
  %conv221 = select i1 %tobool219, i8 80, i8 97, !dbg !4474
  call void @llvm.dbg.value(metadata i8 %conv221, metadata !4395, metadata !DIExpression()), !dbg !4433
  %46 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4475
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !4390, metadata !DIExpression()), !dbg !4433
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4476
  %tobool226 = icmp eq %struct.rtx_def* %47, null, !dbg !4476
  br i1 %tobool226, label %cond.false230, label %cond.true227, !dbg !4476

cond.true227:                                     ; preds = %if.then217
  br label %cond.end233, !dbg !4476

cond.false230:                                    ; preds = %if.then217
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4476
  %cond234.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4476
  br label %cond.end233, !dbg !4476

cond.end233:                                      ; preds = %cond.false230, %cond.true227
  %cond234 = phi %struct.rtx_def* [ %cond234.pre, %cond.false230 ], [ %47, %cond.true227 ], !dbg !4476
  %arrayidx237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond234, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4476
  %rt_rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**, !dbg !4476
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx238, align 8, !dbg !4476
  %call239 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %48) #8, !dbg !4476
  %cmp240 = icmp ult i32 %call239, 53, !dbg !4478
  br i1 %cmp240, label %if.then242, label %if.else259, !dbg !4479

if.then242:                                       ; preds = %cond.end233
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4480
  %tobool245 = icmp eq %struct.rtx_def* %49, null, !dbg !4480
  br i1 %tobool245, label %cond.false249, label %cond.true246, !dbg !4480

cond.true246:                                     ; preds = %if.then242
  br label %cond.end252, !dbg !4480

cond.false249:                                    ; preds = %if.then242
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4480
  %cond253.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4480
  br label %cond.end252, !dbg !4480

cond.end252:                                      ; preds = %cond.false249, %cond.true246
  %cond253 = phi %struct.rtx_def* [ %cond253.pre, %cond.false249 ], [ %49, %cond.true246 ], !dbg !4480
  %arrayidx256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond253, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4480
  %rt_rtx257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtx_def**, !dbg !4480
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx257, align 8, !dbg !4480
  %call258 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %50) #8, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %call258, metadata !4397, metadata !DIExpression()), !dbg !4433
  br label %if.end465, !dbg !4481

if.else259:                                       ; preds = %cond.end233
  %51 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8, !dbg !4482
  %call262 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %51) #8, !dbg !4482
  call void @llvm.dbg.value(metadata i32 %call262, metadata !4397, metadata !DIExpression()), !dbg !4433
  br label %if.end465

if.else264:                                       ; preds = %cond.end208, %cond.end189, %cond.end170, %cond.end150, %cond.end134
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4483
  %tobool267 = icmp eq %struct.rtx_def* %52, null, !dbg !4483
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 0, !dbg !4483
  br i1 %tobool267, label %cond.false271, label %cond.true268, !dbg !4483

cond.true268:                                     ; preds = %if.else264
  br label %cond.end274, !dbg !4483

cond.false271:                                    ; preds = %if.else264
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4483
  %cond2753.pre = load i32*, i32** %.pre-phi, align 8, !dbg !4483
  %54 = bitcast i32* %cond2753.pre to %struct.rtx_def*, !dbg !4483
  br label %cond.end274, !dbg !4483

cond.end274:                                      ; preds = %cond.false271, %cond.true268
  %cond33759 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %55 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond31355 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %56 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond44552 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %57 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond42544 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %58 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond40137 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %59 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond38331 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %60 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond367426 = phi i32* [ %cond2753.pre, %cond.false271 ], [ %53, %cond.true268 ]
  %61 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond29122 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %62 = phi %struct.rtx_def* [ %54, %cond.false271 ], [ %52, %cond.true268 ]
  %cond2753 = phi i32* [ %cond2753.pre, %cond.false271 ], [ %53, %cond.true268 ], !dbg !4483
  %bf.load276 = load i32, i32* %cond2753, align 8, !dbg !4483
  %bf.clear277 = and i32 %bf.load276, 65535, !dbg !4483
  %cmp278 = icmp eq i32 %bf.clear277, 43, !dbg !4483
  br i1 %cmp278, label %land.lhs.true280, label %if.else356, !dbg !4485

land.lhs.true280:                                 ; preds = %cond.end274
  %tobool283 = icmp eq %struct.rtx_def* %62, null, !dbg !4486
  br i1 %tobool283, label %cond.false287, label %cond.true284, !dbg !4486

cond.true284:                                     ; preds = %land.lhs.true280
  br label %cond.end290, !dbg !4486

cond.false287:                                    ; preds = %land.lhs.true280
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4486
  %cond291.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4486
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond291.pre, i64 0, i32 0, !dbg !4486
  br label %cond.end290, !dbg !4486

cond.end290:                                      ; preds = %cond.false287, %cond.true284
  %cond33758 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %cond33759, %cond.true284 ]
  %64 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %55, %cond.true284 ]
  %cond31354 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %cond31355, %cond.true284 ]
  %65 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %56, %cond.true284 ]
  %cond44551 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %cond44552, %cond.true284 ]
  %66 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %57, %cond.true284 ]
  %cond42543 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %cond42544, %cond.true284 ]
  %67 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %58, %cond.true284 ]
  %cond40136 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %cond40137, %cond.true284 ]
  %68 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %59, %cond.true284 ]
  %cond38330 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %cond38331, %cond.true284 ]
  %69 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %60, %cond.true284 ]
  %cond367425 = phi i32* [ %63, %cond.false287 ], [ %cond367426, %cond.true284 ]
  %70 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %61, %cond.true284 ]
  %cond291 = phi %struct.rtx_def* [ %cond291.pre, %cond.false287 ], [ %cond29122, %cond.true284 ], !dbg !4486
  %arrayidx294 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond291, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4486
  %71 = bitcast %union.rtunion_def* %arrayidx294 to i32**, !dbg !4486
  %72 = load i32*, i32** %71, align 8, !dbg !4486
  %bf.load296 = load i32, i32* %72, align 8, !dbg !4486
  %bf.clear297 = and i32 %bf.load296, 65535, !dbg !4486
  %cmp298 = icmp eq i32 %bf.clear297, 43, !dbg !4486
  br i1 %cmp298, label %if.then300, label %if.else356, !dbg !4487

if.then300:                                       ; preds = %cond.end290
  call void @llvm.dbg.value(metadata i32 160, metadata !4396, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 118, metadata !4395, metadata !DIExpression()), !dbg !4433
  %73 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4488
  call void @llvm.dbg.value(metadata %union.tree_node* %73, metadata !4390, metadata !DIExpression()), !dbg !4433
  %tobool305 = icmp eq %struct.rtx_def* %65, null, !dbg !4490
  br i1 %tobool305, label %cond.false309, label %cond.true306, !dbg !4490

cond.true306:                                     ; preds = %if.then300
  br label %cond.end312, !dbg !4490

cond.false309:                                    ; preds = %if.then300
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4490
  %cond313.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4490
  br label %cond.end312, !dbg !4490

cond.end312:                                      ; preds = %cond.false309, %cond.true306
  %cond33757 = phi %struct.rtx_def* [ %cond313.pre, %cond.false309 ], [ %cond33758, %cond.true306 ]
  %74 = phi %struct.rtx_def* [ %cond313.pre, %cond.false309 ], [ %64, %cond.true306 ]
  %cond313 = phi %struct.rtx_def* [ %cond313.pre, %cond.false309 ], [ %cond31354, %cond.true306 ], !dbg !4490
  %arrayidx316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond313, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4490
  %rt_rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**, !dbg !4490
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx317, align 8, !dbg !4490
  %arrayidx320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4490
  %76 = bitcast %union.rtunion_def* %arrayidx320 to i32**, !dbg !4490
  %77 = load i32*, i32** %76, align 8, !dbg !4490
  %bf.load322 = load i32, i32* %77, align 8, !dbg !4490
  %bf.clear323 = and i32 %bf.load322, 65535, !dbg !4490
  %cmp324 = icmp eq i32 %bf.clear323, 37, !dbg !4490
  br i1 %cmp324, label %if.end465, label %if.then326, !dbg !4492

if.then326:                                       ; preds = %cond.end312
  %tobool329 = icmp eq %struct.rtx_def* %74, null, !dbg !4493
  br i1 %tobool329, label %cond.false333, label %cond.true330, !dbg !4493

cond.true330:                                     ; preds = %if.then326
  br label %cond.end336, !dbg !4493

cond.false333:                                    ; preds = %if.then326
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4493
  %cond337.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4493
  br label %cond.end336, !dbg !4493

cond.end336:                                      ; preds = %cond.false333, %cond.true330
  %cond337 = phi %struct.rtx_def* [ %cond337.pre, %cond.false333 ], [ %cond33757, %cond.true330 ], !dbg !4493
  %arrayidx340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond337, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4493
  %rt_rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**, !dbg !4493
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx341, align 8, !dbg !4493
  %arrayidx344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4493
  %rt_rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**, !dbg !4493
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx345, align 8, !dbg !4493
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4493
  %rt_rtx349 = bitcast %union.rtunion_def* %80 to %struct.rtx_def**, !dbg !4493
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx349, align 8, !dbg !4493
  %u350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i64 0, i32 1, !dbg !4493
  %arrayidx352 = bitcast %union.u* %u350 to i64*, !dbg !4493
  %82 = load i64, i64* %arrayidx352, align 8, !dbg !4493
  %conv353 = trunc i64 %82 to i32, !dbg !4493
  call void @llvm.dbg.value(metadata i32 %conv353, metadata !4397, metadata !DIExpression()), !dbg !4433
  br label %if.end465, !dbg !4494

if.else356:                                       ; preds = %cond.end290, %cond.end274
  %cond44550 = phi %struct.rtx_def* [ %cond44551, %cond.end290 ], [ %cond44552, %cond.end274 ]
  %83 = phi %struct.rtx_def* [ %66, %cond.end290 ], [ %57, %cond.end274 ]
  %cond42542 = phi %struct.rtx_def* [ %cond42543, %cond.end290 ], [ %cond42544, %cond.end274 ]
  %84 = phi %struct.rtx_def* [ %67, %cond.end290 ], [ %58, %cond.end274 ]
  %cond40135 = phi %struct.rtx_def* [ %cond40136, %cond.end290 ], [ %cond40137, %cond.end274 ]
  %85 = phi %struct.rtx_def* [ %68, %cond.end290 ], [ %59, %cond.end274 ]
  %cond38329 = phi %struct.rtx_def* [ %cond38330, %cond.end290 ], [ %cond38331, %cond.end274 ]
  %86 = phi %struct.rtx_def* [ %69, %cond.end290 ], [ %60, %cond.end274 ]
  %cond367424 = phi i32* [ %cond367425, %cond.end290 ], [ %cond367426, %cond.end274 ]
  %87 = phi %struct.rtx_def* [ %70, %cond.end290 ], [ %61, %cond.end274 ], !dbg !4495
  %tobool359 = icmp eq %struct.rtx_def* %87, null, !dbg !4495
  br i1 %tobool359, label %cond.false363, label %cond.true360, !dbg !4495

cond.true360:                                     ; preds = %if.else356
  br label %cond.end366, !dbg !4495

cond.false363:                                    ; preds = %if.else356
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4495
  %cond3674.pre = load i32*, i32** %.pre-phi, align 8, !dbg !4495
  %88 = bitcast i32* %cond3674.pre to %struct.rtx_def*, !dbg !4495
  br label %cond.end366, !dbg !4495

cond.end366:                                      ; preds = %cond.false363, %cond.true360
  %cond44549 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %cond44550, %cond.true360 ]
  %89 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %83, %cond.true360 ]
  %cond42541 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %cond42542, %cond.true360 ]
  %90 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %84, %cond.true360 ]
  %cond40134 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %cond40135, %cond.true360 ]
  %91 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %85, %cond.true360 ]
  %cond38328 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %cond38329, %cond.true360 ]
  %92 = phi %struct.rtx_def* [ %88, %cond.false363 ], [ %86, %cond.true360 ]
  %cond3674 = phi i32* [ %cond3674.pre, %cond.false363 ], [ %cond367424, %cond.true360 ], !dbg !4495
  %bf.load368 = load i32, i32* %cond3674, align 8, !dbg !4495
  %bf.clear369 = and i32 %bf.load368, 65535, !dbg !4495
  %cmp370 = icmp eq i32 %bf.clear369, 43, !dbg !4495
  br i1 %cmp370, label %land.lhs.true372, label %for.inc, !dbg !4497

land.lhs.true372:                                 ; preds = %cond.end366
  %tobool375 = icmp eq %struct.rtx_def* %92, null, !dbg !4498
  br i1 %tobool375, label %cond.false379, label %cond.true376, !dbg !4498

cond.true376:                                     ; preds = %land.lhs.true372
  br label %cond.end382, !dbg !4498

cond.false379:                                    ; preds = %land.lhs.true372
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4498
  %cond383.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4498
  br label %cond.end382, !dbg !4498

cond.end382:                                      ; preds = %cond.false379, %cond.true376
  %cond44548 = phi %struct.rtx_def* [ %cond383.pre, %cond.false379 ], [ %cond44549, %cond.true376 ]
  %93 = phi %struct.rtx_def* [ %cond383.pre, %cond.false379 ], [ %89, %cond.true376 ]
  %cond42540 = phi %struct.rtx_def* [ %cond383.pre, %cond.false379 ], [ %cond42541, %cond.true376 ]
  %94 = phi %struct.rtx_def* [ %cond383.pre, %cond.false379 ], [ %90, %cond.true376 ]
  %cond40133 = phi %struct.rtx_def* [ %cond383.pre, %cond.false379 ], [ %cond40134, %cond.true376 ]
  %95 = phi %struct.rtx_def* [ %cond383.pre, %cond.false379 ], [ %91, %cond.true376 ]
  %cond383 = phi %struct.rtx_def* [ %cond383.pre, %cond.false379 ], [ %cond38328, %cond.true376 ], !dbg !4498
  %arrayidx386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond383, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4498
  %rt_rtx387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtx_def**, !dbg !4498
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx387, align 8, !dbg !4498
  %97 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4499
  %cmp388 = icmp eq %struct.rtx_def* %96, %97, !dbg !4500
  br i1 %cmp388, label %for.inc, label %land.lhs.true390, !dbg !4501

land.lhs.true390:                                 ; preds = %cond.end382
  %tobool393 = icmp eq %struct.rtx_def* %95, null, !dbg !4502
  br i1 %tobool393, label %cond.false397, label %cond.true394, !dbg !4502

cond.true394:                                     ; preds = %land.lhs.true390
  br label %cond.end400, !dbg !4502

cond.false397:                                    ; preds = %land.lhs.true390
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4502
  %cond401.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4502
  br label %cond.end400, !dbg !4502

cond.end400:                                      ; preds = %cond.false397, %cond.true394
  %cond44547 = phi %struct.rtx_def* [ %cond401.pre, %cond.false397 ], [ %cond44548, %cond.true394 ]
  %98 = phi %struct.rtx_def* [ %cond401.pre, %cond.false397 ], [ %93, %cond.true394 ]
  %cond42539 = phi %struct.rtx_def* [ %cond401.pre, %cond.false397 ], [ %cond42540, %cond.true394 ]
  %99 = phi %struct.rtx_def* [ %cond401.pre, %cond.false397 ], [ %94, %cond.true394 ]
  %cond401 = phi %struct.rtx_def* [ %cond401.pre, %cond.false397 ], [ %cond40133, %cond.true394 ], !dbg !4502
  %arrayidx404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond401, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4502
  %100 = bitcast %union.rtunion_def* %arrayidx404 to i32**, !dbg !4502
  %101 = load i32*, i32** %100, align 8, !dbg !4502
  %bf.load406 = load i32, i32* %101, align 8, !dbg !4502
  %bf.clear407 = and i32 %bf.load406, 65535, !dbg !4502
  %idxprom408 = zext i32 %bf.clear407 to i64, !dbg !4502
  %arrayidx409 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom408, !dbg !4502
  %102 = load i32, i32* %arrayidx409, align 4, !dbg !4502
  %cmp410 = icmp eq i32 %102, 9, !dbg !4502
  br i1 %cmp410, label %for.inc, label %if.then412, !dbg !4503

if.then412:                                       ; preds = %cond.end400
  call void @llvm.dbg.value(metadata i32 160, metadata !4396, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 112, metadata !4395, metadata !DIExpression()), !dbg !4433
  %103 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4504
  call void @llvm.dbg.value(metadata %union.tree_node* %103, metadata !4390, metadata !DIExpression()), !dbg !4433
  %tobool417 = icmp eq %struct.rtx_def* %99, null, !dbg !4506
  br i1 %tobool417, label %cond.false421, label %cond.true418, !dbg !4506

cond.true418:                                     ; preds = %if.then412
  br label %cond.end424, !dbg !4506

cond.false421:                                    ; preds = %if.then412
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4506
  %cond425.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4506
  br label %cond.end424, !dbg !4506

cond.end424:                                      ; preds = %cond.false421, %cond.true418
  %cond44546 = phi %struct.rtx_def* [ %cond425.pre, %cond.false421 ], [ %cond44547, %cond.true418 ]
  %104 = phi %struct.rtx_def* [ %cond425.pre, %cond.false421 ], [ %98, %cond.true418 ]
  %cond425 = phi %struct.rtx_def* [ %cond425.pre, %cond.false421 ], [ %cond42539, %cond.true418 ], !dbg !4506
  %arrayidx428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond425, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4506
  %105 = bitcast %union.rtunion_def* %arrayidx428 to i32**, !dbg !4506
  %106 = load i32*, i32** %105, align 8, !dbg !4506
  %bf.load430 = load i32, i32* %106, align 8, !dbg !4506
  %bf.clear431 = and i32 %bf.load430, 65535, !dbg !4506
  %cmp432 = icmp eq i32 %bf.clear431, 37, !dbg !4506
  br i1 %cmp432, label %if.end465, label %if.then434, !dbg !4508

if.then434:                                       ; preds = %cond.end424
  %tobool437 = icmp eq %struct.rtx_def* %104, null, !dbg !4509
  br i1 %tobool437, label %cond.false441, label %cond.true438, !dbg !4509

cond.true438:                                     ; preds = %if.then434
  br label %cond.end444, !dbg !4509

cond.false441:                                    ; preds = %if.then434
  tail call void @make_decl_rtl(%union.tree_node* %parms.addr.0) #6, !dbg !4509
  %cond445.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4509
  br label %cond.end444, !dbg !4509

cond.end444:                                      ; preds = %cond.false441, %cond.true438
  %cond445 = phi %struct.rtx_def* [ %cond445.pre, %cond.false441 ], [ %cond44546, %cond.true438 ], !dbg !4509
  %arrayidx448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond445, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4509
  %rt_rtx449 = bitcast %union.rtunion_def* %arrayidx448 to %struct.rtx_def**, !dbg !4509
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx449, align 8, !dbg !4509
  %108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4509
  %rt_rtx453 = bitcast %union.rtunion_def* %108 to %struct.rtx_def**, !dbg !4509
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx453, align 8, !dbg !4509
  %u454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i64 0, i32 1, !dbg !4509
  %arrayidx456 = bitcast %union.u* %u454 to i64*, !dbg !4509
  %110 = load i64, i64* %arrayidx456, align 8, !dbg !4509
  %conv457 = trunc i64 %110 to i32, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %conv457, metadata !4397, metadata !DIExpression()), !dbg !4433
  br label %if.end465, !dbg !4510

if.end465:                                        ; preds = %if.end120, %cond.end312, %cond.end336, %cond.end444, %cond.end424, %cond.end252, %if.else259, %if.end
  %number.7 = phi i32 [ %number.0, %if.end ], [ %33, %if.end120 ], [ %call258, %cond.end252 ], [ %call262, %if.else259 ], [ %conv353, %cond.end336 ], [ 0, %cond.end312 ], [ %conv457, %cond.end444 ], [ 0, %cond.end424 ], !dbg !4511
  %code.3 = phi i32 [ 160, %if.end ], [ 64, %if.end120 ], [ 64, %cond.end252 ], [ 64, %if.else259 ], [ 160, %cond.end336 ], [ 160, %cond.end312 ], [ 160, %cond.end444 ], [ 160, %cond.end424 ], !dbg !4511
  %letter.3 = phi i8 [ 112, %if.end ], [ 80, %if.end120 ], [ %conv221, %cond.end252 ], [ %conv221, %if.else259 ], [ 118, %cond.end336 ], [ 118, %cond.end312 ], [ 112, %cond.end444 ], [ 112, %cond.end424 ], !dbg !4511
  %eff_type.3 = phi %union.tree_node* [ %18, %if.end ], [ %26, %if.end120 ], [ %46, %cond.end252 ], [ %46, %if.else259 ], [ %73, %cond.end336 ], [ %73, %cond.end312 ], [ %103, %cond.end444 ], [ %103, %cond.end424 ], !dbg !4511
  call void @llvm.dbg.value(metadata %union.tree_node* %eff_type.3, metadata !4390, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8 %letter.3, metadata !4395, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %code.3, metadata !4396, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %number.7, metadata !4397, metadata !DIExpression()), !dbg !4433
  tail call fastcc void @dbxout_begin_complex_stabs() #8, !dbg !4512
  %111 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4513
  %tobool468 = icmp eq %union.tree_node* %111, null, !dbg !4513
  br i1 %tobool468, label %if.else493, label %if.then469, !dbg !4515

if.then469:                                       ; preds = %if.end465
  %112 = bitcast %union.tree_node** %name to %struct.tree_identifier**, !dbg !4516
  %len = getelementptr inbounds %union.tree_node, %union.tree_node* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4516
  %113 = bitcast %union.tree_node** %len to i32*, !dbg !4516
  %114 = load i32, i32* %113, align 8, !dbg !4516
  %conv472 = zext i32 %114 to i64, !dbg !4516
  store i64 %conv472, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4516
  %115 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4516
  %add.ptr = getelementptr inbounds i8, i8* %115, i64 %conv472, !dbg !4516
  %116 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !4516
  %cmp473 = icmp ugt i8* %add.ptr, %116, !dbg !4516
  br i1 %cmp473, label %cond.true475, label %cond.end478, !dbg !4516

cond.true475:                                     ; preds = %if.then469
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %114) #6, !dbg !4516
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4516
  %.pre62 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4516
  br label %cond.end478, !dbg !4516

cond.end478:                                      ; preds = %if.then469, %cond.true475
  %117 = phi i64 [ %conv472, %if.then469 ], [ %.pre62, %cond.true475 ], !dbg !4516
  %118 = phi i8* [ %115, %if.then469 ], [ %.pre, %cond.true475 ], !dbg !4516
  %119 = load %struct.tree_identifier*, %struct.tree_identifier** %112, align 8, !dbg !4516
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %119, i64 0, i32 1, i32 0, !dbg !4516
  %120 = load i8*, i8** %str, align 8, !dbg !4516
  %call484 = tail call i8* @memcpy(i8* %118, i8* %120, i64 %117) #6, !dbg !4516
  %121 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4516
  %122 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4516
  %add.ptr485 = getelementptr inbounds i8, i8* %122, i64 %121, !dbg !4516
  store i8* %add.ptr485, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4516
  %add.ptr486 = getelementptr inbounds i8, i8* %add.ptr485, i64 1, !dbg !4518
  %123 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !4518
  %cmp487 = icmp ugt i8* %add.ptr486, %123, !dbg !4518
  br i1 %cmp487, label %cond.true489, label %cond.end491, !dbg !4518

cond.true489:                                     ; preds = %cond.end478
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !4518
  %.pre63 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4518
  br label %cond.end491, !dbg !4518

cond.end491:                                      ; preds = %cond.end478, %cond.true489
  %124 = phi i8* [ %add.ptr485, %cond.end478 ], [ %.pre63, %cond.true489 ], !dbg !4518
  %incdec.ptr = getelementptr inbounds i8, i8* %124, i64 1, !dbg !4518
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4518
  store i8 58, i8* %124, align 1, !dbg !4518
  %.pre66 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4519
  br label %if.end505, !dbg !4520

if.else493:                                       ; preds = %if.end465
  %call494 = tail call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4521
  store i64 %call494, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4521
  %125 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4521
  %add.ptr495 = getelementptr inbounds i8, i8* %125, i64 %call494, !dbg !4521
  %126 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !4521
  %cmp496 = icmp ugt i8* %add.ptr495, %126, !dbg !4521
  br i1 %cmp496, label %cond.true498, label %cond.end501, !dbg !4521

cond.true498:                                     ; preds = %if.else493
  %conv499 = trunc i64 %call494 to i32, !dbg !4521
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv499) #6, !dbg !4521
  %.pre64 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4521
  %.pre65 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4521
  br label %cond.end501, !dbg !4521

cond.end501:                                      ; preds = %if.else493, %cond.true498
  %127 = phi i64 [ %call494, %if.else493 ], [ %.pre65, %cond.true498 ], !dbg !4521
  %128 = phi i8* [ %125, %if.else493 ], [ %.pre64, %cond.true498 ], !dbg !4521
  %call503 = tail call i8* @memcpy(i8* %128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i64 %127) #6, !dbg !4521
  %129 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !4521
  %130 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4521
  %add.ptr504 = getelementptr inbounds i8, i8* %130, i64 %129, !dbg !4521
  store i8* %add.ptr504, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4521
  br label %if.end505

if.end505:                                        ; preds = %cond.end501, %cond.end491
  %131 = phi i8* [ %add.ptr504, %cond.end501 ], [ %.pre66, %cond.end491 ], !dbg !4519
  %add.ptr506 = getelementptr inbounds i8, i8* %131, i64 1, !dbg !4519
  %132 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !4519
  %cmp507 = icmp ugt i8* %add.ptr506, %132, !dbg !4519
  br i1 %cmp507, label %cond.true509, label %cond.end511, !dbg !4519

cond.true509:                                     ; preds = %if.end505
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !4519
  %.pre67 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4519
  br label %cond.end511, !dbg !4519

cond.end511:                                      ; preds = %if.end505, %cond.true509
  %133 = phi i8* [ %131, %if.end505 ], [ %.pre67, %cond.true509 ], !dbg !4519
  %incdec.ptr513 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !4519
  store i8* %incdec.ptr513, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !4519
  store i8 %letter.3, i8* %133, align 1, !dbg !4519
  tail call fastcc void @dbxout_type(%union.tree_node* %eff_type.3, i32 0) #8, !dbg !4522
  tail call fastcc void @dbxout_finish_complex_stabs(%union.tree_node* %parms.addr.0, i32 %code.3, %struct.rtx_def* null, i8* null, i32 %number.7) #8, !dbg !4523
  br label %for.inc, !dbg !4524

for.inc:                                          ; preds = %cond.end382, %land.lhs.true8, %land.lhs.true5, %land.lhs.true2, %land.lhs.true, %for.body, %cond.end511, %cond.end400, %cond.end366
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4525
  %134 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4525
  call void @llvm.dbg.value(metadata %union.tree_node* %134, metadata !4389, metadata !DIExpression()), !dbg !4404
  br label %for.cond, !dbg !4526, !llvm.loop !4527

for.end:                                          ; preds = %for.cond
  %135 = load i32, i32* @debug_nesting, align 4, !dbg !4529
  %dec = add nsw i32 %135, -1, !dbg !4529
  store i32 %dec, i32* @debug_nesting, align 4, !dbg !4529
  %cmp519 = icmp eq i32 %dec, 0, !dbg !4529
  %136 = load i32, i32* @symbol_queue_index, align 4, !dbg !4529
  %cmp522 = icmp sgt i32 %136, 0, !dbg !4529
  %or.cond = and i1 %cmp519, %cmp522, !dbg !4529
  br i1 %or.cond, label %if.then524, label %if.end525, !dbg !4529

if.then524:                                       ; preds = %for.end
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !4531
  tail call void @debug_flush_symbol_queue() #6, !dbg !4531
  br label %if.end525, !dbg !4531

if.end525:                                        ; preds = %if.then524, %for.end
  ret void, !dbg !4533
}

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !4534 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4541, metadata !DIExpression()), !dbg !4542
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4543
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4543
  %0 = load i32, i32* %rt_uint, align 8, !dbg !4543
  ret i32 %0, !dbg !4544
}

; Function Attrs: nounwind uwtable
define dso_local void @dbxout_reg_parms(%union.tree_node* %parms) local_unnamed_addr #5 !dbg !4545 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %parms, metadata !4547, metadata !DIExpression()), !dbg !4548
  %0 = load i32, i32* @debug_nesting, align 4, !dbg !4549
  %inc = add nsw i32 %0, 1, !dbg !4549
  store i32 %inc, i32* @debug_nesting, align 4, !dbg !4549
  br label %for.cond, !dbg !4550

for.cond:                                         ; preds = %for.inc, %entry
  %parms.addr.0 = phi %union.tree_node* [ %parms, %entry ], [ %30, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.addr.0, metadata !4547, metadata !DIExpression()), !dbg !4548
  %tobool = icmp eq %union.tree_node* %parms.addr.0, null, !dbg !4551
  br i1 %tobool, label %for.end, label %for.body, !dbg !4551

for.body:                                         ; preds = %for.cond
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4553
  %1 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4553
  %tobool1 = icmp eq %union.tree_node* %1, null, !dbg !4553
  br i1 %tobool1, label %for.inc, label %land.lhs.true, !dbg !4556

land.lhs.true:                                    ; preds = %for.body
  %incoming_rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4557
  %2 = bitcast %union.tree_node** %incoming_rtl to i32**, !dbg !4557
  %3 = load i32*, i32** %2, align 8, !dbg !4557
  %bf.load = load i32, i32* %3, align 8, !dbg !4557
  %bf.clear = and i32 %bf.load, 65535, !dbg !4557
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4557
  br i1 %cmp, label %if.then, label %for.inc, !dbg !4558

if.then:                                          ; preds = %land.lhs.true
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4559
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4559
  %tobool2 = icmp eq %struct.rtx_def* %4, null, !dbg !4559
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !4559
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !4559

cond.true:                                        ; preds = %if.then
  %.pre25 = bitcast %struct.rtx_def** %rtl to i32**, !dbg !4559
  br label %cond.end, !dbg !4559

cond.false:                                       ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4559
  %.phi.trans.insert = bitcast %struct.rtx_def** %rtl to i32**, !dbg !4562
  %cond1.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !4559
  %6 = bitcast i32* %cond1.pre to %struct.rtx_def*, !dbg !4559
  br label %cond.end, !dbg !4559

cond.end:                                         ; preds = %cond.false, %cond.true
  %.pre-phi = phi i32** [ %.phi.trans.insert, %cond.false ], [ %.pre25, %cond.true ], !dbg !4559
  %cond6323 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %7 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %cond9118 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %8 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %cond76313 = phi i32* [ %cond1.pre, %cond.false ], [ %5, %cond.true ]
  %9 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %cond4629 = phi i32* [ %cond1.pre, %cond.false ], [ %5, %cond.true ]
  %10 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %cond216 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %11 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %cond1 = phi i32* [ %cond1.pre, %cond.false ], [ %5, %cond.true ], !dbg !4559
  %bf.load7 = load i32, i32* %cond1, align 8, !dbg !4559
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !4559
  %cmp9 = icmp eq i32 %bf.clear8, 37, !dbg !4559
  br i1 %cmp9, label %land.lhs.true10, label %if.else, !dbg !4563

land.lhs.true10:                                  ; preds = %cond.end
  %tobool13 = icmp eq %struct.rtx_def* %11, null, !dbg !4564
  br i1 %tobool13, label %cond.false17, label %cond.true14, !dbg !4564

cond.true14:                                      ; preds = %land.lhs.true10
  br label %cond.end20, !dbg !4564

cond.false17:                                     ; preds = %land.lhs.true10
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4564
  %cond21.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4564
  br label %cond.end20, !dbg !4564

cond.end20:                                       ; preds = %cond.false17, %cond.true14
  %cond21 = phi %struct.rtx_def* [ %cond21.pre, %cond.false17 ], [ %cond216, %cond.true14 ], !dbg !4564
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cond21) #8, !dbg !4564
  %cmp22 = icmp ult i32 %call, 53, !dbg !4565
  br i1 %cmp22, label %if.then23, label %cond.end20.if.else_crit_edge, !dbg !4566

cond.end20.if.else_crit_edge:                     ; preds = %cond.end20
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4567
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre, i64 0, i32 0, !dbg !4566
  br label %if.else, !dbg !4566

if.then23:                                        ; preds = %cond.end20
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4569
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4569
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4570
  %tobool26 = icmp eq %struct.rtx_def* %14, null, !dbg !4570
  br i1 %tobool26, label %cond.false30, label %cond.true27, !dbg !4570

cond.true27:                                      ; preds = %if.then23
  br label %cond.end33, !dbg !4570

cond.false30:                                     ; preds = %if.then23
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4570
  %cond34.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4570
  br label %cond.end33, !dbg !4570

cond.end33:                                       ; preds = %cond.false30, %cond.true27
  %cond34 = phi %struct.rtx_def* [ %cond34.pre, %cond.false30 ], [ %14, %cond.true27 ], !dbg !4570
  %call35 = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* nonnull %parms.addr.0, %union.tree_node* %13, i8* null, %struct.rtx_def* %cond34) #8, !dbg !4571
  br label %for.inc, !dbg !4571

if.else:                                          ; preds = %cond.end20.if.else_crit_edge, %cond.end
  %cond6322 = phi %struct.rtx_def* [ %.pre, %cond.end20.if.else_crit_edge ], [ %cond6323, %cond.end ]
  %15 = phi %struct.rtx_def* [ %.pre, %cond.end20.if.else_crit_edge ], [ %7, %cond.end ]
  %cond9117 = phi %struct.rtx_def* [ %.pre, %cond.end20.if.else_crit_edge ], [ %cond9118, %cond.end ]
  %16 = phi %struct.rtx_def* [ %.pre, %cond.end20.if.else_crit_edge ], [ %8, %cond.end ]
  %cond76312 = phi i32* [ %12, %cond.end20.if.else_crit_edge ], [ %cond76313, %cond.end ]
  %17 = phi %struct.rtx_def* [ %.pre, %cond.end20.if.else_crit_edge ], [ %9, %cond.end ]
  %cond4628 = phi i32* [ %12, %cond.end20.if.else_crit_edge ], [ %cond4629, %cond.end ]
  %18 = phi %struct.rtx_def* [ %.pre, %cond.end20.if.else_crit_edge ], [ %10, %cond.end ], !dbg !4567
  %tobool38 = icmp eq %struct.rtx_def* %18, null, !dbg !4567
  br i1 %tobool38, label %cond.false42, label %cond.true39, !dbg !4567

cond.true39:                                      ; preds = %if.else
  br label %cond.end45, !dbg !4567

cond.false42:                                     ; preds = %if.else
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4567
  %cond462.pre = load i32*, i32** %.pre-phi, align 8, !dbg !4567
  %19 = bitcast i32* %cond462.pre to %struct.rtx_def*, !dbg !4567
  br label %cond.end45, !dbg !4567

cond.end45:                                       ; preds = %cond.false42, %cond.true39
  %cond6321 = phi %struct.rtx_def* [ %19, %cond.false42 ], [ %cond6322, %cond.true39 ]
  %20 = phi %struct.rtx_def* [ %19, %cond.false42 ], [ %15, %cond.true39 ]
  %cond9116 = phi %struct.rtx_def* [ %19, %cond.false42 ], [ %cond9117, %cond.true39 ]
  %21 = phi %struct.rtx_def* [ %19, %cond.false42 ], [ %16, %cond.true39 ]
  %cond76311 = phi i32* [ %cond462.pre, %cond.false42 ], [ %cond76312, %cond.true39 ]
  %22 = phi %struct.rtx_def* [ %19, %cond.false42 ], [ %17, %cond.true39 ]
  %cond462 = phi i32* [ %cond462.pre, %cond.false42 ], [ %cond4628, %cond.true39 ], !dbg !4567
  %bf.load47 = load i32, i32* %cond462, align 8, !dbg !4567
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !4567
  %cmp49 = icmp eq i32 %bf.clear48, 41, !dbg !4572
  br i1 %cmp49, label %if.then50, label %if.else65, !dbg !4573

if.then50:                                        ; preds = %cond.end45
  %type52 = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4574
  %23 = load %union.tree_node*, %union.tree_node** %type52, align 8, !dbg !4574
  %tobool55 = icmp eq %struct.rtx_def* %20, null, !dbg !4575
  br i1 %tobool55, label %cond.false59, label %cond.true56, !dbg !4575

cond.true56:                                      ; preds = %if.then50
  br label %cond.end62, !dbg !4575

cond.false59:                                     ; preds = %if.then50
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4575
  %cond63.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4575
  br label %cond.end62, !dbg !4575

cond.end62:                                       ; preds = %cond.false59, %cond.true56
  %cond63 = phi %struct.rtx_def* [ %cond63.pre, %cond.false59 ], [ %cond6321, %cond.true56 ], !dbg !4575
  %call64 = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* nonnull %parms.addr.0, %union.tree_node* %23, i8* null, %struct.rtx_def* %cond63) #8, !dbg !4576
  br label %for.inc, !dbg !4576

if.else65:                                        ; preds = %cond.end45
  %tobool68 = icmp eq %struct.rtx_def* %22, null, !dbg !4577
  br i1 %tobool68, label %cond.false72, label %cond.true69, !dbg !4577

cond.true69:                                      ; preds = %if.else65
  br label %cond.end75, !dbg !4577

cond.false72:                                     ; preds = %if.else65
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4577
  %cond763.pre = load i32*, i32** %.pre-phi, align 8, !dbg !4577
  %24 = bitcast i32* %cond763.pre to %struct.rtx_def*, !dbg !4577
  br label %cond.end75, !dbg !4577

cond.end75:                                       ; preds = %cond.false72, %cond.true69
  %cond9115 = phi %struct.rtx_def* [ %24, %cond.false72 ], [ %cond9116, %cond.true69 ]
  %25 = phi %struct.rtx_def* [ %24, %cond.false72 ], [ %21, %cond.true69 ]
  %cond763 = phi i32* [ %cond763.pre, %cond.false72 ], [ %cond76311, %cond.true69 ], !dbg !4577
  %bf.load77 = load i32, i32* %cond763, align 8, !dbg !4577
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !4577
  %cmp79 = icmp eq i32 %bf.clear78, 43, !dbg !4577
  br i1 %cmp79, label %land.lhs.true80, label %for.inc, !dbg !4579

land.lhs.true80:                                  ; preds = %cond.end75
  %tobool83 = icmp eq %struct.rtx_def* %25, null, !dbg !4580
  br i1 %tobool83, label %cond.false87, label %cond.true84, !dbg !4580

cond.true84:                                      ; preds = %land.lhs.true80
  br label %cond.end90, !dbg !4580

cond.false87:                                     ; preds = %land.lhs.true80
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4580
  %cond91.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4580
  br label %cond.end90, !dbg !4580

cond.end90:                                       ; preds = %cond.false87, %cond.true84
  %cond91 = phi %struct.rtx_def* [ %cond91.pre, %cond.false87 ], [ %cond9115, %cond.true84 ], !dbg !4580
  %26 = bitcast %union.tree_node** %incoming_rtl to %struct.rtx_def**, !dbg !4581
  %27 = load %struct.rtx_def*, %struct.rtx_def** %26, align 8, !dbg !4581
  %call94 = tail call i32 @rtx_equal_p(%struct.rtx_def* %cond91, %struct.rtx_def* %27) #6, !dbg !4582
  %tobool95 = icmp eq i32 %call94, 0, !dbg !4582
  br i1 %tobool95, label %if.then96, label %for.inc, !dbg !4583

if.then96:                                        ; preds = %cond.end90
  %type98 = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4584
  %28 = load %union.tree_node*, %union.tree_node** %type98, align 8, !dbg !4584
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4585
  %tobool101 = icmp eq %struct.rtx_def* %29, null, !dbg !4585
  br i1 %tobool101, label %cond.false105, label %cond.true102, !dbg !4585

cond.true102:                                     ; preds = %if.then96
  br label %cond.end108, !dbg !4585

cond.false105:                                    ; preds = %if.then96
  tail call void @make_decl_rtl(%union.tree_node* nonnull %parms.addr.0) #6, !dbg !4585
  %cond109.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4585
  br label %cond.end108, !dbg !4585

cond.end108:                                      ; preds = %cond.false105, %cond.true102
  %cond109 = phi %struct.rtx_def* [ %cond109.pre, %cond.false105 ], [ %29, %cond.true102 ], !dbg !4585
  %call110 = tail call fastcc i32 @dbxout_symbol_location(%union.tree_node* nonnull %parms.addr.0, %union.tree_node* %28, i8* null, %struct.rtx_def* %cond109) #8, !dbg !4586
  br label %for.inc, !dbg !4586

for.inc:                                          ; preds = %cond.end90, %for.body, %land.lhs.true, %cond.end62, %cond.end108, %cond.end75, %cond.end33
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4587
  %30 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4587
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !4547, metadata !DIExpression()), !dbg !4548
  br label %for.cond, !dbg !4588, !llvm.loop !4589

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* @debug_nesting, align 4, !dbg !4591
  %dec = add nsw i32 %31, -1, !dbg !4591
  store i32 %dec, i32* @debug_nesting, align 4, !dbg !4591
  %cmp115 = icmp eq i32 %dec, 0, !dbg !4591
  %32 = load i32, i32* @symbol_queue_index, align 4, !dbg !4591
  %cmp117 = icmp sgt i32 %32, 0, !dbg !4591
  %or.cond = and i1 %cmp115, %cmp117, !dbg !4591
  br i1 %or.cond, label %if.then118, label %if.end119, !dbg !4591

if.then118:                                       ; preds = %for.end
  tail call fastcc void @emit_pending_bincls_if_required() #8, !dbg !4593
  tail call void @debug_flush_symbol_queue() #6, !dbg !4593
  br label %if.end119, !dbg !4593

if.end119:                                        ; preds = %if.then118, %for.end
  ret void, !dbg !4595
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_typeinfo(i8* %x_p) local_unnamed_addr #5 !dbg !4596 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4598, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4599, metadata !DIExpression()), !dbg !4601
  %cmp = icmp ne i8* %x_p, null, !dbg !4602
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !4602
  %or.cond = and i1 %cmp, %cmp1, !dbg !4602
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !4602

land.lhs.true2:                                   ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4599, metadata !DIExpression()), !dbg !4601
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !4602
  ret void, !dbg !4604

if.end:                                           ; preds = %entry
  ret void, !dbg !4605
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_typeinfo(i8* %x_p) local_unnamed_addr #5 !dbg !4606 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4608, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4609, metadata !DIExpression()), !dbg !4610
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_8typeinfo, i32 92) #6, !dbg !4611
  ret void, !dbg !4613
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_8typeinfo(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !4614 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !4619, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4620, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !4621, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !4622, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4623, metadata !DIExpression()), !dbg !4624
  ret void, !dbg !4625
}

declare dso_local void @gt_ggc_m_S(i8*) #2

declare dso_local void @gt_pch_n_S(i8*) #2

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #2

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @gt_ggc_ma_typevec(i8* %x_p) #5 !dbg !4626 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4628, metadata !DIExpression()), !dbg !4635
  %0 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !4636
  %cmp = icmp eq %struct.typeinfo* %0, null, !dbg !4637
  %1 = bitcast %struct.typeinfo* %0 to i8*, !dbg !4638
  br i1 %cmp, label %if.end8, label %for.cond.preheader, !dbg !4638

for.cond.preheader:                               ; preds = %entry
  br label %do.body, !dbg !4639

do.body:                                          ; preds = %for.cond.preheader
  call void @llvm.dbg.value(metadata i32 undef, metadata !4629, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.value(metadata i8* %1, metadata !4632, metadata !DIExpression()), !dbg !4642
  %switch = icmp ult %struct.typeinfo* %0, inttoptr (i64 2 to %struct.typeinfo*), !dbg !4643
  br i1 %switch, label %if.end8, label %if.then7, !dbg !4643

if.then7:                                         ; preds = %do.body
  %call = tail call i32 @ggc_set_mark(i8* nonnull %1) #6, !dbg !4643
  br label %if.end8, !dbg !4643

if.end8:                                          ; preds = %entry, %do.body, %if.then7
  ret void, !dbg !4645
}

; Function Attrs: nounwind uwtable
define internal void @gt_pch_na_typevec(i8* %x_p) #5 !dbg !4646 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !4648, metadata !DIExpression()), !dbg !4652
  %0 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !4653
  %cmp = icmp eq %struct.typeinfo* %0, null, !dbg !4654
  %1 = bitcast %struct.typeinfo* %0 to i8*, !dbg !4655
  br i1 %cmp, label %if.end, label %for.cond.preheader, !dbg !4655

for.cond.preheader:                               ; preds = %entry
  br label %for.end, !dbg !4656

for.end:                                          ; preds = %for.cond.preheader
  call void @llvm.dbg.value(metadata i32 undef, metadata !4649, metadata !DIExpression()), !dbg !4658
  %call = tail call i32 @gt_pch_note_object(i8* nonnull %1, i8* bitcast (%struct.typeinfo** @typevec to i8*), void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_pa_typevec, i32 217) #6, !dbg !4659
  br label %if.end, !dbg !4660

if.end:                                           ; preds = %entry, %for.end
  ret void, !dbg !4661
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

declare dso_local i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) #2

declare dso_local void @free(i8*) #2

declare dso_local i8* @get_src_pwd() local_unnamed_addr #2

declare dso_local i8* @concat(i8*, ...) local_unnamed_addr #2

declare dso_local i8* @remap_debug_filename(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_lang_number() unnamed_addr #5 !dbg !4662 {
entry:
  %0 = load i8*, i8** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 0), align 8, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %0, metadata !4666, metadata !DIExpression()), !dbg !4668
  %call = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !4669
  %cmp = icmp eq i32 %call, 0, !dbg !4671
  br i1 %cmp, label %cleanup, label %if.else, !dbg !4672

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4673
  %cmp2 = icmp eq i32 %call1, 0, !dbg !4675
  br i1 %cmp2, label %cleanup, label %if.else4, !dbg !4676

if.else4:                                         ; preds = %if.else
  %call5 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4677
  %cmp6 = icmp eq i32 %call5, 0, !dbg !4679
  br i1 %cmp6, label %cleanup, label %if.else8, !dbg !4680

if.else8:                                         ; preds = %if.else4
  %call9 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4681
  %cmp10 = icmp eq i32 %call9, 0, !dbg !4683
  br i1 %cmp10, label %cleanup, label %if.else12, !dbg !4684

if.else12:                                        ; preds = %if.else8
  %call13 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4685
  %cmp14 = icmp eq i32 %call13, 0, !dbg !4687
  br i1 %cmp14, label %cleanup, label %if.else16, !dbg !4688

if.else16:                                        ; preds = %if.else12
  %call17 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4689
  %cmp18 = icmp eq i32 %call17, 0, !dbg !4691
  br i1 %cmp18, label %cleanup, label %if.else20, !dbg !4692

if.else20:                                        ; preds = %if.else16
  %call21 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !4693
  %cmp22 = icmp eq i32 %call21, 0, !dbg !4695
  %. = select i1 %cmp22, i32 51, i32 0, !dbg !4696
  br label %cleanup, !dbg !4696

cleanup:                                          ; preds = %if.else20, %if.else16, %if.else12, %if.else8, %if.else4, %if.else, %entry
  %retval.0 = phi i32 [ 2, %entry ], [ 4, %if.else ], [ 5, %if.else4 ], [ 7, %if.else8 ], [ 6, %if.else12 ], [ 50, %if.else16 ], [ %., %if.else20 ], !dbg !4697
  ret i32 %retval.0, !dbg !4698
}

declare dso_local void @switch_to_section(%union.section*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_typedefs(%union.tree_node* %syms) unnamed_addr #5 !dbg !4699 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %syms, metadata !4701, metadata !DIExpression()), !dbg !4708
  br label %for.cond, !dbg !4709

for.cond:                                         ; preds = %for.inc, %entry
  %syms.addr.0 = phi %union.tree_node* [ %syms, %entry ], [ %8, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %syms.addr.0, metadata !4701, metadata !DIExpression()), !dbg !4708
  %cmp = icmp eq %union.tree_node* %syms.addr.0, null, !dbg !4710
  br i1 %cmp, label %for.end, label %for.body, !dbg !4711

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %syms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4712
  %bf.load = load i64, i64* %0, align 8, !dbg !4712
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4713
  %cmp1 = icmp eq i64 %bf.cast1, 35, !dbg !4713
  br i1 %cmp1, label %if.then, label %for.inc, !dbg !4714

if.then:                                          ; preds = %for.body
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %syms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4715
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !4715
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4702, metadata !DIExpression()), !dbg !4716
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4717
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !4717
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !4717
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !4719

land.lhs.true:                                    ; preds = %if.then
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4719
  %bf.load7 = load i64, i64* %4, align 8, !dbg !4720
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !4721
  %cmp10 = icmp eq i64 %bf.cast92, 35, !dbg !4721
  br i1 %cmp10, label %land.lhs.true11, label %for.inc, !dbg !4722

land.lhs.true11:                                  ; preds = %land.lhs.true
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4723
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4723
  %cmp13 = icmp eq %union.tree_node* %6, null, !dbg !4723
  br i1 %cmp13, label %lor.lhs.false, label %land.lhs.true19, !dbg !4723

lor.lhs.false:                                    ; preds = %land.lhs.true11
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4723
  %bf.load15 = load i64, i64* %7, align 8, !dbg !4723
  %bf.cast173 = and i64 %bf.load15, 65535, !dbg !4723
  %cmp18 = icmp eq i64 %bf.cast173, 19, !dbg !4723
  br i1 %cmp18, label %land.lhs.true19, label %for.inc, !dbg !4724

land.lhs.true19:                                  ; preds = %land.lhs.true11, %lor.lhs.false
  %bf.cast254 = and i64 %bf.load7, 4194304, !dbg !4725
  %tobool26 = icmp eq i64 %bf.cast254, 0, !dbg !4725
  br i1 %tobool26, label %if.then27, label %for.inc, !dbg !4726

if.then27:                                        ; preds = %land.lhs.true19
  %call = tail call i32 @dbxout_symbol(%union.tree_node* nonnull %3, i32 0) #8, !dbg !4727
  br label %for.inc, !dbg !4727

for.inc:                                          ; preds = %land.lhs.true19, %if.then, %for.body, %if.then27, %lor.lhs.false, %land.lhs.true
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %syms.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4728
  %8 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4728
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4701, metadata !DIExpression()), !dbg !4708
  br label %for.cond, !dbg !4729, !llvm.loop !4730

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4732
}

declare dso_local %union.tree_node* @nreverse(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_source_file(i8* %filename) unnamed_addr #5 !dbg !4733 {
entry:
  call void @llvm.dbg.value(metadata i8* %filename, metadata !4735, metadata !DIExpression()), !dbg !4736
  %0 = load i8*, i8** @lastfile, align 8, !dbg !4737
  %cmp = icmp eq i8* %0, null, !dbg !4739
  %1 = load i32, i32* @lastfile_is_base, align 4, !dbg !4740
  %tobool = icmp ne i32 %1, 0, !dbg !4740
  %or.cond = and i1 %cmp, %tobool, !dbg !4741
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4741

if.then:                                          ; preds = %entry
  %2 = load i64, i64* bitcast (i8** @base_input_file to i64*), align 8, !dbg !4742
  store i64 %2, i64* bitcast (i8** @lastfile to i64*), align 8, !dbg !4744
  store i32 0, i32* @lastfile_is_base, align 4, !dbg !4745
  %3 = inttoptr i64 %2 to i8*, !dbg !4746
  br label %if.end, !dbg !4746

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i8* [ %3, %if.then ], [ %0, %entry ]
  %5 = phi i8* [ %3, %if.then ], [ %0, %entry ]
  %tobool1 = icmp eq i8* %filename, null, !dbg !4747
  br i1 %tobool1, label %if.end10, label %land.lhs.true2, !dbg !4749

land.lhs.true2:                                   ; preds = %if.end
  %cmp3 = icmp eq i8* %5, null, !dbg !4750
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !4751

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %call = tail call i32 @strcmp(i8* nonnull %filename, i8* %4) #6, !dbg !4752
  %tobool4 = icmp eq i32 %call, 0, !dbg !4752
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !4753

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true2
  %6 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4754
  %cmp6 = icmp eq %union.tree_node* %6, null, !dbg !4757
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4758

if.then7:                                         ; preds = %if.then5
  %7 = load %union.section*, %union.section** @text_section, align 8, !dbg !4759
  tail call void @switch_to_section(%union.section* %7) #6, !dbg !4760
  br label %if.end8, !dbg !4760

if.end8:                                          ; preds = %if.then7, %if.then5
  %call9 = tail call i8* @remap_debug_filename(i8* nonnull %filename) #6, !dbg !4761
  tail call void @dbxout_begin_simple_stabs(i8* %call9, i32 132) #8, !dbg !4762
  tail call void @dbxout_stab_value_internal_label(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i32* nonnull @source_label_number) #8, !dbg !4763
  store i8* %filename, i8** @lastfile, align 8, !dbg !4764
  br label %if.end10, !dbg !4765

if.end10:                                         ; preds = %lor.lhs.false, %if.end, %if.end8
  ret void, !dbg !4766
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_block(%union.tree_node* %block, i32 %depth, %union.tree_node* %args) unnamed_addr #5 !dbg !4767 {
entry:
  %begin_label = alloca [20 x i8], align 16
  %buf = alloca [20 x i8], align 16
  %buf35 = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !4771, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %depth, metadata !4772, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !4773, metadata !DIExpression()), !dbg !4787
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %begin_label, i64 0, i64 0, !dbg !4788
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #7, !dbg !4788
  call void @llvm.dbg.declare(metadata [20 x i8]* %begin_label, metadata !4774, metadata !DIExpression()), !dbg !4789
  %1 = load i32, i32* @scope_labelno, align 4, !dbg !4790
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 %1) #6, !dbg !4790
  %cmp11 = icmp eq i32 %depth, 0, !dbg !4792
  %tobool15 = icmp eq %union.tree_node* %args, null, !dbg !4794
  %2 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0, !dbg !4796
  %add = add nsw i32 %depth, 1, !dbg !4797
  %3 = getelementptr inbounds [100 x i8], [100 x i8]* %buf35, i64 0, i64 0, !dbg !4798
  br i1 %cmp11, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !4799

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !4799

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !4799

while.cond.us:                                    ; preds = %if.end53.us, %entry.split.us
  %block.addr.0.us = phi %union.tree_node* [ %block, %entry.split.us ], [ %10, %if.end53.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0.us, metadata !4771, metadata !DIExpression()), !dbg !4787
  %tobool.us = icmp eq %union.tree_node* %block.addr.0.us, null, !dbg !4799
  br i1 %tobool.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !4799

while.body.us:                                    ; preds = %while.cond.us
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4800
  %bf.load.us = load i64, i64* %4, align 8, !dbg !4800
  %bf.cast1.us = and i64 %bf.load.us, 16777216, !dbg !4800
  %tobool1.us = icmp eq i64 %bf.cast1.us, 0, !dbg !4800
  br i1 %tobool1.us, label %if.end53.us, label %land.lhs.true.us, !dbg !4801

land.lhs.true.us:                                 ; preds = %while.body.us
  %bf.cast62.us = and i64 %bf.load.us, 4194304, !dbg !4802
  %tobool7.us = icmp eq i64 %bf.cast62.us, 0, !dbg !4802
  br i1 %tobool7.us, label %if.end53.us, label %if.then.us, !dbg !4803

if.then.us:                                       ; preds = %land.lhs.true.us
  call void @llvm.dbg.value(metadata i32 0, metadata !4775, metadata !DIExpression()), !dbg !4797
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4804
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4804
  %call14.us = call i32 @dbxout_syms(%union.tree_node* %6) #8, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %call14.us, metadata !4775, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 %call14.us, metadata !4775, metadata !DIExpression()), !dbg !4797
  br i1 %tobool15, label %if.end17.us, label %if.then16.us, !dbg !4806

if.then16.us:                                     ; preds = %if.then.us
  call void @dbxout_reg_parms(%union.tree_node* nonnull %args) #8, !dbg !4807
  br label %if.end17.us, !dbg !4807

if.end17.us:                                      ; preds = %if.then16.us, %if.then.us
  %tobool18.us = icmp eq i32 %call14.us, 0, !dbg !4808
  br i1 %tobool18.us, label %if.end31.us, label %if.then19.us, !dbg !4809

if.then19.us:                                     ; preds = %if.end17.us
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %2) #7, !dbg !4810
  call void @llvm.dbg.declare(metadata [20 x i8]* %buf, metadata !4780, metadata !DIExpression()), !dbg !4811
  br i1 true, label %if.then21.us, label %do.body23.us, !dbg !4812

do.body23.us:                                     ; preds = %if.then19.us
  br label %if.end29.us

if.then21.us:                                     ; preds = %if.then19.us
  call void @llvm.dbg.value(metadata i8* %0, metadata !4783, metadata !DIExpression()), !dbg !4796
  br label %if.end29.us, !dbg !4813

if.end29.us:                                      ; preds = %if.then21.us, %do.body23.us
  call void @llvm.dbg.value(metadata i8* %0, metadata !4783, metadata !DIExpression()), !dbg !4796
  call fastcc void @dbx_output_lbrac(i8* nonnull %0, i8* nonnull %0) #8, !dbg !4815
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %2) #7, !dbg !4816
  br label %if.end31.us, !dbg !4817

if.end31.us:                                      ; preds = %if.end29.us, %if.end17.us
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4818
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !4818
  call fastcc void @dbxout_block(%union.tree_node* %8, i32 %add, %union.tree_node* null) #8, !dbg !4819
  br i1 %tobool18.us, label %if.end53.us, label %if.then34.us, !dbg !4820

if.then34.us:                                     ; preds = %if.end31.us
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %3) #7, !dbg !4821
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf35, metadata !4784, metadata !DIExpression()), !dbg !4822
  br i1 true, label %do.body38.us, label %do.body44.us, !dbg !4823

do.body44.us:                                     ; preds = %if.then34.us
  br label %if.end49.us

do.body38.us:                                     ; preds = %if.then34.us
  %9 = load i32, i32* @scope_labelno, align 4, !dbg !4824
  %call40.us = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i32 %9) #6, !dbg !4824
  br label %if.end49.us, !dbg !4824

if.end49.us:                                      ; preds = %do.body38.us, %do.body44.us
  call fastcc void @dbx_output_rbrac(i8* nonnull %3, i8* nonnull %0) #8, !dbg !4827
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %3) #7, !dbg !4828
  br label %if.end53.us, !dbg !4829

if.end53.us:                                      ; preds = %if.end49.us, %if.end31.us, %land.lhs.true.us, %while.body.us
  %chain.us = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4830
  %10 = load %union.tree_node*, %union.tree_node** %chain.us, align 8, !dbg !4830
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4771, metadata !DIExpression()), !dbg !4787
  br label %while.cond.us, !dbg !4799, !llvm.loop !4831

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !4833

while.cond:                                       ; preds = %if.end53, %entry.entry.split_crit_edge
  %block.addr.0 = phi %union.tree_node* [ %block, %entry.entry.split_crit_edge ], [ %18, %if.end53 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %block.addr.0, metadata !4771, metadata !DIExpression()), !dbg !4787
  %tobool = icmp eq %union.tree_node* %block.addr.0, null, !dbg !4799
  br i1 %tobool, label %while.end.us-lcssa, label %while.body, !dbg !4799

while.body:                                       ; preds = %while.cond
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4800
  %bf.load = load i64, i64* %11, align 8, !dbg !4800
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !4800
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !4800
  br i1 %tobool1, label %if.end53, label %land.lhs.true, !dbg !4801

land.lhs.true:                                    ; preds = %while.body
  %bf.cast62 = and i64 %bf.load, 4194304, !dbg !4802
  %tobool7 = icmp eq i64 %bf.cast62, 0, !dbg !4802
  br i1 %tobool7, label %if.end53, label %if.then, !dbg !4803

if.then:                                          ; preds = %land.lhs.true
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4834
  %bf.load9 = load i32, i32* %12, align 8, !dbg !4834
  %bf.lshr10 = lshr i32 %bf.load9, 1, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %bf.lshr10, metadata !4779, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 0, metadata !4775, metadata !DIExpression()), !dbg !4797
  %13 = load i32, i32* @debug_info_level, align 4, !dbg !4835
  %cmp = icmp eq i32 %13, 1, !dbg !4836
  br i1 %cmp, label %if.end, label %if.then12, !dbg !4837

if.then12:                                        ; preds = %if.then
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4804
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !4804
  %call14 = call i32 @dbxout_syms(%union.tree_node* %15) #8, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %call14, metadata !4775, metadata !DIExpression()), !dbg !4797
  br label %if.end, !dbg !4838

if.end:                                           ; preds = %if.then, %if.then12
  %did_output.0 = phi i32 [ %call14, %if.then12 ], [ 0, %if.then ], !dbg !4797
  call void @llvm.dbg.value(metadata i32 %did_output.0, metadata !4775, metadata !DIExpression()), !dbg !4797
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !4806

if.then16:                                        ; preds = %if.end
  call void @dbxout_reg_parms(%union.tree_node* nonnull %args) #8, !dbg !4807
  br label %if.end17, !dbg !4807

if.end17:                                         ; preds = %if.end, %if.then16
  %tobool18 = icmp eq i32 %did_output.0, 0, !dbg !4808
  br i1 %tobool18, label %if.end31, label %if.then19, !dbg !4809

if.then19:                                        ; preds = %if.end17
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %2) #7, !dbg !4810
  call void @llvm.dbg.declare(metadata [20 x i8]* %buf, metadata !4780, metadata !DIExpression()), !dbg !4811
  br i1 false, label %if.then21, label %do.body23, !dbg !4812

if.then21:                                        ; preds = %if.then19
  br label %if.end29, !dbg !4813

do.body23:                                        ; preds = %if.then19
  %call25 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i32 %bf.lshr10) #6, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %2, metadata !4783, metadata !DIExpression()), !dbg !4796
  br label %if.end29

if.end29:                                         ; preds = %do.body23, %if.then21
  call void @llvm.dbg.value(metadata i8* %2, metadata !4783, metadata !DIExpression()), !dbg !4796
  call fastcc void @dbx_output_lbrac(i8* nonnull %2, i8* nonnull %0) #8, !dbg !4815
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %2) #7, !dbg !4816
  br label %if.end31, !dbg !4817

if.end31:                                         ; preds = %if.end17, %if.end29
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4818
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !4818
  call fastcc void @dbxout_block(%union.tree_node* %17, i32 %add, %union.tree_node* null) #8, !dbg !4819
  br i1 %tobool18, label %if.end53, label %if.then34, !dbg !4820

if.then34:                                        ; preds = %if.end31
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %3) #7, !dbg !4821
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf35, metadata !4784, metadata !DIExpression()), !dbg !4822
  br i1 false, label %do.body38, label %do.body44, !dbg !4823

do.body38:                                        ; preds = %if.then34
  br label %if.end49, !dbg !4824

do.body44:                                        ; preds = %if.then34
  %call46 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i32 %bf.lshr10) #6, !dbg !4842
  br label %if.end49

if.end49:                                         ; preds = %do.body44, %do.body38
  call fastcc void @dbx_output_rbrac(i8* nonnull %3, i8* nonnull %0) #8, !dbg !4827
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %3) #7, !dbg !4828
  br label %if.end53, !dbg !4829

if.end53:                                         ; preds = %if.end31, %land.lhs.true, %while.body, %if.end49
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %block.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4830
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4830
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4771, metadata !DIExpression()), !dbg !4787
  br label %while.cond, !dbg !4799, !llvm.loop !4831

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !4833

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #7, !dbg !4833
  ret void, !dbg !4833
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_function_end(%union.tree_node* %decl) unnamed_addr #5 !dbg !4844 {
entry:
  %lscope_label_name = alloca [100 x i8], align 16
  %begin_label = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4846, metadata !DIExpression()), !dbg !4851
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %lscope_label_name, i64 0, i64 0, !dbg !4852
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !4852
  call void @llvm.dbg.declare(metadata [100 x i8]* %lscope_label_name, metadata !4847, metadata !DIExpression()), !dbg !4853
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4854
  %call = tail call %union.section* @function_section(%union.tree_node* %1) #6, !dbg !4855
  tail call void @switch_to_section(%union.section* %call) #6, !dbg !4856
  %2 = load i32, i32* @scope_labelno, align 4, !dbg !4857
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i32 %2) #6, !dbg !4857
  %3 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !4859
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4860
  %5 = load i32, i32* @scope_labelno, align 4, !dbg !4861
  %conv = sext i32 %5 to i64, !dbg !4861
  call void %3(%struct._IO_FILE* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i64 %conv) #6, !dbg !4862
  %6 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !4863
  %tobool = icmp ne i8 %6, 0, !dbg !4863
  %7 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !4865
  %tobool2 = icmp ne i8 %7, 0, !dbg !4866
  %or.cond = and i1 %tobool, %tobool2, !dbg !4867
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !4867

if.end:                                           ; preds = %entry
  %8 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !4868
  %tobool3 = icmp eq i32 %8, 0, !dbg !4868
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !4869

if.then4:                                         ; preds = %if.end
  call void @dbxout_begin_empty_stabs(i32 36) #8, !dbg !4870
  %9 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 2), align 8, !dbg !4872
  %10 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 0), align 8, !dbg !4873
  call void @dbxout_stab_value_label_diff(i8* %9, i8* %10) #8, !dbg !4874
  call void @dbxout_begin_empty_stabs(i32 36) #8, !dbg !4875
  %11 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 3), align 8, !dbg !4876
  %12 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 1), align 8, !dbg !4877
  call void @dbxout_stab_value_label_diff(i8* %11, i8* %12) #8, !dbg !4878
  br label %if.end12, !dbg !4879

if.else:                                          ; preds = %if.end
  %13 = getelementptr inbounds [20 x i8], [20 x i8]* %begin_label, i64 0, i64 0, !dbg !4880
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %13) #7, !dbg !4880
  call void @llvm.dbg.declare(metadata [20 x i8]* %begin_label, metadata !4848, metadata !DIExpression()), !dbg !4881
  %14 = load i32, i32* @scope_labelno, align 4, !dbg !4882
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 %14) #6, !dbg !4882
  call void @dbxout_begin_empty_stabs(i32 36) #8, !dbg !4884
  call void @dbxout_stab_value_label_diff(i8* nonnull %0, i8* nonnull %13) #8, !dbg !4885
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %13) #7, !dbg !4886
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then4
  %15 = load i32, i32* @flag_debug_only_used_symbols, align 4, !dbg !4887
  %tobool13 = icmp eq i32 %15, 0, !dbg !4887
  br i1 %tobool13, label %if.then14, label %cleanup, !dbg !4889

if.then14:                                        ; preds = %if.end12
  call void @dbxout_stabd(i32 78, i32 0) #8, !dbg !4890
  br label %cleanup, !dbg !4890

cleanup:                                          ; preds = %if.end12, %if.then14, %entry
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !4891
  ret void, !dbg !4891
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbx_output_lbrac(i8* %label, i8* %begin_label) unnamed_addr #5 !dbg !4892 {
entry:
  call void @llvm.dbg.value(metadata i8* %label, metadata !4894, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8* %begin_label, metadata !4895, metadata !DIExpression()), !dbg !4896
  tail call void @dbxout_begin_stabn(i32 192) #8, !dbg !4897
  tail call void @dbxout_stab_value_label_diff(i8* %label, i8* %begin_label) #8, !dbg !4898
  ret void, !dbg !4900
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbx_output_rbrac(i8* %label, i8* %begin_label) unnamed_addr #5 !dbg !4901 {
entry:
  call void @llvm.dbg.value(metadata i8* %label, metadata !4903, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.value(metadata i8* %begin_label, metadata !4904, metadata !DIExpression()), !dbg !4905
  tail call void @dbxout_begin_stabn(i32 224) #8, !dbg !4906
  tail call void @dbxout_stab_value_label_diff(i8* %label, i8* %begin_label) #8, !dbg !4907
  ret void, !dbg !4909
}

declare dso_local %union.section* @function_section(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @debug_free_queue() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_pending_bincls() unnamed_addr #5 !dbg !4910 {
entry:
  br label %while.cond, !dbg !4913

while.cond:                                       ; preds = %while.body, %entry
  %f.0.in = phi %struct.dbx_file** [ @current_file, %entry ], [ %next, %while.body ]
  %f.0 = load %struct.dbx_file*, %struct.dbx_file** %f.0.in, align 8, !dbg !4914
  call void @llvm.dbg.value(metadata %struct.dbx_file* %f.0, metadata !4912, metadata !DIExpression()), !dbg !4914
  %bincl_status = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %f.0, i64 0, i32 3, !dbg !4915
  %0 = load i32, i32* %bincl_status, align 8, !dbg !4915
  %cmp = icmp eq i32 %0, 1, !dbg !4916
  br i1 %cmp, label %while.body, label %while.end, !dbg !4913

while.body:                                       ; preds = %while.cond
  %next = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %f.0, i64 0, i32 0, !dbg !4917
  br label %while.cond, !dbg !4913, !llvm.loop !4918

while.end:                                        ; preds = %while.cond
  %f.0.lcssa = phi %struct.dbx_file* [ %f.0, %while.cond ], !dbg !4914
  br label %while.cond1, !dbg !4919

while.cond1:                                      ; preds = %if.end8, %while.end
  %f.0.pn = phi %struct.dbx_file* [ %f.0.lcssa, %while.end ], [ %f.1, %if.end8 ]
  %f.1.in = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %f.0.pn, i64 0, i32 5, !dbg !4914
  %f.1 = load %struct.dbx_file*, %struct.dbx_file** %f.1.in, align 8, !dbg !4914
  call void @llvm.dbg.value(metadata %struct.dbx_file* %f.1, metadata !4912, metadata !DIExpression()), !dbg !4914
  %tobool = icmp eq %struct.dbx_file* %f.1, null, !dbg !4919
  br i1 %tobool, label %while.end10, label %while.body2, !dbg !4919

while.body2:                                      ; preds = %while.cond1
  %bincl_status3 = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %f.1, i64 0, i32 3, !dbg !4920
  %1 = load i32, i32* %bincl_status3, align 8, !dbg !4920
  %cmp4 = icmp eq i32 %1, 1, !dbg !4923
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4924

if.then:                                          ; preds = %while.body2
  %pending_bincl_name = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %f.1, i64 0, i32 4, !dbg !4925
  %2 = load i8*, i8** %pending_bincl_name, align 8, !dbg !4925
  tail call fastcc void @emit_bincl_stab(i8* %2) #8, !dbg !4927
  %3 = load i32, i32* @next_file_number, align 4, !dbg !4928
  %inc = add nsw i32 %3, 1, !dbg !4928
  store i32 %inc, i32* @next_file_number, align 4, !dbg !4928
  %file_number = getelementptr inbounds %struct.dbx_file, %struct.dbx_file* %f.1, i64 0, i32 1, !dbg !4929
  store i32 %3, i32* %file_number, align 8, !dbg !4930
  store i32 2, i32* %bincl_status3, align 8, !dbg !4931
  br label %if.end, !dbg !4932

if.end:                                           ; preds = %if.then, %while.body2
  %4 = load %struct.dbx_file*, %struct.dbx_file** @current_file, align 8, !dbg !4933
  %cmp6 = icmp eq %struct.dbx_file* %f.1, %4, !dbg !4935
  br i1 %cmp6, label %while.end10, label %if.end8, !dbg !4936

if.end8:                                          ; preds = %if.end
  br label %while.cond1, !dbg !4919, !llvm.loop !4937

while.end10:                                      ; preds = %while.cond1, %if.end
  store i1 false, i1* @pending_bincls, align 4, !dbg !4939
  ret void, !dbg !4940
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_bincl_stab(i8* %name) unnamed_addr #5 !dbg !4941 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !4943, metadata !DIExpression()), !dbg !4944
  tail call void @dbxout_begin_simple_stabs(i8* %name, i32 130) #8, !dbg !4945
  tail call void @dbxout_stab_value_zero() #8, !dbg !4946
  ret void, !dbg !4947
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4948 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4952, metadata !DIExpression()), !dbg !4953
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !4954
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !4954
  ret %struct.VEC_tree_heap* %0, !dbg !4954
}

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #2

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @output_used_types_helper(i8** %slot, i8* %data) #5 !dbg !4955 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !4959, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.value(metadata i8* %data, metadata !4960, metadata !DIExpression()), !dbg !4963
  %0 = bitcast i8** %slot to %union.tree_node**, !dbg !4964
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4964
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4961, metadata !DIExpression()), !dbg !4963
  %2 = bitcast i8* %data to %struct.VEC_tree_heap**, !dbg !4965
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %2, metadata !4962, metadata !DIExpression()), !dbg !4963
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4966
  %bf.load = load i64, i64* %3, align 8, !dbg !4966
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4968
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !4968
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4969

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 17, !dbg !4970
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !4971

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 18, !dbg !4972
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false12, !dbg !4973

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %cmp17 = icmp eq i64 %bf.cast1, 6, !dbg !4974
  br i1 %cmp17, label %land.lhs.true, label %if.else, !dbg !4975

land.lhs.true:                                    ; preds = %lor.lhs.false12, %lor.lhs.false6, %lor.lhs.false, %entry
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4976
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4976
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !4976
  br i1 %tobool, label %if.else, label %land.lhs.true18, !dbg !4977

land.lhs.true18:                                  ; preds = %land.lhs.true
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4977
  %bf.load22 = load i64, i64* %5, align 8, !dbg !4978
  %bf.cast24 = and i64 %bf.load22, 65535, !dbg !4978
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast24, !dbg !4978
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4978
  %cmp25 = icmp eq i32 %6, 3, !dbg !4978
  br i1 %cmp25, label %land.lhs.true26, label %if.else, !dbg !4979

land.lhs.true26:                                  ; preds = %land.lhs.true18
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4980
  %7 = bitcast i40* %ignored_flag to i64*, !dbg !4980
  %bf.load29 = load i64, i64* %7, align 8, !dbg !4980
  %bf.cast316 = and i64 %bf.load29, 1024, !dbg !4980
  %tobool32 = icmp eq i64 %bf.cast316, 0, !dbg !4980
  br i1 %tobool32, label %if.then, label %if.else, !dbg !4981

if.then:                                          ; preds = %land.lhs.true26
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %2, align 8, !dbg !4982
  %tobool33 = icmp eq %struct.VEC_tree_heap* %8, null, !dbg !4982
  br i1 %tobool33, label %cond.end, label %cond.true, !dbg !4982

cond.true:                                        ; preds = %if.then
  %base34 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !4982
  br label %cond.end, !dbg !4982

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base34, %cond.true ], [ null, %if.then ], !dbg !4982
  %call = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* nonnull %4) #8, !dbg !4982
  br label %if.end57, !dbg !4982

if.else:                                          ; preds = %land.lhs.true26, %land.lhs.true, %land.lhs.true18, %lor.lhs.false12
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4983
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !4983
  %tobool38 = icmp eq %union.tree_node* %10, null, !dbg !4983
  br i1 %tobool38, label %if.end57, label %land.lhs.true39, !dbg !4985

land.lhs.true39:                                  ; preds = %if.else
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4985
  %bf.load43 = load i64, i64* %11, align 8, !dbg !4986
  %bf.cast455 = and i64 %bf.load43, 65535, !dbg !4987
  %cmp46 = icmp eq i64 %bf.cast455, 35, !dbg !4987
  br i1 %cmp46, label %if.then47, label %if.end57, !dbg !4988

if.then47:                                        ; preds = %land.lhs.true39
  %12 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %2, align 8, !dbg !4989
  %tobool48 = icmp eq %struct.VEC_tree_heap* %12, null, !dbg !4989
  br i1 %tobool48, label %cond.end52, label %cond.true49, !dbg !4989

cond.true49:                                      ; preds = %if.then47
  %base50 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %12, i64 0, i32 0, !dbg !4989
  br label %cond.end52, !dbg !4989

cond.end52:                                       ; preds = %if.then47, %cond.true49
  %cond53 = phi %struct.VEC_tree_base* [ %base50, %cond.true49 ], [ null, %if.then47 ], !dbg !4989
  %call56 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond53, %union.tree_node* nonnull %10) #8, !dbg !4989
  br label %if.end57, !dbg !4989

if.end57:                                         ; preds = %if.else, %land.lhs.true39, %cond.end52, %cond.end
  ret i32 1, !dbg !4990
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4991 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !4996, metadata !DIExpression()), !dbg !4997
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !4998
  %arraydecay = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 0, !dbg !4998
  %cond = select i1 %tobool, %union.tree_node** null, %union.tree_node** %arraydecay, !dbg !4998
  ret %union.tree_node** %cond, !dbg !4998
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !4999 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5005, metadata !DIExpression()), !dbg !5006
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5007
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5007

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5007
  %0 = load i32, i32* %num, align 8, !dbg !5007
  br label %cond.end, !dbg !5007

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5007
  ret i32 %cond, !dbg !5007
}

; Function Attrs: nounwind uwtable
define internal i32 @output_types_sort(i8* %pa, i8* %pb) #5 !dbg !5008 {
entry:
  call void @llvm.dbg.value(metadata i8* %pa, metadata !5010, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %pb, metadata !5011, metadata !DIExpression()), !dbg !5014
  %0 = bitcast i8* %pa to %union.tree_node**, !dbg !5015
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5016
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5012, metadata !DIExpression()), !dbg !5014
  %2 = bitcast i8* %pb to %union.tree_node**, !dbg !5017
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5018
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5013, metadata !DIExpression()), !dbg !5014
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5019
  %bf.load = load i64, i64* %4, align 8, !dbg !5019
  %bf.cast = and i64 %bf.load, 65535, !dbg !5019
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5019
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5019
  %cmp = icmp eq i32 %5, 2, !dbg !5019
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5021
  %bf.load2 = load i64, i64* %6, align 8, !dbg !5021
  %bf.cast4 = and i64 %bf.load2, 65535, !dbg !5021
  %arrayidx6 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast4, !dbg !5021
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !5021
  %cmp7 = icmp eq i32 %7, 2, !dbg !5021
  br i1 %cmp, label %if.then, label %if.else11, !dbg !5022

if.then:                                          ; preds = %entry
  br i1 %cmp7, label %if.then8, label %cleanup, !dbg !5023

if.then8:                                         ; preds = %if.then
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5025
  %8 = bitcast i40* %uid to i32*, !dbg !5025
  %9 = load i32, i32* %8, align 8, !dbg !5025
  %uid10 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5027
  %10 = bitcast i40* %uid10 to i32*, !dbg !5027
  %11 = load i32, i32* %10, align 8, !dbg !5027
  %sub = sub i32 %9, %11, !dbg !5028
  br label %cleanup, !dbg !5029

if.else11:                                        ; preds = %entry
  br i1 %cmp7, label %cleanup, label %if.else20, !dbg !5030

if.else20:                                        ; preds = %if.else11
  %uid21 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5032
  %12 = load i32, i32* %uid21, align 4, !dbg !5032
  %uid23 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5034
  %13 = load i32, i32* %uid23, align 4, !dbg !5034
  %sub24 = sub i32 %12, %13, !dbg !5035
  br label %cleanup, !dbg !5036

cleanup:                                          ; preds = %if.else11, %if.then, %if.else20, %if.then8
  %retval.0 = phi i32 [ %sub, %if.then8 ], [ %sub24, %if.else20 ], [ 1, %if.then ], [ -1, %if.else11 ], !dbg !5021
  ret i32 %retval.0, !dbg !5037
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !5038 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5042, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5043, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !5044, metadata !DIExpression()), !dbg !5045
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5046
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5046

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5046
  %0 = load i32, i32* %num, align 8, !dbg !5046
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5046
  br i1 %cmp, label %if.then, label %if.else, !dbg !5048

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5049
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5049
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5049
  br label %return, !dbg !5049

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5051

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !5053
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5053
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !5053
  ret i32 %retval.0, !dbg !5048
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !5054 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !5058, metadata !DIExpression()), !dbg !5059
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5060
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !5060
  br i1 %tobool, label %if.end, label %if.then, !dbg !5062

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !5062
  tail call void @free(i8* nonnull %1) #6, !dbg !5060
  br label %if.end, !dbg !5060

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5062
  ret void, !dbg !5062
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5063 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5067, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5068, metadata !DIExpression()), !dbg !5070
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5071
  %0 = load i32, i32* %num1, align 8, !dbg !5071
  %inc = add i32 %0, 1, !dbg !5071
  store i32 %inc, i32* %num1, align 8, !dbg !5071
  %idxprom = zext i32 %0 to i64, !dbg !5071
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5071
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5069, metadata !DIExpression()), !dbg !5070
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5071
  ret %union.tree_node** %arrayidx, !dbg !5071
}

declare dso_local zeroext i8 @subrange_type_for_debug_p(%union.tree_node*, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

declare dso_local i8* @ggc_realloc_stat(i8*, i64) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type_index(%union.tree_node* %type) unnamed_addr #5 !dbg !5072 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5074, metadata !DIExpression()), !dbg !5076
  %0 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !5077
  %symtab = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !5078
  %address = bitcast %union.tree_node** %symtab to i32*, !dbg !5078
  %1 = load i32, i32* %address, align 8, !dbg !5078
  %idxprom = sext i32 %1 to i64, !dbg !5077
  call void @llvm.dbg.value(metadata %struct.typeinfo* undef, metadata !5075, metadata !DIExpression()), !dbg !5076
  %2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5079
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !5079
  %3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5079
  %cmp = icmp ugt i8* %add.ptr, %3, !dbg !5079
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5079

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5079
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5079
  br label %cond.end, !dbg !5079

cond.end:                                         ; preds = %entry, %cond.true
  %4 = phi i8* [ %2, %entry ], [ %.pre, %cond.true ], !dbg !5079
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5079
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5079
  store i8 40, i8* %4, align 1, !dbg !5079
  %file_number = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %0, i64 %idxprom, i32 1, !dbg !5080
  %5 = load i32, i32* %file_number, align 4, !dbg !5080
  %conv = sext i32 %5 to i64, !dbg !5081
  tail call fastcc void @stabstr_D(i64 %conv) #8, !dbg !5082
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5083
  %add.ptr2 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !5083
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5083
  %cmp3 = icmp ugt i8* %add.ptr2, %7, !dbg !5083
  br i1 %cmp3, label %cond.true5, label %cond.end7, !dbg !5083

cond.true5:                                       ; preds = %cond.end
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5083
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5083
  br label %cond.end7, !dbg !5083

cond.end7:                                        ; preds = %cond.end, %cond.true5
  %8 = phi i8* [ %6, %cond.end ], [ %.pre1, %cond.true5 ], !dbg !5083
  %incdec.ptr9 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !5083
  store i8* %incdec.ptr9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5083
  store i8 44, i8* %8, align 1, !dbg !5083
  %type_number = getelementptr inbounds %struct.typeinfo, %struct.typeinfo* %0, i64 %idxprom, i32 2, !dbg !5084
  %9 = load i32, i32* %type_number, align 4, !dbg !5084
  %conv10 = sext i32 %9 to i64, !dbg !5085
  tail call fastcc void @stabstr_D(i64 %conv10) #8, !dbg !5086
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5087
  %add.ptr11 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5087
  %11 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5087
  %cmp12 = icmp ugt i8* %add.ptr11, %11, !dbg !5087
  br i1 %cmp12, label %cond.true14, label %cond.end16, !dbg !5087

cond.true14:                                      ; preds = %cond.end7
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5087
  %.pre2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5087
  br label %cond.end16, !dbg !5087

cond.end16:                                       ; preds = %cond.end7, %cond.true14
  %12 = phi i8* [ %10, %cond.end7 ], [ %.pre2, %cond.true14 ], !dbg !5087
  %incdec.ptr18 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !5087
  store i8* %incdec.ptr18, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5087
  store i8 41, i8* %12, align 1, !dbg !5087
  ret void, !dbg !5088
}

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_range_type(%union.tree_node* %type, %union.tree_node* %low, %union.tree_node* %high) unnamed_addr #5 !dbg !5089 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5093, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata %union.tree_node* %low, metadata !5094, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata %union.tree_node* %high, metadata !5095, metadata !DIExpression()), !dbg !5096
  %0 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5097
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !5097
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5097
  %cmp = icmp ugt i8* %add.ptr, %1, !dbg !5097
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5097

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5097
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5097
  br label %cond.end, !dbg !5097

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi i8* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !5097
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !5097
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5097
  store i8 114, i8* %2, align 1, !dbg !5097
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5098
  %3 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5098
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !5098
  br i1 %tobool, label %if.else, label %if.then, !dbg !5100

if.then:                                          ; preds = %cond.end
  tail call fastcc void @dbxout_type(%union.tree_node* nonnull %3, i32 0) #8, !dbg !5101
  br label %if.end12, !dbg !5101

if.else:                                          ; preds = %cond.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5102
  %bf.load = load i64, i64* %4, align 8, !dbg !5102
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5104
  %cmp4 = icmp eq i64 %bf.cast1, 8, !dbg !5104
  br i1 %cmp4, label %if.else6, label %if.then5, !dbg !5105

if.then5:                                         ; preds = %if.else
  tail call fastcc void @dbxout_type(%union.tree_node* %type, i32 0) #8, !dbg !5106
  br label %if.end12, !dbg !5106

if.else6:                                         ; preds = %if.else
  %symtab = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !5107
  %address = bitcast %union.tree_node** %symtab to i32*, !dbg !5107
  %5 = load i32, i32* %address, align 8, !dbg !5107
  %cmp8 = icmp eq i32 %5, 0, !dbg !5110
  br i1 %cmp8, label %if.else10, label %if.then9, !dbg !5111

if.then9:                                         ; preds = %if.else6
  tail call fastcc void @dbxout_type_index(%union.tree_node* %type) #8, !dbg !5112
  br label %if.end12, !dbg !5112

if.else10:                                        ; preds = %if.else6
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !5113
  tail call fastcc void @dbxout_type_index(%union.tree_node* %6) #8, !dbg !5114
  br label %if.end12

if.end12:                                         ; preds = %if.then5, %if.else10, %if.then9, %if.then
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5115
  %add.ptr13 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !5115
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5115
  %cmp14 = icmp ugt i8* %add.ptr13, %8, !dbg !5115
  br i1 %cmp14, label %cond.true15, label %cond.end17, !dbg !5115

cond.true15:                                      ; preds = %if.end12
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5115
  %.pre2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5115
  br label %cond.end17, !dbg !5115

cond.end17:                                       ; preds = %if.end12, %cond.true15
  %9 = phi i8* [ %7, %if.end12 ], [ %.pre2, %cond.true15 ], !dbg !5115
  %incdec.ptr19 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !5115
  store i8* %incdec.ptr19, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5115
  store i8 59, i8* %9, align 1, !dbg !5115
  %tobool20 = icmp eq %union.tree_node* %low, null, !dbg !5116
  br i1 %tobool20, label %if.else29, label %land.lhs.true, !dbg !5118

land.lhs.true:                                    ; preds = %cond.end17
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %low, i32 0) #6, !dbg !5119
  %tobool21 = icmp eq i32 %call, 0, !dbg !5119
  br i1 %tobool21, label %if.else29, label %if.then22, !dbg !5120

if.then22:                                        ; preds = %land.lhs.true
  %call23 = tail call fastcc zeroext i8 @print_int_cst_bounds_in_octal_p(%union.tree_node* %type, %union.tree_node* nonnull %low, %union.tree_node* %high) #8, !dbg !5121
  %tobool24 = icmp eq i8 %call23, 0, !dbg !5121
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !5124

if.then25:                                        ; preds = %if.then22
  tail call fastcc void @stabstr_O(%union.tree_node* nonnull %low) #8, !dbg !5125
  br label %if.end37, !dbg !5125

if.else26:                                        ; preds = %if.then22
  %call27 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %low, i32 0) #6, !dbg !5126
  tail call fastcc void @stabstr_D(i64 %call27) #8, !dbg !5127
  br label %if.end37

if.else29:                                        ; preds = %land.lhs.true, %cond.end17
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5128
  %add.ptr30 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5128
  %11 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5128
  %cmp31 = icmp ugt i8* %add.ptr30, %11, !dbg !5128
  br i1 %cmp31, label %cond.true32, label %cond.end34, !dbg !5128

cond.true32:                                      ; preds = %if.else29
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5128
  %.pre3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5128
  br label %cond.end34, !dbg !5128

cond.end34:                                       ; preds = %if.else29, %cond.true32
  %12 = phi i8* [ %10, %if.else29 ], [ %.pre3, %cond.true32 ], !dbg !5128
  %incdec.ptr36 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !5128
  store i8* %incdec.ptr36, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5128
  store i8 48, i8* %12, align 1, !dbg !5128
  br label %if.end37

if.end37:                                         ; preds = %if.then25, %if.else26, %cond.end34
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5129
  %add.ptr38 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !5129
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5129
  %cmp39 = icmp ugt i8* %add.ptr38, %14, !dbg !5129
  br i1 %cmp39, label %cond.true40, label %cond.end42, !dbg !5129

cond.true40:                                      ; preds = %if.end37
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5129
  %.pre4 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5129
  br label %cond.end42, !dbg !5129

cond.end42:                                       ; preds = %if.end37, %cond.true40
  %15 = phi i8* [ %13, %if.end37 ], [ %.pre4, %cond.true40 ], !dbg !5129
  %incdec.ptr44 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !5129
  store i8* %incdec.ptr44, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5129
  store i8 59, i8* %15, align 1, !dbg !5129
  %tobool45 = icmp eq %union.tree_node* %high, null, !dbg !5130
  br i1 %tobool45, label %if.else63, label %land.lhs.true46, !dbg !5132

land.lhs.true46:                                  ; preds = %cond.end42
  %call47 = tail call i32 @host_integerp(%union.tree_node* nonnull %high, i32 0) #6, !dbg !5133
  %tobool48 = icmp eq i32 %call47, 0, !dbg !5133
  br i1 %tobool48, label %if.else63, label %if.then49, !dbg !5134

if.then49:                                        ; preds = %land.lhs.true46
  %call50 = tail call fastcc zeroext i8 @print_int_cst_bounds_in_octal_p(%union.tree_node* %type, %union.tree_node* %low, %union.tree_node* nonnull %high) #8, !dbg !5135
  %tobool51 = icmp eq i8 %call50, 0, !dbg !5135
  br i1 %tobool51, label %if.else53, label %if.then52, !dbg !5138

if.then52:                                        ; preds = %if.then49
  tail call fastcc void @stabstr_O(%union.tree_node* nonnull %high) #8, !dbg !5139
  br label %if.end55, !dbg !5139

if.else53:                                        ; preds = %if.then49
  %call54 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %high, i32 0) #6, !dbg !5140
  tail call fastcc void @stabstr_D(i64 %call54) #8, !dbg !5141
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then52
  %16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5142
  %add.ptr56 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !5142
  %17 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5142
  %cmp57 = icmp ugt i8* %add.ptr56, %17, !dbg !5142
  br i1 %cmp57, label %cond.true58, label %cond.end60, !dbg !5142

cond.true58:                                      ; preds = %if.end55
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5142
  %.pre5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5142
  br label %cond.end60, !dbg !5142

cond.end60:                                       ; preds = %if.end55, %cond.true58
  %18 = phi i8* [ %16, %if.end55 ], [ %.pre5, %cond.true58 ], !dbg !5142
  %incdec.ptr62 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !5142
  store i8* %incdec.ptr62, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5142
  store i8 59, i8* %18, align 1, !dbg !5142
  br label %if.end73, !dbg !5143

if.else63:                                        ; preds = %land.lhs.true46, %cond.end42
  %call64 = tail call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !5144
  store i64 %call64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5144
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5144
  %add.ptr65 = getelementptr inbounds i8, i8* %19, i64 %call64, !dbg !5144
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5144
  %cmp66 = icmp ugt i8* %add.ptr65, %20, !dbg !5144
  br i1 %cmp66, label %cond.true67, label %cond.end69, !dbg !5144

cond.true67:                                      ; preds = %if.else63
  %conv = trunc i64 %call64 to i32, !dbg !5144
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv) #6, !dbg !5144
  %.pre6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5144
  %.pre7 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5144
  br label %cond.end69, !dbg !5144

cond.end69:                                       ; preds = %if.else63, %cond.true67
  %21 = phi i64 [ %call64, %if.else63 ], [ %.pre7, %cond.true67 ], !dbg !5144
  %22 = phi i8* [ %19, %if.else63 ], [ %.pre6, %cond.true67 ], !dbg !5144
  %call71 = tail call i8* @memcpy(i8* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0), i64 %21) #6, !dbg !5144
  %23 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5144
  %24 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5144
  %add.ptr72 = getelementptr inbounds i8, i8* %24, i64 %23, !dbg !5144
  store i8* %add.ptr72, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5144
  br label %if.end73

if.end73:                                         ; preds = %cond.end69, %cond.end60
  ret void, !dbg !5145
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @print_int_cst_bounds_in_octal_p(%union.tree_node* %type, %union.tree_node* %low, %union.tree_node* %high) unnamed_addr #5 !dbg !5146 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5150, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata %union.tree_node* %low, metadata !5151, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata %union.tree_node* %high, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !5154
  %tobool = icmp ne i8 %0, 0, !dbg !5154
  %tobool1 = icmp ne %union.tree_node* %low, null, !dbg !5156
  %or.cond = and i1 %tobool, %tobool1, !dbg !5157
  br i1 %or.cond, label %land.lhs.true2, label %if.else, !dbg !5157

land.lhs.true2:                                   ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %low, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5158
  %bf.load = load i64, i64* %1, align 8, !dbg !5158
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5159
  %cmp = icmp eq i64 %bf.cast2, 23, !dbg !5159
  %tobool5 = icmp ne %union.tree_node* %high, null, !dbg !5160
  %or.cond1 = and i1 %cmp, %tobool5, !dbg !5161
  br i1 %or.cond1, label %land.lhs.true6, label %if.else, !dbg !5161

land.lhs.true6:                                   ; preds = %land.lhs.true2
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %high, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5162
  %bf.load8 = load i64, i64* %2, align 8, !dbg !5162
  %bf.cast103 = and i64 %bf.load8, 65535, !dbg !5163
  %cmp11 = icmp eq i64 %bf.cast103, 23, !dbg !5163
  br i1 %cmp11, label %land.lhs.true13, label %if.else, !dbg !5164

land.lhs.true13:                                  ; preds = %land.lhs.true6
  %type14 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !5165
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !5165
  %bf.load15 = load i32, i32* %precision, align 4, !dbg !5165
  %bf.clear16 = and i32 %bf.load15, 1023, !dbg !5165
  %3 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !5166
  %precision18 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 6, !dbg !5166
  %bf.load19 = load i32, i32* %precision18, align 4, !dbg !5166
  %bf.clear20 = and i32 %bf.load19, 1023, !dbg !5166
  %cmp21 = icmp ugt i32 %bf.clear16, %bf.clear20, !dbg !5167
  br i1 %cmp21, label %return, label %lor.lhs.false, !dbg !5168

lor.lhs.false:                                    ; preds = %land.lhs.true13
  %4 = xor i32 %bf.load15, %bf.load19, !dbg !5169
  %5 = and i32 %4, 1023, !dbg !5169
  %cmp31 = icmp eq i32 %5, 0, !dbg !5169
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false39, !dbg !5170

land.lhs.true33:                                  ; preds = %lor.lhs.false
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5171
  %bf.load35 = load i64, i64* %6, align 8, !dbg !5171
  %bf.cast375 = and i64 %bf.load35, 2097152, !dbg !5171
  %tobool38 = icmp eq i64 %bf.cast375, 0, !dbg !5171
  br i1 %tobool38, label %lor.lhs.false39, label %return, !dbg !5172

lor.lhs.false39:                                  ; preds = %land.lhs.true33, %lor.lhs.false
  %cmp44 = icmp ugt i32 %bf.clear16, 64, !dbg !5173
  br i1 %cmp44, label %return, label %lor.lhs.false46, !dbg !5174

lor.lhs.false46:                                  ; preds = %lor.lhs.false39
  %cmp51 = icmp eq i32 %bf.clear16, 64, !dbg !5175
  br i1 %cmp51, label %land.lhs.true53, label %if.else, !dbg !5176

land.lhs.true53:                                  ; preds = %lor.lhs.false46
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5177
  %bf.load55 = load i64, i64* %7, align 8, !dbg !5177
  %bf.cast584 = and i64 %bf.load55, 2097152, !dbg !5177
  %tobool59 = icmp eq i64 %bf.cast584, 0, !dbg !5177
  br i1 %tobool59, label %if.else, label %return, !dbg !5178

if.else:                                          ; preds = %land.lhs.true53, %lor.lhs.false46, %land.lhs.true6, %land.lhs.true2, %entry
  br label %return, !dbg !5179

return:                                           ; preds = %land.lhs.true33, %land.lhs.true53, %land.lhs.true13, %lor.lhs.false39, %if.else
  %retval.0 = phi i8 [ 0, %if.else ], [ 1, %land.lhs.true53 ], [ 1, %lor.lhs.false39 ], [ 1, %land.lhs.true33 ], [ 1, %land.lhs.true13 ], !dbg !5180
  ret i8 %retval.0, !dbg !5181
}

; Function Attrs: nounwind uwtable
define internal fastcc void @stabstr_O(%union.tree_node* %cst) unnamed_addr #5 !dbg !5182 {
entry:
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %cst, metadata !5184, metadata !DIExpression()), !dbg !5217
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %cst, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5218
  %high2 = getelementptr inbounds i32, i32* %int_cst1, i64 2, !dbg !5218
  %0 = bitcast i32* %high2 to i64*, !dbg !5218
  %1 = load i64, i64* %0, align 8, !dbg !5218
  call void @llvm.dbg.value(metadata i64 %1, metadata !5185, metadata !DIExpression()), !dbg !5217
  %low5 = bitcast i32* %int_cst1 to i64*, !dbg !5219
  %2 = load i64, i64* %low5, align 8, !dbg !5219
  call void @llvm.dbg.value(metadata i64 %2, metadata !5186, metadata !DIExpression()), !dbg !5217
  %3 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5220
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #7, !dbg !5220
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !5187, metadata !DIExpression()), !dbg !5221
  %add.ptr = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 128, !dbg !5222
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !5191, metadata !DIExpression()), !dbg !5217
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cst, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5223
  %4 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5223
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !5223
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !5223
  %bf.load = load i32, i32* %precision, align 4, !dbg !5223
  %bf.clear = and i32 %bf.load, 1023, !dbg !5223
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5192, metadata !DIExpression()), !dbg !5224
  %cmp = icmp eq i32 %bf.clear, 128, !dbg !5225
  br i1 %cmp, label %if.end19, label %if.else, !dbg !5227

if.else:                                          ; preds = %entry
  %cmp7 = icmp ugt i32 %bf.clear, 64, !dbg !5228
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !5230

if.then8:                                         ; preds = %if.else
  %sub = add nsw i32 %bf.clear, -64, !dbg !5231
  %sh_prom = zext i32 %sub to i64, !dbg !5232
  %notmask1 = shl nsw i64 -1, %sh_prom, !dbg !5233
  %sub9 = xor i64 %notmask1, -1, !dbg !5233
  %and = and i64 %1, %sub9, !dbg !5234
  call void @llvm.dbg.value(metadata i64 %and, metadata !5185, metadata !DIExpression()), !dbg !5217
  br label %if.end19, !dbg !5235

if.else10:                                        ; preds = %if.else
  %cmp11 = icmp eq i32 %bf.clear, 64, !dbg !5236
  call void @llvm.dbg.value(metadata i64 0, metadata !5185, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i64 0, metadata !5185, metadata !DIExpression()), !dbg !5217
  br i1 %cmp11, label %if.end19, label %if.else13, !dbg !5238

if.else13:                                        ; preds = %if.else10
  %sh_prom14 = zext i32 %bf.clear to i64, !dbg !5239
  %notmask = shl nsw i64 -1, %sh_prom14, !dbg !5240
  %sub16 = xor i64 %notmask, -1, !dbg !5240
  %and17 = and i64 %2, %sub16, !dbg !5241
  call void @llvm.dbg.value(metadata i64 %and17, metadata !5186, metadata !DIExpression()), !dbg !5217
  br label %if.end19

if.end19:                                         ; preds = %if.then8, %if.else10, %if.else13, %entry
  %low.2 = phi i64 [ %2, %entry ], [ %2, %if.then8 ], [ %and17, %if.else13 ], [ %2, %if.else10 ], !dbg !5242
  %high.2 = phi i64 [ %1, %entry ], [ %and, %if.then8 ], [ 0, %if.else13 ], [ 0, %if.else10 ], !dbg !5217
  call void @llvm.dbg.value(metadata i64 %high.2, metadata !5185, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i64 %low.2, metadata !5186, metadata !DIExpression()), !dbg !5217
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5243
  %add.ptr20 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !5243
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5243
  %cmp21 = icmp ugt i8* %add.ptr20, %7, !dbg !5243
  br i1 %cmp21, label %cond.true, label %cond.end, !dbg !5243

cond.true:                                        ; preds = %if.end19
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5243
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5243
  br label %cond.end, !dbg !5243

cond.end:                                         ; preds = %if.end19, %cond.true
  %8 = phi i8* [ %6, %if.end19 ], [ %.pre, %cond.true ], !dbg !5243
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i64 1, !dbg !5243
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5243
  store i8 48, i8* %8, align 1, !dbg !5243
  %9 = or i64 %high.2, %low.2, !dbg !5244
  %10 = icmp eq i64 %9, 0, !dbg !5244
  br i1 %10, label %cleanup, label %if.end25, !dbg !5244

if.end25:                                         ; preds = %cond.end
  %cmp26 = icmp eq i64 %high.2, 0, !dbg !5246
  br i1 %cmp26, label %do.body.preheader, label %for.cond.preheader, !dbg !5247

for.cond.preheader:                               ; preds = %if.end25
  br label %for.cond, !dbg !5248

do.body.preheader:                                ; preds = %if.end25
  br label %do.body, !dbg !5249

do.body:                                          ; preds = %do.body.preheader, %do.body
  %p.0 = phi i8* [ %incdec.ptr29, %do.body ], [ %add.ptr, %do.body.preheader ], !dbg !5217
  %low.3 = phi i64 [ %div, %do.body ], [ %low.2, %do.body.preheader ], !dbg !5217
  call void @llvm.dbg.value(metadata i64 %low.3, metadata !5186, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !5191, metadata !DIExpression()), !dbg !5217
  %11 = trunc i64 %low.3 to i8, !dbg !5250
  %conv = and i8 %11, 7, !dbg !5250
  %div = lshr i64 %low.3, 3, !dbg !5250
  call void @llvm.dbg.value(metadata i64 %div, metadata !5186, metadata !DIExpression()), !dbg !5217
  %add = or i8 %conv, 48, !dbg !5250
  %incdec.ptr29 = getelementptr inbounds i8, i8* %p.0, i64 -1, !dbg !5250
  call void @llvm.dbg.value(metadata i8* %incdec.ptr29, metadata !5191, metadata !DIExpression()), !dbg !5217
  store i8 %add, i8* %incdec.ptr29, align 1, !dbg !5250
  %cmp30 = icmp eq i64 %div, 0, !dbg !5249
  br i1 %cmp30, label %if.end69.loopexit, label %do.body, !dbg !5250, !llvm.loop !5251

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %p.1 = phi i8* [ %incdec.ptr41, %for.body ], [ %add.ptr, %for.cond.preheader ], !dbg !5217
  %low.4 = phi i64 [ %div38, %for.body ], [ %low.2, %for.cond.preheader ], !dbg !5217
  %i.0 = phi i32 [ %inc, %for.body ], [ 1, %for.cond.preheader ], !dbg !5252
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5201, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.value(metadata i64 %low.4, metadata !5186, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !5191, metadata !DIExpression()), !dbg !5217
  %exitcond = icmp eq i32 %i.0, 22, !dbg !5254
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5248

for.body:                                         ; preds = %for.cond
  %12 = trunc i64 %low.4 to i8, !dbg !5255
  %conv37 = and i8 %12, 7, !dbg !5255
  %div38 = lshr i64 %low.4, 3, !dbg !5256
  call void @llvm.dbg.value(metadata i64 %div38, metadata !5186, metadata !DIExpression()), !dbg !5217
  %add39 = or i8 %conv37, 48, !dbg !5257
  %incdec.ptr41 = getelementptr inbounds i8, i8* %p.1, i64 -1, !dbg !5258
  call void @llvm.dbg.value(metadata i8* %incdec.ptr41, metadata !5191, metadata !DIExpression()), !dbg !5217
  store i8 %add39, i8* %incdec.ptr41, align 1, !dbg !5259
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5260
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5201, metadata !DIExpression()), !dbg !5253
  br label %for.cond, !dbg !5261, !llvm.loop !5262

for.end:                                          ; preds = %for.cond
  %p.1.lcssa = phi i8* [ %p.1, %for.cond ], !dbg !5217
  %low.4.lcssa = phi i64 [ %low.4, %for.cond ], !dbg !5217
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !5191, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i64 %low.4.lcssa, metadata !5186, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !5191, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i64 %low.4.lcssa, metadata !5186, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !5191, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i64 %low.4.lcssa, metadata !5186, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i32 1, metadata !5206, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i32 2, metadata !5209, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i64 1, metadata !5210, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i64 3, metadata !5212, metadata !DIExpression()), !dbg !5264
  %tobool = icmp ugt i64 %low.4.lcssa, 1, !dbg !5265
  br i1 %tobool, label %cond.true44, label %cond.end46, !dbg !5265

cond.true44:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i32 764, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5265
  br label %cond.end46, !dbg !5265

cond.end46:                                       ; preds = %for.end, %cond.true44
  %and48 = shl i64 %high.2, 1, !dbg !5266
  %shl49 = and i64 %and48, 6, !dbg !5266
  %or = or i64 %low.4.lcssa, %shl49, !dbg !5267
  %conv50 = trunc i64 %or to i8, !dbg !5268
  %shr = lshr i64 %high.2, 2, !dbg !5269
  call void @llvm.dbg.value(metadata i64 %shr, metadata !5185, metadata !DIExpression()), !dbg !5217
  %add51 = add i8 %conv50, 48, !dbg !5270
  %incdec.ptr53 = getelementptr inbounds i8, i8* %p.1.lcssa, i64 -1, !dbg !5271
  call void @llvm.dbg.value(metadata i8* %incdec.ptr53, metadata !5191, metadata !DIExpression()), !dbg !5217
  store i8 %add51, i8* %incdec.ptr53, align 1, !dbg !5272
  %tobool54 = icmp eq i64 %shr, 0, !dbg !5273
  br i1 %tobool54, label %if.end69, label %do.body56.preheader, !dbg !5274

do.body56.preheader:                              ; preds = %cond.end46
  br label %do.body56, !dbg !5275

do.body56:                                        ; preds = %do.body56.preheader, %do.body56
  %p.2 = phi i8* [ %incdec.ptr63, %do.body56 ], [ %incdec.ptr53, %do.body56.preheader ], !dbg !5253
  %high.3 = phi i64 [ %div60, %do.body56 ], [ %shr, %do.body56.preheader ], !dbg !5253
  call void @llvm.dbg.value(metadata i64 %high.3, metadata !5185, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i8* %p.2, metadata !5191, metadata !DIExpression()), !dbg !5217
  %13 = trunc i64 %high.3 to i8, !dbg !5276
  %conv59 = and i8 %13, 7, !dbg !5276
  %div60 = lshr i64 %high.3, 3, !dbg !5276
  call void @llvm.dbg.value(metadata i64 %div60, metadata !5185, metadata !DIExpression()), !dbg !5217
  %add61 = or i8 %conv59, 48, !dbg !5276
  %incdec.ptr63 = getelementptr inbounds i8, i8* %p.2, i64 -1, !dbg !5276
  call void @llvm.dbg.value(metadata i8* %incdec.ptr63, metadata !5191, metadata !DIExpression()), !dbg !5217
  store i8 %add61, i8* %incdec.ptr63, align 1, !dbg !5276
  %cmp65 = icmp eq i64 %div60, 0, !dbg !5275
  br i1 %cmp65, label %if.end69.loopexit2, label %do.body56, !dbg !5276, !llvm.loop !5277

if.end69.loopexit:                                ; preds = %do.body
  %incdec.ptr29.lcssa = phi i8* [ %incdec.ptr29, %do.body ], !dbg !5250
  br label %if.end69, !dbg !5278

if.end69.loopexit2:                               ; preds = %do.body56
  %incdec.ptr63.lcssa = phi i8* [ %incdec.ptr63, %do.body56 ], !dbg !5276
  br label %if.end69, !dbg !5278

if.end69:                                         ; preds = %if.end69.loopexit2, %if.end69.loopexit, %cond.end46
  %p.4 = phi i8* [ %incdec.ptr53, %cond.end46 ], [ %incdec.ptr29.lcssa, %if.end69.loopexit ], [ %incdec.ptr63.lcssa, %if.end69.loopexit2 ], !dbg !5279
  call void @llvm.dbg.value(metadata i8* %p.4, metadata !5191, metadata !DIExpression()), !dbg !5217
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !5278
  %sub.ptr.rhs.cast = ptrtoint i8* %p.4 to i64, !dbg !5278
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5278
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5278
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5278
  %add.ptr72 = getelementptr inbounds i8, i8* %14, i64 %sub.ptr.sub, !dbg !5278
  %15 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5278
  %cmp73 = icmp ugt i8* %add.ptr72, %15, !dbg !5278
  br i1 %cmp73, label %cond.true75, label %cond.end78, !dbg !5278

cond.true75:                                      ; preds = %if.end69
  %conv76 = trunc i64 %sub.ptr.sub to i32, !dbg !5278
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv76) #6, !dbg !5278
  %.pre3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5278
  %.pre4 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5278
  br label %cond.end78, !dbg !5278

cond.end78:                                       ; preds = %if.end69, %cond.true75
  %16 = phi i64 [ %sub.ptr.sub, %if.end69 ], [ %.pre4, %cond.true75 ], !dbg !5278
  %17 = phi i8* [ %14, %if.end69 ], [ %.pre3, %cond.true75 ], !dbg !5278
  %call = call i8* @memcpy(i8* %17, i8* %p.4, i64 %16) #6, !dbg !5278
  %18 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5278
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5278
  %add.ptr80 = getelementptr inbounds i8, i8* %19, i64 %18, !dbg !5278
  store i8* %add.ptr80, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5278
  br label %cleanup, !dbg !5280

cleanup:                                          ; preds = %cond.end, %cond.end78
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #7, !dbg !5280
  ret void, !dbg !5280
}

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type_name(%union.tree_node* %type) unnamed_addr #5 !dbg !5281 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5283, metadata !DIExpression()), !dbg !5285
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !5286
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5286
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5284, metadata !DIExpression()), !dbg !5285
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !5287
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5287

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i32 2324, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5287
  br label %cond.end, !dbg !5287

cond.end:                                         ; preds = %entry, %cond.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5288
  %bf.load = load i64, i64* %2, align 8, !dbg !5288
  %3 = trunc i64 %bf.load to i16, !dbg !5288
  switch i16 %3, label %sw.default [
    i16 1, label %sw.epilog
    i16 35, label %sw.bb
  ], !dbg !5289

sw.bb:                                            ; preds = %cond.end
  %name2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5290
  %4 = load %union.tree_node*, %union.tree_node** %name2, align 8, !dbg !5290
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5284, metadata !DIExpression()), !dbg !5285
  br label %sw.epilog, !dbg !5292

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i32 2333, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5293
  br label %sw.epilog, !dbg !5294

sw.epilog:                                        ; preds = %sw.default, %sw.bb, %cond.end
  %t.0 = phi %union.tree_node* [ %1, %sw.default ], [ %4, %sw.bb ], [ %1, %cond.end ], !dbg !5285
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5284, metadata !DIExpression()), !dbg !5285
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5295
  %5 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !5295
  %6 = load i32, i32* %5, align 8, !dbg !5295
  %conv = zext i32 %6 to i64, !dbg !5295
  store i64 %conv, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5295
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5295
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %conv, !dbg !5295
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5295
  %cmp = icmp ugt i8* %add.ptr, %8, !dbg !5295
  br i1 %cmp, label %cond.true4, label %cond.end7, !dbg !5295

cond.true4:                                       ; preds = %sw.epilog
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %6) #6, !dbg !5295
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5295
  %.pre1 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5295
  br label %cond.end7, !dbg !5295

cond.end7:                                        ; preds = %sw.epilog, %cond.true4
  %9 = phi i64 [ %conv, %sw.epilog ], [ %.pre1, %cond.true4 ], !dbg !5295
  %10 = phi i8* [ %7, %sw.epilog ], [ %.pre, %cond.true4 ], !dbg !5295
  %str = bitcast i32* %id to i8**, !dbg !5295
  %11 = load i8*, i8** %str, align 8, !dbg !5295
  %call = tail call i8* @memcpy(i8* %10, i8* %11, i64 %9) #6, !dbg !5295
  %12 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5295
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5295
  %add.ptr11 = getelementptr inbounds i8, i8* %13, i64 %12, !dbg !5295
  store i8* %add.ptr11, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5295
  ret void, !dbg !5296
}

; Function Attrs: nounwind uwtable
define internal fastcc void @stabstr_U(i64 %num) unnamed_addr #5 !dbg !5297 {
entry:
  %buf = alloca [64 x i8], align 16
  call void @llvm.dbg.value(metadata i64 %num, metadata !5301, metadata !DIExpression()), !dbg !5306
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !5307
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !5307
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !5302, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.value(metadata [64 x i8]* %buf, metadata !5303, metadata !DIExpression(DW_OP_plus_uconst, 64, DW_OP_stack_value)), !dbg !5306
  %cmp = icmp eq i64 %num, 0, !dbg !5309
  br i1 %cmp, label %if.then, label %do.body.preheader, !dbg !5311

do.body.preheader:                                ; preds = %entry
  %add.ptr = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 64, !dbg !5312
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !5303, metadata !DIExpression()), !dbg !5306
  br label %do.body, !dbg !5313

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5314
  %add.ptr1 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !5314
  %2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5314
  %cmp2 = icmp ugt i8* %add.ptr1, %2, !dbg !5314
  br i1 %cmp2, label %cond.true, label %cond.end, !dbg !5314

cond.true:                                        ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5314
  %.pre2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5314
  br label %cond.end, !dbg !5314

cond.end:                                         ; preds = %if.then, %cond.true
  %3 = phi i8* [ %1, %if.then ], [ %.pre2, %cond.true ], !dbg !5314
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5314
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5314
  store i8 48, i8* %3, align 1, !dbg !5314
  br label %cleanup, !dbg !5316

do.body:                                          ; preds = %do.body.preheader, %do.body
  %p.0 = phi i8* [ %incdec.ptr4, %do.body ], [ %add.ptr, %do.body.preheader ], !dbg !5306
  %num.addr.0 = phi i64 [ %div, %do.body ], [ %num, %do.body.preheader ]
  call void @llvm.dbg.value(metadata i64 %num.addr.0, metadata !5301, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !5303, metadata !DIExpression()), !dbg !5306
  %rem = urem i64 %num.addr.0, 10, !dbg !5317
  %conv = trunc i64 %rem to i8, !dbg !5317
  %div = udiv i64 %num.addr.0, 10, !dbg !5317
  call void @llvm.dbg.value(metadata i64 %div, metadata !5301, metadata !DIExpression()), !dbg !5306
  %add = or i8 %conv, 48, !dbg !5317
  %incdec.ptr4 = getelementptr inbounds i8, i8* %p.0, i64 -1, !dbg !5317
  call void @llvm.dbg.value(metadata i8* %incdec.ptr4, metadata !5303, metadata !DIExpression()), !dbg !5306
  store i8 %add, i8* %incdec.ptr4, align 1, !dbg !5317
  %4 = icmp ugt i64 %num.addr.0, 9, !dbg !5313
  br i1 %4, label %do.body, label %do.end, !dbg !5317, !llvm.loop !5318

do.end:                                           ; preds = %do.body
  %incdec.ptr4.lcssa = phi i8* [ %incdec.ptr4, %do.body ], !dbg !5317
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !5319
  %sub.ptr.rhs.cast = ptrtoint i8* %incdec.ptr4.lcssa to i64, !dbg !5319
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5319
  store i64 %sub.ptr.sub, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5319
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5319
  %add.ptr9 = getelementptr inbounds i8, i8* %5, i64 %sub.ptr.sub, !dbg !5319
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5319
  %cmp10 = icmp ugt i8* %add.ptr9, %6, !dbg !5319
  br i1 %cmp10, label %cond.true12, label %cond.end15, !dbg !5319

cond.true12:                                      ; preds = %do.end
  %conv13 = trunc i64 %sub.ptr.sub to i32, !dbg !5319
  call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv13) #6, !dbg !5319
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5319
  %.pre1 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5319
  br label %cond.end15, !dbg !5319

cond.end15:                                       ; preds = %do.end, %cond.true12
  %7 = phi i64 [ %sub.ptr.sub, %do.end ], [ %.pre1, %cond.true12 ], !dbg !5319
  %8 = phi i8* [ %5, %do.end ], [ %.pre, %cond.true12 ], !dbg !5319
  %call = call i8* @memcpy(i8* %8, i8* nonnull %incdec.ptr4.lcssa, i64 %7) #6, !dbg !5319
  %9 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5319
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5319
  %add.ptr17 = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !5319
  store i8* %add.ptr17, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5319
  br label %cleanup, !dbg !5320

cleanup:                                          ; preds = %cond.end15, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !5320
  ret void, !dbg !5320
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5321 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5326, metadata !DIExpression()), !dbg !5327
  br label %land.end, !dbg !5328

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5328
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5328
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5328
  ret %union.tree_node* %0, !dbg !5328
}

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type_fields(%union.tree_node* %type) unnamed_addr #5 !dbg !5329 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5331, metadata !DIExpression()), !dbg !5344
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5345
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !5345
  br label %for.cond, !dbg !5346

for.cond:                                         ; preds = %for.inc, %entry
  %tem.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %tem.0 = load %union.tree_node*, %union.tree_node** %tem.0.in, align 8, !dbg !5347
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.0, metadata !5332, metadata !DIExpression()), !dbg !5344
  %tobool = icmp eq %union.tree_node* %tem.0, null, !dbg !5348
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5349
  %cmp = icmp eq %union.tree_node* %tem.0, %1, !dbg !5351
  %or.cond = or i1 %tobool, %cmp, !dbg !5348
  br i1 %or.cond, label %cleanup.cont, label %lor.lhs.false, !dbg !5348

lor.lhs.false:                                    ; preds = %for.cond
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5352
  %2 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !5352
  %cmp3 = icmp eq %union.tree_node* %2, %1, !dbg !5353
  br i1 %cmp3, label %cleanup.cont, label %if.end, !dbg !5354

if.end:                                           ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5355
  %bf.load = load i64, i64* %3, align 8, !dbg !5355
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5356
  %cmp4 = icmp eq i64 %bf.cast1, 35, !dbg !5356
  br i1 %cmp4, label %for.inc, label %lor.lhs.false5, !dbg !5357

lor.lhs.false5:                                   ; preds = %if.end
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5358
  %4 = bitcast i40* %ignored_flag to i64*, !dbg !5358
  %bf.load6 = load i64, i64* %4, align 8, !dbg !5358
  %bf.cast82 = and i64 %bf.load6, 1024, !dbg !5358
  %tobool9 = icmp eq i64 %bf.cast82, 0, !dbg !5358
  br i1 %tobool9, label %lor.lhs.false10, label %for.inc, !dbg !5359

lor.lhs.false10:                                  ; preds = %lor.lhs.false5
  %cmp15 = icmp eq i64 %bf.cast1, 31, !dbg !5360
  br i1 %cmp15, label %land.lhs.true, label %if.else, !dbg !5361

land.lhs.true:                                    ; preds = %lor.lhs.false10
  %call = tail call %union.tree_node* @bit_position(%union.tree_node* %tem.0) #6, !dbg !5362
  %call16 = tail call i32 @host_integerp(%union.tree_node* %call, i32 0) #6, !dbg !5363
  %tobool17 = icmp eq i32 %call16, 0, !dbg !5363
  br i1 %tobool17, label %for.inc, label %lor.lhs.false18, !dbg !5364

lor.lhs.false18:                                  ; preds = %land.lhs.true
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5365
  %5 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !5365
  %tobool20 = icmp eq %union.tree_node* %5, null, !dbg !5365
  br i1 %tobool20, label %for.inc, label %lor.lhs.false21, !dbg !5366

lor.lhs.false21:                                  ; preds = %lor.lhs.false18
  %call24 = tail call i32 @host_integerp(%union.tree_node* nonnull %5, i32 1) #6, !dbg !5367
  %tobool25 = icmp eq i32 %call24, 0, !dbg !5367
  br i1 %tobool25, label %for.inc, label %lor.lhs.false21.if.else_crit_edge, !dbg !5368

lor.lhs.false21.if.else_crit_edge:                ; preds = %lor.lhs.false21
  %bf.load28.pre = load i64, i64* %3, align 8, !dbg !5369
  %.pre27 = and i64 %bf.load28.pre, 65535, !dbg !5370
  br label %if.else, !dbg !5368

if.else:                                          ; preds = %lor.lhs.false21.if.else_crit_edge, %lor.lhs.false10
  %bf.cast304.pre-phi = phi i64 [ %.pre27, %lor.lhs.false21.if.else_crit_edge ], [ %bf.cast1, %lor.lhs.false10 ], !dbg !5370
  %cmp31 = icmp eq i64 %bf.cast304.pre-phi, 33, !dbg !5370
  br i1 %cmp31, label %for.inc, label %if.then32, !dbg !5371

if.then32:                                        ; preds = %if.else
  %6 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5372
  %cmp35 = icmp eq %union.tree_node* %tem.0, %6, !dbg !5374
  br i1 %cmp35, label %if.end37, label %if.then36, !dbg !5375

if.then36:                                        ; preds = %if.then32
  tail call fastcc void @stabstr_continue() #8, !dbg !5376
  br label %if.end37, !dbg !5376

if.end37:                                         ; preds = %if.then32, %if.then36
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5377
  %7 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5377
  %tobool38 = icmp eq %union.tree_node* %7, null, !dbg !5377
  br i1 %tobool38, label %if.end37.if.end51_crit_edge, label %if.then39, !dbg !5379

if.end37.if.end51_crit_edge:                      ; preds = %if.end37
  %.pre15 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5380
  br label %if.end51, !dbg !5379

if.then39:                                        ; preds = %if.end37
  %8 = bitcast %union.tree_node** %name to %struct.tree_identifier**, !dbg !5381
  %len = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5381
  %9 = bitcast %union.tree_node** %len to i32*, !dbg !5381
  %10 = load i32, i32* %9, align 8, !dbg !5381
  %conv = zext i32 %10 to i64, !dbg !5381
  store i64 %conv, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5381
  %11 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5381
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %conv, !dbg !5381
  %12 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5381
  %cmp42 = icmp ugt i8* %add.ptr, %12, !dbg !5381
  br i1 %cmp42, label %cond.true, label %cond.end, !dbg !5381

cond.true:                                        ; preds = %if.then39
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %10) #6, !dbg !5381
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5381
  %.pre14 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5381
  br label %cond.end, !dbg !5381

cond.end:                                         ; preds = %if.then39, %cond.true
  %13 = phi i64 [ %conv, %if.then39 ], [ %.pre14, %cond.true ], !dbg !5381
  %14 = phi i8* [ %11, %if.then39 ], [ %.pre, %cond.true ], !dbg !5381
  %15 = load %struct.tree_identifier*, %struct.tree_identifier** %8, align 8, !dbg !5381
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %15, i64 0, i32 1, i32 0, !dbg !5381
  %16 = load i8*, i8** %str, align 8, !dbg !5381
  %call49 = tail call i8* @memcpy(i8* %14, i8* %16, i64 %13) #6, !dbg !5381
  %17 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5381
  %18 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5381
  %add.ptr50 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !5381
  store i8* %add.ptr50, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5381
  br label %if.end51, !dbg !5381

if.end51:                                         ; preds = %if.end37.if.end51_crit_edge, %cond.end
  %19 = phi i8* [ %.pre15, %if.end37.if.end51_crit_edge ], [ %add.ptr50, %cond.end ], !dbg !5380
  %add.ptr52 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !5380
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5380
  %cmp53 = icmp ugt i8* %add.ptr52, %20, !dbg !5380
  br i1 %cmp53, label %cond.true55, label %cond.end57, !dbg !5380

cond.true55:                                      ; preds = %if.end51
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5380
  %.pre16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5380
  br label %cond.end57, !dbg !5380

cond.end57:                                       ; preds = %if.end51, %cond.true55
  %21 = phi i8* [ %19, %if.end51 ], [ %.pre16, %cond.true55 ], !dbg !5380
  %incdec.ptr = getelementptr inbounds i8, i8* %21, i64 1, !dbg !5380
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5380
  store i8 58, i8* %21, align 1, !dbg !5380
  %22 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !5382
  %tobool60 = icmp eq i8 %22, 0, !dbg !5382
  br i1 %tobool60, label %if.end117, label %land.lhs.true61, !dbg !5384

land.lhs.true61:                                  ; preds = %cond.end57
  %bf.load63 = load i64, i64* %3, align 8, !dbg !5385
  %bf.cast668 = and i64 %bf.load63, 268435456, !dbg !5385
  %tobool67 = icmp eq i64 %bf.cast668, 0, !dbg !5385
  br i1 %tobool67, label %lor.lhs.false68, label %if.then82, !dbg !5386

lor.lhs.false68:                                  ; preds = %land.lhs.true61
  %bf.cast739 = and i64 %bf.load63, 536870912, !dbg !5387
  %tobool74 = icmp eq i64 %bf.cast739, 0, !dbg !5387
  br i1 %tobool74, label %lor.lhs.false75, label %if.then82, !dbg !5388

lor.lhs.false75:                                  ; preds = %lor.lhs.false68
  %bf.cast7910 = and i64 %bf.load63, 65535, !dbg !5389
  %cmp80 = icmp eq i64 %bf.cast7910, 31, !dbg !5389
  br i1 %cmp80, label %if.end117, label %if.then82, !dbg !5390

if.then82:                                        ; preds = %lor.lhs.false75, %lor.lhs.false68, %land.lhs.true61
  %23 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5391
  %add.ptr83 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !5391
  %24 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5391
  %cmp84 = icmp ugt i8* %add.ptr83, %24, !dbg !5391
  br i1 %cmp84, label %cond.true86, label %cond.end88, !dbg !5391

cond.true86:                                      ; preds = %if.then82
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5391
  %.pre17 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5391
  br label %cond.end88, !dbg !5391

cond.end88:                                       ; preds = %if.then82, %cond.true86
  %25 = phi i8* [ %23, %if.then82 ], [ %.pre17, %cond.true86 ], !dbg !5391
  %incdec.ptr90 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !5391
  store i8* %incdec.ptr90, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5391
  store i8 47, i8* %25, align 1, !dbg !5391
  %26 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5393
  %add.ptr91 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !5393
  %27 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5393
  %cmp92 = icmp ugt i8* %add.ptr91, %27, !dbg !5393
  br i1 %cmp92, label %cond.true94, label %cond.end96, !dbg !5393

cond.true94:                                      ; preds = %cond.end88
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5393
  br label %cond.end96, !dbg !5393

cond.end96:                                       ; preds = %cond.end88, %cond.true94
  %bf.load99 = load i64, i64* %3, align 8, !dbg !5393
  %bf.cast10211 = and i64 %bf.load99, 268435456, !dbg !5393
  %tobool103 = icmp eq i64 %bf.cast10211, 0, !dbg !5393
  br i1 %tobool103, label %cond.false105, label %cond.end113, !dbg !5393

cond.false105:                                    ; preds = %cond.end96
  %bf.cast11012 = and i64 %bf.load99, 536870912, !dbg !5393
  %tobool111 = icmp eq i64 %bf.cast11012, 0, !dbg !5393
  %cond112 = select i1 %tobool111, i8 50, i8 49, !dbg !5393
  br label %cond.end113, !dbg !5393

cond.end113:                                      ; preds = %cond.end96, %cond.false105
  %cond114 = phi i8 [ %cond112, %cond.false105 ], [ 48, %cond.end96 ], !dbg !5393
  %28 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5393
  %incdec.ptr116 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !5393
  store i8* %incdec.ptr116, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5393
  store i8 %cond114, i8* %28, align 1, !dbg !5393
  br label %if.end117, !dbg !5394

if.end117:                                        ; preds = %lor.lhs.false75, %cond.end57, %cond.end113
  %bf.load119 = load i64, i64* %3, align 8, !dbg !5395
  %bf.cast1215 = and i64 %bf.load119, 65535, !dbg !5396
  %cmp122 = icmp eq i64 %bf.cast1215, 31, !dbg !5396
  br i1 %cmp122, label %land.lhs.true124, label %cond.false129, !dbg !5397

land.lhs.true124:                                 ; preds = %if.end117
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !5398
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8, !dbg !5398
  %tobool125 = icmp eq %union.tree_node* %30, null, !dbg !5398
  br i1 %tobool125, label %cond.false129, label %cond.true126, !dbg !5399

cond.true126:                                     ; preds = %land.lhs.true124
  br label %cond.end132, !dbg !5399

cond.false129:                                    ; preds = %land.lhs.true124, %if.end117
  br label %cond.end132, !dbg !5399

cond.end132:                                      ; preds = %cond.false129, %cond.true126
  %cond133.in = phi %union.tree_node** [ %29, %cond.true126 ], [ %type2, %cond.false129 ]
  %cond133 = load %union.tree_node*, %union.tree_node** %cond133.in, align 8, !dbg !5399
  tail call fastcc void @dbxout_type(%union.tree_node* %cond133, i32 0) #8, !dbg !5400
  %bf.load135 = load i64, i64* %3, align 8, !dbg !5401
  %bf.cast1376 = and i64 %bf.load135, 65535, !dbg !5402
  %cmp138 = icmp eq i64 %bf.cast1376, 32, !dbg !5402
  br i1 %cmp138, label %if.then140, label %if.else199, !dbg !5403

if.then140:                                       ; preds = %cond.end132
  %bf.cast1457 = and i64 %bf.load135, 67108864, !dbg !5404
  %tobool146 = icmp eq i64 %bf.cast1457, 0, !dbg !5404
  br i1 %tobool146, label %if.else186, label %land.lhs.true147, !dbg !5405

land.lhs.true147:                                 ; preds = %if.then140
  %31 = load i8, i8* @use_gnu_debug_info_extensions, align 1, !dbg !5406
  %tobool149 = icmp eq i8 %31, 0, !dbg !5406
  br i1 %tobool149, label %if.else186, label %if.then150, !dbg !5407

if.then150:                                       ; preds = %land.lhs.true147
  %call152 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %tem.0) #6, !dbg !5408
  call void @llvm.dbg.value(metadata %union.tree_node* %call152, metadata !5333, metadata !DIExpression()), !dbg !5409
  %32 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5410
  %add.ptr153 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !5410
  %33 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5410
  %cmp154 = icmp ugt i8* %add.ptr153, %33, !dbg !5410
  br i1 %cmp154, label %cond.true156, label %cond.end158, !dbg !5410

cond.true156:                                     ; preds = %if.then150
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5410
  %.pre21 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5410
  br label %cond.end158, !dbg !5410

cond.end158:                                      ; preds = %if.then150, %cond.true156
  %34 = phi i8* [ %32, %if.then150 ], [ %.pre21, %cond.true156 ], !dbg !5410
  %incdec.ptr160 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !5410
  store i8* %incdec.ptr160, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5410
  store i8 58, i8* %34, align 1, !dbg !5410
  %id162 = getelementptr inbounds %union.tree_node, %union.tree_node* %call152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5411
  %35 = getelementptr inbounds i32, i32* %id162, i64 2, !dbg !5411
  %36 = load i32, i32* %35, align 8, !dbg !5411
  %conv164 = zext i32 %36 to i64, !dbg !5411
  store i64 %conv164, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5411
  %37 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5411
  %add.ptr165 = getelementptr inbounds i8, i8* %37, i64 %conv164, !dbg !5411
  %38 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5411
  %cmp166 = icmp ugt i8* %add.ptr165, %38, !dbg !5411
  br i1 %cmp166, label %cond.true168, label %cond.end171, !dbg !5411

cond.true168:                                     ; preds = %cond.end158
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %36) #6, !dbg !5411
  %.pre22 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5411
  %.pre23 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5411
  br label %cond.end171, !dbg !5411

cond.end171:                                      ; preds = %cond.end158, %cond.true168
  %39 = phi i64 [ %conv164, %cond.end158 ], [ %.pre23, %cond.true168 ], !dbg !5411
  %40 = phi i8* [ %37, %cond.end158 ], [ %.pre22, %cond.true168 ], !dbg !5411
  %str175 = bitcast i32* %id162 to i8**, !dbg !5411
  %41 = load i8*, i8** %str175, align 8, !dbg !5411
  %call176 = tail call i8* @memcpy(i8* %40, i8* %41, i64 %39) #6, !dbg !5411
  %42 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5411
  %43 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5411
  %add.ptr177 = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !5411
  store i8* %add.ptr177, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5411
  %add.ptr178 = getelementptr inbounds i8, i8* %add.ptr177, i64 1, !dbg !5412
  %44 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5412
  %cmp179 = icmp ugt i8* %add.ptr178, %44, !dbg !5412
  br i1 %cmp179, label %cond.true181, label %cond.end183, !dbg !5412

cond.true181:                                     ; preds = %cond.end171
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5412
  %.pre24 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5412
  br label %cond.end183, !dbg !5412

cond.end183:                                      ; preds = %cond.end171, %cond.true181
  %45 = phi i8* [ %add.ptr177, %cond.end171 ], [ %.pre24, %cond.true181 ], !dbg !5412
  %incdec.ptr185 = getelementptr inbounds i8, i8* %45, i64 1, !dbg !5412
  store i8* %incdec.ptr185, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5412
  store i8 59, i8* %45, align 1, !dbg !5412
  br label %for.inc, !dbg !5413

if.else186:                                       ; preds = %land.lhs.true147, %if.then140
  %call187 = tail call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !5414
  store i64 %call187, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5414
  %46 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5414
  %add.ptr188 = getelementptr inbounds i8, i8* %46, i64 %call187, !dbg !5414
  %47 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5414
  %cmp189 = icmp ugt i8* %add.ptr188, %47, !dbg !5414
  br i1 %cmp189, label %cond.true191, label %cond.end194, !dbg !5414

cond.true191:                                     ; preds = %if.else186
  %conv192 = trunc i64 %call187 to i32, !dbg !5414
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv192) #6, !dbg !5414
  %.pre25 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5414
  %.pre26 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5414
  br label %cond.end194, !dbg !5414

cond.end194:                                      ; preds = %if.else186, %cond.true191
  %48 = phi i64 [ %call187, %if.else186 ], [ %.pre26, %cond.true191 ], !dbg !5414
  %49 = phi i8* [ %46, %if.else186 ], [ %.pre25, %cond.true191 ], !dbg !5414
  %call196 = tail call i8* @memcpy(i8* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i64 %48) #6, !dbg !5414
  %50 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5414
  %51 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5414
  %add.ptr197 = getelementptr inbounds i8, i8* %51, i64 %50, !dbg !5414
  store i8* %add.ptr197, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5414
  br label %for.inc

if.else199:                                       ; preds = %cond.end132
  %52 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5415
  %add.ptr200 = getelementptr inbounds i8, i8* %52, i64 1, !dbg !5415
  %53 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5415
  %cmp201 = icmp ugt i8* %add.ptr200, %53, !dbg !5415
  br i1 %cmp201, label %cond.true203, label %cond.end205, !dbg !5415

cond.true203:                                     ; preds = %if.else199
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5415
  %.pre18 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5415
  br label %cond.end205, !dbg !5415

cond.end205:                                      ; preds = %if.else199, %cond.true203
  %54 = phi i8* [ %52, %if.else199 ], [ %.pre18, %cond.true203 ], !dbg !5415
  %incdec.ptr207 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !5415
  store i8* %incdec.ptr207, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5415
  store i8 44, i8* %54, align 1, !dbg !5415
  %call208 = tail call i64 @int_bit_position(%union.tree_node* %tem.0) #6, !dbg !5417
  tail call fastcc void @stabstr_D(i64 %call208) #8, !dbg !5418
  %55 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5419
  %add.ptr209 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !5419
  %56 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5419
  %cmp210 = icmp ugt i8* %add.ptr209, %56, !dbg !5419
  br i1 %cmp210, label %cond.true212, label %cond.end214, !dbg !5419

cond.true212:                                     ; preds = %cond.end205
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5419
  %.pre19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5419
  br label %cond.end214, !dbg !5419

cond.end214:                                      ; preds = %cond.end205, %cond.true212
  %57 = phi i8* [ %55, %cond.end205 ], [ %.pre19, %cond.true212 ], !dbg !5419
  %incdec.ptr216 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !5419
  store i8* %incdec.ptr216, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5419
  store i8 44, i8* %57, align 1, !dbg !5419
  %size218 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5420
  %58 = load %union.tree_node*, %union.tree_node** %size218, align 8, !dbg !5420
  %call219 = tail call i64 @tree_low_cst(%union.tree_node* %58, i32 1) #6, !dbg !5421
  tail call fastcc void @stabstr_D(i64 %call219) #8, !dbg !5422
  %59 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5423
  %add.ptr220 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !5423
  %60 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5423
  %cmp221 = icmp ugt i8* %add.ptr220, %60, !dbg !5423
  br i1 %cmp221, label %cond.true223, label %cond.end225, !dbg !5423

cond.true223:                                     ; preds = %cond.end214
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5423
  %.pre20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5423
  br label %cond.end225, !dbg !5423

cond.end225:                                      ; preds = %cond.end214, %cond.true223
  %61 = phi i8* [ %59, %cond.end214 ], [ %.pre20, %cond.true223 ], !dbg !5423
  %incdec.ptr227 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !5423
  store i8* %incdec.ptr227, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5423
  store i8 59, i8* %61, align 1, !dbg !5423
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false21, %lor.lhs.false18, %land.lhs.true, %if.else, %lor.lhs.false5, %cond.end225, %cond.end194, %cond.end183, %if.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5424
  br label %for.cond, !dbg !5425, !llvm.loop !5426

cleanup.cont:                                     ; preds = %for.cond, %lor.lhs.false
  ret void, !dbg !5428
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type_methods(%union.tree_node* %type) unnamed_addr #5 !dbg !5429 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5431, metadata !DIExpression()), !dbg !5437
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5438
  %0 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !5438
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5438
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5432, metadata !DIExpression()), !dbg !5437
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !5439
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5441

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5442
  %bf.load = load i64, i64* %2, align 8, !dbg !5442
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5444
  %cmp2 = icmp eq i64 %bf.cast1, 3, !dbg !5444
  br i1 %cmp2, label %if.else, label %if.end14, !dbg !5445

if.else:                                          ; preds = %if.end
  %a = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5446
  %3 = load %union.tree_node*, %union.tree_node** %a, align 8, !dbg !5446
  %cmp4 = icmp eq %union.tree_node* %3, null, !dbg !5448
  br i1 %cmp4, label %if.else9, label %if.then5, !dbg !5449

if.then5:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5433, metadata !DIExpression()), !dbg !5437
  br label %if.end14, !dbg !5450

if.else9:                                         ; preds = %if.else
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %a, i64 1, !dbg !5451
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !5451
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5433, metadata !DIExpression()), !dbg !5437
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then5, %if.else9
  %fndecl.1 = phi %union.tree_node* [ %1, %if.end ], [ %3, %if.then5 ], [ %4, %if.else9 ], !dbg !5452
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.1, metadata !5433, metadata !DIExpression()), !dbg !5437
  br label %while.cond, !dbg !5453

while.cond:                                       ; preds = %if.end74, %if.end14
  %fndecl.2 = phi %union.tree_node* [ %fndecl.1, %if.end14 ], [ %fndecl.3.lcssa, %if.end74 ], !dbg !5454
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.2, metadata !5433, metadata !DIExpression()), !dbg !5437
  %tobool = icmp eq %union.tree_node* %fndecl.2, null, !dbg !5453
  br i1 %tobool, label %cleanup.cont.loopexit, label %for.cond.preheader, !dbg !5453

for.cond.preheader:                               ; preds = %while.cond
  br label %for.cond, !dbg !5455

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %last.0 = phi %union.tree_node* [ %last.1, %for.inc ], [ null, %for.cond.preheader ], !dbg !5457
  %fndecl.3 = phi %union.tree_node* [ %27, %for.inc ], [ %fndecl.2, %for.cond.preheader ], !dbg !5437
  %need_prefix.0 = phi i32 [ %need_prefix.2, %for.inc ], [ 1, %for.cond.preheader ], !dbg !5458
  call void @llvm.dbg.value(metadata i32 %need_prefix.0, metadata !5435, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0, metadata !5434, metadata !DIExpression()), !dbg !5437
  %tobool15 = icmp eq %union.tree_node* %fndecl.3, null, !dbg !5460
  br i1 %tobool15, label %for.end, label %land.rhs, !dbg !5462

land.rhs:                                         ; preds = %for.cond
  %cmp16 = icmp eq %union.tree_node* %last.0, null, !dbg !5463
  br i1 %cmp16, label %for.body, label %lor.rhs, !dbg !5464

lor.rhs:                                          ; preds = %land.rhs
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5465
  %5 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5465
  %name18 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5466
  %6 = load %union.tree_node*, %union.tree_node** %name18, align 8, !dbg !5466
  %cmp19 = icmp eq %union.tree_node* %5, %6, !dbg !5467
  br i1 %cmp19, label %for.body, label %for.end, !dbg !5455

for.body:                                         ; preds = %land.rhs, %lor.rhs
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5468
  %bf.load21 = load i64, i64* %7, align 8, !dbg !5468
  %bf.cast232 = and i64 %bf.load21, 65535, !dbg !5471
  %cmp24 = icmp eq i64 %bf.cast232, 29, !dbg !5471
  br i1 %cmp24, label %if.end26, label %for.inc, !dbg !5472

if.end26:                                         ; preds = %for.body
  tail call fastcc void @stabstr_continue() #8, !dbg !5473
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3, metadata !5434, metadata !DIExpression()), !dbg !5437
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5474
  %8 = bitcast i40* %ignored_flag to i64*, !dbg !5474
  %bf.load27 = load i64, i64* %8, align 8, !dbg !5474
  %bf.cast293 = and i64 %bf.load27, 1024, !dbg !5474
  %tobool30 = icmp eq i64 %bf.cast293, 0, !dbg !5474
  br i1 %tobool30, label %lor.lhs.false, label %for.inc, !dbg !5476

lor.lhs.false:                                    ; preds = %if.end26
  %bf.cast354 = and i64 %bf.load27, 2048, !dbg !5477
  %tobool36 = icmp eq i64 %bf.cast354, 0, !dbg !5477
  br i1 %tobool36, label %if.end38, label %for.inc, !dbg !5478

if.end38:                                         ; preds = %lor.lhs.false
  %tobool39 = icmp eq i32 %need_prefix.0, 0, !dbg !5479
  br i1 %tobool39, label %if.end62, label %if.then40, !dbg !5481

if.then40:                                        ; preds = %if.end38
  %name42 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5482
  %9 = bitcast %union.tree_node** %name42 to %struct.tree_identifier**, !dbg !5482
  %10 = load %struct.tree_identifier*, %struct.tree_identifier** %9, align 8, !dbg !5482
  %len = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %10, i64 0, i32 1, i32 1, !dbg !5482
  %11 = load i32, i32* %len, align 8, !dbg !5482
  %conv = zext i32 %11 to i64, !dbg !5482
  store i64 %conv, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5482
  %12 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5482
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %conv, !dbg !5482
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5482
  %cmp43 = icmp ugt i8* %add.ptr, %13, !dbg !5482
  br i1 %cmp43, label %cond.true, label %cond.end, !dbg !5482

cond.true:                                        ; preds = %if.then40
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %11) #6, !dbg !5482
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5482
  %.pre5 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5482
  br label %cond.end, !dbg !5482

cond.end:                                         ; preds = %if.then40, %cond.true
  %14 = phi i64 [ %conv, %if.then40 ], [ %.pre5, %cond.true ], !dbg !5482
  %15 = phi i8* [ %12, %if.then40 ], [ %.pre, %cond.true ], !dbg !5482
  %16 = load %struct.tree_identifier*, %struct.tree_identifier** %9, align 8, !dbg !5482
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %16, i64 0, i32 1, i32 0, !dbg !5482
  %17 = load i8*, i8** %str, align 8, !dbg !5482
  %call = tail call i8* @memcpy(i8* %15, i8* %17, i64 %14) #6, !dbg !5482
  %18 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5482
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5482
  %add.ptr50 = getelementptr inbounds i8, i8* %19, i64 %18, !dbg !5482
  store i8* %add.ptr50, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5482
  %call51 = tail call i64 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0)) #6, !dbg !5484
  store i64 %call51, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5484
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5484
  %add.ptr52 = getelementptr inbounds i8, i8* %20, i64 %call51, !dbg !5484
  %21 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5484
  %cmp53 = icmp ugt i8* %add.ptr52, %21, !dbg !5484
  br i1 %cmp53, label %cond.true55, label %cond.end58, !dbg !5484

cond.true55:                                      ; preds = %cond.end
  %conv56 = trunc i64 %call51 to i32, !dbg !5484
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %conv56) #6, !dbg !5484
  %.pre6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5484
  %.pre7 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5484
  br label %cond.end58, !dbg !5484

cond.end58:                                       ; preds = %cond.end, %cond.true55
  %22 = phi i64 [ %call51, %cond.end ], [ %.pre7, %cond.true55 ], !dbg !5484
  %23 = phi i8* [ %20, %cond.end ], [ %.pre6, %cond.true55 ], !dbg !5484
  %call60 = tail call i8* @memcpy(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0), i64 %22) #6, !dbg !5484
  %24 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5484
  %25 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5484
  %add.ptr61 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !5484
  store i8* %add.ptr61, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5484
  call void @llvm.dbg.value(metadata i32 0, metadata !5435, metadata !DIExpression()), !dbg !5459
  br label %if.end62, !dbg !5485

if.end62:                                         ; preds = %if.end38, %cond.end58
  call void @llvm.dbg.value(metadata i32 0, metadata !5435, metadata !DIExpression()), !dbg !5459
  %type63 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5486
  %26 = load %union.tree_node*, %union.tree_node** %type63, align 8, !dbg !5486
  tail call fastcc void @dbxout_type(%union.tree_node* %26, i32 0) #8, !dbg !5487
  tail call fastcc void @dbxout_type_method_1(%union.tree_node* nonnull %fndecl.3) #8, !dbg !5488
  br label %for.inc, !dbg !5489

for.inc:                                          ; preds = %lor.lhs.false, %if.end26, %for.body, %if.end62
  %last.1 = phi %union.tree_node* [ %fndecl.3, %if.end62 ], [ %last.0, %for.body ], [ %fndecl.3, %lor.lhs.false ], [ %fndecl.3, %if.end26 ], !dbg !5490
  %need_prefix.2 = phi i32 [ 0, %if.end62 ], [ %need_prefix.0, %for.body ], [ %need_prefix.0, %lor.lhs.false ], [ %need_prefix.0, %if.end26 ], !dbg !5459
  call void @llvm.dbg.value(metadata i32 %need_prefix.2, metadata !5435, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata %union.tree_node* %last.1, metadata !5434, metadata !DIExpression()), !dbg !5437
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5491
  %27 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5491
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !5433, metadata !DIExpression()), !dbg !5437
  br label %for.cond, !dbg !5492, !llvm.loop !5493

for.end:                                          ; preds = %for.cond, %lor.rhs
  %fndecl.3.lcssa = phi %union.tree_node* [ %fndecl.3, %for.cond ], [ %fndecl.3, %lor.rhs ], !dbg !5437
  %need_prefix.0.lcssa = phi i32 [ %need_prefix.0, %for.cond ], [ %need_prefix.0, %lor.rhs ], !dbg !5458
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3.lcssa, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3.lcssa, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata i32 %need_prefix.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i32 %need_prefix.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3.lcssa, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3.lcssa, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata i32 %need_prefix.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i32 %need_prefix.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3.lcssa, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl.3.lcssa, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata i32 %need_prefix.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i32 %need_prefix.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5459
  %tobool65 = icmp eq i32 %need_prefix.0.lcssa, 0, !dbg !5495
  br i1 %tobool65, label %if.then66, label %if.end74, !dbg !5497

if.then66:                                        ; preds = %for.end
  %28 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5498
  %add.ptr67 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !5498
  %29 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5498
  %cmp68 = icmp ugt i8* %add.ptr67, %29, !dbg !5498
  br i1 %cmp68, label %cond.true70, label %cond.end72, !dbg !5498

cond.true70:                                      ; preds = %if.then66
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5498
  %.pre8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5498
  br label %cond.end72, !dbg !5498

cond.end72:                                       ; preds = %if.then66, %cond.true70
  %30 = phi i8* [ %28, %if.then66 ], [ %.pre8, %cond.true70 ], !dbg !5498
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i64 1, !dbg !5498
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5498
  store i8 59, i8* %30, align 1, !dbg !5498
  br label %if.end74, !dbg !5498

if.end74:                                         ; preds = %for.end, %cond.end72
  br label %while.cond, !dbg !5453, !llvm.loop !5499

cleanup.cont.loopexit:                            ; preds = %while.cond
  br label %cleanup.cont, !dbg !5501

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !5501
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @stabstr_continue() unnamed_addr #0 !dbg !5502 {
entry:
  ret void, !dbg !5503
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_args(%union.tree_node* %args) unnamed_addr #5 !dbg !5504 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !5506, metadata !DIExpression()), !dbg !5507
  br label %while.cond, !dbg !5508

while.cond:                                       ; preds = %cond.end, %entry
  %args.addr.0 = phi %union.tree_node* [ %args, %entry ], [ %5, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %args.addr.0, metadata !5506, metadata !DIExpression()), !dbg !5507
  %tobool = icmp eq %union.tree_node* %args.addr.0, null, !dbg !5508
  br i1 %tobool, label %while.end, label %while.body, !dbg !5508

while.body:                                       ; preds = %while.cond
  %0 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5509
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !5509
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5509
  %cmp = icmp ugt i8* %add.ptr, %1, !dbg !5509
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5509

cond.true:                                        ; preds = %while.body
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5509
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5509
  br label %cond.end, !dbg !5509

cond.end:                                         ; preds = %while.body, %cond.true
  %2 = phi i8* [ %0, %while.body ], [ %.pre, %cond.true ], !dbg !5509
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !5509
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5509
  store i8 44, i8* %2, align 1, !dbg !5509
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5511
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5511
  tail call fastcc void @dbxout_type(%union.tree_node* %4, i32 0) #8, !dbg !5512
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %args.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5513
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5513
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5506, metadata !DIExpression()), !dbg !5507
  br label %while.cond, !dbg !5508, !llvm.loop !5514

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5516
}

declare dso_local %union.tree_node* @bit_position(%union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @int_bit_position(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_type_method_1(%union.tree_node* %decl) unnamed_addr #5 !dbg !5517 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5519, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8 65, metadata !5520, metadata !DIExpression()), !dbg !5525
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5526
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !5526
  %1 = load i64*, i64** %0, align 8, !dbg !5526
  %bf.load = load i64, i64* %1, align 8, !dbg !5526
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5527
  %cmp = icmp eq i64 %bf.cast1, 20, !dbg !5527
  br i1 %cmp, label %if.end29, label %if.else, !dbg !5528

if.else:                                          ; preds = %entry
  %values = getelementptr inbounds i64, i64* %1, i64 3, !dbg !5529
  %2 = bitcast i64* %values to %struct.tree_list**, !dbg !5529
  %3 = load %struct.tree_list*, %struct.tree_list** %2, align 8, !dbg !5529
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %3, i64 0, i32 2, !dbg !5529
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5529
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5522, metadata !DIExpression()), !dbg !5530
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5531
  %5 = bitcast %union.tree_node** %type5 to i64**, !dbg !5531
  %6 = load i64*, i64** %5, align 8, !dbg !5531
  %bf.load7 = load i64, i64* %6, align 8, !dbg !5531
  %bf.cast92 = and i64 %bf.load7, 1048576, !dbg !5531
  %tobool = icmp eq i64 %bf.cast92, 0, !dbg !5531
  %c1.0 = select i1 %tobool, i8 65, i8 66, !dbg !5533
  call void @llvm.dbg.value(metadata i8 %c1.0, metadata !5520, metadata !DIExpression()), !dbg !5525
  %bf.cast183 = and i64 %bf.load7, 524288, !dbg !5534
  %tobool19 = icmp eq i64 %bf.cast183, 0, !dbg !5534
  %narrow = add nuw nsw i8 %c1.0, 2, !dbg !5536
  %c1.1 = select i1 %tobool19, i8 %c1.0, i8 %narrow, !dbg !5536
  call void @llvm.dbg.value(metadata i8 %c1.1, metadata !5520, metadata !DIExpression()), !dbg !5525
  %vindex = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 4, !dbg !5537
  %7 = load %union.tree_node*, %union.tree_node** %vindex, align 8, !dbg !5537
  %tobool25 = icmp eq %union.tree_node* %7, null, !dbg !5537
  %. = select i1 %tobool25, i8 46, i8 42
  call void @llvm.dbg.value(metadata i8 %., metadata !5521, metadata !DIExpression()), !dbg !5525
  br label %if.end29

if.end29:                                         ; preds = %entry, %if.else
  %c1.2 = phi i8 [ %c1.1, %if.else ], [ 65, %entry ], !dbg !5525
  %c2.1 = phi i8 [ %., %if.else ], [ 63, %entry ], !dbg !5539
  call void @llvm.dbg.value(metadata i8 %c2.1, metadata !5521, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8 %c1.2, metadata !5520, metadata !DIExpression()), !dbg !5525
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5540
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 1, !dbg !5540
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5540
  %cmp30 = icmp ugt i8* %add.ptr, %9, !dbg !5540
  br i1 %cmp30, label %cond.true, label %cond.end, !dbg !5540

cond.true:                                        ; preds = %if.end29
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5540
  %.pre = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5540
  br label %cond.end, !dbg !5540

cond.end:                                         ; preds = %if.end29, %cond.true
  %10 = phi i8* [ %8, %if.end29 ], [ %.pre, %cond.true ], !dbg !5540
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5540
  store i8* %incdec.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5540
  store i8 58, i8* %10, align 1, !dbg !5540
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !5541
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5541
  %11 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !5541
  %12 = load i32, i32* %11, align 8, !dbg !5541
  %conv32 = zext i32 %12 to i64, !dbg !5541
  store i64 %conv32, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5541
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5541
  %add.ptr33 = getelementptr inbounds i8, i8* %13, i64 %conv32, !dbg !5541
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5541
  %cmp34 = icmp ugt i8* %add.ptr33, %14, !dbg !5541
  br i1 %cmp34, label %cond.true36, label %cond.end39, !dbg !5541

cond.true36:                                      ; preds = %cond.end
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 %12) #6, !dbg !5541
  %.pre6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5541
  br label %cond.end39, !dbg !5541

cond.end39:                                       ; preds = %cond.end, %cond.true36
  %15 = phi i8* [ %13, %cond.end ], [ %.pre6, %cond.true36 ], !dbg !5541
  %call41 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !5541
  %id43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5541
  %str = bitcast i32* %id43 to i8**, !dbg !5541
  %16 = load i8*, i8** %str, align 8, !dbg !5541
  %17 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5541
  %call44 = tail call i8* @memcpy(i8* %15, i8* %16, i64 %17) #6, !dbg !5541
  %18 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 5), align 8, !dbg !5541
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5541
  %add.ptr45 = getelementptr inbounds i8, i8* %19, i64 %18, !dbg !5541
  store i8* %add.ptr45, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5541
  %add.ptr46 = getelementptr inbounds i8, i8* %add.ptr45, i64 1, !dbg !5542
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5542
  %cmp47 = icmp ugt i8* %add.ptr46, %20, !dbg !5542
  br i1 %cmp47, label %cond.true49, label %cond.end51, !dbg !5542

cond.true49:                                      ; preds = %cond.end39
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5542
  %.pre7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5542
  br label %cond.end51, !dbg !5542

cond.end51:                                       ; preds = %cond.end39, %cond.true49
  %21 = phi i8* [ %add.ptr45, %cond.end39 ], [ %.pre7, %cond.true49 ], !dbg !5542
  %incdec.ptr53 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !5542
  store i8* %incdec.ptr53, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5542
  store i8 59, i8* %21, align 1, !dbg !5542
  %22 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5543
  %add.ptr54 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !5543
  %23 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5543
  %cmp55 = icmp ugt i8* %add.ptr54, %23, !dbg !5543
  br i1 %cmp55, label %cond.true57, label %cond.end59, !dbg !5543

cond.true57:                                      ; preds = %cond.end51
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5543
  br label %cond.end59, !dbg !5543

cond.end59:                                       ; preds = %cond.end51, %cond.true57
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5543
  %bf.load62 = load i64, i64* %24, align 8, !dbg !5543
  %bf.cast654 = and i64 %bf.load62, 268435456, !dbg !5543
  %tobool66 = icmp eq i64 %bf.cast654, 0, !dbg !5543
  br i1 %tobool66, label %cond.false68, label %cond.end76, !dbg !5543

cond.false68:                                     ; preds = %cond.end59
  %bf.cast735 = and i64 %bf.load62, 536870912, !dbg !5543
  %tobool74 = icmp eq i64 %bf.cast735, 0, !dbg !5543
  %phitmp = select i1 %tobool74, i8 50, i8 49, !dbg !5543
  br label %cond.end76, !dbg !5543

cond.end76:                                       ; preds = %cond.end59, %cond.false68
  %cond77 = phi i8 [ %phitmp, %cond.false68 ], [ 48, %cond.end59 ]
  %25 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5543
  %incdec.ptr79 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !5543
  store i8* %incdec.ptr79, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5543
  store i8 %cond77, i8* %25, align 1, !dbg !5543
  %26 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5544
  %add.ptr80 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !5544
  %27 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5544
  %cmp81 = icmp ugt i8* %add.ptr80, %27, !dbg !5544
  br i1 %cmp81, label %cond.true83, label %cond.end85, !dbg !5544

cond.true83:                                      ; preds = %cond.end76
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5544
  %.pre8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5544
  br label %cond.end85, !dbg !5544

cond.end85:                                       ; preds = %cond.end76, %cond.true83
  %28 = phi i8* [ %26, %cond.end76 ], [ %.pre8, %cond.true83 ], !dbg !5544
  %incdec.ptr87 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !5544
  store i8* %incdec.ptr87, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5544
  store i8 %c1.2, i8* %28, align 1, !dbg !5544
  %29 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5545
  %add.ptr88 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !5545
  %30 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5545
  %cmp89 = icmp ugt i8* %add.ptr88, %30, !dbg !5545
  br i1 %cmp89, label %cond.true91, label %cond.end93, !dbg !5545

cond.true91:                                      ; preds = %cond.end85
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5545
  %.pre9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5545
  br label %cond.end93, !dbg !5545

cond.end93:                                       ; preds = %cond.end85, %cond.true91
  %31 = phi i8* [ %29, %cond.end85 ], [ %.pre9, %cond.true91 ], !dbg !5545
  %incdec.ptr95 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !5545
  store i8* %incdec.ptr95, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5545
  store i8 %c2.1, i8* %31, align 1, !dbg !5545
  %vindex97 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 4, !dbg !5546
  %32 = load %union.tree_node*, %union.tree_node** %vindex97, align 8, !dbg !5546
  %tobool98 = icmp eq %union.tree_node* %32, null, !dbg !5546
  br i1 %tobool98, label %if.end123, label %land.lhs.true, !dbg !5548

land.lhs.true:                                    ; preds = %cond.end93
  %call101 = tail call i32 @host_integerp(%union.tree_node* nonnull %32, i32 0) #6, !dbg !5549
  %tobool102 = icmp eq i32 %call101, 0, !dbg !5549
  br i1 %tobool102, label %if.end123, label %if.then103, !dbg !5550

if.then103:                                       ; preds = %land.lhs.true
  %33 = load %union.tree_node*, %union.tree_node** %vindex97, align 8, !dbg !5551
  %call106 = tail call i64 @tree_low_cst(%union.tree_node* %33, i32 0) #6, !dbg !5553
  tail call fastcc void @stabstr_D(i64 %call106) #8, !dbg !5554
  %34 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5555
  %add.ptr107 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !5555
  %35 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5555
  %cmp108 = icmp ugt i8* %add.ptr107, %35, !dbg !5555
  br i1 %cmp108, label %cond.true110, label %cond.end112, !dbg !5555

cond.true110:                                     ; preds = %if.then103
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5555
  %.pre10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5555
  br label %cond.end112, !dbg !5555

cond.end112:                                      ; preds = %if.then103, %cond.true110
  %36 = phi i8* [ %34, %if.then103 ], [ %.pre10, %cond.true110 ], !dbg !5555
  %incdec.ptr114 = getelementptr inbounds i8, i8* %36, i64 1, !dbg !5555
  store i8* %incdec.ptr114, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5555
  store i8 59, i8* %36, align 1, !dbg !5555
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5556
  %37 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !5556
  tail call fastcc void @dbxout_type(%union.tree_node* %37, i32 0) #8, !dbg !5557
  %38 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5558
  %add.ptr115 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !5558
  %39 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 4), align 8, !dbg !5558
  %cmp116 = icmp ugt i8* %add.ptr115, %39, !dbg !5558
  br i1 %cmp116, label %cond.true118, label %cond.end120, !dbg !5558

cond.true118:                                     ; preds = %cond.end112
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @stabstr_ob, i32 1) #6, !dbg !5558
  %.pre11 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5558
  br label %cond.end120, !dbg !5558

cond.end120:                                      ; preds = %cond.end112, %cond.true118
  %40 = phi i8* [ %38, %cond.end112 ], [ %.pre11, %cond.true118 ], !dbg !5558
  %incdec.ptr122 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !5558
  store i8* %incdec.ptr122, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @stabstr_ob, i64 0, i32 3), align 8, !dbg !5558
  store i8 59, i8* %40, align 1, !dbg !5558
  br label %if.end123, !dbg !5559

if.end123:                                        ; preds = %land.lhs.true, %cond.end93, %cond.end120
  ret void, !dbg !5560
}

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @output_addr_const(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @obstack_free(%struct.obstack*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_type_context(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !5561 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5565, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5566, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.value(metadata i32 0, metadata !5567, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.value(metadata i32 4, metadata !5568, metadata !DIExpression()), !dbg !5569
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 4, %struct.rtx_def** null) #6, !dbg !5570
  ret %struct.rtx_def* %call, !dbg !5571
}

declare dso_local %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @alter_subreg(%struct.rtx_def**) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_pool_constant_mark(%struct.rtx_def*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dbxout_begin_complex_stabs_noforcetext() unnamed_addr #5 !dbg !5572 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5573
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !5574
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5575
  %call1 = tail call i32 @putc(i32 34, %struct._IO_FILE* %1) #6, !dbg !5576
  ret void, !dbg !5577
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_fortran() unnamed_addr #5 !dbg !5578 {
entry:
  %call = tail call fastcc i32 @get_lang_number() #8, !dbg !5583
  call void @llvm.dbg.value(metadata i32 %call, metadata !5582, metadata !DIExpression()), !dbg !5584
  %0 = or i32 %call, 2, !dbg !5585
  %1 = icmp eq i32 %0, 7, !dbg !5585
  %conv = zext i1 %1 to i8, !dbg !5586
  ret i8 %conv, !dbg !5587
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @gt_pch_pa_typevec(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !5588 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !5590, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5591, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !5592, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !5593, metadata !DIExpression()), !dbg !5597
  %0 = load %struct.typeinfo*, %struct.typeinfo** @typevec, align 8, !dbg !5598
  %cmp = icmp eq %struct.typeinfo* %0, null, !dbg !5599
  br i1 %cmp, label %if.end6, label %for.cond.preheader, !dbg !5600

for.cond.preheader:                               ; preds = %entry
  br label %for.end, !dbg !5601

for.end:                                          ; preds = %for.cond.preheader
  call void @llvm.dbg.value(metadata i32 undef, metadata !5594, metadata !DIExpression()), !dbg !5603
  %cmp3 = icmp eq i8* %this_obj, bitcast (%struct.typeinfo** @typevec to i8*), !dbg !5604
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5606

if.then5:                                         ; preds = %for.end
  tail call void %op(i8* bitcast (%struct.typeinfo** @typevec to i8*), i8* %cookie) #6, !dbg !5607
  br label %if.end6, !dbg !5607

if.end6:                                          ; preds = %entry, %for.end, %if.then5
  ret void, !dbg !5608
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1828, !1829, !1830}
!llvm.ident = !{!1831}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dbx_debug_hooks", scope: !2, file: !3, line: 345, type: !1750, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !540, globals: !1647, nameTableKind: None)
!3 = !DIFile(filename: "dbxout.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !520, !525, !530}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "typestatus", file: !3, line: 165, baseType: !7, size: 32, elements: !521)
!521 = !{!522, !523, !524}
!522 = !DIEnumerator(name: "TYPE_UNSEEN", value: 0, isUnsigned: true)
!523 = !DIEnumerator(name: "TYPE_XREF", value: 1, isUnsigned: true)
!524 = !DIEnumerator(name: "TYPE_DEFINED", value: 2, isUnsigned: true)
!525 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "binclstatus", file: !3, line: 203, baseType: !7, size: 32, elements: !526)
!526 = !{!527, !528, !529}
!527 = !DIEnumerator(name: "BINCL_NOT_REQUIRED", value: 0, isUnsigned: true)
!528 = !DIEnumerator(name: "BINCL_PENDING", value: 1, isUnsigned: true)
!529 = !DIEnumerator(name: "BINCL_PROCESSED", value: 2, isUnsigned: true)
!530 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !531, line: 52, baseType: !7, size: 32, elements: !532)
!531 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!532 = !{!533, !534, !535, !536, !537, !538, !539}
!533 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!534 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!535 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!536 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!537 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!538 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!539 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!540 = !{!541, !542, !543, !544, !547, !548, !7, !550, !183, !377, !725, !1620, !1626, !1139, !1629, !1638, !1643, !1644, !606, !604, !545, !1646, !1145}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!543 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !546)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !551, line: 56, baseType: !552)
!551 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !554)
!554 = !{!555, !588, !594, !607, !626, !637, !642, !651, !657, !670, !682, !720, !1000, !1028, !1036, !1037, !1042, !1051, !1057, !1062, !1066, !1070, !1246, !1293, !1299, !1306, !1313, !1339, !1364, !1381, !1393, !1415, !1430, !1602}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !553, file: !151, line: 3372, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !557)
!557 = !{!558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !556, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !556, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !556, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !556, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !556, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !556, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !556, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !556, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !556, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !556, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !556, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !556, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !556, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !556, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !556, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !556, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !556, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !556, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !556, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !556, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !556, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !556, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !556, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !556, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !556, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !556, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !556, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !556, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !556, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !556, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !553, file: !151, line: 3373, baseType: !589, size: 192)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !151, line: 403, baseType: !556, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !589, file: !151, line: 404, baseType: !550, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !589, file: !151, line: 405, baseType: !550, size: 64, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !553, file: !151, line: 3374, baseType: !595, size: 320)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !596)
!596 = !{!597, !598}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !595, file: !151, line: 1385, baseType: !589, size: 192)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !595, file: !151, line: 1386, baseType: !599, size: 128, offset: 192)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !600, line: 58, baseType: !601)
!600 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !600, line: 54, size: 128, elements: !602)
!602 = !{!603, !605}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !601, file: !600, line: 56, baseType: !604, size: 64)
!604 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !601, file: !600, line: 57, baseType: !606, size: 64, offset: 64)
!606 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !553, file: !151, line: 3375, baseType: !608, size: 256)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !609)
!609 = !{!610, !611}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !608, file: !151, line: 1398, baseType: !589, size: 192)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !608, file: !151, line: 1399, baseType: !612, size: 64, offset: 192)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !614, line: 52, size: 256, elements: !615)
!614 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!615 = !{!616, !617, !618, !619, !620, !621, !622}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !613, file: !614, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !613, file: !614, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !613, file: !614, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !613, file: !614, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !613, file: !614, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !613, file: !614, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !613, file: !614, line: 62, baseType: !623, size: 192, offset: 64)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 192, elements: !624)
!624 = !{!625}
!625 = !DISubrange(count: 3)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !553, file: !151, line: 3376, baseType: !627, size: 256)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !628)
!628 = !{!629, !630}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !627, file: !151, line: 1409, baseType: !589, size: 192)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !627, file: !151, line: 1410, baseType: !631, size: 64, offset: 192)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !633, line: 27, size: 192, elements: !634)
!633 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!634 = !{!635, !636}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !632, file: !633, line: 29, baseType: !599, size: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !632, file: !633, line: 30, baseType: !5, size: 32, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !553, file: !151, line: 3377, baseType: !638, size: 256)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !639)
!639 = !{!640, !641}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !638, file: !151, line: 1438, baseType: !589, size: 192)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !638, file: !151, line: 1439, baseType: !550, size: 64, offset: 192)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !553, file: !151, line: 3378, baseType: !643, size: 256)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !644)
!644 = !{!645, !646, !647}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !643, file: !151, line: 1419, baseType: !589, size: 192)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !643, file: !151, line: 1420, baseType: !543, size: 32, offset: 192)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !643, file: !151, line: 1421, baseType: !648, size: 8, offset: 224)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 8, elements: !649)
!649 = !{!650}
!650 = !DISubrange(count: 1)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !553, file: !151, line: 3379, baseType: !652, size: 320)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !653)
!653 = !{!654, !655, !656}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !652, file: !151, line: 1429, baseType: !589, size: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !652, file: !151, line: 1430, baseType: !550, size: 64, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !652, file: !151, line: 1431, baseType: !550, size: 64, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !553, file: !151, line: 3380, baseType: !658, size: 320)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !659)
!659 = !{!660, !661}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !658, file: !151, line: 1461, baseType: !589, size: 192)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !658, file: !151, line: 1462, baseType: !662, size: 128, offset: 192)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !663, line: 31, size: 128, elements: !664)
!663 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!664 = !{!665, !668, !669}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !662, file: !663, line: 32, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !542)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !662, file: !663, line: 33, baseType: !7, size: 32, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !662, file: !663, line: 34, baseType: !7, size: 32, offset: 96)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !553, file: !151, line: 3381, baseType: !671, size: 384)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !672)
!672 = !{!673, !674, !679, !680, !681}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !671, file: !151, line: 2508, baseType: !589, size: 192)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !671, file: !151, line: 2509, baseType: !675, size: 32, offset: 192)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !676, line: 58, baseType: !677)
!676 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !678, line: 44, baseType: !7)
!678 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!679 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !671, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !671, file: !151, line: 2511, baseType: !550, size: 64, offset: 256)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !671, file: !151, line: 2512, baseType: !550, size: 64, offset: 320)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !553, file: !151, line: 3382, baseType: !683, size: 896)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !684)
!684 = !{!685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !683, file: !151, line: 2653, baseType: !671, size: 384)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !683, file: !151, line: 2654, baseType: !550, size: 64, offset: 384)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !683, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !683, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !683, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !683, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !683, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !683, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !683, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !683, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !683, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !683, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !683, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !683, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !683, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !683, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !683, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !683, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !683, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !683, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !683, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !683, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !683, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !683, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !683, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !683, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !683, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !683, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !683, file: !151, line: 2705, baseType: !550, size: 64, offset: 576)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !683, file: !151, line: 2706, baseType: !550, size: 64, offset: 640)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !683, file: !151, line: 2707, baseType: !550, size: 64, offset: 704)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !683, file: !151, line: 2708, baseType: !550, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !683, file: !151, line: 2711, baseType: !718, size: 64, offset: 832)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !553, file: !151, line: 3383, baseType: !721, size: 960)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !722)
!722 = !{!723, !724}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !721, file: !151, line: 2757, baseType: !683, size: 896)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !721, file: !151, line: 2758, baseType: !725, size: 64, offset: 896)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !551, line: 50, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !728)
!728 = !{!729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !727, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !727, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !727, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !727, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !727, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !727, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !727, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !727, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !727, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !727, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !727, file: !378, line: 321, baseType: !740, size: 320, offset: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !741)
!741 = !{!742, !933, !935, !998, !999}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !740, file: !378, line: 316, baseType: !743, size: 64)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 64, elements: !649)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !746)
!746 = !{!747, !748, !749, !750, !751, !759, !760, !772, !775, !835, !836, !910, !923, !930}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !745, file: !378, line: 168, baseType: !543, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !745, file: !378, line: 169, baseType: !7, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !745, file: !378, line: 170, baseType: !548, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !745, file: !378, line: 171, baseType: !725, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !745, file: !378, line: 172, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !551, line: 53, baseType: !753)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !755)
!755 = !{!756, !757}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !754, file: !378, line: 360, baseType: !543, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !754, file: !378, line: 361, baseType: !758, size: 64, offset: 64)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 64, elements: !649)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !745, file: !378, line: 173, baseType: !5, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !745, file: !378, line: 174, baseType: !761, size: 32)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !763)
!763 = !{!764, !765, !766, !767, !768, !769, !770, !771}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !762, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !762, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !762, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !762, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !762, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !762, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !762, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !762, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !745, file: !378, line: 175, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !378, line: 175, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !745, file: !378, line: 176, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !778, line: 75, size: 256, elements: !779)
!778 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!779 = !{!780, !794, !795, !796}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !777, file: !778, line: 76, baseType: !781, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !778, line: 68, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !778, line: 63, size: 320, elements: !784)
!784 = !{!785, !787, !788, !789}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !783, file: !778, line: 64, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !783, file: !778, line: 65, baseType: !786, size: 64, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !783, file: !778, line: 66, baseType: !7, size: 32, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !783, file: !778, line: 67, baseType: !790, size: 128, offset: 192)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !791, size: 128, elements: !792)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !778, line: 29, baseType: !604)
!792 = !{!793}
!793 = !DISubrange(count: 2)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !777, file: !778, line: 77, baseType: !781, size: 64, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !777, file: !778, line: 78, baseType: !7, size: 32, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !777, file: !778, line: 79, baseType: !797, size: 64, offset: 192)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !778, line: 49, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !778, line: 45, size: 832, elements: !800)
!800 = !{!801, !802, !803}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !799, file: !778, line: 46, baseType: !786, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !799, file: !778, line: 47, baseType: !776, size: 64, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !799, file: !778, line: 48, baseType: !804, size: 704, offset: 128)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !805, line: 164, size: 704, elements: !806)
!805 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!806 = !{!807, !808, !818, !819, !820, !821, !822, !823, !827, !831, !832, !833, !834}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !804, file: !805, line: 166, baseType: !606, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !804, file: !805, line: 167, baseType: !809, size: 64, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !805, line: 157, size: 192, elements: !811)
!811 = !{!812, !813, !814}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !810, file: !805, line: 159, baseType: !545, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !810, file: !805, line: 160, baseType: !809, size: 64, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !810, file: !805, line: 161, baseType: !815, size: 32, offset: 128)
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 32, elements: !816)
!816 = !{!817}
!817 = !DISubrange(count: 4)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !804, file: !805, line: 168, baseType: !545, size: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !804, file: !805, line: 169, baseType: !545, size: 64, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !804, file: !805, line: 170, baseType: !545, size: 64, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !804, file: !805, line: 171, baseType: !606, size: 64, offset: 320)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !804, file: !805, line: 172, baseType: !543, size: 32, offset: 384)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !804, file: !805, line: 176, baseType: !824, size: 64, offset: 448)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!809, !547, !606}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !804, file: !805, line: 177, baseType: !828, size: 64, offset: 512)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !547, !809}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !804, file: !805, line: 178, baseType: !547, size: 64, offset: 576)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !804, file: !805, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !804, file: !805, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !804, file: !805, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !745, file: !378, line: 177, baseType: !550, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !745, file: !378, line: 178, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !839)
!839 = !{!840, !875, !876, !877, !880, !884, !885, !886, !904, !905, !906, !907, !908, !909}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !838, file: !135, line: 219, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !844)
!844 = !{!845}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !843, file: !135, line: 151, baseType: !846, size: 128)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !848)
!848 = !{!849, !850, !851}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !847, file: !135, line: 150, baseType: !7, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !847, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !847, file: !135, line: 150, baseType: !852, size: 64, offset: 64)
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !853, size: 64, elements: !649)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !551, line: 108, baseType: !854)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !856)
!856 = !{!857, !858, !859, !867, !868, !869, !870, !871, !872, !873}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !855, file: !135, line: 124, baseType: !837, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !855, file: !135, line: 125, baseType: !837, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !855, file: !135, line: 131, baseType: !860, size: 64, offset: 128)
!860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !861)
!861 = !{!862, !866}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !860, file: !135, line: 129, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !551, line: 66, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !551, line: 65, flags: DIFlagFwdDecl)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !860, file: !135, line: 130, baseType: !725, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !855, file: !135, line: 134, baseType: !547, size: 64, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !855, file: !135, line: 137, baseType: !550, size: 64, offset: 256)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !855, file: !135, line: 138, baseType: !675, size: 32, offset: 320)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !855, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !855, file: !135, line: 144, baseType: !543, size: 32, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !855, file: !135, line: 145, baseType: !543, size: 32, offset: 416)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !855, file: !135, line: 146, baseType: !874, size: 64, offset: 448)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !606)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !838, file: !135, line: 220, baseType: !841, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !838, file: !135, line: 223, baseType: !547, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !838, file: !135, line: 226, baseType: !878, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !838, file: !135, line: 229, baseType: !881, size: 128, offset: 256)
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !882, size: 128, elements: !792)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !838, file: !135, line: 232, baseType: !837, size: 64, offset: 384)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !838, file: !135, line: 233, baseType: !837, size: 64, offset: 448)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !838, file: !135, line: 238, baseType: !887, size: 64, offset: 512)
!887 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !888)
!888 = !{!889, !895}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !887, file: !135, line: 236, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !892)
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !891, file: !135, line: 275, baseType: !863, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !891, file: !135, line: 278, baseType: !863, size: 64, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !887, file: !135, line: 237, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !898)
!898 = !{!899, !900, !901, !902, !903}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !897, file: !135, line: 261, baseType: !725, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !897, file: !135, line: 262, baseType: !725, size: 64, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !897, file: !135, line: 266, baseType: !725, size: 64, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !897, file: !135, line: 267, baseType: !725, size: 64, offset: 192)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !897, file: !135, line: 270, baseType: !543, size: 32, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !838, file: !135, line: 241, baseType: !874, size: 64, offset: 576)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !838, file: !135, line: 244, baseType: !543, size: 32, offset: 640)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !838, file: !135, line: 247, baseType: !543, size: 32, offset: 672)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !838, file: !135, line: 250, baseType: !543, size: 32, offset: 704)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !838, file: !135, line: 253, baseType: !543, size: 32, offset: 736)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !838, file: !135, line: 256, baseType: !543, size: 32, offset: 768)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !745, file: !378, line: 179, baseType: !911, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !914)
!914 = !{!915, !916, !917, !918, !921, !922}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !913, file: !378, line: 144, baseType: !550, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !913, file: !378, line: 145, baseType: !725, size: 64, offset: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !913, file: !378, line: 146, baseType: !725, size: 64, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !913, file: !378, line: 147, baseType: !919, size: 32, offset: 192)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !920, line: 31, baseType: !543)
!920 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!921 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !913, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !913, file: !378, line: 149, baseType: !542, size: 8, offset: 256)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !745, file: !378, line: 180, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !926)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !926, file: !378, line: 160, baseType: !550, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !926, file: !378, line: 161, baseType: !606, size: 64, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !745, file: !378, line: 181, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !378, line: 181, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !740, file: !378, line: 317, baseType: !934, size: 64)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !606, size: 64, elements: !649)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !740, file: !378, line: 318, baseType: !936, size: 320)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !937)
!937 = !{!938, !940, !997}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !936, file: !378, line: 190, baseType: !939, size: 192)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 192, elements: !624)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !936, file: !378, line: 193, baseType: !941, size: 64, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !943)
!943 = !{!944, !982, !983, !984, !996}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !942, file: !378, line: 208, baseType: !945, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !551, line: 62, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !948, line: 538, size: 256, elements: !949)
!948 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!949 = !{!950, !954, !960, !973}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !947, file: !948, line: 539, baseType: !951, size: 32)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !948, line: 482, size: 32, elements: !952)
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !951, file: !948, line: 484, baseType: !7, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !947, file: !948, line: 540, baseType: !955, size: 192)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !948, line: 488, size: 192, elements: !956)
!956 = !{!957, !958, !959}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !955, file: !948, line: 489, baseType: !951, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !955, file: !948, line: 492, baseType: !548, size: 64, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !955, file: !948, line: 496, baseType: !550, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !947, file: !948, line: 541, baseType: !961, size: 256)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !948, line: 504, size: 256, elements: !962)
!962 = !{!963, !964, !971, !972}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !961, file: !948, line: 505, baseType: !951, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !961, file: !948, line: 509, baseType: !965, size: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !948, line: 501, baseType: !966)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !961, file: !948, line: 510, baseType: !969, size: 64, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !961, file: !948, line: 513, baseType: !945, size: 64, offset: 192)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !947, file: !948, line: 542, baseType: !974, size: 128)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !948, line: 530, size: 128, elements: !975)
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !974, file: !948, line: 531, baseType: !951, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !974, file: !948, line: 534, baseType: !978, size: 64, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !948, line: 525, baseType: !979)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!542, !550, !548, !604, !604}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !942, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !942, file: !378, line: 214, baseType: !606, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !942, file: !378, line: 224, baseType: !985, size: 64, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !988)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !987, file: !378, line: 202, baseType: !990, size: 128)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !992)
!992 = !{!993, !994, !995}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !991, file: !378, line: 200, baseType: !7, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !991, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !991, file: !378, line: 200, baseType: !758, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !942, file: !378, line: 234, baseType: !985, size: 64, offset: 256)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !936, file: !378, line: 197, baseType: !606, size: 64, offset: 256)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !740, file: !378, line: 319, baseType: !613, size: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !740, file: !378, line: 320, baseType: !632, size: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !553, file: !151, line: 3384, baseType: !1001, size: 1472)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1002)
!1002 = !{!1003, !1024, !1025, !1026, !1027}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1001, file: !151, line: 3115, baseType: !1004, size: 1216)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1004, file: !151, line: 2985, baseType: !721, size: 960)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1004, file: !151, line: 2986, baseType: !550, size: 64, offset: 960)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1004, file: !151, line: 2987, baseType: !550, size: 64, offset: 1024)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1004, file: !151, line: 2988, baseType: !550, size: 64, offset: 1088)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1004, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1004, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1004, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1004, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1004, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1004, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1004, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1004, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1004, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1004, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1004, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1004, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1004, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1004, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1001, file: !151, line: 3117, baseType: !550, size: 64, offset: 1216)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1001, file: !151, line: 3119, baseType: !550, size: 64, offset: 1280)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1001, file: !151, line: 3121, baseType: !550, size: 64, offset: 1344)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1001, file: !151, line: 3123, baseType: !550, size: 64, offset: 1408)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !553, file: !151, line: 3385, baseType: !1029, size: 1088)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1030)
!1030 = !{!1031, !1032, !1033}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1029, file: !151, line: 2875, baseType: !721, size: 960)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1029, file: !151, line: 2876, baseType: !725, size: 64, offset: 960)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1029, file: !151, line: 2877, baseType: !1034, size: 64, offset: 1024)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !553, file: !151, line: 3386, baseType: !1004, size: 1216)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !553, file: !151, line: 3387, baseType: !1038, size: 1280)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1038, file: !151, line: 3094, baseType: !1004, size: 1216)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1038, file: !151, line: 3095, baseType: !1034, size: 64, offset: 1216)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !553, file: !151, line: 3388, baseType: !1043, size: 1216)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1049, !1050}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1043, file: !151, line: 2825, baseType: !683, size: 896)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1043, file: !151, line: 2827, baseType: !550, size: 64, offset: 896)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1043, file: !151, line: 2828, baseType: !550, size: 64, offset: 960)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1043, file: !151, line: 2829, baseType: !550, size: 64, offset: 1024)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1043, file: !151, line: 2830, baseType: !550, size: 64, offset: 1088)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1043, file: !151, line: 2831, baseType: !550, size: 64, offset: 1152)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !553, file: !151, line: 3389, baseType: !1052, size: 1024)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1053)
!1053 = !{!1054, !1055, !1056}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1052, file: !151, line: 2851, baseType: !721, size: 960)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1052, file: !151, line: 2852, baseType: !543, size: 32, offset: 960)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1052, file: !151, line: 2853, baseType: !543, size: 32, offset: 992)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !553, file: !151, line: 3390, baseType: !1058, size: 1024)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1058, file: !151, line: 2858, baseType: !721, size: 960)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1058, file: !151, line: 2859, baseType: !1034, size: 64, offset: 960)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !553, file: !151, line: 3391, baseType: !1063, size: 960)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1064)
!1064 = !{!1065}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1063, file: !151, line: 2863, baseType: !721, size: 960)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !553, file: !151, line: 3392, baseType: !1067, size: 1472)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1068)
!1068 = !{!1069}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1067, file: !151, line: 3305, baseType: !1001, size: 1472)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !553, file: !151, line: 3393, baseType: !1071, size: 1792)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1072)
!1072 = !{!1073, !1074, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1071, file: !151, line: 3249, baseType: !1001, size: 1472)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1071, file: !151, line: 3251, baseType: !1075, size: 64, offset: 1472)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1077, line: 463, size: 1152, elements: !1078)
!1077 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1078 = !{!1079, !1082, !1113, !1114, !1117, !1120, !1170, !1171, !1172, !1173, !1174, !1198, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1076, file: !1077, line: 464, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1077, line: 464, flags: DIFlagFwdDecl)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1076, file: !1077, line: 467, baseType: !1083, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1085)
!1085 = !{!1086, !1088, !1089, !1102, !1103, !1104, !1105, !1106, !1107, !1109, !1111, !1112}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1084, file: !135, line: 377, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !551, line: 111, baseType: !837)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1084, file: !135, line: 378, baseType: !1087, size: 64, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1084, file: !135, line: 381, baseType: !1090, size: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1093)
!1093 = !{!1094}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1092, file: !135, line: 282, baseType: !1095, size: 128)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1097)
!1097 = !{!1098, !1099, !1100}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1096, file: !135, line: 281, baseType: !7, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1096, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1096, file: !135, line: 281, baseType: !1101, size: 64, offset: 64)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 64, elements: !649)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1084, file: !135, line: 384, baseType: !543, size: 32, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1084, file: !135, line: 387, baseType: !543, size: 32, offset: 224)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1084, file: !135, line: 390, baseType: !543, size: 32, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1084, file: !135, line: 394, baseType: !1090, size: 64, offset: 320)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1084, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1084, file: !135, line: 399, baseType: !1108, size: 64, offset: 416)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !792)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1084, file: !135, line: 402, baseType: !1110, size: 64, offset: 480)
!1110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !792)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1084, file: !135, line: 406, baseType: !543, size: 32, offset: 544)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1084, file: !135, line: 409, baseType: !543, size: 32, offset: 576)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1076, file: !1077, line: 470, baseType: !864, size: 64, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1076, file: !1077, line: 473, baseType: !1115, size: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1077, line: 166, flags: DIFlagFwdDecl)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1076, file: !1077, line: 476, baseType: !1118, size: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1077, line: 476, flags: DIFlagFwdDecl)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1076, file: !1077, line: 479, baseType: !1121, size: 64, offset: 320)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1122, line: 144, baseType: !1123)
!1122 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1122, line: 100, size: 896, elements: !1125)
!1125 = !{!1126, !1132, !1137, !1142, !1144, !1147, !1148, !1149, !1150, !1151, !1156, !1158, !1159, !1164, !1169}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1124, file: !1122, line: 102, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1122, line: 52, baseType: !1128)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!1131, !969}
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1122, line: 47, baseType: !7)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1124, file: !1122, line: 105, baseType: !1133, size: 64, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1122, line: 59, baseType: !1134)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!543, !969, !969}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1124, file: !1122, line: 108, baseType: !1138, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1122, line: 63, baseType: !1139)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{null, !547}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1124, file: !1122, line: 111, baseType: !1143, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1124, file: !1122, line: 114, baseType: !1145, size: 64, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1146, line: 46, baseType: !604)
!1146 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1124, file: !1122, line: 117, baseType: !1145, size: 64, offset: 320)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1124, file: !1122, line: 120, baseType: !1145, size: 64, offset: 384)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1124, file: !1122, line: 124, baseType: !7, size: 32, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1124, file: !1122, line: 128, baseType: !7, size: 32, offset: 480)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1124, file: !1122, line: 131, baseType: !1152, size: 64, offset: 512)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1122, line: 75, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!547, !1145, !1145}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1124, file: !1122, line: 132, baseType: !1157, size: 64, offset: 576)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1122, line: 78, baseType: !1139)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1124, file: !1122, line: 135, baseType: !547, size: 64, offset: 640)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1124, file: !1122, line: 136, baseType: !1160, size: 64, offset: 704)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1122, line: 82, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!547, !547, !1145, !1145}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1124, file: !1122, line: 137, baseType: !1165, size: 64, offset: 768)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1122, line: 83, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{null, !547, !547}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1124, file: !1122, line: 141, baseType: !7, size: 32, offset: 832)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1076, file: !1077, line: 484, baseType: !550, size: 64, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1076, file: !1077, line: 488, baseType: !550, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1076, file: !1077, line: 493, baseType: !550, size: 64, offset: 512)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1076, file: !1077, line: 496, baseType: !550, size: 64, offset: 576)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1076, file: !1077, line: 501, baseType: !1175, size: 64, offset: 640)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1177)
!1177 = !{!1178, !1181, !1182, !1183, !1184, !1186, !1187, !1192, !1193, !1194, !1195, !1196, !1197}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1176, file: !146, line: 2356, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1176, file: !146, line: 2357, baseType: !548, size: 64, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1176, file: !146, line: 2358, baseType: !543, size: 32, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1176, file: !146, line: 2359, baseType: !543, size: 32, offset: 160)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1176, file: !146, line: 2360, baseType: !1185, size: 128, offset: 192)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 128, elements: !816)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1176, file: !146, line: 2364, baseType: !543, size: 32, offset: 320)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1176, file: !146, line: 2367, baseType: !1188, size: 128, offset: 384)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1188, file: !146, line: 2351, baseType: !725, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1188, file: !146, line: 2352, baseType: !606, size: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1176, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1176, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1176, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1176, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1176, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1176, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1076, file: !1077, line: 504, baseType: !1199, size: 64, offset: 704)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1077, line: 504, flags: DIFlagFwdDecl)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1076, file: !1077, line: 507, baseType: !1121, size: 64, offset: 768)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1076, file: !1077, line: 510, baseType: !543, size: 32, offset: 832)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1076, file: !1077, line: 513, baseType: !543, size: 32, offset: 864)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1076, file: !1077, line: 516, baseType: !675, size: 32, offset: 896)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1076, file: !1077, line: 519, baseType: !675, size: 32, offset: 928)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1076, file: !1077, line: 522, baseType: !7, size: 32, offset: 960)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1076, file: !1077, line: 523, baseType: !7, size: 32, offset: 992)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1076, file: !1077, line: 528, baseType: !548, size: 64, offset: 1024)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1076, file: !1077, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1076, file: !1077, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1076, file: !1077, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1076, file: !1077, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1076, file: !1077, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1076, file: !1077, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1076, file: !1077, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1076, file: !1077, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1076, file: !1077, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1076, file: !1077, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1076, file: !1077, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1076, file: !1077, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1076, file: !1077, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1076, file: !1077, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1076, file: !1077, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1076, file: !1077, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1071, file: !151, line: 3254, baseType: !550, size: 64, offset: 1536)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1071, file: !151, line: 3257, baseType: !550, size: 64, offset: 1600)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1071, file: !151, line: 3258, baseType: !550, size: 64, offset: 1664)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1071, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1071, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1071, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1071, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1071, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1071, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1071, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1071, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1071, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1071, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1071, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1071, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1071, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1071, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1071, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1071, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1071, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1071, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !553, file: !151, line: 3394, baseType: !1247, size: 1344)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1247, file: !151, line: 2280, baseType: !589, size: 192)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1247, file: !151, line: 2281, baseType: !550, size: 64, offset: 192)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1247, file: !151, line: 2282, baseType: !550, size: 64, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1247, file: !151, line: 2283, baseType: !550, size: 64, offset: 320)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1247, file: !151, line: 2284, baseType: !550, size: 64, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1247, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1247, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1247, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1247, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1247, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1247, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1247, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1247, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1247, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1247, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1247, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1247, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1247, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1247, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1247, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1247, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1247, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1247, file: !151, line: 2306, baseType: !919, size: 32, offset: 544)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1247, file: !151, line: 2307, baseType: !550, size: 64, offset: 576)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1247, file: !151, line: 2308, baseType: !550, size: 64, offset: 640)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1247, file: !151, line: 2314, baseType: !1275, size: 64, offset: 704)
!1275 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1276)
!1276 = !{!1277, !1278, !1279}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1275, file: !151, line: 2310, baseType: !543, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1275, file: !151, line: 2311, baseType: !548, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1275, file: !151, line: 2312, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1247, file: !151, line: 2315, baseType: !550, size: 64, offset: 768)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1247, file: !151, line: 2316, baseType: !550, size: 64, offset: 832)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1247, file: !151, line: 2317, baseType: !550, size: 64, offset: 896)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1247, file: !151, line: 2318, baseType: !550, size: 64, offset: 960)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1247, file: !151, line: 2319, baseType: !550, size: 64, offset: 1024)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1247, file: !151, line: 2320, baseType: !550, size: 64, offset: 1088)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1247, file: !151, line: 2321, baseType: !550, size: 64, offset: 1152)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1247, file: !151, line: 2322, baseType: !550, size: 64, offset: 1216)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1247, file: !151, line: 2324, baseType: !1291, size: 64, offset: 1280)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !553, file: !151, line: 3395, baseType: !1294, size: 320)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1295)
!1295 = !{!1296, !1297, !1298}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1294, file: !151, line: 1470, baseType: !589, size: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1294, file: !151, line: 1471, baseType: !550, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1294, file: !151, line: 1472, baseType: !550, size: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !553, file: !151, line: 3396, baseType: !1300, size: 320)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1301)
!1301 = !{!1302, !1303, !1304}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1300, file: !151, line: 1483, baseType: !589, size: 192)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1300, file: !151, line: 1484, baseType: !543, size: 32, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1300, file: !151, line: 1485, baseType: !1305, size: 64, offset: 256)
!1305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 64, elements: !649)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !553, file: !151, line: 3397, baseType: !1307, size: 384)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1308)
!1308 = !{!1309, !1310, !1311, !1312}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1307, file: !151, line: 1830, baseType: !589, size: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1307, file: !151, line: 1831, baseType: !675, size: 32, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1307, file: !151, line: 1832, baseType: !550, size: 64, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1307, file: !151, line: 1835, baseType: !1305, size: 64, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !553, file: !151, line: 3398, baseType: !1314, size: 704)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1322, !1323, !1326}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1314, file: !151, line: 1899, baseType: !589, size: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1314, file: !151, line: 1902, baseType: !550, size: 64, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1314, file: !151, line: 1905, baseType: !1319, size: 64, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !551, line: 58, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !551, line: 57, flags: DIFlagFwdDecl)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1314, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1314, file: !151, line: 1911, baseType: !1324, size: 64, offset: 384)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1314, file: !151, line: 1914, baseType: !1327, size: 256, offset: 448)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1328)
!1328 = !{!1329, !1331, !1332, !1337}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1327, file: !151, line: 1884, baseType: !1330, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1327, file: !151, line: 1885, baseType: !1330, size: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1327, file: !151, line: 1891, baseType: !1333, size: 64, offset: 128)
!1333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1327, file: !151, line: 1891, size: 64, elements: !1334)
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1333, file: !151, line: 1891, baseType: !1319, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1333, file: !151, line: 1891, baseType: !550, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1327, file: !151, line: 1892, baseType: !1338, size: 64, offset: 192)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !553, file: !151, line: 3399, baseType: !1340, size: 704)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345, !1346, !1347, !1359, !1360, !1361, !1362, !1363}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1340, file: !151, line: 2009, baseType: !589, size: 192)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1340, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1340, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1340, file: !151, line: 2014, baseType: !675, size: 32, offset: 224)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1340, file: !151, line: 2016, baseType: !550, size: 64, offset: 256)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1340, file: !151, line: 2017, baseType: !1348, size: 64, offset: 320)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1351)
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1350, file: !151, line: 183, baseType: !1353, size: 128)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1355)
!1355 = !{!1356, !1357, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1354, file: !151, line: 182, baseType: !7, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1354, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1354, file: !151, line: 182, baseType: !1305, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1340, file: !151, line: 2019, baseType: !550, size: 64, offset: 384)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1340, file: !151, line: 2020, baseType: !550, size: 64, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1340, file: !151, line: 2021, baseType: !550, size: 64, offset: 512)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1340, file: !151, line: 2022, baseType: !550, size: 64, offset: 576)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1340, file: !151, line: 2023, baseType: !550, size: 64, offset: 640)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !553, file: !151, line: 3400, baseType: !1365, size: 832)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1365, file: !151, line: 2431, baseType: !589, size: 192)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1365, file: !151, line: 2433, baseType: !550, size: 64, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1365, file: !151, line: 2434, baseType: !550, size: 64, offset: 256)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1365, file: !151, line: 2435, baseType: !550, size: 64, offset: 320)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1365, file: !151, line: 2436, baseType: !550, size: 64, offset: 384)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1365, file: !151, line: 2437, baseType: !1348, size: 64, offset: 448)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1365, file: !151, line: 2438, baseType: !550, size: 64, offset: 512)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1365, file: !151, line: 2440, baseType: !550, size: 64, offset: 576)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1365, file: !151, line: 2441, baseType: !550, size: 64, offset: 640)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1365, file: !151, line: 2443, baseType: !1377, size: 128, offset: 704)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1378, file: !151, line: 182, baseType: !1353, size: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !553, file: !151, line: 3401, baseType: !1382, size: 320)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1383)
!1383 = !{!1384, !1385, !1392}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1382, file: !151, line: 3329, baseType: !589, size: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1382, file: !151, line: 3330, baseType: !1386, size: 64, offset: 192)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1388)
!1388 = !{!1389, !1390, !1391}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1387, file: !151, line: 3322, baseType: !1386, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1387, file: !151, line: 3323, baseType: !1386, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1387, file: !151, line: 3324, baseType: !550, size: 64, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1382, file: !151, line: 3331, baseType: !1386, size: 64, offset: 256)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !553, file: !151, line: 3402, baseType: !1394, size: 256)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1394, file: !151, line: 1541, baseType: !589, size: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1394, file: !151, line: 1542, baseType: !1398, size: 64, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1401)
!1401 = !{!1402}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1400, file: !151, line: 1538, baseType: !1403, size: 192)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1405)
!1405 = !{!1406, !1407, !1408}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1404, file: !151, line: 1537, baseType: !7, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1404, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1404, file: !151, line: 1537, baseType: !1409, size: 128, offset: 64)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 128, elements: !649)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1412)
!1412 = !{!1413, !1414}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1411, file: !151, line: 1533, baseType: !550, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1411, file: !151, line: 1534, baseType: !550, size: 64, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !553, file: !151, line: 3403, baseType: !1416, size: 512)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1427, !1428, !1429}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1416, file: !151, line: 1939, baseType: !589, size: 192)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1416, file: !151, line: 1940, baseType: !675, size: 32, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1416, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1416, file: !151, line: 1946, baseType: !1422, size: 32, offset: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1423)
!1423 = !{!1424, !1425, !1426}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1422, file: !151, line: 1943, baseType: !169, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1422, file: !151, line: 1944, baseType: !176, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1422, file: !151, line: 1945, baseType: !183, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1416, file: !151, line: 1950, baseType: !863, size: 64, offset: 320)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1416, file: !151, line: 1951, baseType: !863, size: 64, offset: 384)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1416, file: !151, line: 1953, baseType: !1305, size: 64, offset: 448)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !553, file: !151, line: 3404, baseType: !1431, size: 1664)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1432)
!1432 = !{!1433, !1434}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1431, file: !151, line: 3338, baseType: !589, size: 192)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1431, file: !151, line: 3341, baseType: !1435, size: 1472, offset: 192)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1436, line: 410, size: 1472, elements: !1437)
!1436 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1435, file: !1436, line: 412, baseType: !543, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1435, file: !1436, line: 413, baseType: !543, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1435, file: !1436, line: 414, baseType: !543, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1435, file: !1436, line: 415, baseType: !543, size: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1435, file: !1436, line: 416, baseType: !543, size: 32, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1435, file: !1436, line: 417, baseType: !543, size: 32, offset: 160)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1435, file: !1436, line: 418, baseType: !542, size: 8, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1435, file: !1436, line: 419, baseType: !542, size: 8, offset: 200)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1435, file: !1436, line: 420, baseType: !1447, size: 8, offset: 208)
!1447 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1435, file: !1436, line: 421, baseType: !1447, size: 8, offset: 216)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1435, file: !1436, line: 422, baseType: !1447, size: 8, offset: 224)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1435, file: !1436, line: 423, baseType: !1447, size: 8, offset: 232)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1435, file: !1436, line: 424, baseType: !1447, size: 8, offset: 240)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1435, file: !1436, line: 425, baseType: !1447, size: 8, offset: 248)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1435, file: !1436, line: 426, baseType: !1447, size: 8, offset: 256)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1435, file: !1436, line: 427, baseType: !1447, size: 8, offset: 264)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1435, file: !1436, line: 428, baseType: !1447, size: 8, offset: 272)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1435, file: !1436, line: 429, baseType: !1447, size: 8, offset: 280)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1435, file: !1436, line: 430, baseType: !1447, size: 8, offset: 288)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1435, file: !1436, line: 431, baseType: !1447, size: 8, offset: 296)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1435, file: !1436, line: 432, baseType: !1447, size: 8, offset: 304)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1435, file: !1436, line: 433, baseType: !1447, size: 8, offset: 312)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1435, file: !1436, line: 434, baseType: !1447, size: 8, offset: 320)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1435, file: !1436, line: 435, baseType: !1447, size: 8, offset: 328)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1435, file: !1436, line: 436, baseType: !1447, size: 8, offset: 336)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1435, file: !1436, line: 437, baseType: !1447, size: 8, offset: 344)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1435, file: !1436, line: 438, baseType: !1447, size: 8, offset: 352)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1435, file: !1436, line: 439, baseType: !1447, size: 8, offset: 360)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1435, file: !1436, line: 440, baseType: !1447, size: 8, offset: 368)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1435, file: !1436, line: 441, baseType: !1447, size: 8, offset: 376)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1435, file: !1436, line: 442, baseType: !1447, size: 8, offset: 384)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1435, file: !1436, line: 443, baseType: !1447, size: 8, offset: 392)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1435, file: !1436, line: 444, baseType: !1447, size: 8, offset: 400)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1435, file: !1436, line: 445, baseType: !1447, size: 8, offset: 408)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1435, file: !1436, line: 446, baseType: !1447, size: 8, offset: 416)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1435, file: !1436, line: 447, baseType: !1447, size: 8, offset: 424)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1435, file: !1436, line: 448, baseType: !1447, size: 8, offset: 432)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1435, file: !1436, line: 449, baseType: !1447, size: 8, offset: 440)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1435, file: !1436, line: 450, baseType: !1447, size: 8, offset: 448)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1435, file: !1436, line: 451, baseType: !1447, size: 8, offset: 456)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1435, file: !1436, line: 452, baseType: !1447, size: 8, offset: 464)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1435, file: !1436, line: 453, baseType: !1447, size: 8, offset: 472)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1435, file: !1436, line: 454, baseType: !1447, size: 8, offset: 480)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1435, file: !1436, line: 455, baseType: !1447, size: 8, offset: 488)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1435, file: !1436, line: 456, baseType: !1447, size: 8, offset: 496)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1435, file: !1436, line: 457, baseType: !1447, size: 8, offset: 504)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1435, file: !1436, line: 458, baseType: !1447, size: 8, offset: 512)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1435, file: !1436, line: 459, baseType: !1447, size: 8, offset: 520)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1435, file: !1436, line: 460, baseType: !1447, size: 8, offset: 528)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1435, file: !1436, line: 461, baseType: !1447, size: 8, offset: 536)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1435, file: !1436, line: 462, baseType: !1447, size: 8, offset: 544)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1435, file: !1436, line: 463, baseType: !1447, size: 8, offset: 552)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1435, file: !1436, line: 464, baseType: !1447, size: 8, offset: 560)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1435, file: !1436, line: 465, baseType: !1447, size: 8, offset: 568)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1435, file: !1436, line: 466, baseType: !1447, size: 8, offset: 576)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1435, file: !1436, line: 467, baseType: !1447, size: 8, offset: 584)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1435, file: !1436, line: 468, baseType: !1447, size: 8, offset: 592)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1435, file: !1436, line: 469, baseType: !1447, size: 8, offset: 600)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1435, file: !1436, line: 470, baseType: !1447, size: 8, offset: 608)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1435, file: !1436, line: 471, baseType: !1447, size: 8, offset: 616)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1435, file: !1436, line: 472, baseType: !1447, size: 8, offset: 624)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1435, file: !1436, line: 473, baseType: !1447, size: 8, offset: 632)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1435, file: !1436, line: 474, baseType: !1447, size: 8, offset: 640)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1435, file: !1436, line: 475, baseType: !1447, size: 8, offset: 648)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1435, file: !1436, line: 476, baseType: !1447, size: 8, offset: 656)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1435, file: !1436, line: 477, baseType: !1447, size: 8, offset: 664)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1435, file: !1436, line: 478, baseType: !1447, size: 8, offset: 672)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1435, file: !1436, line: 479, baseType: !1447, size: 8, offset: 680)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1435, file: !1436, line: 480, baseType: !1447, size: 8, offset: 688)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1435, file: !1436, line: 481, baseType: !1447, size: 8, offset: 696)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1435, file: !1436, line: 482, baseType: !1447, size: 8, offset: 704)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1435, file: !1436, line: 483, baseType: !1447, size: 8, offset: 712)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1435, file: !1436, line: 484, baseType: !1447, size: 8, offset: 720)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1435, file: !1436, line: 485, baseType: !1447, size: 8, offset: 728)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1435, file: !1436, line: 486, baseType: !1447, size: 8, offset: 736)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1435, file: !1436, line: 487, baseType: !1447, size: 8, offset: 744)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1435, file: !1436, line: 488, baseType: !1447, size: 8, offset: 752)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1435, file: !1436, line: 489, baseType: !1447, size: 8, offset: 760)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1435, file: !1436, line: 490, baseType: !1447, size: 8, offset: 768)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1435, file: !1436, line: 491, baseType: !1447, size: 8, offset: 776)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1435, file: !1436, line: 492, baseType: !1447, size: 8, offset: 784)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1435, file: !1436, line: 493, baseType: !1447, size: 8, offset: 792)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1435, file: !1436, line: 494, baseType: !1447, size: 8, offset: 800)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1435, file: !1436, line: 495, baseType: !1447, size: 8, offset: 808)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1435, file: !1436, line: 496, baseType: !1447, size: 8, offset: 816)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1435, file: !1436, line: 497, baseType: !1447, size: 8, offset: 824)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1435, file: !1436, line: 498, baseType: !1447, size: 8, offset: 832)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1435, file: !1436, line: 499, baseType: !1447, size: 8, offset: 840)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1435, file: !1436, line: 500, baseType: !1447, size: 8, offset: 848)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1435, file: !1436, line: 501, baseType: !1447, size: 8, offset: 856)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1435, file: !1436, line: 502, baseType: !1447, size: 8, offset: 864)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1435, file: !1436, line: 503, baseType: !1447, size: 8, offset: 872)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1435, file: !1436, line: 504, baseType: !1447, size: 8, offset: 880)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1435, file: !1436, line: 505, baseType: !1447, size: 8, offset: 888)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1435, file: !1436, line: 506, baseType: !1447, size: 8, offset: 896)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1435, file: !1436, line: 507, baseType: !1447, size: 8, offset: 904)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1435, file: !1436, line: 508, baseType: !1447, size: 8, offset: 912)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1435, file: !1436, line: 509, baseType: !1447, size: 8, offset: 920)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1435, file: !1436, line: 510, baseType: !1447, size: 8, offset: 928)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1435, file: !1436, line: 511, baseType: !1447, size: 8, offset: 936)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1435, file: !1436, line: 512, baseType: !1447, size: 8, offset: 944)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1435, file: !1436, line: 513, baseType: !1447, size: 8, offset: 952)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1435, file: !1436, line: 514, baseType: !1447, size: 8, offset: 960)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1435, file: !1436, line: 515, baseType: !1447, size: 8, offset: 968)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1435, file: !1436, line: 516, baseType: !1447, size: 8, offset: 976)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1435, file: !1436, line: 517, baseType: !1447, size: 8, offset: 984)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1435, file: !1436, line: 518, baseType: !1447, size: 8, offset: 992)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1435, file: !1436, line: 519, baseType: !1447, size: 8, offset: 1000)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1435, file: !1436, line: 520, baseType: !1447, size: 8, offset: 1008)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1435, file: !1436, line: 521, baseType: !1447, size: 8, offset: 1016)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1435, file: !1436, line: 522, baseType: !1447, size: 8, offset: 1024)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1435, file: !1436, line: 523, baseType: !1447, size: 8, offset: 1032)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1435, file: !1436, line: 524, baseType: !1447, size: 8, offset: 1040)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1435, file: !1436, line: 525, baseType: !1447, size: 8, offset: 1048)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1435, file: !1436, line: 526, baseType: !1447, size: 8, offset: 1056)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1435, file: !1436, line: 527, baseType: !1447, size: 8, offset: 1064)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1435, file: !1436, line: 528, baseType: !1447, size: 8, offset: 1072)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1435, file: !1436, line: 529, baseType: !1447, size: 8, offset: 1080)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1435, file: !1436, line: 530, baseType: !1447, size: 8, offset: 1088)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1435, file: !1436, line: 531, baseType: !1447, size: 8, offset: 1096)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1435, file: !1436, line: 532, baseType: !1447, size: 8, offset: 1104)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1435, file: !1436, line: 533, baseType: !1447, size: 8, offset: 1112)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1435, file: !1436, line: 534, baseType: !1447, size: 8, offset: 1120)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1435, file: !1436, line: 535, baseType: !1447, size: 8, offset: 1128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1435, file: !1436, line: 536, baseType: !1447, size: 8, offset: 1136)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1435, file: !1436, line: 537, baseType: !1447, size: 8, offset: 1144)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1435, file: !1436, line: 538, baseType: !1447, size: 8, offset: 1152)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1435, file: !1436, line: 539, baseType: !1447, size: 8, offset: 1160)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1435, file: !1436, line: 540, baseType: !1447, size: 8, offset: 1168)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1435, file: !1436, line: 541, baseType: !1447, size: 8, offset: 1176)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1435, file: !1436, line: 542, baseType: !1447, size: 8, offset: 1184)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1435, file: !1436, line: 543, baseType: !1447, size: 8, offset: 1192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1435, file: !1436, line: 544, baseType: !1447, size: 8, offset: 1200)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1435, file: !1436, line: 545, baseType: !1447, size: 8, offset: 1208)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1435, file: !1436, line: 546, baseType: !1447, size: 8, offset: 1216)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1435, file: !1436, line: 547, baseType: !1447, size: 8, offset: 1224)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1435, file: !1436, line: 548, baseType: !1447, size: 8, offset: 1232)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1435, file: !1436, line: 549, baseType: !1447, size: 8, offset: 1240)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1435, file: !1436, line: 550, baseType: !1447, size: 8, offset: 1248)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1435, file: !1436, line: 551, baseType: !1447, size: 8, offset: 1256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1435, file: !1436, line: 552, baseType: !1447, size: 8, offset: 1264)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1435, file: !1436, line: 553, baseType: !1447, size: 8, offset: 1272)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1435, file: !1436, line: 554, baseType: !1447, size: 8, offset: 1280)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1435, file: !1436, line: 555, baseType: !1447, size: 8, offset: 1288)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1435, file: !1436, line: 556, baseType: !1447, size: 8, offset: 1296)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1435, file: !1436, line: 557, baseType: !1447, size: 8, offset: 1304)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1435, file: !1436, line: 558, baseType: !1447, size: 8, offset: 1312)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1435, file: !1436, line: 559, baseType: !1447, size: 8, offset: 1320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1435, file: !1436, line: 560, baseType: !1447, size: 8, offset: 1328)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1435, file: !1436, line: 561, baseType: !1447, size: 8, offset: 1336)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1435, file: !1436, line: 562, baseType: !1447, size: 8, offset: 1344)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1435, file: !1436, line: 563, baseType: !1447, size: 8, offset: 1352)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1435, file: !1436, line: 564, baseType: !1447, size: 8, offset: 1360)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1435, file: !1436, line: 565, baseType: !1447, size: 8, offset: 1368)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1435, file: !1436, line: 566, baseType: !1447, size: 8, offset: 1376)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1435, file: !1436, line: 567, baseType: !1447, size: 8, offset: 1384)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1435, file: !1436, line: 568, baseType: !1447, size: 8, offset: 1392)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1435, file: !1436, line: 569, baseType: !1447, size: 8, offset: 1400)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1435, file: !1436, line: 570, baseType: !1447, size: 8, offset: 1408)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1435, file: !1436, line: 571, baseType: !1447, size: 8, offset: 1416)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1435, file: !1436, line: 572, baseType: !1447, size: 8, offset: 1424)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1435, file: !1436, line: 573, baseType: !1447, size: 8, offset: 1432)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1435, file: !1436, line: 574, baseType: !1447, size: 8, offset: 1440)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !553, file: !151, line: 3405, baseType: !1603, size: 384)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1603, file: !151, line: 3353, baseType: !589, size: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1603, file: !151, line: 3356, baseType: !1607, size: 192, offset: 192)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1436, line: 578, size: 192, elements: !1608)
!1608 = !{!1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1607, file: !1436, line: 580, baseType: !543, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1607, file: !1436, line: 581, baseType: !543, size: 32, offset: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1607, file: !1436, line: 582, baseType: !543, size: 32, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1607, file: !1436, line: 583, baseType: !543, size: 32, offset: 96)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1607, file: !1436, line: 584, baseType: !542, size: 8, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1607, file: !1436, line: 585, baseType: !542, size: 8, offset: 136)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1607, file: !1436, line: 586, baseType: !542, size: 8, offset: 144)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1607, file: !1436, line: 587, baseType: !542, size: 8, offset: 152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1607, file: !1436, line: 588, baseType: !542, size: 8, offset: 160)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1607, file: !1436, line: 589, baseType: !542, size: 8, offset: 168)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1607, file: !1436, line: 590, baseType: !542, size: 8, offset: 176)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "typeinfo", file: !3, line: 174, size: 96, elements: !1622)
!1622 = !{!1623, !1624, !1625}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1621, file: !3, line: 175, baseType: !520, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "file_number", scope: !1621, file: !3, line: 176, baseType: !543, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "type_number", scope: !1621, file: !3, line: 177, baseType: !543, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!547, !606}
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dbx_file", file: !3, line: 209, size: 320, elements: !1631)
!1631 = !{!1632, !1633, !1634, !1635, !1636, !1637}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1630, file: !3, line: 211, baseType: !1629, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "file_number", scope: !1630, file: !3, line: 212, baseType: !543, size: 32, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "next_type_number", scope: !1630, file: !3, line: 213, baseType: !543, size: 32, offset: 96)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bincl_status", scope: !1630, file: !3, line: 214, baseType: !525, size: 32, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pending_bincl_name", scope: !1630, file: !3, line: 215, baseType: !548, size: 64, offset: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1630, file: !3, line: 216, baseType: !1629, size: 64, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !151, line: 184, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !151, line: 184, size: 128, elements: !1641)
!1641 = !{!1642}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1640, file: !151, line: 184, baseType: !1353, size: 128)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1146, line: 35, baseType: !606)
!1647 = !{!0, !1648, !1662, !1667, !1669, !1671, !1673, !1675, !1677, !1679, !1681, !1683, !1685, !1687, !1704, !1706, !1708, !1710, !1712, !1748}
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_dbxout_h", scope: !2, file: !1650, line: 91, type: !1651, isLocal: false, isDefinition: true)
!1650 = !DIFile(filename: "./gt-dbxout.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 1280, elements: !816)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !1654, line: 69, size: 320, elements: !1655)
!1654 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1655 = !{!1656, !1657, !1658, !1659, !1661}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1653, file: !1654, line: 70, baseType: !547, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !1653, file: !1654, line: 71, baseType: !1145, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1653, file: !1654, line: 72, baseType: !1145, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1653, file: !1654, line: 73, baseType: !1660, size: 64, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !1654, line: 65, baseType: !1139)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !1653, file: !1654, line: 74, baseType: !1660, size: 64, offset: 256)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_dbxout_h", scope: !2, file: !1650, line: 116, type: !1664, isLocal: false, isDefinition: true)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 2560, elements: !1665)
!1665 = !{!1666}
!1666 = !DISubrange(count: 8)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "typevec", scope: !2, file: !3, line: 185, type: !1620, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "typevec_len", scope: !2, file: !3, line: 189, type: !543, isLocal: true, isDefinition: true)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "next_type_number", scope: !2, file: !3, line: 195, type: !543, isLocal: true, isDefinition: true)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "preinit_symbols", scope: !2, file: !3, line: 201, type: !550, isLocal: true, isDefinition: true)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "next_file_number", scope: !2, file: !3, line: 234, type: !543, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "scope_labelno", scope: !2, file: !3, line: 238, type: !543, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "dbxout_source_line_counter", scope: !2, file: !3, line: 242, type: !543, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "lastfile", scope: !2, file: !3, line: 251, type: !548, isLocal: true, isDefinition: true)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "lastfile_is_base", scope: !2, file: !3, line: 255, type: !543, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "stabstr_ob", scope: !2, file: !3, line: 299, type: !804, isLocal: true, isDefinition: true)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "cwd", scope: !1689, file: !3, line: 1021, type: !548, isLocal: true, isDefinition: true)
!1689 = distinct !DISubprogram(name: "dbxout_init", scope: !3, file: !3, line: 999, type: !1690, scopeLine: 1000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1692)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !548}
!1692 = !{!1693, !1694, !1698, !1699, !1700, !1701}
!1693 = !DILocalVariable(name: "input_file_name", arg: 1, scope: !1689, file: !3, line: 999, type: !548)
!1694 = !DILocalVariable(name: "ltext_label_name", scope: !1689, file: !3, line: 1001, type: !1695)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 800, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 100)
!1698 = !DILocalVariable(name: "used_ltext_label_name", scope: !1689, file: !3, line: 1002, type: !542)
!1699 = !DILocalVariable(name: "syms", scope: !1689, file: !3, line: 1003, type: !550)
!1700 = !DILocalVariable(name: "mapped_name", scope: !1689, file: !3, line: 1004, type: !548)
!1701 = !DILocalVariable(name: "t", scope: !1702, file: !3, line: 1087, type: !550)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !3, line: 1086, column: 5)
!1703 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 1085, column: 7)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "base_input_file", scope: !2, file: !3, line: 268, type: !548, isLocal: true, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "current_file", scope: !2, file: !3, line: 229, type: !1629, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "pending_bincls", scope: !2, file: !3, line: 264, type: !543, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "stabstr_last_contin_point", scope: !2, file: !3, line: 300, type: !1145, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "anonymous_type_number", scope: !1714, file: !3, line: 1673, type: !543, isLocal: true, isDefinition: true)
!1714 = distinct !DISubprogram(name: "dbxout_type", scope: !3, file: !3, line: 1671, type: !1715, scopeLine: 1672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1717)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{null, !550, !543}
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1732, !1735, !1738, !1739, !1740, !1744}
!1718 = !DILocalVariable(name: "type", arg: 1, scope: !1714, file: !3, line: 1671, type: !550)
!1719 = !DILocalVariable(name: "full", arg: 2, scope: !1714, file: !3, line: 1671, type: !543)
!1720 = !DILocalVariable(name: "vector_type", scope: !1714, file: !3, line: 1674, type: !542)
!1721 = !DILocalVariable(name: "tem", scope: !1714, file: !3, line: 1675, type: !550)
!1722 = !DILocalVariable(name: "main_variant", scope: !1714, file: !3, line: 1675, type: !550)
!1723 = !DILocalVariable(name: "low", scope: !1714, file: !3, line: 1675, type: !550)
!1724 = !DILocalVariable(name: "high", scope: !1714, file: !3, line: 1675, type: !550)
!1725 = !DILocalVariable(name: "orig_type", scope: !1726, file: !3, line: 1850, type: !550)
!1726 = distinct !DILexicalBlock(scope: !1727, file: !3, line: 1849, column: 9)
!1727 = distinct !DILexicalBlock(scope: !1728, file: !3, line: 1848, column: 11)
!1728 = distinct !DILexicalBlock(scope: !1729, file: !3, line: 1847, column: 5)
!1729 = distinct !DILexicalBlock(scope: !1730, file: !3, line: 1846, column: 12)
!1730 = distinct !DILexicalBlock(scope: !1731, file: !3, line: 1840, column: 12)
!1731 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1834, column: 7)
!1732 = !DILocalVariable(name: "binfo", scope: !1733, file: !3, line: 2050, type: !550)
!1733 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2049, column: 7)
!1734 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1867, column: 5)
!1735 = !DILocalVariable(name: "i", scope: !1736, file: !3, line: 2093, type: !543)
!1736 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 2092, column: 4)
!1737 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 2091, column: 6)
!1738 = !DILocalVariable(name: "child", scope: !1736, file: !3, line: 2094, type: !550)
!1739 = !DILocalVariable(name: "accesses", scope: !1736, file: !3, line: 2095, type: !1348)
!1740 = !DILocalVariable(name: "access", scope: !1741, file: !3, line: 2108, type: !550)
!1741 = distinct !DILexicalBlock(scope: !1742, file: !3, line: 2107, column: 8)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 2106, column: 6)
!1743 = distinct !DILexicalBlock(scope: !1736, file: !3, line: 2106, column: 6)
!1744 = !DILocalVariable(name: "value", scope: !1745, file: !3, line: 2205, type: !550)
!1745 = distinct !DILexicalBlock(scope: !1746, file: !3, line: 2204, column: 2)
!1746 = distinct !DILexicalBlock(scope: !1747, file: !3, line: 2203, column: 7)
!1747 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2203, column: 7)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "source_label_number", scope: !2, file: !3, line: 247, type: !543, isLocal: true, isDefinition: true)
!1750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcc_debug_hooks", file: !1752, line: 25, size: 2048, elements: !1753)
!1752 = !DIFile(filename: "./debug.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1753 = !{!1754, !1756, !1757, !1761, !1765, !1766, !1767, !1771, !1775, !1776, !1783, !1787, !1788, !1789, !1790, !1794, !1795, !1796, !1797, !1799, !1803, !1804, !1805, !1809, !1810, !1811, !1812, !1813, !1814, !1818, !1822, !1826}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1751, file: !1752, line: 29, baseType: !1755, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !1751, file: !1752, line: 32, baseType: !1755, size: 64, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "assembly_start", scope: !1751, file: !1752, line: 36, baseType: !1758, size: 64, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{null}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "define", scope: !1751, file: !1752, line: 39, baseType: !1762, size: 64, offset: 192)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{null, !7, !548}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "undef", scope: !1751, file: !1752, line: 42, baseType: !1762, size: 64, offset: 256)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "start_source_file", scope: !1751, file: !1752, line: 46, baseType: !1762, size: 64, offset: 320)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "end_source_file", scope: !1751, file: !1752, line: 50, baseType: !1768, size: 64, offset: 384)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{null, !7}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "begin_block", scope: !1751, file: !1752, line: 54, baseType: !1772, size: 64, offset: 448)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{null, !7, !7}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "end_block", scope: !1751, file: !1752, line: 57, baseType: !1772, size: 64, offset: 512)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_block", scope: !1751, file: !1752, line: 64, baseType: !1777, size: 64, offset: 576)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!542, !1780}
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !551, line: 59, baseType: !1781)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !553)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "source_line", scope: !1751, file: !1752, line: 67, baseType: !1784, size: 64, offset: 640)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{null, !7, !548, !543, !542}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "begin_prologue", scope: !1751, file: !1752, line: 72, baseType: !1762, size: 64, offset: 704)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "end_prologue", scope: !1751, file: !1752, line: 76, baseType: !1762, size: 64, offset: 768)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "end_epilogue", scope: !1751, file: !1752, line: 79, baseType: !1762, size: 64, offset: 832)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "begin_function", scope: !1751, file: !1752, line: 82, baseType: !1791, size: 64, offset: 896)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{null, !550}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "end_function", scope: !1751, file: !1752, line: 85, baseType: !1768, size: 64, offset: 960)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1751, file: !1752, line: 91, baseType: !1791, size: 64, offset: 1024)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "global_decl", scope: !1751, file: !1752, line: 95, baseType: !1791, size: 64, offset: 1088)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1751, file: !1752, line: 103, baseType: !1798, size: 64, offset: 1152)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "imported_module_or_decl", scope: !1751, file: !1752, line: 106, baseType: !1800, size: 64, offset: 1216)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{null, !550, !550, !550, !542}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_inline_function", scope: !1751, file: !1752, line: 111, baseType: !1791, size: 64, offset: 1280)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "outlining_inline_function", scope: !1751, file: !1752, line: 116, baseType: !1791, size: 64, offset: 1344)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1751, file: !1752, line: 120, baseType: !1806, size: 64, offset: 1408)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{null, !725}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "handle_pch", scope: !1751, file: !1752, line: 124, baseType: !1768, size: 64, offset: 1472)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "var_location", scope: !1751, file: !1752, line: 127, baseType: !1806, size: 64, offset: 1536)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "switch_text_section", scope: !1751, file: !1752, line: 131, baseType: !1758, size: 64, offset: 1600)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "direct_call", scope: !1751, file: !1752, line: 136, baseType: !1791, size: 64, offset: 1664)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_call_token", scope: !1751, file: !1752, line: 144, baseType: !1798, size: 64, offset: 1728)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "copy_call_info", scope: !1751, file: !1752, line: 150, baseType: !1815, size: 64, offset: 1792)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{null, !725, !725}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_call", scope: !1751, file: !1752, line: 156, baseType: !1819, size: 64, offset: 1856)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{null, !543}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "set_name", scope: !1751, file: !1752, line: 160, baseType: !1823, size: 64, offset: 1920)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{null, !550, !550}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "start_end_main_source_file", scope: !1751, file: !1752, line: 164, baseType: !543, size: 32, offset: 1984)
!1827 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1828 = !{i32 2, !"Dwarf Version", i32 4}
!1829 = !{i32 2, !"Debug Info Version", i32 3}
!1830 = !{i32 1, !"wchar_size", i32 4}
!1831 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1832 = distinct !DISubprogram(name: "vprintf", scope: !1833, file: !1833, line: 39, type: !1834, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1844)
!1833 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!543, !1836, !1837}
!1836 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !548)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1838, file: !3, baseType: !7, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1838, file: !3, baseType: !7, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1838, file: !3, baseType: !547, size: 64, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1838, file: !3, baseType: !547, size: 64, offset: 128)
!1844 = !{!1845, !1846}
!1845 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1832, file: !1833, line: 39, type: !1836)
!1846 = !DILocalVariable(name: "__arg", arg: 2, scope: !1832, file: !1833, line: 39, type: !1837)
!1847 = !DILocation(line: 0, scope: !1832)
!1848 = !DILocation(line: 41, column: 20, scope: !1832)
!1849 = !DILocation(line: 41, column: 10, scope: !1832)
!1850 = !DILocation(line: 41, column: 3, scope: !1832)
!1851 = distinct !DISubprogram(name: "getchar", scope: !1833, file: !1833, line: 47, type: !1852, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!543}
!1854 = !{}
!1855 = !DILocation(line: 49, column: 16, scope: !1851)
!1856 = !DILocation(line: 49, column: 10, scope: !1851)
!1857 = !DILocation(line: 49, column: 3, scope: !1851)
!1858 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1833, file: !1833, line: 56, type: !1859, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1912)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!543, !1861}
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1863, line: 7, baseType: !1864)
!1863 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1865, line: 49, size: 1728, elements: !1866)
!1865 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1882, !1884, !1885, !1886, !1889, !1891, !1892, !1893, !1896, !1898, !1901, !1904, !1905, !1906, !1907, !1908}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1864, file: !1865, line: 51, baseType: !543, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1864, file: !1865, line: 54, baseType: !545, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1864, file: !1865, line: 55, baseType: !545, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1864, file: !1865, line: 56, baseType: !545, size: 64, offset: 192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1864, file: !1865, line: 57, baseType: !545, size: 64, offset: 256)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1864, file: !1865, line: 58, baseType: !545, size: 64, offset: 320)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1864, file: !1865, line: 59, baseType: !545, size: 64, offset: 384)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1864, file: !1865, line: 60, baseType: !545, size: 64, offset: 448)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1864, file: !1865, line: 61, baseType: !545, size: 64, offset: 512)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1864, file: !1865, line: 64, baseType: !545, size: 64, offset: 576)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1864, file: !1865, line: 65, baseType: !545, size: 64, offset: 640)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1864, file: !1865, line: 66, baseType: !545, size: 64, offset: 704)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1864, file: !1865, line: 68, baseType: !1880, size: 64, offset: 768)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1865, line: 36, flags: DIFlagFwdDecl)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1864, file: !1865, line: 70, baseType: !1883, size: 64, offset: 832)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1864, file: !1865, line: 72, baseType: !543, size: 32, offset: 896)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1864, file: !1865, line: 73, baseType: !543, size: 32, offset: 928)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1864, file: !1865, line: 74, baseType: !1887, size: 64, offset: 960)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1888, line: 152, baseType: !606)
!1888 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1864, file: !1865, line: 77, baseType: !1890, size: 16, offset: 1024)
!1890 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1864, file: !1865, line: 78, baseType: !1447, size: 8, offset: 1040)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1864, file: !1865, line: 79, baseType: !648, size: 8, offset: 1048)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1864, file: !1865, line: 81, baseType: !1894, size: 64, offset: 1088)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1865, line: 43, baseType: null)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1864, file: !1865, line: 89, baseType: !1897, size: 64, offset: 1152)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1888, line: 153, baseType: !606)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1864, file: !1865, line: 91, baseType: !1899, size: 64, offset: 1216)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1865, line: 37, flags: DIFlagFwdDecl)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1864, file: !1865, line: 92, baseType: !1902, size: 64, offset: 1280)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1865, line: 38, flags: DIFlagFwdDecl)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1864, file: !1865, line: 93, baseType: !1883, size: 64, offset: 1344)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1864, file: !1865, line: 94, baseType: !547, size: 64, offset: 1408)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1864, file: !1865, line: 95, baseType: !1145, size: 64, offset: 1472)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1864, file: !1865, line: 96, baseType: !543, size: 32, offset: 1536)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1864, file: !1865, line: 98, baseType: !1909, size: 160, offset: 1568)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 160, elements: !1910)
!1910 = !{!1911}
!1911 = !DISubrange(count: 20)
!1912 = !{!1913}
!1913 = !DILocalVariable(name: "__fp", arg: 1, scope: !1858, file: !1833, line: 56, type: !1861)
!1914 = !DILocation(line: 0, scope: !1858)
!1915 = !DILocation(line: 58, column: 10, scope: !1858)
!1916 = !DILocation(line: 58, column: 3, scope: !1858)
!1917 = distinct !DISubprogram(name: "getc_unlocked", scope: !1833, file: !1833, line: 66, type: !1859, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1918)
!1918 = !{!1919}
!1919 = !DILocalVariable(name: "__fp", arg: 1, scope: !1917, file: !1833, line: 66, type: !1861)
!1920 = !DILocation(line: 0, scope: !1917)
!1921 = !DILocation(line: 68, column: 10, scope: !1917)
!1922 = !DILocation(line: 68, column: 3, scope: !1917)
!1923 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1833, file: !1833, line: 73, type: !1852, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!1924 = !DILocation(line: 75, column: 10, scope: !1923)
!1925 = !DILocation(line: 75, column: 3, scope: !1923)
!1926 = distinct !DISubprogram(name: "putchar", scope: !1833, file: !1833, line: 82, type: !1927, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1929)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!543, !543}
!1929 = !{!1930}
!1930 = !DILocalVariable(name: "__c", arg: 1, scope: !1926, file: !1833, line: 82, type: !543)
!1931 = !DILocation(line: 0, scope: !1926)
!1932 = !DILocation(line: 84, column: 21, scope: !1926)
!1933 = !DILocation(line: 84, column: 10, scope: !1926)
!1934 = !DILocation(line: 84, column: 3, scope: !1926)
!1935 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1833, file: !1833, line: 91, type: !1936, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1938)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{!543, !543, !1861}
!1938 = !{!1939, !1940}
!1939 = !DILocalVariable(name: "__c", arg: 1, scope: !1935, file: !1833, line: 91, type: !543)
!1940 = !DILocalVariable(name: "__stream", arg: 2, scope: !1935, file: !1833, line: 91, type: !1861)
!1941 = !DILocation(line: 0, scope: !1935)
!1942 = !DILocation(line: 93, column: 10, scope: !1935)
!1943 = !DILocation(line: 93, column: 3, scope: !1935)
!1944 = distinct !DISubprogram(name: "putc_unlocked", scope: !1833, file: !1833, line: 101, type: !1936, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1945)
!1945 = !{!1946, !1947}
!1946 = !DILocalVariable(name: "__c", arg: 1, scope: !1944, file: !1833, line: 101, type: !543)
!1947 = !DILocalVariable(name: "__stream", arg: 2, scope: !1944, file: !1833, line: 101, type: !1861)
!1948 = !DILocation(line: 0, scope: !1944)
!1949 = !DILocation(line: 103, column: 10, scope: !1944)
!1950 = !DILocation(line: 103, column: 3, scope: !1944)
!1951 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1833, file: !1833, line: 108, type: !1927, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1952)
!1952 = !{!1953}
!1953 = !DILocalVariable(name: "__c", arg: 1, scope: !1951, file: !1833, line: 108, type: !543)
!1954 = !DILocation(line: 0, scope: !1951)
!1955 = !DILocation(line: 110, column: 10, scope: !1951)
!1956 = !DILocation(line: 110, column: 3, scope: !1951)
!1957 = distinct !DISubprogram(name: "getline", scope: !1833, file: !1833, line: 118, type: !1958, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1962)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!1960, !544, !1961, !1861}
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1888, line: 193, baseType: !606)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1962 = !{!1963, !1964, !1965}
!1963 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !1957, file: !1833, line: 118, type: !544)
!1964 = !DILocalVariable(name: "__n", arg: 2, scope: !1957, file: !1833, line: 118, type: !1961)
!1965 = !DILocalVariable(name: "__stream", arg: 3, scope: !1957, file: !1833, line: 118, type: !1861)
!1966 = !DILocation(line: 0, scope: !1957)
!1967 = !DILocation(line: 120, column: 10, scope: !1957)
!1968 = !DILocation(line: 120, column: 3, scope: !1957)
!1969 = distinct !DISubprogram(name: "feof_unlocked", scope: !1833, file: !1833, line: 128, type: !1859, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1970)
!1970 = !{!1971}
!1971 = !DILocalVariable(name: "__stream", arg: 1, scope: !1969, file: !1833, line: 128, type: !1861)
!1972 = !DILocation(line: 0, scope: !1969)
!1973 = !DILocation(line: 130, column: 10, scope: !1969)
!1974 = !DILocation(line: 130, column: 3, scope: !1969)
!1975 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1833, file: !1833, line: 135, type: !1859, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1976)
!1976 = !{!1977}
!1977 = !DILocalVariable(name: "__stream", arg: 1, scope: !1975, file: !1833, line: 135, type: !1861)
!1978 = !DILocation(line: 0, scope: !1975)
!1979 = !DILocation(line: 137, column: 10, scope: !1975)
!1980 = !DILocation(line: 137, column: 3, scope: !1975)
!1981 = distinct !DISubprogram(name: "tolower", scope: !1982, file: !1982, line: 207, type: !1927, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1983)
!1982 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!1983 = !{!1984}
!1984 = !DILocalVariable(name: "__c", arg: 1, scope: !1981, file: !1982, line: 207, type: !543)
!1985 = !DILocation(line: 0, scope: !1981)
!1986 = !DILocation(line: 209, column: 22, scope: !1981)
!1987 = !DILocation(line: 209, column: 39, scope: !1981)
!1988 = !DILocation(line: 209, column: 38, scope: !1981)
!1989 = !DILocation(line: 209, column: 37, scope: !1981)
!1990 = !DILocation(line: 209, column: 10, scope: !1981)
!1991 = !DILocation(line: 209, column: 3, scope: !1981)
!1992 = distinct !DISubprogram(name: "toupper", scope: !1982, file: !1982, line: 213, type: !1927, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1993)
!1993 = !{!1994}
!1994 = !DILocalVariable(name: "__c", arg: 1, scope: !1992, file: !1982, line: 213, type: !543)
!1995 = !DILocation(line: 0, scope: !1992)
!1996 = !DILocation(line: 215, column: 22, scope: !1992)
!1997 = !DILocation(line: 215, column: 39, scope: !1992)
!1998 = !DILocation(line: 215, column: 38, scope: !1992)
!1999 = !DILocation(line: 215, column: 37, scope: !1992)
!2000 = !DILocation(line: 215, column: 10, scope: !1992)
!2001 = !DILocation(line: 215, column: 3, scope: !1992)
!2002 = distinct !DISubprogram(name: "atoi", scope: !2003, file: !2003, line: 361, type: !2004, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2006)
!2003 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!543, !548}
!2006 = !{!2007}
!2007 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2002, file: !2003, line: 361, type: !548)
!2008 = !DILocation(line: 0, scope: !2002)
!2009 = !DILocation(line: 363, column: 16, scope: !2002)
!2010 = !DILocation(line: 363, column: 10, scope: !2002)
!2011 = !DILocation(line: 363, column: 3, scope: !2002)
!2012 = distinct !DISubprogram(name: "atol", scope: !2003, file: !2003, line: 366, type: !2013, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2015)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{!606, !548}
!2015 = !{!2016}
!2016 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2012, file: !2003, line: 366, type: !548)
!2017 = !DILocation(line: 0, scope: !2012)
!2018 = !DILocation(line: 368, column: 10, scope: !2012)
!2019 = !DILocation(line: 368, column: 3, scope: !2012)
!2020 = distinct !DISubprogram(name: "atoll", scope: !2003, file: !2003, line: 373, type: !2021, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2024)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!2023, !548}
!2023 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2024 = !{!2025}
!2025 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2020, file: !2003, line: 373, type: !548)
!2026 = !DILocation(line: 0, scope: !2020)
!2027 = !DILocation(line: 375, column: 10, scope: !2020)
!2028 = !DILocation(line: 375, column: 3, scope: !2020)
!2029 = distinct !DISubprogram(name: "bsearch", scope: !2030, file: !2030, line: 20, type: !2031, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2034)
!2030 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!547, !969, !969, !1145, !1145, !2033}
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2003, line: 808, baseType: !1134)
!2034 = !{!2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044}
!2035 = !DILocalVariable(name: "__key", arg: 1, scope: !2029, file: !2030, line: 20, type: !969)
!2036 = !DILocalVariable(name: "__base", arg: 2, scope: !2029, file: !2030, line: 20, type: !969)
!2037 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2029, file: !2030, line: 20, type: !1145)
!2038 = !DILocalVariable(name: "__size", arg: 4, scope: !2029, file: !2030, line: 20, type: !1145)
!2039 = !DILocalVariable(name: "__compar", arg: 5, scope: !2029, file: !2030, line: 21, type: !2033)
!2040 = !DILocalVariable(name: "__l", scope: !2029, file: !2030, line: 23, type: !1145)
!2041 = !DILocalVariable(name: "__u", scope: !2029, file: !2030, line: 23, type: !1145)
!2042 = !DILocalVariable(name: "__idx", scope: !2029, file: !2030, line: 23, type: !1145)
!2043 = !DILocalVariable(name: "__p", scope: !2029, file: !2030, line: 24, type: !969)
!2044 = !DILocalVariable(name: "__comparison", scope: !2029, file: !2030, line: 25, type: !543)
!2045 = !DILocation(line: 0, scope: !2029)
!2046 = !DILocation(line: 29, column: 3, scope: !2029)
!2047 = !DILocation(line: 27, column: 7, scope: !2029)
!2048 = !DILocation(line: 29, column: 14, scope: !2029)
!2049 = !DILocation(line: 31, column: 20, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !2029, file: !2030, line: 30, column: 5)
!2051 = !DILocation(line: 31, column: 27, scope: !2050)
!2052 = !DILocation(line: 32, column: 56, scope: !2050)
!2053 = !DILocation(line: 32, column: 47, scope: !2050)
!2054 = !DILocation(line: 33, column: 22, scope: !2050)
!2055 = !DILocation(line: 34, column: 24, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !2050, file: !2030, line: 34, column: 11)
!2057 = !DILocation(line: 34, column: 11, scope: !2050)
!2058 = !DILocation(line: 36, column: 29, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2056, file: !2030, line: 36, column: 16)
!2060 = !DILocation(line: 36, column: 16, scope: !2056)
!2061 = !DILocation(line: 37, column: 14, scope: !2059)
!2062 = distinct !{!2062, !2046, !2063}
!2063 = !DILocation(line: 40, column: 5, scope: !2029)
!2064 = !DILocation(line: 43, column: 1, scope: !2029)
!2065 = distinct !DISubprogram(name: "atof", scope: !2066, file: !2066, line: 25, type: !2067, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2070)
!2066 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!2069, !548}
!2069 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2070 = !{!2071}
!2071 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2065, file: !2066, line: 25, type: !548)
!2072 = !DILocation(line: 0, scope: !2065)
!2073 = !DILocation(line: 27, column: 10, scope: !2065)
!2074 = !DILocation(line: 27, column: 3, scope: !2065)
!2075 = distinct !DISubprogram(name: "strtoimax", scope: !2076, file: !2076, line: 324, type: !2077, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2083)
!2076 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!2079, !1836, !2082, !543}
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2080, line: 101, baseType: !2081)
!2080 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1888, line: 72, baseType: !606)
!2082 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !544)
!2083 = !{!2084, !2085, !2086}
!2084 = !DILocalVariable(name: "nptr", arg: 1, scope: !2075, file: !2076, line: 324, type: !1836)
!2085 = !DILocalVariable(name: "endptr", arg: 2, scope: !2075, file: !2076, line: 324, type: !2082)
!2086 = !DILocalVariable(name: "base", arg: 3, scope: !2075, file: !2076, line: 324, type: !543)
!2087 = !DILocation(line: 0, scope: !2075)
!2088 = !DILocation(line: 327, column: 10, scope: !2075)
!2089 = !DILocation(line: 327, column: 3, scope: !2075)
!2090 = distinct !DISubprogram(name: "strtoumax", scope: !2076, file: !2076, line: 336, type: !2091, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2095)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!2093, !1836, !2082, !543}
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2080, line: 102, baseType: !2094)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1888, line: 73, baseType: !604)
!2095 = !{!2096, !2097, !2098}
!2096 = !DILocalVariable(name: "nptr", arg: 1, scope: !2090, file: !2076, line: 336, type: !1836)
!2097 = !DILocalVariable(name: "endptr", arg: 2, scope: !2090, file: !2076, line: 336, type: !2082)
!2098 = !DILocalVariable(name: "base", arg: 3, scope: !2090, file: !2076, line: 336, type: !543)
!2099 = !DILocation(line: 0, scope: !2090)
!2100 = !DILocation(line: 339, column: 10, scope: !2090)
!2101 = !DILocation(line: 339, column: 3, scope: !2090)
!2102 = distinct !DISubprogram(name: "wcstoimax", scope: !2076, file: !2076, line: 348, type: !2103, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2112)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{!2079, !2105, !2109, !543}
!2105 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2076, line: 34, baseType: !543)
!2109 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2110)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2112 = !{!2113, !2114, !2115}
!2113 = !DILocalVariable(name: "nptr", arg: 1, scope: !2102, file: !2076, line: 348, type: !2105)
!2114 = !DILocalVariable(name: "endptr", arg: 2, scope: !2102, file: !2076, line: 348, type: !2109)
!2115 = !DILocalVariable(name: "base", arg: 3, scope: !2102, file: !2076, line: 348, type: !543)
!2116 = !DILocation(line: 0, scope: !2102)
!2117 = !DILocation(line: 351, column: 10, scope: !2102)
!2118 = !DILocation(line: 351, column: 3, scope: !2102)
!2119 = distinct !DISubprogram(name: "wcstoumax", scope: !2076, file: !2076, line: 362, type: !2120, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2122)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{!2093, !2105, !2109, !543}
!2122 = !{!2123, !2124, !2125}
!2123 = !DILocalVariable(name: "nptr", arg: 1, scope: !2119, file: !2076, line: 362, type: !2105)
!2124 = !DILocalVariable(name: "endptr", arg: 2, scope: !2119, file: !2076, line: 362, type: !2109)
!2125 = !DILocalVariable(name: "base", arg: 3, scope: !2119, file: !2076, line: 362, type: !543)
!2126 = !DILocation(line: 0, scope: !2119)
!2127 = !DILocation(line: 365, column: 10, scope: !2119)
!2128 = !DILocation(line: 365, column: 3, scope: !2119)
!2129 = distinct !DISubprogram(name: "stat", scope: !2130, file: !2130, line: 453, type: !2131, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2168)
!2130 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!543, !548, !2133}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2135, line: 46, size: 1152, elements: !2136)
!2135 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2136 = !{!2137, !2139, !2141, !2143, !2145, !2147, !2149, !2150, !2151, !2152, !2154, !2156, !2164, !2165, !2166}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2134, file: !2135, line: 48, baseType: !2138, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1888, line: 145, baseType: !604)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2134, file: !2135, line: 53, baseType: !2140, size: 64, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1888, line: 148, baseType: !604)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2134, file: !2135, line: 61, baseType: !2142, size: 64, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1888, line: 151, baseType: !604)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2134, file: !2135, line: 62, baseType: !2144, size: 32, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1888, line: 150, baseType: !7)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2134, file: !2135, line: 64, baseType: !2146, size: 32, offset: 224)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1888, line: 146, baseType: !7)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2134, file: !2135, line: 65, baseType: !2148, size: 32, offset: 256)
!2148 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1888, line: 147, baseType: !7)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2134, file: !2135, line: 67, baseType: !543, size: 32, offset: 288)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2134, file: !2135, line: 69, baseType: !2138, size: 64, offset: 320)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2134, file: !2135, line: 74, baseType: !1887, size: 64, offset: 384)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2134, file: !2135, line: 78, baseType: !2153, size: 64, offset: 448)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1888, line: 174, baseType: !606)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2134, file: !2135, line: 80, baseType: !2155, size: 64, offset: 512)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1888, line: 179, baseType: !606)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2134, file: !2135, line: 91, baseType: !2157, size: 128, offset: 576)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2158, line: 10, size: 128, elements: !2159)
!2158 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2159 = !{!2160, !2162}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2157, file: !2158, line: 12, baseType: !2161, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1888, line: 160, baseType: !606)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2157, file: !2158, line: 16, baseType: !2163, size: 64, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1888, line: 196, baseType: !606)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2134, file: !2135, line: 92, baseType: !2157, size: 128, offset: 704)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2134, file: !2135, line: 93, baseType: !2157, size: 128, offset: 832)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2134, file: !2135, line: 106, baseType: !2167, size: 192, offset: 960)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2163, size: 192, elements: !624)
!2168 = !{!2169, !2170}
!2169 = !DILocalVariable(name: "__path", arg: 1, scope: !2129, file: !2130, line: 453, type: !548)
!2170 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2129, file: !2130, line: 453, type: !2133)
!2171 = !DILocation(line: 0, scope: !2129)
!2172 = !DILocation(line: 455, column: 10, scope: !2129)
!2173 = !DILocation(line: 455, column: 3, scope: !2129)
!2174 = distinct !DISubprogram(name: "lstat", scope: !2130, file: !2130, line: 460, type: !2131, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2175)
!2175 = !{!2176, !2177}
!2176 = !DILocalVariable(name: "__path", arg: 1, scope: !2174, file: !2130, line: 460, type: !548)
!2177 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2174, file: !2130, line: 460, type: !2133)
!2178 = !DILocation(line: 0, scope: !2174)
!2179 = !DILocation(line: 462, column: 10, scope: !2174)
!2180 = !DILocation(line: 462, column: 3, scope: !2174)
!2181 = distinct !DISubprogram(name: "fstat", scope: !2130, file: !2130, line: 467, type: !2182, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2184)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!543, !543, !2133}
!2184 = !{!2185, !2186}
!2185 = !DILocalVariable(name: "__fd", arg: 1, scope: !2181, file: !2130, line: 467, type: !543)
!2186 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2181, file: !2130, line: 467, type: !2133)
!2187 = !DILocation(line: 0, scope: !2181)
!2188 = !DILocation(line: 469, column: 10, scope: !2181)
!2189 = !DILocation(line: 469, column: 3, scope: !2181)
!2190 = distinct !DISubprogram(name: "fstatat", scope: !2130, file: !2130, line: 474, type: !2191, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2193)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!543, !543, !548, !2133, !543}
!2193 = !{!2194, !2195, !2196, !2197}
!2194 = !DILocalVariable(name: "__fd", arg: 1, scope: !2190, file: !2130, line: 474, type: !543)
!2195 = !DILocalVariable(name: "__filename", arg: 2, scope: !2190, file: !2130, line: 474, type: !548)
!2196 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2190, file: !2130, line: 474, type: !2133)
!2197 = !DILocalVariable(name: "__flag", arg: 4, scope: !2190, file: !2130, line: 474, type: !543)
!2198 = !DILocation(line: 0, scope: !2190)
!2199 = !DILocation(line: 477, column: 10, scope: !2190)
!2200 = !DILocation(line: 477, column: 3, scope: !2190)
!2201 = distinct !DISubprogram(name: "mknod", scope: !2130, file: !2130, line: 483, type: !2202, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!543, !548, !2144, !2138}
!2204 = !{!2205, !2206, !2207}
!2205 = !DILocalVariable(name: "__path", arg: 1, scope: !2201, file: !2130, line: 483, type: !548)
!2206 = !DILocalVariable(name: "__mode", arg: 2, scope: !2201, file: !2130, line: 483, type: !2144)
!2207 = !DILocalVariable(name: "__dev", arg: 3, scope: !2201, file: !2130, line: 483, type: !2138)
!2208 = !DILocation(line: 0, scope: !2201)
!2209 = !DILocation(line: 485, column: 10, scope: !2201)
!2210 = !DILocation(line: 485, column: 3, scope: !2201)
!2211 = distinct !DISubprogram(name: "mknodat", scope: !2130, file: !2130, line: 491, type: !2212, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2214)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!543, !543, !548, !2144, !2138}
!2214 = !{!2215, !2216, !2217, !2218}
!2215 = !DILocalVariable(name: "__fd", arg: 1, scope: !2211, file: !2130, line: 491, type: !543)
!2216 = !DILocalVariable(name: "__path", arg: 2, scope: !2211, file: !2130, line: 491, type: !548)
!2217 = !DILocalVariable(name: "__mode", arg: 3, scope: !2211, file: !2130, line: 491, type: !2144)
!2218 = !DILocalVariable(name: "__dev", arg: 4, scope: !2211, file: !2130, line: 491, type: !2138)
!2219 = !DILocation(line: 0, scope: !2211)
!2220 = !DILocation(line: 494, column: 10, scope: !2211)
!2221 = !DILocation(line: 494, column: 3, scope: !2211)
!2222 = distinct !DISubprogram(name: "stat64", scope: !2130, file: !2130, line: 502, type: !2223, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2245)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!543, !548, !2225}
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2135, line: 119, size: 1152, elements: !2227)
!2227 = !{!2228, !2229, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2241, !2242, !2243, !2244}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2226, file: !2135, line: 121, baseType: !2138, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2226, file: !2135, line: 123, baseType: !2230, size: 64, offset: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1888, line: 149, baseType: !604)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2226, file: !2135, line: 124, baseType: !2142, size: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2226, file: !2135, line: 125, baseType: !2144, size: 32, offset: 192)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2226, file: !2135, line: 132, baseType: !2146, size: 32, offset: 224)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2226, file: !2135, line: 133, baseType: !2148, size: 32, offset: 256)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2226, file: !2135, line: 135, baseType: !543, size: 32, offset: 288)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2226, file: !2135, line: 136, baseType: !2138, size: 64, offset: 320)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2226, file: !2135, line: 137, baseType: !1887, size: 64, offset: 384)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2226, file: !2135, line: 143, baseType: !2153, size: 64, offset: 448)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2226, file: !2135, line: 144, baseType: !2240, size: 64, offset: 512)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1888, line: 180, baseType: !606)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2226, file: !2135, line: 152, baseType: !2157, size: 128, offset: 576)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2226, file: !2135, line: 153, baseType: !2157, size: 128, offset: 704)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2226, file: !2135, line: 154, baseType: !2157, size: 128, offset: 832)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2226, file: !2135, line: 164, baseType: !2167, size: 192, offset: 960)
!2245 = !{!2246, !2247}
!2246 = !DILocalVariable(name: "__path", arg: 1, scope: !2222, file: !2130, line: 502, type: !548)
!2247 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2222, file: !2130, line: 502, type: !2225)
!2248 = !DILocation(line: 0, scope: !2222)
!2249 = !DILocation(line: 504, column: 10, scope: !2222)
!2250 = !DILocation(line: 504, column: 3, scope: !2222)
!2251 = distinct !DISubprogram(name: "lstat64", scope: !2130, file: !2130, line: 509, type: !2223, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2252)
!2252 = !{!2253, !2254}
!2253 = !DILocalVariable(name: "__path", arg: 1, scope: !2251, file: !2130, line: 509, type: !548)
!2254 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2251, file: !2130, line: 509, type: !2225)
!2255 = !DILocation(line: 0, scope: !2251)
!2256 = !DILocation(line: 511, column: 10, scope: !2251)
!2257 = !DILocation(line: 511, column: 3, scope: !2251)
!2258 = distinct !DISubprogram(name: "fstat64", scope: !2130, file: !2130, line: 516, type: !2259, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2261)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!543, !543, !2225}
!2261 = !{!2262, !2263}
!2262 = !DILocalVariable(name: "__fd", arg: 1, scope: !2258, file: !2130, line: 516, type: !543)
!2263 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2258, file: !2130, line: 516, type: !2225)
!2264 = !DILocation(line: 0, scope: !2258)
!2265 = !DILocation(line: 518, column: 10, scope: !2258)
!2266 = !DILocation(line: 518, column: 3, scope: !2258)
!2267 = distinct !DISubprogram(name: "fstatat64", scope: !2130, file: !2130, line: 523, type: !2268, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2270)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!543, !543, !548, !2225, !543}
!2270 = !{!2271, !2272, !2273, !2274}
!2271 = !DILocalVariable(name: "__fd", arg: 1, scope: !2267, file: !2130, line: 523, type: !543)
!2272 = !DILocalVariable(name: "__filename", arg: 2, scope: !2267, file: !2130, line: 523, type: !548)
!2273 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2267, file: !2130, line: 523, type: !2225)
!2274 = !DILocalVariable(name: "__flag", arg: 4, scope: !2267, file: !2130, line: 523, type: !543)
!2275 = !DILocation(line: 0, scope: !2267)
!2276 = !DILocation(line: 526, column: 10, scope: !2267)
!2277 = !DILocation(line: 526, column: 3, scope: !2267)
!2278 = !DILocation(line: 0, scope: !1689)
!2279 = !DILocation(line: 1001, column: 3, scope: !1689)
!2280 = !DILocation(line: 1001, column: 8, scope: !1689)
!2281 = !DILocation(line: 1003, column: 32, scope: !1689)
!2282 = !DILocation(line: 1003, column: 15, scope: !1689)
!2283 = !DILocation(line: 1006, column: 15, scope: !1689)
!2284 = !DILocation(line: 1007, column: 13, scope: !1689)
!2285 = !DILocation(line: 1007, column: 11, scope: !1689)
!2286 = !DILocation(line: 1011, column: 3, scope: !1689)
!2287 = !DILocation(line: 1016, column: 3, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 1016, column: 3)
!2289 = !DILocation(line: 1019, column: 7, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 1019, column: 7)
!2291 = !DILocation(line: 1019, column: 7, scope: !1689)
!2292 = !DILocation(line: 1023, column: 12, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !3, line: 1023, column: 11)
!2294 = distinct !DILexicalBlock(scope: !2290, file: !3, line: 1020, column: 5)
!2295 = !DILocation(line: 1023, column: 11, scope: !2294)
!2296 = !DILocation(line: 1025, column: 10, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 1024, column: 2)
!2298 = !DILocation(line: 1025, column: 8, scope: !2297)
!2299 = !DILocation(line: 1026, column: 8, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2297, file: !3, line: 1026, column: 8)
!2301 = !DILocation(line: 1026, column: 15, scope: !2300)
!2302 = !DILocation(line: 1026, column: 8, scope: !2297)
!2303 = !DILocation(line: 1027, column: 10, scope: !2300)
!2304 = !DILocation(line: 1027, column: 6, scope: !2300)
!2305 = !DILocation(line: 1028, column: 14, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2300, file: !3, line: 1028, column: 13)
!2307 = !DILocation(line: 1028, column: 13, scope: !2300)
!2308 = !DILocation(line: 1030, column: 32, scope: !2297)
!2309 = !DILocation(line: 1029, column: 20, scope: !2306)
!2310 = !DILocation(line: 1029, column: 12, scope: !2306)
!2311 = !DILocation(line: 1029, column: 10, scope: !2306)
!2312 = !DILocation(line: 1029, column: 6, scope: !2306)
!2313 = !DILocation(line: 1030, column: 10, scope: !2297)
!2314 = !DILocation(line: 1030, column: 8, scope: !2297)
!2315 = !DILocation(line: 1031, column: 2, scope: !2297)
!2316 = !DILocation(line: 1035, column: 39, scope: !2294)
!2317 = !DILocation(line: 1035, column: 50, scope: !2294)
!2318 = !DILocation(line: 1035, column: 7, scope: !2294)
!2319 = !DILocation(line: 1036, column: 7, scope: !2294)
!2320 = !DILocation(line: 1039, column: 5, scope: !2294)
!2321 = !DILocation(line: 1041, column: 17, scope: !1689)
!2322 = !DILocation(line: 1045, column: 54, scope: !1689)
!2323 = !DILocation(line: 1045, column: 3, scope: !1689)
!2324 = !DILocation(line: 1046, column: 3, scope: !1689)
!2325 = !DILocation(line: 1052, column: 26, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 1051, column: 5)
!2327 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 1050, column: 7)
!2328 = !DILocation(line: 1052, column: 7, scope: !2326)
!2329 = !DILocation(line: 1053, column: 23, scope: !2326)
!2330 = !DILocation(line: 1053, column: 39, scope: !2326)
!2331 = !DILocation(line: 1053, column: 7, scope: !2326)
!2332 = !DILocation(line: 1059, column: 3, scope: !1689)
!2333 = !DILocation(line: 1060, column: 3, scope: !1689)
!2334 = !DILocation(line: 1063, column: 30, scope: !1689)
!2335 = !DILocation(line: 1063, column: 19, scope: !1689)
!2336 = !DILocation(line: 1065, column: 20, scope: !1689)
!2337 = !DILocation(line: 1068, column: 18, scope: !1689)
!2338 = !DILocation(line: 1068, column: 16, scope: !1689)
!2339 = !DILocation(line: 1069, column: 17, scope: !1689)
!2340 = !DILocation(line: 1069, column: 22, scope: !1689)
!2341 = !DILocation(line: 1070, column: 3, scope: !1689)
!2342 = !DILocation(line: 1070, column: 17, scope: !1689)
!2343 = !DILocation(line: 1070, column: 29, scope: !1689)
!2344 = !DILocation(line: 1071, column: 17, scope: !1689)
!2345 = !DILocation(line: 1071, column: 34, scope: !1689)
!2346 = !DILocation(line: 1072, column: 20, scope: !1689)
!2347 = !DILocation(line: 1073, column: 17, scope: !1689)
!2348 = !DILocation(line: 1073, column: 22, scope: !1689)
!2349 = !DILocation(line: 1074, column: 17, scope: !1689)
!2350 = !DILocation(line: 1074, column: 30, scope: !1689)
!2351 = !DILocation(line: 1075, column: 17, scope: !1689)
!2352 = !DILocation(line: 1075, column: 36, scope: !1689)
!2353 = !DILocation(line: 1083, column: 3, scope: !1689)
!2354 = !DILocation(line: 1085, column: 7, scope: !1703)
!2355 = !DILocation(line: 1085, column: 7, scope: !1689)
!2356 = !DILocation(line: 1088, column: 16, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !1702, file: !3, line: 1088, column: 7)
!2358 = !DILocation(line: 0, scope: !1702)
!2359 = !DILocation(line: 1088, column: 12, scope: !2357)
!2360 = !DILocation(line: 0, scope: !2357)
!2361 = !DILocation(line: 1088, column: 7, scope: !2357)
!2362 = !DILocation(line: 1089, column: 17, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2357, file: !3, line: 1088, column: 7)
!2364 = !DILocation(line: 1089, column: 2, scope: !2363)
!2365 = !DILocation(line: 1088, column: 51, scope: !2363)
!2366 = !DILocation(line: 1088, column: 7, scope: !2363)
!2367 = distinct !{!2367, !2361, !2368}
!2368 = !DILocation(line: 1089, column: 34, scope: !2357)
!2369 = !DILocation(line: 1090, column: 23, scope: !1702)
!2370 = !DILocation(line: 1091, column: 5, scope: !1702)
!2371 = !DILocation(line: 1092, column: 1, scope: !1689)
!2372 = distinct !DISubprogram(name: "dbxout_finish", scope: !3, file: !3, line: 1374, type: !1690, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2373)
!2373 = !{!2374}
!2374 = !DILocalVariable(name: "filename", arg: 1, scope: !2372, file: !3, line: 1374, type: !548)
!2375 = !DILocation(line: 0, scope: !2372)
!2376 = !DILocation(line: 1380, column: 23, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 1379, column: 2)
!2378 = !DILocation(line: 1380, column: 4, scope: !2377)
!2379 = !DILocation(line: 1381, column: 4, scope: !2377)
!2380 = !DILocation(line: 1382, column: 4, scope: !2377)
!2381 = !DILocation(line: 1385, column: 3, scope: !2372)
!2382 = !DILocation(line: 1386, column: 1, scope: !2372)
!2383 = distinct !DISubprogram(name: "dbxout_start_source_file", scope: !3, file: !3, line: 1173, type: !1763, scopeLine: 1175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2384)
!2384 = !{!2385, !2386, !2387}
!2385 = !DILocalVariable(name: "line", arg: 1, scope: !2383, file: !3, line: 1173, type: !7)
!2386 = !DILocalVariable(name: "filename", arg: 2, scope: !2383, file: !3, line: 1174, type: !548)
!2387 = !DILocalVariable(name: "n", scope: !2383, file: !3, line: 1177, type: !1629)
!2388 = !DILocation(line: 0, scope: !2383)
!2389 = !DILocation(line: 1177, column: 24, scope: !2383)
!2390 = !DILocation(line: 1179, column: 13, scope: !2383)
!2391 = !DILocation(line: 1179, column: 11, scope: !2383)
!2392 = !DILocation(line: 1180, column: 6, scope: !2383)
!2393 = !DILocation(line: 1180, column: 23, scope: !2383)
!2394 = !DILocation(line: 1183, column: 6, scope: !2383)
!2395 = !DILocation(line: 1183, column: 18, scope: !2383)
!2396 = !DILocation(line: 1184, column: 6, scope: !2383)
!2397 = !DILocation(line: 1184, column: 11, scope: !2383)
!2398 = !DILocation(line: 1185, column: 3, scope: !2383)
!2399 = !DILocation(line: 1185, column: 17, scope: !2383)
!2400 = !DILocation(line: 1185, column: 22, scope: !2383)
!2401 = !DILocation(line: 1186, column: 6, scope: !2383)
!2402 = !DILocation(line: 1186, column: 19, scope: !2383)
!2403 = !DILocation(line: 1187, column: 27, scope: !2383)
!2404 = !DILocation(line: 1187, column: 6, scope: !2383)
!2405 = !DILocation(line: 1187, column: 25, scope: !2383)
!2406 = !DILocation(line: 1188, column: 18, scope: !2383)
!2407 = !DILocation(line: 1189, column: 16, scope: !2383)
!2408 = !DILocation(line: 1191, column: 1, scope: !2383)
!2409 = distinct !DISubprogram(name: "dbxout_end_source_file", scope: !3, file: !3, line: 1196, type: !1769, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2410)
!2410 = !{!2411}
!2411 = !DILocalVariable(name: "line", arg: 1, scope: !2409, file: !3, line: 1196, type: !7)
!2412 = !DILocation(line: 0, scope: !2409)
!2413 = !DILocation(line: 1200, column: 7, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2409, file: !3, line: 1200, column: 7)
!2415 = !DILocation(line: 1200, column: 21, scope: !2414)
!2416 = !DILocation(line: 1200, column: 34, scope: !2414)
!2417 = !DILocation(line: 1200, column: 7, scope: !2409)
!2418 = !DILocation(line: 1202, column: 7, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2414, file: !3, line: 1201, column: 5)
!2420 = !DILocation(line: 1203, column: 7, scope: !2419)
!2421 = !DILocation(line: 1205, column: 3, scope: !2409)
!2422 = !DILocation(line: 1204, column: 5, scope: !2419)
!2423 = !DILocation(line: 1205, column: 17, scope: !2409)
!2424 = !DILocation(line: 1205, column: 30, scope: !2409)
!2425 = !DILocation(line: 1206, column: 32, scope: !2409)
!2426 = !DILocation(line: 1206, column: 16, scope: !2409)
!2427 = !DILocation(line: 1208, column: 1, scope: !2409)
!2428 = distinct !DISubprogram(name: "dbxout_begin_block", scope: !3, file: !3, line: 1314, type: !1773, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2429)
!2429 = !{!2430, !2431}
!2430 = !DILocalVariable(name: "line", arg: 1, scope: !2428, file: !3, line: 1314, type: !7)
!2431 = !DILocalVariable(name: "n", arg: 2, scope: !2428, file: !3, line: 1314, type: !7)
!2432 = !DILocation(line: 0, scope: !2428)
!2433 = !DILocation(line: 1316, column: 3, scope: !2428)
!2434 = !DILocation(line: 1317, column: 19, scope: !2428)
!2435 = !DILocation(line: 1317, column: 35, scope: !2428)
!2436 = !DILocation(line: 1317, column: 56, scope: !2428)
!2437 = !DILocation(line: 1317, column: 3, scope: !2428)
!2438 = !DILocation(line: 1318, column: 1, scope: !2428)
!2439 = distinct !DISubprogram(name: "dbxout_end_block", scope: !3, file: !3, line: 1323, type: !1773, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2440)
!2440 = !{!2441, !2442}
!2441 = !DILocalVariable(name: "line", arg: 1, scope: !2439, file: !3, line: 1323, type: !7)
!2442 = !DILocalVariable(name: "n", arg: 2, scope: !2439, file: !3, line: 1323, type: !7)
!2443 = !DILocation(line: 0, scope: !2439)
!2444 = !DILocation(line: 1325, column: 3, scope: !2439)
!2445 = !DILocation(line: 1326, column: 19, scope: !2439)
!2446 = !DILocation(line: 1326, column: 35, scope: !2439)
!2447 = !DILocation(line: 1326, column: 56, scope: !2439)
!2448 = !DILocation(line: 1326, column: 3, scope: !2439)
!2449 = !DILocation(line: 1327, column: 1, scope: !2439)
!2450 = distinct !DISubprogram(name: "dbxout_source_line", scope: !3, file: !3, line: 1288, type: !1785, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2451 = !{!2452, !2453, !2454, !2455, !2456}
!2452 = !DILocalVariable(name: "lineno", arg: 1, scope: !2450, file: !3, line: 1288, type: !7)
!2453 = !DILocalVariable(name: "filename", arg: 2, scope: !2450, file: !3, line: 1288, type: !548)
!2454 = !DILocalVariable(name: "discriminator", arg: 3, scope: !2450, file: !3, line: 1289, type: !543)
!2455 = !DILocalVariable(name: "is_stmt", arg: 4, scope: !2450, file: !3, line: 1290, type: !542)
!2456 = !DILocalVariable(name: "begin_label", scope: !2457, file: !3, line: 1299, type: !1909)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !3, line: 1298, column: 5)
!2458 = distinct !DILexicalBlock(scope: !2450, file: !3, line: 1297, column: 7)
!2459 = !DILocation(line: 0, scope: !2450)
!2460 = !DILocation(line: 1292, column: 3, scope: !2450)
!2461 = !DILocation(line: 1299, column: 7, scope: !2457)
!2462 = !DILocation(line: 1299, column: 12, scope: !2457)
!2463 = !DILocation(line: 1300, column: 7, scope: !2457)
!2464 = !DILocation(line: 1302, column: 7, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 1302, column: 7)
!2466 = !DILocation(line: 1303, column: 7, scope: !2457)
!2467 = !DILocation(line: 1305, column: 5, scope: !2458)
!2468 = !DILocation(line: 1309, column: 1, scope: !2450)
!2469 = distinct !DISubprogram(name: "dbxout_begin_prologue", scope: !3, file: !3, line: 1266, type: !1763, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2470)
!2470 = !{!2471, !2472}
!2471 = !DILocalVariable(name: "lineno", arg: 1, scope: !2469, file: !3, line: 1266, type: !7)
!2472 = !DILocalVariable(name: "filename", arg: 2, scope: !2469, file: !3, line: 1266, type: !548)
!2473 = !DILocation(line: 0, scope: !2469)
!2474 = !DILocation(line: 1268, column: 7, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 1268, column: 7)
!2476 = !DILocation(line: 1271, column: 11, scope: !2475)
!2477 = !DILocation(line: 1271, column: 7, scope: !2475)
!2478 = !DILocation(line: 1272, column: 5, scope: !2475)
!2479 = !DILocation(line: 1275, column: 16, scope: !2469)
!2480 = !DILocation(line: 1277, column: 3, scope: !2469)
!2481 = !DILocation(line: 1280, column: 3, scope: !2469)
!2482 = !DILocation(line: 1281, column: 19, scope: !2469)
!2483 = !DILocation(line: 1281, column: 35, scope: !2469)
!2484 = !DILocation(line: 1281, column: 57, scope: !2469)
!2485 = !DILocation(line: 1281, column: 3, scope: !2469)
!2486 = !DILocation(line: 1282, column: 1, scope: !2469)
!2487 = distinct !DISubprogram(name: "dbxout_begin_function", scope: !3, file: !3, line: 3696, type: !1792, scopeLine: 3697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2488)
!2488 = !{!2489, !2490, !2491}
!2489 = !DILocalVariable(name: "decl", arg: 1, scope: !2487, file: !3, line: 3696, type: !550)
!2490 = !DILocalVariable(name: "saved_tree_used1", scope: !2487, file: !3, line: 3698, type: !543)
!2491 = !DILocalVariable(name: "saved_tree_used2", scope: !2492, file: !3, line: 3704, type: !543)
!2492 = distinct !DILexicalBlock(scope: !2493, file: !3, line: 3703, column: 5)
!2493 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 3702, column: 7)
!2494 = !DILocation(line: 0, scope: !2487)
!2495 = !DILocation(line: 3700, column: 22, scope: !2487)
!2496 = !DILocation(line: 3701, column: 20, scope: !2487)
!2497 = !DILocation(line: 3702, column: 7, scope: !2493)
!2498 = !DILocation(line: 3702, column: 38, scope: !2493)
!2499 = !DILocation(line: 3702, column: 7, scope: !2487)
!2500 = !DILocation(line: 3704, column: 30, scope: !2492)
!2501 = !DILocation(line: 3705, column: 38, scope: !2492)
!2502 = !DILocation(line: 3706, column: 7, scope: !2492)
!2503 = !DILocation(line: 3707, column: 7, scope: !2492)
!2504 = !DILocation(line: 3707, column: 38, scope: !2492)
!2505 = !DILocation(line: 3708, column: 5, scope: !2492)
!2506 = !DILocation(line: 3710, column: 5, scope: !2493)
!2507 = !DILocation(line: 3711, column: 20, scope: !2487)
!2508 = !DILocation(line: 3713, column: 17, scope: !2487)
!2509 = !DILocation(line: 3713, column: 3, scope: !2487)
!2510 = !DILocation(line: 3714, column: 7, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 3714, column: 7)
!2512 = !DILocation(line: 3714, column: 38, scope: !2511)
!2513 = !DILocation(line: 3714, column: 7, scope: !2487)
!2514 = !DILocation(line: 3715, column: 5, scope: !2511)
!2515 = !DILocation(line: 3716, column: 1, scope: !2487)
!2516 = distinct !DISubprogram(name: "dbxout_function_decl", scope: !3, file: !3, line: 1336, type: !1792, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2517)
!2517 = !{!2518}
!2518 = !DILocalVariable(name: "decl", arg: 1, scope: !2516, file: !3, line: 1336, type: !550)
!2519 = !DILocation(line: 0, scope: !2516)
!2520 = !DILocation(line: 1338, column: 3, scope: !2516)
!2521 = !DILocation(line: 1342, column: 17, scope: !2516)
!2522 = !DILocation(line: 1342, column: 41, scope: !2516)
!2523 = !DILocation(line: 1342, column: 3, scope: !2516)
!2524 = !DILocation(line: 1343, column: 3, scope: !2516)
!2525 = !DILocation(line: 1344, column: 1, scope: !2516)
!2526 = distinct !DISubprogram(name: "dbxout_global_decl", scope: !3, file: !3, line: 1351, type: !1792, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2527)
!2527 = !{!2528, !2529}
!2528 = !DILocalVariable(name: "decl", arg: 1, scope: !2526, file: !3, line: 1351, type: !550)
!2529 = !DILocalVariable(name: "saved_tree_used", scope: !2530, file: !3, line: 1355, type: !543)
!2530 = distinct !DILexicalBlock(scope: !2531, file: !3, line: 1354, column: 5)
!2531 = distinct !DILexicalBlock(scope: !2526, file: !3, line: 1353, column: 7)
!2532 = !DILocation(line: 0, scope: !2526)
!2533 = !DILocation(line: 1353, column: 7, scope: !2531)
!2534 = !DILocation(line: 1353, column: 24, scope: !2531)
!2535 = !DILocation(line: 1353, column: 36, scope: !2531)
!2536 = !DILocation(line: 1353, column: 40, scope: !2531)
!2537 = !DILocation(line: 1353, column: 7, scope: !2526)
!2538 = !DILocation(line: 1355, column: 29, scope: !2530)
!2539 = !DILocation(line: 1356, column: 24, scope: !2530)
!2540 = !DILocation(line: 1357, column: 7, scope: !2530)
!2541 = !DILocation(line: 1358, column: 24, scope: !2530)
!2542 = !DILocation(line: 1359, column: 5, scope: !2530)
!2543 = !DILocation(line: 1360, column: 1, scope: !2526)
!2544 = distinct !DISubprogram(name: "dbxout_type_decl", scope: !3, file: !3, line: 1365, type: !1715, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2545)
!2545 = !{!2546, !2547}
!2546 = !DILocalVariable(name: "decl", arg: 1, scope: !2544, file: !3, line: 1365, type: !550)
!2547 = !DILocalVariable(name: "local", arg: 2, scope: !2544, file: !3, line: 1365, type: !543)
!2548 = !DILocation(line: 0, scope: !2544)
!2549 = !DILocation(line: 1367, column: 3, scope: !2544)
!2550 = !DILocation(line: 1368, column: 1, scope: !2544)
!2551 = distinct !DISubprogram(name: "dbxout_handle_pch", scope: !3, file: !3, line: 1213, type: !1769, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!2552 = !{!2553}
!2553 = !DILocalVariable(name: "at_end", arg: 1, scope: !2551, file: !3, line: 1213, type: !7)
!2554 = !DILocation(line: 0, scope: !2551)
!2555 = !DILocation(line: 1215, column: 9, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2551, file: !3, line: 1215, column: 7)
!2557 = !DILocation(line: 1215, column: 7, scope: !2551)
!2558 = !DILocation(line: 1219, column: 36, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2556, file: !3, line: 1216, column: 5)
!2560 = !DILocation(line: 1219, column: 7, scope: !2559)
!2561 = !DILocation(line: 1223, column: 16, scope: !2559)
!2562 = !DILocation(line: 1224, column: 5, scope: !2559)
!2563 = !DILocation(line: 1228, column: 7, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2556, file: !3, line: 1226, column: 5)
!2565 = !DILocation(line: 1231, column: 26, scope: !2564)
!2566 = !DILocation(line: 1231, column: 35, scope: !2564)
!2567 = !DILocation(line: 1231, column: 24, scope: !2564)
!2568 = !DILocation(line: 1233, column: 1, scope: !2551)
!2569 = distinct !DISubprogram(name: "dbxout_int", scope: !3, file: !3, line: 437, type: !1820, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2570)
!2570 = !{!2571, !2572, !2576, !2577, !2578}
!2571 = !DILocalVariable(name: "num", arg: 1, scope: !2569, file: !3, line: 437, type: !543)
!2572 = !DILocalVariable(name: "buf", scope: !2569, file: !3, line: 439, type: !2573)
!2573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 512, elements: !2574)
!2574 = !{!2575}
!2575 = !DISubrange(count: 64)
!2576 = !DILocalVariable(name: "p", scope: !2569, file: !3, line: 440, type: !545)
!2577 = !DILocalVariable(name: "unum", scope: !2569, file: !3, line: 441, type: !7)
!2578 = !DILocalVariable(name: "digit", scope: !2579, file: !3, line: 456, type: !543)
!2579 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 456, column: 3)
!2580 = !DILocation(line: 0, scope: !2569)
!2581 = !DILocation(line: 439, column: 3, scope: !2569)
!2582 = !DILocation(line: 439, column: 8, scope: !2569)
!2583 = !DILocation(line: 440, column: 17, scope: !2569)
!2584 = !DILocation(line: 443, column: 11, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 443, column: 7)
!2586 = !DILocation(line: 443, column: 7, scope: !2569)
!2587 = !DILocation(line: 445, column: 18, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 444, column: 5)
!2589 = !DILocation(line: 445, column: 7, scope: !2588)
!2590 = !DILocation(line: 446, column: 7, scope: !2588)
!2591 = !DILocation(line: 448, column: 11, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 448, column: 7)
!2593 = !DILocation(line: 448, column: 7, scope: !2569)
!2594 = !DILocation(line: 450, column: 18, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 449, column: 5)
!2596 = !DILocation(line: 450, column: 7, scope: !2595)
!2597 = !DILocation(line: 451, column: 14, scope: !2595)
!2598 = !DILocation(line: 452, column: 5, scope: !2595)
!2599 = !DILocation(line: 0, scope: !2592)
!2600 = !DILocation(line: 456, column: 3, scope: !2569)
!2601 = !DILocation(line: 456, column: 3, scope: !2579)
!2602 = !DILocation(line: 0, scope: !2579)
!2603 = distinct !{!2603, !2600, !2600}
!2604 = !DILocation(line: 458, column: 3, scope: !2569)
!2605 = !DILocation(line: 458, column: 12, scope: !2569)
!2606 = !DILocation(line: 460, column: 13, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 459, column: 5)
!2608 = !DILocation(line: 460, column: 17, scope: !2607)
!2609 = !DILocation(line: 460, column: 7, scope: !2607)
!2610 = !DILocation(line: 461, column: 8, scope: !2607)
!2611 = distinct !{!2611, !2604, !2612}
!2612 = !DILocation(line: 462, column: 5, scope: !2569)
!2613 = !DILocation(line: 463, column: 1, scope: !2569)
!2614 = distinct !DISubprogram(name: "dbxout_stab_value_zero", scope: !3, file: !3, line: 478, type: !1759, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!2615 = !DILocation(line: 480, column: 17, scope: !2614)
!2616 = !DILocation(line: 480, column: 3, scope: !2614)
!2617 = !DILocation(line: 481, column: 1, scope: !2614)
!2618 = distinct !DISubprogram(name: "dbxout_stab_value_label", scope: !3, file: !3, line: 485, type: !1690, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2619)
!2619 = !{!2620}
!2620 = !DILocalVariable(name: "label", arg: 1, scope: !2618, file: !3, line: 485, type: !548)
!2621 = !DILocation(line: 0, scope: !2618)
!2622 = !DILocation(line: 487, column: 18, scope: !2618)
!2623 = !DILocation(line: 487, column: 3, scope: !2618)
!2624 = !DILocation(line: 488, column: 15, scope: !2618)
!2625 = !DILocation(line: 488, column: 3, scope: !2618)
!2626 = !DILocation(line: 489, column: 1, scope: !2618)
!2627 = distinct !DISubprogram(name: "dbxout_stab_value_label_diff", scope: !3, file: !3, line: 494, type: !2628, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2630)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{null, !548, !548}
!2630 = !{!2631, !2632}
!2631 = !DILocalVariable(name: "label", arg: 1, scope: !2627, file: !3, line: 494, type: !548)
!2632 = !DILocalVariable(name: "base", arg: 2, scope: !2627, file: !3, line: 494, type: !548)
!2633 = !DILocation(line: 0, scope: !2627)
!2634 = !DILocation(line: 496, column: 18, scope: !2627)
!2635 = !DILocation(line: 496, column: 3, scope: !2627)
!2636 = !DILocation(line: 497, column: 14, scope: !2627)
!2637 = !DILocation(line: 497, column: 3, scope: !2627)
!2638 = !DILocation(line: 498, column: 18, scope: !2627)
!2639 = !DILocation(line: 498, column: 3, scope: !2627)
!2640 = !DILocation(line: 499, column: 15, scope: !2627)
!2641 = !DILocation(line: 499, column: 3, scope: !2627)
!2642 = !DILocation(line: 500, column: 1, scope: !2627)
!2643 = distinct !DISubprogram(name: "dbxout_stab_value_internal_label", scope: !3, file: !3, line: 508, type: !2644, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2647)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{null, !548, !2646}
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!2647 = !{!2648, !2649, !2650, !2651}
!2648 = !DILocalVariable(name: "stem", arg: 1, scope: !2643, file: !3, line: 508, type: !548)
!2649 = !DILocalVariable(name: "counterp", arg: 2, scope: !2643, file: !3, line: 508, type: !2646)
!2650 = !DILocalVariable(name: "label", scope: !2643, file: !3, line: 510, type: !1695)
!2651 = !DILocalVariable(name: "counter", scope: !2643, file: !3, line: 511, type: !543)
!2652 = !DILocation(line: 0, scope: !2643)
!2653 = !DILocation(line: 510, column: 3, scope: !2643)
!2654 = !DILocation(line: 510, column: 8, scope: !2643)
!2655 = !DILocation(line: 511, column: 17, scope: !2643)
!2656 = !DILocation(line: 511, column: 39, scope: !2643)
!2657 = !DILocation(line: 513, column: 3, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2643, file: !3, line: 513, column: 3)
!2659 = !DILocation(line: 514, column: 3, scope: !2643)
!2660 = !DILocation(line: 515, column: 19, scope: !2643)
!2661 = !DILocation(line: 515, column: 35, scope: !2643)
!2662 = !DILocation(line: 515, column: 55, scope: !2643)
!2663 = !DILocation(line: 515, column: 3, scope: !2643)
!2664 = !DILocation(line: 516, column: 1, scope: !2643)
!2665 = distinct !DISubprogram(name: "dbxout_stab_value_internal_label_diff", scope: !3, file: !3, line: 522, type: !2666, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2668)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{null, !548, !2646, !548}
!2668 = !{!2669, !2670, !2671, !2672, !2673}
!2669 = !DILocalVariable(name: "stem", arg: 1, scope: !2665, file: !3, line: 522, type: !548)
!2670 = !DILocalVariable(name: "counterp", arg: 2, scope: !2665, file: !3, line: 522, type: !2646)
!2671 = !DILocalVariable(name: "base", arg: 3, scope: !2665, file: !3, line: 523, type: !548)
!2672 = !DILocalVariable(name: "label", scope: !2665, file: !3, line: 525, type: !1695)
!2673 = !DILocalVariable(name: "counter", scope: !2665, file: !3, line: 526, type: !543)
!2674 = !DILocation(line: 0, scope: !2665)
!2675 = !DILocation(line: 525, column: 3, scope: !2665)
!2676 = !DILocation(line: 525, column: 8, scope: !2665)
!2677 = !DILocation(line: 526, column: 17, scope: !2665)
!2678 = !DILocation(line: 526, column: 39, scope: !2665)
!2679 = !DILocation(line: 528, column: 3, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 528, column: 3)
!2681 = !DILocation(line: 529, column: 3, scope: !2665)
!2682 = !DILocation(line: 530, column: 19, scope: !2665)
!2683 = !DILocation(line: 530, column: 35, scope: !2665)
!2684 = !DILocation(line: 530, column: 55, scope: !2665)
!2685 = !DILocation(line: 530, column: 3, scope: !2665)
!2686 = !DILocation(line: 531, column: 1, scope: !2665)
!2687 = distinct !DISubprogram(name: "dbxout_stabd", scope: !3, file: !3, line: 537, type: !2688, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2690)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{null, !543, !543}
!2690 = !{!2691, !2692}
!2691 = !DILocalVariable(name: "stype", arg: 1, scope: !2687, file: !3, line: 537, type: !543)
!2692 = !DILocalVariable(name: "sdesc", arg: 2, scope: !2687, file: !3, line: 537, type: !543)
!2693 = !DILocation(line: 0, scope: !2687)
!2694 = !DILocation(line: 539, column: 24, scope: !2687)
!2695 = !DILocation(line: 539, column: 3, scope: !2687)
!2696 = !DILocation(line: 540, column: 3, scope: !2687)
!2697 = !DILocation(line: 541, column: 17, scope: !2687)
!2698 = !DILocation(line: 541, column: 3, scope: !2687)
!2699 = !DILocation(line: 542, column: 3, scope: !2687)
!2700 = !DILocation(line: 543, column: 15, scope: !2687)
!2701 = !DILocation(line: 543, column: 3, scope: !2687)
!2702 = !DILocation(line: 544, column: 1, scope: !2687)
!2703 = distinct !DISubprogram(name: "dbxout_begin_stabn", scope: !3, file: !3, line: 552, type: !1820, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2704)
!2704 = !{!2705}
!2705 = !DILocalVariable(name: "stype", arg: 1, scope: !2703, file: !3, line: 552, type: !543)
!2706 = !DILocation(line: 0, scope: !2703)
!2707 = !DILocation(line: 554, column: 24, scope: !2703)
!2708 = !DILocation(line: 554, column: 3, scope: !2703)
!2709 = !DILocation(line: 555, column: 3, scope: !2703)
!2710 = !DILocation(line: 556, column: 19, scope: !2703)
!2711 = !DILocation(line: 556, column: 3, scope: !2703)
!2712 = !DILocation(line: 557, column: 1, scope: !2703)
!2713 = distinct !DISubprogram(name: "dbxout_begin_stabn_sline", scope: !3, file: !3, line: 562, type: !1820, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2714)
!2714 = !{!2715}
!2715 = !DILocalVariable(name: "lineno", arg: 1, scope: !2713, file: !3, line: 562, type: !543)
!2716 = !DILocation(line: 0, scope: !2713)
!2717 = !DILocation(line: 564, column: 24, scope: !2713)
!2718 = !DILocation(line: 564, column: 3, scope: !2713)
!2719 = !DILocation(line: 565, column: 3, scope: !2713)
!2720 = !DILocation(line: 566, column: 17, scope: !2713)
!2721 = !DILocation(line: 566, column: 3, scope: !2713)
!2722 = !DILocation(line: 567, column: 3, scope: !2713)
!2723 = !DILocation(line: 568, column: 14, scope: !2713)
!2724 = !DILocation(line: 568, column: 3, scope: !2713)
!2725 = !DILocation(line: 569, column: 1, scope: !2713)
!2726 = distinct !DISubprogram(name: "dbxout_begin_empty_stabs", scope: !3, file: !3, line: 575, type: !1820, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2727)
!2727 = !{!2728}
!2728 = !DILocalVariable(name: "stype", arg: 1, scope: !2726, file: !3, line: 575, type: !543)
!2729 = !DILocation(line: 0, scope: !2726)
!2730 = !DILocation(line: 577, column: 24, scope: !2726)
!2731 = !DILocation(line: 577, column: 3, scope: !2726)
!2732 = !DILocation(line: 578, column: 19, scope: !2726)
!2733 = !DILocation(line: 578, column: 3, scope: !2726)
!2734 = !DILocation(line: 579, column: 3, scope: !2726)
!2735 = !DILocation(line: 580, column: 19, scope: !2726)
!2736 = !DILocation(line: 580, column: 3, scope: !2726)
!2737 = !DILocation(line: 581, column: 1, scope: !2726)
!2738 = distinct !DISubprogram(name: "dbxout_begin_simple_stabs", scope: !3, file: !3, line: 586, type: !2739, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2741)
!2739 = !DISubroutineType(types: !2740)
!2740 = !{null, !548, !543}
!2741 = !{!2742, !2743}
!2742 = !DILocalVariable(name: "str", arg: 1, scope: !2738, file: !3, line: 586, type: !548)
!2743 = !DILocalVariable(name: "stype", arg: 2, scope: !2738, file: !3, line: 586, type: !543)
!2744 = !DILocation(line: 0, scope: !2738)
!2745 = !DILocation(line: 588, column: 24, scope: !2738)
!2746 = !DILocation(line: 588, column: 3, scope: !2738)
!2747 = !DILocation(line: 589, column: 25, scope: !2738)
!2748 = !DILocation(line: 589, column: 3, scope: !2738)
!2749 = !DILocation(line: 590, column: 14, scope: !2738)
!2750 = !DILocation(line: 590, column: 3, scope: !2738)
!2751 = !DILocation(line: 591, column: 3, scope: !2738)
!2752 = !DILocation(line: 592, column: 19, scope: !2738)
!2753 = !DILocation(line: 592, column: 3, scope: !2738)
!2754 = !DILocation(line: 593, column: 1, scope: !2738)
!2755 = distinct !DISubprogram(name: "dbxout_begin_simple_stabs_desc", scope: !3, file: !3, line: 597, type: !2756, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2758)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{null, !548, !543, !543}
!2758 = !{!2759, !2760, !2761}
!2759 = !DILocalVariable(name: "str", arg: 1, scope: !2755, file: !3, line: 597, type: !548)
!2760 = !DILocalVariable(name: "stype", arg: 2, scope: !2755, file: !3, line: 597, type: !543)
!2761 = !DILocalVariable(name: "sdesc", arg: 3, scope: !2755, file: !3, line: 597, type: !543)
!2762 = !DILocation(line: 0, scope: !2755)
!2763 = !DILocation(line: 599, column: 24, scope: !2755)
!2764 = !DILocation(line: 599, column: 3, scope: !2755)
!2765 = !DILocation(line: 600, column: 25, scope: !2755)
!2766 = !DILocation(line: 600, column: 3, scope: !2755)
!2767 = !DILocation(line: 601, column: 14, scope: !2755)
!2768 = !DILocation(line: 601, column: 3, scope: !2755)
!2769 = !DILocation(line: 602, column: 3, scope: !2755)
!2770 = !DILocation(line: 603, column: 17, scope: !2755)
!2771 = !DILocation(line: 603, column: 3, scope: !2755)
!2772 = !DILocation(line: 604, column: 3, scope: !2755)
!2773 = !DILocation(line: 605, column: 14, scope: !2755)
!2774 = !DILocation(line: 605, column: 3, scope: !2755)
!2775 = !DILocation(line: 606, column: 1, scope: !2755)
!2776 = distinct !DISubprogram(name: "dbxout_symbol", scope: !3, file: !3, line: 2520, type: !2777, scopeLine: 2521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2779)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!543, !550, !543}
!2779 = !{!2780, !2781, !2782, !2783, !2784, !2785, !2786, !2789, !2792, !2793, !2798, !2801}
!2780 = !DILocalVariable(name: "decl", arg: 1, scope: !2776, file: !3, line: 2520, type: !550)
!2781 = !DILocalVariable(name: "local", arg: 2, scope: !2776, file: !3, line: 2520, type: !543)
!2782 = !DILocalVariable(name: "type", scope: !2776, file: !3, line: 2522, type: !550)
!2783 = !DILocalVariable(name: "context", scope: !2776, file: !3, line: 2523, type: !550)
!2784 = !DILocalVariable(name: "result", scope: !2776, file: !3, line: 2524, type: !543)
!2785 = !DILocalVariable(name: "decl_rtl", scope: !2776, file: !3, line: 2525, type: !725)
!2786 = !DILocalVariable(name: "t", scope: !2787, file: !3, line: 2554, type: !550)
!2787 = distinct !DILexicalBlock(scope: !2788, file: !3, line: 2553, column: 5)
!2788 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 2552, column: 7)
!2789 = !DILocalVariable(name: "tag_needed", scope: !2790, file: !3, line: 2676, type: !543)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2675, column: 7)
!2791 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 2604, column: 5)
!2792 = !DILocalVariable(name: "did_output", scope: !2790, file: !3, line: 2677, type: !543)
!2793 = !DILocalVariable(name: "name", scope: !2794, file: !3, line: 2704, type: !550)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 2703, column: 8)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !3, line: 2688, column: 10)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 2680, column: 4)
!2797 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 2679, column: 6)
!2798 = !DILocalVariable(name: "name", scope: !2799, file: !3, line: 2763, type: !550)
!2799 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 2757, column: 4)
!2800 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 2752, column: 6)
!2801 = !DILocalVariable(name: "ival", scope: !2802, file: !3, line: 2830, type: !606)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 2829, column: 6)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 2827, column: 8)
!2804 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 2824, column: 2)
!2805 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2816, column: 11)
!2806 = !DILocation(line: 0, scope: !2776)
!2807 = !DILocation(line: 2522, column: 15, scope: !2776)
!2808 = !DILocation(line: 2528, column: 3, scope: !2776)
!2809 = !DILocation(line: 2532, column: 8, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 2532, column: 7)
!2811 = !DILocation(line: 2532, column: 25, scope: !2810)
!2812 = !DILocation(line: 2532, column: 30, scope: !2810)
!2813 = !DILocation(line: 2532, column: 33, scope: !2810)
!2814 = !DILocation(line: 2532, column: 50, scope: !2810)
!2815 = !DILocation(line: 2533, column: 7, scope: !2810)
!2816 = !DILocation(line: 2533, column: 10, scope: !2810)
!2817 = !DILocation(line: 2532, column: 7, scope: !2776)
!2818 = !DILocation(line: 2534, column: 5, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 2534, column: 5)
!2820 = !DILocation(line: 2540, column: 7, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 2540, column: 7)
!2822 = !DILocation(line: 2541, column: 7, scope: !2821)
!2823 = !DILocation(line: 2541, column: 12, scope: !2821)
!2824 = !DILocation(line: 2542, column: 11, scope: !2821)
!2825 = !DILocation(line: 2542, column: 32, scope: !2821)
!2826 = !DILocation(line: 2542, column: 44, scope: !2821)
!2827 = !DILocation(line: 2542, column: 48, scope: !2821)
!2828 = !DILocation(line: 2540, column: 7, scope: !2776)
!2829 = !DILocation(line: 2543, column: 5, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 2543, column: 5)
!2831 = !DILocation(line: 2546, column: 8, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 2546, column: 7)
!2833 = !DILocation(line: 2546, column: 7, scope: !2776)
!2834 = !DILocation(line: 2548, column: 25, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 2547, column: 5)
!2836 = !DILocation(line: 2548, column: 23, scope: !2835)
!2837 = !DILocation(line: 2549, column: 7, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 2549, column: 7)
!2839 = !DILocation(line: 2552, column: 7, scope: !2776)
!2840 = !DILocation(line: 2567, column: 7, scope: !2787)
!2841 = !DILocation(line: 0, scope: !2787)
!2842 = !DILocation(line: 2567, column: 14, scope: !2787)
!2843 = !DILocation(line: 2568, column: 13, scope: !2787)
!2844 = distinct !{!2844, !2840, !2843}
!2845 = !DILocation(line: 2577, column: 25, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 2577, column: 11)
!2847 = !DILocation(line: 2578, column: 12, scope: !2846)
!2848 = !DILocation(line: 2578, column: 29, scope: !2846)
!2849 = !DILocation(line: 2579, column: 12, scope: !2846)
!2850 = !DILocation(line: 2579, column: 29, scope: !2846)
!2851 = !DILocation(line: 2580, column: 12, scope: !2846)
!2852 = !DILocation(line: 2580, column: 29, scope: !2846)
!2853 = !DILocation(line: 2577, column: 11, scope: !2787)
!2854 = !DILocation(line: 2582, column: 10, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 2582, column: 10)
!2856 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 2581, column: 9)
!2857 = !DILocation(line: 2583, column: 3, scope: !2855)
!2858 = !DILocation(line: 2583, column: 25, scope: !2855)
!2859 = !DILocation(line: 2584, column: 3, scope: !2855)
!2860 = !DILocation(line: 2584, column: 6, scope: !2855)
!2861 = !DILocation(line: 2585, column: 3, scope: !2855)
!2862 = !DILocation(line: 2585, column: 8, scope: !2855)
!2863 = !DILocation(line: 2582, column: 10, scope: !2856)
!2864 = !DILocation(line: 2587, column: 8, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 2586, column: 6)
!2866 = !DILocation(line: 2588, column: 12, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2865, file: !3, line: 2588, column: 12)
!2868 = !DILocation(line: 2589, column: 5, scope: !2867)
!2869 = !DILocation(line: 2589, column: 25, scope: !2867)
!2870 = !DILocation(line: 2589, column: 22, scope: !2867)
!2871 = !DILocation(line: 2590, column: 5, scope: !2867)
!2872 = !DILocation(line: 2590, column: 22, scope: !2867)
!2873 = !DILocation(line: 2591, column: 5, scope: !2867)
!2874 = !DILocation(line: 2591, column: 8, scope: !2867)
!2875 = !DILocation(line: 2588, column: 12, scope: !2865)
!2876 = !DILocation(line: 2592, column: 3, scope: !2867)
!2877 = !DILocation(line: 2595, column: 16, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 2595, column: 16)
!2879 = !DILocation(line: 2596, column: 9, scope: !2878)
!2880 = !DILocation(line: 2596, column: 26, scope: !2878)
!2881 = !DILocation(line: 2597, column: 9, scope: !2878)
!2882 = !DILocation(line: 2597, column: 12, scope: !2878)
!2883 = !DILocation(line: 2595, column: 16, scope: !2846)
!2884 = !DILocation(line: 2598, column: 9, scope: !2878)
!2885 = !DILocation(line: 2601, column: 3, scope: !2776)
!2886 = !DILocation(line: 2603, column: 11, scope: !2776)
!2887 = !DILocation(line: 2603, column: 3, scope: !2776)
!2888 = !DILocation(line: 2610, column: 18, scope: !2791)
!2889 = !DILocation(line: 2611, column: 12, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2611, column: 11)
!2891 = !DILocation(line: 2611, column: 11, scope: !2791)
!2892 = !DILocation(line: 2612, column: 2, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 2612, column: 2)
!2894 = !DILocation(line: 2613, column: 11, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2613, column: 11)
!2896 = !DILocation(line: 2613, column: 11, scope: !2791)
!2897 = !DILocation(line: 2616, column: 17, scope: !2791)
!2898 = !DILocation(line: 2617, column: 22, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2617, column: 11)
!2900 = !DILocation(line: 2617, column: 19, scope: !2899)
!2901 = !DILocation(line: 2617, column: 11, scope: !2791)
!2902 = !DILocation(line: 2620, column: 11, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2620, column: 11)
!2904 = !DILocation(line: 2620, column: 19, scope: !2903)
!2905 = !DILocation(line: 2620, column: 22, scope: !2903)
!2906 = !DILocation(line: 2620, column: 11, scope: !2791)
!2907 = !DILocation(line: 2622, column: 12, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2622, column: 11)
!2909 = !DILocation(line: 2623, column: 4, scope: !2908)
!2910 = !DILocation(line: 2623, column: 7, scope: !2908)
!2911 = !DILocation(line: 2623, column: 37, scope: !2908)
!2912 = !DILocation(line: 2622, column: 11, scope: !2791)
!2913 = !DILocation(line: 2626, column: 11, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2626, column: 11)
!2915 = !DILocation(line: 2626, column: 11, scope: !2791)
!2916 = !DILocation(line: 2627, column: 2, scope: !2914)
!2917 = !DILocation(line: 2629, column: 7, scope: !2791)
!2918 = !DILocation(line: 2630, column: 7, scope: !2791)
!2919 = !DILocation(line: 2631, column: 7, scope: !2791)
!2920 = !DILocation(line: 2634, column: 11, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2634, column: 11)
!2922 = !DILocation(line: 2634, column: 11, scope: !2791)
!2923 = !DILocation(line: 2635, column: 2, scope: !2921)
!2924 = !DILocation(line: 2637, column: 15, scope: !2921)
!2925 = !DILocation(line: 2637, column: 2, scope: !2921)
!2926 = !DILocation(line: 2642, column: 11, scope: !2791)
!2927 = !DILocation(line: 2644, column: 4, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 2643, column: 2)
!2929 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2642, column: 11)
!2930 = !DILocation(line: 2645, column: 4, scope: !2928)
!2931 = !DILocation(line: 2646, column: 4, scope: !2928)
!2932 = !DILocation(line: 2647, column: 4, scope: !2928)
!2933 = !DILocation(line: 2648, column: 2, scope: !2928)
!2934 = !DILocation(line: 2650, column: 49, scope: !2791)
!2935 = !DILocation(line: 2650, column: 7, scope: !2791)
!2936 = !DILocation(line: 2651, column: 7, scope: !2791)
!2937 = !DILocation(line: 2656, column: 11, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2656, column: 11)
!2939 = !DILocation(line: 2656, column: 35, scope: !2938)
!2940 = !DILocation(line: 2656, column: 38, scope: !2938)
!2941 = !DILocation(line: 2656, column: 11, scope: !2791)
!2942 = !DILocation(line: 2657, column: 2, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 2657, column: 2)
!2944 = !DILocation(line: 0, scope: !2790)
!2945 = !DILocation(line: 2679, column: 6, scope: !2797)
!2946 = !DILocation(line: 2679, column: 6, scope: !2790)
!2947 = !DILocation(line: 2688, column: 11, scope: !2795)
!2948 = !DILocation(line: 2688, column: 28, scope: !2795)
!2949 = !DILocation(line: 2689, column: 4, scope: !2795)
!2950 = !DILocation(line: 2689, column: 24, scope: !2795)
!2951 = !DILocation(line: 2690, column: 4, scope: !2795)
!2952 = !DILocation(line: 2690, column: 24, scope: !2795)
!2953 = !DILocation(line: 2691, column: 3, scope: !2795)
!2954 = !DILocation(line: 2691, column: 6, scope: !2795)
!2955 = !DILocation(line: 2691, column: 23, scope: !2795)
!2956 = !DILocation(line: 2692, column: 7, scope: !2795)
!2957 = !DILocation(line: 2692, column: 3, scope: !2795)
!2958 = !DILocation(line: 2693, column: 7, scope: !2795)
!2959 = !DILocation(line: 2696, column: 3, scope: !2795)
!2960 = !DILocation(line: 2696, column: 6, scope: !2795)
!2961 = !DILocation(line: 2698, column: 17, scope: !2795)
!2962 = !DILocation(line: 2698, column: 20, scope: !2795)
!2963 = !DILocation(line: 2702, column: 3, scope: !2795)
!2964 = !DILocation(line: 2702, column: 6, scope: !2795)
!2965 = !DILocation(line: 2688, column: 10, scope: !2796)
!2966 = !DILocation(line: 2704, column: 15, scope: !2794)
!2967 = !DILocation(line: 0, scope: !2794)
!2968 = !DILocation(line: 2705, column: 7, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 2705, column: 7)
!2970 = !DILocation(line: 2705, column: 24, scope: !2969)
!2971 = !DILocation(line: 2705, column: 7, scope: !2794)
!2972 = !DILocation(line: 2706, column: 12, scope: !2969)
!2973 = !DILocation(line: 2706, column: 5, scope: !2969)
!2974 = !DILocation(line: 2708, column: 3, scope: !2794)
!2975 = !DILocation(line: 2709, column: 3, scope: !2794)
!2976 = !DILocation(line: 2710, column: 3, scope: !2794)
!2977 = !DILocation(line: 2711, column: 3, scope: !2794)
!2978 = !DILocation(line: 2712, column: 3, scope: !2794)
!2979 = !DILocation(line: 2714, column: 8, scope: !2794)
!2980 = !DILocation(line: 2716, column: 6, scope: !2796)
!2981 = !DILocation(line: 2719, column: 10, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2796, file: !3, line: 2719, column: 10)
!2983 = !DILocation(line: 2719, column: 10, scope: !2796)
!2984 = !DILocation(line: 2720, column: 8, scope: !2982)
!2985 = !DILocation(line: 2723, column: 6, scope: !2796)
!2986 = !DILocation(line: 2724, column: 6, scope: !2796)
!2987 = !DILocation(line: 2727, column: 11, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2796, file: !3, line: 2727, column: 10)
!2989 = !DILocation(line: 2727, column: 28, scope: !2988)
!2990 = !DILocation(line: 2728, column: 4, scope: !2988)
!2991 = !DILocation(line: 2728, column: 24, scope: !2988)
!2992 = !DILocation(line: 2729, column: 4, scope: !2988)
!2993 = !DILocation(line: 2729, column: 24, scope: !2988)
!2994 = !DILocation(line: 2730, column: 3, scope: !2988)
!2995 = !DILocation(line: 2730, column: 6, scope: !2988)
!2996 = !DILocation(line: 2730, column: 23, scope: !2988)
!2997 = !DILocation(line: 2733, column: 3, scope: !2988)
!2998 = !DILocation(line: 2733, column: 6, scope: !2988)
!2999 = !DILocation(line: 2735, column: 7, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !3001, file: !3, line: 2735, column: 7)
!3001 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 2734, column: 8)
!3002 = !DILocation(line: 2727, column: 10, scope: !2796)
!3003 = !DILocation(line: 2737, column: 7, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 2736, column: 5)
!3005 = !DILocation(line: 2738, column: 7, scope: !3004)
!3006 = !DILocation(line: 2738, column: 43, scope: !3004)
!3007 = !DILocation(line: 2739, column: 5, scope: !3004)
!3008 = !DILocation(line: 2742, column: 6, scope: !2796)
!3009 = !DILocation(line: 2743, column: 6, scope: !2796)
!3010 = !DILocation(line: 2744, column: 6, scope: !2796)
!3011 = !DILocation(line: 2747, column: 4, scope: !2796)
!3012 = !DILocation(line: 2752, column: 17, scope: !2800)
!3013 = !DILocation(line: 2752, column: 20, scope: !2800)
!3014 = !DILocation(line: 2752, column: 37, scope: !2800)
!3015 = !DILocation(line: 2753, column: 6, scope: !2800)
!3016 = !DILocation(line: 2753, column: 10, scope: !2800)
!3017 = !DILocation(line: 2753, column: 39, scope: !2800)
!3018 = !DILocation(line: 2754, column: 3, scope: !2800)
!3019 = !DILocation(line: 2754, column: 7, scope: !2800)
!3020 = !DILocation(line: 2754, column: 36, scope: !2800)
!3021 = !DILocation(line: 2755, column: 6, scope: !2800)
!3022 = !DILocation(line: 2755, column: 9, scope: !2800)
!3023 = !DILocation(line: 2756, column: 6, scope: !2800)
!3024 = !DILocation(line: 2756, column: 10, scope: !2800)
!3025 = !DILocation(line: 2752, column: 6, scope: !2790)
!3026 = !DILocation(line: 0, scope: !2799)
!3027 = !DILocation(line: 2764, column: 27, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 2764, column: 10)
!3029 = !DILocation(line: 2764, column: 10, scope: !2799)
!3030 = !DILocation(line: 2765, column: 15, scope: !3028)
!3031 = !DILocation(line: 2765, column: 8, scope: !3028)
!3032 = !DILocation(line: 2767, column: 6, scope: !2799)
!3033 = !DILocation(line: 2768, column: 6, scope: !2799)
!3034 = !DILocation(line: 2769, column: 6, scope: !2799)
!3035 = !DILocation(line: 2770, column: 6, scope: !2799)
!3036 = !DILocation(line: 2771, column: 6, scope: !2799)
!3037 = !DILocation(line: 2773, column: 4, scope: !2799)
!3038 = !DILocation(line: 2779, column: 7, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 2779, column: 6)
!3040 = !DILocation(line: 2779, column: 18, scope: !3039)
!3041 = !DILocation(line: 2779, column: 21, scope: !3039)
!3042 = !DILocation(line: 2779, column: 38, scope: !3039)
!3043 = !DILocation(line: 2779, column: 6, scope: !2790)
!3044 = !DILocation(line: 2781, column: 6, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 2780, column: 4)
!3046 = !DILocation(line: 2784, column: 6, scope: !3045)
!3047 = !DILocation(line: 2785, column: 6, scope: !3045)
!3048 = !DILocation(line: 2786, column: 6, scope: !3045)
!3049 = !DILocation(line: 2787, column: 4, scope: !3045)
!3050 = !DILocation(line: 2790, column: 26, scope: !2790)
!3051 = !DILocation(line: 2795, column: 11, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2795, column: 11)
!3053 = !DILocation(line: 2795, column: 11, scope: !2791)
!3054 = !DILocation(line: 2796, column: 9, scope: !3052)
!3055 = !DILocation(line: 0, scope: !2791)
!3056 = !DILocation(line: 2801, column: 7, scope: !2791)
!3057 = !DILocation(line: 2796, column: 2, scope: !3052)
!3058 = !DILocation(line: 2809, column: 11, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2809, column: 11)
!3060 = !DILocation(line: 2809, column: 11, scope: !2791)
!3061 = !DILocation(line: 2816, column: 11, scope: !2805)
!3062 = !DILocation(line: 2816, column: 30, scope: !2805)
!3063 = !DILocation(line: 2816, column: 33, scope: !2805)
!3064 = !DILocation(line: 2817, column: 4, scope: !2805)
!3065 = !DILocation(line: 2817, column: 7, scope: !2805)
!3066 = !DILocation(line: 2817, column: 27, scope: !2805)
!3067 = !DILocation(line: 2818, column: 4, scope: !2805)
!3068 = !DILocation(line: 2818, column: 7, scope: !2805)
!3069 = !DILocation(line: 2819, column: 4, scope: !2805)
!3070 = !DILocation(line: 2819, column: 9, scope: !2805)
!3071 = !DILocation(line: 2820, column: 4, scope: !2805)
!3072 = !DILocation(line: 2820, column: 8, scope: !2805)
!3073 = !DILocation(line: 2820, column: 28, scope: !2805)
!3074 = !DILocation(line: 2821, column: 8, scope: !2805)
!3075 = !DILocation(line: 2821, column: 11, scope: !2805)
!3076 = !DILocation(line: 2821, column: 43, scope: !2805)
!3077 = !DILocation(line: 2822, column: 8, scope: !2805)
!3078 = !DILocation(line: 2822, column: 43, scope: !2805)
!3079 = !DILocation(line: 2823, column: 4, scope: !2805)
!3080 = !DILocation(line: 2823, column: 26, scope: !2805)
!3081 = !DILocation(line: 2816, column: 11, scope: !2791)
!3082 = !DILocation(line: 2827, column: 8, scope: !2803)
!3083 = !DILocation(line: 2827, column: 37, scope: !2803)
!3084 = !DILocation(line: 2828, column: 8, scope: !2803)
!3085 = !DILocation(line: 2828, column: 40, scope: !2803)
!3086 = !DILocation(line: 2827, column: 8, scope: !2804)
!3087 = !DILocation(line: 2830, column: 29, scope: !2802)
!3088 = !DILocation(line: 0, scope: !2802)
!3089 = !DILocation(line: 2832, column: 8, scope: !2802)
!3090 = !DILocation(line: 2833, column: 8, scope: !2802)
!3091 = !DILocation(line: 2834, column: 8, scope: !2802)
!3092 = !DILocation(line: 2835, column: 8, scope: !2802)
!3093 = !DILocation(line: 2836, column: 8, scope: !2802)
!3094 = !DILocation(line: 2837, column: 8, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 2837, column: 8)
!3096 = !DILocation(line: 2837, column: 8, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 2837, column: 8)
!3098 = !DILocation(line: 2845, column: 18, scope: !2791)
!3099 = !DILocation(line: 2846, column: 12, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2846, column: 11)
!3101 = !DILocation(line: 2846, column: 11, scope: !2791)
!3102 = !DILocation(line: 2847, column: 2, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 2847, column: 2)
!3104 = !DILocation(line: 2849, column: 18, scope: !2791)
!3105 = !DILocation(line: 2855, column: 16, scope: !2791)
!3106 = !DILocation(line: 2856, column: 7, scope: !2791)
!3107 = !DILocation(line: 2861, column: 3, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 2861, column: 3)
!3109 = !DILocation(line: 2861, column: 3, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 2861, column: 3)
!3111 = !DILocation(line: 2863, column: 1, scope: !2776)
!3112 = distinct !DISubprogram(name: "emit_pending_bincls_if_required", scope: !3, file: !3, line: 1125, type: !1759, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!3113 = !DILocation(line: 1127, column: 7, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1127, column: 7)
!3115 = !DILocation(line: 1127, column: 7, scope: !3112)
!3116 = !DILocation(line: 1128, column: 5, scope: !3114)
!3117 = !DILocation(line: 1129, column: 1, scope: !3112)
!3118 = distinct !DISubprogram(name: "output_used_types", scope: !3, file: !3, line: 2486, type: !1759, scopeLine: 2487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3119)
!3119 = !{!3120, !3123, !3124}
!3120 = !DILocalVariable(name: "types", scope: !3121, file: !3, line: 2490, type: !1638)
!3121 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 2489, column: 5)
!3122 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 2488, column: 7)
!3123 = !DILocalVariable(name: "i", scope: !3121, file: !3, line: 2491, type: !543)
!3124 = !DILocalVariable(name: "type", scope: !3121, file: !3, line: 2492, type: !550)
!3125 = !DILocation(line: 2488, column: 7, scope: !3122)
!3126 = !DILocation(line: 2488, column: 12, scope: !3122)
!3127 = !DILocation(line: 2488, column: 21, scope: !3122)
!3128 = !DILocation(line: 2488, column: 15, scope: !3122)
!3129 = !DILocation(line: 2488, column: 7, scope: !3118)
!3130 = !DILocation(line: 2490, column: 7, scope: !3121)
!3131 = !DILocation(line: 2492, column: 7, scope: !3121)
!3132 = !DILocation(line: 2494, column: 15, scope: !3121)
!3133 = !DILocation(line: 0, scope: !3121)
!3134 = !DILocation(line: 2494, column: 13, scope: !3121)
!3135 = !DILocation(line: 2495, column: 22, scope: !3121)
!3136 = !DILocation(line: 2495, column: 28, scope: !3121)
!3137 = !DILocation(line: 2495, column: 7, scope: !3121)
!3138 = !DILocation(line: 2499, column: 19, scope: !3121)
!3139 = !DILocation(line: 2499, column: 46, scope: !3121)
!3140 = !DILocation(line: 2499, column: 7, scope: !3121)
!3141 = !DILocation(line: 2506, column: 12, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 2506, column: 7)
!3143 = !DILocation(line: 0, scope: !3142)
!3144 = !DILocation(line: 2506, column: 19, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 2506, column: 7)
!3146 = !DILocation(line: 2506, column: 7, scope: !3142)
!3147 = !DILocation(line: 2507, column: 22, scope: !3145)
!3148 = !DILocation(line: 2507, column: 2, scope: !3145)
!3149 = !DILocation(line: 2506, column: 56, scope: !3145)
!3150 = !DILocation(line: 2506, column: 7, scope: !3145)
!3151 = distinct !{!3151, !3146, !3152}
!3152 = !DILocation(line: 2507, column: 26, scope: !3142)
!3153 = !DILocation(line: 2509, column: 7, scope: !3121)
!3154 = !DILocation(line: 2510, column: 5, scope: !3122)
!3155 = !DILocation(line: 2510, column: 5, scope: !3121)
!3156 = !DILocation(line: 2511, column: 1, scope: !3118)
!3157 = distinct !DISubprogram(name: "dbxout_begin_complex_stabs", scope: !3, file: !3, line: 622, type: !1759, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!3158 = !DILocation(line: 624, column: 3, scope: !3157)
!3159 = !DILocation(line: 626, column: 24, scope: !3157)
!3160 = !DILocation(line: 626, column: 3, scope: !3157)
!3161 = !DILocation(line: 627, column: 14, scope: !3157)
!3162 = !DILocation(line: 627, column: 3, scope: !3157)
!3163 = !DILocation(line: 629, column: 1, scope: !3157)
!3164 = !DILocation(line: 0, scope: !1714)
!3165 = !DILocation(line: 1675, column: 3, scope: !1714)
!3166 = !DILocation(line: 1677, column: 7, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1677, column: 7)
!3168 = !DILocation(line: 1677, column: 24, scope: !3167)
!3169 = !DILocation(line: 1677, column: 7, scope: !1714)
!3170 = !DILocation(line: 1681, column: 14, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 1678, column: 5)
!3172 = !DILocation(line: 0, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1685, column: 7)
!3174 = !DILocation(line: 1685, column: 7, scope: !3173)
!3175 = !DILocation(line: 1683, column: 5, scope: !3171)
!3176 = !DILocation(line: 1685, column: 24, scope: !3173)
!3177 = !DILocation(line: 1685, column: 7, scope: !1714)
!3178 = !DILocation(line: 1687, column: 11, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !3, line: 1687, column: 11)
!3180 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 1686, column: 5)
!3181 = !DILocation(line: 1687, column: 28, scope: !3179)
!3182 = !DILocation(line: 1687, column: 11, scope: !3180)
!3183 = !DILocation(line: 1689, column: 10, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 1688, column: 2)
!3185 = !DILocation(line: 1689, column: 8, scope: !3184)
!3186 = !DILocation(line: 1690, column: 11, scope: !3184)
!3187 = !DILocation(line: 1690, column: 9, scope: !3184)
!3188 = !DILocation(line: 1691, column: 2, scope: !3184)
!3189 = !DILocation(line: 1693, column: 16, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 1693, column: 16)
!3191 = !DILocation(line: 1693, column: 16, scope: !3179)
!3192 = !DILocation(line: 1700, column: 11, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 1699, column: 2)
!3194 = !DILocation(line: 1701, column: 10, scope: !3193)
!3195 = !DILocation(line: 1701, column: 8, scope: !3193)
!3196 = !DILocation(line: 1702, column: 11, scope: !3193)
!3197 = !DILocation(line: 1702, column: 9, scope: !3193)
!3198 = !DILocation(line: 1681, column: 12, scope: !3171)
!3199 = !DILocation(line: 1709, column: 15, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1709, column: 7)
!3201 = !DILocation(line: 1709, column: 12, scope: !3200)
!3202 = !DILocation(line: 1709, column: 7, scope: !1714)
!3203 = !DILocation(line: 1710, column: 12, scope: !3200)
!3204 = !DILocation(line: 0, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1720, column: 7)
!3206 = !DILocation(line: 1720, column: 7, scope: !3205)
!3207 = !DILocation(line: 1710, column: 5, scope: !3200)
!3208 = !DILocation(line: 1713, column: 11, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 1713, column: 11)
!3210 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 1712, column: 5)
!3211 = !DILocation(line: 1714, column: 4, scope: !3209)
!3212 = !DILocation(line: 1714, column: 7, scope: !3209)
!3213 = !DILocation(line: 1714, column: 36, scope: !3209)
!3214 = !DILocation(line: 1715, column: 4, scope: !3209)
!3215 = !DILocation(line: 1715, column: 7, scope: !3209)
!3216 = !DILocation(line: 1713, column: 11, scope: !3210)
!3217 = !DILocation(line: 1720, column: 24, scope: !3205)
!3218 = !DILocation(line: 1720, column: 27, scope: !3205)
!3219 = !DILocation(line: 1720, column: 56, scope: !3205)
!3220 = !DILocation(line: 1721, column: 7, scope: !3205)
!3221 = !DILocation(line: 1721, column: 10, scope: !3205)
!3222 = !DILocation(line: 1720, column: 7, scope: !1714)
!3223 = !DILocation(line: 1722, column: 20, scope: !3205)
!3224 = !DILocation(line: 1722, column: 5, scope: !3205)
!3225 = !DILocation(line: 1724, column: 20, scope: !3205)
!3226 = !DILocation(line: 1728, column: 8, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1728, column: 7)
!3228 = !DILocation(line: 1728, column: 7, scope: !1714)
!3229 = !DILocation(line: 1731, column: 7, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1731, column: 7)
!3231 = !DILocation(line: 1731, column: 34, scope: !3230)
!3232 = !DILocation(line: 1731, column: 7, scope: !1714)
!3233 = !DILocation(line: 1734, column: 52, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 1732, column: 5)
!3235 = !DILocation(line: 1734, column: 34, scope: !3234)
!3236 = !DILocation(line: 1738, column: 31, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 1738, column: 11)
!3238 = !DILocation(line: 1738, column: 28, scope: !3237)
!3239 = !DILocation(line: 1738, column: 11, scope: !3234)
!3240 = !DILocation(line: 1740, column: 14, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1739, column: 2)
!3242 = !DILocation(line: 1740, column: 12, scope: !3241)
!3243 = !DILocation(line: 1741, column: 12, scope: !3241)
!3244 = !DILocation(line: 1741, column: 22, scope: !3241)
!3245 = !DILocation(line: 1741, column: 20, scope: !3241)
!3246 = !DILocation(line: 1741, column: 50, scope: !3241)
!3247 = !DILocation(line: 1741, column: 4, scope: !3241)
!3248 = !DILocation(line: 1742, column: 16, scope: !3241)
!3249 = !DILocation(line: 1743, column: 2, scope: !3241)
!3250 = !DILocation(line: 1746, column: 7, scope: !3234)
!3251 = !DILocation(line: 1748, column: 4, scope: !3234)
!3252 = !DILocation(line: 1748, column: 18, scope: !3234)
!3253 = !DILocation(line: 1747, column: 7, scope: !3234)
!3254 = !DILocation(line: 1747, column: 15, scope: !3234)
!3255 = !DILocation(line: 1747, column: 43, scope: !3234)
!3256 = !DILocation(line: 1748, column: 2, scope: !3234)
!3257 = !DILocation(line: 1750, column: 4, scope: !3234)
!3258 = !DILocation(line: 1750, column: 18, scope: !3234)
!3259 = !DILocation(line: 1750, column: 34, scope: !3234)
!3260 = !DILocation(line: 1749, column: 7, scope: !3234)
!3261 = !DILocation(line: 1749, column: 15, scope: !3234)
!3262 = !DILocation(line: 1749, column: 43, scope: !3234)
!3263 = !DILocation(line: 1750, column: 2, scope: !3234)
!3264 = !DILocation(line: 1752, column: 5, scope: !3234)
!3265 = !DILocation(line: 1754, column: 7, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1754, column: 7)
!3267 = !DILocation(line: 1754, column: 7, scope: !1714)
!3268 = !DILocation(line: 1756, column: 12, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 1756, column: 11)
!3270 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 1755, column: 5)
!3271 = !DILocation(line: 1756, column: 29, scope: !3269)
!3272 = !DILocation(line: 1757, column: 5, scope: !3269)
!3273 = !DILocation(line: 1757, column: 25, scope: !3269)
!3274 = !DILocation(line: 1758, column: 5, scope: !3269)
!3275 = !DILocation(line: 1758, column: 25, scope: !3269)
!3276 = !DILocation(line: 1759, column: 5, scope: !3269)
!3277 = !DILocation(line: 1759, column: 25, scope: !3269)
!3278 = !DILocation(line: 1760, column: 4, scope: !3269)
!3279 = !DILocation(line: 1760, column: 7, scope: !3269)
!3280 = !DILocation(line: 1761, column: 4, scope: !3269)
!3281 = !DILocation(line: 1761, column: 7, scope: !3269)
!3282 = !DILocation(line: 1762, column: 4, scope: !3269)
!3283 = !DILocation(line: 1762, column: 9, scope: !3269)
!3284 = !DILocation(line: 1756, column: 11, scope: !3270)
!3285 = !DILocation(line: 1763, column: 2, scope: !3269)
!3286 = !DILocation(line: 1764, column: 16, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 1764, column: 16)
!3288 = !DILocation(line: 1765, column: 9, scope: !3287)
!3289 = !DILocation(line: 1765, column: 12, scope: !3287)
!3290 = !DILocation(line: 1765, column: 41, scope: !3287)
!3291 = !DILocation(line: 1764, column: 16, scope: !3269)
!3292 = !DILocation(line: 1766, column: 2, scope: !3287)
!3293 = !DILocation(line: 1770, column: 3, scope: !1714)
!3294 = !DILocation(line: 1780, column: 11, scope: !1714)
!3295 = !DILocation(line: 1780, column: 19, scope: !1714)
!3296 = !DILocation(line: 1780, column: 47, scope: !1714)
!3297 = !DILocation(line: 1780, column: 3, scope: !1714)
!3298 = !DILocation(line: 1789, column: 13, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 1789, column: 11)
!3300 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1781, column: 5)
!3301 = !DILocation(line: 1789, column: 18, scope: !3299)
!3302 = !DILocation(line: 1789, column: 22, scope: !3299)
!3303 = !DILocation(line: 1791, column: 4, scope: !3299)
!3304 = !DILocation(line: 1791, column: 9, scope: !3299)
!3305 = !DILocation(line: 1789, column: 11, scope: !3300)
!3306 = !DILocation(line: 1824, column: 3, scope: !1714)
!3307 = !DILocation(line: 1829, column: 3, scope: !1714)
!3308 = !DILocation(line: 1829, column: 11, scope: !1714)
!3309 = !DILocation(line: 1829, column: 39, scope: !1714)
!3310 = !DILocation(line: 1829, column: 46, scope: !1714)
!3311 = !DILocation(line: 1834, column: 7, scope: !1731)
!3312 = !DILocation(line: 1834, column: 30, scope: !1731)
!3313 = !DILocation(line: 1834, column: 28, scope: !1731)
!3314 = !DILocation(line: 1834, column: 7, scope: !1714)
!3315 = !DILocation(line: 1836, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !1731, file: !3, line: 1835, column: 5)
!3317 = !DILocation(line: 1837, column: 20, scope: !3316)
!3318 = !DILocation(line: 1837, column: 7, scope: !3316)
!3319 = !DILocation(line: 1838, column: 7, scope: !3316)
!3320 = !DILocation(line: 1840, column: 12, scope: !1730)
!3321 = !DILocation(line: 1840, column: 35, scope: !1730)
!3322 = !DILocation(line: 1840, column: 33, scope: !1730)
!3323 = !DILocation(line: 1840, column: 12, scope: !1731)
!3324 = !DILocation(line: 1842, column: 7, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !1730, file: !3, line: 1841, column: 5)
!3326 = !DILocation(line: 1843, column: 20, scope: !3325)
!3327 = !DILocation(line: 1843, column: 7, scope: !3325)
!3328 = !DILocation(line: 1844, column: 7, scope: !3325)
!3329 = !DILocation(line: 1846, column: 28, scope: !1729)
!3330 = !DILocation(line: 1846, column: 25, scope: !1729)
!3331 = !DILocation(line: 1846, column: 12, scope: !1730)
!3332 = !DILocation(line: 1848, column: 11, scope: !1727)
!3333 = !DILocation(line: 1848, column: 11, scope: !1728)
!3334 = !DILocation(line: 1850, column: 28, scope: !1726)
!3335 = !DILocation(line: 0, scope: !1726)
!3336 = !DILocation(line: 1852, column: 16, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !1726, file: !3, line: 1852, column: 15)
!3338 = !DILocation(line: 1852, column: 38, scope: !3337)
!3339 = !DILocation(line: 1853, column: 16, scope: !3337)
!3340 = !DILocation(line: 1853, column: 41, scope: !3337)
!3341 = !DILocation(line: 1854, column: 16, scope: !3337)
!3342 = !DILocation(line: 1854, column: 41, scope: !3337)
!3343 = !DILocation(line: 1855, column: 16, scope: !3337)
!3344 = !DILocation(line: 1855, column: 41, scope: !3337)
!3345 = !DILocation(line: 1856, column: 15, scope: !3337)
!3346 = !DILocation(line: 1856, column: 18, scope: !3337)
!3347 = !DILocation(line: 1857, column: 15, scope: !3337)
!3348 = !DILocation(line: 1857, column: 20, scope: !3337)
!3349 = !DILocation(line: 1852, column: 15, scope: !1726)
!3350 = !DILocation(line: 1858, column: 13, scope: !3337)
!3351 = !DILocation(line: 1861, column: 20, scope: !1728)
!3352 = !DILocation(line: 1861, column: 7, scope: !1728)
!3353 = !DILocation(line: 1862, column: 7, scope: !1728)
!3354 = !DILocation(line: 1866, column: 11, scope: !1714)
!3355 = !DILocation(line: 1866, column: 3, scope: !1714)
!3356 = !DILocation(line: 1875, column: 7, scope: !1734)
!3357 = !DILocation(line: 1876, column: 7, scope: !1734)
!3358 = !DILocation(line: 1879, column: 19, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 1879, column: 11)
!3360 = !DILocation(line: 1879, column: 16, scope: !3359)
!3361 = !DILocation(line: 1879, column: 34, scope: !3359)
!3362 = !DILocation(line: 1879, column: 39, scope: !3359)
!3363 = !DILocation(line: 1879, column: 11, scope: !1734)
!3364 = !DILocation(line: 1886, column: 4, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 1880, column: 2)
!3366 = !DILocation(line: 1887, column: 4, scope: !3365)
!3367 = !DILocation(line: 1888, column: 4, scope: !3365)
!3368 = !DILocation(line: 1889, column: 2, scope: !3365)
!3369 = !DILocation(line: 1893, column: 16, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 1893, column: 16)
!3371 = !DILocation(line: 1893, column: 33, scope: !3370)
!3372 = !DILocation(line: 1894, column: 9, scope: !3370)
!3373 = !DILocation(line: 1894, column: 12, scope: !3370)
!3374 = !DILocation(line: 1894, column: 41, scope: !3370)
!3375 = !DILocation(line: 1893, column: 16, scope: !3359)
!3376 = !DILocation(line: 1899, column: 8, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 1899, column: 8)
!3378 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1895, column: 2)
!3379 = !DILocation(line: 1900, column: 8, scope: !3377)
!3380 = !DILocation(line: 1900, column: 11, scope: !3377)
!3381 = !DILocation(line: 1900, column: 36, scope: !3377)
!3382 = !DILocation(line: 1900, column: 33, scope: !3377)
!3383 = !DILocation(line: 1899, column: 8, scope: !3378)
!3384 = !DILocation(line: 1902, column: 8, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1901, column: 6)
!3386 = !DILocation(line: 1903, column: 19, scope: !3385)
!3387 = !DILocation(line: 1903, column: 8, scope: !3385)
!3388 = !DILocation(line: 1904, column: 8, scope: !3385)
!3389 = !DILocation(line: 1905, column: 6, scope: !3385)
!3390 = !DILocation(line: 1907, column: 29, scope: !3378)
!3391 = !DILocation(line: 1907, column: 34, scope: !3378)
!3392 = !DILocation(line: 1907, column: 4, scope: !3378)
!3393 = !DILocation(line: 1908, column: 2, scope: !3378)
!3394 = !DILocation(line: 1915, column: 8, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1915, column: 8)
!3396 = distinct !DILexicalBlock(scope: !3370, file: !3, line: 1911, column: 2)
!3397 = !DILocation(line: 1916, column: 8, scope: !3395)
!3398 = !DILocation(line: 1916, column: 11, scope: !3395)
!3399 = !DILocation(line: 1916, column: 36, scope: !3395)
!3400 = !DILocation(line: 1916, column: 33, scope: !3395)
!3401 = !DILocation(line: 1915, column: 8, scope: !3396)
!3402 = !DILocation(line: 1918, column: 8, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 1917, column: 6)
!3404 = !DILocation(line: 1919, column: 19, scope: !3403)
!3405 = !DILocation(line: 1919, column: 8, scope: !3403)
!3406 = !DILocation(line: 1920, column: 8, scope: !3403)
!3407 = !DILocation(line: 1921, column: 6, scope: !3403)
!3408 = !DILocation(line: 1923, column: 47, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 1923, column: 8)
!3410 = !DILocation(line: 1923, column: 52, scope: !3409)
!3411 = !DILocation(line: 1923, column: 8, scope: !3409)
!3412 = !DILocation(line: 1923, column: 8, scope: !3396)
!3413 = !DILocation(line: 1925, column: 8, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1924, column: 6)
!3415 = !DILocation(line: 1932, column: 19, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1932, column: 19)
!3417 = !DILocation(line: 1932, column: 36, scope: !3416)
!3418 = !DILocation(line: 1932, column: 19, scope: !3414)
!3419 = !DILocation(line: 1933, column: 17, scope: !3416)
!3420 = !DILocation(line: 1935, column: 17, scope: !3416)
!3421 = !DILocation(line: 1937, column: 8, scope: !3414)
!3422 = !DILocation(line: 1938, column: 19, scope: !3414)
!3423 = !DILocation(line: 1938, column: 8, scope: !3414)
!3424 = !DILocation(line: 1939, column: 8, scope: !3414)
!3425 = !DILocation(line: 1940, column: 19, scope: !3414)
!3426 = !DILocation(line: 1940, column: 8, scope: !3414)
!3427 = !DILocation(line: 1941, column: 8, scope: !3414)
!3428 = !DILocation(line: 1942, column: 6, scope: !3414)
!3429 = !DILocation(line: 1946, column: 31, scope: !3409)
!3430 = !DILocation(line: 1946, column: 36, scope: !3409)
!3431 = !DILocation(line: 1946, column: 6, scope: !3409)
!3432 = !DILocation(line: 1955, column: 7, scope: !1734)
!3433 = !DILocation(line: 1956, column: 26, scope: !1734)
!3434 = !DILocation(line: 1956, column: 7, scope: !1734)
!3435 = !DILocation(line: 1957, column: 7, scope: !1734)
!3436 = !DILocation(line: 1958, column: 18, scope: !1734)
!3437 = !DILocation(line: 1958, column: 7, scope: !1734)
!3438 = !DILocation(line: 1959, column: 7, scope: !1734)
!3439 = !DILocation(line: 1960, column: 7, scope: !1734)
!3440 = !DILocation(line: 1963, column: 11, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 1963, column: 11)
!3442 = !DILocation(line: 1963, column: 11, scope: !1734)
!3443 = !DILocation(line: 1965, column: 4, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 1964, column: 2)
!3445 = !DILocation(line: 1966, column: 31, scope: !3444)
!3446 = !DILocation(line: 1966, column: 29, scope: !3444)
!3447 = !DILocation(line: 1966, column: 4, scope: !3444)
!3448 = !DILocation(line: 1967, column: 4, scope: !3444)
!3449 = !DILocation(line: 1968, column: 2, scope: !3444)
!3450 = !DILocation(line: 1970, column: 2, scope: !3441)
!3451 = !DILocation(line: 1978, column: 11, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 1978, column: 11)
!3453 = !DILocation(line: 1978, column: 40, scope: !3452)
!3454 = !DILocation(line: 1978, column: 11, scope: !1734)
!3455 = !DILocation(line: 1980, column: 4, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 1979, column: 2)
!3457 = !DILocation(line: 1981, column: 38, scope: !3456)
!3458 = !DILocation(line: 1981, column: 19, scope: !3456)
!3459 = !DILocation(line: 1981, column: 17, scope: !3456)
!3460 = !DILocation(line: 1981, column: 4, scope: !3456)
!3461 = !DILocation(line: 1982, column: 4, scope: !3456)
!3462 = !DILocation(line: 1983, column: 2, scope: !3456)
!3463 = !DILocation(line: 1988, column: 4, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 1985, column: 2)
!3465 = !DILocation(line: 1989, column: 15, scope: !3464)
!3466 = !DILocation(line: 1989, column: 4, scope: !3464)
!3467 = !DILocation(line: 1991, column: 4, scope: !3464)
!3468 = !DILocation(line: 1992, column: 17, scope: !3464)
!3469 = !DILocation(line: 1992, column: 4, scope: !3464)
!3470 = !DILocation(line: 1993, column: 4, scope: !3464)
!3471 = !DILocation(line: 1994, column: 15, scope: !3464)
!3472 = !DILocation(line: 1994, column: 4, scope: !3464)
!3473 = !DILocation(line: 1996, column: 4, scope: !3464)
!3474 = !DILocation(line: 1997, column: 17, scope: !3464)
!3475 = !DILocation(line: 1997, column: 4, scope: !3464)
!3476 = !DILocation(line: 1998, column: 4, scope: !3464)
!3477 = !DILocation(line: 1999, column: 15, scope: !3464)
!3478 = !DILocation(line: 1999, column: 4, scope: !3464)
!3479 = !DILocation(line: 2000, column: 4, scope: !3464)
!3480 = !DILocation(line: 2001, column: 15, scope: !3464)
!3481 = !DILocation(line: 2001, column: 4, scope: !3464)
!3482 = !DILocation(line: 2002, column: 4, scope: !3464)
!3483 = !DILocation(line: 2008, column: 11, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2008, column: 11)
!3485 = !DILocation(line: 2008, column: 30, scope: !3484)
!3486 = !DILocation(line: 2017, column: 11, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2017, column: 11)
!3488 = !DILocation(line: 2008, column: 33, scope: !3484)
!3489 = !DILocation(line: 2008, column: 11, scope: !1734)
!3490 = !DILocation(line: 2010, column: 4, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 2009, column: 2)
!3492 = !DILocation(line: 2011, column: 31, scope: !3491)
!3493 = !DILocation(line: 2011, column: 29, scope: !3491)
!3494 = !DILocation(line: 2011, column: 4, scope: !3491)
!3495 = !DILocation(line: 2012, column: 4, scope: !3491)
!3496 = !DILocation(line: 2013, column: 17, scope: !3491)
!3497 = !DILocation(line: 2013, column: 4, scope: !3491)
!3498 = !DILocation(line: 2014, column: 4, scope: !3491)
!3499 = !DILocation(line: 2017, column: 44, scope: !3487)
!3500 = !DILocation(line: 2017, column: 41, scope: !3487)
!3501 = !DILocation(line: 2018, column: 2, scope: !3487)
!3502 = !DILocation(line: 2026, column: 11, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2026, column: 11)
!3504 = !DILocation(line: 2026, column: 35, scope: !3503)
!3505 = !DILocation(line: 2026, column: 38, scope: !3503)
!3506 = !DILocation(line: 2026, column: 11, scope: !1734)
!3507 = !DILocation(line: 2028, column: 4, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 2027, column: 2)
!3509 = !DILocation(line: 2029, column: 2, scope: !3508)
!3510 = !DILocation(line: 2030, column: 13, scope: !1734)
!3511 = !DILocation(line: 2031, column: 15, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2031, column: 11)
!3513 = !DILocation(line: 2031, column: 11, scope: !1734)
!3514 = !DILocation(line: 2033, column: 4, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 2032, column: 2)
!3516 = !DILocation(line: 2034, column: 23, scope: !3515)
!3517 = !DILocation(line: 2034, column: 4, scope: !3515)
!3518 = !DILocation(line: 2035, column: 4, scope: !3515)
!3519 = !DILocation(line: 2036, column: 2, scope: !3515)
!3520 = !DILocation(line: 2039, column: 4, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 2038, column: 2)
!3522 = !DILocation(line: 2040, column: 28, scope: !3521)
!3523 = !DILocation(line: 2040, column: 50, scope: !3521)
!3524 = !DILocation(line: 2040, column: 4, scope: !3521)
!3525 = !DILocation(line: 2043, column: 20, scope: !1734)
!3526 = !DILocation(line: 2043, column: 7, scope: !1734)
!3527 = !DILocation(line: 2044, column: 7, scope: !1734)
!3528 = !DILocation(line: 2050, column: 15, scope: !1733)
!3529 = !DILocation(line: 0, scope: !1733)
!3530 = !DILocation(line: 2054, column: 7, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 2054, column: 6)
!3532 = !DILocation(line: 2054, column: 24, scope: !3531)
!3533 = !DILocation(line: 2055, column: 7, scope: !3531)
!3534 = !DILocation(line: 2055, column: 13, scope: !3531)
!3535 = !DILocation(line: 2055, column: 42, scope: !3531)
!3536 = !DILocation(line: 2056, column: 6, scope: !3531)
!3537 = !DILocation(line: 2056, column: 9, scope: !3531)
!3538 = !DILocation(line: 2057, column: 11, scope: !3531)
!3539 = !DILocation(line: 2057, column: 7, scope: !3531)
!3540 = !DILocation(line: 2058, column: 6, scope: !3531)
!3541 = !DILocation(line: 2058, column: 10, scope: !3531)
!3542 = !DILocation(line: 2060, column: 6, scope: !3531)
!3543 = !DILocation(line: 2060, column: 11, scope: !3531)
!3544 = !DILocation(line: 2054, column: 6, scope: !1733)
!3545 = !DILocation(line: 2069, column: 6, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 2061, column: 4)
!3547 = !DILocation(line: 2070, column: 10, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 2070, column: 10)
!3549 = !DILocation(line: 2070, column: 27, scope: !3548)
!3550 = !DILocation(line: 2073, column: 3, scope: !3548)
!3551 = !DILocation(line: 2073, column: 7, scope: !3548)
!3552 = !DILocation(line: 2073, column: 36, scope: !3548)
!3553 = !DILocation(line: 2074, column: 7, scope: !3548)
!3554 = !DILocation(line: 2074, column: 10, scope: !3548)
!3555 = !DILocation(line: 2070, column: 10, scope: !3546)
!3556 = !DILocation(line: 2075, column: 8, scope: !3548)
!3557 = !DILocation(line: 2078, column: 3, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 2077, column: 8)
!3559 = !DILocation(line: 2079, column: 35, scope: !3558)
!3560 = !DILocation(line: 2079, column: 14, scope: !3558)
!3561 = !DILocation(line: 2079, column: 3, scope: !3558)
!3562 = !DILocation(line: 2082, column: 6, scope: !3546)
!3563 = !DILocation(line: 2083, column: 6, scope: !3546)
!3564 = !DILocation(line: 2083, column: 14, scope: !3546)
!3565 = !DILocation(line: 2083, column: 42, scope: !3546)
!3566 = !DILocation(line: 2083, column: 49, scope: !3546)
!3567 = !DILocation(line: 2084, column: 6, scope: !3546)
!3568 = !DILocation(line: 2088, column: 2, scope: !1733)
!3569 = !DILocation(line: 2089, column: 13, scope: !1733)
!3570 = !DILocation(line: 2089, column: 2, scope: !1733)
!3571 = !DILocation(line: 2091, column: 6, scope: !1737)
!3572 = !DILocation(line: 2091, column: 6, scope: !1733)
!3573 = !DILocation(line: 2094, column: 6, scope: !1736)
!3574 = !DILocation(line: 2095, column: 31, scope: !1736)
!3575 = !DILocation(line: 0, scope: !1736)
!3576 = !DILocation(line: 2097, column: 10, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !1736, file: !3, line: 2097, column: 10)
!3578 = !DILocation(line: 2097, column: 10, scope: !1736)
!3579 = !DILocation(line: 2099, column: 7, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 2099, column: 7)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 2098, column: 8)
!3582 = !DILocation(line: 2099, column: 7, scope: !3581)
!3583 = !DILocation(line: 2101, column: 7, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 2100, column: 5)
!3585 = !DILocation(line: 2102, column: 18, scope: !3584)
!3586 = !DILocation(line: 2102, column: 7, scope: !3584)
!3587 = !DILocation(line: 2103, column: 7, scope: !3584)
!3588 = !DILocation(line: 2104, column: 5, scope: !3584)
!3589 = !DILocation(line: 0, scope: !1742)
!3590 = !DILocation(line: 0, scope: !1741)
!3591 = !DILocation(line: 0, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2112, column: 5)
!3593 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 2111, column: 7)
!3594 = !DILocation(line: 0, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 2117, column: 11)
!3596 = !DILocation(line: 2106, column: 11, scope: !1743)
!3597 = !DILocation(line: 0, scope: !1743)
!3598 = !DILocation(line: 2106, column: 18, scope: !1742)
!3599 = !DILocation(line: 2106, column: 6, scope: !1743)
!3600 = !DILocation(line: 2108, column: 18, scope: !1741)
!3601 = !DILocation(line: 2108, column: 29, scope: !1741)
!3602 = !DILocation(line: 2109, column: 13, scope: !1741)
!3603 = !DILocation(line: 2111, column: 7, scope: !3593)
!3604 = !DILocation(line: 2111, column: 7, scope: !1741)
!3605 = !DILocation(line: 2113, column: 7, scope: !3592)
!3606 = !DILocation(line: 2114, column: 7, scope: !3592)
!3607 = !DILocation(line: 2117, column: 11, scope: !3595)
!3608 = !DILocation(line: 2118, column: 4, scope: !3595)
!3609 = !DILocation(line: 2118, column: 27, scope: !3595)
!3610 = !DILocation(line: 2118, column: 8, scope: !3595)
!3611 = !DILocation(line: 2118, column: 44, scope: !3595)
!3612 = !DILocation(line: 2119, column: 8, scope: !3595)
!3613 = !DILocation(line: 2119, column: 30, scope: !3595)
!3614 = !DILocation(line: 2119, column: 11, scope: !3595)
!3615 = !DILocation(line: 2119, column: 57, scope: !3595)
!3616 = !DILocation(line: 2117, column: 11, scope: !3592)
!3617 = !DILocation(line: 2127, column: 34, scope: !3595)
!3618 = !DILocation(line: 2124, column: 19, scope: !3595)
!3619 = !DILocation(line: 2124, column: 5, scope: !3595)
!3620 = !DILocation(line: 2125, column: 5, scope: !3595)
!3621 = !DILocation(line: 2123, column: 9, scope: !3595)
!3622 = !DILocation(line: 2127, column: 20, scope: !3595)
!3623 = !DILocation(line: 2128, column: 12, scope: !3595)
!3624 = !DILocation(line: 2127, column: 9, scope: !3595)
!3625 = !DILocation(line: 2129, column: 7, scope: !3592)
!3626 = !DILocation(line: 2130, column: 20, scope: !3592)
!3627 = !DILocation(line: 2130, column: 7, scope: !3592)
!3628 = !DILocation(line: 2131, column: 7, scope: !3592)
!3629 = !DILocation(line: 2132, column: 5, scope: !3592)
!3630 = !DILocation(line: 2138, column: 25, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2134, column: 5)
!3632 = !DILocation(line: 2138, column: 7, scope: !3631)
!3633 = !DILocation(line: 2139, column: 7, scope: !3631)
!3634 = !DILocation(line: 2140, column: 20, scope: !3631)
!3635 = !DILocation(line: 2140, column: 7, scope: !3631)
!3636 = !DILocation(line: 2141, column: 7, scope: !3631)
!3637 = !DILocation(line: 2142, column: 32, scope: !3631)
!3638 = !DILocation(line: 2142, column: 18, scope: !3631)
!3639 = !DILocation(line: 2143, column: 10, scope: !3631)
!3640 = !DILocation(line: 2142, column: 7, scope: !3631)
!3641 = !DILocation(line: 2144, column: 7, scope: !3631)
!3642 = !DILocation(line: 2146, column: 24, scope: !3631)
!3643 = !DILocation(line: 2146, column: 10, scope: !3631)
!3644 = !DILocation(line: 2147, column: 10, scope: !3631)
!3645 = !DILocation(line: 2145, column: 7, scope: !3631)
!3646 = !DILocation(line: 2148, column: 7, scope: !3631)
!3647 = !DILocation(line: 2106, column: 57, scope: !1742)
!3648 = !DILocation(line: 2106, column: 6, scope: !1742)
!3649 = distinct !{!3649, !3599, !3650}
!3650 = !DILocation(line: 2150, column: 8, scope: !1743)
!3651 = !DILocation(line: 2151, column: 4, scope: !1737)
!3652 = !DILocation(line: 2151, column: 4, scope: !1736)
!3653 = !DILocation(line: 2155, column: 7, scope: !1734)
!3654 = !DILocation(line: 2156, column: 11, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2156, column: 11)
!3656 = !DILocation(line: 2156, column: 41, scope: !3655)
!3657 = !DILocation(line: 2156, column: 44, scope: !3655)
!3658 = !DILocation(line: 2156, column: 64, scope: !3655)
!3659 = !DILocation(line: 2156, column: 11, scope: !1734)
!3660 = !DILocation(line: 2158, column: 4, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 2157, column: 2)
!3662 = !DILocation(line: 2159, column: 2, scope: !3661)
!3663 = !DILocation(line: 2161, column: 7, scope: !1734)
!3664 = !DILocation(line: 2163, column: 11, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2163, column: 11)
!3666 = !DILocation(line: 2163, column: 41, scope: !3665)
!3667 = !DILocation(line: 2163, column: 44, scope: !3665)
!3668 = !DILocation(line: 2163, column: 61, scope: !3665)
!3669 = !DILocation(line: 2165, column: 4, scope: !3665)
!3670 = !DILocation(line: 2165, column: 7, scope: !3665)
!3671 = !DILocation(line: 2163, column: 11, scope: !1734)
!3672 = !DILocation(line: 2172, column: 4, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 2166, column: 2)
!3674 = !DILocation(line: 2173, column: 17, scope: !3673)
!3675 = !DILocation(line: 2173, column: 4, scope: !3673)
!3676 = !DILocation(line: 2174, column: 4, scope: !3673)
!3677 = !DILocation(line: 2175, column: 2, scope: !3673)
!3678 = !DILocation(line: 2182, column: 12, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2182, column: 11)
!3680 = !DILocation(line: 2182, column: 29, scope: !3679)
!3681 = !DILocation(line: 2183, column: 5, scope: !3679)
!3682 = !DILocation(line: 2183, column: 11, scope: !3679)
!3683 = !DILocation(line: 2183, column: 40, scope: !3679)
!3684 = !DILocation(line: 2184, column: 4, scope: !3679)
!3685 = !DILocation(line: 2184, column: 7, scope: !3679)
!3686 = !DILocation(line: 2185, column: 9, scope: !3679)
!3687 = !DILocation(line: 2185, column: 5, scope: !3679)
!3688 = !DILocation(line: 2186, column: 4, scope: !3679)
!3689 = !DILocation(line: 2186, column: 8, scope: !3679)
!3690 = !DILocation(line: 2182, column: 11, scope: !1734)
!3691 = !DILocation(line: 2188, column: 4, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 2187, column: 2)
!3693 = !DILocation(line: 2189, column: 4, scope: !3692)
!3694 = !DILocation(line: 2190, column: 4, scope: !3692)
!3695 = !DILocation(line: 2190, column: 12, scope: !3692)
!3696 = !DILocation(line: 2190, column: 40, scope: !3692)
!3697 = !DILocation(line: 2190, column: 47, scope: !3692)
!3698 = !DILocation(line: 2191, column: 4, scope: !3692)
!3699 = !DILocation(line: 2192, column: 4, scope: !3692)
!3700 = !DILocation(line: 2194, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2194, column: 11)
!3702 = !DILocation(line: 2195, column: 4, scope: !3701)
!3703 = !DILocation(line: 2195, column: 7, scope: !3701)
!3704 = !DILocation(line: 2195, column: 32, scope: !3701)
!3705 = !DILocation(line: 2195, column: 29, scope: !3701)
!3706 = !DILocation(line: 2194, column: 11, scope: !1734)
!3707 = !DILocation(line: 2197, column: 4, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 2196, column: 2)
!3709 = !DILocation(line: 2198, column: 15, scope: !3708)
!3710 = !DILocation(line: 2198, column: 4, scope: !3708)
!3711 = !DILocation(line: 2199, column: 4, scope: !3708)
!3712 = !DILocation(line: 2200, column: 2, scope: !3708)
!3713 = !DILocation(line: 2202, column: 7, scope: !1734)
!3714 = !DILocation(line: 2203, column: 18, scope: !1747)
!3715 = !DILocation(line: 2203, column: 12, scope: !1747)
!3716 = !DILocation(line: 0, scope: !1747)
!3717 = !DILocation(line: 2203, column: 7, scope: !1747)
!3718 = !DILocation(line: 2205, column: 24, scope: !1745)
!3719 = !DILocation(line: 0, scope: !1745)
!3720 = !DILocation(line: 2207, column: 4, scope: !1745)
!3721 = !DILocation(line: 2208, column: 4, scope: !1745)
!3722 = !DILocation(line: 2210, column: 15, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 2210, column: 15)
!3724 = !DILocation(line: 2210, column: 33, scope: !3723)
!3725 = !DILocation(line: 2210, column: 15, scope: !1745)
!3726 = !DILocation(line: 2211, column: 21, scope: !3723)
!3727 = !DILocation(line: 2211, column: 13, scope: !3723)
!3728 = !DILocation(line: 2213, column: 8, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 2213, column: 8)
!3730 = !DILocation(line: 2213, column: 34, scope: !3729)
!3731 = !DILocation(line: 2213, column: 8, scope: !1745)
!3732 = !DILocation(line: 2214, column: 17, scope: !3729)
!3733 = !DILocation(line: 2214, column: 6, scope: !3729)
!3734 = !DILocation(line: 2215, column: 39, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 2215, column: 13)
!3736 = !DILocation(line: 2216, column: 6, scope: !3735)
!3737 = !DILocation(line: 2216, column: 25, scope: !3735)
!3738 = !DILocation(line: 2216, column: 50, scope: !3735)
!3739 = !DILocation(line: 2215, column: 13, scope: !3729)
!3740 = !DILocation(line: 2217, column: 6, scope: !3735)
!3741 = !DILocation(line: 2219, column: 6, scope: !3735)
!3742 = !DILocation(line: 2221, column: 4, scope: !1745)
!3743 = !DILocation(line: 2222, column: 8, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 2222, column: 8)
!3745 = !DILocation(line: 2222, column: 25, scope: !3744)
!3746 = !DILocation(line: 2222, column: 8, scope: !1745)
!3747 = !DILocation(line: 2223, column: 6, scope: !3744)
!3748 = !DILocation(line: 2203, column: 7, scope: !1746)
!3749 = distinct !{!3749, !3717, !3750}
!3750 = !DILocation(line: 2224, column: 2, scope: !1747)
!3751 = !DILocation(line: 2226, column: 7, scope: !1734)
!3752 = !DILocation(line: 2227, column: 7, scope: !1734)
!3753 = !DILocation(line: 2230, column: 7, scope: !1734)
!3754 = !DILocation(line: 2231, column: 20, scope: !1734)
!3755 = !DILocation(line: 2231, column: 7, scope: !1734)
!3756 = !DILocation(line: 2232, column: 7, scope: !1734)
!3757 = !DILocation(line: 2235, column: 11, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2235, column: 11)
!3759 = !DILocation(line: 2235, column: 11, scope: !1734)
!3760 = !DILocation(line: 2237, column: 4, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2236, column: 2)
!3762 = !DILocation(line: 2240, column: 17, scope: !3761)
!3763 = !DILocation(line: 2240, column: 4, scope: !3761)
!3764 = !DILocation(line: 2241, column: 4, scope: !3761)
!3765 = !DILocation(line: 2242, column: 17, scope: !3761)
!3766 = !DILocation(line: 2242, column: 4, scope: !3761)
!3767 = !DILocation(line: 2243, column: 17, scope: !3761)
!3768 = !DILocation(line: 2243, column: 4, scope: !3761)
!3769 = !DILocation(line: 2244, column: 4, scope: !3761)
!3770 = !DILocation(line: 2245, column: 2, scope: !3761)
!3771 = !DILocation(line: 2248, column: 15, scope: !3758)
!3772 = !DILocation(line: 2248, column: 2, scope: !3758)
!3773 = !DILocation(line: 2252, column: 11, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2252, column: 11)
!3775 = !DILocation(line: 2252, column: 11, scope: !1734)
!3776 = !DILocation(line: 2254, column: 4, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 2253, column: 2)
!3778 = !DILocation(line: 2255, column: 17, scope: !3777)
!3779 = !DILocation(line: 2255, column: 4, scope: !3777)
!3780 = !DILocation(line: 2256, column: 4, scope: !3777)
!3781 = !DILocation(line: 2257, column: 17, scope: !3777)
!3782 = !DILocation(line: 2257, column: 4, scope: !3777)
!3783 = !DILocation(line: 2258, column: 2, scope: !3777)
!3784 = !DILocation(line: 2261, column: 15, scope: !3774)
!3785 = !DILocation(line: 2261, column: 2, scope: !3774)
!3786 = !DILocation(line: 2265, column: 11, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 2265, column: 11)
!3788 = !DILocation(line: 0, scope: !3787)
!3789 = !DILocation(line: 2265, column: 11, scope: !1734)
!3790 = !DILocation(line: 2267, column: 4, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 2266, column: 2)
!3792 = !DILocation(line: 2268, column: 2, scope: !3791)
!3793 = !DILocation(line: 2270, column: 2, scope: !3787)
!3794 = !DILocation(line: 2271, column: 20, scope: !1734)
!3795 = !DILocation(line: 2271, column: 7, scope: !1734)
!3796 = !DILocation(line: 2272, column: 7, scope: !1734)
!3797 = !DILocation(line: 2275, column: 7, scope: !1734)
!3798 = !DILocation(line: 2276, column: 20, scope: !1734)
!3799 = !DILocation(line: 2276, column: 7, scope: !1734)
!3800 = !DILocation(line: 2277, column: 7, scope: !1734)
!3801 = !DILocation(line: 2280, column: 7, scope: !1734)
!3802 = !DILocation(line: 2281, column: 5, scope: !1734)
!3803 = !DILocation(line: 2282, column: 1, scope: !1714)
!3804 = distinct !DISubprogram(name: "dbxout_finish_complex_stabs", scope: !3, file: !3, line: 853, type: !3805, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3809)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{null, !550, !3807, !725, !548, !543}
!3807 = !DIDerivedType(tag: DW_TAG_typedef, name: "stab_code_type", file: !3808, line: 31, baseType: !543)
!3808 = !DIFile(filename: "./gstab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3809 = !{!3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818}
!3810 = !DILocalVariable(name: "sym", arg: 1, scope: !3804, file: !3, line: 853, type: !550)
!3811 = !DILocalVariable(name: "code", arg: 2, scope: !3804, file: !3, line: 853, type: !3807)
!3812 = !DILocalVariable(name: "addr", arg: 3, scope: !3804, file: !3, line: 854, type: !725)
!3813 = !DILocalVariable(name: "label", arg: 4, scope: !3804, file: !3, line: 854, type: !548)
!3814 = !DILocalVariable(name: "number", arg: 5, scope: !3804, file: !3, line: 854, type: !543)
!3815 = !DILocalVariable(name: "line", scope: !3804, file: !3, line: 856, type: !543)
!3816 = !DILocalVariable(name: "str", scope: !3804, file: !3, line: 857, type: !545)
!3817 = !DILocalVariable(name: "len", scope: !3804, file: !3, line: 858, type: !1145)
!3818 = !DILocalVariable(name: "line_", scope: !3819, file: !3, line: 907, type: !543)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 907, column: 7)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 898, column: 5)
!3821 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 861, column: 7)
!3822 = !DILocation(line: 0, scope: !3804)
!3823 = !DILocation(line: 860, column: 10, scope: !3804)
!3824 = !DILocation(line: 860, column: 16, scope: !3804)
!3825 = !DILocation(line: 902, column: 7, scope: !3820)
!3826 = !DILocation(line: 903, column: 13, scope: !3820)
!3827 = !DILocation(line: 904, column: 13, scope: !3820)
!3828 = !DILocation(line: 906, column: 28, scope: !3820)
!3829 = !DILocation(line: 906, column: 7, scope: !3820)
!3830 = !DILocation(line: 907, column: 7, scope: !3819)
!3831 = !DILocation(line: 0, scope: !3819)
!3832 = !DILocation(line: 907, column: 7, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 907, column: 7)
!3834 = !DILocation(line: 907, column: 7, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 907, column: 7)
!3836 = !DILocation(line: 909, column: 3, scope: !3804)
!3837 = !DILocation(line: 910, column: 1, scope: !3804)
!3838 = distinct !DISubprogram(name: "dbxout_class_name_qualifiers", scope: !3, file: !3, line: 2343, type: !1792, scopeLine: 2344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3839)
!3839 = !{!3840, !3841, !3842}
!3840 = !DILocalVariable(name: "decl", arg: 1, scope: !3838, file: !3, line: 2343, type: !550)
!3841 = !DILocalVariable(name: "context", scope: !3838, file: !3, line: 2345, type: !550)
!3842 = !DILocalVariable(name: "name", scope: !3843, file: !3, line: 2353, type: !550)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 2352, column: 5)
!3844 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 2347, column: 7)
!3845 = !DILocation(line: 0, scope: !3838)
!3846 = !DILocation(line: 2345, column: 18, scope: !3838)
!3847 = !DILocation(line: 2347, column: 15, scope: !3844)
!3848 = !DILocation(line: 2348, column: 7, scope: !3844)
!3849 = !DILocation(line: 2348, column: 10, scope: !3844)
!3850 = !DILocation(line: 2348, column: 29, scope: !3844)
!3851 = !DILocation(line: 2349, column: 7, scope: !3844)
!3852 = !DILocation(line: 2349, column: 10, scope: !3844)
!3853 = !DILocation(line: 2349, column: 30, scope: !3844)
!3854 = !DILocation(line: 2350, column: 7, scope: !3844)
!3855 = !DILocation(line: 2350, column: 11, scope: !3844)
!3856 = !DILocation(line: 2350, column: 43, scope: !3844)
!3857 = !DILocation(line: 2351, column: 11, scope: !3844)
!3858 = !DILocation(line: 2351, column: 15, scope: !3844)
!3859 = !DILocation(line: 2351, column: 47, scope: !3844)
!3860 = !DILocation(line: 2347, column: 7, scope: !3838)
!3861 = !DILocation(line: 0, scope: !3843)
!3862 = !DILocation(line: 2355, column: 28, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 2355, column: 11)
!3864 = !DILocation(line: 2355, column: 11, scope: !3843)
!3865 = !DILocation(line: 2357, column: 4, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2356, column: 2)
!3867 = !DILocation(line: 2358, column: 11, scope: !3866)
!3868 = !DILocation(line: 2359, column: 2, scope: !3866)
!3869 = !DILocation(line: 2360, column: 7, scope: !3843)
!3870 = !DILocation(line: 2361, column: 7, scope: !3843)
!3871 = !DILocation(line: 2362, column: 5, scope: !3843)
!3872 = !DILocation(line: 2363, column: 1, scope: !3838)
!3873 = distinct !DISubprogram(name: "dbxout_symbol_name", scope: !3, file: !3, line: 3142, type: !3874, scopeLine: 3143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3876)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{null, !550, !548, !543}
!3876 = !{!3877, !3878, !3879, !3880}
!3877 = !DILocalVariable(name: "decl", arg: 1, scope: !3873, file: !3, line: 3142, type: !550)
!3878 = !DILocalVariable(name: "suffix", arg: 2, scope: !3873, file: !3, line: 3142, type: !548)
!3879 = !DILocalVariable(name: "letter", arg: 3, scope: !3873, file: !3, line: 3142, type: !543)
!3880 = !DILocalVariable(name: "name", scope: !3873, file: !3, line: 3144, type: !550)
!3881 = !DILocation(line: 0, scope: !3873)
!3882 = !DILocation(line: 3146, column: 7, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 3146, column: 7)
!3884 = !DILocation(line: 3147, column: 7, scope: !3883)
!3885 = !DILocation(line: 3147, column: 11, scope: !3883)
!3886 = !DILocation(line: 3148, column: 4, scope: !3883)
!3887 = !DILocation(line: 3148, column: 39, scope: !3883)
!3888 = !DILocation(line: 3146, column: 7, scope: !3873)
!3889 = !DILocation(line: 3153, column: 12, scope: !3883)
!3890 = !DILocation(line: 3153, column: 5, scope: !3883)
!3891 = !DILocation(line: 3157, column: 12, scope: !3883)
!3892 = !DILocation(line: 0, scope: !3883)
!3893 = !DILocation(line: 3159, column: 7, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 3159, column: 7)
!3895 = !DILocation(line: 3159, column: 7, scope: !3873)
!3896 = !DILocation(line: 3160, column: 5, scope: !3894)
!3897 = !DILocation(line: 3162, column: 5, scope: !3894)
!3898 = !DILocation(line: 0, scope: !3894)
!3899 = !DILocation(line: 3164, column: 7, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 3164, column: 7)
!3901 = !DILocation(line: 3164, column: 7, scope: !3873)
!3902 = !DILocation(line: 3165, column: 5, scope: !3900)
!3903 = !DILocation(line: 3166, column: 3, scope: !3873)
!3904 = !DILocation(line: 3167, column: 7, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 3167, column: 7)
!3906 = !DILocation(line: 3167, column: 7, scope: !3873)
!3907 = !DILocation(line: 3168, column: 5, scope: !3905)
!3908 = !DILocation(line: 3169, column: 1, scope: !3873)
!3909 = distinct !DISubprogram(name: "stabstr_D", scope: !3, file: !3, line: 654, type: !3910, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3912)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{null, !606}
!3912 = !{!3913, !3914, !3915, !3916, !3917}
!3913 = !DILocalVariable(name: "num", arg: 1, scope: !3909, file: !3, line: 654, type: !606)
!3914 = !DILocalVariable(name: "buf", scope: !3909, file: !3, line: 656, type: !2573)
!3915 = !DILocalVariable(name: "p", scope: !3909, file: !3, line: 657, type: !545)
!3916 = !DILocalVariable(name: "unum", scope: !3909, file: !3, line: 658, type: !7)
!3917 = !DILocalVariable(name: "digit", scope: !3918, file: !3, line: 673, type: !543)
!3918 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 673, column: 3)
!3919 = !DILocation(line: 0, scope: !3909)
!3920 = !DILocation(line: 656, column: 3, scope: !3909)
!3921 = !DILocation(line: 656, column: 8, scope: !3909)
!3922 = !DILocation(line: 657, column: 17, scope: !3909)
!3923 = !DILocation(line: 660, column: 11, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 660, column: 7)
!3925 = !DILocation(line: 660, column: 7, scope: !3909)
!3926 = !DILocation(line: 662, column: 7, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 661, column: 5)
!3928 = !DILocation(line: 663, column: 7, scope: !3927)
!3929 = !DILocation(line: 665, column: 11, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 665, column: 7)
!3931 = !DILocation(line: 665, column: 7, scope: !3909)
!3932 = !DILocation(line: 667, column: 7, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 666, column: 5)
!3934 = !DILocation(line: 668, column: 14, scope: !3933)
!3935 = !DILocation(line: 669, column: 5, scope: !3933)
!3936 = !DILocation(line: 0, scope: !3930)
!3937 = !DILocation(line: 673, column: 3, scope: !3909)
!3938 = !DILocation(line: 673, column: 3, scope: !3918)
!3939 = !DILocation(line: 0, scope: !3918)
!3940 = distinct !{!3940, !3937, !3937}
!3941 = !DILocation(line: 675, column: 3, scope: !3909)
!3942 = !DILocation(line: 676, column: 1, scope: !3909)
!3943 = distinct !DISubprogram(name: "dbxout_expand_expr", scope: !3, file: !3, line: 2371, type: !3944, scopeLine: 2372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3946)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!725, !550}
!3946 = !{!3947, !3948, !3951, !3952, !3953, !3954, !3955, !3956, !3957}
!3947 = !DILocalVariable(name: "expr", arg: 1, scope: !3943, file: !3, line: 2371, type: !550)
!3948 = !DILocalVariable(name: "mode", scope: !3949, file: !3, line: 2402, type: !5)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 2401, column: 7)
!3950 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 2374, column: 5)
!3951 = !DILocalVariable(name: "bitsize", scope: !3949, file: !3, line: 2403, type: !606)
!3952 = !DILocalVariable(name: "bitpos", scope: !3949, file: !3, line: 2403, type: !606)
!3953 = !DILocalVariable(name: "offset", scope: !3949, file: !3, line: 2404, type: !550)
!3954 = !DILocalVariable(name: "tem", scope: !3949, file: !3, line: 2404, type: !550)
!3955 = !DILocalVariable(name: "volatilep", scope: !3949, file: !3, line: 2405, type: !543)
!3956 = !DILocalVariable(name: "unsignedp", scope: !3949, file: !3, line: 2405, type: !543)
!3957 = !DILocalVariable(name: "x", scope: !3949, file: !3, line: 2406, type: !725)
!3958 = !DILocation(line: 0, scope: !3943)
!3959 = !DILocation(line: 2373, column: 11, scope: !3943)
!3960 = !DILocation(line: 2373, column: 3, scope: !3943)
!3961 = !DILocation(line: 2381, column: 20, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 2381, column: 11)
!3963 = !DILocation(line: 2381, column: 12, scope: !3962)
!3964 = !DILocation(line: 2381, column: 29, scope: !3962)
!3965 = !DILocation(line: 2381, column: 32, scope: !3962)
!3966 = !DILocation(line: 2381, column: 11, scope: !3950)
!3967 = !DILocation(line: 2386, column: 11, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 2386, column: 11)
!3969 = !DILocation(line: 2386, column: 11, scope: !3950)
!3970 = !DILocation(line: 2387, column: 29, scope: !3968)
!3971 = !DILocation(line: 2387, column: 9, scope: !3968)
!3972 = !DILocation(line: 2387, column: 2, scope: !3968)
!3973 = !DILocation(line: 2392, column: 14, scope: !3950)
!3974 = !DILocation(line: 2395, column: 14, scope: !3950)
!3975 = !DILocation(line: 2395, column: 7, scope: !3950)
!3976 = !DILocation(line: 2402, column: 2, scope: !3949)
!3977 = !DILocation(line: 2403, column: 2, scope: !3949)
!3978 = !DILocation(line: 2404, column: 2, scope: !3949)
!3979 = !DILocation(line: 2405, column: 2, scope: !3949)
!3980 = !DILocation(line: 0, scope: !3949)
!3981 = !DILocation(line: 2405, column: 6, scope: !3949)
!3982 = !DILocation(line: 2405, column: 21, scope: !3949)
!3983 = !DILocation(line: 2408, column: 8, scope: !3949)
!3984 = !DILocation(line: 2411, column: 6, scope: !3949)
!3985 = !DILocation(line: 2412, column: 8, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 2412, column: 6)
!3987 = !DILocation(line: 2412, column: 16, scope: !3986)
!3988 = !DILocation(line: 2412, column: 20, scope: !3986)
!3989 = !DILocation(line: 2412, column: 6, scope: !3949)
!3990 = !DILocation(line: 2414, column: 6, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 2414, column: 6)
!3992 = !DILocation(line: 2414, column: 13, scope: !3991)
!3993 = !DILocation(line: 2414, column: 6, scope: !3949)
!3994 = !DILocation(line: 2416, column: 11, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 2416, column: 10)
!3996 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 2415, column: 4)
!3997 = !DILocation(line: 2416, column: 10, scope: !3996)
!3998 = !DILocation(line: 2418, column: 10, scope: !3996)
!3999 = !DILocation(line: 2419, column: 4, scope: !3996)
!4000 = !DILocation(line: 2420, column: 6, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 2420, column: 6)
!4002 = !DILocation(line: 2420, column: 13, scope: !4001)
!4003 = !DILocation(line: 2420, column: 6, scope: !3949)
!4004 = !DILocation(line: 2421, column: 8, scope: !4001)
!4005 = !DILocation(line: 2421, column: 4, scope: !4001)
!4006 = !DILocation(line: 2424, column: 7, scope: !3950)
!4007 = !DILocation(line: 0, scope: !3950)
!4008 = !DILocation(line: 2429, column: 1, scope: !3943)
!4009 = distinct !DISubprogram(name: "dbxout_symbol_location", scope: !3, file: !3, line: 2872, type: !4010, scopeLine: 2873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4012)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!543, !550, !550, !548, !725}
!4012 = !{!4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4025, !4030, !4034, !4035, !4038, !4045}
!4013 = !DILocalVariable(name: "decl", arg: 1, scope: !4009, file: !3, line: 2872, type: !550)
!4014 = !DILocalVariable(name: "type", arg: 2, scope: !4009, file: !3, line: 2872, type: !550)
!4015 = !DILocalVariable(name: "suffix", arg: 3, scope: !4009, file: !3, line: 2872, type: !548)
!4016 = !DILocalVariable(name: "home", arg: 4, scope: !4009, file: !3, line: 2872, type: !725)
!4017 = !DILocalVariable(name: "letter", scope: !4009, file: !3, line: 2874, type: !543)
!4018 = !DILocalVariable(name: "code", scope: !4009, file: !3, line: 2875, type: !3807)
!4019 = !DILocalVariable(name: "addr", scope: !4009, file: !3, line: 2876, type: !725)
!4020 = !DILocalVariable(name: "number", scope: !4009, file: !3, line: 2877, type: !543)
!4021 = !DILocalVariable(name: "regno", scope: !4009, file: !3, line: 2878, type: !543)
!4022 = !DILocalVariable(name: "value", scope: !4023, file: !3, line: 2888, type: !725)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 2887, column: 5)
!4024 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 2886, column: 7)
!4025 = !DILocalVariable(name: "offs", scope: !4026, file: !3, line: 2923, type: !543)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 2922, column: 2)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 2921, column: 11)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 2920, column: 5)
!4029 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 2919, column: 7)
!4030 = !DILocalVariable(name: "marked", scope: !4031, file: !3, line: 2947, type: !542)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 2946, column: 6)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 2944, column: 8)
!4033 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 2934, column: 2)
!4034 = !DILocalVariable(name: "tmp", scope: !4031, file: !3, line: 2948, type: !725)
!4035 = !DILocalVariable(name: "offs", scope: !4036, file: !3, line: 2978, type: !543)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 2977, column: 6)
!4037 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 2974, column: 8)
!4038 = !DILocalVariable(name: "offs", scope: !4039, file: !3, line: 3076, type: !543)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 3064, column: 5)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 3062, column: 12)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 3053, column: 12)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 3047, column: 12)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 3008, column: 12)
!4044 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 3002, column: 12)
!4045 = !DILocalVariable(name: "subtype", scope: !4046, file: !3, line: 3090, type: !550)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 3089, column: 5)
!4047 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 3088, column: 12)
!4048 = !DILocation(line: 0, scope: !4009)
!4049 = !DILocation(line: 2886, column: 7, scope: !4024)
!4050 = !DILocation(line: 2886, column: 23, scope: !4024)
!4051 = !DILocation(line: 2886, column: 7, scope: !4009)
!4052 = !DILocation(line: 2890, column: 7, scope: !4023)
!4053 = !DILocation(line: 2890, column: 14, scope: !4023)
!4054 = !DILocation(line: 0, scope: !4023)
!4055 = !DILocation(line: 2890, column: 31, scope: !4023)
!4056 = !DILocation(line: 2891, column: 10, scope: !4023)
!4057 = distinct !{!4057, !4052, !4056}
!4058 = !DILocation(line: 2892, column: 11, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 2892, column: 11)
!4060 = !DILocation(line: 2892, column: 11, scope: !4023)
!4061 = !DILocation(line: 2894, column: 8, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 2894, column: 8)
!4063 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 2893, column: 2)
!4064 = !DILocation(line: 2894, column: 22, scope: !4062)
!4065 = !DILocation(line: 2894, column: 8, scope: !4063)
!4066 = !DILocation(line: 2897, column: 14, scope: !4023)
!4067 = !DILocation(line: 2897, column: 12, scope: !4023)
!4068 = !DILocation(line: 2898, column: 5, scope: !4024)
!4069 = !DILocation(line: 2899, column: 7, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 2899, column: 7)
!4071 = !DILocation(line: 2899, column: 7, scope: !4009)
!4072 = !DILocation(line: 2901, column: 15, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4070, file: !3, line: 2900, column: 5)
!4074 = !DILocation(line: 2902, column: 17, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 2902, column: 11)
!4076 = !DILocation(line: 2902, column: 11, scope: !4073)
!4077 = !DILocation(line: 2919, column: 7, scope: !4029)
!4078 = !DILocation(line: 2919, column: 20, scope: !4029)
!4079 = !DILocation(line: 2919, column: 23, scope: !4029)
!4080 = !DILocation(line: 2919, column: 49, scope: !4029)
!4081 = !DILocation(line: 2919, column: 7, scope: !4009)
!4082 = !DILocation(line: 2921, column: 11, scope: !4027)
!4083 = !DILocation(line: 2921, column: 11, scope: !4028)
!4084 = !DILocation(line: 2923, column: 4, scope: !4026)
!4085 = !DILocation(line: 0, scope: !4026)
!4086 = !DILocation(line: 2926, column: 16, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 2926, column: 8)
!4088 = !DILocation(line: 2926, column: 13, scope: !4087)
!4089 = !DILocation(line: 2930, column: 17, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 2927, column: 6)
!4091 = !DILocation(line: 2926, column: 8, scope: !4026)
!4092 = !DILocation(line: 2932, column: 2, scope: !4027)
!4093 = !DILocation(line: 2932, column: 2, scope: !4026)
!4094 = !DILocation(line: 2935, column: 11, scope: !4033)
!4095 = !DILocation(line: 2937, column: 13, scope: !4033)
!4096 = !DILocation(line: 2944, column: 8, scope: !4032)
!4097 = !DILocation(line: 2944, column: 24, scope: !4032)
!4098 = !DILocation(line: 2945, column: 8, scope: !4032)
!4099 = !DILocation(line: 2945, column: 11, scope: !4032)
!4100 = !DILocation(line: 2944, column: 8, scope: !4033)
!4101 = !DILocation(line: 0, scope: !4031)
!4102 = !DILocation(line: 2947, column: 8, scope: !4031)
!4103 = !DILocation(line: 2948, column: 18, scope: !4031)
!4104 = !DILocation(line: 2950, column: 12, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2950, column: 12)
!4106 = !DILocation(line: 2950, column: 27, scope: !4105)
!4107 = !DILocation(line: 2950, column: 12, scope: !4031)
!4108 = !DILocation(line: 2953, column: 9, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 2953, column: 9)
!4110 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 2951, column: 3)
!4111 = !DILocation(line: 2953, column: 9, scope: !4110)
!4112 = !DILocation(line: 2954, column: 7, scope: !4109)
!4113 = !DILocation(line: 2956, column: 14, scope: !4109)
!4114 = !DILocation(line: 2958, column: 32, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 2958, column: 17)
!4116 = !DILocation(line: 2958, column: 17, scope: !4105)
!4117 = !DILocation(line: 2961, column: 12, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 2959, column: 3)
!4119 = !DILocation(line: 2962, column: 3, scope: !4118)
!4120 = !DILocation(line: 0, scope: !4105)
!4121 = !DILocation(line: 2966, column: 13, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2966, column: 12)
!4123 = !DILocation(line: 2968, column: 6, scope: !4032)
!4124 = !DILocation(line: 0, scope: !4033)
!4125 = !DILocation(line: 2974, column: 8, scope: !4037)
!4126 = !DILocation(line: 2974, column: 28, scope: !4037)
!4127 = !DILocation(line: 2975, column: 8, scope: !4037)
!4128 = !DILocation(line: 2975, column: 32, scope: !4037)
!4129 = !DILocation(line: 2975, column: 13, scope: !4037)
!4130 = !DILocation(line: 2976, column: 5, scope: !4037)
!4131 = !DILocation(line: 2976, column: 8, scope: !4037)
!4132 = !DILocation(line: 2976, column: 31, scope: !4037)
!4133 = !DILocation(line: 2976, column: 28, scope: !4037)
!4134 = !DILocation(line: 2974, column: 8, scope: !4033)
!4135 = !DILocation(line: 2978, column: 8, scope: !4036)
!4136 = !DILocation(line: 0, scope: !4036)
!4137 = !DILocation(line: 2980, column: 20, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 2980, column: 12)
!4139 = !DILocation(line: 2980, column: 17, scope: !4138)
!4140 = !DILocation(line: 2983, column: 14, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 2981, column: 10)
!4142 = !DILocation(line: 2980, column: 12, scope: !4036)
!4143 = !DILocation(line: 2987, column: 6, scope: !4037)
!4144 = !DILocation(line: 2987, column: 6, scope: !4036)
!4145 = !DILocation(line: 2988, column: 13, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 2988, column: 13)
!4147 = !DILocation(line: 3002, column: 18, scope: !4044)
!4148 = !DILocation(line: 3002, column: 12, scope: !4029)
!4149 = !DILocation(line: 3006, column: 16, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 3003, column: 5)
!4151 = !DILocation(line: 3007, column: 5, scope: !4150)
!4152 = !DILocation(line: 3008, column: 12, scope: !4043)
!4153 = !DILocation(line: 3009, column: 5, scope: !4043)
!4154 = !DILocation(line: 3009, column: 9, scope: !4043)
!4155 = !DILocation(line: 3010, column: 9, scope: !4043)
!4156 = !DILocation(line: 3010, column: 13, scope: !4043)
!4157 = !DILocation(line: 3011, column: 6, scope: !4043)
!4158 = !DILocation(line: 3011, column: 9, scope: !4043)
!4159 = !DILocation(line: 3011, column: 32, scope: !4043)
!4160 = !DILocation(line: 3012, column: 6, scope: !4043)
!4161 = !DILocation(line: 3012, column: 9, scope: !4043)
!4162 = !DILocation(line: 3012, column: 32, scope: !4043)
!4163 = !DILocation(line: 3014, column: 6, scope: !4043)
!4164 = !DILocation(line: 3014, column: 9, scope: !4043)
!4165 = !DILocation(line: 3014, column: 32, scope: !4043)
!4166 = !DILocation(line: 3008, column: 12, scope: !4044)
!4167 = !DILocation(line: 3024, column: 11, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 3024, column: 11)
!4169 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 3023, column: 5)
!4170 = !DILocation(line: 0, scope: !4168)
!4171 = !DILocation(line: 3024, column: 11, scope: !4169)
!4172 = !DILocation(line: 3028, column: 8, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 3028, column: 8)
!4174 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 3025, column: 2)
!4175 = !DILocation(line: 3028, column: 31, scope: !4173)
!4176 = !DILocation(line: 3028, column: 8, scope: !4174)
!4177 = !DILocation(line: 3030, column: 13, scope: !4174)
!4178 = !DILocation(line: 3031, column: 2, scope: !4174)
!4179 = !DILocation(line: 3037, column: 13, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 3033, column: 2)
!4181 = !DILocation(line: 3044, column: 14, scope: !4169)
!4182 = !DILocation(line: 3045, column: 26, scope: !4169)
!4183 = !DILocation(line: 3045, column: 7, scope: !4169)
!4184 = !DILocation(line: 3045, column: 24, scope: !4169)
!4185 = !DILocation(line: 3046, column: 5, scope: !4169)
!4186 = !DILocation(line: 3047, column: 12, scope: !4042)
!4187 = !DILocation(line: 3048, column: 5, scope: !4042)
!4188 = !DILocation(line: 3048, column: 8, scope: !4042)
!4189 = !DILocation(line: 3047, column: 12, scope: !4043)
!4190 = !DILocation(line: 3051, column: 16, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 3049, column: 5)
!4192 = !DILocation(line: 3052, column: 5, scope: !4191)
!4193 = !DILocation(line: 3054, column: 5, scope: !4041)
!4194 = !DILocation(line: 3054, column: 8, scope: !4041)
!4195 = !DILocation(line: 3054, column: 34, scope: !4041)
!4196 = !DILocation(line: 3055, column: 5, scope: !4041)
!4197 = !DILocation(line: 3055, column: 8, scope: !4041)
!4198 = !DILocation(line: 3053, column: 12, scope: !4042)
!4199 = !DILocation(line: 3060, column: 16, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 3056, column: 5)
!4201 = !DILocation(line: 3061, column: 5, scope: !4200)
!4202 = !DILocation(line: 3063, column: 5, scope: !4040)
!4203 = !DILocation(line: 3063, column: 8, scope: !4040)
!4204 = !DILocation(line: 3063, column: 34, scope: !4040)
!4205 = !DILocation(line: 3062, column: 12, scope: !4041)
!4206 = !DILocation(line: 3076, column: 7, scope: !4039)
!4207 = !DILocation(line: 0, scope: !4039)
!4208 = !DILocation(line: 3079, column: 19, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 3079, column: 11)
!4210 = !DILocation(line: 3079, column: 16, scope: !4209)
!4211 = !DILocation(line: 3079, column: 11, scope: !4039)
!4212 = !DILocation(line: 3080, column: 16, scope: !4209)
!4213 = !DILocation(line: 3080, column: 9, scope: !4209)
!4214 = !DILocation(line: 3084, column: 13, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 3082, column: 9)
!4216 = !DILocation(line: 0, scope: !4209)
!4217 = !DILocation(line: 3087, column: 5, scope: !4040)
!4218 = !DILocation(line: 3088, column: 28, scope: !4047)
!4219 = !DILocation(line: 3088, column: 12, scope: !4040)
!4220 = !DILocation(line: 3095, column: 11, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 3095, column: 11)
!4222 = !DILocation(line: 3095, column: 28, scope: !4221)
!4223 = !DILocation(line: 3095, column: 11, scope: !4046)
!4224 = !DILocation(line: 3098, column: 17, scope: !4046)
!4225 = !DILocation(line: 0, scope: !4046)
!4226 = !DILocation(line: 3105, column: 50, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 3102, column: 11)
!4228 = !DILocation(line: 3105, column: 2, scope: !4227)
!4229 = !DILocation(line: 3110, column: 50, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 3107, column: 11)
!4231 = !DILocation(line: 3110, column: 2, scope: !4230)
!4232 = !DILocation(line: 3111, column: 7, scope: !4046)
!4233 = !DILocation(line: 0, scope: !4029)
!4234 = !DILocation(line: 3120, column: 3, scope: !4009)
!4235 = !DILocation(line: 3127, column: 3, scope: !4009)
!4236 = !DILocation(line: 3128, column: 3, scope: !4009)
!4237 = !DILocation(line: 3129, column: 3, scope: !4009)
!4238 = !DILocation(line: 3130, column: 3, scope: !4009)
!4239 = !DILocation(line: 3135, column: 3, scope: !4009)
!4240 = !DILocation(line: 3136, column: 1, scope: !4009)
!4241 = distinct !DISubprogram(name: "dbxout_syms", scope: !3, file: !3, line: 3284, type: !4242, scopeLine: 3285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4244)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!543, !550}
!4244 = !{!4245, !4246, !4247, !4248, !4249, !4251, !4252, !4253}
!4245 = !DILocalVariable(name: "syms", arg: 1, scope: !4241, file: !3, line: 3284, type: !550)
!4246 = !DILocalVariable(name: "result", scope: !4241, file: !3, line: 3286, type: !543)
!4247 = !DILocalVariable(name: "comm_prev", scope: !4241, file: !3, line: 3287, type: !548)
!4248 = !DILocalVariable(name: "syms_prev", scope: !4241, file: !3, line: 3288, type: !550)
!4249 = !DILocalVariable(name: "temp", scope: !4250, file: !3, line: 3292, type: !543)
!4250 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 3291, column: 5)
!4251 = !DILocalVariable(name: "copen", scope: !4250, file: !3, line: 3292, type: !543)
!4252 = !DILocalVariable(name: "cclos", scope: !4250, file: !3, line: 3292, type: !543)
!4253 = !DILocalVariable(name: "comm_new", scope: !4250, file: !3, line: 3293, type: !548)
!4254 = !DILocation(line: 0, scope: !4241)
!4255 = !DILocation(line: 0, scope: !4250)
!4256 = !DILocation(line: 3290, column: 3, scope: !4241)
!4257 = !DILocation(line: 3292, column: 7, scope: !4250)
!4258 = !DILocation(line: 3298, column: 18, scope: !4250)
!4259 = !DILocation(line: 3299, column: 24, scope: !4250)
!4260 = !DILocation(line: 3300, column: 15, scope: !4250)
!4261 = !DILocation(line: 3300, column: 29, scope: !4250)
!4262 = !DILocation(line: 3300, column: 37, scope: !4250)
!4263 = !DILocation(line: 3300, column: 40, scope: !4250)
!4264 = !DILocation(line: 3301, column: 25, scope: !4250)
!4265 = !DILocation(line: 3302, column: 15, scope: !4250)
!4266 = !DILocation(line: 3302, column: 36, scope: !4250)
!4267 = !DILocation(line: 3302, column: 39, scope: !4250)
!4268 = !DILocation(line: 3303, column: 11, scope: !4250)
!4269 = !DILocation(line: 3304, column: 9, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 3303, column: 11)
!4271 = !DILocation(line: 3305, column: 11, scope: !4250)
!4272 = !DILocation(line: 3307, column: 11, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 3306, column: 9)
!4274 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 3305, column: 11)
!4275 = !DILocation(line: 3309, column: 9, scope: !4273)
!4276 = !DILocation(line: 3312, column: 17, scope: !4250)
!4277 = !DILocation(line: 3312, column: 14, scope: !4250)
!4278 = !DILocation(line: 3313, column: 14, scope: !4250)
!4279 = !DILocation(line: 3314, column: 5, scope: !4241)
!4280 = distinct !{!4280, !4256, !4279}
!4281 = !DILocation(line: 3316, column: 17, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 3316, column: 7)
!4283 = !DILocation(line: 3316, column: 7, scope: !4241)
!4284 = !DILocation(line: 3317, column: 5, scope: !4282)
!4285 = !DILocation(line: 3319, column: 3, scope: !4241)
!4286 = distinct !DISubprogram(name: "dbxout_common_check", scope: !3, file: !3, line: 3193, type: !4287, scopeLine: 3194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!548, !550, !2646}
!4289 = !{!4290, !4291, !4292, !4293, !4294, !4295}
!4290 = !DILocalVariable(name: "decl", arg: 1, scope: !4286, file: !3, line: 3193, type: !550)
!4291 = !DILocalVariable(name: "value", arg: 2, scope: !4286, file: !3, line: 3193, type: !2646)
!4292 = !DILocalVariable(name: "home", scope: !4286, file: !3, line: 3195, type: !725)
!4293 = !DILocalVariable(name: "sym_addr", scope: !4286, file: !3, line: 3196, type: !725)
!4294 = !DILocalVariable(name: "name", scope: !4286, file: !3, line: 3197, type: !548)
!4295 = !DILocalVariable(name: "c_decl", scope: !4296, file: !3, line: 3236, type: !550)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 3227, column: 5)
!4297 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 3225, column: 7)
!4298 = !DILocation(line: 0, scope: !4286)
!4299 = !DILocation(line: 3207, column: 7, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 3207, column: 7)
!4301 = !DILocation(line: 3207, column: 24, scope: !4300)
!4302 = !DILocation(line: 3208, column: 7, scope: !4300)
!4303 = !DILocation(line: 3208, column: 11, scope: !4300)
!4304 = !DILocation(line: 3209, column: 7, scope: !4300)
!4305 = !DILocation(line: 3209, column: 11, scope: !4300)
!4306 = !DILocation(line: 3210, column: 7, scope: !4300)
!4307 = !DILocation(line: 3210, column: 10, scope: !4300)
!4308 = !DILocation(line: 3211, column: 7, scope: !4300)
!4309 = !DILocation(line: 3211, column: 11, scope: !4300)
!4310 = !DILocation(line: 3207, column: 7, scope: !4286)
!4311 = !DILocation(line: 3214, column: 10, scope: !4286)
!4312 = !DILocation(line: 3215, column: 12, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 3215, column: 7)
!4314 = !DILocation(line: 3215, column: 24, scope: !4313)
!4315 = !DILocation(line: 3215, column: 27, scope: !4313)
!4316 = !DILocation(line: 3215, column: 43, scope: !4313)
!4317 = !DILocation(line: 3215, column: 7, scope: !4286)
!4318 = !DILocation(line: 3218, column: 34, scope: !4286)
!4319 = !DILocation(line: 3218, column: 14, scope: !4286)
!4320 = !DILocation(line: 3219, column: 16, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 3219, column: 7)
!4322 = !DILocation(line: 3219, column: 28, scope: !4321)
!4323 = !DILocation(line: 3219, column: 31, scope: !4321)
!4324 = !DILocation(line: 3219, column: 51, scope: !4321)
!4325 = !DILocation(line: 3219, column: 7, scope: !4286)
!4326 = !DILocation(line: 3222, column: 14, scope: !4286)
!4327 = !DILocation(line: 3223, column: 7, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 3223, column: 7)
!4329 = !DILocation(line: 3223, column: 27, scope: !4328)
!4330 = !DILocation(line: 3223, column: 7, scope: !4286)
!4331 = !DILocation(line: 3224, column: 16, scope: !4328)
!4332 = !DILocation(line: 0, scope: !4297)
!4333 = !DILocation(line: 3225, column: 8, scope: !4297)
!4334 = !DILocation(line: 3224, column: 5, scope: !4328)
!4335 = !DILocation(line: 3225, column: 28, scope: !4297)
!4336 = !DILocation(line: 3225, column: 42, scope: !4297)
!4337 = !DILocation(line: 3225, column: 65, scope: !4297)
!4338 = !DILocation(line: 3226, column: 7, scope: !4297)
!4339 = !DILocation(line: 3226, column: 10, scope: !4297)
!4340 = !DILocation(line: 3226, column: 30, scope: !4297)
!4341 = !DILocation(line: 3225, column: 7, scope: !4286)
!4342 = !DILocation(line: 0, scope: !4296)
!4343 = !DILocation(line: 3238, column: 7, scope: !4296)
!4344 = !DILocation(line: 3241, column: 15, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 3241, column: 15)
!4346 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 3239, column: 9)
!4347 = !DILocation(line: 0, scope: !4345)
!4348 = !DILocation(line: 3241, column: 15, scope: !4346)
!4349 = !DILocation(line: 3244, column: 45, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 3242, column: 13)
!4351 = !DILocation(line: 3244, column: 17, scope: !4350)
!4352 = !DILocation(line: 3245, column: 24, scope: !4350)
!4353 = !DILocation(line: 3245, column: 22, scope: !4350)
!4354 = !DILocation(line: 3246, column: 24, scope: !4350)
!4355 = !DILocation(line: 3251, column: 45, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 3249, column: 13)
!4357 = !DILocation(line: 3251, column: 17, scope: !4356)
!4358 = !DILocation(line: 3252, column: 24, scope: !4356)
!4359 = !DILocation(line: 3252, column: 22, scope: !4356)
!4360 = !DILocation(line: 3253, column: 24, scope: !4356)
!4361 = !DILocation(line: 3258, column: 26, scope: !4346)
!4362 = !DILocation(line: 3258, column: 46, scope: !4346)
!4363 = !DILocation(line: 3258, column: 18, scope: !4346)
!4364 = !DILocation(line: 3259, column: 18, scope: !4346)
!4365 = !DILocation(line: 3260, column: 20, scope: !4346)
!4366 = !DILocation(line: 3264, column: 11, scope: !4346)
!4367 = !DILocation(line: 3266, column: 9, scope: !4346)
!4368 = !DILocation(line: 3271, column: 18, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 3271, column: 11)
!4370 = !DILocation(line: 3271, column: 26, scope: !4369)
!4371 = !DILocation(line: 3271, column: 30, scope: !4369)
!4372 = !DILocation(line: 3271, column: 11, scope: !4296)
!4373 = !DILocation(line: 3272, column: 9, scope: !4369)
!4374 = !DILocation(line: 3278, column: 1, scope: !4286)
!4375 = distinct !DISubprogram(name: "dbxout_common_name", scope: !3, file: !3, line: 3180, type: !4376, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{null, !550, !548, !3807}
!4378 = !{!4379, !4380, !4381}
!4379 = !DILocalVariable(name: "decl", arg: 1, scope: !4375, file: !3, line: 3180, type: !550)
!4380 = !DILocalVariable(name: "name", arg: 2, scope: !4375, file: !3, line: 3180, type: !548)
!4381 = !DILocalVariable(name: "op", arg: 3, scope: !4375, file: !3, line: 3180, type: !3807)
!4382 = !DILocation(line: 0, scope: !4375)
!4383 = !DILocation(line: 3182, column: 3, scope: !4375)
!4384 = !DILocation(line: 3183, column: 3, scope: !4375)
!4385 = !DILocation(line: 3184, column: 3, scope: !4375)
!4386 = !DILocation(line: 3185, column: 1, scope: !4375)
!4387 = distinct !DISubprogram(name: "dbxout_parms", scope: !3, file: !3, line: 3335, type: !1792, scopeLine: 3336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4388)
!4388 = !{!4389, !4390, !4395, !4396, !4397, !4398, !4401}
!4389 = !DILocalVariable(name: "parms", arg: 1, scope: !4387, file: !3, line: 3335, type: !550)
!4390 = !DILocalVariable(name: "eff_type", scope: !4391, file: !3, line: 3346, type: !550)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 3345, column: 7)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 3341, column: 9)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 3340, column: 3)
!4394 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 3340, column: 3)
!4395 = !DILocalVariable(name: "letter", scope: !4391, file: !3, line: 3347, type: !546)
!4396 = !DILocalVariable(name: "code", scope: !4391, file: !3, line: 3348, type: !3807)
!4397 = !DILocalVariable(name: "number", scope: !4391, file: !3, line: 3349, type: !543)
!4398 = !DILocalVariable(name: "inrtl", scope: !4399, file: !3, line: 3367, type: !725)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 3366, column: 4)
!4400 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 3365, column: 6)
!4401 = !DILocalVariable(name: "best_rtl", scope: !4402, file: !3, line: 3399, type: !725)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 3398, column: 4)
!4403 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 3397, column: 11)
!4404 = !DILocation(line: 0, scope: !4387)
!4405 = !DILocation(line: 3337, column: 3, scope: !4387)
!4406 = !DILocation(line: 3338, column: 3, scope: !4387)
!4407 = !DILocation(line: 3340, column: 3, scope: !4387)
!4408 = !DILocation(line: 3340, column: 3, scope: !4394)
!4409 = !DILocation(line: 3341, column: 9, scope: !4392)
!4410 = !DILocation(line: 3342, column: 2, scope: !4392)
!4411 = !DILocation(line: 3342, column: 5, scope: !4392)
!4412 = !DILocation(line: 3342, column: 26, scope: !4392)
!4413 = !DILocation(line: 3342, column: 23, scope: !4392)
!4414 = !DILocation(line: 3343, column: 2, scope: !4392)
!4415 = !DILocation(line: 3343, column: 5, scope: !4392)
!4416 = !DILocation(line: 3344, column: 2, scope: !4392)
!4417 = !DILocation(line: 3344, column: 5, scope: !4392)
!4418 = !DILocation(line: 3341, column: 9, scope: !4393)
!4419 = !DILocation(line: 3354, column: 6, scope: !4391)
!4420 = !DILocation(line: 3354, column: 4, scope: !4391)
!4421 = !DILocation(line: 3355, column: 2, scope: !4391)
!4422 = !DILocation(line: 3365, column: 6, scope: !4400)
!4423 = !DILocation(line: 3365, column: 6, scope: !4391)
!4424 = !DILocation(line: 3367, column: 18, scope: !4399)
!4425 = !DILocation(line: 0, scope: !4399)
!4426 = !DILocation(line: 3373, column: 10, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 3373, column: 10)
!4428 = !DILocation(line: 3373, column: 27, scope: !4427)
!4429 = !DILocation(line: 3374, column: 3, scope: !4427)
!4430 = !DILocation(line: 3374, column: 6, scope: !4427)
!4431 = !DILocation(line: 3373, column: 10, scope: !4399)
!4432 = !DILocation(line: 3375, column: 17, scope: !4427)
!4433 = !DILocation(line: 0, scope: !4391)
!4434 = !DILocation(line: 3375, column: 8, scope: !4427)
!4435 = !DILocation(line: 0, scope: !4427)
!4436 = !DILocation(line: 3395, column: 17, scope: !4399)
!4437 = !DILocation(line: 3396, column: 4, scope: !4399)
!4438 = !DILocation(line: 3397, column: 11, scope: !4403)
!4439 = !DILocation(line: 0, scope: !4403)
!4440 = !DILocation(line: 3397, column: 11, scope: !4400)
!4441 = !DILocation(line: 3407, column: 17, scope: !4402)
!4442 = !DILocation(line: 3415, column: 10, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 3415, column: 10)
!4444 = !DILocation(line: 3415, column: 35, scope: !4443)
!4445 = !DILocation(line: 3415, column: 10, scope: !4402)
!4446 = !DILocation(line: 3416, column: 19, scope: !4443)
!4447 = !DILocation(line: 3417, column: 15, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 3417, column: 15)
!4449 = !DILocation(line: 3417, column: 52, scope: !4448)
!4450 = !DILocation(line: 0, scope: !4448)
!4451 = !DILocation(line: 3417, column: 15, scope: !4443)
!4452 = !DILocation(line: 3418, column: 19, scope: !4448)
!4453 = !DILocation(line: 0, scope: !4402)
!4454 = !DILocation(line: 3418, column: 8, scope: !4448)
!4455 = !DILocation(line: 0, scope: !4443)
!4456 = !DILocation(line: 3422, column: 15, scope: !4402)
!4457 = !DILocation(line: 3423, column: 4, scope: !4402)
!4458 = !DILocation(line: 3424, column: 11, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 3424, column: 11)
!4460 = !DILocation(line: 3425, column: 4, scope: !4459)
!4461 = !DILocation(line: 3425, column: 7, scope: !4459)
!4462 = !DILocation(line: 3426, column: 4, scope: !4459)
!4463 = !DILocation(line: 3426, column: 7, scope: !4459)
!4464 = !DILocation(line: 3426, column: 42, scope: !4459)
!4465 = !DILocation(line: 3427, column: 4, scope: !4459)
!4466 = !DILocation(line: 3427, column: 7, scope: !4459)
!4467 = !DILocation(line: 3427, column: 42, scope: !4459)
!4468 = !DILocation(line: 3429, column: 4, scope: !4459)
!4469 = !DILocation(line: 3429, column: 7, scope: !4459)
!4470 = !DILocation(line: 3429, column: 42, scope: !4459)
!4471 = !DILocation(line: 3424, column: 11, scope: !4403)
!4472 = !DILocation(line: 3442, column: 16, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 3432, column: 4)
!4474 = !DILocation(line: 3442, column: 15, scope: !4473)
!4475 = !DILocation(line: 3444, column: 17, scope: !4473)
!4476 = !DILocation(line: 3451, column: 10, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 3451, column: 10)
!4478 = !DILocation(line: 3451, column: 45, scope: !4477)
!4479 = !DILocation(line: 3451, column: 10, scope: !4473)
!4480 = !DILocation(line: 3452, column: 17, scope: !4477)
!4481 = !DILocation(line: 3452, column: 8, scope: !4477)
!4482 = !DILocation(line: 3454, column: 17, scope: !4477)
!4483 = !DILocation(line: 3456, column: 11, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 3456, column: 11)
!4485 = !DILocation(line: 3457, column: 4, scope: !4484)
!4486 = !DILocation(line: 3457, column: 7, scope: !4484)
!4487 = !DILocation(line: 3456, column: 11, scope: !4459)
!4488 = !DILocation(line: 3466, column: 17, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 3458, column: 4)
!4490 = !DILocation(line: 3468, column: 11, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 3468, column: 10)
!4492 = !DILocation(line: 3468, column: 10, scope: !4489)
!4493 = !DILocation(line: 3469, column: 17, scope: !4491)
!4494 = !DILocation(line: 3469, column: 8, scope: !4491)
!4495 = !DILocation(line: 3476, column: 11, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 3476, column: 11)
!4497 = !DILocation(line: 3477, column: 4, scope: !4496)
!4498 = !DILocation(line: 3477, column: 7, scope: !4496)
!4499 = !DILocation(line: 3477, column: 37, scope: !4496)
!4500 = !DILocation(line: 3477, column: 34, scope: !4496)
!4501 = !DILocation(line: 3481, column: 4, scope: !4496)
!4502 = !DILocation(line: 3481, column: 9, scope: !4496)
!4503 = !DILocation(line: 3476, column: 11, scope: !4484)
!4504 = !DILocation(line: 3487, column: 17, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 3482, column: 4)
!4506 = !DILocation(line: 3493, column: 11, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 3493, column: 10)
!4508 = !DILocation(line: 3493, column: 10, scope: !4505)
!4509 = !DILocation(line: 3494, column: 17, scope: !4507)
!4510 = !DILocation(line: 3494, column: 8, scope: !4507)
!4511 = !DILocation(line: 0, scope: !4400)
!4512 = !DILocation(line: 3510, column: 2, scope: !4391)
!4513 = !DILocation(line: 3512, column: 6, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 3512, column: 6)
!4515 = !DILocation(line: 3512, column: 6, scope: !4391)
!4516 = !DILocation(line: 3514, column: 6, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 3513, column: 4)
!4518 = !DILocation(line: 3515, column: 6, scope: !4517)
!4519 = !DILocation(line: 3519, column: 2, scope: !4391)
!4520 = !DILocation(line: 3516, column: 4, scope: !4517)
!4521 = !DILocation(line: 3518, column: 4, scope: !4514)
!4522 = !DILocation(line: 3520, column: 2, scope: !4391)
!4523 = !DILocation(line: 3521, column: 2, scope: !4391)
!4524 = !DILocation(line: 3522, column: 7, scope: !4392)
!4525 = !DILocation(line: 3340, column: 25, scope: !4393)
!4526 = !DILocation(line: 3340, column: 3, scope: !4393)
!4527 = distinct !{!4527, !4408, !4528}
!4528 = !DILocation(line: 3522, column: 7, scope: !4394)
!4529 = !DILocation(line: 3523, column: 3, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 3523, column: 3)
!4531 = !DILocation(line: 3523, column: 3, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 3523, column: 3)
!4533 = !DILocation(line: 3524, column: 1, scope: !4387)
!4534 = distinct !DISubprogram(name: "rhs_regno", scope: !378, file: !378, line: 1051, type: !4535, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4540)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!7, !4537}
!4537 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !551, line: 51, baseType: !4538)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!4540 = !{!4541}
!4541 = !DILocalVariable(name: "x", arg: 1, scope: !4534, file: !378, line: 1051, type: !4537)
!4542 = !DILocation(line: 0, scope: !4534)
!4543 = !DILocation(line: 1053, column: 10, scope: !4534)
!4544 = !DILocation(line: 1053, column: 3, scope: !4534)
!4545 = distinct !DISubprogram(name: "dbxout_reg_parms", scope: !3, file: !3, line: 3538, type: !1792, scopeLine: 3539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4546)
!4546 = !{!4547}
!4547 = !DILocalVariable(name: "parms", arg: 1, scope: !4545, file: !3, line: 3538, type: !550)
!4548 = !DILocation(line: 0, scope: !4545)
!4549 = !DILocation(line: 3540, column: 3, scope: !4545)
!4550 = !DILocation(line: 3542, column: 3, scope: !4545)
!4551 = !DILocation(line: 3542, column: 3, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 3542, column: 3)
!4553 = !DILocation(line: 3543, column: 9, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3543, column: 9)
!4555 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 3542, column: 3)
!4556 = !DILocation(line: 3543, column: 27, scope: !4554)
!4557 = !DILocation(line: 3543, column: 30, scope: !4554)
!4558 = !DILocation(line: 3543, column: 9, scope: !4555)
!4559 = !DILocation(line: 3547, column: 6, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 3547, column: 6)
!4561 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3544, column: 7)
!4562 = !DILocation(line: 0, scope: !4560)
!4563 = !DILocation(line: 3548, column: 6, scope: !4560)
!4564 = !DILocation(line: 3548, column: 9, scope: !4560)
!4565 = !DILocation(line: 3548, column: 34, scope: !4560)
!4566 = !DILocation(line: 3547, column: 6, scope: !4561)
!4567 = !DILocation(line: 3551, column: 11, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 3551, column: 11)
!4569 = !DILocation(line: 3549, column: 35, scope: !4560)
!4570 = !DILocation(line: 3550, column: 10, scope: !4560)
!4571 = !DILocation(line: 3549, column: 4, scope: !4560)
!4572 = !DILocation(line: 3551, column: 39, scope: !4568)
!4573 = !DILocation(line: 3551, column: 11, scope: !4560)
!4574 = !DILocation(line: 3552, column: 35, scope: !4568)
!4575 = !DILocation(line: 3553, column: 10, scope: !4568)
!4576 = !DILocation(line: 3552, column: 4, scope: !4568)
!4577 = !DILocation(line: 3555, column: 11, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 3555, column: 11)
!4579 = !DILocation(line: 3556, column: 4, scope: !4578)
!4580 = !DILocation(line: 3556, column: 22, scope: !4578)
!4581 = !DILocation(line: 3556, column: 40, scope: !4578)
!4582 = !DILocation(line: 3556, column: 9, scope: !4578)
!4583 = !DILocation(line: 3555, column: 11, scope: !4568)
!4584 = !DILocation(line: 3557, column: 35, scope: !4578)
!4585 = !DILocation(line: 3558, column: 10, scope: !4578)
!4586 = !DILocation(line: 3557, column: 4, scope: !4578)
!4587 = !DILocation(line: 3542, column: 25, scope: !4555)
!4588 = !DILocation(line: 3542, column: 3, scope: !4555)
!4589 = distinct !{!4589, !4551, !4590}
!4590 = !DILocation(line: 3559, column: 7, scope: !4552)
!4591 = !DILocation(line: 3560, column: 3, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 3560, column: 3)
!4593 = !DILocation(line: 3560, column: 3, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 3560, column: 3)
!4595 = !DILocation(line: 3561, column: 1, scope: !4545)
!4596 = distinct !DISubprogram(name: "gt_ggc_mx_typeinfo", scope: !1650, file: !1650, line: 23, type: !1140, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4597)
!4597 = !{!4598, !4599}
!4598 = !DILocalVariable(name: "x_p", arg: 1, scope: !4596, file: !1650, line: 23, type: !547)
!4599 = !DILocalVariable(name: "x", scope: !4596, file: !1650, line: 25, type: !4600)
!4600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!4601 = !DILocation(line: 0, scope: !4596)
!4602 = !DILocation(line: 26, column: 7, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4596, file: !1650, line: 26, column: 7)
!4604 = !DILocation(line: 26, column: 7, scope: !4596)
!4605 = !DILocation(line: 29, column: 1, scope: !4596)
!4606 = distinct !DISubprogram(name: "gt_pch_nx_typeinfo", scope: !1650, file: !1650, line: 32, type: !1140, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4607)
!4607 = !{!4608, !4609}
!4608 = !DILocalVariable(name: "x_p", arg: 1, scope: !4606, file: !1650, line: 32, type: !547)
!4609 = !DILocalVariable(name: "x", scope: !4606, file: !1650, line: 34, type: !4600)
!4610 = !DILocation(line: 0, scope: !4606)
!4611 = !DILocation(line: 35, column: 7, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4606, file: !1650, line: 35, column: 7)
!4613 = !DILocation(line: 38, column: 1, scope: !4606)
!4614 = distinct !DISubprogram(name: "gt_pch_p_8typeinfo", scope: !1650, file: !1650, line: 41, type: !4615, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4618)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{null, !547, !547, !4617, !547}
!4617 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !1654, line: 38, baseType: !1166)
!4618 = !{!4619, !4620, !4621, !4622, !4623}
!4619 = !DILocalVariable(name: "this_obj", arg: 1, scope: !4614, file: !1650, line: 41, type: !547)
!4620 = !DILocalVariable(name: "x_p", arg: 2, scope: !4614, file: !1650, line: 42, type: !547)
!4621 = !DILocalVariable(name: "op", arg: 3, scope: !4614, file: !1650, line: 43, type: !4617)
!4622 = !DILocalVariable(name: "cookie", arg: 4, scope: !4614, file: !1650, line: 44, type: !547)
!4623 = !DILocalVariable(name: "x", scope: !4614, file: !1650, line: 46, type: !4600)
!4624 = !DILocation(line: 0, scope: !4614)
!4625 = !DILocation(line: 47, column: 1, scope: !4614)
!4626 = distinct !DISubprogram(name: "gt_ggc_ma_typevec", scope: !1650, file: !1650, line: 53, type: !1140, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4627)
!4627 = !{!4628, !4629, !4632}
!4628 = !DILocalVariable(name: "x_p", arg: 1, scope: !4626, file: !1650, line: 53, type: !547)
!4629 = !DILocalVariable(name: "i0", scope: !4630, file: !1650, line: 56, type: !1145)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !1650, line: 55, column: 24)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !1650, line: 55, column: 7)
!4632 = !DILocalVariable(name: "a__", scope: !4633, file: !1650, line: 59, type: !4634)
!4633 = distinct !DILexicalBlock(scope: !4630, file: !1650, line: 59, column: 5)
!4634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!4635 = !DILocation(line: 0, scope: !4626)
!4636 = !DILocation(line: 55, column: 7, scope: !4631)
!4637 = !DILocation(line: 55, column: 15, scope: !4631)
!4638 = !DILocation(line: 55, column: 7, scope: !4626)
!4639 = !DILocation(line: 57, column: 5, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4630, file: !1650, line: 57, column: 5)
!4641 = !DILocation(line: 0, scope: !4630)
!4642 = !DILocation(line: 0, scope: !4633)
!4643 = !DILocation(line: 59, column: 5, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4633, file: !1650, line: 59, column: 5)
!4645 = !DILocation(line: 61, column: 1, scope: !4626)
!4646 = distinct !DISubprogram(name: "gt_pch_na_typevec", scope: !1650, file: !1650, line: 81, type: !1140, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4647)
!4647 = !{!4648, !4649}
!4648 = !DILocalVariable(name: "x_p", arg: 1, scope: !4646, file: !1650, line: 81, type: !547)
!4649 = !DILocalVariable(name: "i1", scope: !4650, file: !1650, line: 84, type: !1145)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !1650, line: 83, column: 24)
!4651 = distinct !DILexicalBlock(scope: !4646, file: !1650, line: 83, column: 7)
!4652 = !DILocation(line: 0, scope: !4646)
!4653 = !DILocation(line: 83, column: 7, scope: !4651)
!4654 = !DILocation(line: 83, column: 15, scope: !4651)
!4655 = !DILocation(line: 83, column: 7, scope: !4646)
!4656 = !DILocation(line: 85, column: 5, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4650, file: !1650, line: 85, column: 5)
!4658 = !DILocation(line: 0, scope: !4650)
!4659 = !DILocation(line: 87, column: 5, scope: !4650)
!4660 = !DILocation(line: 88, column: 3, scope: !4650)
!4661 = !DILocation(line: 89, column: 1, scope: !4646)
!4662 = distinct !DISubprogram(name: "get_lang_number", scope: !3, file: !3, line: 964, type: !4663, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4665)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!7}
!4665 = !{!4666}
!4666 = !DILocalVariable(name: "language_string", scope: !4662, file: !3, line: 966, type: !548)
!4667 = !DILocation(line: 966, column: 44, scope: !4662)
!4668 = !DILocation(line: 0, scope: !4662)
!4669 = !DILocation(line: 968, column: 7, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 968, column: 7)
!4671 = !DILocation(line: 968, column: 41, scope: !4670)
!4672 = !DILocation(line: 968, column: 7, scope: !4662)
!4673 = !DILocation(line: 970, column: 12, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 970, column: 12)
!4675 = !DILocation(line: 970, column: 48, scope: !4674)
!4676 = !DILocation(line: 970, column: 12, scope: !4670)
!4677 = !DILocation(line: 972, column: 12, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 972, column: 12)
!4679 = !DILocation(line: 972, column: 48, scope: !4678)
!4680 = !DILocation(line: 972, column: 12, scope: !4674)
!4681 = !DILocation(line: 974, column: 12, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 974, column: 12)
!4683 = !DILocation(line: 974, column: 52, scope: !4682)
!4684 = !DILocation(line: 974, column: 12, scope: !4678)
!4685 = !DILocation(line: 976, column: 12, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 976, column: 12)
!4687 = !DILocation(line: 976, column: 51, scope: !4686)
!4688 = !DILocation(line: 976, column: 12, scope: !4682)
!4689 = !DILocation(line: 978, column: 12, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 978, column: 12)
!4691 = !DILocation(line: 978, column: 56, scope: !4690)
!4692 = !DILocation(line: 978, column: 12, scope: !4686)
!4693 = !DILocation(line: 980, column: 12, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 980, column: 12)
!4695 = !DILocation(line: 980, column: 58, scope: !4694)
!4696 = !DILocation(line: 0, scope: !4694)
!4697 = !DILocation(line: 0, scope: !4670)
!4698 = !DILocation(line: 985, column: 1, scope: !4662)
!4699 = distinct !DISubprogram(name: "dbxout_typedefs", scope: !3, file: !3, line: 1097, type: !1792, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4700)
!4700 = !{!4701, !4702}
!4701 = !DILocalVariable(name: "syms", arg: 1, scope: !4699, file: !3, line: 1097, type: !550)
!4702 = !DILocalVariable(name: "type", scope: !4703, file: !3, line: 1103, type: !550)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1102, column: 2)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1101, column: 11)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1100, column: 5)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 1099, column: 3)
!4707 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 1099, column: 3)
!4708 = !DILocation(line: 0, scope: !4699)
!4709 = !DILocation(line: 1099, column: 3, scope: !4699)
!4710 = !DILocation(line: 1099, column: 15, scope: !4706)
!4711 = !DILocation(line: 1099, column: 3, scope: !4707)
!4712 = !DILocation(line: 1101, column: 11, scope: !4704)
!4713 = !DILocation(line: 1101, column: 28, scope: !4704)
!4714 = !DILocation(line: 1101, column: 11, scope: !4705)
!4715 = !DILocation(line: 1103, column: 16, scope: !4703)
!4716 = !DILocation(line: 0, scope: !4703)
!4717 = !DILocation(line: 1104, column: 8, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 1104, column: 8)
!4719 = !DILocation(line: 1105, column: 8, scope: !4718)
!4720 = !DILocation(line: 1105, column: 11, scope: !4718)
!4721 = !DILocation(line: 1105, column: 40, scope: !4718)
!4722 = !DILocation(line: 1106, column: 8, scope: !4718)
!4723 = !DILocation(line: 1106, column: 11, scope: !4718)
!4724 = !DILocation(line: 1107, column: 8, scope: !4718)
!4725 = !DILocation(line: 1107, column: 13, scope: !4718)
!4726 = !DILocation(line: 1104, column: 8, scope: !4703)
!4727 = !DILocation(line: 1108, column: 6, scope: !4718)
!4728 = !DILocation(line: 1099, column: 36, scope: !4706)
!4729 = !DILocation(line: 1099, column: 3, scope: !4706)
!4730 = distinct !{!4730, !4711, !4731}
!4731 = !DILocation(line: 1110, column: 5, scope: !4707)
!4732 = !DILocation(line: 1111, column: 1, scope: !4699)
!4733 = distinct !DISubprogram(name: "dbxout_source_file", scope: !3, file: !3, line: 1242, type: !1690, scopeLine: 1243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4734)
!4734 = !{!4735}
!4735 = !DILocalVariable(name: "filename", arg: 1, scope: !4733, file: !3, line: 1242, type: !548)
!4736 = !DILocation(line: 0, scope: !4733)
!4737 = !DILocation(line: 1244, column: 7, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1244, column: 7)
!4739 = !DILocation(line: 1244, column: 16, scope: !4738)
!4740 = !DILocation(line: 1244, column: 24, scope: !4738)
!4741 = !DILocation(line: 1244, column: 21, scope: !4738)
!4742 = !DILocation(line: 1246, column: 18, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !3, line: 1245, column: 5)
!4744 = !DILocation(line: 1246, column: 16, scope: !4743)
!4745 = !DILocation(line: 1247, column: 24, scope: !4743)
!4746 = !DILocation(line: 1248, column: 5, scope: !4743)
!4747 = !DILocation(line: 1250, column: 7, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1250, column: 7)
!4749 = !DILocation(line: 1250, column: 16, scope: !4748)
!4750 = !DILocation(line: 1250, column: 29, scope: !4748)
!4751 = !DILocation(line: 1250, column: 34, scope: !4748)
!4752 = !DILocation(line: 1250, column: 37, scope: !4748)
!4753 = !DILocation(line: 1250, column: 7, scope: !4733)
!4754 = !DILocation(line: 1253, column: 11, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 1253, column: 11)
!4756 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 1251, column: 5)
!4757 = !DILocation(line: 1253, column: 33, scope: !4755)
!4758 = !DILocation(line: 1253, column: 11, scope: !4756)
!4759 = !DILocation(line: 1254, column: 21, scope: !4755)
!4760 = !DILocation(line: 1254, column: 2, scope: !4755)
!4761 = !DILocation(line: 1256, column: 34, scope: !4756)
!4762 = !DILocation(line: 1256, column: 7, scope: !4756)
!4763 = !DILocation(line: 1257, column: 7, scope: !4756)
!4764 = !DILocation(line: 1258, column: 16, scope: !4756)
!4765 = !DILocation(line: 1259, column: 5, scope: !4756)
!4766 = !DILocation(line: 1260, column: 1, scope: !4733)
!4767 = distinct !DISubprogram(name: "dbxout_block", scope: !3, file: !3, line: 3625, type: !4768, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4770)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{null, !550, !543, !550}
!4770 = !{!4771, !4772, !4773, !4774, !4775, !4779, !4780, !4783, !4784}
!4771 = !DILocalVariable(name: "block", arg: 1, scope: !4767, file: !3, line: 3625, type: !550)
!4772 = !DILocalVariable(name: "depth", arg: 2, scope: !4767, file: !3, line: 3625, type: !543)
!4773 = !DILocalVariable(name: "args", arg: 3, scope: !4767, file: !3, line: 3625, type: !550)
!4774 = !DILocalVariable(name: "begin_label", scope: !4767, file: !3, line: 3627, type: !1909)
!4775 = !DILocalVariable(name: "did_output", scope: !4776, file: !3, line: 3636, type: !543)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 3635, column: 2)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 3634, column: 11)
!4778 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 3632, column: 5)
!4779 = !DILocalVariable(name: "blocknum", scope: !4776, file: !3, line: 3637, type: !543)
!4780 = !DILocalVariable(name: "buf", scope: !4781, file: !3, line: 3653, type: !1909)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 3652, column: 6)
!4782 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 3651, column: 8)
!4783 = !DILocalVariable(name: "scope_start", scope: !4781, file: !3, line: 3654, type: !548)
!4784 = !DILocalVariable(name: "buf", scope: !4785, file: !3, line: 3675, type: !1695)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 3674, column: 6)
!4786 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 3673, column: 8)
!4787 = !DILocation(line: 0, scope: !4767)
!4788 = !DILocation(line: 3627, column: 3, scope: !4767)
!4789 = !DILocation(line: 3627, column: 8, scope: !4767)
!4790 = !DILocation(line: 3629, column: 3, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 3629, column: 3)
!4792 = !DILocation(line: 0, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 3642, column: 8)
!4794 = !DILocation(line: 0, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 3644, column: 8)
!4796 = !DILocation(line: 0, scope: !4781)
!4797 = !DILocation(line: 0, scope: !4776)
!4798 = !DILocation(line: 0, scope: !4785)
!4799 = !DILocation(line: 3631, column: 3, scope: !4767)
!4800 = !DILocation(line: 3634, column: 11, scope: !4777)
!4801 = !DILocation(line: 3634, column: 29, scope: !4777)
!4802 = !DILocation(line: 3634, column: 32, scope: !4777)
!4803 = !DILocation(line: 3634, column: 11, scope: !4778)
!4804 = !DILocation(line: 3643, column: 32, scope: !4793)
!4805 = !DILocation(line: 3643, column: 19, scope: !4793)
!4806 = !DILocation(line: 3644, column: 8, scope: !4776)
!4807 = !DILocation(line: 3645, column: 6, scope: !4795)
!4808 = !DILocation(line: 3651, column: 8, scope: !4782)
!4809 = !DILocation(line: 3651, column: 8, scope: !4776)
!4810 = !DILocation(line: 3653, column: 8, scope: !4781)
!4811 = !DILocation(line: 3653, column: 13, scope: !4781)
!4812 = !DILocation(line: 3656, column: 12, scope: !4781)
!4813 = !DILocation(line: 3659, column: 3, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 3656, column: 12)
!4815 = !DILocation(line: 3666, column: 8, scope: !4781)
!4816 = !DILocation(line: 3667, column: 6, scope: !4782)
!4817 = !DILocation(line: 3667, column: 6, scope: !4781)
!4818 = !DILocation(line: 3670, column: 18, scope: !4776)
!4819 = !DILocation(line: 3670, column: 4, scope: !4776)
!4820 = !DILocation(line: 3673, column: 8, scope: !4776)
!4821 = !DILocation(line: 3675, column: 8, scope: !4785)
!4822 = !DILocation(line: 3675, column: 13, scope: !4785)
!4823 = !DILocation(line: 3676, column: 12, scope: !4785)
!4824 = !DILocation(line: 3680, column: 3, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 3680, column: 3)
!4826 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 3676, column: 12)
!4827 = !DILocation(line: 3684, column: 8, scope: !4785)
!4828 = !DILocation(line: 3685, column: 6, scope: !4786)
!4829 = !DILocation(line: 3685, column: 6, scope: !4785)
!4830 = !DILocation(line: 3687, column: 15, scope: !4778)
!4831 = distinct !{!4831, !4799, !4832}
!4832 = !DILocation(line: 3688, column: 5, scope: !4767)
!4833 = !DILocation(line: 3689, column: 1, scope: !4767)
!4834 = !DILocation(line: 3637, column: 19, scope: !4776)
!4835 = !DILocation(line: 3642, column: 8, scope: !4793)
!4836 = !DILocation(line: 3642, column: 25, scope: !4793)
!4837 = !DILocation(line: 3642, column: 46, scope: !4793)
!4838 = !DILocation(line: 3643, column: 6, scope: !4793)
!4839 = !DILocation(line: 3662, column: 5, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 3662, column: 5)
!4841 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 3661, column: 3)
!4842 = !DILocation(line: 3682, column: 3, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 3682, column: 3)
!4844 = distinct !DISubprogram(name: "dbxout_function_end", scope: !3, file: !3, line: 915, type: !1792, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4845)
!4845 = !{!4846, !4847, !4848}
!4846 = !DILocalVariable(name: "decl", arg: 1, scope: !4844, file: !3, line: 915, type: !550)
!4847 = !DILocalVariable(name: "lscope_label_name", scope: !4844, file: !3, line: 917, type: !1695)
!4848 = !DILocalVariable(name: "begin_label", scope: !4849, file: !3, line: 950, type: !1909)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 949, column: 5)
!4850 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 939, column: 7)
!4851 = !DILocation(line: 0, scope: !4844)
!4852 = !DILocation(line: 917, column: 3, scope: !4844)
!4853 = !DILocation(line: 917, column: 8, scope: !4844)
!4854 = !DILocation(line: 921, column: 40, scope: !4844)
!4855 = !DILocation(line: 921, column: 22, scope: !4844)
!4856 = !DILocation(line: 921, column: 3, scope: !4844)
!4857 = !DILocation(line: 926, column: 3, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 926, column: 3)
!4859 = !DILocation(line: 927, column: 19, scope: !4844)
!4860 = !DILocation(line: 927, column: 35, scope: !4844)
!4861 = !DILocation(line: 927, column: 59, scope: !4844)
!4862 = !DILocation(line: 927, column: 3, scope: !4844)
!4863 = !DILocation(line: 932, column: 8, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 932, column: 7)
!4865 = !DILocation(line: 934, column: 19, scope: !4864)
!4866 = !DILocation(line: 934, column: 11, scope: !4864)
!4867 = !DILocation(line: 934, column: 7, scope: !4864)
!4868 = !DILocation(line: 939, column: 7, scope: !4850)
!4869 = !DILocation(line: 939, column: 7, scope: !4844)
!4870 = !DILocation(line: 941, column: 7, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 940, column: 5)
!4872 = !DILocation(line: 942, column: 55, scope: !4871)
!4873 = !DILocation(line: 943, column: 27, scope: !4871)
!4874 = !DILocation(line: 942, column: 7, scope: !4871)
!4875 = !DILocation(line: 944, column: 7, scope: !4871)
!4876 = !DILocation(line: 945, column: 55, scope: !4871)
!4877 = !DILocation(line: 946, column: 27, scope: !4871)
!4878 = !DILocation(line: 945, column: 7, scope: !4871)
!4879 = !DILocation(line: 947, column: 5, scope: !4871)
!4880 = !DILocation(line: 950, column: 7, scope: !4849)
!4881 = !DILocation(line: 950, column: 12, scope: !4849)
!4882 = !DILocation(line: 952, column: 7, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 952, column: 7)
!4884 = !DILocation(line: 953, column: 7, scope: !4849)
!4885 = !DILocation(line: 954, column: 7, scope: !4849)
!4886 = !DILocation(line: 955, column: 5, scope: !4850)
!4887 = !DILocation(line: 957, column: 31, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 957, column: 7)
!4889 = !DILocation(line: 957, column: 7, scope: !4844)
!4890 = !DILocation(line: 958, column: 5, scope: !4888)
!4891 = !DILocation(line: 959, column: 1, scope: !4844)
!4892 = distinct !DISubprogram(name: "dbx_output_lbrac", scope: !3, file: !3, line: 3583, type: !2628, scopeLine: 3585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4893)
!4893 = !{!4894, !4895}
!4894 = !DILocalVariable(name: "label", arg: 1, scope: !4892, file: !3, line: 3583, type: !548)
!4895 = !DILocalVariable(name: "begin_label", arg: 2, scope: !4892, file: !3, line: 3584, type: !548)
!4896 = !DILocation(line: 0, scope: !4892)
!4897 = !DILocation(line: 3586, column: 3, scope: !4892)
!4898 = !DILocation(line: 3588, column: 5, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 3587, column: 7)
!4900 = !DILocation(line: 3591, column: 1, scope: !4892)
!4901 = distinct !DISubprogram(name: "dbx_output_rbrac", scope: !3, file: !3, line: 3597, type: !2628, scopeLine: 3599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4902)
!4902 = !{!4903, !4904}
!4903 = !DILocalVariable(name: "label", arg: 1, scope: !4901, file: !3, line: 3597, type: !548)
!4904 = !DILocalVariable(name: "begin_label", arg: 2, scope: !4901, file: !3, line: 3598, type: !548)
!4905 = !DILocation(line: 0, scope: !4901)
!4906 = !DILocation(line: 3600, column: 3, scope: !4901)
!4907 = !DILocation(line: 3602, column: 5, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 3601, column: 7)
!4909 = !DILocation(line: 3605, column: 1, scope: !4901)
!4910 = distinct !DISubprogram(name: "emit_pending_bincls", scope: !3, file: !3, line: 1134, type: !1759, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4911)
!4911 = !{!4912}
!4912 = !DILocalVariable(name: "f", scope: !4910, file: !3, line: 1136, type: !1629)
!4913 = !DILocation(line: 1139, column: 3, scope: !4910)
!4914 = !DILocation(line: 0, scope: !4910)
!4915 = !DILocation(line: 1139, column: 13, scope: !4910)
!4916 = !DILocation(line: 1139, column: 26, scope: !4910)
!4917 = !DILocation(line: 1140, column: 12, scope: !4910)
!4918 = distinct !{!4918, !4913, !4917}
!4919 = !DILocation(line: 1145, column: 3, scope: !4910)
!4920 = !DILocation(line: 1147, column: 14, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1147, column: 11)
!4922 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1146, column: 5)
!4923 = !DILocation(line: 1147, column: 27, scope: !4921)
!4924 = !DILocation(line: 1147, column: 11, scope: !4922)
!4925 = !DILocation(line: 1149, column: 31, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 1148, column: 9)
!4927 = !DILocation(line: 1149, column: 11, scope: !4926)
!4928 = !DILocation(line: 1152, column: 44, scope: !4926)
!4929 = !DILocation(line: 1152, column: 14, scope: !4926)
!4930 = !DILocation(line: 1152, column: 26, scope: !4926)
!4931 = !DILocation(line: 1153, column: 27, scope: !4926)
!4932 = !DILocation(line: 1154, column: 9, scope: !4926)
!4933 = !DILocation(line: 1155, column: 16, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1155, column: 11)
!4935 = !DILocation(line: 1155, column: 13, scope: !4934)
!4936 = !DILocation(line: 1155, column: 11, scope: !4922)
!4937 = distinct !{!4937, !4919, !4938}
!4938 = !DILocation(line: 1158, column: 5, scope: !4910)
!4939 = !DILocation(line: 1161, column: 18, scope: !4910)
!4940 = !DILocation(line: 1162, column: 1, scope: !4910)
!4941 = distinct !DISubprogram(name: "emit_bincl_stab", scope: !3, file: !3, line: 1116, type: !1690, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4942)
!4942 = !{!4943}
!4943 = !DILocalVariable(name: "name", arg: 1, scope: !4941, file: !3, line: 1116, type: !548)
!4944 = !DILocation(line: 0, scope: !4941)
!4945 = !DILocation(line: 1118, column: 3, scope: !4941)
!4946 = !DILocation(line: 1119, column: 3, scope: !4941)
!4947 = !DILocation(line: 1120, column: 1, scope: !4941)
!4948 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !151, file: !151, line: 184, type: !4949, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4951)
!4949 = !DISubroutineType(types: !4950)
!4950 = !{!1638, !543}
!4951 = !{!4952}
!4952 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4948, file: !151, line: 184, type: !543)
!4953 = !DILocation(line: 0, scope: !4948)
!4954 = !DILocation(line: 184, column: 1, scope: !4948)
!4955 = distinct !DISubprogram(name: "output_used_types_helper", scope: !3, file: !3, line: 2435, type: !4956, scopeLine: 2436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4958)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!543, !1143, !547}
!4958 = !{!4959, !4960, !4961, !4962}
!4959 = !DILocalVariable(name: "slot", arg: 1, scope: !4955, file: !3, line: 2435, type: !1143)
!4960 = !DILocalVariable(name: "data", arg: 2, scope: !4955, file: !3, line: 2435, type: !547)
!4961 = !DILocalVariable(name: "type", scope: !4955, file: !3, line: 2437, type: !550)
!4962 = !DILocalVariable(name: "types_p", scope: !4955, file: !3, line: 2438, type: !1643)
!4963 = !DILocation(line: 0, scope: !4955)
!4964 = !DILocation(line: 2437, column: 22, scope: !4955)
!4965 = !DILocation(line: 2438, column: 31, scope: !4955)
!4966 = !DILocation(line: 2440, column: 8, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2440, column: 7)
!4968 = !DILocation(line: 2440, column: 25, scope: !4967)
!4969 = !DILocation(line: 2441, column: 8, scope: !4967)
!4970 = !DILocation(line: 2441, column: 28, scope: !4967)
!4971 = !DILocation(line: 2442, column: 8, scope: !4967)
!4972 = !DILocation(line: 2442, column: 28, scope: !4967)
!4973 = !DILocation(line: 2443, column: 8, scope: !4967)
!4974 = !DILocation(line: 2443, column: 28, scope: !4967)
!4975 = !DILocation(line: 2444, column: 7, scope: !4967)
!4976 = !DILocation(line: 2444, column: 10, scope: !4967)
!4977 = !DILocation(line: 2445, column: 7, scope: !4967)
!4978 = !DILocation(line: 2445, column: 10, scope: !4967)
!4979 = !DILocation(line: 2446, column: 7, scope: !4967)
!4980 = !DILocation(line: 2446, column: 12, scope: !4967)
!4981 = !DILocation(line: 2440, column: 7, scope: !4955)
!4982 = !DILocation(line: 2447, column: 5, scope: !4967)
!4983 = !DILocation(line: 2448, column: 12, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2448, column: 12)
!4985 = !DILocation(line: 2449, column: 5, scope: !4984)
!4986 = !DILocation(line: 2449, column: 8, scope: !4984)
!4987 = !DILocation(line: 2449, column: 37, scope: !4984)
!4988 = !DILocation(line: 2448, column: 12, scope: !4967)
!4989 = !DILocation(line: 2450, column: 5, scope: !4984)
!4990 = !DILocation(line: 2452, column: 3, scope: !4955)
!4991 = distinct !DISubprogram(name: "VEC_tree_base_address", scope: !151, file: !151, line: 182, type: !4992, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4995)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{!1338, !4994}
!4994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!4995 = !{!4996}
!4996 = !DILocalVariable(name: "vec_", arg: 1, scope: !4991, file: !151, line: 182, type: !4994)
!4997 = !DILocation(line: 0, scope: !4991)
!4998 = !DILocation(line: 182, column: 1, scope: !4991)
!4999 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !151, file: !151, line: 182, type: !5000, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5004)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{!7, !5002}
!5002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5003, size: 64)
!5003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!5004 = !{!5005}
!5005 = !DILocalVariable(name: "vec_", arg: 1, scope: !4999, file: !151, line: 182, type: !5002)
!5006 = !DILocation(line: 0, scope: !4999)
!5007 = !DILocation(line: 182, column: 1, scope: !4999)
!5008 = distinct !DISubprogram(name: "output_types_sort", scope: !3, file: !3, line: 2460, type: !1135, scopeLine: 2461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5009)
!5009 = !{!5010, !5011, !5012, !5013}
!5010 = !DILocalVariable(name: "pa", arg: 1, scope: !5008, file: !3, line: 2460, type: !969)
!5011 = !DILocalVariable(name: "pb", arg: 2, scope: !5008, file: !3, line: 2460, type: !969)
!5012 = !DILocalVariable(name: "lhs", scope: !5008, file: !3, line: 2462, type: !1645)
!5013 = !DILocalVariable(name: "rhs", scope: !5008, file: !3, line: 2463, type: !1645)
!5014 = !DILocation(line: 0, scope: !5008)
!5015 = !DILocation(line: 2462, column: 22, scope: !5008)
!5016 = !DILocation(line: 2462, column: 20, scope: !5008)
!5017 = !DILocation(line: 2463, column: 22, scope: !5008)
!5018 = !DILocation(line: 2463, column: 20, scope: !5008)
!5019 = !DILocation(line: 2465, column: 7, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 2465, column: 7)
!5021 = !DILocation(line: 0, scope: !5020)
!5022 = !DILocation(line: 2465, column: 7, scope: !5008)
!5023 = !DILocation(line: 2467, column: 11, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 2466, column: 5)
!5025 = !DILocation(line: 2468, column: 9, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 2467, column: 11)
!5027 = !DILocation(line: 2468, column: 26, scope: !5026)
!5028 = !DILocation(line: 2468, column: 24, scope: !5026)
!5029 = !DILocation(line: 2468, column: 2, scope: !5026)
!5030 = !DILocation(line: 2474, column: 11, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 2473, column: 5)
!5032 = !DILocation(line: 2477, column: 9, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 2474, column: 11)
!5034 = !DILocation(line: 2477, column: 26, scope: !5033)
!5035 = !DILocation(line: 2477, column: 24, scope: !5033)
!5036 = !DILocation(line: 2477, column: 2, scope: !5033)
!5037 = !DILocation(line: 2479, column: 1, scope: !5008)
!5038 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !151, file: !151, line: 182, type: !5039, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5041)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!543, !5002, !7, !1338}
!5041 = !{!5042, !5043, !5044}
!5042 = !DILocalVariable(name: "vec_", arg: 1, scope: !5038, file: !151, line: 182, type: !5002)
!5043 = !DILocalVariable(name: "ix_", arg: 2, scope: !5038, file: !151, line: 182, type: !7)
!5044 = !DILocalVariable(name: "ptr", arg: 3, scope: !5038, file: !151, line: 182, type: !1338)
!5045 = !DILocation(line: 0, scope: !5038)
!5046 = !DILocation(line: 182, column: 1, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5038, file: !151, line: 182, column: 1)
!5048 = !DILocation(line: 182, column: 1, scope: !5038)
!5049 = !DILocation(line: 182, column: 1, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5047, file: !151, line: 182, column: 1)
!5051 = !DILocation(line: 182, column: 1, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5047, file: !151, line: 182, column: 1)
!5053 = !DILocation(line: 0, scope: !5047)
!5054 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !151, file: !151, line: 184, type: !5055, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5057)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{null, !1643}
!5057 = !{!5058}
!5058 = !DILocalVariable(name: "vec_", arg: 1, scope: !5054, file: !151, line: 184, type: !1643)
!5059 = !DILocation(line: 0, scope: !5054)
!5060 = !DILocation(line: 184, column: 1, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5054, file: !151, line: 184, column: 1)
!5062 = !DILocation(line: 184, column: 1, scope: !5054)
!5063 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !151, file: !151, line: 182, type: !5064, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!1338, !4994, !550}
!5066 = !{!5067, !5068, !5069}
!5067 = !DILocalVariable(name: "vec_", arg: 1, scope: !5063, file: !151, line: 182, type: !4994)
!5068 = !DILocalVariable(name: "obj_", arg: 2, scope: !5063, file: !151, line: 182, type: !550)
!5069 = !DILocalVariable(name: "slot_", scope: !5063, file: !151, line: 182, type: !1338)
!5070 = !DILocation(line: 0, scope: !5063)
!5071 = !DILocation(line: 182, column: 1, scope: !5063)
!5072 = distinct !DISubprogram(name: "dbxout_type_index", scope: !3, file: !3, line: 1391, type: !1792, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5073)
!5073 = !{!5074, !5075}
!5074 = !DILocalVariable(name: "type", arg: 1, scope: !5072, file: !3, line: 1391, type: !550)
!5075 = !DILocalVariable(name: "t", scope: !5072, file: !3, line: 1396, type: !1620)
!5076 = !DILocation(line: 0, scope: !5072)
!5077 = !DILocation(line: 1396, column: 25, scope: !5072)
!5078 = !DILocation(line: 1396, column: 33, scope: !5072)
!5079 = !DILocation(line: 1397, column: 3, scope: !5072)
!5080 = !DILocation(line: 1398, column: 17, scope: !5072)
!5081 = !DILocation(line: 1398, column: 14, scope: !5072)
!5082 = !DILocation(line: 1398, column: 3, scope: !5072)
!5083 = !DILocation(line: 1399, column: 3, scope: !5072)
!5084 = !DILocation(line: 1400, column: 17, scope: !5072)
!5085 = !DILocation(line: 1400, column: 14, scope: !5072)
!5086 = !DILocation(line: 1400, column: 3, scope: !5072)
!5087 = !DILocation(line: 1401, column: 3, scope: !5072)
!5088 = !DILocation(line: 1403, column: 1, scope: !5072)
!5089 = distinct !DISubprogram(name: "dbxout_range_type", scope: !3, file: !3, line: 1608, type: !5090, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5092)
!5090 = !DISubroutineType(types: !5091)
!5091 = !{null, !550, !550, !550}
!5092 = !{!5093, !5094, !5095}
!5093 = !DILocalVariable(name: "type", arg: 1, scope: !5089, file: !3, line: 1608, type: !550)
!5094 = !DILocalVariable(name: "low", arg: 2, scope: !5089, file: !3, line: 1608, type: !550)
!5095 = !DILocalVariable(name: "high", arg: 3, scope: !5089, file: !3, line: 1608, type: !550)
!5096 = !DILocation(line: 0, scope: !5089)
!5097 = !DILocation(line: 1610, column: 3, scope: !5089)
!5098 = !DILocation(line: 1611, column: 7, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 1611, column: 7)
!5100 = !DILocation(line: 1611, column: 7, scope: !5089)
!5101 = !DILocation(line: 1612, column: 5, scope: !5099)
!5102 = !DILocation(line: 1613, column: 12, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1613, column: 12)
!5104 = !DILocation(line: 1613, column: 29, scope: !5103)
!5105 = !DILocation(line: 1613, column: 12, scope: !5099)
!5106 = !DILocation(line: 1614, column: 5, scope: !5103)
!5107 = !DILocation(line: 1629, column: 11, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 1629, column: 11)
!5109 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1616, column: 5)
!5110 = !DILocation(line: 1629, column: 38, scope: !5108)
!5111 = !DILocation(line: 1629, column: 11, scope: !5109)
!5112 = !DILocation(line: 1630, column: 2, scope: !5108)
!5113 = !DILocation(line: 1632, column: 21, scope: !5108)
!5114 = !DILocation(line: 1632, column: 2, scope: !5108)
!5115 = !DILocation(line: 1635, column: 3, scope: !5089)
!5116 = !DILocation(line: 1636, column: 7, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 1636, column: 7)
!5118 = !DILocation(line: 1636, column: 11, scope: !5117)
!5119 = !DILocation(line: 1636, column: 14, scope: !5117)
!5120 = !DILocation(line: 1636, column: 7, scope: !5089)
!5121 = !DILocation(line: 1638, column: 11, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 1638, column: 11)
!5123 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 1637, column: 5)
!5124 = !DILocation(line: 1638, column: 11, scope: !5123)
!5125 = !DILocation(line: 1639, column: 9, scope: !5122)
!5126 = !DILocation(line: 1641, column: 20, scope: !5122)
!5127 = !DILocation(line: 1641, column: 9, scope: !5122)
!5128 = !DILocation(line: 1644, column: 5, scope: !5117)
!5129 = !DILocation(line: 1646, column: 3, scope: !5089)
!5130 = !DILocation(line: 1647, column: 7, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 1647, column: 7)
!5132 = !DILocation(line: 1647, column: 12, scope: !5131)
!5133 = !DILocation(line: 1647, column: 15, scope: !5131)
!5134 = !DILocation(line: 1647, column: 7, scope: !5089)
!5135 = !DILocation(line: 1649, column: 11, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1649, column: 11)
!5137 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1648, column: 5)
!5138 = !DILocation(line: 1649, column: 11, scope: !5137)
!5139 = !DILocation(line: 1650, column: 9, scope: !5136)
!5140 = !DILocation(line: 1652, column: 20, scope: !5136)
!5141 = !DILocation(line: 1652, column: 9, scope: !5136)
!5142 = !DILocation(line: 1653, column: 7, scope: !5137)
!5143 = !DILocation(line: 1654, column: 5, scope: !5137)
!5144 = !DILocation(line: 1656, column: 5, scope: !5131)
!5145 = !DILocation(line: 1657, column: 1, scope: !5089)
!5146 = distinct !DISubprogram(name: "print_int_cst_bounds_in_octal_p", scope: !3, file: !3, line: 2288, type: !5147, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5149)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{!542, !550, !550, !550}
!5149 = !{!5150, !5151, !5152}
!5150 = !DILocalVariable(name: "type", arg: 1, scope: !5146, file: !3, line: 2288, type: !550)
!5151 = !DILocalVariable(name: "low", arg: 2, scope: !5146, file: !3, line: 2288, type: !550)
!5152 = !DILocalVariable(name: "high", arg: 3, scope: !5146, file: !3, line: 2288, type: !550)
!5153 = !DILocation(line: 0, scope: !5146)
!5154 = !DILocation(line: 2301, column: 7, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 2301, column: 7)
!5156 = !DILocation(line: 2302, column: 10, scope: !5155)
!5157 = !DILocation(line: 2302, column: 7, scope: !5155)
!5158 = !DILocation(line: 2302, column: 17, scope: !5155)
!5159 = !DILocation(line: 2302, column: 33, scope: !5155)
!5160 = !DILocation(line: 2303, column: 10, scope: !5155)
!5161 = !DILocation(line: 2303, column: 7, scope: !5155)
!5162 = !DILocation(line: 2303, column: 18, scope: !5155)
!5163 = !DILocation(line: 2303, column: 35, scope: !5155)
!5164 = !DILocation(line: 2304, column: 7, scope: !5155)
!5165 = !DILocation(line: 2304, column: 11, scope: !5155)
!5166 = !DILocation(line: 2304, column: 35, scope: !5155)
!5167 = !DILocation(line: 2304, column: 33, scope: !5155)
!5168 = !DILocation(line: 2305, column: 4, scope: !5155)
!5169 = !DILocation(line: 2305, column: 31, scope: !5155)
!5170 = !DILocation(line: 2306, column: 8, scope: !5155)
!5171 = !DILocation(line: 2306, column: 11, scope: !5155)
!5172 = !DILocation(line: 2307, column: 4, scope: !5155)
!5173 = !DILocation(line: 2307, column: 29, scope: !5155)
!5174 = !DILocation(line: 2308, column: 4, scope: !5155)
!5175 = !DILocation(line: 2308, column: 30, scope: !5155)
!5176 = !DILocation(line: 2309, column: 8, scope: !5155)
!5177 = !DILocation(line: 2309, column: 11, scope: !5155)
!5178 = !DILocation(line: 2301, column: 7, scope: !5146)
!5179 = !DILocation(line: 2312, column: 5, scope: !5155)
!5180 = !DILocation(line: 0, scope: !5155)
!5181 = !DILocation(line: 2313, column: 1, scope: !5146)
!5182 = distinct !DISubprogram(name: "stabstr_O", scope: !3, file: !3, line: 697, type: !1792, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5183)
!5183 = !{!5184, !5185, !5186, !5187, !5191, !5192, !5195, !5198, !5201, !5202, !5206, !5209, !5210, !5212, !5213, !5214}
!5184 = !DILocalVariable(name: "cst", arg: 1, scope: !5182, file: !3, line: 697, type: !550)
!5185 = !DILocalVariable(name: "high", scope: !5182, file: !3, line: 699, type: !604)
!5186 = !DILocalVariable(name: "low", scope: !5182, file: !3, line: 700, type: !604)
!5187 = !DILocalVariable(name: "buf", scope: !5182, file: !3, line: 702, type: !5188)
!5188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 1024, elements: !5189)
!5189 = !{!5190}
!5190 = !DISubrange(count: 128)
!5191 = !DILocalVariable(name: "p", scope: !5182, file: !3, line: 703, type: !545)
!5192 = !DILocalVariable(name: "width", scope: !5193, file: !3, line: 709, type: !5194)
!5193 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 708, column: 3)
!5194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5195 = !DILocalVariable(name: "digit", scope: !5196, file: !3, line: 730, type: !543)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 730, column: 5)
!5197 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 729, column: 7)
!5198 = !DILocalVariable(name: "n_digits", scope: !5199, file: !3, line: 736, type: !5200)
!5199 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 732, column: 5)
!5200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!5201 = !DILocalVariable(name: "i", scope: !5199, file: !3, line: 737, type: !543)
!5202 = !DILocalVariable(name: "digit", scope: !5203, file: !3, line: 741, type: !7)
!5203 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 740, column: 2)
!5204 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 739, column: 7)
!5205 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 739, column: 7)
!5206 = !DILocalVariable(name: "n_leftover_bits", scope: !5207, file: !3, line: 752, type: !5200)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 751, column: 2)
!5208 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 750, column: 11)
!5209 = !DILocalVariable(name: "n_bits_from_high", scope: !5207, file: !3, line: 753, type: !5200)
!5210 = !DILocalVariable(name: "low_mask", scope: !5207, file: !3, line: 756, type: !5211)
!5211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !604)
!5212 = !DILocalVariable(name: "high_mask", scope: !5207, file: !3, line: 758, type: !5211)
!5213 = !DILocalVariable(name: "digit", scope: !5207, file: !3, line: 760, type: !7)
!5214 = !DILocalVariable(name: "digit", scope: !5215, file: !3, line: 777, type: !543)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 777, column: 2)
!5216 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 776, column: 11)
!5217 = !DILocation(line: 0, scope: !5182)
!5218 = !DILocation(line: 699, column: 33, scope: !5182)
!5219 = !DILocation(line: 700, column: 32, scope: !5182)
!5220 = !DILocation(line: 702, column: 3, scope: !5182)
!5221 = !DILocation(line: 702, column: 8, scope: !5182)
!5222 = !DILocation(line: 703, column: 17, scope: !5182)
!5223 = !DILocation(line: 709, column: 32, scope: !5193)
!5224 = !DILocation(line: 0, scope: !5193)
!5225 = !DILocation(line: 710, column: 15, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 710, column: 9)
!5227 = !DILocation(line: 710, column: 9, scope: !5193)
!5228 = !DILocation(line: 712, column: 20, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 712, column: 14)
!5230 = !DILocation(line: 712, column: 14, scope: !5226)
!5231 = !DILocation(line: 713, column: 45, scope: !5229)
!5232 = !DILocation(line: 713, column: 35, scope: !5229)
!5233 = !DILocation(line: 713, column: 72, scope: !5229)
!5234 = !DILocation(line: 713, column: 12, scope: !5229)
!5235 = !DILocation(line: 713, column: 7, scope: !5229)
!5236 = !DILocation(line: 714, column: 20, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 714, column: 14)
!5238 = !DILocation(line: 714, column: 14, scope: !5229)
!5239 = !DILocation(line: 717, column: 44, scope: !5237)
!5240 = !DILocation(line: 717, column: 54, scope: !5237)
!5241 = !DILocation(line: 717, column: 21, scope: !5237)
!5242 = !DILocation(line: 700, column: 26, scope: !5182)
!5243 = !DILocation(line: 721, column: 3, scope: !5182)
!5244 = !DILocation(line: 725, column: 17, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 725, column: 7)
!5246 = !DILocation(line: 729, column: 12, scope: !5197)
!5247 = !DILocation(line: 729, column: 7, scope: !5182)
!5248 = !DILocation(line: 739, column: 7, scope: !5205)
!5249 = !DILocation(line: 730, column: 5, scope: !5197)
!5250 = !DILocation(line: 730, column: 5, scope: !5196)
!5251 = distinct !{!5251, !5249, !5249}
!5252 = !DILocation(line: 0, scope: !5205)
!5253 = !DILocation(line: 0, scope: !5199)
!5254 = !DILocation(line: 739, column: 21, scope: !5204)
!5255 = !DILocation(line: 741, column: 25, scope: !5203)
!5256 = !DILocation(line: 742, column: 8, scope: !5203)
!5257 = !DILocation(line: 743, column: 15, scope: !5203)
!5258 = !DILocation(line: 743, column: 5, scope: !5203)
!5259 = !DILocation(line: 743, column: 9, scope: !5203)
!5260 = !DILocation(line: 739, column: 35, scope: !5204)
!5261 = !DILocation(line: 739, column: 7, scope: !5204)
!5262 = distinct !{!5262, !5248, !5263}
!5263 = !DILocation(line: 744, column: 2, scope: !5205)
!5264 = !DILocation(line: 0, scope: !5207)
!5265 = !DILocation(line: 764, column: 4, scope: !5207)
!5266 = !DILocation(line: 766, column: 39, scope: !5207)
!5267 = !DILocation(line: 766, column: 17, scope: !5207)
!5268 = !DILocation(line: 766, column: 12, scope: !5207)
!5269 = !DILocation(line: 767, column: 9, scope: !5207)
!5270 = !DILocation(line: 769, column: 15, scope: !5207)
!5271 = !DILocation(line: 769, column: 5, scope: !5207)
!5272 = !DILocation(line: 769, column: 9, scope: !5207)
!5273 = !DILocation(line: 776, column: 11, scope: !5216)
!5274 = !DILocation(line: 776, column: 11, scope: !5199)
!5275 = !DILocation(line: 777, column: 2, scope: !5216)
!5276 = !DILocation(line: 777, column: 2, scope: !5215)
!5277 = distinct !{!5277, !5275, !5275}
!5278 = !DILocation(line: 780, column: 3, scope: !5182)
!5279 = !DILocation(line: 0, scope: !5197)
!5280 = !DILocation(line: 781, column: 1, scope: !5182)
!5281 = distinct !DISubprogram(name: "dbxout_type_name", scope: !3, file: !3, line: 2320, type: !1792, scopeLine: 2321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5282)
!5282 = !{!5283, !5284}
!5283 = !DILocalVariable(name: "type", arg: 1, scope: !5281, file: !3, line: 2320, type: !550)
!5284 = !DILocalVariable(name: "t", scope: !5281, file: !3, line: 2322, type: !550)
!5285 = !DILocation(line: 0, scope: !5281)
!5286 = !DILocation(line: 2322, column: 12, scope: !5281)
!5287 = !DILocation(line: 2324, column: 3, scope: !5281)
!5288 = !DILocation(line: 2325, column: 11, scope: !5281)
!5289 = !DILocation(line: 2325, column: 3, scope: !5281)
!5290 = !DILocation(line: 2330, column: 11, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 2326, column: 5)
!5292 = !DILocation(line: 2331, column: 7, scope: !5291)
!5293 = !DILocation(line: 2333, column: 7, scope: !5291)
!5294 = !DILocation(line: 2334, column: 5, scope: !5291)
!5295 = !DILocation(line: 2336, column: 3, scope: !5281)
!5296 = !DILocation(line: 2337, column: 1, scope: !5281)
!5297 = distinct !DISubprogram(name: "stabstr_U", scope: !3, file: !3, line: 680, type: !5298, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5300)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{null, !604}
!5300 = !{!5301, !5302, !5303, !5304}
!5301 = !DILocalVariable(name: "num", arg: 1, scope: !5297, file: !3, line: 680, type: !604)
!5302 = !DILocalVariable(name: "buf", scope: !5297, file: !3, line: 682, type: !2573)
!5303 = !DILocalVariable(name: "p", scope: !5297, file: !3, line: 683, type: !545)
!5304 = !DILocalVariable(name: "digit", scope: !5305, file: !3, line: 689, type: !543)
!5305 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 689, column: 3)
!5306 = !DILocation(line: 0, scope: !5297)
!5307 = !DILocation(line: 682, column: 3, scope: !5297)
!5308 = !DILocation(line: 682, column: 8, scope: !5297)
!5309 = !DILocation(line: 684, column: 11, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 684, column: 7)
!5311 = !DILocation(line: 684, column: 7, scope: !5297)
!5312 = !DILocation(line: 683, column: 17, scope: !5297)
!5313 = !DILocation(line: 689, column: 3, scope: !5297)
!5314 = !DILocation(line: 686, column: 7, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 685, column: 5)
!5316 = !DILocation(line: 687, column: 7, scope: !5315)
!5317 = !DILocation(line: 689, column: 3, scope: !5305)
!5318 = distinct !{!5318, !5313, !5313}
!5319 = !DILocation(line: 690, column: 3, scope: !5297)
!5320 = !DILocation(line: 691, column: 1, scope: !5297)
!5321 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !151, file: !151, line: 182, type: !5322, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5324)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!550, !5002, !7}
!5324 = !{!5325, !5326}
!5325 = !DILocalVariable(name: "vec_", arg: 1, scope: !5321, file: !151, line: 182, type: !5002)
!5326 = !DILocalVariable(name: "ix_", arg: 2, scope: !5321, file: !151, line: 182, type: !7)
!5327 = !DILocation(line: 0, scope: !5321)
!5328 = !DILocation(line: 182, column: 1, scope: !5321)
!5329 = distinct !DISubprogram(name: "dbxout_type_fields", scope: !3, file: !3, line: 1417, type: !1792, scopeLine: 1418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5330)
!5330 = !{!5331, !5332, !5333}
!5331 = !DILocalVariable(name: "type", arg: 1, scope: !5329, file: !3, line: 1417, type: !550)
!5332 = !DILocalVariable(name: "tem", scope: !5329, file: !3, line: 1419, type: !550)
!5333 = !DILocalVariable(name: "name", scope: !5334, file: !3, line: 1469, type: !550)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1468, column: 3)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 1467, column: 12)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1466, column: 6)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1465, column: 8)
!5338 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1443, column: 2)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1442, column: 16)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 1431, column: 11)
!5341 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 1424, column: 5)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 1423, column: 3)
!5343 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1423, column: 3)
!5344 = !DILocation(line: 0, scope: !5329)
!5345 = !DILocation(line: 1423, column: 14, scope: !5343)
!5346 = !DILocation(line: 1423, column: 8, scope: !5343)
!5347 = !DILocation(line: 0, scope: !5343)
!5348 = !DILocation(line: 1423, column: 3, scope: !5343)
!5349 = !DILocation(line: 1427, column: 18, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 1427, column: 11)
!5351 = !DILocation(line: 1427, column: 15, scope: !5350)
!5352 = !DILocation(line: 1427, column: 37, scope: !5350)
!5353 = !DILocation(line: 1427, column: 53, scope: !5350)
!5354 = !DILocation(line: 1427, column: 11, scope: !5341)
!5355 = !DILocation(line: 1431, column: 11, scope: !5340)
!5356 = !DILocation(line: 1431, column: 27, scope: !5340)
!5357 = !DILocation(line: 1433, column: 4, scope: !5340)
!5358 = !DILocation(line: 1433, column: 7, scope: !5340)
!5359 = !DILocation(line: 1436, column: 4, scope: !5340)
!5360 = !DILocation(line: 1436, column: 24, scope: !5340)
!5361 = !DILocation(line: 1437, column: 8, scope: !5340)
!5362 = !DILocation(line: 1437, column: 29, scope: !5340)
!5363 = !DILocation(line: 1437, column: 14, scope: !5340)
!5364 = !DILocation(line: 1438, column: 5, scope: !5340)
!5365 = !DILocation(line: 1438, column: 10, scope: !5340)
!5366 = !DILocation(line: 1439, column: 5, scope: !5340)
!5367 = !DILocation(line: 1439, column: 10, scope: !5340)
!5368 = !DILocation(line: 1431, column: 11, scope: !5341)
!5369 = !DILocation(line: 1442, column: 16, scope: !5339)
!5370 = !DILocation(line: 1442, column: 32, scope: !5339)
!5371 = !DILocation(line: 1442, column: 16, scope: !5340)
!5372 = !DILocation(line: 1446, column: 15, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1446, column: 8)
!5374 = !DILocation(line: 1446, column: 12, scope: !5373)
!5375 = !DILocation(line: 1446, column: 8, scope: !5338)
!5376 = !DILocation(line: 1447, column: 6, scope: !5373)
!5377 = !DILocation(line: 1449, column: 8, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1449, column: 8)
!5379 = !DILocation(line: 1449, column: 8, scope: !5338)
!5380 = !DILocation(line: 1451, column: 4, scope: !5338)
!5381 = !DILocation(line: 1450, column: 6, scope: !5378)
!5382 = !DILocation(line: 1453, column: 8, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1453, column: 8)
!5384 = !DILocation(line: 1454, column: 8, scope: !5383)
!5385 = !DILocation(line: 1454, column: 12, scope: !5383)
!5386 = !DILocation(line: 1454, column: 31, scope: !5383)
!5387 = !DILocation(line: 1454, column: 34, scope: !5383)
!5388 = !DILocation(line: 1455, column: 5, scope: !5383)
!5389 = !DILocation(line: 1455, column: 24, scope: !5383)
!5390 = !DILocation(line: 1453, column: 8, scope: !5338)
!5391 = !DILocation(line: 1457, column: 8, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 1456, column: 6)
!5393 = !DILocation(line: 1458, column: 8, scope: !5392)
!5394 = !DILocation(line: 1459, column: 6, scope: !5392)
!5395 = !DILocation(line: 1461, column: 18, scope: !5338)
!5396 = !DILocation(line: 1461, column: 34, scope: !5338)
!5397 = !DILocation(line: 1462, column: 4, scope: !5338)
!5398 = !DILocation(line: 1462, column: 7, scope: !5338)
!5399 = !DILocation(line: 1461, column: 17, scope: !5338)
!5400 = !DILocation(line: 1461, column: 4, scope: !5338)
!5401 = !DILocation(line: 1465, column: 8, scope: !5337)
!5402 = !DILocation(line: 1465, column: 24, scope: !5337)
!5403 = !DILocation(line: 1465, column: 8, scope: !5338)
!5404 = !DILocation(line: 1467, column: 12, scope: !5335)
!5405 = !DILocation(line: 1467, column: 30, scope: !5335)
!5406 = !DILocation(line: 1467, column: 33, scope: !5335)
!5407 = !DILocation(line: 1467, column: 12, scope: !5336)
!5408 = !DILocation(line: 1469, column: 17, scope: !5334)
!5409 = !DILocation(line: 0, scope: !5334)
!5410 = !DILocation(line: 1471, column: 5, scope: !5334)
!5411 = !DILocation(line: 1472, column: 5, scope: !5334)
!5412 = !DILocation(line: 1473, column: 5, scope: !5334)
!5413 = !DILocation(line: 1474, column: 3, scope: !5334)
!5414 = !DILocation(line: 1477, column: 3, scope: !5335)
!5415 = !DILocation(line: 1481, column: 8, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1480, column: 6)
!5417 = !DILocation(line: 1482, column: 19, scope: !5416)
!5418 = !DILocation(line: 1482, column: 8, scope: !5416)
!5419 = !DILocation(line: 1483, column: 8, scope: !5416)
!5420 = !DILocation(line: 1484, column: 33, scope: !5416)
!5421 = !DILocation(line: 1484, column: 19, scope: !5416)
!5422 = !DILocation(line: 1484, column: 8, scope: !5416)
!5423 = !DILocation(line: 1485, column: 8, scope: !5416)
!5424 = !DILocation(line: 1423, column: 45, scope: !5342)
!5425 = !DILocation(line: 1423, column: 3, scope: !5342)
!5426 = distinct !{!5426, !5348, !5427}
!5427 = !DILocation(line: 1488, column: 5, scope: !5343)
!5428 = !DILocation(line: 1489, column: 1, scope: !5329)
!5429 = distinct !DISubprogram(name: "dbxout_type_methods", scope: !3, file: !3, line: 1541, type: !1792, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5430)
!5430 = !{!5431, !5432, !5433, !5434, !5435}
!5431 = !DILocalVariable(name: "type", arg: 1, scope: !5429, file: !3, line: 1541, type: !550)
!5432 = !DILocalVariable(name: "methods", scope: !5429, file: !3, line: 1544, type: !550)
!5433 = !DILocalVariable(name: "fndecl", scope: !5429, file: !3, line: 1545, type: !550)
!5434 = !DILocalVariable(name: "last", scope: !5429, file: !3, line: 1546, type: !550)
!5435 = !DILocalVariable(name: "need_prefix", scope: !5436, file: !3, line: 1560, type: !543)
!5436 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1559, column: 5)
!5437 = !DILocation(line: 0, scope: !5429)
!5438 = !DILocation(line: 1544, column: 18, scope: !5429)
!5439 = !DILocation(line: 1548, column: 15, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1548, column: 7)
!5441 = !DILocation(line: 1548, column: 7, scope: !5429)
!5442 = !DILocation(line: 1551, column: 7, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1551, column: 7)
!5444 = !DILocation(line: 1551, column: 27, scope: !5443)
!5445 = !DILocation(line: 1551, column: 7, scope: !5429)
!5446 = !DILocation(line: 1553, column: 12, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 1553, column: 12)
!5448 = !DILocation(line: 1553, column: 38, scope: !5447)
!5449 = !DILocation(line: 1553, column: 12, scope: !5443)
!5450 = !DILocation(line: 1554, column: 5, scope: !5447)
!5451 = !DILocation(line: 1556, column: 14, scope: !5447)
!5452 = !DILocation(line: 0, scope: !5443)
!5453 = !DILocation(line: 1558, column: 3, scope: !5429)
!5454 = !DILocation(line: 1552, column: 12, scope: !5443)
!5455 = !DILocation(line: 1564, column: 7, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 1564, column: 7)
!5457 = !DILocation(line: 1564, column: 17, scope: !5456)
!5458 = !DILocation(line: 1560, column: 11, scope: !5436)
!5459 = !DILocation(line: 0, scope: !5436)
!5460 = !DILocation(line: 1565, column: 5, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1564, column: 7)
!5462 = !DILocation(line: 1565, column: 12, scope: !5461)
!5463 = !DILocation(line: 1565, column: 21, scope: !5461)
!5464 = !DILocation(line: 1565, column: 34, scope: !5461)
!5465 = !DILocation(line: 1565, column: 37, scope: !5461)
!5466 = !DILocation(line: 1565, column: 59, scope: !5461)
!5467 = !DILocation(line: 1565, column: 56, scope: !5461)
!5468 = !DILocation(line: 1574, column: 8, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1574, column: 8)
!5470 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1570, column: 2)
!5471 = !DILocation(line: 1574, column: 27, scope: !5469)
!5472 = !DILocation(line: 1574, column: 8, scope: !5470)
!5473 = !DILocation(line: 1577, column: 4, scope: !5470)
!5474 = !DILocation(line: 1583, column: 8, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1583, column: 8)
!5476 = !DILocation(line: 1583, column: 32, scope: !5475)
!5477 = !DILocation(line: 1583, column: 35, scope: !5475)
!5478 = !DILocation(line: 1583, column: 8, scope: !5470)
!5479 = !DILocation(line: 1588, column: 8, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1588, column: 8)
!5481 = !DILocation(line: 1588, column: 8, scope: !5470)
!5482 = !DILocation(line: 1590, column: 8, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 1589, column: 6)
!5484 = !DILocation(line: 1591, column: 8, scope: !5483)
!5485 = !DILocation(line: 1593, column: 6, scope: !5483)
!5486 = !DILocation(line: 1595, column: 17, scope: !5470)
!5487 = !DILocation(line: 1595, column: 4, scope: !5470)
!5488 = !DILocation(line: 1596, column: 4, scope: !5470)
!5489 = !DILocation(line: 1597, column: 2, scope: !5470)
!5490 = !DILocation(line: 0, scope: !5456)
!5491 = !DILocation(line: 1566, column: 14, scope: !5461)
!5492 = !DILocation(line: 1564, column: 7, scope: !5461)
!5493 = distinct !{!5493, !5455, !5494}
!5494 = !DILocation(line: 1597, column: 2, scope: !5456)
!5495 = !DILocation(line: 1598, column: 12, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 1598, column: 11)
!5497 = !DILocation(line: 1598, column: 11, scope: !5436)
!5498 = !DILocation(line: 1599, column: 2, scope: !5496)
!5499 = distinct !{!5499, !5453, !5500}
!5500 = !DILocation(line: 1600, column: 5, scope: !5429)
!5501 = !DILocation(line: 1601, column: 1, scope: !5429)
!5502 = distinct !DISubprogram(name: "stabstr_continue", scope: !3, file: !3, line: 789, type: !1759, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!5503 = !DILocation(line: 801, column: 1, scope: !5502)
!5504 = distinct !DISubprogram(name: "dbxout_args", scope: !3, file: !3, line: 3567, type: !1792, scopeLine: 3568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5505)
!5505 = !{!5506}
!5506 = !DILocalVariable(name: "args", arg: 1, scope: !5504, file: !3, line: 3567, type: !550)
!5507 = !DILocation(line: 0, scope: !5504)
!5508 = !DILocation(line: 3569, column: 3, scope: !5504)
!5509 = !DILocation(line: 3571, column: 7, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 3570, column: 5)
!5511 = !DILocation(line: 3572, column: 20, scope: !5510)
!5512 = !DILocation(line: 3572, column: 7, scope: !5510)
!5513 = !DILocation(line: 3573, column: 14, scope: !5510)
!5514 = distinct !{!5514, !5508, !5515}
!5515 = !DILocation(line: 3574, column: 5, scope: !5504)
!5516 = !DILocation(line: 3575, column: 1, scope: !5504)
!5517 = distinct !DISubprogram(name: "dbxout_type_method_1", scope: !3, file: !3, line: 1495, type: !1792, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5518)
!5518 = !{!5519, !5520, !5521, !5522}
!5519 = !DILocalVariable(name: "decl", arg: 1, scope: !5517, file: !3, line: 1495, type: !550)
!5520 = !DILocalVariable(name: "c1", scope: !5517, file: !3, line: 1497, type: !546)
!5521 = !DILocalVariable(name: "c2", scope: !5517, file: !3, line: 1497, type: !546)
!5522 = !DILocalVariable(name: "firstarg", scope: !5523, file: !3, line: 1503, type: !550)
!5523 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1502, column: 5)
!5524 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 1499, column: 7)
!5525 = !DILocation(line: 0, scope: !5517)
!5526 = !DILocation(line: 1499, column: 7, scope: !5524)
!5527 = !DILocation(line: 1499, column: 36, scope: !5524)
!5528 = !DILocation(line: 1499, column: 7, scope: !5517)
!5529 = !DILocation(line: 1503, column: 23, scope: !5523)
!5530 = !DILocation(line: 0, scope: !5523)
!5531 = !DILocation(line: 1508, column: 11, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1508, column: 11)
!5533 = !DILocation(line: 1508, column: 11, scope: !5523)
!5534 = !DILocation(line: 1510, column: 11, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1510, column: 11)
!5536 = !DILocation(line: 1510, column: 11, scope: !5523)
!5537 = !DILocation(line: 1513, column: 11, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1513, column: 11)
!5539 = !DILocation(line: 0, scope: !5524)
!5540 = !DILocation(line: 1521, column: 3, scope: !5517)
!5541 = !DILocation(line: 1522, column: 3, scope: !5517)
!5542 = !DILocation(line: 1523, column: 3, scope: !5517)
!5543 = !DILocation(line: 1524, column: 3, scope: !5517)
!5544 = !DILocation(line: 1525, column: 3, scope: !5517)
!5545 = !DILocation(line: 1526, column: 3, scope: !5517)
!5546 = !DILocation(line: 1528, column: 7, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 1528, column: 7)
!5548 = !DILocation(line: 1528, column: 26, scope: !5547)
!5549 = !DILocation(line: 1528, column: 29, scope: !5547)
!5550 = !DILocation(line: 1528, column: 7, scope: !5517)
!5551 = !DILocation(line: 1530, column: 32, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 1529, column: 5)
!5553 = !DILocation(line: 1530, column: 18, scope: !5552)
!5554 = !DILocation(line: 1530, column: 7, scope: !5552)
!5555 = !DILocation(line: 1531, column: 7, scope: !5552)
!5556 = !DILocation(line: 1532, column: 20, scope: !5552)
!5557 = !DILocation(line: 1532, column: 7, scope: !5552)
!5558 = !DILocation(line: 1533, column: 7, scope: !5552)
!5559 = !DILocation(line: 1534, column: 5, scope: !5552)
!5560 = !DILocation(line: 1535, column: 1, scope: !5517)
!5561 = distinct !DISubprogram(name: "expand_expr", scope: !531, file: !531, line: 555, type: !5562, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5564)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!725, !550, !725, !5, !530}
!5564 = !{!5565, !5566, !5567, !5568}
!5565 = !DILocalVariable(name: "exp", arg: 1, scope: !5561, file: !531, line: 555, type: !550)
!5566 = !DILocalVariable(name: "target", arg: 2, scope: !5561, file: !531, line: 555, type: !725)
!5567 = !DILocalVariable(name: "mode", arg: 3, scope: !5561, file: !531, line: 555, type: !5)
!5568 = !DILocalVariable(name: "modifier", arg: 4, scope: !5561, file: !531, line: 556, type: !530)
!5569 = !DILocation(line: 0, scope: !5561)
!5570 = !DILocation(line: 558, column: 10, scope: !5561)
!5571 = !DILocation(line: 558, column: 3, scope: !5561)
!5572 = distinct !DISubprogram(name: "dbxout_begin_complex_stabs_noforcetext", scope: !3, file: !3, line: 634, type: !1759, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1854)
!5573 = !DILocation(line: 636, column: 24, scope: !5572)
!5574 = !DILocation(line: 636, column: 3, scope: !5572)
!5575 = !DILocation(line: 637, column: 14, scope: !5572)
!5576 = !DILocation(line: 637, column: 3, scope: !5572)
!5577 = !DILocation(line: 639, column: 1, scope: !5572)
!5578 = distinct !DISubprogram(name: "is_fortran", scope: !3, file: !3, line: 988, type: !5579, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5581)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!542}
!5581 = !{!5582}
!5582 = !DILocalVariable(name: "lang", scope: !5578, file: !3, line: 990, type: !7)
!5583 = !DILocation(line: 990, column: 24, scope: !5578)
!5584 = !DILocation(line: 0, scope: !5578)
!5585 = !DILocation(line: 992, column: 34, scope: !5578)
!5586 = !DILocation(line: 992, column: 11, scope: !5578)
!5587 = !DILocation(line: 992, column: 4, scope: !5578)
!5588 = distinct !DISubprogram(name: "gt_pch_pa_typevec", scope: !1650, file: !1650, line: 65, type: !4615, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5589)
!5589 = !{!5590, !5591, !5592, !5593, !5594}
!5590 = !DILocalVariable(name: "this_obj", arg: 1, scope: !5588, file: !1650, line: 65, type: !547)
!5591 = !DILocalVariable(name: "x_p", arg: 2, scope: !5588, file: !1650, line: 66, type: !547)
!5592 = !DILocalVariable(name: "op", arg: 3, scope: !5588, file: !1650, line: 67, type: !4617)
!5593 = !DILocalVariable(name: "cookie", arg: 4, scope: !5588, file: !1650, line: 68, type: !547)
!5594 = !DILocalVariable(name: "i0", scope: !5595, file: !1650, line: 71, type: !1145)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !1650, line: 70, column: 24)
!5596 = distinct !DILexicalBlock(scope: !5588, file: !1650, line: 70, column: 7)
!5597 = !DILocation(line: 0, scope: !5588)
!5598 = !DILocation(line: 70, column: 7, scope: !5596)
!5599 = !DILocation(line: 70, column: 15, scope: !5596)
!5600 = !DILocation(line: 70, column: 7, scope: !5588)
!5601 = !DILocation(line: 72, column: 5, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5595, file: !1650, line: 72, column: 5)
!5603 = !DILocation(line: 0, scope: !5595)
!5604 = !DILocation(line: 74, column: 28, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5595, file: !1650, line: 74, column: 9)
!5606 = !DILocation(line: 74, column: 9, scope: !5595)
!5607 = !DILocation(line: 75, column: 7, scope: !5605)
!5608 = !DILocation(line: 77, column: 1, scope: !5588)
